{
  "sha": "239ca5e497dda2c151009d664d500086a5c2173a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjM5Y2E1ZTQ5N2RkYTJjMTUxMDA5ZDY2NGQ1MDAwODZhNWMyMTczYQ==",
  "commit": {
    "author": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-11-26T12:09:01Z"
    },
    "committer": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-11-26T12:11:14Z"
    },
    "message": "gdb/aarch64: Add named flags for FPCR and FPSR registers\n\nThis patch updates FPCR (Floating-point Control Register) and FPSR\n(Floating-point Status Register) named fields in AArch64. For detailed\ndescription of named register FPCR and FPSR bit fields see [1] and [2].\n\nPlease not that bit fields FIZ, AH and NEP (bits 0, 1 and 2 respectively) in\nFPCR are defined starting from Armv8.7 architecture.\n\n[1]: https://developer.arm.com/docs/ddi0595/i/aarch64-system-registers/fpcr\n[2]: https://developer.arm.com/docs/ddi0595/i/aarch64-system-registers/fpsr\n\nExample:\n>>> info all-registers fpsr\nfpsr           0x10                [ IXC ]\n>>> info all-registers fpcr\nfpcr           0x0                 [ RMode=0 ]",
    "tree": {
      "sha": "8ca34ede4d986a81de09cb4e8a77303a3e54b87a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8ca34ede4d986a81de09cb4e8a77303a3e54b87a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/239ca5e497dda2c151009d664d500086a5c2173a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/239ca5e497dda2c151009d664d500086a5c2173a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/239ca5e497dda2c151009d664d500086a5c2173a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/239ca5e497dda2c151009d664d500086a5c2173a/comments",
  "author": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9ed0136bff648c2f32d7462d3ab9205b61778837",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ed0136bff648c2f32d7462d3ab9205b61778837",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9ed0136bff648c2f32d7462d3ab9205b61778837"
    }
  ],
  "stats": {
    "total": 112,
    "additions": 108,
    "deletions": 4
  },
  "files": [
    {
      "sha": "aa08449d100f67a3ef6ac2f4f1f536cec8df8f05",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/239ca5e497dda2c151009d664d500086a5c2173a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/239ca5e497dda2c151009d664d500086a5c2173a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=239ca5e497dda2c151009d664d500086a5c2173a",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-26  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* features/aarch64-fpu.c (create_feature_aarch64_fpu): Regenerate.\n+\t* features/aarch64-fpu.xml: Add named FPCR and FPSR register bit-fields.\n+\n 2020-11-25  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (evaluate_subexp_standard): Remove unnecessary"
    },
    {
      "sha": "5b636a5f4d20c4e9092d0f4b6762b69e0aa0cfce",
      "filename": "gdb/features/aarch64-fpu.c",
      "status": "modified",
      "additions": 31,
      "deletions": 2,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/239ca5e497dda2c151009d664d500086a5c2173a/gdb/features/aarch64-fpu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/239ca5e497dda2c151009d664d500086a5c2173a/gdb/features/aarch64-fpu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/aarch64-fpu.c?ref=239ca5e497dda2c151009d664d500086a5c2173a",
      "patch": "@@ -99,6 +99,35 @@ create_feature_aarch64_fpu (struct target_desc *result, long regnum)\n   field_type = tdesc_named_type (feature, \"vnq\");\n   tdesc_add_field (type_with_fields, \"q\", field_type);\n \n+  type_with_fields = tdesc_create_flags (feature, \"fpsr_flags\", 4);\n+  tdesc_add_flag (type_with_fields, 0, \"IOC\");\n+  tdesc_add_flag (type_with_fields, 1, \"DZC\");\n+  tdesc_add_flag (type_with_fields, 2, \"OFC\");\n+  tdesc_add_flag (type_with_fields, 3, \"UFC\");\n+  tdesc_add_flag (type_with_fields, 4, \"IXC\");\n+  tdesc_add_flag (type_with_fields, 7, \"IDC\");\n+  tdesc_add_flag (type_with_fields, 27, \"QC\");\n+  tdesc_add_flag (type_with_fields, 28, \"V\");\n+  tdesc_add_flag (type_with_fields, 29, \"C\");\n+  tdesc_add_flag (type_with_fields, 30, \"Z\");\n+  tdesc_add_flag (type_with_fields, 31, \"N\");\n+\n+  type_with_fields = tdesc_create_flags (feature, \"fpcr_flags\", 4);\n+  tdesc_add_flag (type_with_fields, 0, \"FIZ\");\n+  tdesc_add_flag (type_with_fields, 1, \"AH\");\n+  tdesc_add_flag (type_with_fields, 2, \"NEP\");\n+  tdesc_add_flag (type_with_fields, 8, \"IOE\");\n+  tdesc_add_flag (type_with_fields, 9, \"DZE\");\n+  tdesc_add_flag (type_with_fields, 10, \"OFE\");\n+  tdesc_add_flag (type_with_fields, 11, \"UFE\");\n+  tdesc_add_flag (type_with_fields, 12, \"IXE\");\n+  tdesc_add_flag (type_with_fields, 15, \"IDE\");\n+  tdesc_add_flag (type_with_fields, 19, \"FZ16\");\n+  tdesc_add_bitfield (type_with_fields, \"RMode\", 22, 23);\n+  tdesc_add_flag (type_with_fields, 24, \"FZ\");\n+  tdesc_add_flag (type_with_fields, 25, \"DN\");\n+  tdesc_add_flag (type_with_fields, 26, \"AHP\");\n+\n   regnum = 34;\n   tdesc_create_reg (feature, \"v0\", regnum++, 1, NULL, 128, \"aarch64v\");\n   tdesc_create_reg (feature, \"v1\", regnum++, 1, NULL, 128, \"aarch64v\");\n@@ -132,7 +161,7 @@ create_feature_aarch64_fpu (struct target_desc *result, long regnum)\n   tdesc_create_reg (feature, \"v29\", regnum++, 1, NULL, 128, \"aarch64v\");\n   tdesc_create_reg (feature, \"v30\", regnum++, 1, NULL, 128, \"aarch64v\");\n   tdesc_create_reg (feature, \"v31\", regnum++, 1, NULL, 128, \"aarch64v\");\n-  tdesc_create_reg (feature, \"fpsr\", regnum++, 1, NULL, 32, \"int\");\n-  tdesc_create_reg (feature, \"fpcr\", regnum++, 1, NULL, 32, \"int\");\n+  tdesc_create_reg (feature, \"fpsr\", regnum++, 1, NULL, 32, \"fpsr_flags\");\n+  tdesc_create_reg (feature, \"fpcr\", regnum++, 1, NULL, 32, \"fpcr_flags\");\n   return regnum;\n }"
    },
    {
      "sha": "3862f0c4f08f76cdf4fde34398200fdfe987f982",
      "filename": "gdb/features/aarch64-fpu.xml",
      "status": "modified",
      "additions": 72,
      "deletions": 2,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/239ca5e497dda2c151009d664d500086a5c2173a/gdb/features/aarch64-fpu.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/239ca5e497dda2c151009d664d500086a5c2173a/gdb/features/aarch64-fpu.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/aarch64-fpu.xml?ref=239ca5e497dda2c151009d664d500086a5c2173a",
      "patch": "@@ -83,6 +83,76 @@\n   <reg name=\"v29\" bitsize=\"128\" type=\"aarch64v\"/>\n   <reg name=\"v30\" bitsize=\"128\" type=\"aarch64v\"/>\n   <reg name=\"v31\" bitsize=\"128\" type=\"aarch64v\"/>\n-  <reg name=\"fpsr\" bitsize=\"32\"/>\n-  <reg name=\"fpcr\" bitsize=\"32\"/>\n+\n+  <flags id=\"fpsr_flags\" size=\"4\">\n+    <!-- Invalid Operation cumulative floating-point exception bit.  -->\n+    <field name=\"IOC\" start=\"0\" end=\"0\"/>\n+    <!-- Divide by Zero cumulative floating-point exception bit.  -->\n+    <field name=\"DZC\" start=\"1\" end=\"1\"/>\n+    <!-- Overflow cumulative floating-point exception bit.  -->\n+    <field name=\"OFC\" start=\"2\" end=\"2\"/>\n+    <!-- Underflow cumulative floating-point exception bit.  -->\n+    <field name=\"UFC\" start=\"3\" end=\"3\"/>\n+    <!-- Inexact cumulative floating-point exception bit..  -->\n+    <field name=\"IXC\" start=\"4\" end=\"4\"/>\n+    <!-- Input Denormal cumulative floating-point exception bit.  -->\n+    <field name=\"IDC\" start=\"7\" end=\"7\"/>\n+    <!-- Cumulative saturation bit, Advanced SIMD only.  -->\n+    <field name=\"QC\" start=\"27\" end=\"27\"/>\n+    <!-- When AArch32 is supported at any Exception level and AArch32\n+         floating-point is implemented: Overflow condition flag for AArch32\n+         floating-point comparison operations.  -->\n+    <field name=\"V\" start=\"28\" end=\"28\"/>\n+    <!-- When AArch32 is supported at any Exception level and AArch32\n+         floating-point is implemented:\n+         Carry condition flag for AArch32 floating-point comparison operations.\n+         -->\n+    <field name=\"C\" start=\"29\" end=\"29\"/>\n+    <!-- When AArch32 is supported at any Exception level and AArch32\n+         floating-point is implemented:\n+         Zero condition flag for AArch32 floating-point comparison operations.\n+         -->\n+    <field name=\"Z\" start=\"30\" end=\"30\"/>\n+    <!-- When AArch32 is supported at any Exception level and AArch32\n+         floating-point is implemented:\n+         Negative condition flag for AArch32 floating-point comparison\n+         operations.  -->\n+    <field name=\"N\" start=\"31\" end=\"31\"/>\n+  </flags>\n+  <reg name=\"fpsr\" bitsize=\"32\" type=\"fpsr_flags\"/>\n+\n+  <flags id=\"fpcr_flags\" size=\"4\">\n+    <!-- Flush Inputs to Zero (part of Armv8.7).  -->\n+    <field name=\"FIZ\" start=\"0\" end=\"0\"/>\n+    <!-- Alternate Handling (part of Armv8.7).  -->\n+    <field name=\"AH\" start=\"1\" end=\"1\"/>\n+    <!-- Controls how the output elements other than the lowest element of the\n+         vector are determined for Advanced SIMD scalar instructions (part of\n+         Armv8.7).  -->\n+    <field name=\"NEP\" start=\"2\" end=\"2\"/>\n+    <!-- Invalid Operation floating-point exception trap enable.  -->\n+    <field name=\"IOE\" start=\"8\" end=\"8\"/>\n+    <!-- Divide by Zero floating-point exception trap enable.  -->\n+    <field name=\"DZE\" start=\"9\" end=\"9\"/>\n+    <!-- Overflow floating-point exception trap enable.  -->\n+    <field name=\"OFE\" start=\"10\" end=\"10\"/>\n+    <!-- Underflow floating-point exception trap enable.  -->\n+    <field name=\"UFE\" start=\"11\" end=\"11\"/>\n+    <!-- Inexact floating-point exception trap enable.  -->\n+    <field name=\"IXE\" start=\"12\" end=\"12\"/>\n+    <!-- Input Denormal floating-point exception trap enable.  -->\n+    <field name=\"IDE\" start=\"15\" end=\"15\"/>\n+    <!-- Flush-to-zero mode control bit on half-precision data-processing\n+         instructions.  -->\n+    <field name=\"FZ16\" start=\"19\" end=\"19\"/>\n+    <!-- Rounding Mode control field.  -->\n+    <field name=\"RMode\" start=\"22\" end=\"23\"/>\n+    <!-- Flush-to-zero mode control bit.  -->\n+    <field name=\"FZ\" start=\"24\" end=\"24\"/>\n+    <!-- Default NaN mode control bit.  -->\n+    <field name=\"DN\" start=\"25\" end=\"25\"/>\n+    <!-- Alternative half-precision control bit.  -->\n+    <field name=\"AHP\" start=\"26\" end=\"26\"/>\n+  </flags>\n+  <reg name=\"fpcr\" bitsize=\"32\" type=\"fpcr_flags\"/>\n </feature>"
    }
  ]
}