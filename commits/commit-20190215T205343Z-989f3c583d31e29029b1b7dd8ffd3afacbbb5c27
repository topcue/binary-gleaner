{
  "sha": "989f3c583d31e29029b1b7dd8ffd3afacbbb5c27",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTg5ZjNjNTgzZDMxZTI5MDI5YjFiN2RkOGZmZDNhZmFjYmJiNWMyNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-02-05T11:11:19Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-02-15T20:53:43Z"
    },
    "message": "Minor C++-ification in ravenscar-thread.c\n\nThis changes some functions in ravenscar-thread.c to return \"bool\"\nrather than int, where appropriate, and also changes \"(void)\" to \"()\".\n\ngdb/ChangeLog\n2019-02-15  Tom Tromey  <tromey@adacore.com>\n\n\t* ravenscar-thread.c (is_ravenscar_task)\n\t(ravenscar_task_is_currently_active): Return bool.\n\t(ravenscar_update_inferior_ptid, get_running_thread_msymbol)\n\t(_initialize_ravenscar): Remove \"(void)\".\n\t(has_ravenscar_runtime, ravenscar_runtime_initialized): Likewise.\n\tReturn bool.",
    "tree": {
      "sha": "ff04665eb394a71cf4e7f7dbc6d769b52f983067",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ff04665eb394a71cf4e7f7dbc6d769b52f983067"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6cbcc006e95110b5d9168e9835e5df36782e975b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6cbcc006e95110b5d9168e9835e5df36782e975b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6cbcc006e95110b5d9168e9835e5df36782e975b"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 22,
    "deletions": 17
  },
  "files": [
    {
      "sha": "2e72ab66512c4fc66a26bdb86aceaaeed9d7c2fc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=989f3c583d31e29029b1b7dd8ffd3afacbbb5c27",
      "patch": "@@ -1,3 +1,12 @@\n+2019-02-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ravenscar-thread.c (is_ravenscar_task)\n+\t(ravenscar_task_is_currently_active): Return bool.\n+\t(ravenscar_update_inferior_ptid, get_running_thread_msymbol)\n+\t(_initialize_ravenscar): Remove \"(void)\".\n+\t(has_ravenscar_runtime, ravenscar_runtime_initialized): Likewise.\n+\tReturn bool.\n+\n 2019-02-15  Tom Tromey  <tromey@adacore.com>\n \n \t* ravenscar-thread.c (ravenscar_runtime_initializer)"
    },
    {
      "sha": "572e05db0dda631b153507657a828794e1bc98d5",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 13,
      "deletions": 17,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/989f3c583d31e29029b1b7dd8ffd3afacbbb5c27/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=989f3c583d31e29029b1b7dd8ffd3afacbbb5c27",
      "patch": "@@ -121,15 +121,11 @@ struct ravenscar_thread_target final : public target_ops\n static ravenscar_thread_target ravenscar_ops;\n \n static ptid_t ravenscar_active_task (int cpu);\n-static void ravenscar_update_inferior_ptid (void);\n-static int has_ravenscar_runtime (void);\n-static int ravenscar_runtime_initialized (void);\n-static void ravenscar_inferior_created (struct target_ops *target,\n-\t\t\t\t\tint from_tty);\n+static bool ravenscar_runtime_initialized ();\n \n-/* Return nonzero iff PTID corresponds to a ravenscar task.  */\n+/* Return true iff PTID corresponds to a ravenscar task.  */\n \n-static int\n+static bool\n is_ravenscar_task (ptid_t ptid)\n {\n   /* By construction, ravenscar tasks have their LWP set to zero.\n@@ -169,7 +165,7 @@ ravenscar_get_thread_base_cpu (ptid_t ptid)\n   return base_cpu;\n }\n \n-/* Given a ravenscar task (identified by its ptid_t PTID), return nonzero\n+/* Given a ravenscar task (identified by its ptid_t PTID), return true\n    if this task is the currently active task on the cpu that task is\n    running on.\n \n@@ -179,7 +175,7 @@ ravenscar_get_thread_base_cpu (ptid_t ptid)\n    that task's registers are in the CPU bank.  Otherwise, the task\n    is currently suspended, and its registers have been saved in memory.  */\n \n-static int\n+static bool\n ravenscar_task_is_currently_active (ptid_t ptid)\n {\n   ptid_t active_task_ptid\n@@ -210,7 +206,7 @@ get_base_thread_from_ravenscar_task (ptid_t ptid)\n    update inferior_ptid accordingly.  */\n \n static void\n-ravenscar_update_inferior_ptid (void)\n+ravenscar_update_inferior_ptid ()\n {\n   int base_cpu;\n \n@@ -242,7 +238,7 @@ ravenscar_update_inferior_ptid (void)\n    Return NULL if not found.  */\n \n static struct bound_minimal_symbol\n-get_running_thread_msymbol (void)\n+get_running_thread_msymbol ()\n {\n   struct bound_minimal_symbol msym;\n \n@@ -260,8 +256,8 @@ get_running_thread_msymbol (void)\n /* Return True if the Ada Ravenscar run-time can be found in the\n    application.  */\n \n-static int\n-has_ravenscar_runtime (void)\n+static bool\n+has_ravenscar_runtime ()\n {\n   struct bound_minimal_symbol msym_ravenscar_runtime_initializer\n     = lookup_minimal_symbol (ravenscar_runtime_initializer, NULL, NULL);\n@@ -280,10 +276,10 @@ has_ravenscar_runtime (void)\n /* Return True if the Ada Ravenscar run-time can be found in the\n    application, and if it has been initialized on target.  */\n \n-static int\n-ravenscar_runtime_initialized (void)\n+static bool\n+ravenscar_runtime_initialized ()\n {\n-  return (!(ravenscar_active_task (1) == null_ptid));\n+  return ravenscar_active_task (1) != null_ptid;\n }\n \n /* Return the ID of the thread that is currently running.\n@@ -584,7 +580,7 @@ Support for Ravenscar task/thread switching is disabled\\n\"));\n    init.c.  */\n \n void\n-_initialize_ravenscar (void)\n+_initialize_ravenscar ()\n {\n   base_ptid = null_ptid;\n "
    }
  ]
}