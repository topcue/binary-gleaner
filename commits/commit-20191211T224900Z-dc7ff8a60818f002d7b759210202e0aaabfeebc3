{
  "sha": "dc7ff8a60818f002d7b759210202e0aaabfeebc3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGM3ZmY4YTYwODE4ZjAwMmQ3Yjc1OTIxMDIwMmUwYWFhYmZlZWJjMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-07T23:36:49Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-11T22:49:00Z"
    },
    "message": "Introduce the tui_gen_win_info::min_height method\n\nThis introduces a new method, tui_gen_win_info::min_height, to fetch\nthe minimum height of a window.  This is used in the subsequent\nunified layout patch.\n\ngdb/ChangeLog\n2019-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-stack.h (struct tui_locator_window) <min_height>:\n\tImplement.\n\t* tui/tui-regs.h (struct tui_data_item_window) <min_height>:\n\tImplement.\n\t* tui/tui-data.h (struct tui_gen_win_info) <min_height>: New\n\tmethod.\n\t(struct tui_win_info) <min_height>: Implement.\n\nChange-Id: Id33baffdf041fde072e15c1ff89b75f8b8118adb",
    "tree": {
      "sha": "aab2731154853caf72ce141b5a88001b661f64c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aab2731154853caf72ce141b5a88001b661f64c8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dc7ff8a60818f002d7b759210202e0aaabfeebc3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc7ff8a60818f002d7b759210202e0aaabfeebc3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dc7ff8a60818f002d7b759210202e0aaabfeebc3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc7ff8a60818f002d7b759210202e0aaabfeebc3/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1431937bee66d6a36c377156d07856f6e469e552",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1431937bee66d6a36c377156d07856f6e469e552",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1431937bee66d6a36c377156d07856f6e469e552"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 28,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d436bb514b4fd729e72f6f5847376d6469d6ed3d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=dc7ff8a60818f002d7b759210202e0aaabfeebc3",
      "patch": "@@ -1,3 +1,13 @@\n+2019-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-stack.h (struct tui_locator_window) <min_height>:\n+\tImplement.\n+\t* tui/tui-regs.h (struct tui_data_item_window) <min_height>:\n+\tImplement.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <min_height>: New\n+\tmethod.\n+\t(struct tui_win_info) <min_height>: Implement.\n+\n 2019-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-data.h (struct tui_gen_win_info) <can_box>: New method."
    },
    {
      "sha": "a25ab11dc5eb6e8a5981536550cb66a8a8c66940",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=dc7ff8a60818f002d7b759210202e0aaabfeebc3",
      "patch": "@@ -85,6 +85,9 @@ struct tui_gen_win_info\n   /* Compute the maximum height of this window.  */\n   virtual int max_height () const = 0;\n \n+  /* Compute the minimum height of this window.  */\n+  virtual int min_height () const = 0;\n+\n   /* Return true if this window can be boxed.  */\n   virtual bool can_box () const\n   {\n@@ -184,6 +187,11 @@ struct tui_win_info : public tui_gen_win_info\n \n   int max_height () const override;\n \n+  int min_height () const override\n+  {\n+    return MIN_WIN_HEIGHT;\n+  }\n+\n   /* Called after the tab width has been changed.  */\n   virtual void update_tab_width ()\n   {"
    },
    {
      "sha": "92df61836772c8d67cab51680bc1edae9f47a4ab",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=dc7ff8a60818f002d7b759210202e0aaabfeebc3",
      "patch": "@@ -46,6 +46,11 @@ struct tui_data_item_window : public tui_gen_win_info\n     return 1;\n   }\n \n+  int min_height () const override\n+  {\n+    return 1;\n+  }\n+\n   const char *name = nullptr;\n   /* The register number, or data display number.  */\n   int item_no = -1;"
    },
    {
      "sha": "27af5d2fe1ab42060e309e1b400d6aed857d568f",
      "filename": "gdb/tui/tui-stack.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/tui/tui-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc7ff8a60818f002d7b759210202e0aaabfeebc3/gdb/tui/tui-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.h?ref=dc7ff8a60818f002d7b759210202e0aaabfeebc3",
      "patch": "@@ -42,6 +42,11 @@ struct tui_locator_window : public tui_gen_win_info\n     return 1;\n   }\n \n+  int min_height () const override\n+  {\n+    return 1;\n+  }\n+\n   void rerender () override;\n \n   /* Update the locator, with the provided arguments."
    }
  ]
}