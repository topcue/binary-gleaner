{
  "sha": "7a259895bb2d92a6e44a1ca5b8729afed88ed579",
  "node_id": "C_kwDOANOeidoAKDdhMjU5ODk1YmIyZDkyYTZlNDRhMWNhNWI4NzI5YWZlZDg4ZWQ1Nzk",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-20T06:56:32Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-29T02:55:15Z"
    },
    "message": "sim: testsuite: expand arch specific toolchain settings\n\nLeverage the new per-port toolchain settings to initialize the env\nfor eeach set of tests.  This allows us to run all the tests in a\nmultitarget build if the user sets up the vars.  If they don't, we\ncan still skip all the tests.",
    "tree": {
      "sha": "d9f27127d0ca03888e05341986aa2f5dc4ef3c8c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d9f27127d0ca03888e05341986aa2f5dc4ef3c8c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7a259895bb2d92a6e44a1ca5b8729afed88ed579",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a259895bb2d92a6e44a1ca5b8729afed88ed579",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7a259895bb2d92a6e44a1ca5b8729afed88ed579",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a259895bb2d92a6e44a1ca5b8729afed88ed579/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8996c2106737302ebdf25bf993e1147065114893",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8996c2106737302ebdf25bf993e1147065114893",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8996c2106737302ebdf25bf993e1147065114893"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 63,
    "deletions": 7
  },
  "files": [
    {
      "sha": "f0e2479053e76fe4760e3f38453534b216d9451d",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a259895bb2d92a6e44a1ca5b8729afed88ed579/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a259895bb2d92a6e44a1ca5b8729afed88ed579/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=7a259895bb2d92a6e44a1ca5b8729afed88ed579",
      "patch": "@@ -2796,6 +2796,7 @@ common/version.c-stamp: $(srcroot)/gdb/version.in $(srcroot)/bfd/version.h $(src\n \n site-sim-config.exp: Makefile\n \t$(AM_V_GEN)( \\\n+\techo \"set SIM_PRIMARY_TARGET \\\"$(SIM_PRIMARY_TARGET)\\\"\"; \\\n \techo \"set builddir \\\"$(builddir)\\\"\"; \\\n \techo \"set srcdir \\\"$(srcdir)/testsuite\\\"\"; \\\n \t$(foreach V,$(SIM_TOOLCHAIN_VARS),echo \"set $(V) \\\"$($(V))\\\"\";) \\"
    },
    {
      "sha": "2cf739b3e32e6699dd95f8b42c63f762cd0ef184",
      "filename": "sim/testsuite/lib/sim-defs.exp",
      "status": "modified",
      "additions": 61,
      "deletions": 7,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a259895bb2d92a6e44a1ca5b8729afed88ed579/sim/testsuite/lib/sim-defs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a259895bb2d92a6e44a1ca5b8729afed88ed579/sim/testsuite/lib/sim-defs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/lib/sim-defs.exp?ref=7a259895bb2d92a6e44a1ca5b8729afed88ed579",
      "patch": "@@ -6,6 +6,17 @@\n # [Presumubly because the target has been \"popped\" by then.  Odd though.]\n set sim_path \"unknown-run\"\n \n+# Find the simulator arch.\n+\n+proc sim_arch {} {\n+    global subdir\n+    set arch \"$subdir\"\n+    while { [file dirname $arch] != \".\" } {\n+\tset arch [file dirname $arch]\n+    }\n+    return \"$arch\"\n+}\n+\n # Initialize the testrun.\n #\n # Normally dejagnu will execute ${tool}_init automatically, but since we set\n@@ -18,11 +29,7 @@ proc sim_init { args } {\n     global sim_path\n \n     # Find the path to the simulator for executing.\n-    set arch \"$subdir\"\n-    while { [file dirname $arch] != \".\" } {\n-\tset arch [file dirname $arch]\n-    }\n-    set sim_path \"$builddir/$arch/run\"\n+    set sim_path \"$builddir/[sim_arch]/run\"\n \n     # As gross as it is, we unset the linker script specified by the target\n     # board.  The simulator board file mips-sim.exp, sets ldscript to the\n@@ -52,6 +59,7 @@ proc sim_init_toolchain {} {\n     global CFLAGS_FOR_TARGET\n     global LDFLAGS_FOR_TARGET\n     global SIMFLAGS_FOR_TARGET\n+    global global_as_works\n     global global_cpp_works\n     global global_cc_works\n     global global_cc_os\n@@ -65,6 +73,42 @@ proc sim_init_toolchain {} {\n     set SIMFLAGS_FOR_TARGET \"\"\n     unset -nocomplain cpu_option cpu_option_sep\n \n+    # The configure script created XXX_FOR_TARGET_$ARCH for us, so merge those\n+    # into plain XXX_FOR_TARGET for this particular arch run.\n+    global SIM_PRIMARY_TARGET\n+    set arch [sim_arch]\n+    set ARCH [string map {- _} [string toupper $arch]]\n+    foreach var {AS LD CC} {\n+\tset var_for_target \"${var}_FOR_TARGET\"\n+\tglobal $var_for_target\n+\tset var_for_target_arch \"${var_for_target}_${ARCH}\"\n+\tglobal $var_for_target_arch\n+\n+\tif [info exists $var_for_target_arch] {\n+\t    set $var_for_target [set $var_for_target_arch]\n+\t} else {\n+\t    set $var_for_target \"\"\n+\t}\n+\n+\tif { [set $var_for_target] == \"\" } {\n+\t    # If building for the primary target, use the default settings.\n+\t    if { $arch == $SIM_PRIMARY_TARGET } {\n+\t\tunset -nocomplain $var_for_target\n+\t    } {\n+\t\tset $var_for_target false\n+\t    }\n+\t}\n+    }\n+\n+    # See if an assembler is available.\n+    if { $arch != $SIM_PRIMARY_TARGET && $AS_FOR_TARGET == \"false\" } {\n+\tverbose -log \"Can't find a compatible assembler\"\n+\tset global_as_works 0\n+    } {\n+\tverbose -log \"Found a compatible assembler\"\n+\tset global_as_works 1\n+    }\n+\n     # Merge per-test settings if available.\n     if ![info exists CFLAGS_FOR_TARGET_init] {\n \tset CFLAGS_FOR_TARGET_init \"\"\n@@ -77,8 +121,11 @@ proc sim_init_toolchain {} {\n     set global_cpp_works [string equal \"\" \"$result\"]\n \n     # See if we have a compiler available, and which environment it's targeting.\n-    if { [target_compile $srcdir/lib/newlibcheck.c \\\n-\t  $objdir/compilercheck.x \"executable\" $cc_options] == \"\" } {\n+    if { $arch != $SIM_PRIMARY_TARGET && $CC_FOR_TARGET == \"false\" } {\n+\tverbose -log \"Can't find a compatible C compiler\"\n+\tset global_cc_works 0\n+    } elseif { [target_compile $srcdir/lib/newlibcheck.c \\\n+\t\t$objdir/compilercheck.x \"executable\" $cc_options] == \"\" } {\n \tverbose -log \"Found newlib C compiler\"\n \tset global_cc_works 1\n \tset global_cc_os \"newlib\"\n@@ -250,6 +297,7 @@ proc run_sim_test { name requested_machs } {\n     global cpu_option\n     global cpu_option_sep\n     global SIMFLAGS_FOR_TARGET\n+    global global_as_works\n     global global_cpp_works\n     global global_cc_works\n     global global_cc_os\n@@ -411,6 +459,12 @@ proc run_sim_test { name requested_machs } {\n \t\t[list \"incdir=$srcdir/$subdir\" \"additional_flags=$c_as_options $c_ld_options $opts(cc,$mach)\"]]\n \t    set method \"compiling/linking\"\n \t} else {\n+\t    # If we don't have an assembler available, skip tests :(.\n+\t    if { $global_as_works == 0 } {\n+\t\tuntested $subdir/$name\n+\t\treturn\n+\t    }\n+\n \t    if [string match \"*.S\" $sourcefile] {\n \t\t# If we don't have a preprocessor available, skip tests :(.\n \t\tif { $global_cpp_works == 0 } {"
    },
    {
      "sha": "977d12f5d282007eac94469a7cc8b5e20409dabb",
      "filename": "sim/testsuite/local.mk",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a259895bb2d92a6e44a1ca5b8729afed88ed579/sim/testsuite/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a259895bb2d92a6e44a1ca5b8729afed88ed579/sim/testsuite/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/local.mk?ref=7a259895bb2d92a6e44a1ca5b8729afed88ed579",
      "patch": "@@ -26,6 +26,7 @@ AM_V_RUNTEST_1 =\n \n site-sim-config.exp: Makefile\n \t$(AM_V_GEN)( \\\n+\techo \"set SIM_PRIMARY_TARGET \\\"$(SIM_PRIMARY_TARGET)\\\"\"; \\\n \techo \"set builddir \\\"$(builddir)\\\"\"; \\\n \techo \"set srcdir \\\"$(srcdir)/testsuite\\\"\"; \\\n \t$(foreach V,$(SIM_TOOLCHAIN_VARS),echo \"set $(V) \\\"$($(V))\\\"\";) \\"
    }
  ]
}