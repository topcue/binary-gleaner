{
  "sha": "0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
  "node_id": "C_kwDOANOeidoAKDBmMzRjMzVkZDlmZjQ5MjFjYWUxYTljYmVmMWNmOTU2YTFhNTZlMjI",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-12-03T05:23:20Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-12-04T01:03:05Z"
    },
    "message": "bfd: move header updates up a directory\n\nThe rules for rebuilding the bfd headers live in the doc/ subdir\n(most likely) because they rely on the chew & related tools.  But\nwe can collapse them into the main Makefile while keeping the tools\nin the doc subdir easily enough.  This makes the code simpler and\nallows for rebuilding them in parallel.\n\nAlso add automake silent rule support while we're here.",
    "tree": {
      "sha": "895b800c3fe27f9f2f6a55a744ec727bc1ca2d63",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/895b800c3fe27f9f2f6a55a744ec727bc1ca2d63"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f52ee74fea5e3dbc5ccb3ac392591cd6363ff6d2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f52ee74fea5e3dbc5ccb3ac392591cd6363ff6d2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f52ee74fea5e3dbc5ccb3ac392591cd6363ff6d2"
    }
  ],
  "stats": {
    "total": 367,
    "additions": 131,
    "deletions": 236
  },
  "files": [
    {
      "sha": "bfe8d93e73da61b9babf61a01981402e01e45b09",
      "filename": "bfd/Makefile.am",
      "status": "modified",
      "additions": 66,
      "deletions": 24,
      "changes": 90,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.am?ref=0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
      "patch": "@@ -920,39 +920,81 @@ LIBBFD_H_FILES = libbfd-in.h libbfd.c bfdio.c bfdwin.c \\\n \tcache.c reloc.c archures.c linker.c\n LIBCOFF_H_FILES = libcoff-in.h coffcode.h\n \n-# Could really use a \"copy-if-change\"...\n-headers:\n-\t(cd $(bfddocdir); $(MAKE) protos $(FLAGS_TO_PASS))\n-\tcp $(bfddocdir)/bfd.h bfd-in2.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change bfd-in2.h-new $(srcdir)/bfd-in2.h\n-\tcp $(bfddocdir)/libbfd.h libbfd.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libbfd.h-new $(srcdir)/libbfd.h\n-\tcp $(bfddocdir)/libcoff.h libcoff.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libcoff.h-new $(srcdir)/libcoff.h\n+MKDOC = doc/chew$(EXEEXT_FOR_BUILD)\n+\n+$(MKDOC):\n+\tcd $(bfddocdir) && $(MAKE) chew$(EXEEXT_FOR_BUILD)\n+\n+headers: stmp-bin2-h stmp-lbfd-h stmp-lcoff-h\n \n # We only rebuild the header files automatically if we have been\n # configured with --enable-maintainer-mode.\n \n $(srcdir)/bfd-in2.h: @MAINT@ stmp-bin2-h ; @true\n-stmp-bin2-h: $(BFD_H_FILES) $(BFD64_H_FILES)\n-\t(cd $(bfddocdir); $(MAKE) $(FLAGS_TO_PASS) bfd.h)\n-\tcp $(bfddocdir)/bfd.h bfd-in2.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change bfd-in2.h-new $(srcdir)/bfd-in2.h\n-\ttouch stmp-bin2-h\n+stmp-bin2-h: $(BFD_H_FILES) $(BFD64_H_FILES) $(MKDOC)\n+\t$(AM_V_GEN)( \\\n+\tset -e; \\\n+\techo \"$(BFD_H_FILES)\" | sed -f $(srcdir)/doc/header.sed; \\\n+\tfor file in $(BFD_H_FILES); do \\\n+\t  file=\"$(srcdir)/$$file\"; \\\n+\t  case $$file in \\\n+\t    *-in.h) cat $$file;; \\\n+\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n+\t\t\t\t-e 's,$$,.  */,'; \\\n+\t\t$(MKDOC) -f $(srcdir)/doc/proto.str < $$file;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo \"#ifdef __cplusplus\"; \\\n+\techo \"}\"; \\\n+\techo \"#endif\"; \\\n+\techo \"#endif\"; \\\n+\t) > bfd-in2.h-new\n+\t$(AM_V_at)$(SHELL) $(srcdir)/../move-if-change bfd-in2.h-new $(srcdir)/bfd-in2.h\n+\t$(AM_V_at)touch stmp-bin2-h\n \n $(srcdir)/libbfd.h: @MAINT@ stmp-lbfd-h ; @true\n-stmp-lbfd-h: $(LIBBFD_H_FILES)\n-\t(cd $(bfddocdir); $(MAKE) $(FLAGS_TO_PASS) libbfd.h)\n-\tcp $(bfddocdir)/libbfd.h libbfd.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libbfd.h-new $(srcdir)/libbfd.h\n-\ttouch stmp-lbfd-h\n+stmp-lbfd-h: $(LIBBFD_H_FILES) $(MKDOC)\n+\t$(AM_V_GEN)( \\\n+\tset -e; \\\n+\techo \"$(LIBBFD_H_FILES)\" | sed -f $(srcdir)/doc/header.sed; \\\n+\tfor file in $(LIBBFD_H_FILES); do \\\n+\t  file=\"$(srcdir)/$$file\"; \\\n+\t  case $$file in \\\n+\t    *-in.h) cat $$file;; \\\n+\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n+\t\t\t\t-e 's,$$,.  */,'; \\\n+\t\t$(MKDOC) -i -f $(srcdir)/doc/proto.str < $$file;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo \"#ifdef __cplusplus\"; \\\n+\techo \"}\"; \\\n+\techo \"#endif\"; \\\n+\techo \"#endif\"; \\\n+\t) > libbfd.h-new\n+\t$(AM_V_at)$(SHELL) $(srcdir)/../move-if-change libbfd.h-new $(srcdir)/libbfd.h\n+\t$(AM_V_at)touch stmp-lbfd-h\n \n $(srcdir)/libcoff.h: @MAINT@ stmp-lcoff-h ; @true\n-stmp-lcoff-h: $(LIBCOFF_H_FILES)\n-\t(cd $(bfddocdir); $(MAKE) $(FLAGS_TO_PASS) libcoff.h)\n-\tcp $(bfddocdir)/libcoff.h libcoff.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libcoff.h-new $(srcdir)/libcoff.h\n-\ttouch stmp-lcoff-h\n+stmp-lcoff-h: $(LIBCOFF_H_FILES) $(MKDOC)\n+\t$(AM_V_GEN)( \\\n+\tset -e; \\\n+\techo \"$(LIBCOFF_H_FILES)\" | sed -f $(srcdir)/doc/header.sed; \\\n+\tfor file in $(LIBCOFF_H_FILES); do \\\n+\t  file=\"$(srcdir)/$$file\"; \\\n+\t  case $$file in \\\n+\t    *-in.h) cat $$file;; \\\n+\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n+\t\t\t\t-e 's,$$,.  */,'; \\\n+\t\t$(MKDOC) -i -f $(srcdir)/doc/proto.str < $$file;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo \"#ifdef __cplusplus\"; \\\n+\techo \"}\"; \\\n+\techo \"#endif\"; \\\n+\techo \"#endif\"; \\\n+\t) > libcoff.h-new\n+\t$(AM_V_at)$(SHELL) $(srcdir)/../move-if-change libcoff.h-new $(srcdir)/libcoff.h\n+\t$(AM_V_at)touch stmp-lcoff-h\n \n MOSTLYCLEANFILES = ofiles stamp-ofiles\n "
    },
    {
      "sha": "ec9ed2d183e162119e6ee288ccbd3981d1de7b7d",
      "filename": "bfd/Makefile.in",
      "status": "modified",
      "additions": 65,
      "deletions": 24,
      "changes": 89,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.in?ref=0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
      "patch": "@@ -1175,6 +1175,7 @@ LIBBFD_H_FILES = libbfd-in.h libbfd.c bfdio.c bfdwin.c \\\n \tcache.c reloc.c archures.c linker.c\n \n LIBCOFF_H_FILES = libcoff-in.h coffcode.h\n+MKDOC = doc/chew$(EXEEXT_FOR_BUILD)\n MOSTLYCLEANFILES = ofiles stamp-ofiles\n CLEANFILES = bfd.h dep.sed stmp-bfd-h DEP DEPA DEP1 DEP2 libbfd.a stamp-lib \\\n \tstmp-bin2-h stmp-lbfd-h stmp-lcoff-h\n@@ -2044,39 +2045,79 @@ stmp-bfd-h: bfd-in3.h\n \trm -f bfd-tmp.h\n \ttouch stmp-bfd-h\n \n-# Could really use a \"copy-if-change\"...\n-headers:\n-\t(cd $(bfddocdir); $(MAKE) protos $(FLAGS_TO_PASS))\n-\tcp $(bfddocdir)/bfd.h bfd-in2.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change bfd-in2.h-new $(srcdir)/bfd-in2.h\n-\tcp $(bfddocdir)/libbfd.h libbfd.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libbfd.h-new $(srcdir)/libbfd.h\n-\tcp $(bfddocdir)/libcoff.h libcoff.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libcoff.h-new $(srcdir)/libcoff.h\n+$(MKDOC):\n+\tcd $(bfddocdir) && $(MAKE) chew$(EXEEXT_FOR_BUILD)\n+\n+headers: stmp-bin2-h stmp-lbfd-h stmp-lcoff-h\n \n # We only rebuild the header files automatically if we have been\n # configured with --enable-maintainer-mode.\n \n $(srcdir)/bfd-in2.h: @MAINT@ stmp-bin2-h ; @true\n-stmp-bin2-h: $(BFD_H_FILES) $(BFD64_H_FILES)\n-\t(cd $(bfddocdir); $(MAKE) $(FLAGS_TO_PASS) bfd.h)\n-\tcp $(bfddocdir)/bfd.h bfd-in2.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change bfd-in2.h-new $(srcdir)/bfd-in2.h\n-\ttouch stmp-bin2-h\n+stmp-bin2-h: $(BFD_H_FILES) $(BFD64_H_FILES) $(MKDOC)\n+\t$(AM_V_GEN)( \\\n+\tset -e; \\\n+\techo \"$(BFD_H_FILES)\" | sed -f $(srcdir)/doc/header.sed; \\\n+\tfor file in $(BFD_H_FILES); do \\\n+\t  file=\"$(srcdir)/$$file\"; \\\n+\t  case $$file in \\\n+\t    *-in.h) cat $$file;; \\\n+\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n+\t\t\t\t-e 's,$$,.  */,'; \\\n+\t\t$(MKDOC) -f $(srcdir)/doc/proto.str < $$file;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo \"#ifdef __cplusplus\"; \\\n+\techo \"}\"; \\\n+\techo \"#endif\"; \\\n+\techo \"#endif\"; \\\n+\t) > bfd-in2.h-new\n+\t$(AM_V_at)$(SHELL) $(srcdir)/../move-if-change bfd-in2.h-new $(srcdir)/bfd-in2.h\n+\t$(AM_V_at)touch stmp-bin2-h\n \n $(srcdir)/libbfd.h: @MAINT@ stmp-lbfd-h ; @true\n-stmp-lbfd-h: $(LIBBFD_H_FILES)\n-\t(cd $(bfddocdir); $(MAKE) $(FLAGS_TO_PASS) libbfd.h)\n-\tcp $(bfddocdir)/libbfd.h libbfd.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libbfd.h-new $(srcdir)/libbfd.h\n-\ttouch stmp-lbfd-h\n+stmp-lbfd-h: $(LIBBFD_H_FILES) $(MKDOC)\n+\t$(AM_V_GEN)( \\\n+\tset -e; \\\n+\techo \"$(LIBBFD_H_FILES)\" | sed -f $(srcdir)/doc/header.sed; \\\n+\tfor file in $(LIBBFD_H_FILES); do \\\n+\t  file=\"$(srcdir)/$$file\"; \\\n+\t  case $$file in \\\n+\t    *-in.h) cat $$file;; \\\n+\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n+\t\t\t\t-e 's,$$,.  */,'; \\\n+\t\t$(MKDOC) -i -f $(srcdir)/doc/proto.str < $$file;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo \"#ifdef __cplusplus\"; \\\n+\techo \"}\"; \\\n+\techo \"#endif\"; \\\n+\techo \"#endif\"; \\\n+\t) > libbfd.h-new\n+\t$(AM_V_at)$(SHELL) $(srcdir)/../move-if-change libbfd.h-new $(srcdir)/libbfd.h\n+\t$(AM_V_at)touch stmp-lbfd-h\n \n $(srcdir)/libcoff.h: @MAINT@ stmp-lcoff-h ; @true\n-stmp-lcoff-h: $(LIBCOFF_H_FILES)\n-\t(cd $(bfddocdir); $(MAKE) $(FLAGS_TO_PASS) libcoff.h)\n-\tcp $(bfddocdir)/libcoff.h libcoff.h-new\n-\t$(SHELL) $(srcdir)/../move-if-change libcoff.h-new $(srcdir)/libcoff.h\n-\ttouch stmp-lcoff-h\n+stmp-lcoff-h: $(LIBCOFF_H_FILES) $(MKDOC)\n+\t$(AM_V_GEN)( \\\n+\tset -e; \\\n+\techo \"$(LIBCOFF_H_FILES)\" | sed -f $(srcdir)/doc/header.sed; \\\n+\tfor file in $(LIBCOFF_H_FILES); do \\\n+\t  file=\"$(srcdir)/$$file\"; \\\n+\t  case $$file in \\\n+\t    *-in.h) cat $$file;; \\\n+\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n+\t\t\t\t-e 's,$$,.  */,'; \\\n+\t\t$(MKDOC) -i -f $(srcdir)/doc/proto.str < $$file;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo \"#ifdef __cplusplus\"; \\\n+\techo \"}\"; \\\n+\techo \"#endif\"; \\\n+\techo \"#endif\"; \\\n+\t) > libcoff.h-new\n+\t$(AM_V_at)$(SHELL) $(srcdir)/../move-if-change libcoff.h-new $(srcdir)/libcoff.h\n+\t$(AM_V_at)touch stmp-lcoff-h\n \n bfdver.h: $(srcdir)/version.h $(srcdir)/development.sh $(srcdir)/Makefile.in\n \t$(AM_V_GEN)\\"
    },
    {
      "sha": "3b24d1af222aa51002ab79071aadb63e73aa591b",
      "filename": "bfd/doc/Makefile.am",
      "status": "modified",
      "additions": 0,
      "deletions": 94,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/doc/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/doc/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/doc/Makefile.am?ref=0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
      "patch": "@@ -77,8 +77,6 @@ chew.stamp: $(srcdir)/chew.c\n \t  chw$$$$$(EXEEXT_FOR_BUILD) $(MKDOC); \\\n \ttouch $@\n \n-protos: libbfd.h libcoff.h bfd.h\n-\n # We can't replace these rules with an implicit rule, because\n # makes without VPATH support couldn't find the .h files in `..'.\n \n@@ -243,98 +241,6 @@ linker.stamp: $(srcdir)/../linker.c $(srcdir)/doc.str $(MKDOC)\n \t$(SHELL) $(srcdir)/../../move-if-change linker.tmp linker.texi\n \ttouch $@\n \n-LIBBFD_H_DEP = \\\n-\t$(srcdir)/../libbfd-in.h\t\\\n-\t$(srcdir)/../libbfd.c\t\t\\\n-\t$(srcdir)/../bfdio.c\t\t\\\n-\t$(srcdir)/../bfdwin.c\t\t\\\n-\t$(srcdir)/../cache.c\t\t\\\n-\t$(srcdir)/../reloc.c\t\t\\\n-\t$(srcdir)/../archures.c\t\t\\\n-\t$(srcdir)/../linker.c\t\t\\\n-\t$(srcdir)/header.sed\t\t\\\n-\t$(srcdir)/proto.str\t\t\\\n-\t$(MKDOC)\n-\n-libbfd.h: $(LIBBFD_H_DEP)\n-\techo \"$(LIBBFD_H_DEP)\" | sed -f $(srcdir)/header.sed > $@\n-\tfor file in $(LIBBFD_H_DEP); do \\\n-\t  case $$file in \\\n-\t    *-in.h) cat $$file >> $@ ;; \\\n-\t    */header.sed) break ;; \\\n-\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n-\t\t\t\t-e 's,$$,.  */,' >> $@ ; \\\n-\t\t./$(MKDOC) -i -f $(srcdir)/proto.str < $$file >> $@ ;; \\\n-\t  esac; \\\n-\tdone\n-\techo \"#ifdef __cplusplus\" >> $@\n-\techo \"}\" >> $@\n-\techo \"#endif\" >> $@\n-\techo \"#endif\" >> $@\n-\n-LIBCOFF_H_DEP = \\\n-\t$(srcdir)/../libcoff-in.h\t\\\n-\t$(srcdir)/../coffcode.h\t\t\\\n-\t$(srcdir)/header.sed\t\t\\\n-\t$(srcdir)/proto.str\t\t\\\n-\t$(MKDOC)\n-\n-libcoff.h: $(LIBCOFF_H_DEP)\n-\techo \"$(LIBCOFF_H_DEP)\" | sed -f $(srcdir)/header.sed > $@\n-\tfor file in $(LIBCOFF_H_DEP); do \\\n-\t  case $$file in \\\n-\t    *-in.h) cat $$file >> $@ ;; \\\n-\t    */header.sed) break ;; \\\n-\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n-\t\t\t\t-e 's,$$,.  */,' >> $@ ; \\\n-\t\t./$(MKDOC) -i -f $(srcdir)/proto.str < $$file >> $@ ;; \\\n-\t  esac; \\\n-\tdone\n-\techo \"#ifdef __cplusplus\" >> $@\n-\techo \"}\" >> $@\n-\techo \"#endif\" >> $@\n-\techo \"#endif\" >> $@\n-\n-BFD_H_DEP = \\\n-\t$(srcdir)/../bfd-in.h \t\t\\\n-\t$(srcdir)/../init.c \t\t\\\n-\t$(srcdir)/../opncls.c \t\t\\\n-\t$(srcdir)/../libbfd.c \t\t\\\n-\t$(srcdir)/../bfdio.c\t\t\\\n-\t$(srcdir)/../bfdwin.c\t\t\\\n-\t$(srcdir)/../section.c \t\t\\\n-\t$(srcdir)/../archures.c\t\t\\\n-\t$(srcdir)/../reloc.c\t\t\\\n-\t$(srcdir)/../syms.c\t\t\\\n-\t$(srcdir)/../bfd.c\t\t\\\n-\t$(srcdir)/../archive.c\t\t\\\n-\t$(srcdir)/../corefile.c\t\t\\\n-\t$(srcdir)/../targets.c\t\t\\\n-\t$(srcdir)/../format.c\t\t\\\n-\t$(srcdir)/../linker.c\t\t\\\n-\t$(srcdir)/../simple.c\t\t\\\n-\t$(srcdir)/../compress.c\t\t\\\n-\t$(srcdir)/header.sed\t\t\\\n-\t$(srcdir)/proto.str\t\t\\\n-\t$(srcdir)/../version.h\t\t\\\n-\t$(MKDOC)\n-\n-bfd.h: $(BFD_H_DEP)\n-\techo \"$(BFD_H_DEP)\" | sed -f $(srcdir)/header.sed > $@\n-\tfor file in $(BFD_H_DEP); do \\\n-\t  case $$file in \\\n-\t    *-in.h) cat $$file >> $@ ;; \\\n-\t    */header.sed) break ;; \\\n-\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n-\t\t\t\t-e 's,$$,.  */,' >> $@ ; \\\n-\t\t./$(MKDOC) -f $(srcdir)/proto.str < $$file >> $@ ;; \\\n-\t  esac; \\\n-\tdone\n-\techo \"#ifdef __cplusplus\" >> $@\n-\techo \"}\" >> $@\n-\techo \"#endif\" >> $@\n-\techo \"#endif\" >> $@\n-\n bfdver.texi: $(srcdir)/Makefile.in\n \t@echo \"creating $@\"; \\\n \techo \"@set VERSION $(VERSION)\" > bfdver.texi; \\"
    },
    {
      "sha": "c461094c80c54db664c6b1873719db2c7b9c48c3",
      "filename": "bfd/doc/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 94,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/doc/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22/bfd/doc/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/doc/Makefile.in?ref=0f34c35dd9ff4921cae1a9cbef1cf956a1a56e22",
      "patch": "@@ -442,50 +442,6 @@ MKDOC = chew$(EXEEXT_FOR_BUILD)\n AM_CPPFLAGS = -I.. -I$(srcdir)/.. -I$(srcdir)/../../include \\\n \t-I$(srcdir)/../../intl -I../../intl\n \n-LIBBFD_H_DEP = \\\n-\t$(srcdir)/../libbfd-in.h\t\\\n-\t$(srcdir)/../libbfd.c\t\t\\\n-\t$(srcdir)/../bfdio.c\t\t\\\n-\t$(srcdir)/../bfdwin.c\t\t\\\n-\t$(srcdir)/../cache.c\t\t\\\n-\t$(srcdir)/../reloc.c\t\t\\\n-\t$(srcdir)/../archures.c\t\t\\\n-\t$(srcdir)/../linker.c\t\t\\\n-\t$(srcdir)/header.sed\t\t\\\n-\t$(srcdir)/proto.str\t\t\\\n-\t$(MKDOC)\n-\n-LIBCOFF_H_DEP = \\\n-\t$(srcdir)/../libcoff-in.h\t\\\n-\t$(srcdir)/../coffcode.h\t\t\\\n-\t$(srcdir)/header.sed\t\t\\\n-\t$(srcdir)/proto.str\t\t\\\n-\t$(MKDOC)\n-\n-BFD_H_DEP = \\\n-\t$(srcdir)/../bfd-in.h \t\t\\\n-\t$(srcdir)/../init.c \t\t\\\n-\t$(srcdir)/../opncls.c \t\t\\\n-\t$(srcdir)/../libbfd.c \t\t\\\n-\t$(srcdir)/../bfdio.c\t\t\\\n-\t$(srcdir)/../bfdwin.c\t\t\\\n-\t$(srcdir)/../section.c \t\t\\\n-\t$(srcdir)/../archures.c\t\t\\\n-\t$(srcdir)/../reloc.c\t\t\\\n-\t$(srcdir)/../syms.c\t\t\\\n-\t$(srcdir)/../bfd.c\t\t\\\n-\t$(srcdir)/../archive.c\t\t\\\n-\t$(srcdir)/../corefile.c\t\t\\\n-\t$(srcdir)/../targets.c\t\t\\\n-\t$(srcdir)/../format.c\t\t\\\n-\t$(srcdir)/../linker.c\t\t\\\n-\t$(srcdir)/../simple.c\t\t\\\n-\t$(srcdir)/../compress.c\t\t\\\n-\t$(srcdir)/header.sed\t\t\\\n-\t$(srcdir)/proto.str\t\t\\\n-\t$(srcdir)/../version.h\t\t\\\n-\t$(MKDOC)\n-\n noinst_TEXINFOS = bfdint.texi\n MOSTLYCLEANFILES = $(MKDOC) *.o *.stamp\n DISTCLEANFILES = bfd.?? bfd.??? bfd.h libbfd.h libcoff.h texput.log\n@@ -929,8 +885,6 @@ chew.stamp: $(srcdir)/chew.c\n \t  chw$$$$$(EXEEXT_FOR_BUILD) $(MKDOC); \\\n \ttouch $@\n \n-protos: libbfd.h libcoff.h bfd.h\n-\n # We can't replace these rules with an implicit rule, because\n # makes without VPATH support couldn't find the .h files in `..'.\n \n@@ -1095,54 +1049,6 @@ linker.stamp: $(srcdir)/../linker.c $(srcdir)/doc.str $(MKDOC)\n \t$(SHELL) $(srcdir)/../../move-if-change linker.tmp linker.texi\n \ttouch $@\n \n-libbfd.h: $(LIBBFD_H_DEP)\n-\techo \"$(LIBBFD_H_DEP)\" | sed -f $(srcdir)/header.sed > $@\n-\tfor file in $(LIBBFD_H_DEP); do \\\n-\t  case $$file in \\\n-\t    *-in.h) cat $$file >> $@ ;; \\\n-\t    */header.sed) break ;; \\\n-\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n-\t\t\t\t-e 's,$$,.  */,' >> $@ ; \\\n-\t\t./$(MKDOC) -i -f $(srcdir)/proto.str < $$file >> $@ ;; \\\n-\t  esac; \\\n-\tdone\n-\techo \"#ifdef __cplusplus\" >> $@\n-\techo \"}\" >> $@\n-\techo \"#endif\" >> $@\n-\techo \"#endif\" >> $@\n-\n-libcoff.h: $(LIBCOFF_H_DEP)\n-\techo \"$(LIBCOFF_H_DEP)\" | sed -f $(srcdir)/header.sed > $@\n-\tfor file in $(LIBCOFF_H_DEP); do \\\n-\t  case $$file in \\\n-\t    *-in.h) cat $$file >> $@ ;; \\\n-\t    */header.sed) break ;; \\\n-\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n-\t\t\t\t-e 's,$$,.  */,' >> $@ ; \\\n-\t\t./$(MKDOC) -i -f $(srcdir)/proto.str < $$file >> $@ ;; \\\n-\t  esac; \\\n-\tdone\n-\techo \"#ifdef __cplusplus\" >> $@\n-\techo \"}\" >> $@\n-\techo \"#endif\" >> $@\n-\techo \"#endif\" >> $@\n-\n-bfd.h: $(BFD_H_DEP)\n-\techo \"$(BFD_H_DEP)\" | sed -f $(srcdir)/header.sed > $@\n-\tfor file in $(BFD_H_DEP); do \\\n-\t  case $$file in \\\n-\t    *-in.h) cat $$file >> $@ ;; \\\n-\t    */header.sed) break ;; \\\n-\t    *)\techo $$file | sed -e 's,.*/,,' -e 's,^,/* Extracted from ,' \\\n-\t\t\t\t-e 's,$$,.  */,' >> $@ ; \\\n-\t\t./$(MKDOC) -f $(srcdir)/proto.str < $$file >> $@ ;; \\\n-\t  esac; \\\n-\tdone\n-\techo \"#ifdef __cplusplus\" >> $@\n-\techo \"}\" >> $@\n-\techo \"#endif\" >> $@\n-\techo \"#endif\" >> $@\n-\n bfdver.texi: $(srcdir)/Makefile.in\n \t@echo \"creating $@\"; \\\n \techo \"@set VERSION $(VERSION)\" > bfdver.texi; \\"
    }
  ]
}