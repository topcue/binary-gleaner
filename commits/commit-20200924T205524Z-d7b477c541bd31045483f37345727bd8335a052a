{
  "sha": "d7b477c541bd31045483f37345727bd8335a052a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDdiNDc3YzU0MWJkMzEwNDU0ODNmMzczNDU3MjdiZDgzMzVhMDUyYQ==",
  "commit": {
    "author": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-09-23T14:41:06Z"
    },
    "committer": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-09-24T20:55:24Z"
    },
    "message": "Sync libiberty and include with GCC for get_DW_UT_name.\n\nThis adds a get_DW_UT_name function to dwarfnames using dwarf2.def\nfor use in binutils readelf to show the unit types in a DWARF5 header.\n\ninclude/ChangeLog:\n\n\tSync with GCC\n\t* dwarf2.def: Add DWARF5 Unit type header encoding macros\n\tDW_UT_FIRST, DW_UT and DW_UT_END.\n\t* dwarf2.h (enum dwarf_unit_type): Removed and define using\n\tDW_UT_FIRST, DW_UT and DW_UT_END macros.\n\t(get_DW_UT_name): New function declaration.\n\nlibiberty/ChangeLog:\n\n\tSync with GCC\n\t* dwarfnames.c (get_DW_UT_name): Define using DW_UT_FIRST, DW_UT\n\tand DW_UT_END.",
    "tree": {
      "sha": "31f245e1c2ef5994cd8b0f5aa764a5172586cccf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/31f245e1c2ef5994cd8b0f5aa764a5172586cccf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d7b477c541bd31045483f37345727bd8335a052a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7b477c541bd31045483f37345727bd8335a052a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d7b477c541bd31045483f37345727bd8335a052a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7b477c541bd31045483f37345727bd8335a052a/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "ec47b32a85294af959457ad19bd98dd13f6389fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec47b32a85294af959457ad19bd98dd13f6389fd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ec47b32a85294af959457ad19bd98dd13f6389fd"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 44,
    "deletions": 13
  },
  "files": [
    {
      "sha": "12fd17b7eae535440cd3ac26c87402f25a2b056f",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7b477c541bd31045483f37345727bd8335a052a/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7b477c541bd31045483f37345727bd8335a052a/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=d7b477c541bd31045483f37345727bd8335a052a",
      "patch": "@@ -1,3 +1,12 @@\n+2020-09-23  Mark Wielaard  <mark@klomp.org>\n+\n+\tSync with GCC\n+\t* dwarf2.def: Add DWARF5 Unit type header encoding macros\n+\tDW_UT_FIRST, DW_UT and DW_UT_END.\n+\t* dwarf2.h (enum dwarf_unit_type): Removed and define using\n+\tDW_UT_FIRST, DW_UT and DW_UT_END macros.\n+\t(get_DW_UT_name): New function declaration.\n+\n 2020-09-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/26391"
    },
    {
      "sha": "13825a3eef7ea5ce3aac790e1082c571cad340ad",
      "filename": "include/dwarf2.def",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7b477c541bd31045483f37345727bd8335a052a/include/dwarf2.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7b477c541bd31045483f37345727bd8335a052a/include/dwarf2.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/dwarf2.def?ref=d7b477c541bd31045483f37345727bd8335a052a",
      "patch": "@@ -805,3 +805,14 @@ DW_IDX (DW_IDX_hi_user, 0x3fff)\n DW_IDX (DW_IDX_GNU_internal, 0x2000)\n DW_IDX (DW_IDX_GNU_external, 0x2001)\n DW_END_IDX\n+\n+/* DWARF5 Unit type header encodings  */\n+DW_FIRST_UT (DW_UT_compile, 0x01)\n+DW_UT (DW_UT_type, 0x02)\n+DW_UT (DW_UT_partial, 0x03)\n+DW_UT (DW_UT_skeleton, 0x04)\n+DW_UT (DW_UT_split_compile, 0x05)\n+DW_UT (DW_UT_split_type, 0x06)\n+DW_UT (DW_UT_lo_user, 0x80)\n+DW_UT (DW_UT_hi_user, 0xff)\n+DW_END_UT"
    },
    {
      "sha": "83cf50d7bf53d3c275085d2fa01d04d697330639",
      "filename": "include/dwarf2.h",
      "status": "modified",
      "additions": 11,
      "deletions": 13,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7b477c541bd31045483f37345727bd8335a052a/include/dwarf2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7b477c541bd31045483f37345727bd8335a052a/include/dwarf2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/dwarf2.h?ref=d7b477c541bd31045483f37345727bd8335a052a",
      "patch": "@@ -55,6 +55,7 @@\n #define DW_CFA_DUP(name, value) , name = value\n #define DW_IDX(name, value) , name = value\n #define DW_IDX_DUP(name, value) , name = value\n+#define DW_UT(name, value) , name = value\n \n #define DW_FIRST_TAG(name, value) enum dwarf_tag { \\\n   name = value\n@@ -77,6 +78,9 @@\n #define DW_FIRST_IDX(name, value) enum dwarf_name_index_attribute { \\\n   name = value\n #define DW_END_IDX };\n+#define DW_FIRST_UT(name, value) enum dwarf_unit_type { \\\n+  name = value\n+#define DW_END_UT };\n \n #include \"dwarf2.def\"\n \n@@ -94,6 +98,8 @@\n #undef DW_END_CFA\n #undef DW_FIRST_IDX\n #undef DW_END_IDX\n+#undef DW_FIRST_UT\n+#undef DW_END_UT\n \n #undef DW_TAG\n #undef DW_TAG_DUP\n@@ -108,6 +114,7 @@\n #undef DW_CFA_DUP\n #undef DW_IDX\n #undef DW_IDX_DUP\n+#undef DW_UT\n \n /* Flag that tells whether entry has a child or not.  */\n #define DW_children_no   0\n@@ -450,19 +457,6 @@ enum dwarf_range_list_entry\n     DW_RLE_start_end = 0x06,\n     DW_RLE_start_length = 0x07\n   };\n-\n-/* Unit types in unit_type unit header field.  */\n-enum dwarf_unit_type\n-  {\n-    DW_UT_compile = 0x01,\n-    DW_UT_type = 0x02,\n-    DW_UT_partial = 0x03,\n-    DW_UT_skeleton = 0x04,\n-    DW_UT_split_compile = 0x05,\n-    DW_UT_split_type = 0x06,\n-    DW_UT_lo_user = 0x80,\n-    DW_UT_hi_user = 0xff\n-  };\n \f\n /* @@@ For use with GNU frame unwind information.  */\n \n@@ -551,6 +545,10 @@ extern const char *get_DW_CFA_name (unsigned int opc);\n    recognized.  */\n extern const char *get_DW_IDX_name (unsigned int idx);\n \n+/* Return the name of a DW_UT_ constant, or NULL if the value is not\n+   recognized.  */\n+extern const char *get_DW_UT_name (unsigned int ut);\n+\n #ifdef __cplusplus\n }\n #endif /* __cplusplus */"
    },
    {
      "sha": "b8d41691a01fd1e6052b9ad2130bdec4e9d87b5b",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7b477c541bd31045483f37345727bd8335a052a/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7b477c541bd31045483f37345727bd8335a052a/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=d7b477c541bd31045483f37345727bd8335a052a",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-23  Mark Wielaard  <mark@klomp.org>\n+\n+\tSync with GCC\n+\t* dwarfnames.c (get_DW_UT_name): Define using DW_UT_FIRST, DW_UT\n+\tand DW_UT_END.\n+\n 2020-09-11  Felix Willgerodt  <felix.willgerodt@intel.com>\n \n \tSync with GCC"
    },
    {
      "sha": "af11668b431f25093ce5d1efec19c00ecea1c7d9",
      "filename": "libiberty/dwarfnames.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7b477c541bd31045483f37345727bd8335a052a/libiberty/dwarfnames.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7b477c541bd31045483f37345727bd8335a052a/libiberty/dwarfnames.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/dwarfnames.c?ref=d7b477c541bd31045483f37345727bd8335a052a",
      "patch": "@@ -64,6 +64,11 @@ Boston, MA 02110-1301, USA.  */\n   switch (idx) {\t\t\t\t\t\\\n   DW_IDX (name, value)\n #define DW_END_IDX } return 0; }\n+#define DW_FIRST_UT(name, value) \\\n+  const char *get_DW_UT_name (unsigned int ut) {\t\\\n+  switch (ut) {\t\t\t\t\t\\\n+  DW_UT (name, value)\n+#define DW_END_UT } return 0; }\n \n #define DW_TAG(name, value) case name: return # name ;\n #define DW_TAG_DUP(name, value)\n@@ -78,6 +83,7 @@ Boston, MA 02110-1301, USA.  */\n #define DW_CFA_DUP(name, value)\n #define DW_IDX(name, value) case name: return # name ;\n #define DW_IDX_DUP(name, value)\n+#define DW_UT(name, value) case name: return # name ;\n \n #include \"dwarf2.def\"\n \n@@ -95,6 +101,7 @@ Boston, MA 02110-1301, USA.  */\n #undef DW_END_CFA\n #undef DW_FIRST_IDX\n #undef DW_END_IDX\n+#undef DW_END_UT\n \n #undef DW_TAG\n #undef DW_TAG_DUP"
    }
  ]
}