{
  "sha": "2ad10cb22246b16fdebece06646db288dbea1fdb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmFkMTBjYjIyMjQ2YjE2ZmRlYmVjZTA2NjQ2ZGIyODhkYmVhMWZkYg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2016-01-22T03:46:34Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-17T05:01:08Z"
    },
    "message": "sim: h8300: invert sim_state storage",
    "tree": {
      "sha": "22d99c218a7685a319099c0b5b5ba50fe353007a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/22d99c218a7685a319099c0b5b5ba50fe353007a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2ad10cb22246b16fdebece06646db288dbea1fdb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ad10cb22246b16fdebece06646db288dbea1fdb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2ad10cb22246b16fdebece06646db288dbea1fdb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ad10cb22246b16fdebece06646db288dbea1fdb/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8ea7241cf3f46e9164c5ef75611bb2442350c934",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ea7241cf3f46e9164c5ef75611bb2442350c934",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8ea7241cf3f46e9164c5ef75611bb2442350c934"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 32,
    "deletions": 11
  },
  "files": [
    {
      "sha": "8ddbb548a41bf8ef747d56b8d016cb24ae97ee54",
      "filename": "sim/h8300/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ad10cb22246b16fdebece06646db288dbea1fdb/sim/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ad10cb22246b16fdebece06646db288dbea1fdb/sim/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog?ref=2ad10cb22246b16fdebece06646db288dbea1fdb",
      "patch": "@@ -1,3 +1,19 @@\n+2021-05-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* compile.c (h8_get_state): Change sd to H8300_SIM_STATE.\n+\t(h8_set_state): Likewise.\n+\t(h8_get_stats): Likewise.\n+\t(h8_increment_stats): Likewise.\n+\t(init_pointers): Likewise.\n+\t(step_once): Likewise.\n+\t(sim_info): Likewise.\n+\t(sim_open): Likewise.\n+\t(sim_load): Likewise.\n+\t* sim-main.h (SIM_HAVE_COMMON_SIM_STATE): Define.\n+\t(struct sim_state): Delete.\n+\t(struct h8300_sim_state): New struct.\n+\t(H8300_SIM_STATE): Define.\n+\n 2021-05-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* compile.c: Replace config.h include with defs.h."
    },
    {
      "sha": "a45a676ad0e3dbe9556e4f97b510712aadc11bf1",
      "filename": "sim/h8300/compile.c",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ad10cb22246b16fdebece06646db288dbea1fdb/sim/h8300/compile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ad10cb22246b16fdebece06646db288dbea1fdb/sim/h8300/compile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/compile.c?ref=2ad10cb22246b16fdebece06646db288dbea1fdb",
      "patch": "@@ -139,13 +139,13 @@ h8_set_exception (SIM_DESC sd, int val)\n static enum h8300_sim_state\n h8_get_state (SIM_DESC sd)\n {\n-  return sd -> state;\n+  return H8300_SIM_STATE (sd)->state;\n }\n \n static void\n h8_set_state (SIM_DESC sd, enum h8300_sim_state val)\n {\n-  sd -> state = val;\n+  H8300_SIM_STATE (sd)->state = val;\n }\n #endif\n static unsigned int\n@@ -230,13 +230,13 @@ h8_set_reg (SIM_DESC sd, int regnum, int val)\n static int\n h8_get_stats (SIM_DESC sd, int idx)\n {\n-  return sd -> stats[idx];\n+  return H8300_SIM_STATE (sd)->stats[idx];\n }\n \n static void\n h8_increment_stats (SIM_DESC sd, int idx)\n {\n-  sd -> stats[idx] ++;\n+  H8300_SIM_STATE (sd)->stats[idx] ++;\n }\n #endif /* ADEBUG */\n \n@@ -1612,6 +1612,8 @@ static int init_pointers_needed = 1;\n static void\n init_pointers (SIM_DESC sd)\n {\n+  struct h8300_sim_state *state = H8300_SIM_STATE (sd);\n+\n   if (init_pointers_needed)\n     {\n       int i;\n@@ -1637,7 +1639,7 @@ init_pointers (SIM_DESC sd)\n \n       h8_set_memory_buf (sd, (unsigned char *) \n \t\t\t calloc (sizeof (char), memory_size));\n-      sd->memory_size = memory_size;\n+      state->memory_size = memory_size;\n \n       h8_set_mask (sd, memory_size - 1);\n \n@@ -1723,6 +1725,7 @@ step_once (SIM_DESC sd, SIM_CPU *cpu)\n   int trace = 0;\n   int intMask = 0;\n   int oldmask;\n+  const struct h8300_sim_state *state = H8300_SIM_STATE (sd);\n   host_callback *sim_callback = STATE_CALLBACK (sd);\n \n   init_pointers (sd);\n@@ -4529,6 +4532,7 @@ h8300_reg_fetch (SIM_CPU *cpu, int rn, unsigned char *buf, int length)\n void\n sim_info (SIM_DESC sd, int verbose)\n {\n+  const struct h8300_sim_state *state = H8300_SIM_STATE (sd);\n   double timetaken = (double) h8_get_ticks (sd) / (double) now_persec ();\n   double virttime = h8_get_cycles (sd) / 10.0e6;\n \n@@ -4661,7 +4665,7 @@ sim_open (SIM_OPEN_KIND kind,\n   SIM_DESC sd;\n   sim_cpu *cpu;\n \n-  sd = sim_state_alloc (kind, callback);\n+  sd = sim_state_alloc_extra (kind, callback, sizeof (struct h8300_sim_state));\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n@@ -4745,6 +4749,7 @@ sim_open (SIM_OPEN_KIND kind,\n SIM_RC\n sim_load (SIM_DESC sd, const char *prog, bfd *abfd, int from_tty)\n {\n+  struct h8300_sim_state *state = H8300_SIM_STATE (sd);\n   bfd *prog_bfd;\n \n   /* FIXME: The code below that sets a specific variant of the H8/300\n@@ -4794,7 +4799,7 @@ sim_load (SIM_DESC sd, const char *prog, bfd *abfd, int from_tty)\n \n   h8_set_memory_buf (sd, (unsigned char *) \n \t\t     calloc (sizeof (char), memory_size));\n-  sd->memory_size = memory_size;\n+  state->memory_size = memory_size;\n \n   /* `msize' must be a power of two.  */\n   if ((memory_size & (memory_size - 1)) != 0)"
    },
    {
      "sha": "57ff3071460202a8f1e60cc3cbba52140c2694c3",
      "filename": "sim/h8300/sim-main.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ad10cb22246b16fdebece06646db288dbea1fdb/sim/h8300/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ad10cb22246b16fdebece06646db288dbea1fdb/sim/h8300/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/sim-main.h?ref=2ad10cb22246b16fdebece06646db288dbea1fdb",
      "patch": "@@ -5,6 +5,8 @@\n #ifndef SIM_MAIN_H\n #define SIM_MAIN_H\n \n+#define SIM_HAVE_COMMON_SIM_STATE\n+\n #define DEBUG\n \n /* These define the size of main memory for the simulator.\n@@ -130,15 +132,13 @@ struct _sim_cpu {\n   sim_cpu_base base;\n };\n \n-/* The sim_state struct.  */\n-struct sim_state {\n-  sim_cpu *cpu[MAX_NR_PROCESSORS];\n+struct h8300_sim_state {\n   unsigned long memory_size;\n #ifdef ADEBUG\n   int stats[O_LAST];\n #endif\n-  sim_state_base base;\n };\n+#define H8300_SIM_STATE(sd) ((struct h8300_sim_state *) STATE_ARCH_DATA (sd))\n \n /* The current state of the processor; registers, memory, etc.  */\n "
    }
  ]
}