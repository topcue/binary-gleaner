{
  "sha": "d5a6313e1c4c748a7e744514dbabfa001636f09a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDVhNjMxM2UxYzRjNzQ4YTdlNzQ0NTE0ZGJhYmZhMDAxNjM2ZjA5YQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T17:59:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T18:00:08Z"
    },
    "message": "gdb: add option to reverse order of _initialize function calls\n\nAn earlier patch in this series fixed a dependency problem between two\n_initialize functions.  That problem was uncovered by reversing the\norder of the initialize function calls.\n\nIn short, symtab.c tried to add the alias \"maintenance\nflush-symbol-cache\" for the command \"maintenance flush symbol-cache\".\nBecause the \"maintenance flush\" prefix command was not yet created (it\nhappens in maint.c, initialized later in this reversed order), the\nadd_alias_cmd function returned NULL.  That result was passed to\ndeprecate_cmd, which didn't expected that value, and that caused a\nsegfault.  This was fixed by changing alias creation functions to take\nthe target command as a cmd_list_element, instead of by name.\n\nThis patch adds a runtime option to reverse the order of the initialize\ncalls at will.  I chose to use an environment variable for this, over a\nparameter (even a \"maintenance\" one), because:\n\n - The init functions are called before the early init commands are\n   executed, so we could use -iex to turn this mode on early enough.\n   This is obvious when you remember that commands / parameters are\n   created by initialize funcitions :).\n\n - This is not something anybody would want to tweak after startup\n   anyway.\n\ngdb/ChangeLog:\n\n\t* make-init-c: Add option to reverse function calls.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/reverse-init-functions.exp: New.\n\nChange-Id: I543e609cf526e7cb145a006a794d0e6851b63f45",
    "tree": {
      "sha": "beebd72f21765cddff02dd70b5facce426d61da9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/beebd72f21765cddff02dd70b5facce426d61da9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d5a6313e1c4c748a7e744514dbabfa001636f09a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5a6313e1c4c748a7e744514dbabfa001636f09a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d5a6313e1c4c748a7e744514dbabfa001636f09a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5a6313e1c4c748a7e744514dbabfa001636f09a/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f39632d9579d3c97f1e50a728efed3c5409747d2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f39632d9579d3c97f1e50a728efed3c5409747d2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f39632d9579d3c97f1e50a728efed3c5409747d2"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 51,
    "deletions": 1
  },
  "files": [
    {
      "sha": "9d06a771ae504c06898f029074a99b4ae8c28947",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d5a6313e1c4c748a7e744514dbabfa001636f09a",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* make-init-c: Add option to reverse function calls.\n+\n 2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* Makefile.in (INIT_FILES_FILTER_OUT): New."
    },
    {
      "sha": "e3c5985f133ed33033087338a776dfd327df80f6",
      "filename": "gdb/make-init-c",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/make-init-c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/make-init-c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/make-init-c?ref=d5a6313e1c4c748a7e744514dbabfa001636f09a",
      "patch": "@@ -42,6 +42,7 @@ set -e\n echo \"/* Do not modify this file.  */\"\n echo \"/* It is created automatically by the Makefile.  */\"\n echo \"#include \\\"defs.h\\\"      /* For initialize_file_ftype.  */\"\n+echo \"#include <algorithm>\"\n echo \"\"\n sed -n -e 's/^\\(_initialize_[a-zA-Z0-9_]*\\) ()$/\\1/p' \"$@\" | while read -r name; do\n   echo \"extern initialize_file_ftype $name;\"\n@@ -51,7 +52,19 @@ echo \"void initialize_all_files ();\"\n echo \"void\"\n echo \"initialize_all_files ()\"\n echo \"{\"\n+echo \"  std::vector<initialize_file_ftype *> functions =\"\n+echo \"    {\"\n sed -n -e 's/^\\(_initialize_[a-zA-Z0-9_]*\\) ()$/\\1/p' \"$@\" | while read -r name; do\n-  echo \"  $name ();\"\n+  echo \"      $name,\"\n done\n+echo \"    };\"\n+echo \"\"\n+echo \"  /* If GDB_REVERSE_INIT_FUNCTIONS is set (any value), reverse the\"\n+echo \"     order in which initialization functions are called.  This is\"\n+echo \"     used by the testsuite.  */\"\n+echo \"  if (getenv (\\\"GDB_REVERSE_INIT_FUNCTIONS\\\") != nullptr)\"\n+echo \"    std::reverse (functions.begin (), functions.end ());\"\n+echo \"\"\n+echo \"  for (initialize_file_ftype *function : functions)\"\n+echo \"    function ();\"\n echo \"}\""
    },
    {
      "sha": "e2a95d48c33e25f80038b36a219b99f8f8e6899c",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d5a6313e1c4c748a7e744514dbabfa001636f09a",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdb.base/reverse-init-functions.exp: New.\n+\n 2021-05-27  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/27919"
    },
    {
      "sha": "76fa793acb3e7d843741d897c7ccc23dfb985efd",
      "filename": "gdb/testsuite/gdb.base/reverse-init-functions.exp",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/testsuite/gdb.base/reverse-init-functions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5a6313e1c4c748a7e744514dbabfa001636f09a/gdb/testsuite/gdb.base/reverse-init-functions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/reverse-init-functions.exp?ref=d5a6313e1c4c748a7e744514dbabfa001636f09a",
      "patch": "@@ -0,0 +1,29 @@\n+# Copyright 2020-2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test reversing the order of initialize functions calls, during GDB startup.\n+#\n+# The intent is to catch possible unintended dependencies between two\n+# initialize functions, where one depends on the other running before it.\n+\n+standard_testfile\n+\n+save_vars { env(GDB_REVERSE_INIT_FUNCTIONS) } {\n+    setenv GDB_REVERSE_INIT_FUNCTIONS 1\n+    clean_restart\n+}\n+\n+# Verify that GDB has started and is ready to accept commands.\n+gdb_test \"print 12321\" \" = 12321\""
    }
  ]
}