{
  "sha": "183445093ebd6be285e29f75b877e62a723918c6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTgzNDQ1MDkzZWJkNmJlMjg1ZTI5Zjc1Yjg3N2U2MmE3MjM5MThjNg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-01-25T13:16:06Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-01-25T13:16:06Z"
    },
    "message": "Prevent a potential illegal memory access in readelf when parsing a note with a zero name size.\n\n\tPR 24131\n\t* readelf.c (process_notes_at): Prevent an illegal memory access\n\twhen the note's namesize is zero.\n\t(decode_tic6x_unwind_bytecode): Add code to handle the case where\n\tno registers are specified in a frame pop instruction.",
    "tree": {
      "sha": "e2cded412b9707f6f31ad6f88cc697a54d1ee6fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e2cded412b9707f6f31ad6f88cc697a54d1ee6fc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/183445093ebd6be285e29f75b877e62a723918c6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/183445093ebd6be285e29f75b877e62a723918c6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/183445093ebd6be285e29f75b877e62a723918c6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/183445093ebd6be285e29f75b877e62a723918c6/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9ed1348c2008f54368f0fd989a0bf2de8b93329a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ed1348c2008f54368f0fd989a0bf2de8b93329a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9ed1348c2008f54368f0fd989a0bf2de8b93329a"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 28,
    "deletions": 13
  },
  "files": [
    {
      "sha": "a5f9bdef48d11fcfa60a86be460607036d1a244c",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/183445093ebd6be285e29f75b877e62a723918c6/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/183445093ebd6be285e29f75b877e62a723918c6/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=183445093ebd6be285e29f75b877e62a723918c6",
      "patch": "@@ -1,3 +1,11 @@\n+2019-01-25  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24131\n+\t* readelf.c (process_notes_at): Prevent an illegal memory access\n+\twhen the note's namesize is zero.\n+\t(decode_tic6x_unwind_bytecode): Add code to handle the case where\n+\tno registers are specified in a frame pop instruction.\n+\n 2019-01-25  Nick Clifton  <nickc@redhat.com>\n \n \t* po/bg.po: Updated Bulgarian translation."
    },
    {
      "sha": "77acc6a7b42154b6f992959a8bf89ca4483b91d2",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 20,
      "deletions": 13,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/183445093ebd6be285e29f75b877e62a723918c6/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/183445093ebd6be285e29f75b877e62a723918c6/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=183445093ebd6be285e29f75b877e62a723918c6",
      "patch": "@@ -8852,21 +8852,28 @@ decode_tic6x_unwind_bytecode (Filedata *                 filedata,\n \t    }\n \n \t  printf (_(\"pop frame {\"));\n-\t  reg = nregs - 1;\n-\t  for (i = i * 2; i > 0; i--)\n+\t  if (nregs == 0)\n \t    {\n-\t      if (regpos[reg].offset == i - 1)\n+\t      printf (_(\"*corrupt* - no registers specified\"));\n+\t    }\n+\t  else\n+\t    {\n+\t      reg = nregs - 1;\n+\t      for (i = i * 2; i > 0; i--)\n \t\t{\n-\t\t  name = tic6x_unwind_regnames[regpos[reg].reg];\n-\t\t  if (reg > 0)\n-\t\t    reg--;\n-\t\t}\n-\t      else\n-\t\tname = _(\"[pad]\");\n+\t\t  if (regpos[reg].offset == i - 1)\n+\t\t    {\n+\t\t      name = tic6x_unwind_regnames[regpos[reg].reg];\n+\t\t      if (reg > 0)\n+\t\t\treg--;\n+\t\t    }\n+\t\t  else\n+\t\t    name = _(\"[pad]\");\n \n-\t      fputs (name, stdout);\n-\t      if (i > 1)\n-\t\tprintf (\", \");\n+\t\t  fputs (name, stdout);\n+\t\t  if (i > 1)\n+\t\t    printf (\", \");\n+\t\t}\n \t    }\n \n \t  printf (\"}\");\n@@ -18741,7 +18748,7 @@ process_notes_at (Filedata *           filedata,\n \t one version of Linux (RedHat 6.0) generates corefiles that don't\n \t comply with the ELF spec by failing to include the null byte in\n \t namesz.  */\n-      if (inote.namedata[inote.namesz - 1] != '\\0')\n+      if (inote.namesz > 0 && inote.namedata[inote.namesz - 1] != '\\0')\n \t{\n \t  if ((size_t) (inote.descdata - inote.namedata) == inote.namesz)\n \t    {"
    }
  ]
}