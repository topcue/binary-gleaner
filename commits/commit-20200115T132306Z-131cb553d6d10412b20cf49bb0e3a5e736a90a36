{
  "sha": "131cb553d6d10412b20cf49bb0e3a5e736a90a36",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTMxY2I1NTNkNmQxMDQxMmIyMGNmNDliYjBlM2E1ZTczNmE5MGEzNg==",
  "commit": {
    "author": {
      "name": "Jozef Lawrynowicz",
      "email": "jozef.l@mittosystems.com",
      "date": "2020-01-15T13:17:27Z"
    },
    "committer": {
      "name": "Jozef Lawrynowicz",
      "email": "jozef.l@mittosystems.com",
      "date": "2020-01-15T13:23:06Z"
    },
    "message": "MSP430: Fix relocation overflow when using #lo(EXP) macro\n\ngas/ChangeLog:\n\n2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* config/tc-msp430.c (CHECK_RELOC_MSP430): Always generate 430X\n\trelocations when the target is 430X, except when extracting part of an\n\texpression.\n\t(msp430_srcoperand): Adjust comment.\n\tInitialize the expp member of the msp430_operand_s struct as\n\tappropriate.\n\t(msp430_dstoperand): Likewise.\n\t* testsuite/gas/msp430/msp430.exp: Run new test.\n\t* testsuite/gas/msp430/reloc-lo-430x.d: New test.\n\t* testsuite/gas/msp430/reloc-lo-430x.s: New test.\n\ninclude/ChangeLog:\n\n2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* opcode/msp430.h (enum msp430_expp_e): New.\n\t(struct msp430_operand_s): Add expp member to struct.\n\nld/ChangeLog:\n\n2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\t* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.\n\t* testsuite/ld-msp430-elf/reloc-lo-430x.s: New test.",
    "tree": {
      "sha": "3965e30e6016b4b61a6bb11cb7be81bbd57a99ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3965e30e6016b4b61a6bb11cb7be81bbd57a99ab"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/131cb553d6d10412b20cf49bb0e3a5e736a90a36",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/131cb553d6d10412b20cf49bb0e3a5e736a90a36",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/131cb553d6d10412b20cf49bb0e3a5e736a90a36",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/131cb553d6d10412b20cf49bb0e3a5e736a90a36/comments",
  "author": {
    "login": "jozefl-mitto",
    "id": 36524004,
    "node_id": "MDQ6VXNlcjM2NTI0MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefl-mitto",
    "html_url": "https://github.com/jozefl-mitto",
    "followers_url": "https://api.github.com/users/jozefl-mitto/followers",
    "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs",
    "repos_url": "https://api.github.com/users/jozefl-mitto/repos",
    "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jozefl-mitto",
    "id": 36524004,
    "node_id": "MDQ6VXNlcjM2NTI0MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefl-mitto",
    "html_url": "https://github.com/jozefl-mitto",
    "followers_url": "https://api.github.com/users/jozefl-mitto/followers",
    "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs",
    "repos_url": "https://api.github.com/users/jozefl-mitto/repos",
    "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c24d0e8d4850d4913a1630a53e272c930849406d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c24d0e8d4850d4913a1630a53e272c930849406d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c24d0e8d4850d4913a1630a53e272c930849406d"
    }
  ],
  "stats": {
    "total": 125,
    "additions": 114,
    "deletions": 11
  },
  "files": [
    {
      "sha": "d88d15cbe0e257bd674c3e3c3ea7357c2019e699",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -1,3 +1,16 @@\n+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/tc-msp430.c (CHECK_RELOC_MSP430): Always generate 430X\n+\trelocations when the target is 430X, except when extracting part of an\n+\texpression.\n+\t(msp430_srcoperand): Adjust comment.\n+\tInitialize the expp member of the msp430_operand_s struct as\n+\tappropriate.\n+\t(msp430_dstoperand): Likewise.\n+\t* testsuite/gas/msp430/msp430.exp: Run new test.\n+\t* testsuite/gas/msp430/reloc-lo-430x.d: New test.\n+\t* testsuite/gas/msp430/reloc-lo-430x.s: New test.\n+\n 2020-01-15  Alan Modra  <amodra@gmail.com>\n \n \t* configure.tgt: Add sparc-*-freebsd case."
    },
    {
      "sha": "57538824e9299a0db66d9f38222f55d434cec8f0",
      "filename": "gas/config/tc-msp430.c",
      "status": "modified",
      "additions": 24,
      "deletions": 11,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/config/tc-msp430.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/config/tc-msp430.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-msp430.c?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -275,21 +275,21 @@ target_is_430xv2 (void)\n   return selected_isa == MSP_ISA_430Xv2;\n }\n \n-/* Generate an absolute 16-bit relocation.\n-   For the 430X we generate a relocation without linker range checking\n-    if the value is being used in an extended (ie 20-bit) instruction,\n-    otherwise if have a shifted expression we use a HI reloc.\n+/* Generate an absolute 16-bit relocation, for 430 (!extended_op) instructions\n+   only.\n+   For the 430X we generate a 430 relocation only for the case where part of an\n+   expression is being extracted (e.g. #hi(EXP), #lo(EXP). Otherwise generate\n+   a 430X relocation.\n    For the 430 we generate a relocation without assembler range checking\n-    if we are handling an immediate value or a byte-width instruction.  */\n+   if we are handling an immediate value or a byte-width instruction.  */\n \n #undef  CHECK_RELOC_MSP430\n #define CHECK_RELOC_MSP430(OP)\t\t\t\t\\\n   (target_is_430x ()\t\t\t\t\t\\\n-  ? (extended_op\t\t\t\t\t\\\n-     ? BFD_RELOC_16\t\t\t\t\t\\\n-     : ((OP).vshift == 1)\t\t\t\t\\\n-     ? BFD_RELOC_MSP430_ABS_HI16\t\t\t\\\n-     : BFD_RELOC_MSP430X_ABS16)\t\t\t\t\\\n+   ? ((OP).expp == MSP_EXPP_ALL\t\t\t\t\\\n+       ? BFD_RELOC_MSP430X_ABS16\t\t\t\\\n+       : ((OP).vshift == 1\t\t\t\t\\\n+\t  ? BFD_RELOC_MSP430_ABS_HI16 : BFD_RELOC_16))\t\\\n    : ((imm_op || byte_op)\t\t\t\t\\\n       ? BFD_RELOC_MSP430_16_BYTE : BFD_RELOC_MSP430_16))\n \n@@ -1909,45 +1909,53 @@ msp430_srcoperand (struct msp430_operand_s * op,\n       char *h = l;\n       int vshift = -1;\n       int rval = 0;\n+      /* Use all parts of the constant expression by default.  */\n+      enum msp430_expp_e expp = MSP_EXPP_ALL;\n \n       /* Check if there is:\n \t llo(x) - least significant 16 bits, x &= 0xffff\n \t lhi(x) - x = (x >> 16) & 0xffff,\n \t hlo(x) - x = (x >> 32) & 0xffff,\n \t hhi(x) - x = (x >> 48) & 0xffff\n-\t The value _MUST_ be constant expression: #hlo(1231231231).  */\n+\t The value _MUST_ be an immediate expression: #hlo(1231231231).  */\n \n       *imm_op = TRUE;\n \n       if (strncasecmp (h, \"#llo(\", 5) == 0)\n \t{\n \t  vshift = 0;\n \t  rval = 3;\n+\t  expp = MSP_EXPP_LLO;\n \t}\n       else if (strncasecmp (h, \"#lhi(\", 5) == 0)\n \t{\n \t  vshift = 1;\n \t  rval = 3;\n+\t  expp = MSP_EXPP_LHI;\n \t}\n       else if (strncasecmp (h, \"#hlo(\", 5) == 0)\n \t{\n \t  vshift = 2;\n \t  rval = 3;\n+\t  expp = MSP_EXPP_HLO;\n \t}\n       else if (strncasecmp (h, \"#hhi(\", 5) == 0)\n \t{\n \t  vshift = 3;\n \t  rval = 3;\n+\t  expp = MSP_EXPP_HHI;\n \t}\n       else if (strncasecmp (h, \"#lo(\", 4) == 0)\n \t{\n \t  vshift = 0;\n \t  rval = 2;\n+\t  expp = MSP_EXPP_LO;\n \t}\n       else if (strncasecmp (h, \"#hi(\", 4) == 0)\n \t{\n \t  vshift = 1;\n \t  rval = 2;\n+\t  expp = MSP_EXPP_HI;\n \t}\n \n       op->reg = 0;\t\t/* Reg PC.  */\n@@ -1956,6 +1964,7 @@ msp430_srcoperand (struct msp430_operand_s * op,\n       __tl = h + 1 + rval;\n       op->mode = OP_EXP;\n       op->vshift = vshift;\n+      op->expp = expp;\n \n       end = parse_exp (__tl, &(op->exp));\n       if (end != NULL && *end != 0 && *end != ')' )\n@@ -2167,6 +2176,7 @@ msp430_srcoperand (struct msp430_operand_s * op,\n \t}\n       op->mode = OP_EXP;\n       op->vshift = 0;\n+      op->expp = MSP_EXPP_ALL;\n       if (op->exp.X_op == O_constant)\n \t{\n \t  int x = op->exp.X_add_number;\n@@ -2275,6 +2285,7 @@ msp430_srcoperand (struct msp430_operand_s * op,\n       *h = 0;\n       op->mode = OP_EXP;\n       op->vshift = 0;\n+      op->expp = MSP_EXPP_ALL;\n       end = parse_exp (__tl, &(op->exp));\n       if (end != NULL && *end != 0)\n \t{\n@@ -2348,6 +2359,7 @@ msp430_srcoperand (struct msp430_operand_s * op,\n   op->am = (*l == '-' ? 3 : 1);\n   op->ol = 1;\n   op->vshift = 0;\n+  op->expp = MSP_EXPP_ALL;\n   __tl = l;\n   end = parse_exp (__tl, &(op->exp));\n   if (end != NULL && * end != 0)\n@@ -2382,6 +2394,7 @@ msp430_dstoperand (struct msp430_operand_s * op,\n       op->am = 1;\n       op->ol = 1;\n       op->vshift = 0;\n+      op->expp = MSP_EXPP_ALL;\n       (void) parse_exp (__tl, &(op->exp));\n \n       if (op->exp.X_op != O_constant || op->exp.X_add_number != 0)"
    },
    {
      "sha": "624867f33b4d915302f3c5a41a35ee9c440734e3",
      "filename": "gas/testsuite/gas/msp430/msp430.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/testsuite/gas/msp430/msp430.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/testsuite/gas/msp430/msp430.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/msp430.exp?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -52,4 +52,5 @@ if [expr [istarget \"msp430-*-*\"]]  then {\n     run_dump_test \"attr-430x-large-lower-good\"\n     run_dump_test \"attr-430x-large-any-bad\"\n     run_dump_test \"attr-430x-large-any-good\"\n+    run_dump_test \"reloc-lo-430x\"\n }"
    },
    {
      "sha": "78adb84490da95f4697f8e299c147ca5cc301029",
      "filename": "gas/testsuite/gas/msp430/reloc-lo-430x.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/testsuite/gas/msp430/reloc-lo-430x.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/testsuite/gas/msp430/reloc-lo-430x.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/reloc-lo-430x.d?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -0,0 +1,5 @@\n+#as: -ml\n+#readelf: -r\n+#...\n+.*R_MSP430_ABS16.*P \\+ 0\n+#..."
    },
    {
      "sha": "a593ac4014356e8fdec8b88e49e5c19d97b3ff7e",
      "filename": "gas/testsuite/gas/msp430/reloc-lo-430x.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/testsuite/gas/msp430/reloc-lo-430x.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/gas/testsuite/gas/msp430/reloc-lo-430x.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/reloc-lo-430x.s?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -0,0 +1,22 @@\n+.text\n+\t.balign 2\n+\t.global\tfoo\n+\t.type\tfoo, @function\n+foo:\n+  MOV.W\t#lo (P), R8\n+\tRETA\n+\t.size\tfoo, .-foo\n+\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+\tCALLA\t#foo\n+.L4:\n+\tBRA\t#.L4\n+\t.size\tmain, .-main\n+\t.section\t.bss,\"aw\",@nobits\n+\t.balign 2\n+\t.global\tP\n+P:\n+\t.zero\t4"
    },
    {
      "sha": "f6ad34d12294e3a152bd9f23613850de5c2bd4ed",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* opcode/msp430.h (enum msp430_expp_e): New.\n+\t(struct msp430_operand_s): Add expp member to struct.\n+\n 2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>\n \n \t* elf/arc-cpu.def: Update ARC cpu list."
    },
    {
      "sha": "96fe674c8fb54c2af4d8aec3ad3a02311abf7f63",
      "filename": "include/opcode/msp430.h",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/include/opcode/msp430.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/include/opcode/msp430.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/msp430.h?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -21,13 +21,28 @@\n #ifndef __MSP430_H_\n #define __MSP430_H_\n \n+enum msp430_expp_e\n+{\n+  MSP_EXPP_ALL = 0,\t/* Use full the value of the expression - default.  */\n+  MSP_EXPP_LO,\t\t/* Extract least significant word from expression.  */\n+  MSP_EXPP_HI,\t\t/* Extract 2nd word from expression.  */\n+  MSP_EXPP_LLO,\t\t/* Extract least significant word from an\n+\t\t\t   immediate value.  */\n+  MSP_EXPP_LHI,\t\t/* Extract 2nd word from an immediate value.  */\n+  MSP_EXPP_HLO,\t\t/* Extract 3rd word from an immediate value.  */\n+  MSP_EXPP_HHI,\t\t/* Extract 4th word from an immediate value.  */\n+};\n+\n struct msp430_operand_s\n {\n   int ol;\t/* Operand length words.  */\n   int am;\t/* Addr mode.  */\n   int reg;\t/* Register.  */\n   int mode;\t/* Operand mode.  */\n   int vshift;   /* Number of bytes to shift operand down.  */\n+  enum msp430_expp_e expp;\t/* For when the operand is a constant\n+\t\t\t\t   expression, the part of the expression to\n+\t\t\t\t   extract.  */\n #define OP_REG\t\t0\n #define OP_EXP\t\t1\n #ifndef DASM_SECTION"
    },
    {
      "sha": "7e83e2b822eeb3b239cf35d2d2f06e862202fbfb",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* testsuite/ld-msp430-elf/msp430-elf.exp: Run new test.\n+\t* testsuite/ld-msp430-elf/reloc-lo-430x.s: New test.\n+\n 2020-01-15  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output."
    },
    {
      "sha": "777b358a745724660c8b5847fc331957d1f1e8a2",
      "filename": "ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/ld/testsuite/ld-msp430-elf/msp430-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/msp430-elf.exp?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -174,6 +174,8 @@ run_ld_link_tests $msp430eithershuffletests\n run_ld_link_tests $msp430warntests\n \n run_dump_test valid-map\n+run_ld_link_tests {{ \"Check no reloc overflow with #lo and data in the upper region\"\n+        \"-m msp430X\" \"\" \"\" {reloc-lo-430x.s} {} \"reloc-lo-430x\"}}\n \n # Don't run data region tests if a data region is specified\n if {[string match \"*-mdata-region*\" [board_info [target_info name] multilib_flags]]} {"
    },
    {
      "sha": "8709e797d14ad8028462828ba4a6d9dd0a053cff",
      "filename": "ld/testsuite/ld-msp430-elf/reloc-lo-430x.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/131cb553d6d10412b20cf49bb0e3a5e736a90a36/ld/testsuite/ld-msp430-elf/reloc-lo-430x.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/131cb553d6d10412b20cf49bb0e3a5e736a90a36/ld/testsuite/ld-msp430-elf/reloc-lo-430x.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-msp430-elf/reloc-lo-430x.s?ref=131cb553d6d10412b20cf49bb0e3a5e736a90a36",
      "patch": "@@ -0,0 +1,22 @@\n+.text\n+\t.balign 2\n+\t.global\tfoo\n+\t.type\tfoo, @function\n+foo:\n+  MOV.W\t#lo (P), R8\n+\tRETA\n+\t.size\tfoo, .-foo\n+\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+\tCALLA\t#foo\n+.L4:\n+\tBRA\t#.L4\n+\t.size\tmain, .-main\n+\t.section\t.bss,\"aw\",@nobits\n+\t.balign 2\n+\t.global\tP\n+P:\n+\t.zero 4"
    }
  ]
}