{
  "sha": "67411cbf63a0e841ac6801bf59c854fed8b8dd80",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njc0MTFjYmY2M2EwZTg0MWFjNjgwMWJmNTljODU0ZmVkOGI4ZGQ4MA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-07-28T05:19:07Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-07-28T07:26:14Z"
    },
    "message": "PR25022 testcase segfault for generic ELF linker targets\n\nEven a testcase that is expected to fail shouldn't segfault.\n\n\t* elf.c (assign_section_numbers): Comment.  Don't segfault on\n\tdiscarded sections when setting linked-to section for generic\n\tELF linker.\n\t* elflink.c (bfd_elf_match_symbols_in_sections): Allow NULL info.",
    "tree": {
      "sha": "be0ab703152c22ed7f341aa5520aece81bc155ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/be0ab703152c22ed7f341aa5520aece81bc155ae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/67411cbf63a0e841ac6801bf59c854fed8b8dd80",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/67411cbf63a0e841ac6801bf59c854fed8b8dd80",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/67411cbf63a0e841ac6801bf59c854fed8b8dd80",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/67411cbf63a0e841ac6801bf59c854fed8b8dd80/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f437dadd89944254165d076f55f29f7290c00aed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f437dadd89944254165d076f55f29f7290c00aed",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f437dadd89944254165d076f55f29f7290c00aed"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 36,
    "deletions": 39
  },
  "files": [
    {
      "sha": "1e7fb4a87537278cede4eca4d0bff43ab4c6a0d4",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67411cbf63a0e841ac6801bf59c854fed8b8dd80/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67411cbf63a0e841ac6801bf59c854fed8b8dd80/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=67411cbf63a0e841ac6801bf59c854fed8b8dd80",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf.c (assign_section_numbers): Comment.  Don't segfault on\n+\tdiscarded sections when setting linked-to section for generic\n+\tELF linker.\n+\t* elflink.c (bfd_elf_match_symbols_in_sections): Allow NULL info.\n+\n 2020-07-27  Alan Modra  <amodra@gmail.com>\n \n \t* xcofflink.c (xcoff_need_ldrel_p): Accept --just-symbols symbols and"
    },
    {
      "sha": "59fde16ca794484eedcf4577a614266b433f7590",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 27,
      "deletions": 37,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67411cbf63a0e841ac6801bf59c854fed8b8dd80/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67411cbf63a0e841ac6801bf59c854fed8b8dd80/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=67411cbf63a0e841ac6801bf59c854fed8b8dd80",
      "patch": "@@ -3704,7 +3704,8 @@ elf_get_reloc_section (asection *reloc_sec)\n \n /* Assign all ELF section numbers.  The dummy first section is handled here\n    too.  The link/info pointers for the standard section types are filled\n-   in here too, while we're at it.  */\n+   in here too, while we're at it.  LINK_INFO will be 0 when arriving\n+   here for objcopy, and when using the generic ELF linker.  */\n \n static bfd_boolean\n assign_section_numbers (bfd *abfd, struct bfd_link_info *link_info)\n@@ -3889,48 +3890,37 @@ assign_section_numbers (bfd *abfd, struct bfd_link_info *link_info)\n \t  s = elf_linked_to_section (sec);\n \t  if (s)\n \t    {\n-\t      /* elf_linked_to_section points to the input section.  */\n-\t      if (link_info != NULL)\n+\t      /* Check discarded linkonce section.  */\n+\t      if (discarded_section (s))\n \t\t{\n-\t\t  /* Check discarded linkonce section.  */\n-\t\t  if (discarded_section (s))\n-\t\t    {\n-\t\t      asection *kept;\n-\t\t      _bfd_error_handler\n-\t\t\t/* xgettext:c-format */\n-\t\t\t(_(\"%pB: sh_link of section `%pA' points to\"\n-\t\t\t   \" discarded section `%pA' of `%pB'\"),\n-\t\t\t abfd, d->this_hdr.bfd_section,\n-\t\t\t s, s->owner);\n-\t\t      /* Point to the kept section if it has the same\n-\t\t\t size as the discarded one.  */\n-\t\t      kept = _bfd_elf_check_kept_section (s, link_info);\n-\t\t      if (kept == NULL)\n-\t\t\t{\n-\t\t\t  bfd_set_error (bfd_error_bad_value);\n-\t\t\t  return FALSE;\n-\t\t\t}\n-\t\t      s = kept;\n-\t\t    }\n-\n-\t\t  s = s->output_section;\n-\t\t  BFD_ASSERT (s != NULL);\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  /* Handle objcopy. */\n-\t\t  if (s->output_section == NULL)\n+\t\t  asection *kept;\n+\t\t  _bfd_error_handler\n+\t\t    /* xgettext:c-format */\n+\t\t    (_(\"%pB: sh_link of section `%pA' points to\"\n+\t\t       \" discarded section `%pA' of `%pB'\"),\n+\t\t     abfd, d->this_hdr.bfd_section, s, s->owner);\n+\t\t  /* Point to the kept section if it has the same\n+\t\t     size as the discarded one.  */\n+\t\t  kept = _bfd_elf_check_kept_section (s, link_info);\n+\t\t  if (kept == NULL)\n \t\t    {\n-\t\t      _bfd_error_handler\n-\t\t\t/* xgettext:c-format */\n-\t\t\t(_(\"%pB: sh_link of section `%pA' points to\"\n-\t\t\t   \" removed section `%pA' of `%pB'\"),\n-\t\t\t abfd, d->this_hdr.bfd_section, s, s->owner);\n \t\t      bfd_set_error (bfd_error_bad_value);\n \t\t      return FALSE;\n \t\t    }\n-\t\t  s = s->output_section;\n+\t\t  s = kept;\n+\t\t}\n+\t      /* Handle objcopy. */\n+\t      else if (s->output_section == NULL)\n+\t\t{\n+\t\t  _bfd_error_handler\n+\t\t    /* xgettext:c-format */\n+\t\t    (_(\"%pB: sh_link of section `%pA' points to\"\n+\t\t       \" removed section `%pA' of `%pB'\"),\n+\t\t     abfd, d->this_hdr.bfd_section, s, s->owner);\n+\t\t  bfd_set_error (bfd_error_bad_value);\n+\t\t  return FALSE;\n \t\t}\n+\t      s = s->output_section;\n \t      d->this_hdr.sh_link = elf_section_data (s)->this_idx;\n \t    }\n \t  else"
    },
    {
      "sha": "a3823e63222d09984e75c91304d20b6fe46f7687",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67411cbf63a0e841ac6801bf59c854fed8b8dd80/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67411cbf63a0e841ac6801bf59c854fed8b8dd80/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=67411cbf63a0e841ac6801bf59c854fed8b8dd80",
      "patch": "@@ -8179,7 +8179,7 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n       if (isymbuf1 == NULL)\n \tgoto done;\n \n-      if (!info->reduce_memory_overheads)\n+      if (info != NULL && !info->reduce_memory_overheads)\n \t{\n \t  ssymbuf1 = elf_create_symbuf (symcount1, isymbuf1);\n \t  elf_tdata (bfd1)->symbuf = ssymbuf1;\n@@ -8193,7 +8193,7 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n       if (isymbuf2 == NULL)\n \tgoto done;\n \n-      if (ssymbuf1 != NULL && !info->reduce_memory_overheads)\n+      if (ssymbuf1 != NULL && info != NULL && !info->reduce_memory_overheads)\n \t{\n \t  ssymbuf2 = elf_create_symbuf (symcount2, isymbuf2);\n \t  elf_tdata (bfd2)->symbuf = ssymbuf2;"
    }
  ]
}