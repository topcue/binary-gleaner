{
  "sha": "982c3a65ca5dbea8d6de3afd934f0a06fef54383",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTgyYzNhNjVjYTVkYmVhOGQ2ZGUzYWZkOTM0ZjBhMDZmZWY1NDM4Mw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-18T06:14:52Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-18T14:15:15Z"
    },
    "message": "sim: move -Werror disabling to Makefile\n\nFor the ports that still don't build with -Werror, rather than disable\nthe flag at configure time, do it at make time.  This will allow us to\nunify these tests in the common sim configure script.",
    "tree": {
      "sha": "416ece9ed53e3350c23a09b381139bdc4cc9c6d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/416ece9ed53e3350c23a09b381139bdc4cc9c6d7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/982c3a65ca5dbea8d6de3afd934f0a06fef54383",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/982c3a65ca5dbea8d6de3afd934f0a06fef54383",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/982c3a65ca5dbea8d6de3afd934f0a06fef54383",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/982c3a65ca5dbea8d6de3afd934f0a06fef54383/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f8414df7a533cccd39bf19c0e311975d9ededde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f8414df7a533cccd39bf19c0e311975d9ededde",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f8414df7a533cccd39bf19c0e311975d9ededde"
    }
  ],
  "stats": {
    "total": 1781,
    "additions": 971,
    "deletions": 810
  },
  "files": [
    {
      "sha": "70c02b85d257ec9019780bfe853720bd86ff14e0",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* m4/sim_ac_option_warnings.m4: Delete 1st arg to macro.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac: Output arch-subdir.mk."
    },
    {
      "sha": "97bea6de12587801612b8dbe0fbef7128579a7dc",
      "filename": "sim/aarch64/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/aarch64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/aarch64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* cpustate.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/aarch64/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/aarch64/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/aarch64/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "866d168e46266ad7cdb8fc3d18828afbd3a83e3a",
      "filename": "sim/arm/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/arm/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/arm/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/arm/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/arm/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/arm/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "0d94305280b032b2aa8f33d03d4d53f4d3c742b0",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/avr/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/avr/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/avr/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "9507033ef2749fc24784f7da33b67e3f866283af",
      "filename": "sim/bfin/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bfin/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bfin/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* dv-bfin_cec.c: Include sim-signal.h."
    },
    {
      "sha": "1344e1e5f894f50ea7d985d265a19a1effaad7f9",
      "filename": "sim/bfin/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bfin/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bfin/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11579,15 +11579,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "08d5af8edfa15550e15d5d8ce735db16e3d08a24",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* bpf.c: Include sim-signal.h."
    },
    {
      "sha": "d165febdd34b0503bffe3c13b57c27952924f657",
      "filename": "sim/bpf/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -41,6 +41,9 @@ SIM_EXTRA_DEPS = \\\n \n SIM_EXTRA_CLEAN = bpf-clean\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n # cgen support, enable with --enable-cgen-maint"
    },
    {
      "sha": "15f8b7ce8204e0d59ba9046f3c2b358c90417857",
      "filename": "sim/bpf/configure",
      "status": "modified",
      "additions": 40,
      "deletions": 38,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -772,10 +772,10 @@ enable_sim_inline\n enable_sim_bitsize\n enable_sim_scache\n enable_sim_default_model\n+enable_cgen_maint\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_cgen_maint\n enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n@@ -1420,12 +1420,12 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-cgen-maint=DIR build cgen generated files\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-cgen-maint=DIR build cgen generated files\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n \n@@ -11246,6 +11246,40 @@ fi\n \n \n \n+cgen_maint=no\n+cgen=guile\n+cgendir='$(srcdir)/../../cgen'\n+# Check whether --enable-cgen-maint was given.\n+if test \"${enable_cgen_maint+set}\" = set; then :\n+  enableval=$enable_cgen_maint; case \"${enableval}\" in\n+  yes)\tcgen_maint=yes ;;\n+  no)\tcgen_maint=no ;;\n+  *)\n+\t# Argument is a directory where cgen can be found.  In some\n+\t# future world cgen could be installable, but right now this\n+\t# is not the case.  Instead we assume the directory is a path\n+\t# to the cgen source tree.\n+\tcgen_maint=yes\n+        if test -r ${enableval}/iformat.scm; then\n+          # This looks like a cgen source tree.\n+\t  cgendir=${enableval}\n+        else\n+\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n+        fi\n+\t;;\n+esac\n+fi\n+if test x${cgen_maint} != xno ; then\n+  CGEN_MAINT=''\n+else\n+  CGEN_MAINT='#'\n+fi\n+\n+\n+\n+\n+\n+\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11256,12 +11290,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -11343,40 +11379,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-cgen_maint=no\n-cgen=guile\n-cgendir='$(srcdir)/../../cgen'\n-# Check whether --enable-cgen-maint was given.\n-if test \"${enable_cgen_maint+set}\" = set; then :\n-  enableval=$enable_cgen_maint; case \"${enableval}\" in\n-  yes)\tcgen_maint=yes ;;\n-  no)\tcgen_maint=no ;;\n-  *)\n-\t# Argument is a directory where cgen can be found.  In some\n-\t# future world cgen could be installable, but right now this\n-\t# is not the case.  Instead we assume the directory is a path\n-\t# to the cgen source tree.\n-\tcgen_maint=yes\n-        if test -r ${enableval}/iformat.scm; then\n-          # This looks like a cgen source tree.\n-\t  cgendir=${enableval}\n-        else\n-\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n-        fi\n-\t;;\n-esac\n-fi\n-if test x${cgen_maint} != xno ; then\n-  CGEN_MAINT=''\n-else\n-  CGEN_MAINT='#'\n-fi\n-\n-\n-\n-\n-\n-\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "a4138c097a89b1f2ca9a3bbdc9e7aab7fe8975b9",
      "filename": "sim/bpf/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/bpf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -7,7 +7,6 @@ SIM_AC_COMMON\n SIM_AC_OPTION_BITSIZE([64])\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL([bpf-def])\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "a05768c455146a4c974809246cc695288741c97f",
      "filename": "sim/cr16/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cr16/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cr16/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/cr16/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cr16/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cr16/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "34a6264972f672cdafeb1017ab3ca1ecc404fd7f",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* traps.c: Include sim-signal.h."
    },
    {
      "sha": "0b4b8f5c530bd9505c5bbd3c8ad622deabe51fb3",
      "filename": "sim/cris/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -39,6 +39,9 @@ SIM_EXTRA_DEPS = \\\n \n SIM_EXTRA_CLEAN = cris-clean\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n arch = cris"
    },
    {
      "sha": "7d82dbde25434320383eed229a4eec3852de20bf",
      "filename": "sim/cris/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 105,
      "changes": 212,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -770,12 +770,12 @@ enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n enable_sim_scache\n-enable_werror\n-enable_build_warnings\n-enable_sim_build_warnings\n enable_sim_hardware\n enable_sim_default_model\n enable_cgen_maint\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1416,16 +1416,16 @@ Optional Features:\n                           Specify which functions should be inlined\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n-  --enable-werror         treat compile warnings as errors\n-  --enable-build-warnings enable build-time compiler warnings if gcc is used\n-  --enable-sim-build-warnings\n-                          enable SIM specific build-time compiler warnings if\n-                          gcc is used\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n   --enable-cgen-maint=DIR build cgen generated files\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11169,103 +11169,6 @@ fi\n \n \n \n-# Check whether --enable-werror was given.\n-if test \"${enable_werror+set}\" = set; then :\n-  enableval=$enable_werror; case \"${enableval}\" in\n-     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n-     no | n)  ERROR_ON_WARNING=\"no\" ;;\n-     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n-   esac\n-fi\n-\n-\n-# Enable -Werror by default when using gcc\n-if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n-fi\n-\n-WERROR_CFLAGS=\"\"\n-\n-build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n--Wpointer-sign \\\n--Wno-unused -Wunused-value -Wunused-function \\\n--Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n--Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n--Wold-style-declaration -Wold-style-definition\"\n-\n-# Enable -Wno-format by default when using gcc on mingw since many\n-# GCC versions complain about %I64.\n-case \"${host}\" in\n-  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n-  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n-esac\n-\n-# Check whether --enable-build-warnings was given.\n-if test \"${enable_build_warnings+set}\" = set; then :\n-  enableval=$enable_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-# Check whether --enable-sim-build-warnings was given.\n-if test \"${enable_sim_build_warnings+set}\" = set; then :\n-  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-WARN_CFLAGS=\"\"\n-if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n-$as_echo_n \"checking compiler warning flags... \" >&6; }\n-    # Separate out the -Werror flag as some files just cannot be\n-    # compiled with it enabled.\n-    for w in ${build_warnings}; do\n-\tcase $w in\n-\t-Werr*) WERROR_CFLAGS=-Werror ;;\n-\t*) # Check that GCC accepts it\n-\t    saved_CFLAGS=\"$CFLAGS\"\n-\t    CFLAGS=\"$CFLAGS -Werror $w\"\n-\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\t    CFLAGS=\"$saved_CFLAGS\"\n-\tesac\n-    done\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n-$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n-fi\n-\n-\n hardware=\"cfi core pal glue rv cris cris_900000xx\"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\"\n@@ -11415,6 +11318,105 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+  ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS -Werror $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "d94eabb683a9b88572e194b817b79adaa9fbb7b7",
      "filename": "sim/cris/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/cris/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -5,7 +5,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n SIM_AC_COMMON\n \n SIM_AC_OPTION_SCACHE(16384)\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_HARDWARE(rv cris cris_900000xx)\n \n # The default model shouldn't matter as long as there's a BFD."
    },
    {
      "sha": "7157567847a27a387a6a6ab008be9a7f977f45b8",
      "filename": "sim/d10v/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/d10v/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/d10v/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/d10v/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/d10v/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/d10v/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "94a0cb92b568a17ded84497bcbdf5f2306168a77",
      "filename": "sim/erc32/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "278b4792daeb8e00ce71dfbb7c5ba2a56c02e616",
      "filename": "sim/erc32/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -36,6 +36,9 @@ SIM_EXTRA_CLEAN = clean-sis\n # behaviour of UART interrupt routines ...\n SIM_EXTRA_CFLAGS += -DFAST_UART -I$(srcroot)\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n # `sis' doesn't need interf.o."
    },
    {
      "sha": "04122f7ee26c0a1825af7e2c22d21c46ec4d5a0d",
      "filename": "sim/erc32/configure",
      "status": "modified",
      "additions": 99,
      "deletions": 97,
      "changes": 196,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11141,103 +11141,6 @@ fi\n \n \n \n-# Check whether --enable-werror was given.\n-if test \"${enable_werror+set}\" = set; then :\n-  enableval=$enable_werror; case \"${enableval}\" in\n-     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n-     no | n)  ERROR_ON_WARNING=\"no\" ;;\n-     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n-   esac\n-fi\n-\n-\n-# Enable -Werror by default when using gcc\n-if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n-fi\n-\n-WERROR_CFLAGS=\"\"\n-\n-build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n--Wpointer-sign \\\n--Wno-unused -Wunused-value -Wunused-function \\\n--Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n--Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n--Wold-style-declaration -Wold-style-definition\"\n-\n-# Enable -Wno-format by default when using gcc on mingw since many\n-# GCC versions complain about %I64.\n-case \"${host}\" in\n-  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n-  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n-esac\n-\n-# Check whether --enable-build-warnings was given.\n-if test \"${enable_build_warnings+set}\" = set; then :\n-  enableval=$enable_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-# Check whether --enable-sim-build-warnings was given.\n-if test \"${enable_sim_build_warnings+set}\" = set; then :\n-  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-WARN_CFLAGS=\"\"\n-if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n-$as_echo_n \"checking compiler warning flags... \" >&6; }\n-    # Separate out the -Werror flag as some files just cannot be\n-    # compiled with it enabled.\n-    for w in ${build_warnings}; do\n-\tcase $w in\n-\t-Werr*) WERROR_CFLAGS=-Werror ;;\n-\t*) # Check that GCC accepts it\n-\t    saved_CFLAGS=\"$CFLAGS\"\n-\t    CFLAGS=\"$CFLAGS -Werror $w\"\n-\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\t    CFLAGS=\"$saved_CFLAGS\"\n-\tesac\n-    done\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n-$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n-fi\n-\n-\n # In the Cygwin environment, we need some additional flags.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for cygwin\" >&5\n $as_echo_n \"checking for cygwin... \" >&6; }\n@@ -11380,6 +11283,105 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+  ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS -Werror $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "3cb35d80f576203479c3ff24b0be6b4474148ff4",
      "filename": "sim/erc32/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/erc32/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -18,7 +18,6 @@ AC_INIT(Makefile.in)\n AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n-SIM_AC_OPTION_WARNINGS(no)\n \n # In the Cygwin environment, we need some additional flags.\n AC_CACHE_CHECK([for cygwin], sim_cv_os_cygwin,"
    },
    {
      "sha": "bee0c95b442e67e30988170b1408b8a50a6d053e",
      "filename": "sim/example-synacor/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/example-synacor/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/example-synacor/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* sim-main.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/example-synacor/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/example-synacor/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/example-synacor/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "c984f11781338fef83a6e5f257063d70ac6acbf9",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interrupts.c: Include sim-signal.h."
    },
    {
      "sha": "5356add6f0ac45b52d3d184181a1e4a0516a7397",
      "filename": "sim/frv/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -40,6 +40,9 @@ SIM_EXTRA_CFLAGS = @sim_trapdump@\n \n SIM_EXTRA_CLEAN = frv-clean\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n arch = frv"
    },
    {
      "sha": "685a3d1a20a486a7ac523d2f3e43c63e72239dd0",
      "filename": "sim/frv/configure",
      "status": "modified",
      "additions": 60,
      "deletions": 58,
      "changes": 118,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -772,11 +772,11 @@ enable_maintainer_mode\n enable_sim_inline\n enable_sim_scache\n enable_sim_default_model\n+enable_cgen_maint\n+enable_sim_trapdump\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_cgen_maint\n-enable_sim_trapdump\n enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n@@ -1420,13 +1420,13 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-cgen-maint=DIR build cgen generated files\n+  --enable-sim-trapdump   Make unknown traps dump the registers\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-cgen-maint=DIR build cgen generated files\n-  --enable-sim-trapdump   Make unknown traps dump the registers\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n \n@@ -11188,6 +11188,58 @@ fi\n \n \n \n+cgen_maint=no\n+cgen=guile\n+cgendir='$(srcdir)/../../cgen'\n+# Check whether --enable-cgen-maint was given.\n+if test \"${enable_cgen_maint+set}\" = set; then :\n+  enableval=$enable_cgen_maint; case \"${enableval}\" in\n+  yes)\tcgen_maint=yes ;;\n+  no)\tcgen_maint=no ;;\n+  *)\n+\t# Argument is a directory where cgen can be found.  In some\n+\t# future world cgen could be installable, but right now this\n+\t# is not the case.  Instead we assume the directory is a path\n+\t# to the cgen source tree.\n+\tcgen_maint=yes\n+        if test -r ${enableval}/iformat.scm; then\n+          # This looks like a cgen source tree.\n+\t  cgendir=${enableval}\n+        else\n+\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n+        fi\n+\t;;\n+esac\n+fi\n+if test x${cgen_maint} != xno ; then\n+  CGEN_MAINT=''\n+else\n+  CGEN_MAINT='#'\n+fi\n+\n+\n+\n+\n+\n+#\n+# Enable making unknown traps dump out registers\n+#\n+# Check whether --enable-sim-trapdump was given.\n+if test \"${enable_sim_trapdump+set}\" = set; then :\n+  enableval=$enable_sim_trapdump; case \"${enableval}\" in\n+  yes) sim_trapdump=\"-DTRAPDUMP=1\";;\n+  no)  sim_trapdump=\"-DTRAPDUMP=0\";;\n+  *)   as_fn_error $? \"\\\"Unknown value $enableval passed to --enable-sim-trapdump\\\"\" \"$LINENO\" 5; sim_trapdump=\"\";;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$sim_trapdump\" != x\"\"; then\n+  echo \"Setting sim_trapdump = $sim_trapdump\" 6>&1\n+fi\n+else\n+  sim_trapdump=\"\"\n+fi\n+\n+\n+\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11198,12 +11250,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -11285,58 +11339,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-cgen_maint=no\n-cgen=guile\n-cgendir='$(srcdir)/../../cgen'\n-# Check whether --enable-cgen-maint was given.\n-if test \"${enable_cgen_maint+set}\" = set; then :\n-  enableval=$enable_cgen_maint; case \"${enableval}\" in\n-  yes)\tcgen_maint=yes ;;\n-  no)\tcgen_maint=no ;;\n-  *)\n-\t# Argument is a directory where cgen can be found.  In some\n-\t# future world cgen could be installable, but right now this\n-\t# is not the case.  Instead we assume the directory is a path\n-\t# to the cgen source tree.\n-\tcgen_maint=yes\n-        if test -r ${enableval}/iformat.scm; then\n-          # This looks like a cgen source tree.\n-\t  cgendir=${enableval}\n-        else\n-\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n-        fi\n-\t;;\n-esac\n-fi\n-if test x${cgen_maint} != xno ; then\n-  CGEN_MAINT=''\n-else\n-  CGEN_MAINT='#'\n-fi\n-\n-\n-\n-\n-\n-#\n-# Enable making unknown traps dump out registers\n-#\n-# Check whether --enable-sim-trapdump was given.\n-if test \"${enable_sim_trapdump+set}\" = set; then :\n-  enableval=$enable_sim_trapdump; case \"${enableval}\" in\n-  yes) sim_trapdump=\"-DTRAPDUMP=1\";;\n-  no)  sim_trapdump=\"-DTRAPDUMP=0\";;\n-  *)   as_fn_error $? \"\\\"Unknown value $enableval passed to --enable-sim-trapdump\\\"\" \"$LINENO\" 5; sim_trapdump=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_trapdump\" != x\"\"; then\n-  echo \"Setting sim_trapdump = $sim_trapdump\" 6>&1\n-fi\n-else\n-  sim_trapdump=\"\"\n-fi\n-\n-\n-\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "f652e269a3b858665f05c87d0f7bcc81b54c5ce6",
      "filename": "sim/frv/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/frv/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -6,7 +6,6 @@ SIM_AC_COMMON\n \n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(fr500)\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n #"
    },
    {
      "sha": "e57f29fcd40d6a393e07b2c309ce436e36f68e86",
      "filename": "sim/ft32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/ft32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/ft32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/ft32/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/ft32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/ft32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "bd506aad35dac407e0d426c27a47f79c4fa1debe",
      "filename": "sim/h8300/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* compile.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/h8300/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/h8300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/h8300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "737fad363a9fa03ac0c051a7dcdc613551d23871",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* iq2000.c: Include sim-signal.h."
    },
    {
      "sha": "f7a77c2eefd00f109cfff87f773438e769051f87",
      "filename": "sim/iq2000/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -37,6 +37,9 @@ ALL_CPU_CFLAGS = -DHAVE_CPU_IQ2000BF -DHAVE_CPU_IQ10BF\n \n SIM_EXTRA_CLEAN = iq2000-clean\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n arch = iq2000"
    },
    {
      "sha": "b83dfb647db67a60d36156592edd46b9eaab02bd",
      "filename": "sim/iq2000/configure",
      "status": "modified",
      "additions": 40,
      "deletions": 38,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -771,10 +771,10 @@ enable_maintainer_mode\n enable_sim_inline\n enable_sim_scache\n enable_sim_default_model\n+enable_cgen_maint\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_cgen_maint\n enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n@@ -1418,12 +1418,12 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-cgen-maint=DIR build cgen generated files\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-cgen-maint=DIR build cgen generated files\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n \n@@ -11185,6 +11185,40 @@ fi\n \n \n \n+cgen_maint=no\n+cgen=guile\n+cgendir='$(srcdir)/../../cgen'\n+# Check whether --enable-cgen-maint was given.\n+if test \"${enable_cgen_maint+set}\" = set; then :\n+  enableval=$enable_cgen_maint; case \"${enableval}\" in\n+  yes)\tcgen_maint=yes ;;\n+  no)\tcgen_maint=no ;;\n+  *)\n+\t# Argument is a directory where cgen can be found.  In some\n+\t# future world cgen could be installable, but right now this\n+\t# is not the case.  Instead we assume the directory is a path\n+\t# to the cgen source tree.\n+\tcgen_maint=yes\n+        if test -r ${enableval}/iformat.scm; then\n+          # This looks like a cgen source tree.\n+\t  cgendir=${enableval}\n+        else\n+\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n+        fi\n+\t;;\n+esac\n+fi\n+if test x${cgen_maint} != xno ; then\n+  CGEN_MAINT=''\n+else\n+  CGEN_MAINT='#'\n+fi\n+\n+\n+\n+\n+\n+\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11195,12 +11229,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -11282,40 +11318,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-cgen_maint=no\n-cgen=guile\n-cgendir='$(srcdir)/../../cgen'\n-# Check whether --enable-cgen-maint was given.\n-if test \"${enable_cgen_maint+set}\" = set; then :\n-  enableval=$enable_cgen_maint; case \"${enableval}\" in\n-  yes)\tcgen_maint=yes ;;\n-  no)\tcgen_maint=no ;;\n-  *)\n-\t# Argument is a directory where cgen can be found.  In some\n-\t# future world cgen could be installable, but right now this\n-\t# is not the case.  Instead we assume the directory is a path\n-\t# to the cgen source tree.\n-\tcgen_maint=yes\n-        if test -r ${enableval}/iformat.scm; then\n-          # This looks like a cgen source tree.\n-\t  cgendir=${enableval}\n-        else\n-\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n-        fi\n-\t;;\n-esac\n-fi\n-if test x${cgen_maint} != xno ; then\n-  CGEN_MAINT=''\n-else\n-  CGEN_MAINT='#'\n-fi\n-\n-\n-\n-\n-\n-\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "92c10d2eb183e3b056d008c98a1b4b6c627ca795",
      "filename": "sim/iq2000/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/iq2000/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -6,7 +6,6 @@ SIM_AC_COMMON\n \n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(iq2000)\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "c82947a23f02631f04eb6bb5a6ddf73041f5c966",
      "filename": "sim/lm32/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* traps.c: Include sim-signal.h."
    },
    {
      "sha": "29489bcf7e43417be0766428712da922923fc41c",
      "filename": "sim/lm32/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -22,6 +22,9 @@ SIM_EXTRA_DEPS = $(CGEN_INCLUDE_DEPS) $(srcdir)/../../opcodes/lm32-desc.h \\\n \n SIM_EXTRA_CLEAN = lm32-clean\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n arch = lm32 "
    },
    {
      "sha": "6fb3d9727ca8ada31feeea3cd6bee7f0093b47fb",
      "filename": "sim/lm32/configure",
      "status": "modified",
      "additions": 104,
      "deletions": 102,
      "changes": 206,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -771,11 +771,11 @@ enable_maintainer_mode\n enable_sim_inline\n enable_sim_scache\n enable_sim_default_model\n+enable_cgen_maint\n+enable_sim_hardware\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_cgen_maint\n-enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1418,14 +1418,14 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-cgen-maint=DIR build cgen generated files\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-cgen-maint=DIR build cgen generated files\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11185,103 +11185,6 @@ fi\n \n \n \n-# Check whether --enable-werror was given.\n-if test \"${enable_werror+set}\" = set; then :\n-  enableval=$enable_werror; case \"${enableval}\" in\n-     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n-     no | n)  ERROR_ON_WARNING=\"no\" ;;\n-     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n-   esac\n-fi\n-\n-\n-# Enable -Werror by default when using gcc\n-if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n-fi\n-\n-WERROR_CFLAGS=\"\"\n-\n-build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n--Wpointer-sign \\\n--Wno-unused -Wunused-value -Wunused-function \\\n--Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n--Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n--Wold-style-declaration -Wold-style-definition\"\n-\n-# Enable -Wno-format by default when using gcc on mingw since many\n-# GCC versions complain about %I64.\n-case \"${host}\" in\n-  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n-  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n-esac\n-\n-# Check whether --enable-build-warnings was given.\n-if test \"${enable_build_warnings+set}\" = set; then :\n-  enableval=$enable_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-# Check whether --enable-sim-build-warnings was given.\n-if test \"${enable_sim_build_warnings+set}\" = set; then :\n-  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-WARN_CFLAGS=\"\"\n-if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n-$as_echo_n \"checking compiler warning flags... \" >&6; }\n-    # Separate out the -Werror flag as some files just cannot be\n-    # compiled with it enabled.\n-    for w in ${build_warnings}; do\n-\tcase $w in\n-\t-Werr*) WERROR_CFLAGS=-Werror ;;\n-\t*) # Check that GCC accepts it\n-\t    saved_CFLAGS=\"$CFLAGS\"\n-\t    CFLAGS=\"$CFLAGS -Werror $w\"\n-\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\t    CFLAGS=\"$saved_CFLAGS\"\n-\tesac\n-    done\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n-$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n-fi\n-\n-\n cgen_maint=no\n cgen=guile\n cgendir='$(srcdir)/../../cgen'\n@@ -11413,6 +11316,105 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+  ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS -Werror $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "32bbd1b4ac1ca96d371fe2905962abff399c051c",
      "filename": "sim/lm32/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/lm32/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -6,7 +6,6 @@ SIM_AC_COMMON\n \n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(lm32)\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n SIM_AC_OPTION_HARDWARE(lm32cpu lm32timer lm32uart)\n "
    },
    {
      "sha": "8c3703a14f306b29f7ad659f75bb0ed0222fd9a1",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/m32c/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32c/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32c/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "bdf8490088e7e067de78837e28612838c0348e7a",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* traps-linux.c: Include sim-signal.h."
    },
    {
      "sha": "272974572ecfbea46bd509c99a7102dac8fc71e9",
      "filename": "sim/m32r/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -44,6 +44,9 @@ SIM_EXTRA_CFLAGS = @sim_extra_cflags@\n \n SIM_EXTRA_CLEAN = m32r-clean\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n arch = m32r"
    },
    {
      "sha": "b144a151107d269392b42a219400668455dcb628",
      "filename": "sim/m32r/configure",
      "status": "modified",
      "additions": 104,
      "deletions": 102,
      "changes": 206,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -773,11 +773,11 @@ enable_maintainer_mode\n enable_sim_inline\n enable_sim_scache\n enable_sim_default_model\n+enable_cgen_maint\n+enable_sim_hardware\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_cgen_maint\n-enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1420,14 +1420,14 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-cgen-maint=DIR build cgen generated files\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-cgen-maint=DIR build cgen generated files\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11187,103 +11187,6 @@ fi\n \n \n \n-# Check whether --enable-werror was given.\n-if test \"${enable_werror+set}\" = set; then :\n-  enableval=$enable_werror; case \"${enableval}\" in\n-     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n-     no | n)  ERROR_ON_WARNING=\"no\" ;;\n-     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n-   esac\n-fi\n-\n-\n-# Enable -Werror by default when using gcc\n-if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n-fi\n-\n-WERROR_CFLAGS=\"\"\n-\n-build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n--Wpointer-sign \\\n--Wno-unused -Wunused-value -Wunused-function \\\n--Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n--Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n--Wold-style-declaration -Wold-style-definition\"\n-\n-# Enable -Wno-format by default when using gcc on mingw since many\n-# GCC versions complain about %I64.\n-case \"${host}\" in\n-  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n-  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n-esac\n-\n-# Check whether --enable-build-warnings was given.\n-if test \"${enable_build_warnings+set}\" = set; then :\n-  enableval=$enable_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-# Check whether --enable-sim-build-warnings was given.\n-if test \"${enable_sim_build_warnings+set}\" = set; then :\n-  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-WARN_CFLAGS=\"\"\n-if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n-$as_echo_n \"checking compiler warning flags... \" >&6; }\n-    # Separate out the -Werror flag as some files just cannot be\n-    # compiled with it enabled.\n-    for w in ${build_warnings}; do\n-\tcase $w in\n-\t-Werr*) WERROR_CFLAGS=-Werror ;;\n-\t*) # Check that GCC accepts it\n-\t    saved_CFLAGS=\"$CFLAGS\"\n-\t    CFLAGS=\"$CFLAGS -Werror $w\"\n-\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\t    CFLAGS=\"$saved_CFLAGS\"\n-\tesac\n-    done\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n-$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n-fi\n-\n-\n cgen_maint=no\n cgen=guile\n cgendir='$(srcdir)/../../cgen'\n@@ -11429,6 +11332,105 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+  ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS -Werror $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "3146feee64086f1c4f1c37aa9a1a5af07cdcd5ac",
      "filename": "sim/m32r/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m32r/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -6,7 +6,6 @@ SIM_AC_COMMON\n \n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(m32r/d)\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n   case \"${target_alias}\" in"
    },
    {
      "sha": "5a0fe304e9ce92f590b6ef737763878aaea9ffbc",
      "filename": "sim/m4/sim_ac_option_warnings.m4",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m4/sim_ac_option_warnings.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m4/sim_ac_option_warnings.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m4/sim_ac_option_warnings.m4?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -15,7 +15,6 @@ dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.\n dnl\n dnl --enable-build-warnings is for developers of the simulator.\n dnl it enables extra GCC specific warnings.\n-dnl arg[1] Enable -Werror by default? (\"yes\" or \"no\")\n AC_DEFUN([SIM_AC_OPTION_WARNINGS],\n [\n AC_ARG_ENABLE(werror,\n@@ -26,17 +25,15 @@ AC_ARG_ENABLE(werror,\n      *) AC_MSG_ERROR(bad value ${enableval} for --enable-werror) ;;\n    esac])\n \n-# Enable -Werror by default when using gcc\n+dnl Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-m4_if(m4_default([$1], [yes]), [yes], [dnl\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n-])dnl\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "fffa98c1051d495f758b46104c71b58a3ef227d3",
      "filename": "sim/m68hc11/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m68hc11/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m68hc11/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* dv-m68hc11eepr.c: Include sim-signal.h."
    },
    {
      "sha": "e24c6503e5e4999bc526f7b03bf5cdbc71af9576",
      "filename": "sim/m68hc11/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m68hc11/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/m68hc11/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11248,15 +11248,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "1a6cdbc6a5da40c39acd9237451cae181c956315",
      "filename": "sim/mcore/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mcore/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mcore/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/mcore/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mcore/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mcore/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "10e4fffbadc16608505e3f2958e7f91151841160",
      "filename": "sim/microblaze/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/microblaze/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/microblaze/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/microblaze/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/microblaze/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/microblaze/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "33081739bd6deab005875ce5ce46460fa652cc62",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "2f79c56cbcbcb73e91d8190c49ffb16646c8b282",
      "filename": "sim/mips/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -81,6 +81,8 @@ all: $(SIM_@sim_gen@_ALL)\n \n SIM_EXTRA_DEPS = itable.h\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n \n ## COMMON_POST_CONFIG_FRAG\n "
    },
    {
      "sha": "db16388b969bb081999e6900d344de24a83d4a5e",
      "filename": "sim/mips/configure",
      "status": "modified",
      "additions": 107,
      "deletions": 105,
      "changes": 212,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -777,14 +777,14 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_werror\n-enable_build_warnings\n-enable_sim_build_warnings\n enable_sim_reserved_bits\n enable_sim_bitsize\n enable_sim_float\n enable_sim_hardware\n with_x\n+enable_werror\n+enable_build_warnings\n+enable_sim_build_warnings\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1428,11 +1428,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-werror         treat compile warnings as errors\n-  --enable-build-warnings enable build-time compiler warnings if gcc is used\n-  --enable-sim-build-warnings\n-                          enable SIM specific build-time compiler warnings if\n-                          gcc is used\n   --enable-sim-reserved-bits\n                           Specify whether to check reserved bits in\n                           instruction\n@@ -1441,6 +1436,11 @@ Optional Features:\n                           hardware\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n+  --enable-werror         treat compile warnings as errors\n+  --enable-build-warnings enable build-time compiler warnings if gcc is used\n+  --enable-sim-build-warnings\n+                          enable SIM specific build-time compiler warnings if\n+                          gcc is used\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11167,103 +11167,6 @@ fi\n \n \n \n-# Check whether --enable-werror was given.\n-if test \"${enable_werror+set}\" = set; then :\n-  enableval=$enable_werror; case \"${enableval}\" in\n-     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n-     no | n)  ERROR_ON_WARNING=\"no\" ;;\n-     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n-   esac\n-fi\n-\n-\n-# Enable -Werror by default when using gcc\n-if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n-fi\n-\n-WERROR_CFLAGS=\"\"\n-\n-build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n--Wpointer-sign \\\n--Wno-unused -Wunused-value -Wunused-function \\\n--Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n--Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n--Wold-style-declaration -Wold-style-definition\"\n-\n-# Enable -Wno-format by default when using gcc on mingw since many\n-# GCC versions complain about %I64.\n-case \"${host}\" in\n-  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n-  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n-esac\n-\n-# Check whether --enable-build-warnings was given.\n-if test \"${enable_build_warnings+set}\" = set; then :\n-  enableval=$enable_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-# Check whether --enable-sim-build-warnings was given.\n-if test \"${enable_sim_build_warnings+set}\" = set; then :\n-  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-WARN_CFLAGS=\"\"\n-if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n-$as_echo_n \"checking compiler warning flags... \" >&6; }\n-    # Separate out the -Werror flag as some files just cannot be\n-    # compiled with it enabled.\n-    for w in ${build_warnings}; do\n-\tcase $w in\n-\t-Werr*) WERROR_CFLAGS=-Werror ;;\n-\t*) # Check that GCC accepts it\n-\t    saved_CFLAGS=\"$CFLAGS\"\n-\t    CFLAGS=\"$CFLAGS -Werror $w\"\n-\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\t    CFLAGS=\"$saved_CFLAGS\"\n-\tesac\n-    done\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n-$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n-fi\n-\n-\n default_sim_reserved_bits=\"1\"\n # Check whether --enable-sim-reserved-bits was given.\n if test \"${enable_sim_reserved_bits+set}\" = set; then :\n@@ -12102,6 +12005,105 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+  ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS -Werror $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "88f06ee13c91901f98a6f0e4952b74c97427509b",
      "filename": "sim/mips/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mips/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -5,7 +5,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n SIM_AC_COMMON\n \n dnl Options available in this module\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_RESERVED_BITS(1)\n \n # DEPRECATED"
    },
    {
      "sha": "c88536247549d38fe42ad7a39023e2e62b7c8aed",
      "filename": "sim/mn10300/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mn10300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mn10300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "43005f7c138b7cc2f3c1cf6bc10aaa804b95eabb",
      "filename": "sim/mn10300/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mn10300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/mn10300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11328,15 +11328,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "71a84c74066aa10b58391cc490f69a256b484766",
      "filename": "sim/moxie/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/moxie/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/moxie/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "de69f08cfb9202a334ccbf3c363fb68c0e840ab6",
      "filename": "sim/moxie/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/moxie/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/moxie/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11243,15 +11243,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "04aa101f3d42ee32852aa1c1554341adcbea64a6",
      "filename": "sim/msp430/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/msp430/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/msp430/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* msp430-sim.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/msp430/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/msp430/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/msp430/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "a5a1960a6d9bd62badcdd1ed8e602cdc1f3004ea",
      "filename": "sim/or1k/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* traps.c: Include sim-signal.h."
    },
    {
      "sha": "c6083b0cd6ea3101c2a367e584d232e71a4e708f",
      "filename": "sim/or1k/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -55,6 +55,9 @@ SIM_EXTRA_LIBS = -lm\n \n SIM_EXTRA_CLEAN = or1k-clean\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n arch = or1k"
    },
    {
      "sha": "fa8853c4e9d58c3fcc90a9439505bf18504e35cb",
      "filename": "sim/or1k/configure",
      "status": "modified",
      "additions": 40,
      "deletions": 38,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -772,10 +772,10 @@ enable_sim_inline\n enable_sim_bitsize\n enable_sim_scache\n enable_sim_default_model\n+enable_cgen_maint\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_cgen_maint\n enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n@@ -1420,12 +1420,12 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-cgen-maint=DIR build cgen generated files\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-cgen-maint=DIR build cgen generated files\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n \n@@ -11246,6 +11246,40 @@ fi\n \n \n \n+cgen_maint=no\n+cgen=guile\n+cgendir='$(srcdir)/../../cgen'\n+# Check whether --enable-cgen-maint was given.\n+if test \"${enable_cgen_maint+set}\" = set; then :\n+  enableval=$enable_cgen_maint; case \"${enableval}\" in\n+  yes)\tcgen_maint=yes ;;\n+  no)\tcgen_maint=no ;;\n+  *)\n+\t# Argument is a directory where cgen can be found.  In some\n+\t# future world cgen could be installable, but right now this\n+\t# is not the case.  Instead we assume the directory is a path\n+\t# to the cgen source tree.\n+\tcgen_maint=yes\n+        if test -r ${enableval}/iformat.scm; then\n+          # This looks like a cgen source tree.\n+\t  cgendir=${enableval}\n+        else\n+\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n+        fi\n+\t;;\n+esac\n+fi\n+if test x${cgen_maint} != xno ; then\n+  CGEN_MAINT=''\n+else\n+  CGEN_MAINT='#'\n+fi\n+\n+\n+\n+\n+\n+\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11256,12 +11290,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -11343,40 +11379,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-cgen_maint=no\n-cgen=guile\n-cgendir='$(srcdir)/../../cgen'\n-# Check whether --enable-cgen-maint was given.\n-if test \"${enable_cgen_maint+set}\" = set; then :\n-  enableval=$enable_cgen_maint; case \"${enableval}\" in\n-  yes)\tcgen_maint=yes ;;\n-  no)\tcgen_maint=no ;;\n-  *)\n-\t# Argument is a directory where cgen can be found.  In some\n-\t# future world cgen could be installable, but right now this\n-\t# is not the case.  Instead we assume the directory is a path\n-\t# to the cgen source tree.\n-\tcgen_maint=yes\n-        if test -r ${enableval}/iformat.scm; then\n-          # This looks like a cgen source tree.\n-\t  cgendir=${enableval}\n-        else\n-\t  as_fn_error $? \"${enableval} doesn't look like a cgen source tree\" \"$LINENO\" 5\n-        fi\n-\t;;\n-esac\n-fi\n-if test x${cgen_maint} != xno ; then\n-  CGEN_MAINT=''\n-else\n-  CGEN_MAINT='#'\n-fi\n-\n-\n-\n-\n-\n-\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "576574c2ded2945ad669783337d8693511b15dd1",
      "filename": "sim/or1k/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/or1k/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -7,7 +7,6 @@ SIM_AC_COMMON\n SIM_AC_OPTION_BITSIZE([32], [31], [32])\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL([or1200])\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "68e2941cb9843e1afda8235ca9d153540f55e795",
      "filename": "sim/pru/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/pru/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/pru/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c: Include sim-signal.h."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/pru/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/pru/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/pru/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "ba8734c421cda534610c93926a8fc0af0d4d1e96",
      "filename": "sim/riscv/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/riscv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/riscv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* sim-main.c: Include sim-signal.h."
    },
    {
      "sha": "94bf447bedef639827fead7ecf79f2f55f50ac19",
      "filename": "sim/riscv/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/riscv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/riscv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11243,15 +11243,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "123392da8b43e84602e515c2c4e041d6125e9731",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/rl78/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rl78/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rl78/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,15 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "8ed41af205354d697779646b0e3933288d0e1d23",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "837b7efad4baeef8edbf466f7540fd69c766b914",
      "filename": "sim/rx/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rx/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/rx/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11169,15 +11169,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    },
    {
      "sha": "aeb2d0e8d0cadb8d55ee10a8ce4e87f0cf151c44",
      "filename": "sim/sh/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_WERROR_CFLAGS): New variable.\n+\t* configure.ac: Delete call to SIM_AC_OPTION_WARNINGS.\n+\t* configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call."
    },
    {
      "sha": "e43fb5a17e86d692315e912b2f9467993977d5e6",
      "filename": "sim/sh/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/Makefile.in?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -28,6 +28,9 @@ SIM_EXTRA_LIBS = -lm\n SIM_EXTRA_CLEAN = sh-clean\n SIM_EXTRA_DEPS = table.c code.c ppi.c\n \n+# Code doesn't build cleanly yet.\n+SIM_WERROR_CFLAGS =\n+\n ## COMMON_POST_CONFIG_FRAG\n \n code.c: gencode"
    },
    {
      "sha": "371c3553ce03e240293dbd0f081cc3c6aa3306e1",
      "filename": "sim/sh/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11149,12 +11149,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -11236,7 +11238,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/sh/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/sh/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/configure.ac?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_WARNINGS(no)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "b3fc86f4b41cdc00af53fdfb0ced5652ec0549b5",
      "filename": "sim/v850/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/v850/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/v850/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-18  Mike Frysinger  <vapier@gentoo.org>\n \n \t* simops.c: Include sim-signal.h."
    },
    {
      "sha": "8666204c6a41e9959f986148243b2b512b5136e7",
      "filename": "sim/v850/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/v850/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/982c3a65ca5dbea8d6de3afd934f0a06fef54383/sim/v850/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure?ref=982c3a65ca5dbea8d6de3afd934f0a06fef54383",
      "patch": "@@ -11231,15 +11231,14 @@ if test \"${enable_werror+set}\" = set; then :\n fi\n \n \n-# Enable -Werror by default when using gcc\n if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n+  ERROR_ON_WARNING=yes\n fi\n \n WERROR_CFLAGS=\"\"\n-  if test \"${ERROR_ON_WARNING}\" = yes ; then\n-    WERROR_CFLAGS=\"-Werror\"\n-  fi\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\"
    }
  ]
}