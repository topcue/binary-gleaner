{
  "sha": "d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDM0MDQ5ZThiYjMyYWUyZGQ3MTdkYmFjODhkYmNlYmVmZTJkNmMwOQ==",
  "commit": {
    "author": {
      "name": "Martin Liska",
      "email": "mliska@suse.cz",
      "date": "2021-03-22T12:33:04Z"
    },
    "committer": {
      "name": "Martin Liska",
      "email": "mliska@suse.cz",
      "date": "2021-04-01T13:00:08Z"
    },
    "message": "Use startswith in gas subfolder.\n\ngas/ChangeLog:\n\n\t* as.c (select_emulation_mode): Use startswith.\n\t* config/m68k-parse.y: Likewise.\n\t* config/obj-aout.c (obj_aout_type): Likewise.\n\t* config/obj-elf.c (elf_common_parse): Likewise.\n\t(obj_elf_section_type): Likewise.\n\t(obj_elf_section_word): Likewise.\n\t(obj_elf_section): Likewise.\n\t(obj_elf_symver): Likewise.\n\t(adjust_stab_sections): Likewise.\n\t* config/obj-evax.c (evax_shorten_name): Likewise.\n\t* config/obj-macho.c (obj_mach_o_is_frame_section): Likewise.\n\t* config/tc-aarch64.c (parse_aarch64_imm_float): Likewise.\n\t(aarch64_parse_features): Likewise.\n\t(create_register_alias): Likewise.\n\t(aarch64_data_in_code): Likewise.\n\t(md_parse_option): Likewise.\n\t* config/tc-alpha.c (s_alpha_section_word): Likewise.\n\t(s_alpha_pdesc): Likewise.\n\t* config/tc-arc.c (tokenize_extregister): Likewise.\n\t* config/tc-arm.c (create_register_alias): Likewise.\n\t(create_neon_reg_alias): Likewise.\n\t(parse_ifimm_zero): Likewise.\n\t(parse_qfloat_immediate): Likewise.\n\t(arm_elf_section_type): Likewise.\n\t(arm_parse_extension): Likewise.\n\t(aeabi_set_public_attributes): Likewise.\n\t(s_arm_arch_extension): Likewise.\n\t(arm_data_in_code): Likewise.\n\t(start_unwind_section): Likewise.\n\t* config/tc-avr.c (avr_ldi_expression): Likewise.\n\t* config/tc-csky.c (is_freglist_legal): Likewise.\n\t(csky_s_section): Likewise.\n\t* config/tc-d30v.c (do_assemble): Likewise.\n\t* config/tc-dlx.c (parse_operand): Likewise.\n\t* config/tc-epiphany.c (md_assemble): Likewise.\n\t* config/tc-h8300.c (h8300_elf_section): Likewise.\n\t(get_operand): Likewise.\n\t* config/tc-hppa.c (pa_ip): Likewise.\n\t(pa_level): Likewise.\n\t(pa_space): Likewise.\n\t* config/tc-i386.c (i386_mach): Likewise.\n\t(md_assemble): Likewise.\n\t(check_VecOperations): Likewise.\n\t(i386_target_format): Likewise.\n\t(i386_elf_section_type): Likewise.\n\t* config/tc-ia64.c (start_unwind_section): Likewise.\n\t(md_parse_option): Likewise.\n\t(is_taken_branch): Likewise.\n\t(idesc->name,): Likewise.\n\t(note_register_values): Likewise.\n\t(do_alias): Likewise.\n\t* config/tc-m32c.c (insn_to_subtype): Likewise.\n\t* config/tc-m68hc11.c (get_operand): Likewise.\n\t(md_assemble): Likewise.\n\t* config/tc-m68k.c (m68k_ip): Likewise.\n\t(m68k_elf_suffix): Likewise.\n\t* config/tc-mcore.c (mcore_s_section): Likewise.\n\t* config/tc-metag.c (parse_get_set): Likewise.\n\t(md_parse_option): Likewise.\n\t* config/tc-microblaze.c (parse_imm): Likewise.\n\t(check_got): Likewise.\n\t(md_apply_fix): Likewise.\n\t* config/tc-mips.c (CPU_HAS_MIPS16): Likewise.\n\t(md_begin): Likewise.\n\t(s_is_linkonce): Likewise.\n\t(check_regno): Likewise.\n\t(match_float_constant): Likewise.\n\t(classify_vr4120_insn): Likewise.\n\t(match_insn): Likewise.\n\t(mips_after_parse_args): Likewise.\n\t(s_change_sec): Likewise.\n\t(s_option): Likewise.\n\t(parse_code_option): Likewise.\n\t(md_section_align): Likewise.\n\t(nopic_need_relax): Likewise.\n\t* config/tc-mmix.c (mmix_handle_mmixal): Likewise.\n\t* config/tc-mn10300.c (mn10300_fix_adjustable): Likewise.\n\t(mn10300_end_of_match): Likewise.\n\t* config/tc-msp430.c (msp430_make_init_symbols): Likewise.\n\t* config/tc-nds32.c (nds32_parse_option): Likewise.\n\t* config/tc-nds32.h (md_do_align): Likewise.\n\t* config/tc-nios2.c (strprefix): Likewise.\n\t(nios2_special_relocation_p): Likewise.\n\t(nios2_parse_base_register): Likewise.\n\t(nios2_cons): Likewise.\n\t* config/tc-ns32k.c (addr_mode): Likewise.\n\t* config/tc-pdp11.c (set_option): Likewise.\n\t(parse_reg): Likewise.\n\t(parse_ac5): Likewise.\n\t(parse_op_no_deferred): Likewise.\n\t(set_cpu_model): Likewise.\n\t(set_machine_model): Likewise.\n\t* config/tc-pj.c (md_operand): Likewise.\n\t* config/tc-ppc.c (ppc_set_cpu): Likewise.\n\t(ppc_arch): Likewise.\n\t(ppc_section_type): Likewise.\n\t* config/tc-s12z.c (tb_reg_rel): Likewise.\n\t(tb_opr_rel): Likewise.\n\t* config/tc-s390.c (s390_parse_cpu): Likewise.\n\t(md_parse_option): Likewise.\n\t* config/tc-score.c (s3_nopic_need_relax): Likewise.\n\t(s3_pic_need_relax): Likewise.\n\t* config/tc-score7.c (s7_nopic_need_relax): Likewise.\n\t(s7_pic_need_relax): Likewise.\n\t* config/tc-sh.h (SUB_SEGMENT_ALIGN): Likewise.\n\t* config/tc-sparc.c (md_parse_option): Likewise.\n\t(sparc_ip): Likewise.\n\t(s_reserve): Likewise.\n\t(s_common): Likewise.\n\t(s_seg): Likewise.\n\t(sparc_cons): Likewise.\n\t* config/tc-tic54x.c (stag_add_field): Likewise.\n\t(tic54x_endstruct): Likewise.\n\t* config/tc-tic6x.c (tic6x_start_unwind_section): Likewise.\n\t* config/tc-v850.c (v850_comm): Likewise.\n\t(md_begin): Likewise.\n\t(md_assemble): Likewise.\n\t* config/tc-vax.c (vax_cons): Likewise.\n\t* config/tc-wasm32.c (wasm32_leb128): Likewise.\n\t* config/tc-xstormy16.c (md_operand): Likewise.\n\t* config/tc-xtensa.c (get_directive): Likewise.\n\t(xg_instruction_matches_option_term): Likewise.\n\t(is_unaligned_label): Likewise.\n\t(cache_literal_section): Likewise.\n\t* config/xtensa-relax.c (parse_precond): Likewise.\n\t(parse_option_cond): Likewise.\n\t(transition_applies): Likewise.\n\t(wide_branch_opcode): Likewise.\n\t* dw2gencfi.c: Likewise.\n\t* dwarf2dbg.c (dwarf2_directive_filename): Likewise.\n\t* ehopt.c (get_cie_info): Likewise.\n\t* input-file.c (input_file_open): Likewise.\n\t* listing.c (listing_newline): Likewise.\n\t(debugging_pseudo): Likewise.\n\t* read.c (read_a_source_file): Likewise.\n\t* write.c (adjust_reloc_syms): Likewise.\n\t(compress_debug): Likewise.\n\t(maybe_generate_build_notes): Likewise.",
    "tree": {
      "sha": "e84dfa543b4d386be9628637b8e8ccaa0b3e98e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e84dfa543b4d386be9628637b8e8ccaa0b3e98e1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/comments",
  "author": {
    "login": "marxin",
    "id": 2658545,
    "node_id": "MDQ6VXNlcjI2NTg1NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marxin",
    "html_url": "https://github.com/marxin",
    "followers_url": "https://api.github.com/users/marxin/followers",
    "following_url": "https://api.github.com/users/marxin/following{/other_user}",
    "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marxin/subscriptions",
    "organizations_url": "https://api.github.com/users/marxin/orgs",
    "repos_url": "https://api.github.com/users/marxin/repos",
    "events_url": "https://api.github.com/users/marxin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marxin/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "marxin",
    "id": 2658545,
    "node_id": "MDQ6VXNlcjI2NTg1NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marxin",
    "html_url": "https://github.com/marxin",
    "followers_url": "https://api.github.com/users/marxin/followers",
    "following_url": "https://api.github.com/users/marxin/following{/other_user}",
    "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marxin/subscriptions",
    "organizations_url": "https://api.github.com/users/marxin/orgs",
    "repos_url": "https://api.github.com/users/marxin/repos",
    "events_url": "https://api.github.com/users/marxin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marxin/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f3328b816ee3486ac0621cfd6d808faa2c0a689",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f3328b816ee3486ac0621cfd6d808faa2c0a689",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f3328b816ee3486ac0621cfd6d808faa2c0a689"
    }
  ],
  "stats": {
    "total": 957,
    "additions": 540,
    "deletions": 417
  },
  "files": [
    {
      "sha": "98918d6e5c45fdd434633e962cd0da7ad2d48118",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 141,
      "deletions": 0,
      "changes": 141,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1,3 +1,144 @@\n+2021-04-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* as.c (select_emulation_mode): Use startswith.\n+\t* config/m68k-parse.y: Likewise.\n+\t* config/obj-aout.c (obj_aout_type): Likewise.\n+\t* config/obj-elf.c (elf_common_parse): Likewise.\n+\t(obj_elf_section_type): Likewise.\n+\t(obj_elf_section_word): Likewise.\n+\t(obj_elf_section): Likewise.\n+\t(obj_elf_symver): Likewise.\n+\t(adjust_stab_sections): Likewise.\n+\t* config/obj-evax.c (evax_shorten_name): Likewise.\n+\t* config/obj-macho.c (obj_mach_o_is_frame_section): Likewise.\n+\t* config/tc-aarch64.c (parse_aarch64_imm_float): Likewise.\n+\t(aarch64_parse_features): Likewise.\n+\t(create_register_alias): Likewise.\n+\t(aarch64_data_in_code): Likewise.\n+\t(md_parse_option): Likewise.\n+\t* config/tc-alpha.c (s_alpha_section_word): Likewise.\n+\t(s_alpha_pdesc): Likewise.\n+\t* config/tc-arc.c (tokenize_extregister): Likewise.\n+\t* config/tc-arm.c (create_register_alias): Likewise.\n+\t(create_neon_reg_alias): Likewise.\n+\t(parse_ifimm_zero): Likewise.\n+\t(parse_qfloat_immediate): Likewise.\n+\t(arm_elf_section_type): Likewise.\n+\t(arm_parse_extension): Likewise.\n+\t(aeabi_set_public_attributes): Likewise.\n+\t(s_arm_arch_extension): Likewise.\n+\t(arm_data_in_code): Likewise.\n+\t(start_unwind_section): Likewise.\n+\t* config/tc-avr.c (avr_ldi_expression): Likewise.\n+\t* config/tc-csky.c (is_freglist_legal): Likewise.\n+\t(csky_s_section): Likewise.\n+\t* config/tc-d30v.c (do_assemble): Likewise.\n+\t* config/tc-dlx.c (parse_operand): Likewise.\n+\t* config/tc-epiphany.c (md_assemble): Likewise.\n+\t* config/tc-h8300.c (h8300_elf_section): Likewise.\n+\t(get_operand): Likewise.\n+\t* config/tc-hppa.c (pa_ip): Likewise.\n+\t(pa_level): Likewise.\n+\t(pa_space): Likewise.\n+\t* config/tc-i386.c (i386_mach): Likewise.\n+\t(md_assemble): Likewise.\n+\t(check_VecOperations): Likewise.\n+\t(i386_target_format): Likewise.\n+\t(i386_elf_section_type): Likewise.\n+\t* config/tc-ia64.c (start_unwind_section): Likewise.\n+\t(md_parse_option): Likewise.\n+\t(is_taken_branch): Likewise.\n+\t(idesc->name,): Likewise.\n+\t(note_register_values): Likewise.\n+\t(do_alias): Likewise.\n+\t* config/tc-m32c.c (insn_to_subtype): Likewise.\n+\t* config/tc-m68hc11.c (get_operand): Likewise.\n+\t(md_assemble): Likewise.\n+\t* config/tc-m68k.c (m68k_ip): Likewise.\n+\t(m68k_elf_suffix): Likewise.\n+\t* config/tc-mcore.c (mcore_s_section): Likewise.\n+\t* config/tc-metag.c (parse_get_set): Likewise.\n+\t(md_parse_option): Likewise.\n+\t* config/tc-microblaze.c (parse_imm): Likewise.\n+\t(check_got): Likewise.\n+\t(md_apply_fix): Likewise.\n+\t* config/tc-mips.c (CPU_HAS_MIPS16): Likewise.\n+\t(md_begin): Likewise.\n+\t(s_is_linkonce): Likewise.\n+\t(check_regno): Likewise.\n+\t(match_float_constant): Likewise.\n+\t(classify_vr4120_insn): Likewise.\n+\t(match_insn): Likewise.\n+\t(mips_after_parse_args): Likewise.\n+\t(s_change_sec): Likewise.\n+\t(s_option): Likewise.\n+\t(parse_code_option): Likewise.\n+\t(md_section_align): Likewise.\n+\t(nopic_need_relax): Likewise.\n+\t* config/tc-mmix.c (mmix_handle_mmixal): Likewise.\n+\t* config/tc-mn10300.c (mn10300_fix_adjustable): Likewise.\n+\t(mn10300_end_of_match): Likewise.\n+\t* config/tc-msp430.c (msp430_make_init_symbols): Likewise.\n+\t* config/tc-nds32.c (nds32_parse_option): Likewise.\n+\t* config/tc-nds32.h (md_do_align): Likewise.\n+\t* config/tc-nios2.c (strprefix): Likewise.\n+\t(nios2_special_relocation_p): Likewise.\n+\t(nios2_parse_base_register): Likewise.\n+\t(nios2_cons): Likewise.\n+\t* config/tc-ns32k.c (addr_mode): Likewise.\n+\t* config/tc-pdp11.c (set_option): Likewise.\n+\t(parse_reg): Likewise.\n+\t(parse_ac5): Likewise.\n+\t(parse_op_no_deferred): Likewise.\n+\t(set_cpu_model): Likewise.\n+\t(set_machine_model): Likewise.\n+\t* config/tc-pj.c (md_operand): Likewise.\n+\t* config/tc-ppc.c (ppc_set_cpu): Likewise.\n+\t(ppc_arch): Likewise.\n+\t(ppc_section_type): Likewise.\n+\t* config/tc-s12z.c (tb_reg_rel): Likewise.\n+\t(tb_opr_rel): Likewise.\n+\t* config/tc-s390.c (s390_parse_cpu): Likewise.\n+\t(md_parse_option): Likewise.\n+\t* config/tc-score.c (s3_nopic_need_relax): Likewise.\n+\t(s3_pic_need_relax): Likewise.\n+\t* config/tc-score7.c (s7_nopic_need_relax): Likewise.\n+\t(s7_pic_need_relax): Likewise.\n+\t* config/tc-sh.h (SUB_SEGMENT_ALIGN): Likewise.\n+\t* config/tc-sparc.c (md_parse_option): Likewise.\n+\t(sparc_ip): Likewise.\n+\t(s_reserve): Likewise.\n+\t(s_common): Likewise.\n+\t(s_seg): Likewise.\n+\t(sparc_cons): Likewise.\n+\t* config/tc-tic54x.c (stag_add_field): Likewise.\n+\t(tic54x_endstruct): Likewise.\n+\t* config/tc-tic6x.c (tic6x_start_unwind_section): Likewise.\n+\t* config/tc-v850.c (v850_comm): Likewise.\n+\t(md_begin): Likewise.\n+\t(md_assemble): Likewise.\n+\t* config/tc-vax.c (vax_cons): Likewise.\n+\t* config/tc-wasm32.c (wasm32_leb128): Likewise.\n+\t* config/tc-xstormy16.c (md_operand): Likewise.\n+\t* config/tc-xtensa.c (get_directive): Likewise.\n+\t(xg_instruction_matches_option_term): Likewise.\n+\t(is_unaligned_label): Likewise.\n+\t(cache_literal_section): Likewise.\n+\t* config/xtensa-relax.c (parse_precond): Likewise.\n+\t(parse_option_cond): Likewise.\n+\t(transition_applies): Likewise.\n+\t(wide_branch_opcode): Likewise.\n+\t* dw2gencfi.c: Likewise.\n+\t* dwarf2dbg.c (dwarf2_directive_filename): Likewise.\n+\t* ehopt.c (get_cie_info): Likewise.\n+\t* input-file.c (input_file_open): Likewise.\n+\t* listing.c (listing_newline): Likewise.\n+\t(debugging_pseudo): Likewise.\n+\t* read.c (read_a_source_file): Likewise.\n+\t* write.c (adjust_reloc_syms): Likewise.\n+\t(compress_debug): Likewise.\n+\t(maybe_generate_build_notes): Likewise.\n+\n 2021-03-31  Alan Modra  <amodra@gmail.com>\n \n \t* itbl-lex-wrapper.c: Include as.h not sysdep.h."
    },
    {
      "sha": "b2684fabe514a1e3f187fa4edb0e5fac6435a71e",
      "filename": "gas/as.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/as.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/as.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/as.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -158,7 +158,7 @@ select_emulation_mode (int argc, char **argv)\n   const char *em = NULL;\n \n   for (i = 1; i < argc; i++)\n-    if (!strncmp (\"--em\", argv[i], 4))\n+    if (startswith (argv[i], \"--em\"))\n       break;\n \n   if (i == argc)\n@@ -819,8 +819,7 @@ This program has absolutely no warranty.\\n\"));\n \t  /* We end up here for any -gsomething-not-already-a-long-option.\n \t     give some useful feedback on not (yet) supported -gdwarfxxx\n \t     versions/sections/options.  */\n-\t  if (strncmp (old_argv[optind - 1], \"-gdwarf\",\n-\t\t       strlen (\"-gdwarf\")) == 0)\n+\t  if (startswith (old_argv[optind - 1], \"-gdwarf\"))\n \t    as_fatal (_(\"unknown DWARF option %s\\n\"), old_argv[optind - 1]);\n \n \t  if (md_debug_format_selector)"
    },
    {
      "sha": "7528380a378cef2294b643c452e722c8b0cf52e9",
      "filename": "gas/config/m68k-parse.y",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/m68k-parse.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/m68k-parse.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/m68k-parse.y?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1008,53 +1008,53 @@ yylex (void)\n     cp = s - tail;\n     if (cp - 7 > str && cp[-7] == '@')\n       {\n-\tif (strncmp (cp - 7, \"@TLSLDM\", 7) == 0)\n+\tif (startswith (cp - 7, \"@TLSLDM\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_tls_ldm;\n \t    tail += 7;\n \t  }\n-\telse if (strncmp (cp - 7, \"@TLSLDO\", 7) == 0)\n+\telse if (startswith (cp - 7, \"@TLSLDO\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_tls_ldo;\n \t    tail += 7;\n \t  }\n       }\n     else if (cp - 6 > str && cp[-6] == '@')\n       {\n-\tif (strncmp (cp - 6, \"@PLTPC\", 6) == 0)\n+\tif (startswith (cp - 6, \"@PLTPC\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_plt_pcrel;\n \t    tail += 6;\n \t  }\n-\telse if (strncmp (cp - 6, \"@GOTPC\", 6) == 0)\n+\telse if (startswith (cp - 6, \"@GOTPC\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_got_pcrel;\n \t    tail += 6;\n \t  }\n-\telse if (strncmp (cp - 6, \"@TLSGD\", 6) == 0)\n+\telse if (startswith (cp - 6, \"@TLSGD\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_tls_gd;\n \t    tail += 6;\n \t  }\n-\telse if (strncmp (cp - 6, \"@TLSIE\", 6) == 0)\n+\telse if (startswith (cp - 6, \"@TLSIE\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_tls_ie;\n \t    tail += 6;\n \t  }\n-\telse if (strncmp (cp - 6, \"@TLSLE\", 6) == 0)\n+\telse if (startswith (cp - 6, \"@TLSLE\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_tls_le;\n \t    tail += 6;\n \t  }\n       }\n     else if (cp - 4 > str && cp[-4] == '@')\n       {\n-\tif (strncmp (cp - 4, \"@PLT\", 4) == 0)\n+\tif (startswith (cp - 4, \"@PLT\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_plt_off;\n \t    tail += 4;\n \t  }\n-\telse if (strncmp (cp - 4, \"@GOT\", 4) == 0)\n+\telse if (startswith (cp - 4, \"@GOT\"))\n \t  {\n \t    yylval.exp.pic_reloc = pic_got_off;\n \t    tail += 4;"
    },
    {
      "sha": "b41820b1b69ff494cf307ad36f612c56f1618398",
      "filename": "gas/config/obj-aout.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-aout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-aout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-aout.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -210,9 +210,9 @@ obj_aout_type (int ignore ATTRIBUTE_UNUSED)\n       if (*input_line_pointer == '@')\n \t{\n \t  ++input_line_pointer;\n-\t  if (strncmp (input_line_pointer, \"object\", 6) == 0)\n+\t  if (startswith (input_line_pointer, \"object\"))\n \t    S_SET_OTHER (sym, 1);\n-\t  else if (strncmp (input_line_pointer, \"function\", 8) == 0)\n+\t  else if (startswith (input_line_pointer, \"function\"))\n \t    S_SET_OTHER (sym, 2);\n \t}\n     }"
    },
    {
      "sha": "9f85c576462b98947dc13fcea0df72828e4ae1e5",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -324,9 +324,9 @@ elf_common_parse (int ignore ATTRIBUTE_UNUSED, symbolS *symbolP, addressT size)\n \t  if (*input_line_pointer == '.')\n \t    input_line_pointer++;\n \t  /* Some say data, some say bss.  */\n-\t  if (strncmp (input_line_pointer, \"bss\\\"\", 4) == 0)\n+\t  if (startswith (input_line_pointer, \"bss\\\"\"))\n \t    input_line_pointer += 4;\n-\t  else if (strncmp (input_line_pointer, \"data\\\"\", 5) == 0)\n+\t  else if (startswith (input_line_pointer, \"data\\\"\"))\n \t    input_line_pointer += 5;\n \t  else\n \t    {\n@@ -949,17 +949,17 @@ obj_elf_parse_section_letters (char *str, size_t len,\n static int\n obj_elf_section_type (char *str, size_t len, bool warn)\n {\n-  if (len == 8 && strncmp (str, \"progbits\", 8) == 0)\n+  if (len == 8 && startswith (str, \"progbits\"))\n     return SHT_PROGBITS;\n-  if (len == 6 && strncmp (str, \"nobits\", 6) == 0)\n+  if (len == 6 && startswith (str, \"nobits\"))\n     return SHT_NOBITS;\n-  if (len == 4 && strncmp (str, \"note\", 4) == 0)\n+  if (len == 4 && startswith (str, \"note\"))\n     return SHT_NOTE;\n-  if (len == 10 && strncmp (str, \"init_array\", 10) == 0)\n+  if (len == 10 && startswith (str, \"init_array\"))\n     return SHT_INIT_ARRAY;\n-  if (len == 10 && strncmp (str, \"fini_array\", 10) == 0)\n+  if (len == 10 && startswith (str, \"fini_array\"))\n     return SHT_FINI_ARRAY;\n-  if (len == 13 && strncmp (str, \"preinit_array\", 13) == 0)\n+  if (len == 13 && startswith (str, \"preinit_array\"))\n     return SHT_PREINIT_ARRAY;\n \n #ifdef md_elf_section_type\n@@ -991,15 +991,15 @@ obj_elf_section_word (char *str, size_t len, int *type)\n {\n   int ret;\n \n-  if (len == 5 && strncmp (str, \"write\", 5) == 0)\n+  if (len == 5 && startswith (str, \"write\"))\n     return SHF_WRITE;\n-  if (len == 5 && strncmp (str, \"alloc\", 5) == 0)\n+  if (len == 5 && startswith (str, \"alloc\"))\n     return SHF_ALLOC;\n-  if (len == 9 && strncmp (str, \"execinstr\", 9) == 0)\n+  if (len == 9 && startswith (str, \"execinstr\"))\n     return SHF_EXECINSTR;\n-  if (len == 7 && strncmp (str, \"exclude\", 7) == 0)\n+  if (len == 7 && startswith (str, \"exclude\"))\n     return SHF_EXCLUDE;\n-  if (len == 3 && strncmp (str, \"tls\", 3) == 0)\n+  if (len == 3 && startswith (str, \"tls\"))\n     return SHF_TLS;\n \n #ifdef md_elf_section_word\n@@ -1291,13 +1291,13 @@ obj_elf_section (int push)\n \t\t{\n \t\t  ++input_line_pointer;\n \t\t  SKIP_WHITESPACE ();\n-\t\t  if (strncmp (input_line_pointer, \"comdat\", 6) == 0)\n+\t\t  if (startswith (input_line_pointer, \"comdat\"))\n \t\t    {\n \t\t      input_line_pointer += 6;\n \t\t      linkonce = 1;\n \t\t    }\n \t\t}\n-\t      else if (strncmp (name, \".gnu.linkonce\", 13) == 0)\n+\t      else if (startswith (name, \".gnu.linkonce\"))\n \t\tlinkonce = 1;\n \t    }\n \t  else if ((attr & SHF_GROUP) != 0)\n@@ -1345,7 +1345,7 @@ obj_elf_section (int push)\n \n \t      ++input_line_pointer;\n \t      SKIP_WHITESPACE ();\n-\t      if (strncmp (input_line_pointer, \"unique\", 6) == 0)\n+\t      if (startswith (input_line_pointer, \"unique\"))\n \t\t{\n \t\t  input_line_pointer += 6;\n \t\t  SKIP_WHITESPACE ();\n@@ -1748,17 +1748,17 @@ obj_elf_symver (int ignore ATTRIBUTE_UNUSED)\n \n       ++input_line_pointer;\n       SKIP_WHITESPACE ();\n-      if (strncmp (input_line_pointer, \"local\", 5) == 0)\n+      if (startswith (input_line_pointer, \"local\"))\n \t{\n \t  input_line_pointer += 5;\n \t  sy_obj->visibility = visibility_local;\n \t}\n-      else if (strncmp (input_line_pointer, \"hidden\", 6) == 0)\n+      else if (startswith (input_line_pointer, \"hidden\"))\n \t{\n \t  input_line_pointer += 6;\n \t  sy_obj->visibility = visibility_hidden;\n \t}\n-      else if (strncmp (input_line_pointer, \"remove\", 6) == 0)\n+      else if (startswith (input_line_pointer, \"remove\"))\n \t{\n \t  input_line_pointer += 6;\n \t  sy_obj->visibility = visibility_remove;\n@@ -2508,7 +2508,7 @@ adjust_stab_sections (bfd *abfd, asection *sec, void *xxx ATTRIBUTE_UNUSED)\n   char *p;\n   int strsz, nsyms;\n \n-  if (strncmp (\".stab\", sec->name, 5))\n+  if (!startswith (sec->name, \".stab\"))\n     return;\n   if (!strcmp (\"str\", sec->name + strlen (sec->name) - 3))\n     return;"
    },
    {
      "sha": "d39b4896945bc7f56727bae7d260031afdc8e987",
      "filename": "gas/config/obj-evax.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-evax.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-evax.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-evax.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -239,7 +239,7 @@ evax_shorten_name (char *id)\n   prefix [0] = 0;\n \n   /* Check for ..xx suffix and save it.  */\n-  if (strncmp (&id[len-4], \"..\", 2) == 0)\n+  if (startswith (&id[len-4], \"..\"))\n     {\n       suffix_dotdot = len - 4;\n       strncpy (suffix, &id[len-4], 4);"
    },
    {
      "sha": "77442810ca15803d8bffc28efb33c10734ba91ed",
      "filename": "gas/config/obj-macho.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-macho.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/obj-macho.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-macho.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1907,8 +1907,8 @@ obj_mach_o_is_frame_section (segT sec)\n {\n   int l;\n   l = strlen (segment_name (sec));\n-  if ((l == 9 && strncmp (\".eh_frame\", segment_name (sec), 9) == 0)\n-       || (l == 12 && strncmp (\".debug_frame\", segment_name (sec), 12) == 0))\n+  if ((l == 9 && startswith (segment_name (sec), \".eh_frame\"))\n+       || (l == 12 && startswith (segment_name (sec), \".debug_frame\")))\n     return 1;\n   return 0;\n }"
    },
    {
      "sha": "1870955380f4496d236607afac7d575e7a9f8eec",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1353,7 +1353,7 @@ create_register_alias (char *newname, char *p)\n   /* The input scrubber ensures that whitespace after the mnemonic is\n      collapsed to single spaces.  */\n   oldname = p;\n-  if (strncmp (oldname, \" .req \", 6) != 0)\n+  if (!startswith (oldname, \" .req \"))\n     return false;\n \n   oldname += 6;\n@@ -2372,7 +2372,7 @@ parse_aarch64_imm_float (char **ccp, int *immed, bool dp_p,\n   fpnum = str;\n   skip_whitespace (fpnum);\n \n-  if (strncmp (fpnum, \"0x\", 2) == 0)\n+  if (startswith (fpnum, \"0x\"))\n     {\n       /* Support the hexadecimal representation of the IEEE754 encoding.\n \t Double-precision is expected when DP_P is TRUE, otherwise the\n@@ -7253,7 +7253,7 @@ aarch64_frob_section (asection *sec ATTRIBUTE_UNUSED)\n int\n aarch64_data_in_code (void)\n {\n-  if (!strncmp (input_line_pointer + 1, \"data:\", 5))\n+  if (startswith (input_line_pointer + 1, \"data:\"))\n     {\n       *input_line_pointer = '/';\n       input_line_pointer += 5;\n@@ -9287,7 +9287,7 @@ aarch64_parse_features (const char *str, const aarch64_feature_set **opt_p,\n       else\n \toptlen = strlen (str);\n \n-      if (optlen >= 2 && strncmp (str, \"no\", 2) == 0)\n+      if (optlen >= 2 && startswith (str, \"no\"))\n \t{\n \t  if (adding_value != 0)\n \t    adding_value = 0;\n@@ -9504,8 +9504,7 @@ md_parse_option (int c, const char *arg)\n \t  /* These options are expected to have an argument.  */\n \t  if (c == lopt->option[0]\n \t      && arg != NULL\n-\t      && strncmp (arg, lopt->option + 1,\n-\t\t\t  strlen (lopt->option + 1)) == 0)\n+\t      && startswith (arg, lopt->option + 1))\n \t    {\n \t      /* If the option is deprecated, tell the user.  */\n \t      if (lopt->deprecated != NULL)"
    },
    {
      "sha": "ed2e8a98e7ed6aa43866cbc84a6e52c453021349",
      "filename": "gas/config/tc-alpha.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-alpha.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -4229,7 +4229,7 @@ s_alpha_section_word (char *str, size_t len)\n   int no = 0;\n   flagword flag = 0;\n \n-  if (len == 5 && strncmp (str, \"NO\", 2) == 0)\n+  if (len == 5 && startswith (str, \"NO\"))\n     {\n       no = 1;\n       str += 2;\n@@ -4238,30 +4238,30 @@ s_alpha_section_word (char *str, size_t len)\n \n   if (len == 3)\n     {\n-      if (strncmp (str, \"PIC\", 3) == 0)\n+      if (startswith (str, \"PIC\"))\n \tflag = EGPS__V_PIC;\n-      else if (strncmp (str, \"LIB\", 3) == 0)\n+      else if (startswith (str, \"LIB\"))\n \tflag = EGPS__V_LIB;\n-      else if (strncmp (str, \"OVR\", 3) == 0)\n+      else if (startswith (str, \"OVR\"))\n \tflag = EGPS__V_OVR;\n-      else if (strncmp (str, \"REL\", 3) == 0)\n+      else if (startswith (str, \"REL\"))\n \tflag = EGPS__V_REL;\n-      else if (strncmp (str, \"GBL\", 3) == 0)\n+      else if (startswith (str, \"GBL\"))\n \tflag = EGPS__V_GBL;\n-      else if (strncmp (str, \"SHR\", 3) == 0)\n+      else if (startswith (str, \"SHR\"))\n \tflag = EGPS__V_SHR;\n-      else if (strncmp (str, \"EXE\", 3) == 0)\n+      else if (startswith (str, \"EXE\"))\n \tflag = EGPS__V_EXE;\n-      else if (strncmp (str, \"WRT\", 3) == 0)\n+      else if (startswith (str, \"WRT\"))\n \tflag = EGPS__V_WRT;\n-      else if (strncmp (str, \"VEC\", 3) == 0)\n+      else if (startswith (str, \"VEC\"))\n \tflag = EGPS__V_VEC;\n-      else if (strncmp (str, \"MOD\", 3) == 0)\n+      else if (startswith (str, \"MOD\"))\n \t{\n \t  flag = no ? EGPS__V_NOMOD : EGPS__V_NOMOD << EGPS__V_NO_SHIFT;\n \t  no = 0;\n \t}\n-      else if (strncmp (str, \"COM\", 3) == 0)\n+      else if (startswith (str, \"COM\"))\n \tflag = EGPS__V_COM;\n     }\n \n@@ -4544,13 +4544,13 @@ s_alpha_pdesc (int ignore ATTRIBUTE_UNUSED)\n   SKIP_WHITESPACE ();\n   name_end = get_symbol_name (&name);\n \n-  if (strncmp (name, \"stack\", 5) == 0)\n+  if (startswith (name, \"stack\"))\n     alpha_evax_proc->pdsckind = PDSC_S_K_KIND_FP_STACK;\n \n-  else if (strncmp (name, \"reg\", 3) == 0)\n+  else if (startswith (name, \"reg\"))\n     alpha_evax_proc->pdsckind = PDSC_S_K_KIND_FP_REGISTER;\n \n-  else if (strncmp (name, \"null\", 4) == 0)\n+  else if (startswith (name, \"null\"))\n     alpha_evax_proc->pdsckind = PDSC_S_K_KIND_NULL;\n \n   else"
    },
    {
      "sha": "3cd33dace48c0029bed3001a4c2da97f6f5e643f",
      "filename": "gas/config/tc-arc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-arc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-arc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arc.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -4723,17 +4723,17 @@ tokenize_extregister (extRegister_t *ereg, int opertype)\n       input_line_pointer++;\n       mode = input_line_pointer;\n \n-      if (!strncmp (mode, \"r|w\", 3))\n+      if (startswith (mode, \"r|w\"))\n \t{\n \t  imode = 0;\n \t  input_line_pointer += 3;\n \t}\n-      else if (!strncmp (mode, \"r\", 1))\n+      else if (startswith (mode, \"r\"))\n \t{\n \t  imode = ARC_REGISTER_READONLY;\n \t  input_line_pointer += 1;\n \t}\n-      else if (strncmp (mode, \"w\", 1))\n+      else if (!startswith (mode, \"w\"))\n \t{\n \t  as_bad (_(\"invalid mode\"));\n \t  ignore_rest_of_line ();\n@@ -4761,12 +4761,12 @@ tokenize_extregister (extRegister_t *ereg, int opertype)\n \n       input_line_pointer++;\n \n-      if (!strncmp (input_line_pointer, \"cannot_shortcut\", 15))\n+      if (startswith (input_line_pointer, \"cannot_shortcut\"))\n \t{\n \t  imode |= ARC_REGISTER_NOSHORT_CUT;\n \t  input_line_pointer += 15;\n \t}\n-      else if (strncmp (input_line_pointer, \"can_shortcut\", 12))\n+      else if (!startswith (input_line_pointer, \"can_shortcut\"))\n \t{\n \t  as_bad (_(\"shortcut designator invalid\"));\n \t  ignore_rest_of_line ();"
    },
    {
      "sha": "4888c0892171333283eec04c51772ce81aac7657",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 11,
      "deletions": 12,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -2624,7 +2624,7 @@ create_register_alias (char * newname, char *p)\n   /* The input scrubber ensures that whitespace after the mnemonic is\n      collapsed to single spaces.  */\n   oldname = p;\n-  if (strncmp (oldname, \" .req \", 6) != 0)\n+  if (!startswith (oldname, \" .req \"))\n     return false;\n \n   oldname += 6;\n@@ -2715,9 +2715,9 @@ create_neon_reg_alias (char *newname, char *p)\n \n   nameend = p;\n \n-  if (strncmp (p, \" .dn \", 5) == 0)\n+  if (startswith (p, \" .dn \"))\n     basetype = REG_TYPE_VFD;\n-  else if (strncmp (p, \" .qn \", 5) == 0)\n+  else if (startswith (p, \" .qn \"))\n     basetype = REG_TYPE_NQ;\n   else\n     return false;\n@@ -5401,7 +5401,7 @@ parse_ifimm_zero (char **in)\n     ++*in;\n \n   /* Accept #0x0 as a synonym for #0.  */\n-  if (strncmp (*in, \"0x\", 2) == 0)\n+  if (startswith (*in, \"0x\"))\n     {\n       int val;\n       if (parse_immediate (in, &val, 0, 0, true) == FAIL)\n@@ -5445,7 +5445,7 @@ parse_qfloat_immediate (char **ccp, int *immed)\n   fpnum = str;\n   skip_whitespace (fpnum);\n \n-  if (strncmp (fpnum, \"0x\", 2) == 0)\n+  if (startswith (fpnum, \"0x\"))\n     return FAIL;\n   else\n     {\n@@ -23727,7 +23727,7 @@ arm_frob_label (symbolS * sym)\n bool\n arm_data_in_code (void)\n {\n-  if (thumb_mode && ! strncmp (input_line_pointer + 1, \"data:\", 5))\n+  if (thumb_mode && startswith (input_line_pointer + 1, \"data:\"))\n     {\n       *input_line_pointer = '/';\n       input_line_pointer += 5;\n@@ -27418,7 +27418,7 @@ arm_elf_change_section (void)\n int\n arm_elf_section_type (const char * str, size_t len)\n {\n-  if (len == 5 && strncmp (str, \"exidx\", 5) == 0)\n+  if (len == 5 && startswith (str, \"exidx\"))\n     return SHT_ARM_EXIDX;\n \n   return -1;\n@@ -27588,8 +27588,7 @@ start_unwind_section (const segT text_seg, int idx)\n   if (streq (text_name, \".text\"))\n     text_name = \"\";\n \n-  if (strncmp (text_name, \".gnu.linkonce.t.\",\n-\t       strlen (\".gnu.linkonce.t.\")) == 0)\n+  if (startswith (text_name, \".gnu.linkonce.t.\"))\n     {\n       prefix = prefix_once;\n       text_name += strlen (\".gnu.linkonce.t.\");\n@@ -32213,7 +32212,7 @@ arm_parse_extension (const char *str, const arm_feature_set *opt_set,\n       else\n \tlen = strlen (str);\n \n-      if (len >= 2 && strncmp (str, \"no\", 2) == 0)\n+      if (len >= 2 && startswith (str, \"no\"))\n \t{\n \t  if (adding_value != 0)\n \t    {\n@@ -33007,7 +33006,7 @@ aeabi_set_public_attributes (void)\n       char *q;\n \n       q = selected_cpu_name;\n-      if (strncmp (q, \"armv\", 4) == 0)\n+      if (startswith (q, \"armv\"))\n \t{\n \t  int i;\n \n@@ -33300,7 +33299,7 @@ s_arm_arch_extension (int ignored ATTRIBUTE_UNUSED)\n   *input_line_pointer = 0;\n \n   if (strlen (name) >= 2\n-      && strncmp (name, \"no\", 2) == 0)\n+      && startswith (name, \"no\"))\n     {\n       adding_value = 0;\n       name += 2;"
    },
    {
      "sha": "397f22d550276723d272ec3509cd9f906dd9fe05",
      "filename": "gas/config/tc-avr.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-avr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-avr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-avr.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -942,10 +942,10 @@ avr_ldi_expression (expressionS *exp)\n \n \t      ++str;\n \n-\t      if (strncmp (\"pm(\", str, 3) == 0\n-                  || strncmp (\"gs(\",str,3) == 0\n-                  || strncmp (\"-(gs(\",str,5) == 0\n-\t\t  || strncmp (\"-(pm(\", str, 5) == 0)\n+\t      if (startswith (str, \"pm(\")\n+                  || startswith (str, \"gs(\")\n+                  || startswith (str, \"-(gs(\")\n+\t\t  || startswith (str, \"-(pm(\"))\n \t\t{\n \t\t  if (HAVE_PM_P (mod))\n \t\t    {"
    },
    {
      "sha": "35a7252786c87315e066282b75e7fbc07f83404a",
      "filename": "gas/config/tc-csky.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-csky.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-csky.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-csky.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -2781,8 +2781,8 @@ is_freglist_legal (char **oper)\n   reg2 = reg2 - reg1;\n   /* The fldm/fstm in CSKY_ISA_FLOAT_7E60 has 5 bits frz(reg1).  */\n   shift = 4;\n-  if (strncmp (csky_insn.opcode->mnemonic, \"fstm\", 4) == 0\n-      || strncmp (csky_insn.opcode->mnemonic, \"fldm\", 4) == 0)\n+  if (startswith (csky_insn.opcode->mnemonic, \"fstm\")\n+      || startswith (csky_insn.opcode->mnemonic, \"fldm\"))\n     {\n       if ((!(isa_flag & CSKY_ISA_FLOAT_7E60)\n \t   && (reg2 > (int)15 || reg1 > 15))\n@@ -7758,7 +7758,7 @@ csky_s_section (int ignore)\n   while (*ilp != 0 && ISSPACE (*ilp))\n     ++ ilp;\n \n-  if (strncmp (ilp, \".line\", 5) == 0\n+  if (startswith (ilp, \".line\")\n       && (ISSPACE (ilp[5]) || *ilp == '\\n' || *ilp == '\\r'))\n     ;\n   else"
    },
    {
      "sha": "1fb078662fabdde95bb9242e92ea172407db0453",
      "filename": "gas/config/tc-d30v.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-d30v.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-d30v.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-d30v.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1339,7 +1339,7 @@ do_assemble (char *str,\n     opcode->ecc = ECC_AL;\n \n   /* CMP and CMPU change their name based on condition codes.  */\n-  if (!strncmp (name, \"cmp\", 3))\n+  if (startswith (name, \"cmp\"))\n     {\n       int p, i;\n       char **d30v_str = (char **) d30v_cc_names;"
    },
    {
      "sha": "a8aa2d1bc90ae04117bca723ad6ed7e1176b9349",
      "filename": "gas/config/tc-dlx.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-dlx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-dlx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-dlx.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -592,14 +592,14 @@ parse_operand (char *s, expressionS *operandp)\n   the_insn.HI = the_insn.LO = 0;\n \n   /* Search for %hi and %lo, make a mark and skip it.  */\n-  if (strncmp (s, \"%hi\", 3) == 0)\n+  if (startswith (s, \"%hi\"))\n     {\n       s += 3;\n       the_insn.HI = 1;\n     }\n   else\n     {\n-      if (strncmp (s, \"%lo\", 3) == 0)\n+      if (startswith (s, \"%lo\"))\n \t{\n \t  s += 3;\n \t  the_insn.LO = 1;"
    },
    {
      "sha": "eb7a3944d9028f685e5b38f3226fcf6ca12101d8",
      "filename": "gas/config/tc-epiphany.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-epiphany.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-epiphany.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-epiphany.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -529,13 +529,13 @@ md_assemble (char *str)\n   int regmask=0, push=0, pop=0;\n \n   /* Special-case push/pop instruction macros.  */\n-  if (0 == strncmp (str, \"push {\", 6))\n+  if (startswith (str, \"push {\"))\n     {\n       char * s = str + 6;\n       push = 1;\n       pperr = parse_reglist (s, &regmask);\n     }\n-  else if (0 == strncmp (str, \"pop {\", 5))\n+  else if (startswith (str, \"pop {\"))\n     {\n       char * s = str + 5;\n       pop = 1;"
    },
    {
      "sha": "e1f359aec0178aebdfbe2883890c12780d505aca",
      "filename": "gas/config/tc-h8300.c",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-h8300.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-h8300.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-h8300.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -167,8 +167,7 @@ h8300_elf_section (int push)\n \n       if (i < 0)\n \tfor (i = ARRAY_SIZE (known_data_prefixes); i--;)\n-\t  if (strncmp (name, known_data_prefixes[i],\n-\t\t       strlen (known_data_prefixes[i])) == 0)\n+\t  if (startswith (name, known_data_prefixes[i]))\n \t    break;\n \n       if (i < 0)\n@@ -872,10 +871,10 @@ get_operand (char **ptr, struct h8_op *op, int direction)\n       *ptr = parse_exp (src + 1, op);\n       return;\n     }\n-  else if (strncmp (src, \"mach\", 4) == 0 ||\n-\t   strncmp (src, \"macl\", 4) == 0 ||\n-\t   strncmp (src, \"MACH\", 4) == 0 ||\n-\t   strncmp (src, \"MACL\", 4) == 0)\n+  else if (startswith (src, \"mach\") ||\n+\t   startswith (src, \"macl\") ||\n+\t   startswith (src, \"MACH\") ||\n+\t   startswith (src, \"MACL\"))\n     {\n       op->reg = TOLOWER (src[3]) == 'l';\n       op->mode = MACREG;"
    },
    {
      "sha": "e82c0636ff15706a41be11a763358037c37dec85",
      "filename": "gas/config/tc-hppa.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-hppa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-hppa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-hppa.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -3553,7 +3553,7 @@ pa_ip (char *str)\n \t\t/* Handle load cache hint completer.  */\n \t\tcase 'c':\n \t\t  cmpltr = 0;\n-\t\t  if (!strncmp (s, \",sl\", 3))\n+\t\t  if (startswith (s, \",sl\"))\n \t\t    {\n \t\t      s += 3;\n \t\t      cmpltr = 2;\n@@ -3563,12 +3563,12 @@ pa_ip (char *str)\n \t\t/* Handle store cache hint completer.  */\n \t\tcase 'C':\n \t\t  cmpltr = 0;\n-\t\t  if (!strncmp (s, \",sl\", 3))\n+\t\t  if (startswith (s, \",sl\"))\n \t\t    {\n \t\t      s += 3;\n \t\t      cmpltr = 2;\n \t\t    }\n-\t\t  else if (!strncmp (s, \",bc\", 3))\n+\t\t  else if (startswith (s, \",bc\"))\n \t\t    {\n \t\t      s += 3;\n \t\t      cmpltr = 1;\n@@ -3578,7 +3578,7 @@ pa_ip (char *str)\n \t\t/* Handle load and clear cache hint completer.  */\n \t\tcase 'd':\n \t\t  cmpltr = 0;\n-\t\t  if (!strncmp (s, \",co\", 3))\n+\t\t  if (startswith (s, \",co\"))\n \t\t    {\n \t\t      s += 3;\n \t\t      cmpltr = 1;\n@@ -3587,7 +3587,7 @@ pa_ip (char *str)\n \n \t\t/* Handle load ordering completer.  */\n \t\tcase 'o':\n-\t\t  if (strncmp (s, \",o\", 2) != 0)\n+\t\t  if (!startswith (s, \",o\"))\n \t\t    break;\n \t\t  s += 2;\n \t\t  continue;\n@@ -4098,12 +4098,12 @@ pa_ip (char *str)\n \t\t\telse if (*s == '*')\n \t\t\t  break;\n \n-\t\t\tif (strncmp (s, \"<\", 1) == 0)\n+\t\t\tif (startswith (s, \"<\"))\n \t\t\t  {\n \t\t\t    cmpltr = 0;\n \t\t\t    s++;\n \t\t\t  }\n-\t\t\telse if (strncmp (s, \">=\", 2) == 0)\n+\t\t\telse if (startswith (s, \">=\"))\n \t\t\t  {\n \t\t\t    cmpltr = 1;\n \t\t\t    s += 2;\n@@ -6813,25 +6813,25 @@ pa_level (int unused ATTRIBUTE_UNUSED)\n   char *level;\n \n   level = input_line_pointer;\n-  if (strncmp (level, \"1.0\", 3) == 0)\n+  if (startswith (level, \"1.0\"))\n     {\n       input_line_pointer += 3;\n       if (!bfd_set_arch_mach (stdoutput, bfd_arch_hppa, 10))\n \tas_warn (_(\"could not set architecture and machine\"));\n     }\n-  else if (strncmp (level, \"1.1\", 3) == 0)\n+  else if (startswith (level, \"1.1\"))\n     {\n       input_line_pointer += 3;\n       if (!bfd_set_arch_mach (stdoutput, bfd_arch_hppa, 11))\n \tas_warn (_(\"could not set architecture and machine\"));\n     }\n-  else if (strncmp (level, \"2.0w\", 4) == 0)\n+  else if (startswith (level, \"2.0w\"))\n     {\n       input_line_pointer += 4;\n       if (!bfd_set_arch_mach (stdoutput, bfd_arch_hppa, 25))\n \tas_warn (_(\"could not set architecture and machine\"));\n     }\n-  else if (strncmp (level, \"2.0\", 3) == 0)\n+  else if (startswith (level, \"2.0\"))\n     {\n       input_line_pointer += 3;\n       if (!bfd_set_arch_mach (stdoutput, bfd_arch_hppa, 20))\n@@ -7202,7 +7202,7 @@ pa_space (int unused ATTRIBUTE_UNUSED)\n \t and place them into a subroutine or something similar?  */\n       /* FIXME Is this (and the next IF stmt) really right?\n \t What if INPUT_LINE_POINTER points to \"$TEXT$FOO\"?  */\n-      if (strncmp (input_line_pointer, \"$TEXT$\", 6) == 0)\n+      if (startswith (input_line_pointer, \"$TEXT$\"))\n \t{\n \t  input_line_pointer += 6;\n \t  sd_chain = is_defined_space (\"$TEXT$\");\n@@ -7219,7 +7219,7 @@ pa_space (int unused ATTRIBUTE_UNUSED)\n \t  demand_empty_rest_of_line ();\n \t  return;\n \t}\n-      if (strncmp (input_line_pointer, \"$PRIVATE$\", 9) == 0)\n+      if (startswith (input_line_pointer, \"$PRIVATE$\"))\n \t{\n \t  input_line_pointer += 9;\n \t  sd_chain = is_defined_space (\"$PRIVATE$\");"
    },
    {
      "sha": "235bac075dd356d728a5e5bfc71e417306b08652",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -3009,7 +3009,7 @@ i386_arch (void)\n unsigned long\n i386_mach (void)\n {\n-  if (!strncmp (default_arch, \"x86_64\", 6))\n+  if (startswith (default_arch, \"x86_64\"))\n     {\n       if (cpu_arch_isa == PROCESSOR_L1OM)\n \t{\n@@ -4730,10 +4730,10 @@ md_assemble (char *line)\n       && i.operands > 1\n       && (strcmp (mnemonic, \"bound\") != 0)\n       && (strncmp (mnemonic, \"invlpg\", 6) != 0)\n-      && (strncmp (mnemonic, \"monitor\", 7) != 0)\n-      && (strncmp (mnemonic, \"mwait\", 5) != 0)\n+      && !startswith (mnemonic, \"monitor\")\n+      && !startswith (mnemonic, \"mwait\")\n       && (strcmp (mnemonic, \"pvalidate\") != 0)\n-      && (strncmp (mnemonic, \"rmp\", 3) != 0)\n+      && !startswith (mnemonic, \"rmp\")\n       && (strcmp (mnemonic, \"tpause\") != 0)\n       && (strcmp (mnemonic, \"umwait\") != 0)\n       && !(operand_type_check (i.types[0], imm)\n@@ -10416,7 +10416,7 @@ check_VecOperations (char *op_string, char *op_end)\n \t  op_string++;\n \n \t  /* Check broadcasts.  */\n-\t  if (strncmp (op_string, \"1to\", 3) == 0)\n+\t  if (startswith (op_string, \"1to\"))\n \t    {\n \t      unsigned int bcst_type;\n \n@@ -13754,7 +13754,7 @@ md_show_usage (FILE *stream)\n const char *\n i386_target_format (void)\n {\n-  if (!strncmp (default_arch, \"x86_64\", 6))\n+  if (startswith (default_arch, \"x86_64\"))\n     {\n       update_code_flag (CODE_64BIT, 1);\n       if (default_arch[6] == '\\0')\n@@ -14322,7 +14322,7 @@ i386_elf_section_type (const char *str, size_t len)\n {\n   if (flag_code == CODE_64BIT\n       && len == sizeof (\"unwind\") - 1\n-      && strncmp (str, \"unwind\", 6) == 0)\n+      && startswith (str, \"unwind\"))\n     return SHT_X86_64_UNWIND;\n \n   return -1;"
    },
    {
      "sha": "c1008c2b0bd8e4dd5a6e844477253569b20e8189",
      "filename": "gas/config/tc-ia64.c",
      "status": "modified",
      "additions": 11,
      "deletions": 12,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ia64.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -3560,7 +3560,7 @@ start_unwind_section (const segT text_seg, int sec_index)\n \n   sec_text_name = segment_name (text_seg);\n   text_name = sec_text_name;\n-  if (strncmp (text_name, \"_info\", 5) == 0)\n+  if (startswith (text_name, \"_info\"))\n     {\n       as_bad (_(\"Illegal section name `%s' (causes unwind section name clash)\"),\n \t      text_name);\n@@ -3573,8 +3573,7 @@ start_unwind_section (const segT text_seg, int sec_index)\n   /* Build the unwind section name by appending the (possibly stripped)\n      text section name to the unwind prefix.  */\n   suffix = text_name;\n-  if (strncmp (text_name, \".gnu.linkonce.t.\",\n-\t       sizeof (\".gnu.linkonce.t.\") - 1) == 0)\n+  if (startswith (text_name, \".gnu.linkonce.t.\"))\n     {\n       prefix = special_linkonce_name [sec_index - SPECIAL_SECTION_UNWIND];\n       suffix += sizeof (\".gnu.linkonce.t.\") - 1;\n@@ -7004,7 +7003,7 @@ md_parse_option (int c, const char *arg)\n \t  md.flags |= EF_IA_64_BE;\n \t  default_big_endian = 1;\n \t}\n-      else if (strncmp (arg, \"unwind-check=\", 13) == 0)\n+      else if (startswith (arg, \"unwind-check=\"))\n \t{\n \t  arg += 13;\n \t  if (strcmp (arg, \"warning\") == 0)\n@@ -7014,7 +7013,7 @@ md_parse_option (int c, const char *arg)\n \t  else\n \t    return 0;\n \t}\n-      else if (strncmp (arg, \"hint.b=\", 7) == 0)\n+      else if (startswith (arg, \"hint.b=\"))\n \t{\n \t  arg += 7;\n \t  if (strcmp (arg, \"ok\") == 0)\n@@ -7026,7 +7025,7 @@ md_parse_option (int c, const char *arg)\n \t  else\n \t    return 0;\n \t}\n-      else if (strncmp (arg, \"tune=\", 5) == 0)\n+      else if (startswith (arg, \"tune=\"))\n \t{\n \t  arg += 5;\n \t  if (strcmp (arg, \"itanium1\") == 0)\n@@ -7074,7 +7073,7 @@ md_parse_option (int c, const char *arg)\n \t\t\texit:\tbranch out from the current context (default)\n \t\t\tlabels:\tall labels in context may be branch targets\n        */\n-      if (strncmp (arg, \"indirect=\", 9) != 0)\n+      if (!startswith (arg, \"indirect=\"))\n         return 0;\n       break;\n \n@@ -8106,7 +8105,7 @@ static int\n is_taken_branch (struct ia64_opcode *idesc)\n {\n   return ((is_conditional_branch (idesc) && CURR_SLOT.qp_regno == 0)\n-\t  || strncmp (idesc->name, \"br.ia\", 5) == 0);\n+\t  || startswith (idesc->name, \"br.ia\"));\n }\n \n /* Return whether the given opcode is an interruption or rfi.  If there's any\n@@ -9498,7 +9497,7 @@ dep->name, idesc->name, (rsrc_write?\"write\":\"read\"), note)\n       /* FIXME we can identify some individual RSE written resources, but RSE\n \t read resources have not yet been completely identified, so for now\n \t treat RSE as a single resource */\n-      if (strncmp (idesc->name, \"mov\", 3) == 0)\n+      if (startswith (idesc->name, \"mov\"))\n \t{\n \t  if (rsrc_write)\n \t    {\n@@ -9864,8 +9863,8 @@ note_register_values (struct ia64_opcode *idesc)\n     }\n   /* After a call, all register values are undefined, except those marked\n      as \"safe\".  */\n-  else if (strncmp (idesc->name, \"br.call\", 6) == 0\n-\t   || strncmp (idesc->name, \"brl.call\", 7) == 0)\n+  else if (startswith (idesc->name, \"br.call\")\n+\t   || startswith (idesc->name, \"brl.call\"))\n     {\n       /* FIXME keep GR values which are marked as \"safe_across_calls\"  */\n       clear_register_values ();\n@@ -11843,7 +11842,7 @@ do_alias (void **slot, void *arg ATTRIBUTE_UNUSED)\n       /* Uses .alias extensively to alias CRTL functions to same with\n \t decc$ prefix. Sometimes function gets optimized away and a\n \t warning results, which should be suppressed.  */\n-      if (strncmp (tuple->key, \"decc$\", 5) != 0)\n+      if (!startswith (tuple->key, \"decc$\"))\n #endif\n \tas_warn_where (h->file, h->line,\n \t\t       _(\"symbol `%s' aliased to `%s' is not used\"),"
    },
    {
      "sha": "830886a183e816d5d7809096079c5a45806e6816",
      "filename": "gas/config/tc-m32c.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-m32c.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-m32c.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-m32c.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -519,8 +519,8 @@ insn_to_subtype (int inum, const CGEN_INSN *insn)\n   unsigned int i;\n \n   if (insn\n-      && (strncmp (insn->base->mnemonic, \"adjnz\", 5) == 0\n-\t  || strncmp (insn->base->mnemonic, \"sbjnz\", 5) == 0))\n+      && (startswith (insn->base->mnemonic, \"adjnz\")\n+\t  || startswith (insn->base->mnemonic, \"sbjnz\")))\n     {\n       i = 23 + insn->base->bitsize/8 - 3;\n       /*printf(\"mapping %d used for %s\\n\", i, insn->base->mnemonic);*/"
    },
    {
      "sha": "b31f5cade67bf1570012feb139c2e0f4c16ab9b1",
      "filename": "gas/config/tc-m68hc11.c",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-m68hc11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-m68hc11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-m68hc11.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1177,19 +1177,19 @@ get_operand (operand *oper, int which, long opmode)\n \n       mode = M6811_OP_IMM16;\n       p++;\n-      if (strncmp (p, \"%hi\", 3) == 0)\n+      if (startswith (p, \"%hi\"))\n \t{\n \t  p += 3;\n \t  mode |= M6811_OP_HIGH_ADDR;\n \t}\n-      else if (strncmp (p, \"%lo\", 3) == 0)\n+      else if (startswith (p, \"%lo\"))\n \t{\n \t  p += 3;\n \t  mode |= M6811_OP_LOW_ADDR;\n \t}\n       /* %page modifier is used to obtain only the page number\n          of the address of a function.  */\n-      else if (strncmp (p, \"%page\", 5) == 0)\n+      else if (startswith (p, \"%page\"))\n \t{\n \t  p += 5;\n \t  mode |= M6811_OP_PAGE_ADDR;\n@@ -1200,7 +1200,7 @@ get_operand (operand *oper, int which, long opmode)\n          mapped in the 16K window at 0x8000 and the value will be\n          within that window (although the function address may not fit\n          in 16-bit).  See bfd/elf32-m68hc12.c for the translation.  */\n-      else if (strncmp (p, \"%addr\", 5) == 0)\n+      else if (startswith (p, \"%addr\"))\n \t{\n \t  p += 5;\n \t  mode |= M6811_OP_CALL_ADDR;\n@@ -1238,7 +1238,7 @@ get_operand (operand *oper, int which, long opmode)\n       return -1;\n     }\n   /* Handle 68HC12 page specification in 'call foo,%page(bar)'.  */\n-  else if ((opmode & M6812_OP_PAGE) && strncmp (p, \"%page\", 5) == 0)\n+  else if ((opmode & M6812_OP_PAGE) && startswith (p, \"%page\"))\n     {\n       p += 5;\n       mode = M6811_OP_PAGE_ADDR | M6812_OP_PAGE | M6811_OP_IND16;\n@@ -2873,7 +2873,7 @@ md_assemble (char *str)\n         }\n \n       /* Special handling of TFR. */\n-      if (strncmp (opc->opcode->name, \"tfr\",3) == 0)\n+      if (startswith (opc->opcode->name, \"tfr\"))\n         {\n           /* There must be two operands with a comma. */\n           input_line_pointer = skip_whites (input_line_pointer);\n@@ -2995,7 +2995,7 @@ md_assemble (char *str)\n \t}\n \n       /* Special handling of SIF. */\n-      if (strncmp (opc->opcode->name, \"sif\",3) == 0)\n+      if (startswith (opc->opcode->name, \"sif\"))\n         {\n           /* Either OP_NONE or OP_RS. */\n           if (*input_line_pointer != '\\n')\n@@ -3040,13 +3040,13 @@ md_assemble (char *str)\n                   opcode = find (opc, operands, 1);\n                   if (opcode)\n \t\t    {\n-                      if ((strncmp (opc->opcode->name, \"com\",3) == 0)\n-                          || (strncmp (opc->opcode->name, \"neg\",3) == 0))\n+                      if ((startswith (opc->opcode->name, \"com\"))\n+                          || (startswith (opc->opcode->name, \"neg\")))\n                         /* Special case for com RD as alias for sub RD,R0,RS */\n                         /* Special case for neg RD as alias for sub RD,R0,RS */\n                         opcode_local.opcode = opcode->opcode\n                           | (operands[0].reg1 << 8) | (operands[0].reg1 << 2);\n-\t\t      else if (strncmp (opc->opcode->name, \"tst\",3) == 0)\n+\t\t      else if (startswith (opc->opcode->name, \"tst\"))\n                         /* Special case for tst RS alias for sub R0, RS, R0 */\n                         opcode_local.opcode = opcode->opcode\n                           | (operands[0].reg1 << 5);\n@@ -3128,12 +3128,12 @@ md_assemble (char *str)\n             {\n               input_line_pointer++;\n               input_line_pointer = skip_whites (input_line_pointer);\n-              if (strncmp (input_line_pointer, \"%hi\", 3) == 0)\n+              if (startswith (input_line_pointer, \"%hi\"))\n                 {\n                   input_line_pointer += 3;\n                   operands[0].mode = M6811_OP_HIGH_ADDR;\n                 }\n-              else if (strncmp (input_line_pointer, \"%lo\", 3) == 0)\n+              else if (startswith (input_line_pointer, \"%lo\"))\n                 {\n \t\t  input_line_pointer += 3;\n \t\t  operands[0].mode = M6811_OP_LOW_ADDR;\n@@ -3216,9 +3216,9 @@ md_assemble (char *str)\n                   opcode = find (opc, operands, 1);\n                   if (opcode)\n                     {\n-                      if ((strncmp (opc->opcode->name, \"com\",3) == 0)\n-\t\t\t  || (strncmp (opc->opcode->name, \"mov\",3) == 0)\n-\t\t\t  || (strncmp (opc->opcode->name, \"neg\",3) == 0))\n+                      if ((startswith (opc->opcode->name, \"com\"))\n+\t\t\t  || (startswith (opc->opcode->name, \"mov\"))\n+\t\t\t  || (startswith (opc->opcode->name, \"neg\")))\n                         {\n                           /* Special cases for:\n                              com RD, RS alias for xnor RD,R0,RS\n@@ -3227,8 +3227,8 @@ md_assemble (char *str)\n                           opcode_local.opcode = opcode->opcode\n                             | (operands[0].reg1 << 8) | (operands[1].reg1 << 2);\n                         }\n-                      else if ((strncmp (opc->opcode->name, \"cmp\",3) == 0)\n-\t\t\t       || (strncmp (opc->opcode->name, \"cpc\",3) == 0))\n+                      else if ((startswith (opc->opcode->name, \"cmp\"))\n+\t\t\t       || (startswith (opc->opcode->name, \"cpc\")))\n                         {\n                           /* special cases for:\n                              cmp RS1, RS2 alias for sub R0, RS1, RS2"
    },
    {
      "sha": "f503b24a7edc4443eddad217cab128c9f96c7da9",
      "filename": "gas/config/tc-m68k.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-m68k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-m68k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-m68k.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1839,7 +1839,7 @@ m68k_ip (char *instring)\n \t\tcase 'B':\t/* FOO */\n \t\t  if (opP->mode != ABSL\n \t\t      || (flag_long_jumps\n-\t\t\t  && strncmp (instring, \"jbsr\", 4) == 0))\n+\t\t\t  && startswith (instring, \"jbsr\")))\n \t\t    losing++;\n \t\t  break;\n \n@@ -2039,8 +2039,8 @@ m68k_ip (char *instring)\n \t\t\t   || TRUNC (opP->disp.exp.X_add_number) - 1 > 7)\n \t\t    losing++;\n \t\t  else if (! m68k_quick\n-\t\t\t   && (strncmp (instring, \"add\", 3) == 0\n-\t\t\t       || strncmp (instring, \"sub\", 3) == 0)\n+\t\t\t   && (startswith (instring, \"add\")\n+\t\t\t       || startswith (instring, \"sub\"))\n \t\t\t   && instring[3] != 'q')\n \t\t    losing++;\n \t\t  break;\n@@ -7482,9 +7482,9 @@ md_parse_option (int c, const char *arg)\n #endif\n       /* Intentional fall-through.  */\n     case 'm':\n-      if (!strncmp (arg, \"arch=\", 5))\n+      if (startswith (arg, \"arch=\"))\n \tm68k_set_arch (arg + 5, 1, 0);\n-      else if (!strncmp (arg, \"cpu=\", 4))\n+      else if (startswith (arg, \"cpu=\"))\n \tm68k_set_cpu (arg + 4, 1, 0);\n       else if (m68k_set_extension (arg, 0, 1))\n \t;\n@@ -7861,7 +7861,7 @@ m68k_elf_suffix (char **str_p, expressionS *exp_p)\n   *str2 = '\\0';\n   len = str2 - ident;\n \n-  if (strncmp (ident, \"TLSLDO\", 6) == 0\n+  if (startswith (ident, \"TLSLDO\")\n       && len == 6)\n     {\n       /* Now check for identifier@suffix+constant.  */"
    },
    {
      "sha": "443253f396415192eb5c14060bf04d81b83285f9",
      "filename": "gas/config/tc-mcore.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mcore.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mcore.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mcore.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -361,7 +361,7 @@ mcore_s_section (int ignore)\n   while (*ilp != 0 && ISSPACE (*ilp))\n     ++ ilp;\n \n-  if (strncmp (ilp, \".line\", 5) == 0\n+  if (startswith (ilp, \".line\")\n       && (ISSPACE (ilp[5]) || *ilp == '\\n' || *ilp == '\\r'))\n     ;\n   else"
    },
    {
      "sha": "554d4330d334a35190894a4512deb0441076a217",
      "filename": "gas/config/tc-metag.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-metag.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-metag.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-metag.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1003,7 +1003,7 @@ parse_get_set (const char *line, metag_insn *insn,\n \n   if (is_get)\n     {\n-      bool is_mov = strncmp (template->name, \"MOV\", 3) == 0;\n+      bool is_mov = startswith (template->name, \"MOV\");\n \n       l = parse_get (l, regs, &addr, size, is_mov);\n \n@@ -5925,8 +5925,7 @@ md_parse_option (int c, const char * arg)\n       /* These options are expected to have an argument.  */\n       if (c == lopt->option[0]\n \t  && arg != NULL\n-\t  && strncmp (arg, lopt->option + 1,\n-\t\t      strlen (lopt->option + 1)) == 0)\n+\t  && startswith (arg, lopt->option + 1))\n \t{\n #if WARN_DEPRECATED\n \t      /* If the option is deprecated, tell the user.  */"
    },
    {
      "sha": "9893bc47cfd7732c0196027f6929351cbcd68e68",
      "filename": "gas/config/tc-microblaze.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-microblaze.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-microblaze.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-microblaze.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -740,7 +740,7 @@ parse_imm (char * s, expressionS * e, offsetT min, offsetT max)\n \n   new_pointer = parse_exp (s, e);\n \n-  if (!GOT_symbol && ! strncmp (s, GOT_SYMBOL_NAME, 20))\n+  if (!GOT_symbol && startswith (s, GOT_SYMBOL_NAME))\n     {\n       GOT_symbol = symbol_find_or_make (GOT_SYMBOL_NAME);\n     }\n@@ -785,17 +785,17 @@ check_got (int * got_type, int * got_len)\n     if (is_end_of_line[(unsigned char) *atp])\n       return NULL;\n \n-  if (strncmp (atp + 1, \"GOTOFF\", 5) == 0)\n+  if (startswith (atp + 1, \"GOTOFF\"))\n     {\n       *got_len = 6;\n       *got_type = IMM_GOTOFF;\n     }\n-  else if (strncmp (atp + 1, \"GOT\", 3) == 0)\n+  else if (startswith (atp + 1, \"GOT\"))\n     {\n       *got_len = 3;\n       *got_type = IMM_GOT;\n     }\n-  else if (strncmp (atp + 1, \"PLT\", 3) == 0)\n+  else if (startswith (atp + 1, \"PLT\"))\n     {\n       *got_len = 3;\n       *got_type = IMM_PLT;\n@@ -2025,9 +2025,8 @@ md_apply_fix (fixS *   fixP,\n \t  || (symbol_used_in_reloc_p (fixP->fx_addsy)\n \t      && (((bfd_section_flags (S_GET_SEGMENT (fixP->fx_addsy))\n \t\t    & SEC_LINK_ONCE) != 0)\n-\t\t  || !strncmp (segment_name (S_GET_SEGMENT (fixP->fx_addsy)),\n-\t\t\t       \".gnu.linkonce\",\n-\t\t\t       sizeof (\".gnu.linkonce\") - 1))))\n+\t\t  || startswith (segment_name (S_GET_SEGMENT (fixP->fx_addsy)),\n+\t\t\t\t \".gnu.linkonce\"))))\n \t{\n \t  val -= S_GET_VALUE (fixP->fx_addsy);\n \t  if (val != 0 && ! fixP->fx_pcrel)"
    },
    {
      "sha": "9151b222a485208658e72a2caf52f0e8f1e29e2c",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 30,
      "deletions": 31,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -513,8 +513,8 @@ static int mips_32bitmode = 0;\n \n /* Return true if the given CPU supports the MIPS16 ASE.  */\n #define CPU_HAS_MIPS16(cpu)\t\t\t\t\t\t\\\n-   (strncmp (TARGET_CPU, \"mips16\", sizeof (\"mips16\") - 1) == 0\t\t\\\n-    || strncmp (TARGET_CANONICAL, \"mips-lsi-elf\", sizeof (\"mips-lsi-elf\") - 1) == 0)\n+   (startswith (TARGET_CPU, \"mips16\")\t\t\t\t\t\\\n+    || startswith (TARGET_CANONICAL, \"mips-lsi-elf\"))\n \n /* Return true if the given CPU supports the microMIPS ASE.  */\n #define CPU_HAS_MICROMIPS(cpu)\t0\n@@ -3842,8 +3842,8 @@ md_begin (void)\n   /* On a native system other than VxWorks, sections must be aligned\n      to 16 byte boundaries.  When configured for an embedded ELF\n      target, we don't bother.  */\n-  if (strncmp (TARGET_OS, \"elf\", 3) != 0\n-      && strncmp (TARGET_OS, \"vxworks\", 7) != 0)\n+  if (!startswith (TARGET_OS, \"elf\")\n+      && !startswith (TARGET_OS, \"vxworks\"))\n     {\n       bfd_set_section_alignment (text_section, 4);\n       bfd_set_section_alignment (data_section, 4);\n@@ -3865,7 +3865,7 @@ md_begin (void)\n        running program can access it.  However, we don't load it\n        if we are configured for an embedded target.  */\n     flags = SEC_READONLY | SEC_DATA;\n-    if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n+    if (!startswith (TARGET_OS, \"elf\"))\n       flags |= SEC_ALLOC | SEC_LOAD;\n \n     if (mips_abi != N64_ABI)\n@@ -4457,8 +4457,7 @@ s_is_linkonce (symbolS *sym, segT from_seg)\n       /* The GNU toolchain uses an extension for ELF: a section\n \t beginning with the magic string .gnu.linkonce is a\n \t linkonce section.  */\n-      if (strncmp (segment_name (symseg), \".gnu.linkonce\",\n-\t\t   sizeof \".gnu.linkonce\" - 1) == 0)\n+      if (startswith (segment_name (symseg), \".gnu.linkonce\"))\n \tlinkonce = true;\n     }\n   return linkonce;\n@@ -5114,12 +5113,12 @@ check_regno (struct mips_arg_info *arg,\n       length = strlen (name);\n       if ((regno & 1) != 0\n \t  && ((length >= 3 && strcmp (name + length - 3, \".ps\") == 0)\n-\t      || (length >= 5 && strncmp (name + length - 5, \"any2\", 4) == 0)))\n+\t      || (length >= 5 && startswith (name + length - 5, \"any2\"))))\n \tas_warn (_(\"condition code register should be even for %s, was %d\"),\n \t\t name, regno);\n \n       if ((regno & 3) != 0\n-\t  && (length >= 5 && strncmp (name + length - 5, \"any4\", 4) == 0))\n+\t  && (length >= 5 && startswith (name + length - 5, \"any4\")))\n \tas_warn (_(\"condition code register should be 0 or 4 for %s, was %d\"),\n \t\t name, regno);\n     }\n@@ -6166,7 +6165,7 @@ match_float_constant (struct mips_arg_info *arg, expressionS *imm,\n   bfd_set_section_flags (new_seg,\n \t\t\t SEC_ALLOC | SEC_LOAD | SEC_READONLY | SEC_DATA);\n   frag_align (length == 4 ? 2 : 3, 0, 0);\n-  if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n+  if (!startswith (TARGET_OS, \"elf\"))\n     record_alignment (new_seg, 4);\n   else\n     record_alignment (new_seg, length == 4 ? 2 : 3);\n@@ -6348,13 +6347,13 @@ reg_needs_delay (unsigned int reg)\n static unsigned int\n classify_vr4120_insn (const char *name)\n {\n-  if (strncmp (name, \"macc\", 4) == 0)\n+  if (startswith (name, \"macc\"))\n     return FIX_VR4120_MACC;\n-  if (strncmp (name, \"dmacc\", 5) == 0)\n+  if (startswith (name, \"dmacc\"))\n     return FIX_VR4120_DMACC;\n-  if (strncmp (name, \"mult\", 4) == 0)\n+  if (startswith (name, \"mult\"))\n     return FIX_VR4120_MULT;\n-  if (strncmp (name, \"dmult\", 5) == 0)\n+  if (startswith (name, \"dmult\"))\n     return FIX_VR4120_DMULT;\n   if (strstr (name, \"div\"))\n     return FIX_VR4120_DIV;\n@@ -8294,7 +8293,7 @@ match_insn (struct mips_cl_insn *insn, const struct mips_opcode *opcode,\n \t    return true;\n \t  clear_insn_error ();\n \t  if (arg.dest_regno == arg.last_regno\n-\t      && strncmp (insn->insn_mo->name, \"jalr\", 4) == 0)\n+\t      && startswith (insn->insn_mo->name, \"jalr\"))\n \t    {\n \t      if (arg.opnum == 2)\n \t\tset_insn_error\n@@ -8304,8 +8303,8 @@ match_insn (struct mips_cl_insn *insn, const struct mips_opcode *opcode,\n \t\t  (0, _(\"a destination register must be supplied\"));\n \t    }\n \t  else if (arg.last_regno == 31\n-\t\t   && (strncmp (insn->insn_mo->name, \"bltzal\", 6) == 0\n-\t\t       || strncmp (insn->insn_mo->name, \"bgezal\", 6) == 0))\n+\t\t   && (startswith (insn->insn_mo->name, \"bltzal\")\n+\t\t       || startswith (insn->insn_mo->name, \"bgezal\")))\n \t    set_insn_error (0, _(\"the source register must not be $31\"));\n \t  check_completed_insn (&arg);\n \t  return true;\n@@ -15250,7 +15249,7 @@ mips_after_parse_args (void)\n   const struct mips_cpu_info *tune_info = 0;\n \n   /* GP relative stuff not working for PE.  */\n-  if (strncmp (TARGET_OS, \"pe\", 2) == 0)\n+  if (startswith (TARGET_OS, \"pe\"))\n     {\n       if (g_switch_seen && g_switch_value != 0)\n \tas_bad (_(\"-G not supported in this configuration\"));\n@@ -16339,7 +16338,7 @@ s_change_sec (int sec)\n \t\t\t(subsegT) get_absolute_expression ());\n       bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_READONLY\n \t\t\t\t   | SEC_RELOC | SEC_DATA));\n-      if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n+      if (!startswith (TARGET_OS, \"elf\"))\n \trecord_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n       break;\n@@ -16348,15 +16347,15 @@ s_change_sec (int sec)\n       seg = subseg_new (\".sdata\", (subsegT) get_absolute_expression ());\n       bfd_set_section_flags (seg, (SEC_ALLOC | SEC_LOAD | SEC_RELOC\n \t\t\t\t   | SEC_DATA | SEC_SMALL_DATA));\n-      if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n+      if (!startswith (TARGET_OS, \"elf\"))\n \trecord_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n       break;\n \n     case 'B':\n       seg = subseg_new (\".sbss\", (subsegT) get_absolute_expression ());\n       bfd_set_section_flags (seg, SEC_ALLOC | SEC_SMALL_DATA);\n-      if (strncmp (TARGET_OS, \"elf\", 3) != 0)\n+      if (!startswith (TARGET_OS, \"elf\"))\n \trecord_alignment (seg, 4);\n       demand_empty_rest_of_line ();\n       break;\n@@ -16565,7 +16564,7 @@ s_option (int x ATTRIBUTE_UNUSED)\n     {\n       /* FIXME: What does this mean?  */\n     }\n-  else if (strncmp (opt, \"pic\", 3) == 0 && ISDIGIT (opt[3]) && opt[4] == '\\0')\n+  else if (startswith (opt, \"pic\") && ISDIGIT (opt[3]) && opt[4] == '\\0')\n     {\n       int i;\n \n@@ -16630,7 +16629,7 @@ parse_code_option (char * name)\n   bool isa_set = false;\n   const struct mips_ase *ase;\n \n-  if (strncmp (name, \"at=\", 3) == 0)\n+  if (startswith (name, \"at=\"))\n     {\n       char *s = name + 3;\n \n@@ -16687,11 +16686,11 @@ parse_code_option (char * name)\n     mips_set_ase (ase, &mips_opts, false);\n   else if ((ase = mips_lookup_ase (name)))\n     mips_set_ase (ase, &mips_opts, true);\n-  else if (strncmp (name, \"mips\", 4) == 0 || strncmp (name, \"arch=\", 5) == 0)\n+  else if (startswith (name, \"mips\") || startswith (name, \"arch=\"))\n     {\n       /* Permit the user to change the ISA and architecture on the fly.\n \t Needless to say, misuse can cause serious problems.  */\n-      if (strncmp (name, \"arch=\", 5) == 0)\n+      if (startswith (name, \"arch=\"))\n \t{\n \t  const struct mips_cpu_info *p;\n \n@@ -16706,7 +16705,7 @@ parse_code_option (char * name)\n \t      mips_opts.init_ase = p->ase;\n \t    }\n \t}\n-      else if (strncmp (name, \"mips\", 4) == 0)\n+      else if (startswith (name, \"mips\"))\n \t{\n \t  const struct mips_cpu_info *p;\n \n@@ -17626,7 +17625,7 @@ md_section_align (asection *seg, valueT addr)\n      However, Irix 5 may prefer that we align them at least to a 16\n      byte boundary.  We don't bother to align the sections if we\n      are targeted for an embedded system.  */\n-  if (strncmp (TARGET_OS, \"elf\", 3) == 0)\n+  if (startswith (TARGET_OS, \"elf\"))\n     return addr;\n   if (align > 4)\n     align = 4;\n@@ -17694,10 +17693,10 @@ nopic_need_relax (symbolS *sym, int before_relaxing)\n \t\t  && strcmp (segname, \".lit4\") != 0);\n \t  change = (strcmp (segname, \".sdata\") != 0\n \t\t    && strcmp (segname, \".sbss\") != 0\n-\t\t    && strncmp (segname, \".sdata.\", 7) != 0\n-\t\t    && strncmp (segname, \".sbss.\", 6) != 0\n-\t\t    && strncmp (segname, \".gnu.linkonce.sb.\", 17) != 0\n-\t\t    && strncmp (segname, \".gnu.linkonce.s.\", 16) != 0);\n+\t\t    && !startswith (segname, \".sdata.\")\n+\t\t    && !startswith (segname, \".sbss.\")\n+\t\t    && !startswith (segname, \".gnu.linkonce.sb.\")\n+\t\t    && !startswith (segname, \".gnu.linkonce.s.\"));\n \t}\n       return change;\n     }"
    },
    {
      "sha": "d51a0198619f8c7d858bc9e38ead59f5a4c49342",
      "filename": "gas/config/tc-mmix.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mmix.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mmix.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mmix.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -3171,7 +3171,7 @@ mmix_handle_mmixal (void)\n     }\n   else if (s[0] == 'G'\n \t   && s[1] == 'R'\n-\t   && strncmp (s, \"GREG\", 4) == 0\n+\t   && startswith (s, \"GREG\")\n \t   && (ISSPACE (s[4]) || is_end_of_line[(unsigned char) s[4]]))\n     {\n       input_line_pointer = s + 4;"
    },
    {
      "sha": "f180e94036417a1928111cc4e1c6f279eba8d660",
      "filename": "gas/config/tc-mn10300.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mn10300.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-mn10300.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mn10300.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -2427,7 +2427,7 @@ mn10300_fix_adjustable (struct fix *fixp)\n   if (! (S_GET_SEGMENT (fixp->fx_addsy)->flags & SEC_MERGE))\n     return false;\n \n-  if (strncmp (S_GET_SEGMENT (fixp->fx_addsy)->name, \".debug\", 6) == 0)\n+  if (startswith (S_GET_SEGMENT (fixp->fx_addsy)->name, \".debug\"))\n     return false;\n \n   return true;\n@@ -2447,7 +2447,7 @@ mn10300_end_of_match (char *cont, const char *what)\n {\n   int len = strlen (what);\n \n-  if (strncmp (cont, what, strlen (what)) == 0\n+  if (startswith (cont, what)\n       && ! is_part_of_name (cont[len]))\n     return cont + len;\n "
    },
    {
      "sha": "7649ab33cc8592f68467d9f40234b1dd5bd15df7",
      "filename": "gas/config/tc-msp430.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-msp430.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-msp430.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-msp430.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1504,31 +1504,31 @@ md_parse_option (int c, const char * arg)\n static void\n msp430_make_init_symbols (const char * name)\n {\n-  if (strncmp (name, \".bss\", 4) == 0\n-      || strncmp (name, \".lower.bss\", 10) == 0\n-      || strncmp (name, \".either.bss\", 11) == 0\n-      || strncmp (name, \".gnu.linkonce.b.\", 16) == 0)\n+  if (startswith (name, \".bss\")\n+      || startswith (name, \".lower.bss\")\n+      || startswith (name, \".either.bss\")\n+      || startswith (name, \".gnu.linkonce.b.\"))\n     (void) symbol_find_or_make (\"__crt0_init_bss\");\n \n-  if (strncmp (name, \".data\", 5) == 0\n-      || strncmp (name, \".lower.data\", 11) == 0\n-      || strncmp (name, \".either.data\", 12) == 0\n-      || strncmp (name, \".gnu.linkonce.d.\", 16) == 0)\n+  if (startswith (name, \".data\")\n+      || startswith (name, \".lower.data\")\n+      || startswith (name, \".either.data\")\n+      || startswith (name, \".gnu.linkonce.d.\"))\n     (void) symbol_find_or_make (\"__crt0_movedata\");\n   /* Note - data assigned to the .either.data section may end up being\n      placed in the .upper.data section if the .lower.data section is\n      full.  Hence the need to define the crt0 symbol.\n      The linker may create upper or either data sections, even when none exist\n      at the moment, so use the value of the data-region flag to determine if\n      the symbol is needed.  */\n-  if (strncmp (name, \".either.data\", 12) == 0\n-      || strncmp (name, \".upper.data\", 11) == 0\n+  if (startswith (name, \".either.data\")\n+      || startswith (name, \".upper.data\")\n       || upper_data_region_in_use)\n     (void) symbol_find_or_make (\"__crt0_move_highdata\");\n \n   /* See note about .either.data above.  */\n-  if (strncmp (name, \".upper.bss\", 10) == 0\n-      || strncmp (name, \".either.bss\", 11) == 0\n+  if (startswith (name, \".upper.bss\")\n+      || startswith (name, \".either.bss\")\n       || upper_data_region_in_use)\n     (void) symbol_find_or_make (\"__crt0_init_highbss\");\n \n@@ -1542,17 +1542,17 @@ msp430_make_init_symbols (const char * name)\n      exit() or returning from main.\n      __crt0_run_array is required to actually call the functions in the above\n      arrays.  */\n-  if (strncmp (name, \".init_array\", 11) == 0)\n+  if (startswith (name, \".init_array\"))\n     {\n       (void) symbol_find_or_make (\"__crt0_run_init_array\");\n       (void) symbol_find_or_make (\"__crt0_run_array\");\n     }\n-  else if (strncmp (name, \".preinit_array\", 14) == 0)\n+  else if (startswith (name, \".preinit_array\"))\n     {\n       (void) symbol_find_or_make (\"__crt0_run_preinit_array\");\n       (void) symbol_find_or_make (\"__crt0_run_array\");\n     }\n-  else if (strncmp (name, \".fini_array\", 11) == 0)\n+  else if (startswith (name, \".fini_array\"))\n     {\n       (void) symbol_find_or_make (\"__crt0_run_fini_array\");\n       (void) symbol_find_or_make (\"__crt0_run_array\");"
    },
    {
      "sha": "e5c0eaf0866819ea15febff47f1d96b414aacc41",
      "filename": "gas/config/tc-nds32.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-nds32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-nds32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nds32.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -3712,7 +3712,7 @@ nds32_parse_option (int c, const char *arg)\n \t  int disable = 0;\n \n \t  /* Filter out the Disable option first.  */\n-\t  if (strncmp (arg, \"no-\", 3) == 0)\n+\t  if (startswith (arg, \"no-\"))\n \t    {\n \t      disable = 1;\n \t      arg += 3;"
    },
    {
      "sha": "da7e38c0094e70c240ef861e5dbfd493764173cc",
      "filename": "gas/config/tc-nds32.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-nds32.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-nds32.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nds32.h?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -158,7 +158,7 @@ extern void nds32_do_align (int);\n #define md_do_align(N, FILL, LEN, MAX, LABEL)\t\\\n   nds32_pre_do_align (N, FILL, LEN, MAX);\t\\\n   if ((N) > 1 && (subseg_text_p (now_seg)\t\\\n-      || strncmp (now_seg->name, \".gcc_except_table\", sizeof(\".gcc_except_table\") - 1) == 0)) \\\n+      || startswith (now_seg->name, \".gcc_except_table\"))) \\\n     nds32_do_align (N);\t\t\t\t\\\n   goto LABEL;\n #define md_elf_section_change_hook()\t\tnds32_elf_section_change_hook ()"
    },
    {
      "sha": "7eb0649cba3cc6c7388df28b5babffe73e8150a2",
      "filename": "gas/config/tc-nios2.c",
      "status": "modified",
      "additions": 20,
      "deletions": 25,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-nios2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-nios2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nios2.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -300,29 +300,24 @@ md_atof (int type, char *litP, int *sizeP)\n   return NULL;\n }\n \n-/* Return true if STR starts with PREFIX, which should be a string literal.  */\n-#define strprefix(STR, PREFIX) \\\n-  (strncmp ((STR), PREFIX, strlen (PREFIX)) == 0)\n-\n-\n /* Return true if STR is prefixed with a special relocation operator.  */\n static int\n nios2_special_relocation_p (const char *str)\n {\n-  return (strprefix (str, \"%lo\")\n-\t  || strprefix (str, \"%hi\")\n-\t  || strprefix (str, \"%hiadj\")\n-\t  || strprefix (str, \"%gprel\")\n-\t  || strprefix (str, \"%got\")\n-\t  || strprefix (str, \"%call\")\n-\t  || strprefix (str, \"%gotoff_lo\")\n-\t  || strprefix (str, \"%gotoff_hiadj\")\n-\t  || strprefix (str, \"%tls_gd\")\n-\t  || strprefix (str, \"%tls_ldm\")\n-\t  || strprefix (str, \"%tls_ldo\")\n-\t  || strprefix (str, \"%tls_ie\")\n-\t  || strprefix (str, \"%tls_le\")\n-\t  || strprefix (str, \"%gotoff\"));\n+  return (startswith (str, \"%lo\")\n+\t  || startswith (str, \"%hi\")\n+\t  || startswith (str, \"%hiadj\")\n+\t  || startswith (str, \"%gprel\")\n+\t  || startswith (str, \"%got\")\n+\t  || startswith (str, \"%call\")\n+\t  || startswith (str, \"%gotoff_lo\")\n+\t  || startswith (str, \"%gotoff_hiadj\")\n+\t  || startswith (str, \"%tls_gd\")\n+\t  || startswith (str, \"%tls_ldm\")\n+\t  || startswith (str, \"%tls_ldo\")\n+\t  || startswith (str, \"%tls_ie\")\n+\t  || startswith (str, \"%tls_le\")\n+\t  || startswith (str, \"%gotoff\"));\n }\n \n \n@@ -1678,7 +1673,7 @@ nios2_parse_base_register (char *str, int *direction, int *writeback, int *ret)\n   *ret = 0;\n \n   /* Check for --.  */\n-  if (strncmp (str, \"--\", 2) == 0)\n+  if (startswith (str, \"--\"))\n     {\n       str += 2;\n       *direction -= 1;\n@@ -1705,7 +1700,7 @@ nios2_parse_base_register (char *str, int *direction, int *writeback, int *ret)\n     return NULL;\n \n   /* Check for ++.  */\n-  if (strncmp (str, \"++\", 2) == 0)\n+  if (startswith (str, \"++\"))\n     {\n       str += 2;\n       *direction += 1;\n@@ -1723,12 +1718,12 @@ nios2_parse_base_register (char *str, int *direction, int *writeback, int *ret)\n     {\n       while (*str == ' ')\n \tstr++;\n-      if (strncmp (str, \"writeback\", 9) == 0)\n+      if (startswith (str, \"writeback\"))\n \t{\n \t  *writeback = 1;\n \t  str += 9;\n \t}\n-      else if (strncmp (str, \"ret\", 3) == 0)\n+      else if (startswith (str, \"ret\"))\n \t{\n \t  *ret = 1;\n \t  str += 3;\n@@ -3987,7 +3982,7 @@ nios2_cons (expressionS *exp, int size)\n   SKIP_WHITESPACE ();\n   if (input_line_pointer[0] == '%')\n     {\n-      if (strprefix (input_line_pointer + 1, \"tls_ldo\"))\n+      if (startswith (input_line_pointer + 1, \"tls_ldo\"))\n \t{\n \t  reloc_name = \"%tls_ldo\";\n \t  if (size != 4)\n@@ -3999,7 +3994,7 @@ nios2_cons (expressionS *exp, int size)\n \t      explicit_reloc = BFD_RELOC_NIOS2_TLS_DTPREL;\n \t    }\n \t}\n-      else if (strprefix (input_line_pointer + 1, \"gotoff\"))\n+      else if (startswith (input_line_pointer + 1, \"gotoff\"))\n \t{\n \t  reloc_name = \"%gotoff\";\n \t  if (size != 4)"
    },
    {
      "sha": "98fa520b9ba1f2b6ac3fd392b614484267b1154f",
      "filename": "gas/config/tc-ns32k.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-ns32k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-ns32k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ns32k.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -442,7 +442,7 @@ addr_mode (char *operand,\n     case 'e':\n       if (str[strl - 1] != ']')\n \t{\n-\t  if ((!strncmp (str, \"ext(\", 4)) && strl > 7)\n+\t  if ((startswith (str, \"ext(\")) && strl > 7)\n \t    {\t\t\t\t/* external */\n \t      addrmodeP->disp[0] = str + 4;\n \t      i = 0;\n@@ -496,7 +496,7 @@ addr_mode (char *operand,\n       /* Fall through.  */\n \n     case 3:\n-      if (!strncmp (str, \"tos\", 3))\n+      if (startswith (str, \"tos\"))\n \t{\n \t  addrmodeP->mode = 23;\t/* TopOfStack */\n \t  return -1;\n@@ -513,11 +513,11 @@ addr_mode (char *operand,\n \t{\n \t  if (str[strl - 2] == ')')\n \t    {\n-\t      if (!strncmp (&str[strl - 5], \"(fp\", 3))\n+\t      if (startswith (&str[strl - 5], \"(fp\"))\n \t\tmode = 16;\t\t/* Memory Relative.  */\n-\t      else if (!strncmp (&str[strl - 5], \"(sp\", 3))\n+\t      else if (startswith (&str[strl - 5], \"(sp\"))\n \t\tmode = 17;\n-\t      else if (!strncmp (&str[strl - 5], \"(sb\", 3))\n+\t      else if (startswith (&str[strl - 5], \"(sb\"))\n \t\tmode = 18;\n \n \t      if (mode != DEFAULT)\n@@ -568,13 +568,13 @@ addr_mode (char *operand,\n \t      /* Fall through.  */\n \n \t    default:\n-\t      if (!strncmp (&str[strl - 4], \"(fp\", 3))\n+\t      if (startswith (&str[strl - 4], \"(fp\"))\n \t\tmode = 24;\n-\t      else if (!strncmp (&str[strl - 4], \"(sp\", 3))\n+\t      else if (startswith (&str[strl - 4], \"(sp\"))\n \t\tmode = 25;\n-\t      else if (!strncmp (&str[strl - 4], \"(sb\", 3))\n+\t      else if (startswith (&str[strl - 4], \"(sb\"))\n \t\tmode = 26;\n-\t      else if (!strncmp (&str[strl - 4], \"(pc\", 3))\n+\t      else if (startswith (&str[strl - 4], \"(pc\"))\n \t\tmode = 27;\n \n \t      if (mode != DEFAULT)"
    },
    {
      "sha": "b6d3bfeb8cb9f36aca19436a21a6f96dbde696a6",
      "filename": "gas/config/tc-pdp11.c",
      "status": "modified",
      "additions": 32,
      "deletions": 32,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-pdp11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-pdp11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-pdp11.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -100,7 +100,7 @@ set_option (const char *arg)\n       return 1;\n     }\n \n-  if (strncmp (arg, \"no-\", 3) == 0)\n+  if (startswith (arg, \"no-\"))\n     {\n       yes = 0;\n       arg += 3;\n@@ -140,9 +140,9 @@ set_option (const char *arg)\n   else if (strcmp (arg, \"mfpt\") == 0)\n     pdp11_extension[PDP11_MFPT] = yes;\n   /* Multiprocessor insns:  */\n-  else if (strncmp (arg, \"mproc\", 5) == 0\n+  else if (startswith (arg, \"mproc\")\n \t   /* TSTSET, WRTLCK */\n-\t   || strncmp (arg, \"multiproc\", 9) == 0)\n+\t   || startswith (arg, \"multiproc\"))\n     pdp11_extension[PDP11_MPROC] = yes;\n   /* Move from/to proc status.  */\n   else if (strcmp (arg, \"mxps\") == 0)\n@@ -352,14 +352,14 @@ parse_reg (char *str, struct pdp11_code *operand)\n \t  return str - 1;\n \t}\n     }\n-  else if (strncmp (str, \"sp\", 2) == 0\n-\t   || strncmp (str, \"SP\", 2) == 0)\n+  else if (startswith (str, \"sp\")\n+\t   || startswith (str, \"SP\"))\n     {\n       operand->code = 6;\n       str += 2;\n     }\n-  else if (strncmp (str, \"pc\", 2) == 0\n-\t   || strncmp (str, \"PC\", 2) == 0)\n+  else if (startswith (str, \"pc\")\n+\t   || startswith (str, \"PC\"))\n     {\n       operand->code = 7;\n       str += 2;\n@@ -383,10 +383,10 @@ static char *\n parse_ac5 (char *str, struct pdp11_code *operand)\n {\n   str = skip_whitespace (str);\n-  if (strncmp (str, \"fr\", 2) == 0\n-      || strncmp (str, \"FR\", 2) == 0\n-      || strncmp (str, \"ac\", 2) == 0\n-      || strncmp (str, \"AC\", 2) == 0)\n+  if (startswith (str, \"fr\")\n+      || startswith (str, \"FR\")\n+      || startswith (str, \"ac\")\n+      || startswith (str, \"AC\"))\n     {\n       str += 2;\n       switch (*str)\n@@ -519,7 +519,7 @@ parse_op_no_deferred (char *str, struct pdp11_code *operand)\n       /* label, d(rn), -(rn)  */\n     default:\n       {\n-\tif (strncmp (str, \"-(\", 2) == 0)\t/* -(rn) */\n+\tif (startswith (str, \"-(\"))\t/* -(rn) */\n \t  {\n \t    str = parse_reg (str + 2, operand);\n \t    if (operand->error)\n@@ -1114,7 +1114,7 @@ set_cpu_model (const char *arg)\n   if (arg[0] == '-')\n     arg++;\n \n-  if (strncmp (arg, \"11\", 2) != 0)\n+  if (!startswith (arg, \"11\"))\n     return 0;\n   arg += 2;\n \n@@ -1135,57 +1135,57 @@ set_cpu_model (const char *arg)\n   set_option (\"no-extensions\");\n \n   /* KA11 (11/15/20).  */\n-  if (strncmp (buf, \"a\", 1) == 0)\n+  if (startswith (buf, \"a\"))\n     return 1; /* No extensions.  */\n \n   /* KB11 (11/45/50/55/70).  */\n-  else if (strncmp (buf, \"b\", 1) == 0)\n+  else if (startswith (buf, \"b\"))\n     return set_option (\"eis\") && set_option (\"spl\");\n \n   /* KD11-A (11/35/40).  */\n-  else if (strncmp (buf, \"da\", 2) == 0)\n+  else if (startswith (buf, \"da\"))\n     return set_option (\"limited-eis\");\n \n   /* KD11-B (11/05/10).  */\n-  else if (strncmp (buf, \"db\", 2) == 0\n+  else if (startswith (buf, \"db\")\n \t   /* KD11-D (11/04).  */\n-\t   || strncmp (buf, \"dd\", 2) == 0)\n+\t   || startswith (buf, \"dd\"))\n     return 1; /* no extensions */\n \n   /* KD11-E (11/34).  */\n-  else if (strncmp (buf, \"de\", 2) == 0)\n+  else if (startswith (buf, \"de\"))\n     return set_option (\"eis\") && set_option (\"mxps\");\n \n   /* KD11-F (11/03).  */\n-  else if (strncmp (buf, \"df\", 2) == 0\n+  else if (startswith (buf, \"df\")\n \t   /* KD11-H (11/03).  */\n-\t   || strncmp (buf, \"dh\", 2) == 0\n+\t   || startswith (buf, \"dh\")\n \t   /* KD11-Q (11/03).  */\n-\t   || strncmp (buf, \"dq\", 2) == 0)\n+\t   || startswith (buf, \"dq\"))\n     return set_option (\"limited-eis\") && set_option (\"mxps\");\n \n   /* KD11-K (11/60).  */\n-  else if (strncmp (buf, \"dk\", 2) == 0)\n+  else if (startswith (buf, \"dk\"))\n     return set_option (\"eis\")\n       && set_option (\"mxps\")\n       && set_option (\"ucode\");\n \n   /* KD11-Z (11/44).  */\n-  else if (strncmp (buf, \"dz\", 2) == 0)\n+  else if (startswith (buf, \"dz\"))\n     return set_option (\"csm\")\n       && set_option (\"eis\")\n       && set_option (\"mfpt\")\n       && set_option (\"mxps\")\n       && set_option (\"spl\");\n \n   /* F11 (11/23/24).  */\n-  else if (strncmp (buf, \"f\", 1) == 0)\n+  else if (startswith (buf, \"f\"))\n     return set_option (\"eis\")\n       && set_option (\"mfpt\")\n       && set_option (\"mxps\");\n \n   /* J11 (11/53/73/83/84/93/94).  */\n-  else if (strncmp (buf, \"j\", 1) == 0)\n+  else if (startswith (buf, \"j\"))\n     return set_option (\"csm\")\n       && set_option (\"eis\")\n       && set_option (\"mfpt\")\n@@ -1194,7 +1194,7 @@ set_cpu_model (const char *arg)\n       && set_option (\"spl\");\n \n   /* T11 (11/21).  */\n-  else if (strncmp (buf, \"t\", 1) == 0)\n+  else if (startswith (buf, \"t\"))\n     return set_option (\"limited-eis\")\n       && set_option (\"mxps\");\n \n@@ -1205,16 +1205,16 @@ set_cpu_model (const char *arg)\n static int\n set_machine_model (const char *arg)\n {\n-  if (strncmp (arg, \"pdp-11/\", 7) != 0\n-      && strncmp (arg, \"pdp11/\", 6) != 0\n-      && strncmp (arg, \"11/\", 3) != 0)\n+  if (!startswith (arg, \"pdp-11/\")\n+      && !startswith (arg, \"pdp11/\")\n+      && !startswith (arg, \"11/\"))\n     return 0;\n \n-  if (strncmp (arg, \"pdp\", 3) == 0)\n+  if (startswith (arg, \"pdp\"))\n     arg += 3;\n   if (arg[0] == '-')\n     arg++;\n-  if (strncmp (arg, \"11/\", 3) == 0)\n+  if (startswith (arg, \"11/\"))\n     arg += 3;\n \n   if (strcmp (arg, \"03\") == 0)"
    },
    {
      "sha": "72391f6ef1dbe96fed1345b44dd9a70af458512a",
      "filename": "gas/config/tc-pj.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-pj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-pj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-pj.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -58,7 +58,7 @@ const char EXP_CHARS[] = \"eE\";\n void\n md_operand (expressionS *op)\n {\n-  if (strncmp (input_line_pointer, \"%hi16\", 5) == 0)\n+  if (startswith (input_line_pointer, \"%hi16\"))\n     {\n       if (pending_reloc)\n \tas_bad (_(\"confusing relocation expressions\"));\n@@ -67,7 +67,7 @@ md_operand (expressionS *op)\n       expression (op);\n     }\n \n-  if (strncmp (input_line_pointer, \"%lo16\", 5) == 0)\n+  if (startswith (input_line_pointer, \"%lo16\"))\n     {\n       if (pending_reloc)\n \tas_bad (_(\"confusing relocation expressions\"));"
    },
    {
      "sha": "5511e722108ba07995af3fcf40c2367e5bc069e6",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1304,7 +1304,7 @@ is_ppc64_target (const bfd_target *targ, void *data ATTRIBUTE_UNUSED)\n     {\n #ifdef OBJ_ELF\n     case bfd_target_elf_flavour:\n-      return strncmp (targ->name, \"elf64-powerpc\", 13) == 0;\n+      return startswith (targ->name, \"elf64-powerpc\");\n #endif\n #ifdef OBJ_XCOFF\n     case bfd_target_xcoff_flavour:\n@@ -1458,14 +1458,14 @@ ppc_set_cpu (void)\n \telse\n \t  /* The minimum supported cpu for 64-bit little-endian is power8.  */\n \t  ppc_cpu |= ppc_parse_cpu (ppc_cpu, &sticky, \"power8\");\n-      else if (strncmp (default_os, \"aix\", 3) == 0\n+      else if (startswith (default_os, \"aix\")\n \t       && default_os[3] >= '4' && default_os[3] <= '9')\n \tppc_cpu |= PPC_OPCODE_COMMON;\n-      else if (strncmp (default_os, \"aix3\", 4) == 0)\n+      else if (startswith (default_os, \"aix3\"))\n \tppc_cpu |= PPC_OPCODE_POWER;\n       else if (strcmp (default_cpu, \"rs6000\") == 0)\n \tppc_cpu |= PPC_OPCODE_POWER;\n-      else if (strncmp (default_cpu, \"powerpc\", 7) == 0)\n+      else if (startswith (default_cpu, \"powerpc\"))\n \tppc_cpu |= PPC_OPCODE_PPC;\n       else\n \tas_fatal (_(\"unknown default cpu = %s, os = %s\"),\n@@ -1492,7 +1492,7 @@ ppc_arch (void)\n     {\n       if (strcmp (default_cpu, \"rs6000\") == 0)\n \treturn bfd_arch_rs6000;\n-      else if (strncmp (default_cpu, \"powerpc\", 7) == 0)\n+      else if (startswith (default_cpu, \"powerpc\"))\n \treturn bfd_arch_powerpc;\n     }\n \n@@ -4183,7 +4183,7 @@ ppc_macro (char *str, const struct powerpc_macro *macro)\n int\n ppc_section_type (char *str, size_t len)\n {\n-  if (len == 7 && strncmp (str, \"ordered\", 7) == 0)\n+  if (len == 7 && startswith (str, \"ordered\"))\n     return SHT_ORDERED;\n \n   return -1;"
    },
    {
      "sha": "6ec4d5c63b853dbc864fcdb195d384885f8be6f3",
      "filename": "gas/config/tc-s12z.c",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-s12z.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-s12z.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-s12z.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -2802,17 +2802,17 @@ tb_reg_rel  (const struct instruction *insn)\n   if (reg == REG_Y)\n     lb |= 0x01;\n \n-  if (0 == strncmp (insn->name + 2, \"ne\", 2))\n+  if (startswith (insn->name + 2, \"ne\"))\n     lb |= 0x00 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"eq\", 2))\n+  else if (startswith (insn->name + 2, \"eq\"))\n     lb |= 0x01 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"pl\", 2))\n+  else if (startswith (insn->name + 2, \"pl\"))\n     lb |= 0x02 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"mi\", 2))\n+  else if (startswith (insn->name + 2, \"mi\"))\n     lb |= 0x03 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"gt\", 2))\n+  else if (startswith (insn->name + 2, \"gt\"))\n     lb |= 0x04 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"le\", 2))\n+  else if (startswith (insn->name + 2, \"le\"))\n     lb |= 0x05 << 4;\n \n   switch (insn->name[0])\n@@ -2863,17 +2863,17 @@ tb_opr_rel  (const struct instruction *insn)\n \n   uint8_t lb = 0x0C;\n \n-  if (0 == strncmp (insn->name + 2, \"ne\", 2))\n+  if (startswith (insn->name + 2, \"ne\"))\n     lb |= 0x00 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"eq\", 2))\n+  else if (startswith (insn->name + 2, \"eq\"))\n     lb |= 0x01 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"pl\", 2))\n+  else if (startswith (insn->name + 2, \"pl\"))\n     lb |= 0x02 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"mi\", 2))\n+  else if (startswith (insn->name + 2, \"mi\"))\n     lb |= 0x03 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"gt\", 2))\n+  else if (startswith (insn->name + 2, \"gt\"))\n     lb |= 0x04 << 4;\n-  else if (0 == strncmp (insn->name + 2, \"le\", 2))\n+  else if (startswith (insn->name + 2, \"le\"))\n     lb |= 0x05 << 4;\n \n   switch (insn->name[0])"
    },
    {
      "sha": "0750f25346336759f4fefa4e74b056ef3763b9a4",
      "filename": "gas/config/tc-s390.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-s390.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-s390.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-s390.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -312,7 +312,7 @@ s390_parse_cpu (const char *arg,\n   char *ilp_bak;\n \n   icpu = S390_OPCODE_MAXCPU;\n-  if (strncmp (arg, \"all\", 3) == 0 && (arg[3] == 0 || arg[3] == '+'))\n+  if (startswith (arg, \"all\") && (arg[3] == 0 || arg[3] == '+'))\n     {\n       icpu = S390_OPCODE_MAXCPU - 1;\n       arg += 3;\n@@ -427,7 +427,7 @@ md_parse_option (int c, const char *arg)\n \t  current_mode_mask = 1 << S390_OPCODE_ZARCH;\n \t}\n \n-      else if (arg != NULL && strncmp (arg, \"arch=\", 5) == 0)\n+      else if (arg != NULL && startswith (arg, \"arch=\"))\n \t{\n \t  current_cpu = s390_parse_cpu (arg + 5, &current_flags, false);\n \t  if (current_cpu == S390_OPCODE_MAXCPU)"
    },
    {
      "sha": "0deb23ab86c83f4527b6c9209d4213425c85e4ea",
      "filename": "gas/config/tc-score.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-score.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-score.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -4832,8 +4832,8 @@ s3_nopic_need_relax (symbolS * sym, int before_relaxing)\n       segname = segment_name (S_GET_SEGMENT (sym));\n       return (strcmp (segname, \".sdata\") != 0\n \t      && strcmp (segname, \".sbss\") != 0\n-\t      && strncmp (segname, \".sdata.\", 7) != 0\n-\t      && strncmp (segname, \".gnu.linkonce.s.\", 16) != 0);\n+\t      && !startswith (segname, \".sdata.\")\n+\t      && !startswith (segname, \".gnu.linkonce.s.\"));\n     }\n   /* We are not optimizing for the $gp register.  */\n   else\n@@ -5313,8 +5313,7 @@ s3_pic_need_relax (symbolS *sym, asection *segtype)\n       /* The GNU toolchain uses an extension for ELF: a section\n \t beginning with the magic string .gnu.linkonce is a linkonce\n \t section.  */\n-      if (strncmp (segment_name (symsec), \".gnu.linkonce\",\n-\t\t   sizeof \".gnu.linkonce\" - 1) == 0)\n+      if (startswith (segment_name (symsec), \".gnu.linkonce\"))\n \tlinkonce = true;\n     }\n "
    },
    {
      "sha": "2eae1929430e915e713d12d4a05b79af966ee5c4",
      "filename": "gas/config/tc-score7.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-score7.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-score7.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score7.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -4626,8 +4626,8 @@ s7_nopic_need_relax (symbolS * sym, int before_relaxing)\n       segname = segment_name (S_GET_SEGMENT (sym));\n       return (strcmp (segname, \".sdata\") != 0\n \t      && strcmp (segname, \".sbss\") != 0\n-\t      && strncmp (segname, \".sdata.\", 7) != 0\n-\t      && strncmp (segname, \".gnu.linkonce.s.\", 16) != 0);\n+\t      && !startswith (segname, \".sdata.\")\n+\t      && !startswith (segname, \".gnu.linkonce.s.\"));\n     }\n   /* We are not optimizing for the $gp register.  */\n   else\n@@ -5195,8 +5195,7 @@ s7_pic_need_relax (symbolS *sym, asection *segtype)\n       /* The GNU toolchain uses an extension for ELF: a section\n \t  beginning with the magic string .gnu.linkonce is a linkonce\n \t  section.  */\n-      if (strncmp (segment_name (symsec), \".gnu.linkonce\",\n-\t\t   sizeof \".gnu.linkonce\" - 1) == 0)\n+      if (startswith (segment_name (symsec), \".gnu.linkonce\"))\n \tlinkonce = true;\n     }\n "
    },
    {
      "sha": "41cc2fa2c2d1c801e8bd0acee944d85a0d88ab19",
      "filename": "gas/config/tc-sh.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-sh.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-sh.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-sh.h?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -140,9 +140,9 @@ extern void sh_frob_file (void);\n \n /* We align most sections to a 16 byte boundary.  */\n #define SUB_SEGMENT_ALIGN(SEG, FRCHAIN)\t\t\t\\\n-  (strncmp (SEG_NAME (SEG), \".stabstr\", 8) == 0\t\t\\\n+  (startswith (SEG_NAME (SEG), \".stabstr\")\t\t\\\n    ? 0\t\t\t\t\t\t\t\\\n-   : ((strncmp (SEG_NAME (SEG), \".stab\", 5) == 0\t\\\n+   : ((startswith (SEG_NAME (SEG), \".stab\")\t\\\n        || strcmp (SEG_NAME (SEG), \".ctors\") == 0\t\\\n        || strcmp (SEG_NAME (SEG), \".dtors\") == 0)\t\\\n       ? 2\t\t\t\t\t\t\\"
    },
    {
      "sha": "b8723819ade44f60caf875d05dc1c4df57ac6eaf",
      "filename": "gas/config/tc-sparc.c",
      "status": "modified",
      "additions": 41,
      "deletions": 41,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-sparc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-sparc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-sparc.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -460,13 +460,13 @@ md_parse_option (int c, const char *arg)\n       break;\n \n     case OPTION_XARCH:\n-      if (!strncmp (arg, \"v9\", 2))\n+      if (startswith (arg, \"v9\"))\n \tmd_parse_option (OPTION_64, NULL);\n       else\n \t{\n-\t  if (!strncmp (arg, \"v8\", 2)\n-\t      || !strncmp (arg, \"v7\", 2)\n-\t      || !strncmp (arg, \"v6\", 2)\n+\t  if (startswith (arg, \"v8\")\n+\t      || startswith (arg, \"v7\")\n+\t      || startswith (arg, \"v6\")\n \t      || !strcmp (arg, \"sparclet\")\n \t      || !strcmp (arg, \"sparclite\")\n \t      || !strcmp (arg, \"sparc86x\"))\n@@ -1984,7 +1984,7 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \n \t    case 'M':\n \t    case 'm':\n-\t      if (strncmp (s, \"%asr\", 4) == 0)\n+\t      if (startswith (s, \"%asr\"))\n \t\t{\n \t\t  s += 4;\n \n@@ -2131,8 +2131,8 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t\t{\n \t\t  ++s;\n \t\t}\n-\t      if ((strncmp (s, \"%icc\", 4) == 0)\n-                  || (sparc_arch_size == 32 && strncmp (s, \"%ncc\", 4) == 0))\n+\t      if ((startswith (s, \"%icc\"))\n+                  || (sparc_arch_size == 32 && startswith (s, \"%ncc\")))\n \t\t{\n \t\t  s += 4;\n \t\t  continue;\n@@ -2144,8 +2144,8 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t\t{\n \t\t  ++s;\n \t\t}\n-              if ((strncmp (s, \"%xcc\", 4) == 0)\n-                  || (sparc_arch_size == 64 && strncmp (s, \"%ncc\", 4) == 0))\n+              if ((startswith (s, \"%xcc\"))\n+                  || (sparc_arch_size == 64 && startswith (s, \"%ncc\")))\n \t\t{\n \t\t  s += 4;\n \t\t  continue;\n@@ -2157,7 +2157,7 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t\t{\n \t\t  ++s;\n \t\t}\n-\t      if (strncmp (s, \"%fcc0\", 5) == 0)\n+\t      if (startswith (s, \"%fcc0\"))\n \t\t{\n \t\t  s += 5;\n \t\t  continue;\n@@ -2169,7 +2169,7 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t\t{\n \t\t  ++s;\n \t\t}\n-\t      if (strncmp (s, \"%fcc1\", 5) == 0)\n+\t      if (startswith (s, \"%fcc1\"))\n \t\t{\n \t\t  s += 5;\n \t\t  continue;\n@@ -2181,7 +2181,7 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t\t{\n \t\t  ++s;\n \t\t}\n-\t      if (strncmp (s, \"%fcc2\", 5) == 0)\n+\t      if (startswith (s, \"%fcc2\"))\n \t\t{\n \t\t  s += 5;\n \t\t  continue;\n@@ -2193,23 +2193,23 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t\t{\n \t\t  ++s;\n \t\t}\n-\t      if (strncmp (s, \"%fcc3\", 5) == 0)\n+\t      if (startswith (s, \"%fcc3\"))\n \t\t{\n \t\t  s += 5;\n \t\t  continue;\n \t\t}\n \t      break;\n \n \t    case 'P':\n-\t      if (strncmp (s, \"%pc\", 3) == 0)\n+\t      if (startswith (s, \"%pc\"))\n \t\t{\n \t\t  s += 3;\n \t\t  continue;\n \t\t}\n \t      break;\n \n \t    case 'W':\n-\t      if (strncmp (s, \"%tick\", 5) == 0)\n+\t      if (startswith (s, \"%tick\"))\n \t\t{\n \t\t  s += 5;\n \t\t  continue;\n@@ -2316,7 +2316,7 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t      break;\n \n \t    case 'C':\t\t/* Coprocessor state register.  */\n-\t      if (strncmp (s, \"%csr\", 4) == 0)\n+\t      if (startswith (s, \"%csr\"))\n \t\t{\n \t\t  s += 4;\n \t\t  continue;\n@@ -2635,15 +2635,15 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t      }\t\t\t/* float arg  */\n \n \t    case 'F':\n-\t      if (strncmp (s, \"%fsr\", 4) == 0)\n+\t      if (startswith (s, \"%fsr\"))\n \t\t{\n \t\t  s += 4;\n \t\t  continue;\n \t\t}\n \t      break;\n \n \t    case '(':\n-\t      if (strncmp (s, \"%efsr\", 5) == 0)\n+\t      if (startswith (s, \"%efsr\"))\n \t\t{\n \t\t  s += 5;\n \t\t  continue;\n@@ -2980,23 +2980,23 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t      }\t\t\t/* Alternate space.  */\n \n \t    case 'p':\n-\t      if (strncmp (s, \"%psr\", 4) == 0)\n+\t      if (startswith (s, \"%psr\"))\n \t\t{\n \t\t  s += 4;\n \t\t  continue;\n \t\t}\n \t      break;\n \n \t    case 'q':\t\t/* Floating point queue.  */\n-\t      if (strncmp (s, \"%fq\", 3) == 0)\n+\t      if (startswith (s, \"%fq\"))\n \t\t{\n \t\t  s += 3;\n \t\t  continue;\n \t\t}\n \t      break;\n \n \t    case 'Q':\t\t/* Coprocessor queue.  */\n-\t      if (strncmp (s, \"%cq\", 3) == 0)\n+\t      if (startswith (s, \"%cq\"))\n \t\t{\n \t\t  s += 3;\n \t\t  continue;\n@@ -3020,51 +3020,51 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t\t  special_case = SPECIAL_CASE_SETX;\n \t\t  continue;\n \t\t}\n-\t      else if (strncmp (str, \"fdiv\", 4) == 0)\n+\t      else if (startswith (str, \"fdiv\"))\n \t\t{\n \t\t  special_case = SPECIAL_CASE_FDIV;\n \t\t  continue;\n \t\t}\n \t      break;\n \n \t    case 'o':\n-\t      if (strncmp (s, \"%asi\", 4) != 0)\n+\t      if (!startswith (s, \"%asi\"))\n \t\tbreak;\n \t      s += 4;\n \t      continue;\n \n \t    case 's':\n-\t      if (strncmp (s, \"%fprs\", 5) != 0)\n+\t      if (!startswith (s, \"%fprs\"))\n \t\tbreak;\n \t      s += 5;\n \t      continue;\n \n \t    case '{':\n-\t      if (strncmp (s, \"%mcdper\",7) != 0)\n+\t      if (!startswith (s, \"%mcdper\"))\n \t\tbreak;\n \t      s += 7;\n \t      continue;\n \n             case '&':\n-              if (strncmp (s, \"%entropy\", 8) != 0)\n+              if (!startswith (s, \"%entropy\"))\n                 break;\n               s += 8;\n               continue;\n \n \t    case 'E':\n-\t      if (strncmp (s, \"%ccr\", 4) != 0)\n+\t      if (!startswith (s, \"%ccr\"))\n \t\tbreak;\n \t      s += 4;\n \t      continue;\n \n \t    case 't':\n-\t      if (strncmp (s, \"%tbr\", 4) != 0)\n+\t      if (!startswith (s, \"%tbr\"))\n \t\tbreak;\n \t      s += 4;\n \t      continue;\n \n \t    case 'w':\n-\t      if (strncmp (s, \"%wim\", 4) != 0)\n+\t      if (!startswith (s, \"%wim\"))\n \t\tbreak;\n \t      s += 4;\n \t      continue;\n@@ -3112,7 +3112,7 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)\n \t      }\n \n \t    case 'y':\n-\t      if (strncmp (s, \"%y\", 2) != 0)\n+\t      if (!startswith (s, \"%y\"))\n \t\tbreak;\n \t      s += 2;\n \t      continue;\n@@ -4138,8 +4138,8 @@ s_reserve (int ignore ATTRIBUTE_UNUSED)\n   symbolP = symbol_find_or_make (name);\n   *p = c;\n \n-  if (strncmp (input_line_pointer, \",\\\"bss\\\"\", 6) != 0\n-      && strncmp (input_line_pointer, \",\\\".bss\\\"\", 7) != 0)\n+  if (!startswith (input_line_pointer, \",\\\"bss\\\"\")\n+      && !startswith (input_line_pointer, \",\\\".bss\\\"\"))\n     {\n       as_bad (_(\"bad .reserve segment -- expected BSS segment\"));\n       return;\n@@ -4352,8 +4352,8 @@ s_common (int ignore ATTRIBUTE_UNUSED)\n       if (*input_line_pointer == '.')\n \tinput_line_pointer++;\n       /* @@ Some say data, some say bss.  */\n-      if (strncmp (input_line_pointer, \"bss\\\"\", 4)\n-\t  && strncmp (input_line_pointer, \"data\\\"\", 5))\n+      if (!startswith (input_line_pointer, \"bss\\\"\")\n+\t  && !startswith (input_line_pointer, \"data\\\"\"))\n \t{\n \t  while (*--input_line_pointer != '\"')\n \t    ;\n@@ -4400,25 +4400,25 @@ static void\n s_seg (int ignore ATTRIBUTE_UNUSED)\n {\n \n-  if (strncmp (input_line_pointer, \"\\\"text\\\"\", 6) == 0)\n+  if (startswith (input_line_pointer, \"\\\"text\\\"\"))\n     {\n       input_line_pointer += 6;\n       s_text (0);\n       return;\n     }\n-  if (strncmp (input_line_pointer, \"\\\"data\\\"\", 6) == 0)\n+  if (startswith (input_line_pointer, \"\\\"data\\\"\"))\n     {\n       input_line_pointer += 6;\n       s_data (0);\n       return;\n     }\n-  if (strncmp (input_line_pointer, \"\\\"data1\\\"\", 7) == 0)\n+  if (startswith (input_line_pointer, \"\\\"data1\\\"\"))\n     {\n       input_line_pointer += 7;\n       s_data1 ();\n       return;\n     }\n-  if (strncmp (input_line_pointer, \"\\\"bss\\\"\", 5) == 0)\n+  if (startswith (input_line_pointer, \"\\\"bss\\\"\"))\n     {\n       input_line_pointer += 5;\n       /* We only support 2 segments -- text and data -- for now, so\n@@ -4728,12 +4728,12 @@ sparc_cons (expressionS *exp, int size)\n       && input_line_pointer[1] == 'r'\n       && input_line_pointer[2] == '_')\n     {\n-      if (strncmp (input_line_pointer + 3, \"disp\", 4) == 0)\n+      if (startswith (input_line_pointer + 3, \"disp\"))\n \t{\n \t  input_line_pointer += 7;\n \t  sparc_cons_special_reloc = \"disp\";\n \t}\n-      else if (strncmp (input_line_pointer + 3, \"plt\", 3) == 0)\n+      else if (startswith (input_line_pointer + 3, \"plt\"))\n \t{\n \t  if (size != 4 && size != 8)\n \t    as_bad (_(\"Illegal operands: %%r_plt in %d-byte data field\"), size);\n@@ -4743,7 +4743,7 @@ sparc_cons (expressionS *exp, int size)\n \t      sparc_cons_special_reloc = \"plt\";\n \t    }\n \t}\n-      else if (strncmp (input_line_pointer + 3, \"tls_dtpoff\", 10) == 0)\n+      else if (startswith (input_line_pointer + 3, \"tls_dtpoff\"))\n \t{\n \t  if (size != 4 && size != 8)\n \t    as_bad (_(\"Illegal operands: %%r_tls_dtpoff in %d-byte data field\"), size);"
    },
    {
      "sha": "f0ac732b11e1adc803f167c1fed05fdcc7153aa9",
      "filename": "gas/config/tc-tic54x.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-tic54x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-tic54x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic54x.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -609,7 +609,7 @@ stag_add_field (struct stag *parent,\n       sf->next = sfield;\n     }\n   /* Only create a symbol for this field if the parent has no name.  */\n-  if (!strncmp (\".fake\", parent->name, 5))\n+  if (startswith (parent->name, \".fake\"))\n     {\n       symbolS *sym = symbol_new (name, absolute_section, &zero_address_frag,\n \t\t\t\t offset);\n@@ -705,7 +705,7 @@ tic54x_endstruct (int is_union)\n {\n   int size;\n   const char *path =\n-    !strncmp (current_stag->name, \".fake\", 5) ? \"\" : current_stag->name;\n+    startswith (current_stag->name, \".fake\") ? \"\" : current_stag->name;\n \n   if (!current_stag || current_stag->is_union != is_union)\n     {"
    },
    {
      "sha": "ff1e37de2afeaffcfc52420de99c1a46bf8e2644",
      "filename": "gas/config/tc-tic6x.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-tic6x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-tic6x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic6x.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -4626,8 +4626,7 @@ tic6x_start_unwind_section (const segT text_seg, int idx)\n   if (streq (text_name, \".text\"))\n     text_name = \"\";\n \n-  if (strncmp (text_name, \".gnu.linkonce.t.\",\n-\t       strlen (\".gnu.linkonce.t.\")) == 0)\n+  if (startswith (text_name, \".gnu.linkonce.t.\"))\n     {\n       prefix = prefix_once;\n       text_name += strlen (\".gnu.linkonce.t.\");"
    },
    {
      "sha": "5bfebba564317015de716c53b6018232c91e2019",
      "filename": "gas/config/tc-v850.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-v850.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-v850.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-v850.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -481,8 +481,8 @@ v850_comm (int area)\n \tinput_line_pointer++;\n \n       /* @@ Some say data, some say bss.  */\n-      if (strncmp (input_line_pointer, \"bss\\\"\", 4)\n-\t  && strncmp (input_line_pointer, \"data\\\"\", 5))\n+      if (!startswith (input_line_pointer, \"bss\\\"\")\n+\t  && !startswith (input_line_pointer, \"data\\\"\"))\n \t{\n \t  while (*--input_line_pointer != '\"')\n \t    ;\n@@ -1888,55 +1888,55 @@ md_begin (void)\n   const char *prev_name = \"\";\n   const struct v850_opcode *op;\n \n-  if (strncmp (TARGET_CPU, \"v850e3v5\", 8) == 0)\n+  if (startswith (TARGET_CPU, \"v850e3v5\"))\n     {\n       if (machine == -1)\n \tmachine = bfd_mach_v850e3v5;\n \n       if (!processor_mask)\n \tSET_PROCESSOR_MASK (processor_mask, PROCESSOR_V850E3V5);\n     }\n-  else if (strncmp (TARGET_CPU, \"v850e2v4\", 8) == 0)\n+  else if (startswith (TARGET_CPU, \"v850e2v4\"))\n     {\n       if (machine == -1)\n \tmachine = bfd_mach_v850e3v5;\n \n       if (!processor_mask)\n \tSET_PROCESSOR_MASK (processor_mask, PROCESSOR_V850E3V5);\n     }\n-  else if (strncmp (TARGET_CPU, \"v850e2v3\", 8) == 0)\n+  else if (startswith (TARGET_CPU, \"v850e2v3\"))\n     {\n       if (machine == -1)\n         machine = bfd_mach_v850e2v3;\n \n       if (!processor_mask)\n         SET_PROCESSOR_MASK (processor_mask, PROCESSOR_V850E2V3);\n     }\n-  else if (strncmp (TARGET_CPU, \"v850e2\", 6) == 0)\n+  else if (startswith (TARGET_CPU, \"v850e2\"))\n     {\n       if (machine == -1)\n \tmachine = bfd_mach_v850e2;\n \n       if (!processor_mask)\n \tSET_PROCESSOR_MASK (processor_mask, PROCESSOR_V850E2);\n     }\n-  else if (strncmp (TARGET_CPU, \"v850e1\", 6) == 0)\n+  else if (startswith (TARGET_CPU, \"v850e1\"))\n     {\n       if (machine == -1)\n         machine = bfd_mach_v850e1;\n \n       if (!processor_mask)\n         SET_PROCESSOR_MASK (processor_mask, PROCESSOR_V850E1);\n     }\n-  else if (strncmp (TARGET_CPU, \"v850e\", 5) == 0)\n+  else if (startswith (TARGET_CPU, \"v850e\"))\n     {\n       if (machine == -1)\n \tmachine = bfd_mach_v850e;\n \n       if (!processor_mask)\n \tSET_PROCESSOR_MASK (processor_mask, PROCESSOR_V850E);\n     }\n-  else if (strncmp (TARGET_CPU, \"v850\", 4) == 0)\n+  else if (startswith (TARGET_CPU, \"v850\"))\n     {\n       if (machine == -1)\n \tmachine = 0;\n@@ -2348,9 +2348,9 @@ md_assemble (char *str)\n \n       if (no_stld23)\n \t{\n-\t  if ((strncmp (opcode->name, \"st.\", 3) == 0\n+\t  if ((startswith (opcode->name, \"st.\")\n \t       && v850_operands[opcode->operands[1]].bits == 23)\n-\t      || (strncmp (opcode->name, \"ld.\", 3) == 0\n+\t      || (startswith (opcode->name, \"ld.\")\n \t\t  && v850_operands[opcode->operands[0]].bits == 23))\n \t    {\n \t      errmsg = _(\"st/ld offset 23 instruction was disabled .\");\n@@ -2949,8 +2949,8 @@ md_assemble (char *str)\n                      value does not fit into the bits available then create a\n                      fake error so that the next ld/st instruction will be\n                      selected.  */\n-                  if ( (  (strncmp (opcode->name, \"st.\", 3) == 0)\n-\t\t       || (strncmp (opcode->name, \"ld.\", 3) == 0))\n+                  if ( (  (startswith (opcode->name, \"st.\"))\n+\t\t       || (startswith (opcode->name, \"ld.\")))\n                       && ex.X_op == O_constant\n                       && (ex.X_add_number < (-(1 << (operand->bits - 1)))\n \t\t\t  || ex.X_add_number > ((1 << (operand->bits - 1)) - 1)))"
    },
    {
      "sha": "f439f1b52dcb83f7d5b6c51e253ac6633ab96ad2",
      "filename": "gas/config/tc-vax.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-vax.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-vax.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-vax.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -3279,7 +3279,7 @@ vax_cons (expressionS *exp, int size)\n   save = input_line_pointer;\n   if (input_line_pointer[0] == '%')\n     {\n-      if (strncmp (input_line_pointer + 1, \"pcrel\", 5) == 0)\n+      if (startswith (input_line_pointer + 1, \"pcrel\"))\n \t{\n \t  input_line_pointer += 6;\n \t  vax_cons_special_reloc = \"pcrel\";"
    },
    {
      "sha": "00290d7c3aded37b04c50b5c37fc328f75ae7b39",
      "filename": "gas/config/tc-wasm32.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-wasm32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-wasm32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-wasm32.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -381,28 +381,28 @@ wasm32_leb128 (char **line, int bits, int sign)\n       reloc->u.a.addend = 0;\n     }\n   /* i32.const fpointer@gotcode */\n-  if (strncmp (input_line_pointer, \"@gotcode\", 8) == 0)\n+  if (startswith (input_line_pointer, \"@gotcode\"))\n     {\n       gotrel = 1;\n       code = 1;\n       input_line_pointer += 8;\n     }\n   /* i32.const data@got */\n-  else if (strncmp (input_line_pointer, \"@got\", 4) == 0)\n+  else if (startswith (input_line_pointer, \"@got\"))\n     {\n       gotrel = 1;\n       input_line_pointer += 4;\n     }\n   /* call f@plt{__sigchar_FiiiiE} */\n-  else if (strncmp (input_line_pointer, \"@plt\", 4) == 0)\n+  else if (startswith (input_line_pointer, \"@plt\"))\n     {\n       char *end_of_sig;\n \n       pltrel = 1;\n       code = 1;\n       input_line_pointer += 4;\n \n-      if (strncmp (input_line_pointer, \"{\", 1) == 0\n+      if (startswith (input_line_pointer, \"{\")\n           && (end_of_sig = strchr (input_line_pointer, '}')))\n \t{\n \t  char *signature;"
    },
    {
      "sha": "3edf384350af3569f76a98092f96a375587c5ace",
      "filename": "gas/config/tc-xstormy16.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-xstormy16.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-xstormy16.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-xstormy16.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -136,7 +136,7 @@ md_operand (expressionS * e)\n   if (*input_line_pointer != '@')\n     return;\n \n-  if (strncmp (input_line_pointer + 1, \"fptr\", 4) == 0)\n+  if (startswith (input_line_pointer + 1, \"fptr\"))\n     {\n       input_line_pointer += 5;\n       SKIP_WHITESPACE ();"
    },
    {
      "sha": "452d4a757e907e145f3379e5872434402bb37d3b",
      "filename": "gas/config/tc-xtensa.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-xtensa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/tc-xtensa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-xtensa.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1293,7 +1293,7 @@ get_directive (directiveE *directive, bool *negated)\n   unsigned i;\n   const char *directive_string;\n \n-  if (strncmp (input_line_pointer, \"no-\", 3) != 0)\n+  if (!startswith (input_line_pointer, \"no-\"))\n     *negated = false;\n   else\n     {\n@@ -1308,12 +1308,12 @@ get_directive (directiveE *directive, bool *negated)\n      equivalent to .begin [no-]transform.  We should remove it when\n      we stop accepting those options.  */\n \n-  if (strncmp (input_line_pointer, \"generics\", strlen (\"generics\")) == 0)\n+  if (startswith (input_line_pointer, \"generics\"))\n     {\n       as_warn (_(\"[no-]generics is deprecated; use [no-]transform instead\"));\n       directive_string = \"transform\";\n     }\n-  else if (strncmp (input_line_pointer, \"relax\", strlen (\"relax\")) == 0)\n+  else if (startswith (input_line_pointer, \"relax\"))\n     {\n       as_warn (_(\"[no-]relax is deprecated; use [no-]transform instead\"));\n       directive_string = \"transform\";\n@@ -2893,7 +2893,7 @@ static bool\n xg_instruction_matches_option_term (TInsn *insn, const ReqOrOption *option)\n {\n   if (strcmp (option->option_name, \"realnop\") == 0\n-      || strncmp (option->option_name, \"IsaUse\", 6) == 0)\n+      || startswith (option->option_name, \"IsaUse\"))\n     {\n       /* These conditions were evaluated statically when building the\n \t relaxation table.  There's no need to reevaluate them now.  */\n@@ -4552,7 +4552,7 @@ is_unaligned_label (symbolS *sym)\n       && (name[fake_size] == 'F'\n \t  || name[fake_size] == 'L'\n \t  || (name[fake_size] == 'e'\n-\t      && strncmp (\"endfunc\", name+fake_size, 7) == 0)))\n+\t      && startswith (name + fake_size, \"endfunc\"))))\n     return true;\n \n   return false;\n@@ -11690,11 +11690,11 @@ cache_literal_section (bool use_abs_literals)\n       size_t len = strlen (text_name);\n       if (len >= 5\n \t  && (strcmp (text_name + len - 5, \".text\") == 0\n-\t      || strncmp (text_name, \".text\", 5) == 0))\n+\t      || startswith (text_name, \".text\")))\n \tlen -= 5;\n \n       name = XNEWVEC (char, len + strlen (base_name) + 1);\n-      if (strncmp (text_name, \".text\", 5) == 0)\n+      if (startswith (text_name, \".text\"))\n \t{\n \t  strcpy (name, base_name);\n \t  strcat (name, text_name + 5);"
    },
    {
      "sha": "267d436461a260d11ec2d90f1032b633f747e80f",
      "filename": "gas/config/xtensa-relax.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/xtensa-relax.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/config/xtensa-relax.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/xtensa-relax.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1282,9 +1282,9 @@ parse_precond (const char *s, precond_e *precond)\n   p = skip_white (p);\n \n   /* Check for \"==\" and \"!=\".  */\n-  if (strncmp (p, \"==\", 2) == 0)\n+  if (startswith (p, \"==\"))\n     precond->cmpop = OP_EQUAL;\n-  else if (strncmp (p, \"!=\", 2) == 0)\n+  else if (startswith (p, \"!=\"))\n     precond->cmpop = OP_NOTEQUAL;\n   else\n     return false;\n@@ -1392,7 +1392,7 @@ parse_option_cond (const char *s, ReqOption *option)\n       ReqOrOption *req;\n       ReqOrOption **r_p;\n \n-      if (strncmp (option_name, \"no-\", 3) == 0)\n+      if (startswith (option_name, \"no-\"))\n \t{\n \t  option_name = xstrdup (&option_name[3]);\n \t  is_true = false;\n@@ -1558,7 +1558,7 @@ transition_applies (insn_pattern *initial_insn,\n \t  || req_or_option->next != NULL)\n \tcontinue;\n \n-      if (strncmp (req_or_option->option_name, \"IsaUse\", 6) == 0)\n+      if (startswith (req_or_option->option_name, \"IsaUse\"))\n \t{\n \t  bool option_available = false;\n \t  char *option_name = req_or_option->option_name + 6;\n@@ -1607,7 +1607,7 @@ wide_branch_opcode (const char *opcode_name,\n   xtensa_opcode opcode;\n   static char wbr_name_buf[20];\n \n-  if (strncmp (opcode_name, \"WIDE.\", 5) != 0)\n+  if (!startswith (opcode_name, \"WIDE.\"))\n     return false;\n \n   strcpy (wbr_name_buf, opcode_name + 5);"
    },
    {
      "sha": "84029940b2e7af67a76dba4165668373d85f08a4",
      "filename": "gas/dw2gencfi.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/dw2gencfi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/dw2gencfi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dw2gencfi.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1219,14 +1219,13 @@ dot_cfi_sections (int ignored ATTRIBUTE_UNUSED)\n \tsaved_ilp = input_line_pointer;\n \tc = get_symbol_name (& name);\n \n-\tif (strncmp (name, \".eh_frame\", sizeof \".eh_frame\") == 0\n+\tif (startswith (name, \".eh_frame\")\n \t    && name[9] != '_')\n \t  sections |= CFI_EMIT_eh_frame;\n-\telse if (strncmp (name, \".debug_frame\", sizeof \".debug_frame\") == 0)\n+\telse if (startswith (name, \".debug_frame\"))\n \t  sections |= CFI_EMIT_debug_frame;\n #if SUPPORT_COMPACT_EH\n-\telse if (strncmp (name, \".eh_frame_entry\",\n-\t\t\t  sizeof \".eh_frame_entry\") == 0)\n+\telse if (startswith (name, \".eh_frame_entry\"))\n \t  {\n \t    compact_eh = true;\n \t    sections |= CFI_EMIT_eh_frame_compact;"
    },
    {
      "sha": "24c3560f6f495d1b8628a1b450e82bcd5463e17d",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1097,7 +1097,7 @@ dwarf2_directive_filename (void)\n \t  SKIP_WHITESPACE ();\n \t}\n \n-      if (strncmp (input_line_pointer, \"md5\", 3) == 0)\n+      if (startswith (input_line_pointer, \"md5\"))\n \t{\n \t  input_line_pointer += 3;\n \t  SKIP_WHITESPACE ();"
    },
    {
      "sha": "21f0755b3a4ac797165917e1c533539c7bfbbee8",
      "filename": "gas/ehopt.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/ehopt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/ehopt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ehopt.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -118,7 +118,7 @@ get_cie_info (struct cie_info *info)\n \n   /* First make sure that the CIE Identifier Tag is 0/-1.  */\n \n-  if (strncmp (segment_name (now_seg), \".debug_frame\", 12) == 0)\n+  if (startswith (segment_name (now_seg), \".debug_frame\"))\n     CIE_id = (char)0xff;\n   else\n     CIE_id = 0;\n@@ -283,10 +283,10 @@ check_eh_frame (expressionS *exp, unsigned int *pnbytes)\n #endif\n \n   /* Select the proper section data.  */\n-  if (strncmp (segment_name (now_seg), \".eh_frame\", 9) == 0\n+  if (startswith (segment_name (now_seg), \".eh_frame\")\n       && segment_name (now_seg)[9] != '_')\n     d = &eh_frame_data;\n-  else if (strncmp (segment_name (now_seg), \".debug_frame\", 12) == 0)\n+  else if (startswith (segment_name (now_seg), \".debug_frame\"))\n     d = &debug_frame_data;\n   else\n     return 0;"
    },
    {
      "sha": "088af7de13d7440e9f15d75c29856333bc95279c",
      "filename": "gas/input-file.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/input-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/input-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/input-file.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -171,7 +171,7 @@ input_file_open (const char *filename,\n       if (c == 'N')\n \t{\n \t  if (fgets (buf, sizeof (buf), f_in)\n-\t      && !strncmp (buf, \"O_APP\", 5) && ISSPACE (buf[5]))\n+\t      && startswith (buf, \"O_APP\") && ISSPACE (buf[5]))\n \t    preprocess = 0;\n \t  if (!strchr (buf, '\\n'))\n \t    ungetc ('#', f_in);\t/* It was longer.  */\n@@ -181,7 +181,7 @@ input_file_open (const char *filename,\n       else if (c == 'A')\n \t{\n \t  if (fgets (buf, sizeof (buf), f_in)\n-\t      && !strncmp (buf, \"PP\", 2) && ISSPACE (buf[2]))\n+\t      && startswith (buf, \"PP\") && ISSPACE (buf[2]))\n \t    preprocess = 1;\n \t  if (!strchr (buf, '\\n'))\n \t    ungetc ('#', f_in);"
    },
    {
      "sha": "eebe21de7cf233560e43f8a4e521bc3952d27e37",
      "filename": "gas/listing.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/listing.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/listing.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/listing.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -318,8 +318,8 @@ listing_newline (char *ps)\n       const char *segname;\n \n       segname = segment_name (now_seg);\n-      if (strncmp (segname, \".debug\", sizeof \".debug\" - 1) == 0\n-\t  || strncmp (segname, \".line\", sizeof \".line\" - 1) == 0)\n+      if (startswith (segname, \".debug\")\n+\t  || startswith (segname, \".line\"))\n \tlisting_tail->debugging = 1;\n     }\n #endif\n@@ -433,8 +433,8 @@ listing_newline (char *ps)\n       const char *segname;\n \n       segname = segment_name (now_seg);\n-      if (strncmp (segname, \".debug\", sizeof \".debug\" - 1) == 0\n-\t  || strncmp (segname, \".line\", sizeof \".line\" - 1) == 0)\n+      if (startswith (segname, \".debug\")\n+\t  || startswith (segname, \".line\"))\n \tnew_i->debugging = 1;\n     }\n #endif\n@@ -1160,29 +1160,29 @@ debugging_pseudo (list_info_type *list, const char *line)\n \n   line++;\n \n-  if (strncmp (line, \"def\", 3) == 0)\n+  if (startswith (line, \"def\"))\n     return 1;\n-  if (strncmp (line, \"val\", 3) == 0)\n+  if (startswith (line, \"val\"))\n     return 1;\n-  if (strncmp (line, \"scl\", 3) == 0)\n+  if (startswith (line, \"scl\"))\n     return 1;\n-  if (strncmp (line, \"line\", 4) == 0)\n+  if (startswith (line, \"line\"))\n     return 1;\n-  if (strncmp (line, \"endef\", 5) == 0)\n+  if (startswith (line, \"endef\"))\n     return 1;\n-  if (strncmp (line, \"ln\", 2) == 0)\n+  if (startswith (line, \"ln\"))\n     return 1;\n-  if (strncmp (line, \"type\", 4) == 0)\n+  if (startswith (line, \"type\"))\n     return 1;\n-  if (strncmp (line, \"size\", 4) == 0)\n+  if (startswith (line, \"size\"))\n     return 1;\n-  if (strncmp (line, \"dim\", 3) == 0)\n+  if (startswith (line, \"dim\"))\n     return 1;\n-  if (strncmp (line, \"tag\", 3) == 0)\n+  if (startswith (line, \"tag\"))\n     return 1;\n-  if (strncmp (line, \"stabs\", 5) == 0)\n+  if (startswith (line, \"stabs\"))\n     return 1;\n-  if (strncmp (line, \"stabn\", 5) == 0)\n+  if (startswith (line, \"stabn\"))\n     return 1;\n \n   return 0;"
    },
    {
      "sha": "670f316b62d1b9bf04d60dcda7a19671936519d4",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -1322,7 +1322,7 @@ read_a_source_file (const char *name)\n \t      char *tmp_buf = 0;\n \n \t      s = input_line_pointer;\n-\t      if (strncmp (s, \"APP\\n\", 4))\n+\t      if (!startswith (s, \"APP\\n\"))\n \t\t{\n \t\t  /* We ignore it.  */\n \t\t  ignore_rest_of_line ();"
    },
    {
      "sha": "c8e6ab4a6cf3371d0edf82d885ec538c529d58bb",
      "filename": "gas/write.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09/gas/write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/write.c?ref=d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "patch": "@@ -880,8 +880,7 @@ adjust_reloc_syms (bfd *abfd ATTRIBUTE_UNUSED,\n \t\t    /* The GNU toolchain uses an extension for ELF: a\n \t\t       section beginning with the magic string\n \t\t       .gnu.linkonce is a linkonce section.  */\n-\t\t    && strncmp (segment_name (symsec), \".gnu.linkonce\",\n-\t\t\t\tsizeof \".gnu.linkonce\" - 1) == 0))\n+\t\t    && startswith (segment_name (symsec), \".gnu.linkonce\")))\n \t      continue;\n \t  }\n \n@@ -1450,7 +1449,7 @@ compress_debug (bfd *abfd, asection *sec, void *xxx ATTRIBUTE_UNUSED)\n     return;\n \n   section_name = bfd_section_name (sec);\n-  if (strncmp (section_name, \".debug_\", 7) != 0)\n+  if (!startswith (section_name, \".debug_\"))\n     return;\n \n   strm = compress_init ();\n@@ -2039,7 +2038,7 @@ maybe_generate_build_notes (void)\n \t/* Skip linkonce sections - we cannot use these section symbols as they may disappear.  */\n \t&& (bsym->section->flags & (SEC_CODE | SEC_LINK_ONCE)) == SEC_CODE\n \t/* Not all linkonce sections are flagged...  */\n-\t&& strncmp (S_GET_NAME (sym), \".gnu.linkonce\", sizeof \".gnu.linkonce\" - 1) != 0)\n+\t&& !startswith (S_GET_NAME (sym), \".gnu.linkonce\"))\n       {\n \t/* Create a version note.  */\n \tfrag_now_fix ();"
    }
  ]
}