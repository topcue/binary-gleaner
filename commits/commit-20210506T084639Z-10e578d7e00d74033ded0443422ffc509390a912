{
  "sha": "10e578d7e00d74033ded0443422ffc509390a912",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTBlNTc4ZDdlMDBkNzQwMzNkZWQwNDQzNDIyZmZjNTA5MzkwYTkxMg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-05-06T08:13:06Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-05-06T08:46:39Z"
    },
    "message": "gdb/mi: add a '--force-condition' flag to the '-break-insert' cmd\n\nAdd a '--force-condition' flag to the '-break-insert' command to be\nable to force conditions.  Because the '-dprintf-insert' command uses\nthe same mechanism as the '-break-insert' command, it obtains the\n'--force-condition' flag, too.\n\ngdb/ChangeLog:\n2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* mi/mi-cmd-break.c (mi_cmd_break_insert_1): Recognize the\n\t'--force-condition' flag to force the condition in the\n\t'-break-insert' and '-dprintf-insert' commands.\n\t* NEWS: Mention the change.\n\ngdb/testsuite/ChangeLog:\n2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.mi/mi-break.exp (test_forced_conditions): New proc that\n\tis called by the test.\n\ngdb/doc/ChangeLog:\n2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.texinfo (GDB/MI Breakpoint Commands): Mention the\n\t'--force-condition' flag of the '-break-insert' and\n\t'-dprintf-insert' commands.",
    "tree": {
      "sha": "a68ac53300e767a8e8e93923f7fb45469fe79c5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a68ac53300e767a8e8e93923f7fb45469fe79c5c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/10e578d7e00d74033ded0443422ffc509390a912",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10e578d7e00d74033ded0443422ffc509390a912",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/10e578d7e00d74033ded0443422ffc509390a912",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10e578d7e00d74033ded0443422ffc509390a912/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ae064303efe5830e6b9901ce2e4ed241a3cda8e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae064303efe5830e6b9901ce2e4ed241a3cda8e7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ae064303efe5830e6b9901ce2e4ed241a3cda8e7"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 61,
    "deletions": 3
  },
  "files": [
    {
      "sha": "87f366c4b68399b0efb45a035b9d53b2f3fb7a6e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10e578d7e00d74033ded0443422ffc509390a912/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10e578d7e00d74033ded0443422ffc509390a912/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=10e578d7e00d74033ded0443422ffc509390a912",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* mi/mi-cmd-break.c (mi_cmd_break_insert_1): Recognize the\n+\t'--force-condition' flag to force the condition in the\n+\t'-break-insert' and '-dprintf-insert' commands.\n+\t* NEWS: Mention the change.\n+\n 2021-05-04  Tom de Vries  <tdevries@suse.de>\n \n \tPR guile/27806"
    },
    {
      "sha": "a814b41315dd68f5d532d32fea90ce565ccaf3ec",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10e578d7e00d74033ded0443422ffc509390a912/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10e578d7e00d74033ded0443422ffc509390a912/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=10e578d7e00d74033ded0443422ffc509390a912",
      "patch": "@@ -31,6 +31,14 @@\n     equivalent of the CLI's \"break -qualified\" and \"dprintf\n     -qualified\".\n \n+ ** '-break-insert --force-condition' and '-dprintf-insert --force-condition'\n+\n+    The MI -break-insert and -dprintf-insert commands now support a\n+    '--force-condition' flag to forcibly define a condition even when\n+    the condition is invalid at all locations of the breakpoint.  This\n+    is equivalent to the '-force-condition' flag of the CLI's \"break\"\n+    command.\n+\n * GDB now supports core file debugging for x86_64 Cygwin programs.\n \n * GDB will now look for the .gdbinit file in a config directory before"
    },
    {
      "sha": "85c09900185a4f1e497a9b8f90547e64001443c0",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10e578d7e00d74033ded0443422ffc509390a912/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10e578d7e00d74033ded0443422ffc509390a912/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=10e578d7e00d74033ded0443422ffc509390a912",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.texinfo (GDB/MI Breakpoint Commands): Mention the\n+\t'--force-condition' flag of the '-break-insert' and\n+\t'-dprintf-insert' commands.\n+\n 2021-05-04  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* python.texi (Types In Python): Re-organize Type.fields doc."
    },
    {
      "sha": "b7667f7d11e776c4ef58040cc846a0ff202663d5",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10e578d7e00d74033ded0443422ffc509390a912/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10e578d7e00d74033ded0443422ffc509390a912/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=10e578d7e00d74033ded0443422ffc509390a912",
      "patch": "@@ -30704,7 +30704,7 @@ N.A.\n \n @smallexample\n  -break-insert [ -t ] [ -h ] [ -f ] [ -d ] [ -a ] [ --qualified ]\n-    [ -c @var{condition} ] [ -i @var{ignore-count} ]\n+    [ -c @var{condition} ] [ --force-condition ] [ -i @var{ignore-count} ]\n     [ -p @var{thread-id} ] [ @var{location} ]\n @end smallexample\n \n@@ -30760,6 +30760,9 @@ Create a tracepoint.  @xref{Tracepoints}.  When this parameter\n is used together with @samp{-h}, a fast tracepoint is created.\n @item -c @var{condition}\n Make the breakpoint conditional on @var{condition}.\n+@item --force-condition\n+Forcibly define the breakpoint even if the condition is invalid at\n+all of the breakpoint locations.\n @item -i @var{ignore-count}\n Initialize the @var{ignore-count}.\n @item -p @var{thread-id}\n@@ -30829,7 +30832,7 @@ times=\"0\"@}]@}\n \n @smallexample\n  -dprintf-insert [ -t ] [ -f ] [ -d ] [ --qualified ]\n-    [ -c @var{condition} ] [ -i @var{ignore-count} ]\n+    [ -c @var{condition} ] [--force-condition] [ -i @var{ignore-count} ]\n     [ -p @var{thread-id} ] [ @var{location} ] [ @var{format} ]\n     [ @var{argument} ]\n @end smallexample\n@@ -30854,6 +30857,9 @@ cannot be parsed.\n Create a disabled breakpoint.\n @item -c @var{condition}\n Make the breakpoint conditional on @var{condition}.\n+@item --force-condition\n+Forcibly define the breakpoint even if the condition is invalid at\n+all of the breakpoint locations.\n @item -i @var{ignore-count}\n Set the ignore count of the breakpoint (@pxref{Conditions, ignore count})\n to @var{ignore-count}."
    },
    {
      "sha": "c73548c2a40cc26e96832af022633ba49a016b79",
      "filename": "gdb/mi/mi-cmd-break.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10e578d7e00d74033ded0443422ffc509390a912/gdb/mi/mi-cmd-break.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10e578d7e00d74033ded0443422ffc509390a912/gdb/mi/mi-cmd-break.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-break.c?ref=10e578d7e00d74033ded0443422ffc509390a912",
      "patch": "@@ -184,12 +184,14 @@ mi_cmd_break_insert_1 (int dprintf, const char *command, char **argv, int argc)\n   int is_explicit = 0;\n   struct explicit_location explicit_loc;\n   std::string extra_string;\n+  bool force_condition = false;\n \n   enum opt\n     {\n       HARDWARE_OPT, TEMP_OPT, CONDITION_OPT,\n       IGNORE_COUNT_OPT, THREAD_OPT, PENDING_OPT, DISABLE_OPT,\n       TRACEPOINT_OPT,\n+      FORCE_CONDITION_OPT,\n       QUALIFIED_OPT,\n       EXPLICIT_SOURCE_OPT, EXPLICIT_FUNC_OPT,\n       EXPLICIT_LABEL_OPT, EXPLICIT_LINE_OPT\n@@ -204,6 +206,7 @@ mi_cmd_break_insert_1 (int dprintf, const char *command, char **argv, int argc)\n     {\"f\", PENDING_OPT, 0},\n     {\"d\", DISABLE_OPT, 0},\n     {\"a\", TRACEPOINT_OPT, 0},\n+    {\"-force-condition\", FORCE_CONDITION_OPT, 0},\n     {\"-qualified\", QUALIFIED_OPT, 0},\n     {\"-source\" , EXPLICIT_SOURCE_OPT, 1},\n     {\"-function\", EXPLICIT_FUNC_OPT, 1},\n@@ -270,6 +273,9 @@ mi_cmd_break_insert_1 (int dprintf, const char *command, char **argv, int argc)\n \t  is_explicit = 1;\n \t  explicit_loc.line_offset = linespec_parse_line_offset (oarg);\n \t  break;\n+\tcase FORCE_CONDITION_OPT:\n+\t  force_condition = true;\n+\t  break;\n \t}\n     }\n \n@@ -354,7 +360,7 @@ mi_cmd_break_insert_1 (int dprintf, const char *command, char **argv, int argc)\n \n   create_breakpoint (get_current_arch (), location.get (), condition, thread,\n \t\t     extra_string.c_str (),\n-\t\t     false,\n+\t\t     force_condition,\n \t\t     0 /* condition and thread are valid.  */,\n \t\t     temp_p, type_wanted,\n \t\t     ignore_count,"
    },
    {
      "sha": "7de5a0d49879613e4f05abe83c5757cdbce04466",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10e578d7e00d74033ded0443422ffc509390a912/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10e578d7e00d74033ded0443422ffc509390a912/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=10e578d7e00d74033ded0443422ffc509390a912",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.mi/mi-break.exp (test_forced_conditions): New proc that\n+\tis called by the test.\n+\n 2021-05-05  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.threads/detach-step-over.exp: Do exp_continue when encountering"
    },
    {
      "sha": "3b264ecdebd206b1f37b236c1751133deb3355e6",
      "filename": "gdb/testsuite/gdb.mi/mi-break.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10e578d7e00d74033ded0443422ffc509390a912/gdb/testsuite/gdb.mi/mi-break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10e578d7e00d74033ded0443422ffc509390a912/gdb/testsuite/gdb.mi/mi-break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-break.exp?ref=10e578d7e00d74033ded0443422ffc509390a912",
      "patch": "@@ -408,6 +408,24 @@ proc_with_prefix test_explicit_breakpoints {} {\n \t\".*Source filename requires function, label, or line offset.*\"\n }\n \n+# Test forcing an invalid condition.\n+\n+proc_with_prefix test_forced_conditions {} {\n+    set warning \".*warning: failed to validate condition .* disabling.*\"\n+\n+    set loc [mi_make_breakpoint_loc -enabled \"N\"]\n+    set args [list -cond \"bad\" -locations \"\\\\\\[$loc\\\\\\]\"]\n+    set bp [eval mi_make_breakpoint_multi $args]\n+\n+    mi_gdb_test \"-break-insert -c bad --force-condition callme\" \\\n+\t\"${warning}\\\\^done,$bp\" \\\n+\t\"breakpoint with forced condition\"\n+\n+    mi_gdb_test \"-dprintf-insert -c bad --force-condition callme \\\"Hello\\\"\" \\\n+        \"${warning}\\\\^done,$bp\" \\\n+        \"dprintf with forced condition\"\n+}\n+\n proc test_break {mi_mode} {\n     global srcdir subdir binfile\n \n@@ -440,6 +458,8 @@ proc test_break {mi_mode} {\n     test_abreak_creation\n \n     test_explicit_breakpoints\n+\n+    test_forced_conditions\n }\n \n if [gdb_debug_enabled] {"
    }
  ]
}