{
  "sha": "c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzFhNjZjMDYyOWQzYjYyMDc1YTczNzkzZjFhN2U3MzkzZTIzZTdlMg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-14T13:08:42Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-14T13:08:42Z"
    },
    "message": "[gdb] Expand symbolless symtabs using maint expand-symtabs\n\nConsider this test-case, consisting of header file hello.h:\n...\ninline static const char*\nfoo (void)\n{\n  return \"foo\";\n}\n...\nand source file hello.c:\n...\nint\nmain (void)\n{\n  printf (\"hello: %s\\n\", foo ());\n  return 0;\n}\n...\ncompiled with -g:\n...\n$ gcc hello.c -g\n...\n\nWhen trying to expand the partial symtab for hello.h:\n...\n$ gdb -batch \\\n  -iex \"set language c\" \\\n  a.out \\\n  -ex \"maint expand-symtabs hello.h\" \\\n  -ex \"maint info psymtabs\"\n...\nwe in fact find that the partial symtab for hello.h (and corresponding\nincluder partial symtab hello.c) have not been expanded:\n...\n  { psymtab hello.h ((struct partial_symtab *) 0x27cf070)\n    readin no\n  ...\n  { psymtab hello.c ((struct partial_symtab *) 0x2cf09e0)\n    readin no\n...\n\nThis is due to the recursively_search_psymtabs call in\npsym_expand_symtabs_matching:\n...\n      if (recursively_search_psymtabs (ps, objfile, domain,\n                                      lookup_name, symbol_matcher))\n...\nwhich always returns false for symbolless partial symtabs.\n\nThe same problem occurs with CUs where the dwarf is generated by gas\n--gdwarf-2 for a foo.S: if we read such a test-case with -readnow, we'll have\na symbolless symtab for foo.S.  But if we read the test-case with partial\nsymtabs, and expand those using \"maint expand-symtabs\", the foo.S psymtab\nremains unexpanded.\n\nFix this by passing a NULL symbol_matcher and lookup_name to\nexpand_symtabs_matching in maintenance_expand_symtabs, and skipping the call\nto recursively_search_psymtabs if symbol_matcher == NULL and\nlookup_name == NULL.\n\nBuild and tested on x86_64-linux, with native.\n\nIn addition, tested test-case with target boards cc-with-gdb-index.exp,\ncc-with-debug-names.exp and readnow.exp.\n\ngdb/ChangeLog:\n\n2020-04-14  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/25720\n\t* symmisc.c (maintenance_expand_symtabs): Call expand_symtabs_matching\n\twith NULL symbol_matcher and lookup_name.\n\t* psymtab.c (psym_expand_symtabs_matching): Handle NULL symbol_matcher\n\tand lookup_name.\n\t* dwarf2/read.c (dw2_expand_symtabs_matching)\n\t(dw2_debug_names_expand_symtabs_matching): Same.\n\t* symfile.h (struct quick_symbol_functions::expand_symtabs_matching):\n\tMake lookup_name a pointer.  Update comment.\n\t* symtab.c (global_symbol_searcher::expand_symtabs): Handle\n\tlookup_name being a pointer.\n\t* symfile.c (expand_symtabs_matching): Same.\n\t* symfile-debug.c (debug_qf_expand_symtabs_matching): Same.\n\t* linespec.c (iterate_over_all_matching_symtabs): Same.\n\ngdb/testsuite/ChangeLog:\n\n2020-04-14  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/25720\n\t* gdb.base/maint-expand-symbols-header-file.c: New test.\n\t* gdb.base/maint-expand-symbols-header-file.exp: New file.\n\t* gdb.base/maint-expand-symbols-header-file.h: New test.",
    "tree": {
      "sha": "e4f476e5deaa1c9c4075e46b153a3834e9f27bc9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e4f476e5deaa1c9c4075e46b153a3834e9f27bc9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "10ca4b042d15cd0727300cf3f5a9f11ac8d6abff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10ca4b042d15cd0727300cf3f5a9f11ac8d6abff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/10ca4b042d15cd0727300cf3f5a9f11ac8d6abff"
    }
  ],
  "stats": {
    "total": 189,
    "additions": 165,
    "deletions": 24
  },
  "files": [
    {
      "sha": "8c9fbe37e2fc69dc22798aff67cc59271c024280",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -1,3 +1,20 @@\n+2020-04-14  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/25720\n+\t* symmisc.c (maintenance_expand_symtabs): Call expand_symtabs_matching\n+\twith NULL symbol_matcher and lookup_name.\n+\t* psymtab.c (psym_expand_symtabs_matching): Handle NULL symbol_matcher\n+\tand lookup_name.\n+\t* dwarf2/read.c (dw2_expand_symtabs_matching)\n+\t(dw2_debug_names_expand_symtabs_matching): Same.\n+\t* symfile.h (struct quick_symbol_functions::expand_symtabs_matching):\n+\tMake lookup_name a pointer.  Update comment.\n+\t* symtab.c (global_symbol_searcher::expand_symtabs): Handle\n+\tlookup_name being a pointer.\n+\t* symfile.c (expand_symtabs_matching): Same.\n+\t* symfile-debug.c (debug_qf_expand_symtabs_matching): Same.\n+\t* linespec.c (iterate_over_all_matching_symtabs): Same.\n+\n 2020-04-13  Tom Tromey  <tom@tromey.com>\n \n \t* run-on-main-thread.c: Update include."
    },
    {
      "sha": "9fa4970556c6e1e584429b2f3030696591a7026c",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 28,
      "deletions": 4,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -4603,7 +4603,7 @@ static void\n dw2_expand_symtabs_matching\n   (struct objfile *objfile,\n    gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n-   const lookup_name_info &lookup_name,\n+   const lookup_name_info *lookup_name,\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n    enum search_domain kind)\n@@ -4617,9 +4617,21 @@ dw2_expand_symtabs_matching\n \n   dw_expand_symtabs_matching_file_matcher (dwarf2_per_objfile, file_matcher);\n \n+  if (symbol_matcher == NULL && lookup_name == NULL)\n+    {\n+      for (dwarf2_per_cu_data *per_cu : dwarf2_per_objfile->all_comp_units)\n+\t{\n+\t  QUIT;\n+\n+\t  dw2_expand_symtabs_matching_one (per_cu, file_matcher,\n+\t\t\t\t\t   expansion_notify);\n+\t}\n+      return;\n+    }\n+\n   mapped_index &index = *dwarf2_per_objfile->index_table;\n \n-  dw2_expand_symtabs_matching_symbol (index, lookup_name,\n+  dw2_expand_symtabs_matching_symbol (index, *lookup_name,\n \t\t\t\t      symbol_matcher,\n \t\t\t\t      kind, [&] (offset_type idx)\n     {\n@@ -5612,7 +5624,7 @@ static void\n dw2_debug_names_expand_symtabs_matching\n   (struct objfile *objfile,\n    gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n-   const lookup_name_info &lookup_name,\n+   const lookup_name_info *lookup_name,\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n    enum search_domain kind)\n@@ -5626,9 +5638,21 @@ dw2_debug_names_expand_symtabs_matching\n \n   dw_expand_symtabs_matching_file_matcher (dwarf2_per_objfile, file_matcher);\n \n+  if (symbol_matcher == NULL && lookup_name == NULL)\n+    {\n+      for (dwarf2_per_cu_data *per_cu : dwarf2_per_objfile->all_comp_units)\n+\t{\n+\t  QUIT;\n+\n+\t  dw2_expand_symtabs_matching_one (per_cu, file_matcher,\n+\t\t\t\t\t   expansion_notify);\n+\t}\n+      return;\n+    }\n+\n   mapped_debug_names &map = *dwarf2_per_objfile->debug_names_table;\n \n-  dw2_expand_symtabs_matching_symbol (map, lookup_name,\n+  dw2_expand_symtabs_matching_symbol (map, *lookup_name,\n \t\t\t\t      symbol_matcher,\n \t\t\t\t      kind, [&] (offset_type namei)\n     {"
    },
    {
      "sha": "e1349e78a0d8d6bbd6225e614d9a641011717974",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -1149,7 +1149,7 @@ iterate_over_all_matching_symtabs\n \tif (objfile->sf)\n \t  objfile->sf->qf->expand_symtabs_matching (objfile,\n \t\t\t\t\t\t    NULL,\n-\t\t\t\t\t\t    lookup_name,\n+\t\t\t\t\t\t    &lookup_name,\n \t\t\t\t\t\t    NULL, NULL,\n \t\t\t\t\t\t    search_domain);\n "
    },
    {
      "sha": "d952f453d99184ffbc9d053eac44919892e9c48a",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -1304,13 +1304,11 @@ static void\n psym_expand_symtabs_matching\n   (struct objfile *objfile,\n    gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n-   const lookup_name_info &lookup_name_in,\n+   const lookup_name_info *lookup_name,\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n    enum search_domain domain)\n {\n-  lookup_name_info lookup_name = lookup_name_in.make_ignore_params ();\n-\n   /* Clear the search flags.  */\n   for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     ps->searched_flag = PST_NOT_SEARCHED;\n@@ -1347,8 +1345,10 @@ psym_expand_symtabs_matching\n \t    continue;\n \t}\n \n-      if (recursively_search_psymtabs (ps, objfile, domain,\n-\t\t\t\t       lookup_name, symbol_matcher))\n+      if ((symbol_matcher == NULL && lookup_name == NULL)\n+\t  || recursively_search_psymtabs (ps, objfile, domain,\n+\t\t\t\t\t  lookup_name->make_ignore_params (),\n+\t\t\t\t\t  symbol_matcher))\n \t{\n \t  struct compunit_symtab *symtab =\n \t    psymtab_to_symtab (objfile, ps);"
    },
    {
      "sha": "75e6f2d0d8998962f9eb65728784f630cd2ff233",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -254,7 +254,7 @@ static void\n debug_qf_expand_symtabs_matching\n   (struct objfile *objfile,\n    gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n-   const lookup_name_info &lookup_name,\n+   const lookup_name_info *lookup_name,\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n    enum search_domain kind)"
    },
    {
      "sha": "8c002ebfabe91ca913f86d7a8e570c10d67bd757",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -3777,7 +3777,7 @@ expand_symtabs_matching\n     {\n       if (objfile->sf)\n \tobjfile->sf->qf->expand_symtabs_matching (objfile, file_matcher,\n-\t\t\t\t\t\t  lookup_name,\n+\t\t\t\t\t\t  &lookup_name,\n \t\t\t\t\t\t  symbol_matcher,\n \t\t\t\t\t\t  expansion_notify, kind);\n     }"
    },
    {
      "sha": "5ada6c370e7efcef136a0957417484b9baef8488",
      "filename": "gdb/symfile.h",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symfile.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symfile.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.h?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -253,19 +253,22 @@ struct quick_symbol_functions\n      names (the passed file name is already only the lbasename'd\n      part).\n \n-     Otherwise, if KIND does not match, this symbol is skipped.\n+     If the file is not skipped, and SYMBOL_MATCHER and LOOKUP_NAME are NULL,\n+     the symbol table is expanded.\n \n-     If even KIND matches, SYMBOL_MATCHER is called for each symbol\n-     defined in the file.  The symbol \"search\" name is passed to\n-     SYMBOL_MATCHER.\n+     Otherwise, individual symbols are considered.\n+\n+     If KIND does not match, the symbol is skipped.\n+\n+     If the symbol name does not match LOOKUP_NAME, the symbol is skipped.\n \n      If SYMBOL_MATCHER returns false, then the symbol is skipped.\n \n      Otherwise, the symbol's symbol table is expanded.  */\n   void (*expand_symtabs_matching)\n     (struct objfile *objfile,\n      gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n-     const lookup_name_info &lookup_name,\n+     const lookup_name_info *lookup_name,\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n      gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n      enum search_domain kind);"
    },
    {
      "sha": "1076a0bcaf837f5a263a9788c33d74f9a0ed9f65",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -977,12 +977,8 @@ maintenance_expand_symtabs (const char *args, int from_tty)\n \t\t return (!basenames\n \t\t\t && (regexp == NULL || re_exec (filename)));\n \t       },\n-\t       lookup_name_info::match_any (),\n-\t       [] (const char *symname)\n-\t       {\n-\t\t /* Since we're not searching on symbols, just return true.  */\n-\t\t return true;\n-\t       },\n+\t       NULL,\n+\t       NULL,\n \t       NULL,\n \t       ALL_DOMAIN);\n \t  }"
    },
    {
      "sha": "45d75a3cd1134721d4bed66afb0b20d9b13860bc",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -4540,7 +4540,7 @@ global_symbol_searcher::expand_symtabs\n        {\n \t return file_matches (filename, filenames, basenames);\n        },\n-       lookup_name_info::match_any (),\n+       &lookup_name_info::match_any (),\n        [&] (const char *symname)\n        {\n \t return (!preg.has_value ()"
    },
    {
      "sha": "73931c51da3e17c8aedfb6545cfa5066c4ea7fe6",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-14  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/25720\n+\t* gdb.base/maint-expand-symbols-header-file.c: New test.\n+\t* gdb.base/maint-expand-symbols-header-file.exp: New file.\n+\t* gdb.base/maint-expand-symbols-header-file.h: New test.\n+\n 2020-04-14  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.dwarf2/dw2-inline-many-frames.exp (get_func_info): Delete."
    },
    {
      "sha": "649c5b97c5fd7e5b12c072b467a5abdfe37ebfd1",
      "filename": "gdb/testsuite/gdb.base/maint-expand-symbols-header-file.c",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.c?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -0,0 +1,26 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include <stdio.h>\n+#include \"maint-expand-symbols-header-file.h\"\n+\n+int\n+main (void)\n+{\n+  printf (\"hello: %s\\n\", foo ());\n+  return 0;\n+}"
    },
    {
      "sha": "f73be404c993a83235833af35551541c41115dc1",
      "filename": "gdb/testsuite/gdb.base/maint-expand-symbols-header-file.exp",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.exp?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -0,0 +1,46 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+#\n+# Test-case to verify that symbol-less symtabs are expanded by\n+# \"maint expand-symtabs\".\n+\n+standard_testfile .c\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile \\\n+\t $srcfile {debug nowarnings}]} {\n+    return -1\n+}\n+\n+set test \"verify no symtabs are expanded\"\n+if { [readnow] } {\n+    unsupported $test\n+    return -1\n+}\n+gdb_test_no_output \"maint info symtabs\" $test\n+\n+# Expand the header file symtab.\n+gdb_test_no_output \"maint expand-symtabs maint-expand-symbols-header-file.h\"\n+\n+# Check that the include symtab was in fact expanded.\n+set file_re \"\\[^\\r\\n\\]*/maint-expand-symbols-header-file.h\"\n+gdb_test \"maint info symtabs\" \\\n+    \"\\r\\n\\t{ symtab $file_re \\\\(\\\\(struct symtab \\\\*\\\\) $hex\\\\)\\r\\n.*\" \\\n+    \"check header file psymtab expansion\"\n+\n+# Check that the symtab the include symtab was referring to was expanded.\n+set file_re \"\\[^\\r\\n\\]*/maint-expand-symbols-header-file.c\"\n+gdb_test \"maint info symtabs\" \\\n+    \"\\r\\n\\t{ symtab $file_re \\\\(\\\\(struct symtab \\\\*\\\\) $hex\\\\)\\r\\n.*\" \\\n+    \"check source file psymtab expansion\""
    },
    {
      "sha": "d8d2517c7b4a545ed433174c180ad16584273894",
      "filename": "gdb/testsuite/gdb.base/maint-expand-symbols-header-file.h",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a66c0629d3b62075a73793f1a7e7393e23e7e2/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint-expand-symbols-header-file.h?ref=c1a66c0629d3b62075a73793f1a7e7393e23e7e2",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+inline static const char*\n+foo (void)\n+{\n+  return \"foo\";\n+}"
    }
  ]
}