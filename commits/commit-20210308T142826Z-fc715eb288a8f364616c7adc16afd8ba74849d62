{
  "sha": "fc715eb288a8f364616c7adc16afd8ba74849d62",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmM3MTVlYjI4OGE4ZjM2NDYxNmM3YWRjMTZhZmQ4YmE3NDg0OWQ2Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:26Z"
    },
    "message": "Introduce ada_ternop_range_operation\n\nThis adds class ada_ternop_range_operation, which implements\nTERNOP_IN_RANGE.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_ternop_range_operation::evaluate): New method.\n\t* ada-exp.h (class ada_ternop_range_operation): New.",
    "tree": {
      "sha": "a4fbc6640000e82c3e63d66ccb712480d9d1ef48",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a4fbc6640000e82c3e63d66ccb712480d9d1ef48"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc715eb288a8f364616c7adc16afd8ba74849d62",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc715eb288a8f364616c7adc16afd8ba74849d62",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc715eb288a8f364616c7adc16afd8ba74849d62",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc715eb288a8f364616c7adc16afd8ba74849d62/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cc6bd32eeac6b31b036a172b6841d699e05b285f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc6bd32eeac6b31b036a172b6841d699e05b285f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cc6bd32eeac6b31b036a172b6841d699e05b285f"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 32,
    "deletions": 0
  },
  "files": [
    {
      "sha": "83482307934f78a3ef054e5b0745abc279a2dc73",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc715eb288a8f364616c7adc16afd8ba74849d62/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc715eb288a8f364616c7adc16afd8ba74849d62/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fc715eb288a8f364616c7adc16afd8ba74849d62",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_ternop_range_operation::evaluate): New method.\n+\t* ada-exp.h (class ada_ternop_range_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_qual_operation::evaluate): New method."
    },
    {
      "sha": "17a04ea15c641b2060a8e4ecc3bbead38d730532",
      "filename": "gdb/ada-exp.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc715eb288a8f364616c7adc16afd8ba74849d62/gdb/ada-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc715eb288a8f364616c7adc16afd8ba74849d62/gdb/ada-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.h?ref=fc715eb288a8f364616c7adc16afd8ba74849d62",
      "patch": "@@ -71,6 +71,22 @@ class ada_qual_operation\n   { return UNOP_QUAL; }\n };\n \n+/* Ternary in-range operator.  */\n+class ada_ternop_range_operation\n+  : public tuple_holding_operation<operation_up, operation_up, operation_up>\n+{\n+public:\n+\n+  using tuple_holding_operation::tuple_holding_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override;\n+\n+  enum exp_opcode opcode () const override\n+  { return TERNOP_IN_RANGE; }\n+};\n+\n } /* namespace expr */\n \n #endif /* ADA_EXP_H */"
    },
    {
      "sha": "dd884668dc4ffad30604c72bf36dbfa43d8da8c4",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc715eb288a8f364616c7adc16afd8ba74849d62/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc715eb288a8f364616c7adc16afd8ba74849d62/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=fc715eb288a8f364616c7adc16afd8ba74849d62",
      "patch": "@@ -10436,6 +10436,17 @@ ada_qual_operation::evaluate (struct type *expect_type,\n   return std::get<0> (m_storage)->evaluate (type, exp, noside);\n }\n \n+value *\n+ada_ternop_range_operation::evaluate (struct type *expect_type,\n+\t\t\t\t      struct expression *exp,\n+\t\t\t\t      enum noside noside)\n+{\n+  value *arg0 = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+  value *arg1 = std::get<1> (m_storage)->evaluate (nullptr, exp, noside);\n+  value *arg2 = std::get<2> (m_storage)->evaluate (nullptr, exp, noside);\n+  return eval_ternop_in_range (expect_type, exp, noside, arg0, arg1, arg2);\n+}\n+\n }\n \n /* Implement the evaluate_exp routine in the exp_descriptor structure"
    }
  ]
}