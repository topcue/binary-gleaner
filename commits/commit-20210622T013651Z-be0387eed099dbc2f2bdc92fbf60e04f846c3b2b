{
  "sha": "be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmUwMzg3ZWVkMDk5ZGJjMmYyYmRjOTJmYmY2MGUwNGY4NDZjM2IyYg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-19T23:36:39Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-22T01:36:51Z"
    },
    "message": "sim: hw: rework configure option & device selection\n\nThe sim-hardware configure option allows builders to select a set of\ndevice models to enable.  But this seems like unnecessary overkill:\nthe existence of individual device models doesn't affect performance\nat all as they are only enabled at runtime if the config uses them,\nand individually these are all <5KB a piece.  Stripping off a total\nof ~50KB from a ~1MB binary doesn't seem useful, and it's extremely\nunlikely anyone will ever bother.\n\nSo let's simplify the configure/make logic by turning sim-hardware\ninto a boolean option like many of the other sim options.  Any ports\nthat have unique device models will declare them in their Makefile\ninstead of at configure time.  This will allow us to (eventually)\nunify the setting into the common dir.",
    "tree": {
      "sha": "a61ac0be186cfe159401b1c96892f8554b07c5af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a61ac0be186cfe159401b1c96892f8554b07c5af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b4ee29a4450a88a64d99db0e49bac2e8670e086b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4ee29a4450a88a64d99db0e49bac2e8670e086b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b4ee29a4450a88a64d99db0e49bac2e8670e086b"
    }
  ],
  "stats": {
    "total": 2376,
    "additions": 1052,
    "deletions": 1324
  },
  "files": [
    {
      "sha": "bdc0ad86b34e33fa8ed16588951b37a54f737920",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* README-HACKING: Change SIM_AC_OPTION_HARDWARE to\n+\tSIM_EXTRA_HW_DEVICES.\n+\t* m4/sim_ac_option_hardware.m4: Remove first argument, and change\n+\tconfigure option to a boolean.  Delete device list.\n+\t* m4/sim_ac_output.m4: Delete sim_hw variables.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* README-HACKING (SIM_AC_COMMON): Delete mention."
    },
    {
      "sha": "9bb705e655eb6cf37d756304771cc04ecc8dc5ce",
      "filename": "sim/README-HACKING",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/README-HACKING",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/README-HACKING",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/README-HACKING?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -387,8 +387,8 @@ Hardware Devices\n ================\n \n The simplest simulator doesn't include hardware device support.  Once you're\n-ready to move on to the next level, call the common macro in your configure.ac:\n-SIM_AC_OPTION_HARDWARE(devone devtwo devthree)\n+ready to move on to the next level, declare in your Makefile.in:\n+SIM_EXTRA_HW_DEVICES = devone devtwo devthree\n \n The basic hardware API is documented in common/hw-device.h.\n "
    },
    {
      "sha": "139e3e55fefd6c13a704e34bab4668602305d415",
      "filename": "sim/aarch64/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/aarch64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/aarch64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/aarch64/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/aarch64/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/aarch64/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "9abf46133b2eeca7bc17719ebb30d728b913f142",
      "filename": "sim/arm/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/arm/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/arm/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/arm/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/arm/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/arm/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "9a7ed8516f7d4e898915edae6f32a4545a6436ef",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/avr/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/avr/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/avr/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "7c34a4f50c2583e7f9566b04cfbf94e07c69a5ba",
      "filename": "sim/bfin/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_EXTRA_HW_DEVICES): Define.\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "57b9b5eb06258b9399b515ac9bf216421e39dbd1",
      "filename": "sim/bfin/Makefile.in",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/Makefile.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -26,6 +26,39 @@ SIM_OBJS = \\\n \tmachs.o \\\n \tsim-resume.o\n \n+SIM_EXTRA_HW_DEVICES = \\\n+\tbfin_cec \\\n+\tbfin_ctimer \\\n+\tbfin_dma \\\n+\tbfin_dmac \\\n+\tbfin_ebiu_amc \\\n+\tbfin_ebiu_ddrc \\\n+\tbfin_ebiu_sdc \\\n+\tbfin_emac \\\n+\tbfin_eppi \\\n+\tbfin_evt \\\n+\tbfin_gpio \\\n+\tbfin_gpio2 \\\n+\tbfin_gptimer \\\n+\tbfin_jtag \\\n+\tbfin_mmu \\\n+\tbfin_nfc \\\n+\tbfin_otp \\\n+\tbfin_pfmon \\\n+\tbfin_pint \\\n+\tbfin_pll \\\n+\tbfin_ppi \\\n+\tbfin_rtc \\\n+\tbfin_sic \\\n+\tbfin_spi \\\n+\tbfin_trace \\\n+\tbfin_twi \\\n+\tbfin_uart \\\n+\tbfin_uart2 \\\n+\tbfin_wdog \\\n+\tbfin_wp \\\n+\teth_phy\n+\n SIM_EXTRA_CFLAGS = @SDL_CFLAGS@\n SIM_EXTRA_LIBS = @SDL_LIBS@ -lm\n "
    },
    {
      "sha": "a8a383a868b1ffb5100cf7cd324ff62053c1193a",
      "filename": "sim/bfin/configure",
      "status": "modified",
      "additions": 46,
      "deletions": 90,
      "changes": 136,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -589,6 +589,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n OBJEXT\n EXEEXT\n ac_ct_CC\n@@ -639,9 +643,6 @@ PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -1271,8 +1272,7 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Some influential environment variables:\n   PKG_CONFIG  path to pkg-config utility\n@@ -1824,88 +1824,6 @@ fi\n \n \n \n-hardware=\"cfi core pal glue \\\n-\tbfin_cec \\\n-\tbfin_ctimer \\\n-\tbfin_dma \\\n-\tbfin_dmac \\\n-\tbfin_ebiu_amc \\\n-\tbfin_ebiu_ddrc \\\n-\tbfin_ebiu_sdc \\\n-\tbfin_emac \\\n-\tbfin_eppi \\\n-\tbfin_evt \\\n-\tbfin_gpio \\\n-\tbfin_gpio2 \\\n-\tbfin_gptimer \\\n-\tbfin_jtag \\\n-\tbfin_mmu \\\n-\tbfin_nfc \\\n-\tbfin_otp \\\n-\tbfin_pfmon \\\n-\tbfin_pint \\\n-\tbfin_pll \\\n-\tbfin_ppi \\\n-\tbfin_rtc \\\n-\tbfin_sic \\\n-\tbfin_spi \\\n-\tbfin_trace \\\n-\tbfin_twi \\\n-\tbfin_uart \\\n-\tbfin_uart2 \\\n-\tbfin_wdog \\\n-\tbfin_wp \\\n-\teth_phy \\\n-\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n-# Check whether --enable-sim-hardware was given.\n-if test \"${enable_sim_hardware+set}\" = set; then :\n-  enableval=$enable_sim_hardware;\n-else\n-  enable_sim_hardware=\"yes\"\n-fi\n-\n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n-if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n-  sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n-  sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n-  # mingw does not support sockser\n-  case ${host} in\n-    *mingw*) ;;\n-    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n-       # that you instatiate.  Instead, other code will call into it directly.\n-       # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n-       sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n-       ;;\n-  esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n-fi\n-\n-\n \n \n \n@@ -2960,6 +2878,47 @@ fi\n \n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+sim_hw_sockser=\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+elif test \"$enable_sim_hardware\" = yes; then\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_sockser=\"dv-sockser.o\"\n+       sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n+       ;;\n+  esac\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n \n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n@@ -2983,9 +2942,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "ab3bd5b0b99d1a6caded27cb220eb8bf8272b3d8",
      "filename": "sim/bfin/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bfin/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/configure.ac?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -3,39 +3,6 @@ AC_INIT(Makefile.in)\n AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_OPTION_DEFAULT_MODEL(bf537)\n-SIM_AC_OPTION_HARDWARE(\\\n-\tbfin_cec \\\n-\tbfin_ctimer \\\n-\tbfin_dma \\\n-\tbfin_dmac \\\n-\tbfin_ebiu_amc \\\n-\tbfin_ebiu_ddrc \\\n-\tbfin_ebiu_sdc \\\n-\tbfin_emac \\\n-\tbfin_eppi \\\n-\tbfin_evt \\\n-\tbfin_gpio \\\n-\tbfin_gpio2 \\\n-\tbfin_gptimer \\\n-\tbfin_jtag \\\n-\tbfin_mmu \\\n-\tbfin_nfc \\\n-\tbfin_otp \\\n-\tbfin_pfmon \\\n-\tbfin_pint \\\n-\tbfin_pll \\\n-\tbfin_ppi \\\n-\tbfin_rtc \\\n-\tbfin_sic \\\n-\tbfin_spi \\\n-\tbfin_trace \\\n-\tbfin_twi \\\n-\tbfin_uart \\\n-\tbfin_uart2 \\\n-\tbfin_wdog \\\n-\tbfin_wp \\\n-\teth_phy \\\n-)\n \n PKG_PROG_PKG_CONFIG\n PKG_CHECK_MODULES(SDL, sdl, ["
    },
    {
      "sha": "d4b61cab2316f3f3032c18039d494c665832a038",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "d6cbb9d8aa1600ea877f0a34d585820bca4443e3",
      "filename": "sim/bpf/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 37,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bpf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/bpf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -587,6 +587,10 @@ LIBOBJS\n sim_reserved_bits\n sim_float\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -626,9 +630,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_scache\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_bitsize'\n ac_subst_files=''\n@@ -1254,8 +1255,7 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1782,57 +1782,48 @@ fi\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";\n@@ -1855,9 +1846,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "02540a047db78345efeecf1ef4f07561a6e70cab",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Make-common.in (SIM_HW): Delete.\n+\t(SIM_HW_OBJS): Redefine.\n+\t(SIM_HW_SOCKSER, SIM_HW_DEVICES): Define.\n+\t(stamp-hw): Change SIM_HW to SIM_HW_DEVICES.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Make-common.in (CGENDIR): Delete."
    },
    {
      "sha": "6d7c9c47b64ab60217d9ce4de6216de5b6afb3ba",
      "filename": "sim/common/Make-common.in",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/common/Make-common.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/common/Make-common.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Make-common.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -73,8 +73,7 @@ SIM_BITSIZE = @sim_bitsize@\n SIM_DEFAULT_MODEL = @sim_default_model@\n SIM_FLOAT = @sim_float@\n SIM_HW_CFLAGS = @sim_hw_cflags@\n-SIM_HW_OBJS = @sim_hw_objs@\n-SIM_HW = @sim_hw@\n+SIM_HW_SOCKSER = @sim_hw_sockser@\n SIM_RESERVED_BITS = @sim_reserved_bits@\n SIM_SCACHE = @sim_scache@\n SIM_WARN_CFLAGS = $(WARN_CFLAGS)\n@@ -216,6 +215,10 @@ BUILD_CFLAGS = $(CFLAGS_FOR_BUILD) $(CSEARCH)\n \n COMMON_DEP_CFLAGS = $(CONFIG_CFLAGS) $(CSEARCH) $(SIM_EXTRA_CFLAGS)\n \n+SIM_HW_DEVICES = cfi core pal glue $(SIM_EXTRA_HW_DEVICES)\n+SIM_HW_OBJS = $(SIM_COMMON_HW_OBJS) $(SIM_HW_DEVICES:%=dv-%.o) $(SIM_HW_SOCKSER)\n+@SIM_ENABLE_HW_FALSE@SIM_HW_OBJS =\n+\n ZLIB = $(zlibdir) -lz\n LIBIBERTY_LIB = ../../libiberty/libiberty.a\n BFD_LIB = ../../bfd/libbfd.a\n@@ -417,12 +420,12 @@ hw-config.h: stamp-hw ; @true\n stamp-hw: Makefile.in $(srccom)/Make-common.in config.status Makefile\n \trm -f tmp-hw.h\n \techo \"/* generated by Makefile */\" > tmp-hw.h\n-\tsim_hw=\"$(SIM_HW)\"; \\\n+\tsim_hw=\"$(SIM_HW_DEVICES)\"; \\\n \tfor hw in $$sim_hw ; do \\\n \t  echo \"extern const struct hw_descriptor dv_$${hw}_descriptor[];\" ; \\\n \tdone >> tmp-hw.h\n \techo \"const struct hw_descriptor *hw_descriptors[] = {\" >> tmp-hw.h\n-\tsim_hw=\"$(SIM_HW)\"; \\\n+\tsim_hw=\"$(SIM_HW_DEVICES)\"; \\\n \tfor hw in $$sim_hw ; do \\\n \t  echo \"  dv_$${hw}_descriptor,\" ; \\\n \tdone >> tmp-hw.h"
    },
    {
      "sha": "dd2215a802be3095909e347dc86c3dce7bf7c1de",
      "filename": "sim/cr16/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cr16/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cr16/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/cr16/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cr16/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cr16/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "d570ba9ea35e779ca3c237816546d182936f16c9",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_EXTRA_HW_DEVICES): Define.\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* traps.c (dump_statistics): Clean up sim_io_eprintf calls, and"
    },
    {
      "sha": "dfc6d6c5ac409a4def29ad3aa57a20adc32529ef",
      "filename": "sim/cris/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/Makefile.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -31,6 +31,8 @@ SIM_OBJS = \\\n \t$(CRISV32F_OBJS) \\\n \ttraps.o\n \n+SIM_EXTRA_HW_DEVICES = rv cris cris_900000xx\n+\n # Extra headers included by sim-main.h.\n # FIXME: $(srccom)/cgen-ops.h should be in CGEN_INCLUDE_DEPS.\n SIM_EXTRA_DEPS = \\"
    },
    {
      "sha": "89a7beec379c7b013f9b1ef4b6b6fb675e1ddac5",
      "filename": "sim/cris/configure",
      "status": "modified",
      "additions": 39,
      "deletions": 51,
      "changes": 90,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_reserved_bits\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,16 +631,13 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_scache\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n enable_sim_scache\n-enable_sim_hardware\n enable_sim_default_model\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1250,10 +1251,9 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1705,73 +1705,64 @@ fi\n \n \n \n-hardware=\"cfi core pal glue rv cris cris_900000xx\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+# The default model shouldn't matter as long as there's a BFD.\n+\n+default_sim_default_model=\"crisv32\"\n+# Check whether --enable-sim-default-model was given.\n+if test \"${enable_sim_default_model+set}\" = set; then :\n+  enableval=$enable_sim_default_model; case \"${enableval}\" in\n+  yes|no) as_fn_error $? \"\\\"Missing argument to --enable-sim-default-model\\\"\" \"$LINENO\" 5;;\n+  *)\tsim_default_model=\"-DWITH_DEFAULT_MODEL='\\\"${enableval}\\\"'\";;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$sim_default_model\" != x\"\"; then\n+  echo \"Setting default model = $sim_default_model\" 6>&1\n+fi\n+else\n+  sim_default_model=\"-DWITH_DEFAULT_MODEL='\\\"${default_sim_default_model}\\\"'\"\n+fi\n+\n+\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n-fi\n-\n-\n-# The default model shouldn't matter as long as there's a BFD.\n-\n-default_sim_default_model=\"crisv32\"\n-# Check whether --enable-sim-default-model was given.\n-if test \"${enable_sim_default_model+set}\" = set; then :\n-  enableval=$enable_sim_default_model; case \"${enableval}\" in\n-  yes|no) as_fn_error $? \"\\\"Missing argument to --enable-sim-default-model\\\"\" \"$LINENO\" 5;;\n-  *)\tsim_default_model=\"-DWITH_DEFAULT_MODEL='\\\"${enableval}\\\"'\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_default_model\" != x\"\"; then\n-  echo \"Setting default model = $sim_default_model\" 6>&1\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n else\n-  sim_default_model=\"-DWITH_DEFAULT_MODEL='\\\"${default_sim_default_model}\\\"'\"\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1796,9 +1787,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "57a2d5fe3d7aaea220d3bf53ab0806b6129ed85e",
      "filename": "sim/cris/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/cris/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/configure.ac?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -3,7 +3,6 @@ AC_INIT(Makefile.in)\n AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_OPTION_SCACHE(16384)\n-SIM_AC_OPTION_HARDWARE(rv cris cris_900000xx)\n \n # The default model shouldn't matter as long as there's a BFD.\n SIM_AC_OPTION_DEFAULT_MODEL(crisv32)"
    },
    {
      "sha": "4aa76081ab232ac4e89772a5f693189996954573",
      "filename": "sim/d10v/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/d10v/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/d10v/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/d10v/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/d10v/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/d10v/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "75446a9857052f26a93cdfc6314ff824e66912ec",
      "filename": "sim/erc32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/erc32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/erc32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "474a7826a120a53860c17a3988a06552bb06d6c2",
      "filename": "sim/erc32/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/erc32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/erc32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -591,6 +591,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n READLINE_CFLAGS\n READLINE\n TERMCAP\n@@ -641,10 +645,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1266,8 +1267,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -3032,55 +3032,46 @@ fi\n fi\n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -3105,9 +3096,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "ed8ddc3b07405598540e942f9a1e84ac1733f923",
      "filename": "sim/example-synacor/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/example-synacor/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/example-synacor/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/example-synacor/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/example-synacor/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/example-synacor/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "6bdcc60b034656dec110d400492678dcead846c1",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "922b9371db2ecbe5a891fd244e92510e558b0b93",
      "filename": "sim/frv/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 37,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/frv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/frv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_reserved_bits\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n sim_trapdump\n target_alias\n host_alias\n@@ -628,9 +632,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_scache\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -1255,8 +1256,7 @@ Optional Features:\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n   --enable-sim-trapdump   Make unknown traps dump the registers\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1742,57 +1742,48 @@ else\n fi\n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";\n@@ -1815,9 +1806,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "c8a4629beca21b55593ef2ffcce0d2cd3e0e9170",
      "filename": "sim/ft32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/ft32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/ft32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/ft32/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/ft32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/ft32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "94b6f3b05512ab7259084c1e891f46f128169092",
      "filename": "sim/h8300/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/h8300/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/h8300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/h8300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "d54be42edd1da055f0a240fdefb32fa92d86cf68",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "72799cef8348857ba15ce55158e1332382a3ed06",
      "filename": "sim/iq2000/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 37,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/iq2000/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/iq2000/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_reserved_bits\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,9 +631,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_scache\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -1252,8 +1253,7 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1721,57 +1721,48 @@ fi\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";\n@@ -1794,9 +1785,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "00da0a93f66404805fc6a78ee4e6d9d4a58163d5",
      "filename": "sim/lm32/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_EXTRA_HW_DEVICES): Define.\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "bac9861ec53b161cfa6158157c3f96633d803ccc",
      "filename": "sim/lm32/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/Makefile.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -12,6 +12,8 @@ SIM_OBJS = \\\n         cpu.o decode.o sem.o model.o mloop.o \\\n         lm32.o traps.o user.o \n \n+SIM_EXTRA_HW_DEVICES = lm32cpu lm32timer lm32uart\n+\n # List of extra dependencies.\n # Generally this consists of simulator specific files included by sim-main.h.\n SIM_EXTRA_DEPS = $(CGEN_INCLUDE_DEPS) $(srcdir)/../../opcodes/lm32-desc.h \\"
    },
    {
      "sha": "7a2d07c3edf19af2f539e0a92c26c5578966fe16",
      "filename": "sim/lm32/configure",
      "status": "modified",
      "additions": 24,
      "deletions": 36,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_reserved_bits\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,9 +631,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_scache\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -1252,8 +1253,7 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1721,56 +1721,47 @@ fi\n \n \n \n-hardware=\"cfi core pal glue lm32cpu lm32timer lm32uart\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n \n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n@@ -1794,9 +1785,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "96b6f0e98e25f6ea53bdaeff04656c762469e9e9",
      "filename": "sim/lm32/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/lm32/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure.ac?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -4,6 +4,5 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(lm32)\n-SIM_AC_OPTION_HARDWARE(lm32cpu lm32timer lm32uart)\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "428c348d2499056a6eddd5d86254f41858b2f5f9",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/m32c/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32c/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32c/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "87d6a428353af2f53f1b6bc47c91a8c3c83aa5cc",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_EXTRA_HW_DEVICES): Define.\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "eb9641ee8e679f5da3a22e2a0b7ff8a2d894fec8",
      "filename": "sim/m32r/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/Makefile.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -34,6 +34,8 @@ SIM_OBJS = \\\n \t$(M32R2_OBJS) \\\n \t$(TRAPS_OBJ)\n \n+SIM_EXTRA_HW_DEVICES = m32r_cache m32r_uart\n+\n # Extra headers included by sim-main.h.\n SIM_EXTRA_DEPS = \\\n \t$(CGEN_INCLUDE_DEPS) \\"
    },
    {
      "sha": "b115b957da8792de6b9036b8cf12f38bb0c77b36",
      "filename": "sim/m32r/configure",
      "status": "modified",
      "additions": 24,
      "deletions": 37,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_reserved_bits\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n sim_extra_cflags\n traps_obj\n target_alias\n@@ -629,9 +633,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_scache\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -1254,8 +1255,7 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1736,57 +1736,47 @@ fi\n \n \n \n-\n-hardware=\"cfi core pal glue m32r_cache m32r_uart\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n \n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n@@ -1810,9 +1800,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "f98adb26c46d945c5d1eba09a3e35d2127aa1df3",
      "filename": "sim/m32r/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m32r/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure.ac?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -18,6 +18,4 @@ SIM_AC_OPTION_DEFAULT_MODEL(m32r/d)\n AC_SUBST(traps_obj)\n AC_SUBST(sim_extra_cflags)\n \n-SIM_AC_OPTION_HARDWARE(m32r_cache m32r_uart)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "14101830e828517ea2e450f268527d5b30042242",
      "filename": "sim/m4/sim_ac_option_hardware.m4",
      "status": "modified",
      "additions": 22,
      "deletions": 35,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m4/sim_ac_option_hardware.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m4/sim_ac_option_hardware.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m4/sim_ac_option_hardware.m4?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -14,55 +14,42 @@ dnl You should have received a copy of the GNU General Public License\n dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.\n dnl\n dnl --enable-sim-hardware is for users of the simulator\n-dnl arg[1] is a space separated list of extra target specific devices.\n AC_DEFUN([SIM_AC_OPTION_HARDWARE],\n-[\n-hardware=\"cfi core pal glue [$1]\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([[^ ]][[^ ]]*\\)/dv-\\1.o/g'`\"\n-\n+[dnl\n+AC_MSG_CHECKING([for sim hardware settings])\n AC_ARG_ENABLE(sim-hardware,\n-  [AS_HELP_STRING([--enable-sim-hardware=LIST],\n-                  [Specify the hardware to be included in the build.])],\n+  [AS_HELP_STRING([--enable-sim-hardware],\n+\t\t  [Whether to enable hardware/device simulation])],\n   ,[enable_sim_hardware=\"yes\"])\n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  AC_MSG_ERROR([unknown argument \"$enable_sim_hardware\"])\n fi\n-])\n+dnl AM_CONDITIONAL([SIM_ENABLE_HW], [test \"$enable_sim_hardware\" = \"yes\"])\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+AC_SUBST(SIM_ENABLE_HW_TRUE)\n+AC_SUBST(SIM_ENABLE_HW_FALSE)\n+AC_MSG_RESULT(${enable_sim_hardware})\n AC_SUBST(sim_hw_cflags)\n-AC_SUBST(sim_hw_objs)\n-AC_SUBST(sim_hw)\n+AC_SUBST(sim_hw_sockser)\n+])"
    },
    {
      "sha": "8d260421e0e9434847e4d9896371dc99aea1840a",
      "filename": "sim/m4/sim_ac_output.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m4/sim_ac_output.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m4/sim_ac_output.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m4/sim_ac_output.m4?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -51,9 +51,6 @@ AC_SUBST(sim_bitsize)\n AC_SUBST(sim_float)\n AC_SUBST(sim_scache)\n AC_SUBST(sim_default_model)\n-AC_SUBST(sim_hw_cflags)\n-AC_SUBST(sim_hw_objs)\n-AC_SUBST(sim_hw)\n AC_SUBST(sim_reserved_bits)\n \n AC_OUTPUT"
    },
    {
      "sha": "ea7373a0be1686a76406def3eb4e5821dfeb951f",
      "filename": "sim/m68hc11/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_EXTRA_HW_DEVICES): Define.\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "e7b66864855855fb3dc82bb6b82fd5b16c2a5edb",
      "filename": "sim/m68hc11/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/Makefile.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -24,6 +24,8 @@ SIM_OBJS = $(M68HC11_OBJS) \\\n \t$(SIM_NEW_COMMON_OBJS) \\\n \tsim-resume.o\n \n+SIM_EXTRA_HW_DEVICES = m68hc11 m68hc11sio m68hc11eepr m68hc11tim m68hc11spi nvram\n+\n SIM_PROFILE= -DPROFILE=1 -DWITH_PROFILE=-1\n # We must use 32-bit addresses to support memory bank switching.\n # The WORD_BITSIZE is normally 16 but must be switched (temporarily)"
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/m68hc11/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 39,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,56 +1679,45 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \\\n-  m68hc11 m68hc11sio m68hc11eepr m68hc11tim m68hc11spi nvram\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n \n \n \n@@ -1754,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "99370b3a5770e6ce8dc83f6ca797c74d008978a7",
      "filename": "sim/m68hc11/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/m68hc11/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure.ac?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -2,8 +2,4 @@ dnl Process this file with autoconf to produce a configure script.\n AC_INIT(Makefile.in)\n AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n-dnl Options available in this module\n-SIM_AC_OPTION_HARDWARE(\\\n-  m68hc11 m68hc11sio m68hc11eepr m68hc11tim m68hc11spi nvram)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "f2a862efe0d07af464282be0e20c4d93780fa821",
      "filename": "sim/mcore/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mcore/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mcore/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/mcore/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mcore/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mcore/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "d2abcb6a7736ec44cbaddf513e1703ad8139668f",
      "filename": "sim/microblaze/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/microblaze/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/microblaze/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/microblaze/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/microblaze/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/microblaze/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "168ea0a615d5bf9efeb70e96c4869fbb7a94e456",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_EXTRA_HW_DEVICES): Define.\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "c04736ba0802358f4d50ca14f7554a27f4cab6a6",
      "filename": "sim/mips/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/Makefile.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -69,6 +69,7 @@ SIM_OBJS = \\\n \tsim-main.o \\\n \tsim-resume.o \\\n \n+SIM_EXTRA_HW_DEVICES = tx3904cpu tx3904irc tx3904tmr tx3904sio\n \n # List of flags to always pass to $(CC).\n SIM_SUBTARGET=@SIM_SUBTARGET@"
    },
    {
      "sha": "98ad8d5023ceb790ab1da2e7caaf9a13ea16b75a",
      "filename": "sim/mips/configure",
      "status": "modified",
      "additions": 24,
      "deletions": 39,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -587,6 +587,10 @@ LIBOBJS\n sim_default_model\n sim_scache\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n sim_multi_obj\n sim_multi_src\n sim_multi_igen_configs\n@@ -636,9 +640,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_float\n sim_bitsize'\n ac_subst_files=''\n@@ -1265,8 +1266,7 @@ Optional Features:\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n   --enable-sim-float      Specify that the target processor has floating point\n                           hardware\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -2194,58 +2194,46 @@ sim_micromips_flags=\" -F ${sim_micromips_filter}  ${sim_micromips_machine}  ${si\n \n \n \n-#\n-# Add simulated hardware devices\n-#\n-\n-hardware=\"cfi core pal glue tx3904cpu tx3904irc tx3904tmr tx3904sio\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n \n \n \n@@ -2271,9 +2259,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "e3a44a0055fa2ebe53ef007fde779ed8688bcfc3",
      "filename": "sim/mips/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mips/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/configure.ac?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -400,9 +400,5 @@ AC_SUBST(sim_multi_flags)\n AC_SUBST(sim_multi_igen_configs)\n AC_SUBST(sim_multi_src)\n AC_SUBST(sim_multi_obj)\n-#\n-# Add simulated hardware devices\n-#\n-SIM_AC_OPTION_HARDWARE(tx3904cpu tx3904irc tx3904tmr tx3904sio)\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "99d7a1c3962be17b6ce2cf6db4a62c4f09ec3f44",
      "filename": "sim/mn10300/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (SIM_EXTRA_HW_DEVICES): Define.\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "968378cafe621b04dbb42b99a4dd495906a13e06",
      "filename": "sim/mn10300/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/Makefile.in?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -25,6 +25,8 @@ MN10300_OBJS = \\\n \n SIM_OBJS = $(MN10300_OBJS) interp.o\n \n+SIM_EXTRA_HW_DEVICES = mn103cpu mn103int mn103tim mn103ser mn103iop\n+\n SIM_EXTRA_CLEAN = clean-igen\n # Extra dependencies for \"sim-main.h\"\n SIM_EXTRA_DEPS = mn10300_sim.h itable.h idecode.h"
    },
    {
      "sha": "126b69a94292221d1b6b48ca9d7974d81071ea02",
      "filename": "sim/mn10300/configure",
      "status": "modified",
      "additions": 24,
      "deletions": 36,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_default_model\n sim_scache\n sim_float\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,9 +631,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_bitsize'\n ac_subst_files=''\n ac_user_opts='\n@@ -1252,8 +1253,7 @@ Optional Features:\n                           Specify whether to check reserved bits in\n                           instruction\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1761,56 +1761,47 @@ fi\n fi\n \n \n-hardware=\"cfi core pal glue mn103cpu mn103int mn103tim mn103ser mn103iop\"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n \n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n@@ -1834,9 +1825,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "74eb1fa54685fd6ab519a7fa0f7df626558a3b40",
      "filename": "sim/mn10300/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/mn10300/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/configure.ac?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -4,6 +4,5 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_OPTION_RESERVED_BITS\n SIM_AC_OPTION_BITSIZE(32,31)\n-SIM_AC_OPTION_HARDWARE(mn103cpu mn103int mn103tim mn103ser mn103iop)\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "2b1dcca000b79ed96fb3a1bb7e7249a9f4063c67",
      "filename": "sim/moxie/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/moxie/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/moxie/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/moxie/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/moxie/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/moxie/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "d2d4cf4196a10d0ad165dc845794bf510ff94964",
      "filename": "sim/msp430/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/msp430/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/msp430/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/msp430/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/msp430/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/msp430/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "be72b42533e109e61580cd735deee052cee925bc",
      "filename": "sim/or1k/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "270eaaf11da8beb6161647f91c6c8b3dc45be70f",
      "filename": "sim/or1k/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 37,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/or1k/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/or1k/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -587,6 +587,10 @@ LIBOBJS\n sim_reserved_bits\n sim_float\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -626,9 +630,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_scache\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_bitsize'\n ac_subst_files=''\n@@ -1254,8 +1255,7 @@ Optional Features:\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1782,57 +1782,48 @@ fi\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";\n@@ -1855,9 +1846,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "38f482d3a2770c9e5c90e116d53218c5a7f0646a",
      "filename": "sim/pru/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/pru/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/pru/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/pru/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/pru/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/pru/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "f7a44947528f3e13b971e5e97f72efbb60bdb20a",
      "filename": "sim/riscv/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/riscv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/riscv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "c491d1e3b235b862d711dd794f6d7114c890520f",
      "filename": "sim/riscv/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 37,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/riscv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/riscv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_reserved_bits\n sim_scache\n sim_float\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -626,9 +630,6 @@ PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_bitsize'\n ac_subst_files=''\n@@ -1251,8 +1252,7 @@ Optional Features:\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1773,57 +1773,48 @@ fi\n fi\n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";\n@@ -1846,9 +1837,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "8f3a97d964382d81c384feef2c72f23b29a87741",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/rl78/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rl78/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rl78/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "f6f20263b544eb6052302198ae9e0e5bee7195e6",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in: Rename sim_cycle_accurate_flags to"
    },
    {
      "sha": "5b342b2d9925b4886797f3f3dab0dfbd48d069b7",
      "filename": "sim/rx/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rx/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/rx/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n sim_rx_cycle_accurate_flags\n target_alias\n host_alias\n@@ -628,10 +632,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1250,8 +1251,7 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --disable-sim-rx-cycle-accurate\n                           Disable cycle accurate simulation (faster runtime)\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1703,55 +1703,46 @@ $as_echo \"no\" >&6; }\n fi\n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1776,9 +1767,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "a2b7ff1ccd12cc9205ebd671dae386d32b45f8e5",
      "filename": "sim/sh/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/sh/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/sh/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "f3b1467d7568788604d75eba2ee4900a91c51345",
      "filename": "sim/sh/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 38,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/sh/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/sh/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -590,6 +590,10 @@ sim_scache\n sim_float\n sim_bitsize\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,10 +631,7 @@ PACKAGE_VERSION\n PACKAGE_TARNAME\n PACKAGE_NAME\n PATH_SEPARATOR\n-SHELL\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags'\n+SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -1246,8 +1247,7 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1679,55 +1679,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n \n \n cgen_breaks=\"\"\n@@ -1752,9 +1743,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "41badac47f7892b261b1b963e08d6f3fd5a82705",
      "filename": "sim/v850/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/v850/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/v850/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-21  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_COMMON): Delete."
    },
    {
      "sha": "126b69a94292221d1b6b48ca9d7974d81071ea02",
      "filename": "sim/v850/configure",
      "status": "modified",
      "additions": 25,
      "deletions": 37,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/v850/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be0387eed099dbc2f2bdc92fbf60e04f846c3b2b/sim/v850/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure?ref=be0387eed099dbc2f2bdc92fbf60e04f846c3b2b",
      "patch": "@@ -588,6 +588,10 @@ sim_default_model\n sim_scache\n sim_float\n cgen_breaks\n+sim_hw_sockser\n+sim_hw_cflags\n+SIM_ENABLE_HW_FALSE\n+SIM_ENABLE_HW_TRUE\n target_alias\n host_alias\n build_alias\n@@ -627,9 +631,6 @@ PACKAGE_NAME\n PATH_SEPARATOR\n SHELL\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_bitsize'\n ac_subst_files=''\n ac_user_opts='\n@@ -1252,8 +1253,7 @@ Optional Features:\n                           Specify whether to check reserved bits in\n                           instruction\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n+  --enable-sim-hardware   Whether to enable hardware/device simulation\n \n Report bugs to the package provider.\n _ACEOF\n@@ -1761,57 +1761,48 @@ fi\n fi\n \n \n-\n-hardware=\"cfi core pal glue \"\n-sim_hw_cflags=\"-DWITH_HW=1\"\n-sim_hw=\"$hardware\"\n-sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n-\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sim hardware settings\" >&5\n+$as_echo_n \"checking for sim hardware settings... \" >&6; }\n # Check whether --enable-sim-hardware was given.\n if test \"${enable_sim_hardware+set}\" = set; then :\n   enableval=$enable_sim_hardware;\n else\n   enable_sim_hardware=\"yes\"\n fi\n \n-case ${enable_sim_hardware} in\n-  yes|no) ;;\n-  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n-  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n-  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n-esac\n-\n+sim_hw_sockser=\n if test \"$enable_sim_hardware\" = no; then\n-  sim_hw_objs=\n   sim_hw_cflags=\"-DWITH_HW=0\"\n-  sim_hw=\n-else\n+elif test \"$enable_sim_hardware\" = yes; then\n   sim_hw_cflags=\"-DWITH_HW=1\"\n-  # remove duplicates\n-  sim_hw=\"\"\n-  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n-  for i in $hardware ; do\n-    case \" $sim_hw \" in\n-      *\" $i \"*) ;;\n-      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n-    esac\n-  done\n   # mingw does not support sockser\n   case ${host} in\n     *mingw*) ;;\n     *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n        # that you instatiate.  Instead, other code will call into it directly.\n        # At some point, we should convert it over.\n-       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+       sim_hw_sockser=\"dv-sockser.o\"\n        sim_hw_cflags=\"$sim_hw_cflags -DHAVE_DV_SOCKSER\"\n        ;;\n   esac\n-  if test x\"$silent\" != x\"yes\"; then\n-    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n-  fi\n+else\n+  as_fn_error $? \"unknown argument \\\"$enable_sim_hardware\\\"\" \"$LINENO\" 5\n+fi\n+if test \"$enable_sim_hardware\" = \"yes\"; then\n+  SIM_ENABLE_HW_TRUE=\n+  SIM_ENABLE_HW_FALSE='#'\n+else\n+  SIM_ENABLE_HW_TRUE='#'\n+  SIM_ENABLE_HW_FALSE=\n fi\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${enable_sim_hardware}\" >&5\n+$as_echo \"${enable_sim_hardware}\" >&6; }\n+\n+\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";\n@@ -1834,9 +1825,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    }
  ]
}