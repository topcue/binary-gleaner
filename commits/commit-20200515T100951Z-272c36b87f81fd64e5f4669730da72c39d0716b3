{
  "sha": "272c36b87f81fd64e5f4669730da72c39d0716b3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjcyYzM2Yjg3ZjgxZmQ2NGU1ZjQ2Njk3MzBkYTcyYzM5ZDA3MTZiMw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-15T10:09:51Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-15T10:09:51Z"
    },
    "message": "Fix global variable collision in gdb.multi/multi-kill.exp\n\nThe new gdb.multi/multi-kill.exp testcase added an 'testpid' array,\nwhich may conflict with other global 'testpid' variables used by other\ntestcases, resulting in:\n\n ...\n ERROR: tcl error sourcing\n /data/gdb_versions/devel/src/gdb/testsuite/gdb.multi/multi-kill.exp.\n ERROR: can't set \"testpid(1)\": variable isn't array\n     while executing\n \"set testpid($num) [get_integer_valueof \"pid\" -1]\"\n\nor\n\n $ runtest gdb.threads/check-libthread-db.exp gdb.multi/multi-kill.exp\n ...\n Running /home/pedro/gdb/binutils-gdb/src/gdb/testsuite/gdb.multi/multi-kill.exp ...\n Running /home/pedro/gdb/binutils-gdb/src/gdb/testsuite/gdb.threads/check-libthread-db.exp ...\n ERROR: tcl error sourcing /home/pedro/gdb/binutils-gdb/src/gdb/testsuite/gdb.threads/check-libthread-db.exp.\n ERROR: can't set \"testpid\": variable is array\n     while executing\n \"set testpid [spawn_id_get_pid $test_spawn_id]\"\n     (\"uplevel\" body line 8)\n\nFix this with a namespace, like gdb.linespec/explicit.exp does.\n\ngdb/testsuite/ChangeLog:\n2020-05-15  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.multi/multi-kill.exp: Wrap in namespace.\n\t(start_inferior): Add TESTPID parameter.  Use it instead of the\n\ttestpid global.\n\t(top level): Define empty TESTPID array, and pass it down to\n\tstart_inferior.",
    "tree": {
      "sha": "fdcdcd8cf990874a51b6fba529efc40a4da3a955",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fdcdcd8cf990874a51b6fba529efc40a4da3a955"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/272c36b87f81fd64e5f4669730da72c39d0716b3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272c36b87f81fd64e5f4669730da72c39d0716b3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/272c36b87f81fd64e5f4669730da72c39d0716b3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272c36b87f81fd64e5f4669730da72c39d0716b3/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "013707794a67269dd34fd8ae6e354e982c547dc0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/013707794a67269dd34fd8ae6e354e982c547dc0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/013707794a67269dd34fd8ae6e354e982c547dc0"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 22,
    "deletions": 5
  },
  "files": [
    {
      "sha": "93ad65b32a297bd88903183c9aa9654eaefce9d2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272c36b87f81fd64e5f4669730da72c39d0716b3/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272c36b87f81fd64e5f4669730da72c39d0716b3/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=272c36b87f81fd64e5f4669730da72c39d0716b3",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-15  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.multi/multi-kill.exp: Wrap in namespace.\n+\t(start_inferior): Add TESTPID parameter.  Use it instead of the\n+\ttestpid global.\n+\t(top level): Define empty TESTPID array, and pass it down to\n+\tstart_inferior.\n+\n 2020-05-14  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.fortran/nested-funcs-2.exp: Use gdb_test_stdio to test inferior"
    },
    {
      "sha": "03bf8449cf87694c0153e2bbb2ff476cccb1e342",
      "filename": "gdb/testsuite/gdb.multi/multi-kill.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 5,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272c36b87f81fd64e5f4669730da72c39d0716b3/gdb/testsuite/gdb.multi/multi-kill.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272c36b87f81fd64e5f4669730da72c39d0716b3/gdb/testsuite/gdb.multi/multi-kill.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/multi-kill.exp?ref=272c36b87f81fd64e5f4669730da72c39d0716b3",
      "patch": "@@ -39,11 +39,15 @@ save_vars { GDBFLAGS } {\n     clean_restart ${binfile}\n }\n \n+# Wrap the entire test in a namespace to avoid contaminating other tests.\n+namespace eval $testfile {\n+\n # Start inferior NUM and record its PID in the TESTPID array.\n \n-proc start_inferior {num} {\n+proc start_inferior {num testpid} {\n     with_test_prefix \"start_inferior $num\" {\n-\tglobal testpid binfile srcfile\n+\tupvar $testpid tpid\n+\tglobal binfile srcfile\n \n \tif {$num != 1} {\n \t    gdb_test \"add-inferior\" \"Added inferior .*\" \\\n@@ -58,8 +62,8 @@ proc start_inferior {num} {\n \tgdb_run_cmd\n \tgdb_test \"\" \".*reakpoint .*, initialized .*${srcfile}.*\" \"run\"\n \n-\tset testpid($num) [get_integer_valueof \"pid\" -1]\n-\tif {$testpid($num) == -1} {\n+\tset tpid($num) [get_integer_valueof \"pid\" -1]\n+\tif {$tpid($num) == -1} {\n \t    return -1\n \t}\n \n@@ -71,8 +75,11 @@ proc start_inferior {num} {\n # is killed while we're handling a killed event.\n set NUM_INFS 10\n \n+# The array holding each inferior's PID, indexed by inferior number.\n+array set testpid {}\n+\n for {set i 1} {$i <= $NUM_INFS} {incr i} {\n-    if {[start_inferior $i] < 0} {\n+    if {[start_inferior $i testpid] < 0} {\n \treturn -1\n     }\n }\n@@ -125,3 +132,5 @@ for {set i 2} {$i <= $NUM_INFS} {incr i} {\n \t    \"continue to SIGKILL\"\n     }\n }\n+\n+}"
    }
  ]
}