{
  "sha": "60df3720d77c8415158f3eaa166e0b7162f9d3b4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjBkZjM3MjBkNzdjODQxNTE1OGYzZWFhMTY2ZTBiNzE2MmY5ZDNiNA==",
  "commit": {
    "author": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-03-25T12:14:37Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-03-25T15:05:53Z"
    },
    "message": "AArch64: Have -D override mapping symbol as documented.\n\nThe documentation for -D says that on Arm platforms -D should disassemble\ndata as instructions.\n\n\"If the target is an ARM architecture this switch also has the effect of\nforcing the disassembler to decode pieces of data found in code sections\nas if they were instructions. \"\n\nThis makes it do as it says on the tincan so it's more consistent with\naarch32.  The usecase here is for baremetal developers who have created\ntheir instructions using .word directives instead if .insn.\n\nThough for Linux users I do find this behavior somewhat non-optimal.\nPerhaps there should be a new flag that just disassembles the values\nfollowing the actual mapping symbol?\n\nbinutils/ChangeLog:\n\n\t* testsuite/binutils-all/aarch64/in-order-all.d: New test.\n\t* testsuite/binutils-all/aarch64/out-of-order-all.d: New test.\n\t* testsuite/binutils-all/aarch64/out-of-order.d:\n\nopcodes/ChangeLog:\n\n\t* aarch64-dis.c (print_insn_aarch64):\n\tImplement override.",
    "tree": {
      "sha": "d307eb97175ead9d5331d678314a5e5cf6450a39",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d307eb97175ead9d5331d678314a5e5cf6450a39"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60df3720d77c8415158f3eaa166e0b7162f9d3b4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60df3720d77c8415158f3eaa166e0b7162f9d3b4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60df3720d77c8415158f3eaa166e0b7162f9d3b4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60df3720d77c8415158f3eaa166e0b7162f9d3b4/comments",
  "author": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51457761649bab6868343b3da2258d73a62901f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51457761649bab6868343b3da2258d73a62901f7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51457761649bab6868343b3da2258d73a62901f7"
    }
  ],
  "stats": {
    "total": 117,
    "additions": 100,
    "deletions": 17
  },
  "files": [
    {
      "sha": "aad8bddb945a66a14cfe68292b7590e62d726223",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=60df3720d77c8415158f3eaa166e0b7162f9d3b4",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* testsuite/binutils-all/aarch64/in-order-all.d: New test.\n+\t* testsuite/binutils-all/aarch64/out-of-order-all.d: New test.\n+\t* testsuite/binutils-all/aarch64/out-of-order.d:\n+\n 2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n \n \t* testsuite/binutils-all/aarch64/in-order.d: New test."
    },
    {
      "sha": "32f501b7d460b8a07954ee3680f26725542224e7",
      "filename": "binutils/testsuite/binutils-all/aarch64/in-order-all.d",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/testsuite/binutils-all/aarch64/in-order-all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/testsuite/binutils-all/aarch64/in-order-all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/aarch64/in-order-all.d?ref=60df3720d77c8415158f3eaa166e0b7162f9d3b4",
      "patch": "@@ -0,0 +1,43 @@\n+#PROG: objcopy\n+#source: out-of-order.s\n+#ld: -e v1 -Ttext-segment=0x400000\n+#objdump: -D\n+#name: Check if disassembler can handle all sections in default order\n+\n+.*: +file format .*aarch64.*\n+\n+Disassembly of section \\.func1:\n+\n+0000000000400000 <v1>:\n+  400000:\t8b010000 \tadd\tx0, x0, x1\n+  400004:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+\n+Disassembly of section \\.func2:\n+\n+0000000000400008 <\\.func2>:\n+  400008:\t8b010000 \tadd\tx0, x0, x1\n+\n+Disassembly of section \\.func3:\n+\n+000000000040000c <\\.func3>:\n+  40000c:\t8b010000 \tadd\tx0, x0, x1\n+  400010:\t8b010000 \tadd\tx0, x0, x1\n+  400014:\t8b010000 \tadd\tx0, x0, x1\n+  400018:\t8b010000 \tadd\tx0, x0, x1\n+  40001c:\t8b010000 \tadd\tx0, x0, x1\n+  400020:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+\n+Disassembly of section \\.rodata:\n+\n+0000000000400024 <\\.rodata>:\n+  400024:\t00000004 \t\\.inst\t0x00000004 ; undefined\n+\n+Disassembly of section .global:\n+\n+0000000000410028 <__data_start>:\n+  410028:\t00000001 \t\\.inst\t0x00000001 ; undefined\n+  41002c:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+  410030:\t00000001 \t\\.inst\t0x00000001 ; undefined\n+  410034:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+  410038:\t00000001 \t\\.inst\t0x00000001 ; undefined\n+  41003c:\t00000000 \t\\.inst\t0x00000000 ; undefined"
    },
    {
      "sha": "3020deff9c92c2c0e1cdcf17696d15f507e94485",
      "filename": "binutils/testsuite/binutils-all/aarch64/out-of-order-all.d",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/testsuite/binutils-all/aarch64/out-of-order-all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/testsuite/binutils-all/aarch64/out-of-order-all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/aarch64/out-of-order-all.d?ref=60df3720d77c8415158f3eaa166e0b7162f9d3b4",
      "patch": "@@ -0,0 +1,43 @@\n+#PROG: objcopy\n+#source: out-of-order.s\n+#ld: -T out-of-order.T\n+#objdump: -D\n+#name: Check if disassembler can handle all sections in different order than header\n+\n+.*: +file format .*aarch64.*\n+\n+Disassembly of section \\.global:\n+\n+00000000ffe00000 <\\.global>:\n+    ffe00000:\t00000001 \t\\.inst\t0x00000001 ; undefined\n+    ffe00004:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+    ffe00008:\t00000001 \t\\.inst\t0x00000001 ; undefined\n+    ffe0000c:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+    ffe00010:\t00000001 \t\\.inst\t0x00000001 ; undefined\n+    ffe00014:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+\n+Disassembly of section \\.func2:\n+\n+0000000004018280 <\\.func2>:\n+ 4018280:\t8b010000 \tadd\tx0, x0, x1\n+\n+Disassembly of section \\.func1:\n+\n+0000000004005000 <v1>:\n+ 4005000:\t8b010000 \tadd\tx0, x0, x1\n+ 4005004:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+\n+Disassembly of section \\.func3:\n+\n+0000000004015000 <\\.func3>:\n+ 4015000:\t8b010000 \tadd\tx0, x0, x1\n+ 4015004:\t8b010000 \tadd\tx0, x0, x1\n+ 4015008:\t8b010000 \tadd\tx0, x0, x1\n+ 401500c:\t8b010000 \tadd\tx0, x0, x1\n+ 4015010:\t8b010000 \tadd\tx0, x0, x1\n+ 4015014:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+\n+Disassembly of section \\.rodata:\n+\n+0000000004015018 <\\.rodata>:\n+ 4015018:\t00000004 \t\\.inst\t0x00000004 ; undefined"
    },
    {
      "sha": "410f37f68ea21f9e16e2319b5048c123cec99910",
      "filename": "binutils/testsuite/binutils-all/aarch64/out-of-order.d",
      "status": "modified",
      "additions": 1,
      "deletions": 16,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/testsuite/binutils-all/aarch64/out-of-order.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60df3720d77c8415158f3eaa166e0b7162f9d3b4/binutils/testsuite/binutils-all/aarch64/out-of-order.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/aarch64/out-of-order.d?ref=60df3720d77c8415158f3eaa166e0b7162f9d3b4",
      "patch": "@@ -1,20 +1,10 @@\n #PROG: objcopy\n #ld: -T out-of-order.T\n-#objdump: -D\n+#objdump: -d\n #name: Check if disassembler can handle sections in different order than header\n \n .*: +file format .*aarch64.*\n \n-Disassembly of section \\.global:\n-\n-00000000ffe00000 <\\.global>:\n-    ffe00000:\t00000001 \t\\.word\t0x00000001\n-    ffe00004:\t00000000 \t\\.word\t0x00000000\n-    ffe00008:\t00000001 \t\\.word\t0x00000001\n-    ffe0000c:\t00000000 \t\\.word\t0x00000000\n-    ffe00010:\t00000001 \t\\.word\t0x00000001\n-    ffe00014:\t00000000 \t\\.word\t0x00000000\n-\n Disassembly of section \\.func2:\n \n 0000000004018280 <\\.func2>:\n@@ -35,8 +25,3 @@ Disassembly of section \\.func3:\n  401500c:\t8b010000 \tadd\tx0, x0, x1\n  4015010:\t8b010000 \tadd\tx0, x0, x1\n  4015014:\t00000000 \t\\.word\t0x00000000\n-\n-Disassembly of section \\.rodata:\n-\n-0000000004015018 <\\.rodata>:\n- 4015018:\t00000004 \t\\.word\t0x00000004"
    },
    {
      "sha": "433e43f0857087d3d5e22e3bd781e194dcb66916",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60df3720d77c8415158f3eaa166e0b7162f9d3b4/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60df3720d77c8415158f3eaa166e0b7162f9d3b4/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=60df3720d77c8415158f3eaa166e0b7162f9d3b4",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-dis.c (print_insn_aarch64):\n+\tImplement override.\n+\n 2019-03-25  Tamar Christina  <tamar.christina@arm.com>\n \n \t* aarch64-dis.c (print_insn_aarch64): Update the mapping symbol search"
    },
    {
      "sha": "eea649fd3cc96059a1f23170c91cc1cfe75efac3",
      "filename": "opcodes/aarch64-dis.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60df3720d77c8415158f3eaa166e0b7162f9d3b4/opcodes/aarch64-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60df3720d77c8415158f3eaa166e0b7162f9d3b4/opcodes/aarch64-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis.c?ref=60df3720d77c8415158f3eaa166e0b7162f9d3b4",
      "patch": "@@ -3433,7 +3433,8 @@ print_insn_aarch64 (bfd_vma pc,\n   else\n     last_type = type;\n \n-  if (last_type == MAP_DATA)\n+  /* PR 10263: Disassemble data if requested to do so by the user.  */\n+  if (last_type == MAP_DATA && ((info->flags & DISASSEMBLE_DATA) == 0))\n     {\n       /* size was set above.  */\n       info->bytes_per_chunk = size;"
    }
  ]
}