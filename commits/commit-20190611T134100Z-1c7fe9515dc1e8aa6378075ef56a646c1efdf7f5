{
  "sha": "1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWM3ZmU5NTE1ZGMxZThhYTYzNzgwNzVlZjU2YTY0NmMxZWZkZjdmNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-06T00:28:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-11T13:41:00Z"
    },
    "message": "Remove linux-waitpid.c debugging code\n\nThe debugging code in linux-waitpid.c is one of the few remaining\nspots that depends on the gdb/gdbserver difference.\n\nMy first thought was that this code is not extremely useful, so this\npatch removes this code.  (However, if it is actually useful to\nsomeone, we could make it work by introducing a new abstraction.)\n\ngdb/ChangeLog\n2019-06-11  Tom Tromey  <tom@tromey.com>\n\n\t* nat/linux-waitpid.c: Don't include server.h.\n\t(linux_debug): Remove.\n\t(my_waitpid): Update.",
    "tree": {
      "sha": "6fc8c171442e9fc85f5853d201a5eb73c33828b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6fc8c171442e9fc85f5853d201a5eb73c33828b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c93dbb25ac4dba2e959bfd30684a36773298c853",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c93dbb25ac4dba2e959bfd30684a36773298c853",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c93dbb25ac4dba2e959bfd30684a36773298c853"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 7,
    "deletions": 33
  },
  "files": [
    {
      "sha": "a08f48f84577a5b8e5c2039ba6beb7bf4dc9c802",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* nat/linux-waitpid.c: Don't include server.h.\n+\t(linux_debug): Remove.\n+\t(my_waitpid): Update.\n+\n 2019-06-11  Tom Tromey  <tromey@adacore.com>\n \n \t* infcall.c (_initialize_infcall): Remove trailing newline from"
    },
    {
      "sha": "298032dff9ab0b5769d3c01fea8d47165f4da701",
      "filename": "gdb/nat/linux-waitpid.c",
      "status": "modified",
      "additions": 1,
      "deletions": 33,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5/gdb/nat/linux-waitpid.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5/gdb/nat/linux-waitpid.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/linux-waitpid.c?ref=1c7fe9515dc1e8aa6378075ef56a646c1efdf7f5",
      "patch": "@@ -19,35 +19,10 @@\n \n #include \"common/common-defs.h\"\n \n-#ifdef GDBSERVER\n-/* FIXME: server.h is required for the definition of debug_threads\n-   which is used in the gdbserver-specific debug printing in\n-   linux_debug.  This code should be made available to GDB also,\n-   but the lack of a suitable flag to enable it prevents this.  */\n-#include \"server.h\"\n-#endif\n-\n #include \"linux-nat.h\"\n #include \"linux-waitpid.h\"\n #include \"common/gdb_wait.h\"\n \n-/* Print debugging output based on the format string FORMAT and\n-   its parameters.  */\n-\n-static inline void ATTRIBUTE_PRINTF (1,2)\n-linux_debug (const char *format, ...)\n-{\n-#ifdef GDBSERVER\n-  if (debug_threads)\n-    {\n-      va_list args;\n-      va_start (args, format);\n-      debug_vprintf (format, args);\n-      va_end (args);\n-    }\n-#endif\n-}\n-\n /* Convert wait status STATUS to a string.  Used for printing debug\n    messages only.  */\n \n@@ -79,20 +54,13 @@ status_to_str (int status)\n int\n my_waitpid (int pid, int *status, int flags)\n {\n-  int ret, out_errno;\n-\n-  linux_debug (\"my_waitpid (%d, 0x%x)\\n\", pid, flags);\n+  int ret;\n \n   do\n     {\n       ret = waitpid (pid, status, flags);\n     }\n   while (ret == -1 && errno == EINTR);\n-  out_errno = errno;\n-\n-  linux_debug (\"my_waitpid (%d, 0x%x): status(%x), %d\\n\",\n-\t       pid, flags, (ret > 0 && status != NULL) ? *status : -1, ret);\n \n-  errno = out_errno;\n   return ret;\n }"
    }
  ]
}