{
  "sha": "d91c67e8730354c43fae86fa98fe593925882365",
  "node_id": "C_kwDOANOeidoAKGQ5MWM2N2U4NzMwMzU0YzQzZmFlODZmYTk4ZmU1OTM5MjU4ODIzNjU",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-12-07T02:06:31Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-12-07T05:40:27Z"
    },
    "message": "Re: Add support for AArch64 EFI (efi-*-aarch64)\n\nCommit b69c9d41e8 was broken in multiple ways regarding the realloc\nof the target string, most notably in that \"-little\" wasn't actually\nappended to the input_target or output_target.  This caused asan\nerrors and \"FAIL: Check if efi app format is recognized\".  I also\nnoticed that the input_target string wasn't being copied but rather\nthe output_target when dealing with the input target.  Fix that too.\n\n\tPR 26206\n\t* objcopy.c (convert_efi_target): Rewrite.  Allocate modified\n\ttarget strings here..\n\t(copy_main): ..rather than here.  Do handle input_target,\n\tnot output_target for input.",
    "tree": {
      "sha": "0b780699668c28695bdcfa2601e83d110ccd891f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0b780699668c28695bdcfa2601e83d110ccd891f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d91c67e8730354c43fae86fa98fe593925882365",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d91c67e8730354c43fae86fa98fe593925882365",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d91c67e8730354c43fae86fa98fe593925882365",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d91c67e8730354c43fae86fa98fe593925882365/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "43908c16539f486d0b1afc43329bf59d1c3cdd20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43908c16539f486d0b1afc43329bf59d1c3cdd20",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/43908c16539f486d0b1afc43329bf59d1c3cdd20"
    }
  ],
  "stats": {
    "total": 86,
    "additions": 40,
    "deletions": 46
  },
  "files": [
    {
      "sha": "c59c0b566e7efe09bec99a627295855786eb9b67",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 40,
      "deletions": 46,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d91c67e8730354c43fae86fa98fe593925882365/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d91c67e8730354c43fae86fa98fe593925882365/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=d91c67e8730354c43fae86fa98fe593925882365",
      "patch": "@@ -4974,32 +4974,55 @@ set_pe_subsystem (const char *s)\n \n /* Convert EFI target to PEI target.  */\n \n-static void\n-convert_efi_target (char *efi)\n+static int\n+convert_efi_target (char **targ)\n {\n-  efi[0] = 'p';\n-  efi[1] = 'e';\n-  efi[2] = 'i';\n+  size_t len;\n+  char *pei;\n+  char *efi = *targ + 4;\n+  int subsys = -1;\n+\n+  if (startswith (efi, \"app-\"))\n+    subsys = IMAGE_SUBSYSTEM_EFI_APPLICATION;\n+  else if (startswith (efi, \"bsdrv-\"))\n+    {\n+      subsys = IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER;\n+      efi += 2;\n+    }\n+  else if (startswith (efi, \"rtdrv-\"))\n+    {\n+      subsys = IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER;\n+      efi += 2;\n+    }\n+  else\n+    return subsys;\n+\n+  len = strlen (efi);\n+  pei = xmalloc (len + sizeof (\"-little\"));\n+  memcpy (pei, efi, len + 1);\n+  pei[0] = 'p';\n+  pei[1] = 'e';\n+  pei[2] = 'i';\n \n   if (strcmp (efi + 4, \"ia32\") == 0)\n     {\n       /* Change ia32 to i386.  */\n-      efi[5]= '3';\n-      efi[6]= '8';\n-      efi[7]= '6';\n+      pei[5]= '3';\n+      pei[6]= '8';\n+      pei[7]= '6';\n     }\n   else if (strcmp (efi + 4, \"x86_64\") == 0)\n     {\n       /* Change x86_64 to x86-64.  */\n-      efi[7] = '-';\n+      pei[7] = '-';\n     }\n   else if (strcmp (efi + 4, \"aarch64\") == 0)\n     {\n       /* Change aarch64 to aarch64-little.  */\n-      efi = (char *) xrealloc (efi, strlen (efi) + 7);\n-      char *t = \"aarch64-little\";\n-      strcpy (efi + 4, t);\n+      memcpy (pei + 4 + sizeof (\"aarch64\") - 1, \"-little\", sizeof (\"-little\"));\n     }\n+  *targ = pei;\n+  return subsys;\n }\n \n /* Allocate and return a pointer to a struct section_add, initializing the\n@@ -5882,53 +5905,24 @@ copy_main (int argc, char *argv[])\n   if (input_target != NULL\n       && startswith (input_target, \"efi-\"))\n     {\n-      char *efi;\n-\n-      efi = xstrdup (output_target + 4);\n-      if (startswith (efi, \"bsdrv-\")\n-\t  || startswith (efi, \"rtdrv-\"))\n-\tefi += 2;\n-      else if (!startswith (efi, \"app-\"))\n+      if (convert_efi_target (&input_target) < 0)\n \tfatal (_(\"unknown input EFI target: %s\"), input_target);\n-\n-      input_target = efi;\n-      convert_efi_target (efi);\n     }\n \n   /* Convert output EFI target to PEI target.  */\n   if (output_target != NULL\n       && startswith (output_target, \"efi-\"))\n     {\n-      char *efi;\n+      int subsys = convert_efi_target (&output_target);\n \n-      efi = xstrdup (output_target + 4);\n-      if (startswith (efi, \"app-\"))\n-\t{\n-\t  if (pe_subsystem == -1)\n-\t    pe_subsystem = IMAGE_SUBSYSTEM_EFI_APPLICATION;\n-\t}\n-      else if (startswith (efi, \"bsdrv-\"))\n-\t{\n-\t  if (pe_subsystem == -1)\n-\t    pe_subsystem = IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER;\n-\t  efi += 2;\n-\t}\n-      else if (startswith (efi, \"rtdrv-\"))\n-\t{\n-\t  if (pe_subsystem == -1)\n-\t    pe_subsystem = IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER;\n-\t  efi += 2;\n-\t}\n-      else\n+      if (subsys < 0)\n \tfatal (_(\"unknown output EFI target: %s\"), output_target);\n-\n+      if (pe_subsystem == -1)\n+\tpe_subsystem = subsys;\n       if (pe_file_alignment == (bfd_vma) -1)\n \tpe_file_alignment = PE_DEF_FILE_ALIGNMENT;\n       if (pe_section_alignment == (bfd_vma) -1)\n \tpe_section_alignment = PE_DEF_SECTION_ALIGNMENT;\n-\n-      output_target = efi;\n-      convert_efi_target (efi);\n     }\n \n   /* If there is no destination file, or the source and destination files"
    }
  ]
}