{
  "sha": "491adecac48c5960fe29582f5046c015ff92c211",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDkxYWRlY2FjNDhjNTk2MGZlMjk1ODJmNTA0NmMwMTVmZjkyYzIxMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-06T20:24:11Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-15T00:32:24Z"
    },
    "message": "Constify target_pass_signals and target_program_signals\n\nThis constifies the final parameter to target_pass_signals and\ntarget_program_signals and updates the rest of gdb.\n\nNote that I have no way to test the nto-procfs.c change.\n\ngdb/ChangeLog\n2019-01-14  Tom Tromey  <tom@tromey.com>\n\n\t* target-debug.h (target_debug_print_signals): Constify.\n\t* nto-procfs.c (nto_procfs_target::pass_signals): Update.\n\t* procfs.c (procfs_target::pass_signals): Update.\n\t* linux-nat.c (linux_nat_target::pass_signals): Update.\n\t* linux-nat.h (class linux_nat_target) <pass_signals>: Update.\n\t* target-delegates.c: Rebuild.\n\t* remote.c (remote_target::program_signals): Update.\n\t(remote_target::pass_signals): Update.\n\t* target.c (target_pass_signals): Constify argument.\n\t(target_program_signals): Likewise.\n\t* target.h (struct target_ops) <pass_signals, program_signals>:\n\tConstify argument.\n\t(target_pass_signals, target_program_signals): Constify argument.",
    "tree": {
      "sha": "01cf83e897fe97a8eba013884b76c6b91f3f1159",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/01cf83e897fe97a8eba013884b76c6b91f3f1159"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/491adecac48c5960fe29582f5046c015ff92c211",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/491adecac48c5960fe29582f5046c015ff92c211",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/491adecac48c5960fe29582f5046c015ff92c211",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/491adecac48c5960fe29582f5046c015ff92c211/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "183561e05eb4d504f65557756e987b584b72350b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/183561e05eb4d504f65557756e987b584b72350b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/183561e05eb4d504f65557756e987b584b72350b"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 45,
    "deletions": 27
  },
  "files": [
    {
      "sha": "5f5a2d124582398494ed2ecb4823b3805b525c4d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -1,3 +1,19 @@\n+2019-01-14  Tom Tromey  <tom@tromey.com>\n+\n+\t* target-debug.h (target_debug_print_signals): Constify.\n+\t* nto-procfs.c (nto_procfs_target::pass_signals): Update.\n+\t* procfs.c (procfs_target::pass_signals): Update.\n+\t* linux-nat.c (linux_nat_target::pass_signals): Update.\n+\t* linux-nat.h (class linux_nat_target) <pass_signals>: Update.\n+\t* target-delegates.c: Rebuild.\n+\t* remote.c (remote_target::program_signals): Update.\n+\t(remote_target::pass_signals): Update.\n+\t* target.c (target_pass_signals): Constify argument.\n+\t(target_program_signals): Likewise.\n+\t* target.h (struct target_ops) <pass_signals, program_signals>:\n+\tConstify argument.\n+\t(target_pass_signals, target_program_signals): Constify argument.\n+\n 2019-01-14  Tom Tromey  <tom@tromey.com>\n \n \tPR tui/28819:"
    },
    {
      "sha": "c0d5f8dc66b7bb14c3afd6136369d4aee06aeb5e",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -788,7 +788,7 @@ static sigset_t pass_mask;\n \n /* Update signals to pass to the inferior.  */\n void\n-linux_nat_target::pass_signals (int numsigs, unsigned char *pass_signals)\n+linux_nat_target::pass_signals (int numsigs, const unsigned char *pass_signals)\n {\n   int signo;\n "
    },
    {
      "sha": "c56a245c8bba9dc627c7f339d5cc50a7a8862a0b",
      "filename": "gdb/linux-nat.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/linux-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/linux-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.h?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -45,7 +45,7 @@ class linux_nat_target : public inf_ptrace_target\n \n   ptid_t wait (ptid_t, struct target_waitstatus *, int) override;\n \n-  void pass_signals (int, unsigned char *) override;\n+  void pass_signals (int, const unsigned char *) override;\n \n   enum target_xfer_status xfer_partial (enum target_object object,\n \t\t\t\t\tconst char *annex,"
    },
    {
      "sha": "9ee42e642827662cac18bb0b1ce3f0f81f2e9658",
      "filename": "gdb/nto-procfs.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/nto-procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/nto-procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nto-procfs.c?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -109,7 +109,7 @@ struct nto_procfs_target : public inf_child_target\n \n   void mourn_inferior () override;\n \n-  void pass_signals (int, unsigned char *) override;\n+  void pass_signals (int, const unsigned char *) override;\n \n   bool thread_alive (ptid_t ptid) override;\n \n@@ -1442,7 +1442,8 @@ nto_procfs_target::store_registers (struct regcache *regcache, int regno)\n /* Set list of signals to be handled in the target.  */\n \n void\n-nto_procfs_target::pass_signals (int numsigs, unsigned char *pass_signals)\n+nto_procfs_target::pass_signals (int numsigs,\n+\t\t\t\t const unsigned char *pass_signals)\n {\n   int signo;\n "
    },
    {
      "sha": "dd7534aa57107a1e3892d3e68e796010790b2481",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -119,7 +119,7 @@ class procfs_target final : public inf_child_target\n \t\t\t\t\tULONGEST offset, ULONGEST len,\n \t\t\t\t\tULONGEST *xfered_len) override;\n \n-  void pass_signals (int, unsigned char *) override;\n+  void pass_signals (int, const unsigned char *) override;\n \n   void files_info () override;\n \n@@ -2772,7 +2772,7 @@ procfs_target::resume (ptid_t ptid, int step, enum gdb_signal signo)\n /* Set up to trace signals in the child process.  */\n \n void\n-procfs_target::pass_signals (int numsigs, unsigned char *pass_signals)\n+procfs_target::pass_signals (int numsigs, const unsigned char *pass_signals)\n {\n   sigset_t signals;\n   procinfo *pi = find_procinfo_or_die (inferior_ptid.pid (), 0);"
    },
    {
      "sha": "c40f9263764b76800abb30a46d8678083af4a4f2",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -474,12 +474,12 @@ class remote_target : public process_stratum_target\n \n   void mourn_inferior () override;\n \n-  void pass_signals (int, unsigned char *) override;\n+  void pass_signals (int, const unsigned char *) override;\n \n   int set_syscall_catchpoint (int, bool, int,\n \t\t\t      gdb::array_view<const int>) override;\n \n-  void program_signals (int, unsigned char *) override;\n+  void program_signals (int, const unsigned char *) override;\n \n   bool thread_alive (ptid_t ptid) override;\n \n@@ -2555,7 +2555,7 @@ record_currthread (struct remote_state *rs, ptid_t currthread)\n    it can simply pass through to the inferior without reporting.  */\n \n void\n-remote_target::pass_signals (int numsigs, unsigned char *pass_signals)\n+remote_target::pass_signals (int numsigs, const unsigned char *pass_signals)\n {\n   if (packet_support (PACKET_QPassSignals) != PACKET_DISABLE)\n     {\n@@ -2681,7 +2681,7 @@ remote_target::set_syscall_catchpoint (int pid, bool needed, int any_count,\n    signals it should pass through to the inferior when detaching.  */\n \n void\n-remote_target::program_signals (int numsigs, unsigned char *signals)\n+remote_target::program_signals (int numsigs, const unsigned char *signals)\n {\n   if (packet_support (PACKET_QProgramSignals) != PACKET_DISABLE)\n     {"
    },
    {
      "sha": "d51754af5919f7ce376d545d7298d005d5c76aac",
      "filename": "gdb/target-debug.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/target-debug.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/target-debug.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-debug.h?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -209,7 +209,7 @@ target_debug_print_options (int options)\n }\n \n static void\n-target_debug_print_signals (unsigned char *sigs)\n+target_debug_print_signals (const unsigned char *sigs)\n {\n   fputs_unfiltered (\"{\", gdb_stdlog);\n   if (sigs != NULL)"
    },
    {
      "sha": "43c979087f38d309421c347d68597cf885d8d79a",
      "filename": "gdb/target-delegates.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/target-delegates.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/target-delegates.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-delegates.c?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -62,8 +62,8 @@ struct dummy_target : public target_ops\n   void follow_exec (struct inferior *arg0, char *arg1) override;\n   int set_syscall_catchpoint (int arg0, bool arg1, int arg2, gdb::array_view<const int> arg3) override;\n   void mourn_inferior () override;\n-  void pass_signals (int arg0, unsigned char * arg1) override;\n-  void program_signals (int arg0, unsigned char * arg1) override;\n+  void pass_signals (int arg0, const unsigned char * arg1) override;\n+  void program_signals (int arg0, const unsigned char * arg1) override;\n   bool thread_alive (ptid_t arg0) override;\n   void update_thread_list () override;\n   const char *pid_to_str (ptid_t arg0) override;\n@@ -229,8 +229,8 @@ struct debug_target : public target_ops\n   void follow_exec (struct inferior *arg0, char *arg1) override;\n   int set_syscall_catchpoint (int arg0, bool arg1, int arg2, gdb::array_view<const int> arg3) override;\n   void mourn_inferior () override;\n-  void pass_signals (int arg0, unsigned char * arg1) override;\n-  void program_signals (int arg0, unsigned char * arg1) override;\n+  void pass_signals (int arg0, const unsigned char * arg1) override;\n+  void program_signals (int arg0, const unsigned char * arg1) override;\n   bool thread_alive (ptid_t arg0) override;\n   void update_thread_list () override;\n   const char *pid_to_str (ptid_t arg0) override;\n@@ -1659,18 +1659,18 @@ debug_target::mourn_inferior ()\n }\n \n void\n-target_ops::pass_signals (int arg0, unsigned char * arg1)\n+target_ops::pass_signals (int arg0, const unsigned char * arg1)\n {\n   this->beneath ()->pass_signals (arg0, arg1);\n }\n \n void\n-dummy_target::pass_signals (int arg0, unsigned char * arg1)\n+dummy_target::pass_signals (int arg0, const unsigned char * arg1)\n {\n }\n \n void\n-debug_target::pass_signals (int arg0, unsigned char * arg1)\n+debug_target::pass_signals (int arg0, const unsigned char * arg1)\n {\n   fprintf_unfiltered (gdb_stdlog, \"-> %s->pass_signals (...)\\n\", this->beneath ()->shortname ());\n   this->beneath ()->pass_signals (arg0, arg1);\n@@ -1682,18 +1682,18 @@ debug_target::pass_signals (int arg0, unsigned char * arg1)\n }\n \n void\n-target_ops::program_signals (int arg0, unsigned char * arg1)\n+target_ops::program_signals (int arg0, const unsigned char * arg1)\n {\n   this->beneath ()->program_signals (arg0, arg1);\n }\n \n void\n-dummy_target::program_signals (int arg0, unsigned char * arg1)\n+dummy_target::program_signals (int arg0, const unsigned char * arg1)\n {\n }\n \n void\n-debug_target::program_signals (int arg0, unsigned char * arg1)\n+debug_target::program_signals (int arg0, const unsigned char * arg1)\n {\n   fprintf_unfiltered (gdb_stdlog, \"-> %s->program_signals (...)\\n\", this->beneath ()->shortname ());\n   this->beneath ()->program_signals (arg0, arg1);"
    },
    {
      "sha": "e66584f147ea4de47f37ed1c34538e18406e85c7",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -2112,13 +2112,13 @@ make_scoped_defer_target_commit_resume ()\n }\n \n void\n-target_pass_signals (int numsigs, unsigned char *pass_signals)\n+target_pass_signals (int numsigs, const unsigned char *pass_signals)\n {\n   current_top_target ()->pass_signals (numsigs, pass_signals);\n }\n \n void\n-target_program_signals (int numsigs, unsigned char *program_signals)\n+target_program_signals (int numsigs, const unsigned char *program_signals)\n {\n   current_top_target ()->program_signals (numsigs, program_signals);\n }"
    },
    {
      "sha": "14ec07fc0e4b1ec516119a97f261873bd65f3f83",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/491adecac48c5960fe29582f5046c015ff92c211/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/491adecac48c5960fe29582f5046c015ff92c211/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=491adecac48c5960fe29582f5046c015ff92c211",
      "patch": "@@ -638,13 +638,13 @@ struct target_ops\n     /* Documentation of this routine is provided with the corresponding\n        target_* macro.  */\n     virtual void pass_signals (int,\n-\t\t\t       unsigned char * TARGET_DEBUG_PRINTER (target_debug_print_signals))\n+\t\t\t       const unsigned char * TARGET_DEBUG_PRINTER (target_debug_print_signals))\n       TARGET_DEFAULT_IGNORE ();\n \n     /* Documentation of this routine is provided with the\n        corresponding target_* function.  */\n     virtual void program_signals (int,\n-\t\t\t\t  unsigned char * TARGET_DEBUG_PRINTER (target_debug_print_signals))\n+\t\t\t\t  const unsigned char * TARGET_DEBUG_PRINTER (target_debug_print_signals))\n       TARGET_DEFAULT_IGNORE ();\n \n     virtual bool thread_alive (ptid_t ptid)\n@@ -1692,7 +1692,7 @@ extern int target_can_run ();\n    about to receive a signal, it needs to be reported in any case, even\n    if mentioned in a previous target_pass_signals call.   */\n \n-extern void target_pass_signals (int nsig, unsigned char *pass_signals);\n+extern void target_pass_signals (int nsig, const unsigned char *pass_signals);\n \n /* Set list of signals the target may pass to the inferior.  This\n    directly maps to the \"handle SIGNAL pass/nopass\" setting.\n@@ -1708,7 +1708,8 @@ extern void target_pass_signals (int nsig, unsigned char *pass_signals);\n    example, when detaching (as threads may have been suspended with\n    pending signals not reported to GDB).  */\n \n-extern void target_program_signals (int nsig, unsigned char *program_signals);\n+extern void target_program_signals (int nsig,\n+\t\t\t\t    const unsigned char *program_signals);\n \n /* Check to see if a thread is still alive.  */\n "
    }
  ]
}