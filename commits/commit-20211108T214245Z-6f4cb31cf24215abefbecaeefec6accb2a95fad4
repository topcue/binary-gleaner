{
  "sha": "6f4cb31cf24215abefbecaeefec6accb2a95fad4",
  "node_id": "C_kwDOANOeidoAKDZmNGNiMzFjZjI0MjE1YWJlZmJlY2FlZWZlYzZhY2NiMmE5NWZhZDQ",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-08T21:42:45Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-08T21:42:45Z"
    },
    "message": "gdb: tweak scoped_disable_commit_resumed uses when resuming all threads in non-stop\n\nWhen doing \"continue -a\" in non-stop mode, each thread is individually\nresumed while the commit resumed state is enabled.  This forces the\ntarget to commit each resumption immediately, instead of being able to\nbatch things.\n\nThe reason is that there is no scoped_disable_commit_resumed around the\nloop over threads in continue_1, when \"non_stop && all_threads\" is true.\nSince the proceed function is called once for each thread, the\nscoped_disable_commit_resumed in proceed therefore forces commit-resumed\nbetween each thread resumption.  Add the necessary\nscoped_disable_commit_resumed in continue_1 to avoid that.\n\nI looked at the MI side of things, the function exec_continue, and found\nthat it was correct.  There is a similar iteration over threads, and\nthere is a scoped_disable_commit_resumed at the function scope.  This is\nnot wrong, but a bit more than we need.  The branches that just call\ncontinue_1 do not need it, as continue_1 takes care of disabling commit\nresumed.  So, move the scoped_disable_commit_resumed to the inner scope\nwhere we iterate on threads and proceed them individually.\n\nHere's an example debugging a multi-threaded program attached by\ngdbserver (debug output trimmed for brevity):\n\n    $ ./gdb -nx -q --data-directory=data-directory -ex \"set non-stop\" -ex \"tar rem :1234\"\n    (gdb) set debug remote\n    (gdb) set debug infrun\n    (gdb) c -a\n    Continuing.\n    [infrun] proceed: enter\n      [infrun] scoped_disable_commit_resumed: reason=proceeding\n      [remote] Sending packet: $vCont;c:p14388.14388#90\n      [infrun] reset: reason=proceeding\n      [infrun] maybe_set_commit_resumed_all_targets: enabling commit-resumed for target remote\n      [infrun] maybe_call_commit_resumed_all_targets: calling commit_resumed for target remote\n    [infrun] proceed: exit\n    [infrun] proceed: enter\n      [infrun] scoped_disable_commit_resumed: reason=proceeding\n      [remote] Sending packet: $vCont;c:p14388.1438a#b9\n      [infrun] reset: reason=proceeding\n      [infrun] maybe_set_commit_resumed_all_targets: enabling commit-resumed for target remote\n      [infrun] maybe_call_commit_resumed_all_targets: calling commit_resumed for target remote\n    [infrun] proceed: exit\n    ... and so on for each thread ...\n\nNotice how we send one vCont;c for each thread.  With the patch applied, we\nsend a single vCont;c at the end:\n\n    [infrun] scoped_disable_commit_resumed: reason=continue all threads in non-stop\n    [infrun] proceed: enter\n      [infrun] scoped_disable_commit_resumed: reason=proceeding\n      [infrun] reset: reason=proceeding\n    [infrun] proceed: exit\n    [infrun] clear_proceed_status_thread: Thread 85790.85792\n    [infrun] proceed: enter\n      [infrun] scoped_disable_commit_resumed: reason=proceeding\n      [infrun] reset: reason=proceeding\n    [infrun] proceed: exit\n    ... proceeding threads individually ...\n    [infrun] reset: reason=continue all threads in non-stop\n    [infrun] maybe_set_commit_resumed_all_targets: enabling commit-resumed for target remote\n    [infrun] maybe_call_commit_resumed_all_targets: calling commit_resumed for target remote\n    [remote] Sending packet: $vCont;c#a8\n\nChange-Id: I331dd2473c5aa5114f89854196fed2a8fdd122bb",
    "tree": {
      "sha": "df6e1503e387c569f51fe40e5d456761b05cffe4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/df6e1503e387c569f51fe40e5d456761b05cffe4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6f4cb31cf24215abefbecaeefec6accb2a95fad4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f4cb31cf24215abefbecaeefec6accb2a95fad4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6f4cb31cf24215abefbecaeefec6accb2a95fad4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f4cb31cf24215abefbecaeefec6accb2a95fad4/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d0490f89ad3670e1cdbe06db25f391eb5f9f0d6d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0490f89ad3670e1cdbe06db25f391eb5f9f0d6d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d0490f89ad3670e1cdbe06db25f391eb5f9f0d6d"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "6bbd45618eb2764514daa3719217bfb1d41762ad",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f4cb31cf24215abefbecaeefec6accb2a95fad4/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f4cb31cf24215abefbecaeefec6accb2a95fad4/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=6f4cb31cf24215abefbecaeefec6accb2a95fad4",
      "patch": "@@ -603,6 +603,8 @@ continue_1 (int all_threads)\n       /* Backup current thread and selected frame and restore on scope\n \t exit.  */\n       scoped_restore_current_thread restore_thread;\n+      scoped_disable_commit_resumed disable_commit_resumed\n+\t(\"continue all threads in non-stop\");\n \n       iterate_over_threads (proceed_thread_callback, NULL);\n \n@@ -623,6 +625,8 @@ continue_1 (int all_threads)\n \t  */\n \t  target_terminal::inferior ();\n \t}\n+\n+      disable_commit_resumed.reset_and_commit ();\n     }\n   else\n     {"
    },
    {
      "sha": "e28fae0cc6cf87ef1fc2efe464085af8061f6b89",
      "filename": "gdb/mi/mi-main.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f4cb31cf24215abefbecaeefec6accb2a95fad4/gdb/mi/mi-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f4cb31cf24215abefbecaeefec6accb2a95fad4/gdb/mi/mi-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-main.c?ref=6f4cb31cf24215abefbecaeefec6accb2a95fad4",
      "patch": "@@ -266,7 +266,6 @@ exec_continue (char **argv, int argc)\n {\n   prepare_execution_command (current_inferior ()->top_target (), mi_async_p ());\n \n-  scoped_disable_commit_resumed disable_commit_resumed (\"mi continue\");\n \n   if (non_stop)\n     {\n@@ -279,6 +278,8 @@ exec_continue (char **argv, int argc)\n       if (current_context->all || current_context->thread_group != -1)\n \t{\n \t  scoped_restore_current_thread restore_thread;\n+\t  scoped_disable_commit_resumed disable_commit_resumed\n+\t    (\"MI continue all threads in non-stop\");\n \t  int pid = 0;\n \n \t  if (!current_context->all)\n@@ -288,7 +289,9 @@ exec_continue (char **argv, int argc)\n \n \t      pid = inf->pid;\n \t    }\n+\n \t  iterate_over_threads (proceed_thread_callback, &pid);\n+\t  disable_commit_resumed.reset_and_commit ();\n \t}\n       else\n \t{\n@@ -313,8 +316,6 @@ exec_continue (char **argv, int argc)\n \t  continue_1 (1);\n \t}\n     }\n-\n-  disable_commit_resumed.reset_and_commit ();\n }\n \n static void"
    }
  ]
}