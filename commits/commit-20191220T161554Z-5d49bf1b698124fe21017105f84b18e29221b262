{
  "sha": "5d49bf1b698124fe21017105f84b18e29221b262",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWQ0OWJmMWI2OTgxMjRmZTIxMDE3MTA1Zjg0YjE4ZTI5MjIxYjI2Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-13T01:04:01Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-20T16:15:54Z"
    },
    "message": "Simplify tui_update_source_windows_with_line\n\nThis changes tui_update_source_windows_with_line to take a\nsymtab_and_line, rather than separate parameters, and then updates the\ncaller.\n\ngdb/ChangeLog\n2019-12-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.c (tui_show_source): Update.\n\t* tui/tui-winsource.h (tui_update_source_windows_with_line): Update.\n\t* tui/tui-winsource.c (tui_update_source_windows_with_line): Take\n\ta symtab_symbol_info, not a separate symtab and line.  Simplify.\n\nChange-Id: I8803a0a6fd2938ceee859aea53a57ce582f3e80d",
    "tree": {
      "sha": "32acaba0aa5392e0b892ed85e371c57dc79247a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/32acaba0aa5392e0b892ed85e371c57dc79247a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5d49bf1b698124fe21017105f84b18e29221b262",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d49bf1b698124fe21017105f84b18e29221b262",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5d49bf1b698124fe21017105f84b18e29221b262",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d49bf1b698124fe21017105f84b18e29221b262/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "88180c082424fd90e8a5967f8c84533f7cc6380f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/88180c082424fd90e8a5967f8c84533f7cc6380f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/88180c082424fd90e8a5967f8c84533f7cc6380f"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 17,
    "deletions": 31
  },
  "files": [
    {
      "sha": "f5d667e78ce8023827c0fa7b74ada0a8ac6add87",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d49bf1b698124fe21017105f84b18e29221b262/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d49bf1b698124fe21017105f84b18e29221b262/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5d49bf1b698124fe21017105f84b18e29221b262",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.c (tui_show_source): Update.\n+\t* tui/tui-winsource.h (tui_update_source_windows_with_line): Update.\n+\t* tui/tui-winsource.c (tui_update_source_windows_with_line): Take\n+\ta symtab_symbol_info, not a separate symtab and line.  Simplify.\n+\n 2019-12-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.c (tui_update_source_windows_with_addr):"
    },
    {
      "sha": "3305c8cd969981dd0ecedb6ae934bf368abd0434",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 8,
      "deletions": 28,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d49bf1b698124fe21017105f84b18e29221b262/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d49bf1b698124fe21017105f84b18e29221b262/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=5d49bf1b698124fe21017105f84b18e29221b262",
      "patch": "@@ -214,39 +214,19 @@ tui_update_source_windows_with_addr (struct gdbarch *gdbarch, CORE_ADDR addr)\n     win_info->update_source_window (gdbarch, sal);\n }\n \n-/* Function to ensure that the source and/or disassemly windows\n-   reflect the input address.  */\n+/* Function to ensure that the source and/or disassembly windows\n+   reflect the symtab and line.  */\n void\n-tui_update_source_windows_with_line (struct symtab *s, int line)\n+tui_update_source_windows_with_line (struct symtab_and_line sal)\n {\n-  struct gdbarch *gdbarch;\n-  CORE_ADDR pc;\n-  struct symtab_and_line sal;\n-\n-  if (!s)\n+  if (!sal.symtab)\n     return;\n \n-  sal.pspace = current_program_space;\n-  sal.symtab = s;\n-  sal.line = line;\n-\n-  gdbarch = get_objfile_arch (SYMTAB_OBJFILE (s));\n+  find_line_pc (sal.symtab, sal.line, &sal.pc);\n+  struct gdbarch *gdbarch = get_objfile_arch (SYMTAB_OBJFILE (sal.symtab));\n \n-  switch (tui_current_layout ())\n-    {\n-    case DISASSEM_COMMAND:\n-    case DISASSEM_DATA_COMMAND:\n-      find_line_pc (s, line, &pc);\n-      tui_update_source_windows_with_addr (gdbarch, pc);\n-      break;\n-    default:\n-      find_line_pc (s, line, &pc);\n-      sal.pc = pc;\n-      TUI_SRC_WIN->update_source_window (gdbarch, sal);\n-      if (tui_current_layout () == SRC_DISASSEM_COMMAND)\n-\tTUI_DISASM_WIN->update_source_window (gdbarch, sal);\n-      break;\n-    }\n+  for (struct tui_source_window_base *win_info : tui_source_windows ())\n+    win_info->update_source_window (gdbarch, sal);\n }\n \n void"
    },
    {
      "sha": "435203d369e099c6bead68a2fd01b28f6691ebc9",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d49bf1b698124fe21017105f84b18e29221b262/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d49bf1b698124fe21017105f84b18e29221b262/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=5d49bf1b698124fe21017105f84b18e29221b262",
      "patch": "@@ -227,8 +227,7 @@ extern void tui_update_all_breakpoint_info (struct breakpoint *being_deleted);\n /* Function to display the \"main\" routine.  */\n extern void tui_display_main (void);\n extern void tui_update_source_windows_with_addr (struct gdbarch *, CORE_ADDR);\n-extern void tui_update_source_windows_with_line (struct symtab *, \n-\t\t\t\t\t\t int);\n+extern void tui_update_source_windows_with_line (struct symtab_and_line sal);\n \n /* Extract some source text from PTR.  LINE_NO is the line number.  If\n    it is positive, it is printed at the start of the line.  FIRST_COL"
    },
    {
      "sha": "a0d2e4c791329f4fc875091e59297a3b7ca3d167",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d49bf1b698124fe21017105f84b18e29221b262/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d49bf1b698124fe21017105f84b18e29221b262/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=5d49bf1b698124fe21017105f84b18e29221b262",
      "patch": "@@ -634,7 +634,7 @@ tui_show_source ()\n   /* Make sure that the source window is displayed.  */\n   tui_add_win_to_layout (SRC_WIN);\n \n-  tui_update_source_windows_with_line (cursal.symtab, cursal.line);\n+  tui_update_source_windows_with_line (cursal);\n   tui_update_locator_fullname (cursal.symtab);\n }\n "
    }
  ]
}