{
  "sha": "ba3e70b008d63b13207339443ad3b9a61ab996bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmEzZTcwYjAwOGQ2M2IxMzIwNzMzOTQ0M2FkM2I5YTYxYWI5OTZiYw==",
  "commit": {
    "author": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2020-05-11T17:27:32Z"
    },
    "committer": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2020-05-11T17:28:17Z"
    },
    "message": "Clean-up gdb.ada test names\n\nThis patch fixes all duplicate and tail parentheses test names.\nThese can really hinder automated test analysis such as used by\nthe buildbot.\n\nBefore:\n$ cat testsuite/gdb.sum | egrep \"^(PASS|FAIL|XPASS|XFAIL|KPASS|KFAIL)\" \\\n  | sort | uniq -c | sort -n | grep -v \" 1 \"\n      2 PASS: gdb.ada/attr_ref_and_charlit.exp: print s'last\n      2 PASS: gdb.ada/bp_on_var.exp: set breakpoint pending off\n      2 PASS: gdb.ada/complete.exp: complete p pck.inne\n      2 PASS: gdb.ada/fun_overload_menu.exp: multiple matches for f (f (1, null))\n      2 PASS: gdb.ada/type_coercion.exp: p q\n      2 PASS: gdb.ada/unc_arr_ptr_in_var_rec.exp: print My_P_Object.Ptr when no longer null\n      3 PASS: gdb.ada/fun_overload_menu.exp: 1\n\nAfter:\n<empty>\n\nFor parentheses, I've audited all occurrences of trailing parentheses.\nMost offenders are of the form:\n\n   gdb_test \"p func (..)\" $expected_result\n\nI've either added a unique test name or simply removed the whitespace\nbetween the function name and the argument list.\n\ngdb/testsuite/ChangeLog\n2020-05-11  Keith Seitz  <keiths@redhat.com>\n\n\t* gdb.ada/arrayparam.exp: Resolve duplicate and tail parentheses\n\ttest names.\n\t* gdb.ada/arrayptr.exp: Likewise.\n\t* gdb.ada/assign_arr.exp: Likewise.\n\t* gdb.ada/attr_ref_and_charlit.exp: Likewise.\n\t* gdb.ada/bp_on_var.exp: Likewise.\n\t* gdb.ada/call_pn.exp: Likewise.\n\t* gdb.ada/complete.exp: Likewise.\n\t* gdb.ada/fun_overload_menu.exp: Likewise.\n\t* gdb.ada/funcall_param.exp: Likewise.\n\t* gdb.ada/funcall_ref.exp: Likewise.\n\t* gdb.ada/packed_array_assign.exp: Likewise.\n\t* gdb.ada/same_component_name.exp: Likewise.\n\t* gdb.ada/type_coercion.exp: Likewise.\n\t* gdb.ada/unc_arr_ptr_in_var_rec.exp: Likewise.\n\t* gdb.ada/variant_record_packed_array.exp: Likewise.",
    "tree": {
      "sha": "7cd0b0e92566f00d218613e5cb6d824b9e8a8845",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7cd0b0e92566f00d218613e5cb6d824b9e8a8845"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ba3e70b008d63b13207339443ad3b9a61ab996bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba3e70b008d63b13207339443ad3b9a61ab996bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ba3e70b008d63b13207339443ad3b9a61ab996bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba3e70b008d63b13207339443ad3b9a61ab996bc/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "7666722fce2a26a32d9d931e9ce0fea8a7209185",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7666722fce2a26a32d9d931e9ce0fea8a7209185",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7666722fce2a26a32d9d931e9ce0fea8a7209185"
    }
  ],
  "stats": {
    "total": 133,
    "additions": 86,
    "deletions": 47
  },
  "files": [
    {
      "sha": "309602cfd734a02c63da95f5f20aa6ea855da3ac",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -1,3 +1,22 @@\n+2020-05-11  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gdb.ada/arrayparam.exp: Resolve duplicate and tail parentheses\n+\ttest names.\n+\t* gdb.ada/arrayptr.exp: Likewise.\n+\t* gdb.ada/assign_arr.exp: Likewise.\n+\t* gdb.ada/attr_ref_and_charlit.exp: Likewise.\n+\t* gdb.ada/bp_on_var.exp: Likewise.\n+\t* gdb.ada/call_pn.exp: Likewise.\n+\t* gdb.ada/complete.exp: Likewise.\n+\t* gdb.ada/fun_overload_menu.exp: Likewise.\n+\t* gdb.ada/funcall_param.exp: Likewise.\n+\t* gdb.ada/funcall_ref.exp: Likewise.\n+\t* gdb.ada/packed_array_assign.exp: Likewise.\n+\t* gdb.ada/same_component_name.exp: Likewise.\n+\t* gdb.ada/type_coercion.exp: Likewise.\n+\t* gdb.ada/unc_arr_ptr_in_var_rec.exp: Likewise.\n+\t* gdb.ada/variant_record_packed_array.exp: Likewise.\n+\n 2020-05-11  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/25941"
    },
    {
      "sha": "717d36e768c2d496e553930c5b3c3177c2ca94e6",
      "filename": "gdb/testsuite/gdb.ada/arrayparam.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/arrayparam.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/arrayparam.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/arrayparam.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -29,7 +29,7 @@ runto \"foo.adb:$bp_location\"\n # Verify that a call to a function that takes an array as a parameter\n # works without problem.\n \n-gdb_test \"print call_me (\\\"bonjour\\\")\" \\\n+gdb_test \"print call_me(\\\"bonjour\\\")\" \\\n          \"= void\"\n \n # Verify that the array was passed properly by checking the global"
    },
    {
      "sha": "ed91fe079b6e91d7db0f46eaa9eaf86dd60790f4",
      "filename": "gdb/testsuite/gdb.ada/arrayptr.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/arrayptr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/arrayptr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/arrayptr.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -32,15 +32,15 @@ if ![runto \"foo.adb:$bp_location\" ] then {\n gdb_test \"print string_p\" \\\n          \"= \\\\(foo\\\\.string_access\\\\) 0x\\[0-9a-zA-Z\\]+\"\n \n-gdb_test \"print string_p (3..4)\" \"= \\\"ll\\\"\"\n+gdb_test \"print string_p(3..4)\" \"= \\\"ll\\\"\"\n \n gdb_test \"print null_string\" \"= \\\\(foo\\\\.string_access\\\\) 0x0\"\n \n gdb_test \"print arr_ptr\" \"= \\\\(access foo\\\\.little_array\\\\) 0x\\[0-9a-zA-Z\\]+\"\n \n-gdb_test \"print arr_ptr (2)\" \"= 22\"\n+gdb_test \"print arr_ptr(2)\" \"= 22\"\n \n-gdb_test \"print arr_ptr (3..4)\" \"= \\\\(3 => 23, 24\\\\)\"\n+gdb_test \"print arr_ptr(3..4)\" \"= \\\\(3 => 23, 24\\\\)\"\n \n gdb_test \"ptype string_access\" \"= access array \\\\(<>\\\\) of character\"\n "
    },
    {
      "sha": "75b851a391c9cd55d95974aee1f937a2f9674d1b",
      "filename": "gdb/testsuite/gdb.ada/assign_arr.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/assign_arr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/assign_arr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/assign_arr.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -26,5 +26,5 @@ clean_restart ${testfile}\n set bp_location [gdb_get_line_number \"STOP\" ${testdir}/main_p324_051.adb]\n runto \"main_p324_051.adb:$bp_location\"\n \n-gdb_test \"print assign_arr_input.u2 := (0.25,0.5,0.75)\" \\\n+gdb_test \"print assign_arr_input.u2 :=(0.25,0.5,0.75)\" \\\n          \" = \\\\(0\\\\.25, 0\\\\.5, 0\\\\.75\\\\)\""
    },
    {
      "sha": "9e3cda808a7d647cf27588355a736fe8f85885f1",
      "filename": "gdb/testsuite/gdb.ada/attr_ref_and_charlit.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 9,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/attr_ref_and_charlit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/attr_ref_and_charlit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/attr_ref_and_charlit.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -29,14 +29,19 @@ set bp_location [gdb_get_line_number \"BREAK\" \"${testdir}/foo.adb\"]\n # work as expected. They used to yield syntax error.\n \n runto \"foo.adb:$bp_location\"\n-gdb_test \"print s'first\" \" = 2\"\n-gdb_test \"print s'last\"  \" = 3\"\n-gdb_test \"print s(s'first) = 'a'\" \" = true\"\n-gdb_test \"print s(s'last) /= 'b'\" \" = false\"\n+with_test_prefix \"run\" {\n+    gdb_test \"print s'first\" \" = 2\"\n+    gdb_test \"print s'last\"  \" = 3Z\n+    gdb_test \"print s(s'first) = 'a'\" \" = true\"\n+    gdb_test \"print s(s'last) /= 'b'\" \" = false\"\n+}\n \n gdb_test \"continue\" \\\n-         \".*Breakpoint \\[0-9\\]+, foo\\\\.p \\\\(s=.*\\\\) at .*foo.adb:\\[0-9\\]+.*\" \\\n-gdb_test \"print s'first\" \" = 4\"\n-gdb_test \"print s'last\"  \" = 5\"\n-gdb_test \"print s(s'first) = 'c'\" \" = true\"\n-gdb_test \"print s(s'last) /= 'd'\" \" = false\"\n+         \".*Breakpoint \\[0-9\\]+, foo\\\\.p \\\\(s=.*\\\\) at .*foo.adb:\\[0-9\\]+.*\"\n+\n+with_test_prefix \"cont\" {\n+    gdb_test \"print s'first\" \" = 4\"\n+    gdb_test \"print s'last\"  \" = 5\"\n+    gdb_test \"print s(s'first) = 'c'\" \" = true\"\n+    gdb_test \"print s(s'last) /= 'd'\" \" = false\"\n+}"
    },
    {
      "sha": "a28049033161bf64cf05bbcba6c7c068aeef7a04",
      "filename": "gdb/testsuite/gdb.ada/bp_on_var.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/bp_on_var.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/bp_on_var.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/bp_on_var.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -28,7 +28,7 @@ clean_restart ${testfile}\n # We are going to insert breakpoints using locations that are invalid.\n # Set \"breakpoint pending\" to \"off\" in order to avoid having to deal\n # with GDB asking whether to insert a pending breakpoint or not.\n-gdb_test_no_output \"set breakpoint pending off\"\n+gdb_test_no_output \"set breakpoint pending off\" \"disable pending breakpoints\"\n \n gdb_test \"break pck.my_global_variable\" \\\n          \"Function \\\"pck\\\\.my_global_variable\\\" not defined\\\\.\"\n@@ -38,7 +38,8 @@ gdb_test \"break pck.my_global_variable\" \\\n \n clean_restart ${testfile}\n \n-gdb_test_no_output \"set breakpoint pending off\"\n+gdb_test_no_output \"set breakpoint pending off\" \\\n+    \"disable pending breakpoints after restart\"\n \n gdb_test \"break pck.my_hidden_variable\" \\\n          \"Function \\\"pck\\\\.my_hidden_variable\\\" not defined\\\\.\""
    },
    {
      "sha": "7d07eba6b5a88f9acf25869ee3ab20584fa60a04",
      "filename": "gdb/testsuite/gdb.ada/call_pn.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/call_pn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/call_pn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/call_pn.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -68,7 +68,7 @@ gdb_test_multiple \"print last_node_id\" \"print last_node_id before calling pn\" {\n # Now, call procedure Pn, which should set Last_Node_Id to the value\n # of the parameter used in the function call.  Verify that we can print\n # the returned value correctly, while we're at it.\n-gdb_test \"print pn (4321)\" \"= 4321\"\n+gdb_test \"print pn(4321)\" \"= 4321\"\n \n # Make sure that last_node_id now has the correct value...\n gdb_test_multiple \"print last_node_id\" \"print last_node_id after calling pn\" {"
    },
    {
      "sha": "f2149daefec7c2b229efd9409721033947f612ec",
      "filename": "gdb/testsuite/gdb.ada/complete.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/complete.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/complete.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/complete.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -31,9 +31,13 @@ set eol \"\\[\\r\\n\\]*\"\n # A convenience function that verifies that the \"complete EXPR\" command\n # returns the EXPECTED_OUTPUT.\n \n-proc test_gdb_complete { expr expected_output } {\n+proc test_gdb_complete { expr expected_output {msg \"\"} } {\n+    set cmd \"complete p $expr\"\n+    if {$msg == \"\"} {\n+\tset msg $cmd\n+    }\n     gdb_test \"complete p $expr\" \\\n-             \"$expected_output\"\n+             \"$expected_output\" $msg\n }\n \n # A convenience function that verifies that the \"complete EXPR\" command\n@@ -60,7 +64,8 @@ test_gdb_no_completion \"inner.insi\"\n \n # An incomplete nested package name, were lies a single symbol:\n test_gdb_complete \"pck.inne\" \\\n-                  \"p pck.inner.inside_variable\"\n+                  \"p pck.inner.inside_variable\" \\\n+                  \"complete nested package name\"\n \n # A fully qualified symbol name, mangled...\n test_gdb_complete \"pck__inner__ins\" \\\n@@ -118,7 +123,8 @@ test_gdb_complete \"pck.my\" \\\n \n # A fully qualified package name\n test_gdb_complete \"pck.inne\" \\\n-                  \"p pck.inner.inside_variable\"\n+    \"p pck.inner.inside_variable\" \\\n+    \"complete fully qualified package name\"\n \n # A fully qualified package name, with a dot at the end\n test_gdb_complete \"pck.inner.\" \\"
    },
    {
      "sha": "47a25efae64f713fded4bac1b44d5d428e55392c",
      "filename": "gdb/testsuite/gdb.ada/fun_overload_menu.exp",
      "status": "modified",
      "additions": 22,
      "deletions": 16,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/fun_overload_menu.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/fun_overload_menu.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/fun_overload_menu.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -32,7 +32,7 @@ proc test_menu {expr function menu_entries selection output} {\n                          \"\\\\\\[0\\\\\\] cancel\" \\\n                          \"$menu_entries\" \\\n                          \"> $\"]\n-    set test_name \"multiple matches for $function ($expr)\"\n+    set test_name \"multiple matches for $function {$expr}\"\n     gdb_test_multiple \"print $expr\" \"$test_name\" \\\n     {\n         -re \"$menu\" {\n@@ -49,23 +49,29 @@ proc test_menu {expr function menu_entries selection output} {\n # Check that function signatures in overload menus are displayed as expected.\n \n # 1. Test with overloaded functions\n-test_menu \"f (1, null)\" \"f\" \\\n-          [multi_line \\\n-           \"\\\\\\[1\\\\\\] foo\\.f \\\\(integer; foo\\.integer_access\\\\) return boolean at .*foo.adb:.*\" \\\n-           \"\\\\\\[2\\\\\\] foo\\.f \\\\(foo\\.new_integer; foo\\.integer_access\\\\) return boolean at .*foo.adb:.*\"] \\\n-          \"1\" \"= true\"\n+with_test_prefix \"func\" {\n+    test_menu \"f (1, null)\" \"f\" \\\n+\t[multi_line \\\n+\t     \"\\\\\\[1\\\\\\] foo\\.f \\\\(integer; foo\\.integer_access\\\\) return boolean at .*foo.adb:.*\" \\\n+\t     \"\\\\\\[2\\\\\\] foo\\.f \\\\(foo\\.new_integer; foo\\.integer_access\\\\) return boolean at .*foo.adb:.*\"] \\\n+\t\"1\" \"= true\"\n+}\n \n # 2. Test with overloaded procedures\n-test_menu \"p (1, null)\" \"p\" \\\n-          [multi_line \\\n-           \"\\\\\\[1\\\\\\] foo\\.p \\\\(integer; foo\\.integer_access\\\\) at .*foo.adb:.*\" \\\n-           \"\\\\\\[2\\\\\\] foo\\.p \\\\(foo\\.new_integer; foo\\.integer_access\\\\) at .*foo.adb:.*\" ] \\\n-          \"1\" \"= (void)\"\n+with_test_prefix \"proc\" {\n+    test_menu \"p (1, null)\" \"p\" \\\n+\t[multi_line \\\n+\t     \"\\\\\\[1\\\\\\] foo\\.p \\\\(integer; foo\\.integer_access\\\\) at .*foo.adb:.*\" \\\n+\t     \"\\\\\\[2\\\\\\] foo\\.p \\\\(foo\\.new_integer; foo\\.integer_access\\\\) at .*foo.adb:.*\" ] \\\n+\t\"1\" \"= (void)\"\n+}\n \n # 3. Test with signatures disabled\n gdb_test \"set ada print-signatures off\" \"\"\n-test_menu \"f (1, null)\" \"f\" \\\n-          [multi_line \\\n-           \"\\\\\\[1\\\\\\] foo\\.f at .*foo.adb:.*\" \\\n-           \"\\\\\\[2\\\\\\] foo\\.f at .*foo.adb:.*\"] \\\n-          \"1\" \"= true\"\n+with_test_prefix \"signatures disabled\" {\n+    test_menu \"f (1, null)\" \"f\" \\\n+\t[multi_line \\\n+\t     \"\\\\\\[1\\\\\\] foo\\.f at .*foo.adb:.*\" \\\n+\t     \"\\\\\\[2\\\\\\] foo\\.f at .*foo.adb:.*\"] \\\n+\t\"1\" \"= true\"\n+}"
    },
    {
      "sha": "7e621f1bdf7943fe3eef0ea6fc8edad74562c6d2",
      "filename": "gdb/testsuite/gdb.ada/funcall_param.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/funcall_param.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/funcall_param.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/funcall_param.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -30,4 +30,4 @@ runto \"foo.adb:$bp_location\"\n # class-wide.\n \n gdb_test \"p ident (ident (my_parameter))\" \\\n-         \"= \\\\(one => 1, two => 2, three => 3\\\\)\"\n+         \"= \\\\(one => 1, two => 2, three => 3\\\\)\" \"value of ident\""
    },
    {
      "sha": "b3dc093753acaf0d73ca33b77d799892458d3270",
      "filename": "gdb/testsuite/gdb.ada/funcall_ref.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/funcall_ref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/funcall_ref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/funcall_ref.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -61,7 +61,7 @@ foreach_with_prefix scenario {all minimal} {\n \t\t\t    \"    s: access array \\\\(1 \\\\.\\\\. n\\\\) of character;\" \\\n \t\t\t    \"end record\"]\n     set supported 1\n-    gdb_test_multiple \"ptype get (\\\"Hello world!\\\")\" \"\" {\n+    gdb_test_multiple \"ptype get(\\\"Hello world!\\\")\" \"\" {\n \t-re -wrap $pass_re {\n \t    pass $gdb_test_name\n \t}\n@@ -82,6 +82,6 @@ foreach_with_prefix scenario {all minimal} {\n \treturn 0\n     }\n \n-    gdb_test \"p get (\\\"Hello world!\\\")\" \\\n+    gdb_test \"p get(\\\"Hello world!\\\")\" \\\n \t\"= \\\\(n => 12, s => \\\"Hello world!\\\"\\\\)\"\n }"
    },
    {
      "sha": "3c49099d4ac6218ddca9a400815a707c04aba6c7",
      "filename": "gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/packed_array_assign.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -27,12 +27,14 @@ runto \"aggregates.run_test\"\n \n gdb_test \\\n     \"print pra := ((packed_array_assign_x => 2, packed_array_assign_y => 0, packed_array_assign_w => 17), pr, (packed_array_assign_x => 7, packed_array_assign_y => 1, packed_array_assign_w => 23))\" \\\n-    \" = \\\\(\\\\(packed_array_assign_w => 17, packed_array_assign_x => 2, packed_array_assign_y => 0\\\\), \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\), \\\\(packed_array_assign_w => 23, packed_array_assign_x => 7, packed_array_assign_y => 1\\\\)\\\\)\"\n+    \" = \\\\(\\\\(packed_array_assign_w => 17, packed_array_assign_x => 2, packed_array_assign_y => 0\\\\), \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\), \\\\(packed_array_assign_w => 23, packed_array_assign_x => 7, packed_array_assign_y => 1\\\\)\\\\)\" \\\n+    \"value of pra\"\n \n gdb_test \"print pra(1) := pr\" \\\n     \" = \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\)\"\n gdb_test \"print pra(1)\" \\\n     \" = \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\)\"\n \n gdb_test \"print npr := (q000 => 3, r000 => (packed_array_assign_x => 6, packed_array_assign_y => 1, packed_array_assign_w => 117))\" \\\n-    \" = \\\\(q000 => 3, r000 => \\\\(packed_array_assign_w => 117, packed_array_assign_x => 6, packed_array_assign_y => 1\\\\)\\\\)\"\n+    \" = \\\\(q000 => 3, r000 => \\\\(packed_array_assign_w => 117, packed_array_assign_x => 6, packed_array_assign_y => 1\\\\)\\\\)\" \\\n+    \"value of npr\""
    },
    {
      "sha": "492549d67be124ab4a172b9fd1b10fae001621a9",
      "filename": "gdb/testsuite/gdb.ada/same_component_name.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/same_component_name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/same_component_name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/same_component_name.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -56,7 +56,7 @@ gdb_test \"print obj.a\" \" = 48\" \\\n \n gdb_test \"continue\" \\\n          \".*Breakpoint $decimal, pck.assign \\\\(.*\\\\).*\" \\\n-         \"continue to bottom assign breakpoint (2nd time)\"\n+         \"continue to bottom assign breakpoint, 2nd time\"\n \n gdb_test \"print obj.x\" \" = 6\" \\\n          \"Print field existing only in bottom component\""
    },
    {
      "sha": "830108cf54cd3c2c39de42223154f2a9fb0a3e58",
      "filename": "gdb/testsuite/gdb.ada/type_coercion.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/type_coercion.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/type_coercion.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/type_coercion.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -27,7 +27,7 @@ set bp_location [gdb_get_line_number \"START\" ${testdir}/assign.adb]\n runto \"assign.adb:$bp_location\"\n \n gdb_test \"p q\" \\\n-         \"= \\\\(2, 3, 5, 7, 11\\\\)\"\n+         \"= \\\\(2, 3, 5, 7, 11\\\\)\" \"initial value of q\"\n \n gdb_test_no_output \"set \\$addr := q'address\" \\\n          \"save q'address in convenience variable\"\n@@ -42,4 +42,4 @@ gdb_test_no_output \"set {Integer} \\$addr := 19\" \\\n          \"set {Integer} \\$addr := 19\"\n \n gdb_test \"p q\" \\\n-         \"= \\\\(19, 3, 5, 7, 11\\\\)\"\n+         \"= \\\\(19, 3, 5, 7, 11\\\\)\" \"modified value of q\""
    },
    {
      "sha": "3d78429559c69785c67d6104aac1a91e89795c49",
      "filename": "gdb/testsuite/gdb.ada/unc_arr_ptr_in_var_rec.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/unc_arr_ptr_in_var_rec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/unc_arr_ptr_in_var_rec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unc_arr_ptr_in_var_rec.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -64,7 +64,7 @@ gdb_test \"print my_object\" \\\n \n gdb_test \"print my_object.ptr\" \\\n          \"\\\\(foo.table_access\\\\) $hex\" \\\n-         \"print My_P_Object.Ptr when no longer null\"\n+         \"print my_object.ptr when no longer null\"\n \n gdb_test \"print my_object.ptr.all\" \\\n          \"= \\\\(13, 21, 34\\\\)\""
    },
    {
      "sha": "0530df54d4ec4942a3ba0aecb87ef439de6c2220",
      "filename": "gdb/testsuite/gdb.ada/variant_record_packed_array.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/variant_record_packed_array.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba3e70b008d63b13207339443ad3b9a61ab996bc/gdb/testsuite/gdb.ada/variant_record_packed_array.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/variant_record_packed_array.exp?ref=ba3e70b008d63b13207339443ad3b9a61ab996bc",
      "patch": "@@ -40,7 +40,7 @@ gdb_test \"print my_buffer'Address\" \\\n     \"= \\\\(system\\\\.address\\\\) $hex\" \\\n     \"print address\"\n \n-set test \"print {foo.octal_buffer} ($)\"\n+set test \"print {foo.octal_buffer}($)\"\n gdb_test_multiple \"$test\" $test {\n     -re \"= \\\\(size => 8, buffer => \\\\(1, 2, 3, 4, 5, 6, 7, 0\\\\), length => 8\\\\)\\[\\r\\n\\]+$gdb_prompt $\" {\n         pass $test"
    }
  ]
}