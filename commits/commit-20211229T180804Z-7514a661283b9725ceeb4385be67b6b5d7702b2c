{
  "sha": "7514a661283b9725ceeb4385be67b6b5d7702b2c",
  "node_id": "C_kwDOANOeidoAKDc1MTRhNjYxMjgzYjk3MjVjZWViNDM4NWJlNjdiNmI1ZDc3MDJiMmM",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-28T21:10:11Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-29T18:08:04Z"
    },
    "message": "Consistently Use ui_file parameter to show callbacks\n\nI happened to notice that one \"show\" callback was printing to\ngdb_stdout rather than to the passed-in ui_file parameter.  I went\nthrough all such callbacks and fixed them to consistently use the\nui_file.\n\nRegression tested on x86-64 Fedora 34.",
    "tree": {
      "sha": "ec1a988096fef8b15609413267729f3a0b7c7194",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ec1a988096fef8b15609413267729f3a0b7c7194"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7514a661283b9725ceeb4385be67b6b5d7702b2c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7514a661283b9725ceeb4385be67b6b5d7702b2c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7514a661283b9725ceeb4385be67b6b5d7702b2c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7514a661283b9725ceeb4385be67b6b5d7702b2c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "de4686ffaff8bade61657078990f392b3aa14ff4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de4686ffaff8bade61657078990f392b3aa14ff4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/de4686ffaff8bade61657078990f392b3aa14ff4"
    }
  ],
  "stats": {
    "total": 88,
    "additions": 46,
    "deletions": 42
  },
  "files": [
    {
      "sha": "bad4d1a22e923a8d09ed26ddce9aeeb2986a789c",
      "filename": "gdb/cli/cli-logging.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/cli/cli-logging.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/cli/cli-logging.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-logging.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -181,9 +181,9 @@ show_logging_enabled (struct ui_file *file, int from_tty,\n \t\t       struct cmd_list_element *c, const char *value)\n {\n   if (logging_enabled)\n-    printf_unfiltered (_(\"Logging is enabled.\\n\"));\n+    fprintf_unfiltered (file, _(\"Logging is enabled.\\n\"));\n   else\n-    printf_unfiltered (_(\"Logging is disabled.\\n\"));\n+    fprintf_unfiltered (file, _(\"Logging is disabled.\\n\"));\n }\n \n void _initialize_cli_logging ();"
    },
    {
      "sha": "633cfdb6aea76efc0124cbb3439e771b8431a5e2",
      "filename": "gdb/debuginfod-support.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/debuginfod-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/debuginfod-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/debuginfod-support.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -299,8 +299,9 @@ static void\n show_debuginfod_enabled (ui_file *file, int from_tty, cmd_list_element *cmd,\n \t\t\t const char *value)\n {\n-  printf_unfiltered (_(\"Debuginfod functionality is currently set to \"\n-\t\t       \"\\\"%s\\\".\\n\"), debuginfod_enabled);\n+  fprintf_unfiltered (file,\n+\t\t      _(\"Debuginfod functionality is currently set to \"\n+\t\t\t\"\\\"%s\\\".\\n\"), debuginfod_enabled);\n }\n \n /* Set callback for \"set debuginfod urls\".  */"
    },
    {
      "sha": "3d4cbdfcf45b5238554500b7aa5cdfe566f2fae5",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -102,7 +102,7 @@ static void\n show_exec_file_mismatch_command (struct ui_file *file, int from_tty,\n \t\t\t\t struct cmd_list_element *c, const char *value)\n {\n-  fprintf_filtered (gdb_stdout,\n+  fprintf_filtered (file,\n \t\t    _(\"exec-file-mismatch handling is currently \\\"%s\\\".\\n\"),\n \t\t    exec_file_mismatch_names[exec_file_mismatch_mode]);\n }"
    },
    {
      "sha": "d00a70c4361d26c106c3604d28c23843a4a6175a",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -117,7 +117,7 @@ show_inferior_tty_command (struct ui_file *file, int from_tty,\n      directly.  */\n   const std::string &inferior_tty = current_inferior ()->tty ();\n \n-  fprintf_filtered (gdb_stdout,\n+  fprintf_filtered (file,\n \t\t    _(\"Terminal for future runs of program being debugged \"\n \t\t      \"is \\\"%s\\\".\\n\"), inferior_tty.c_str ());\n }\n@@ -177,13 +177,13 @@ show_cwd_command (struct ui_file *file, int from_tty,\n   const std::string &cwd = current_inferior ()->cwd ();\n \n   if (cwd.empty ())\n-    fprintf_filtered (gdb_stdout,\n+    fprintf_filtered (file,\n \t\t      _(\"\\\n You have not set the inferior's current working directory.\\n\\\n The inferior will inherit GDB's cwd if native debugging, or the remote\\n\\\n server's cwd if remote debugging.\\n\"));\n   else\n-    fprintf_filtered (gdb_stdout,\n+    fprintf_filtered (file,\n \t\t      _(\"Current working directory that will be used \"\n \t\t\t\"when starting the inferior is \\\"%s\\\".\\n\"),\n \t\t      cwd.c_str ());"
    },
    {
      "sha": "c4068ec446e27374040e6a0bb48d22b9c78e5b05",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -114,12 +114,12 @@ show_language_command (struct ui_file *file, int from_tty,\n   enum language flang;\t\t/* The language of the frame.  */\n \n   if (language_mode == language_mode_auto)\n-    fprintf_filtered (gdb_stdout,\n+    fprintf_filtered (file,\n \t\t      _(\"The current source language is \"\n \t\t\t\"\\\"auto; currently %s\\\".\\n\"),\n \t\t      current_language->name ());\n   else\n-    fprintf_filtered (gdb_stdout,\n+    fprintf_filtered (file,\n \t\t      _(\"The current source language is \\\"%s\\\".\\n\"),\n \t\t      current_language->name ());\n \n@@ -132,7 +132,7 @@ show_language_command (struct ui_file *file, int from_tty,\n       if (flang != language_unknown\n \t  && language_mode == language_mode_manual\n \t  && current_language->la_language != flang)\n-\tprintf_filtered (\"%s\\n\", _(lang_frame_mismatch_warn));\n+\tfprintf_filtered (file, \"%s\\n\", _(lang_frame_mismatch_warn));\n     }\n }\n \n@@ -220,12 +220,12 @@ show_range_command (struct ui_file *file, int from_tty,\n \t\t\t  \"Unrecognized range check setting.\");\n \t}\n \n-      fprintf_filtered (gdb_stdout,\n+      fprintf_filtered (file,\n \t\t\t_(\"Range checking is \\\"auto; currently %s\\\".\\n\"),\n \t\t\ttmp);\n     }\n   else\n-    fprintf_filtered (gdb_stdout, _(\"Range checking is \\\"%s\\\".\\n\"),\n+    fprintf_filtered (file, _(\"Range checking is \\\"%s\\\".\\n\"),\n \t\t      value);\n \n   if (range_check == range_check_warn\n@@ -296,13 +296,13 @@ show_case_command (struct ui_file *file, int from_tty,\n \t\t\t  \"Unrecognized case-sensitive setting.\");\n \t}\n \n-      fprintf_filtered (gdb_stdout,\n+      fprintf_filtered (file,\n \t\t\t_(\"Case sensitivity in \"\n \t\t\t  \"name search is \\\"auto; currently %s\\\".\\n\"),\n \t\t\ttmp);\n     }\n   else\n-    fprintf_filtered (gdb_stdout,\n+    fprintf_filtered (file,\n \t\t      _(\"Case sensitivity in name search is \\\"%s\\\".\\n\"),\n \t\t      value);\n "
    },
    {
      "sha": "d30487ae87b1b3727956c668ab66605de3110cd5",
      "filename": "gdb/mips-tdep.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/mips-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/mips-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -1190,14 +1190,15 @@ show_mask_address (struct ui_file *file, int from_tty,\n   switch (mask_address_var)\n     {\n     case AUTO_BOOLEAN_TRUE:\n-      printf_filtered (\"The 32 bit mips address mask is enabled\\n\");\n+      fprintf_filtered (file, \"The 32 bit mips address mask is enabled\\n\");\n       break;\n     case AUTO_BOOLEAN_FALSE:\n-      printf_filtered (\"The 32 bit mips address mask is disabled\\n\");\n+      fprintf_filtered (file, \"The 32 bit mips address mask is disabled\\n\");\n       break;\n     case AUTO_BOOLEAN_AUTO:\n-      printf_filtered\n-\t(\"The 32 bit address mask is set automatically.  Currently %s\\n\",\n+      fprintf_filtered\n+\t(file,\n+\t \"The 32 bit address mask is set automatically.  Currently %s\\n\",\n \t mips_mask_address_p (tdep) ? \"enabled\" : \"disabled\");\n       break;\n     default:"
    },
    {
      "sha": "b2f07cb1870cd580b8d85c0a726a9b0f2fab5992",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -2956,7 +2956,7 @@ static void\n cmd_show_replay_memory_access (struct ui_file *file, int from_tty,\n \t\t\t       struct cmd_list_element *c, const char *value)\n {\n-  fprintf_filtered (gdb_stdout, _(\"Replay memory access is %s.\\n\"),\n+  fprintf_filtered (file, _(\"Replay memory access is %s.\\n\"),\n \t\t    replay_memory_access);\n }\n "
    },
    {
      "sha": "78573d945d4c105d54898405ad191cb2d9be09a1",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -1065,8 +1065,6 @@ static int stub_unpack_int (const char *buff, int fieldlength);\n \n struct packet_config;\n \n-static void show_packet_config_cmd (struct packet_config *config);\n-\n static void show_remote_protocol_packet_cmd (struct ui_file *file,\n \t\t\t\t\t     int from_tty,\n \t\t\t\t\t     struct cmd_list_element *c,\n@@ -1913,7 +1911,7 @@ static enum packet_support packet_config_support (struct packet_config *config);\n static enum packet_support packet_support (int packet);\n \n static void\n-show_packet_config_cmd (struct packet_config *config)\n+show_packet_config_cmd (ui_file *file, struct packet_config *config)\n {\n   const char *support = \"internal-error\";\n \n@@ -1932,14 +1930,16 @@ show_packet_config_cmd (struct packet_config *config)\n   switch (config->detect)\n     {\n     case AUTO_BOOLEAN_AUTO:\n-      printf_filtered (_(\"Support for the `%s' packet \"\n-\t\t\t \"is auto-detected, currently %s.\\n\"),\n-\t\t       config->name, support);\n+      fprintf_filtered (file,\n+\t\t\t_(\"Support for the `%s' packet \"\n+\t\t\t  \"is auto-detected, currently %s.\\n\"),\n+\t\t\tconfig->name, support);\n       break;\n     case AUTO_BOOLEAN_TRUE:\n     case AUTO_BOOLEAN_FALSE:\n-      printf_filtered (_(\"Support for the `%s' packet is currently %s.\\n\"),\n-\t\t       config->name, support);\n+      fprintf_filtered (file,\n+\t\t\t_(\"Support for the `%s' packet is currently %s.\\n\"),\n+\t\t\tconfig->name, support);\n       break;\n     }\n }\n@@ -2275,7 +2275,7 @@ show_remote_protocol_packet_cmd (struct ui_file *file, int from_tty,\n     {\n       if (c == packet->show_cmd)\n \t{\n-\t  show_packet_config_cmd (packet);\n+\t  show_packet_config_cmd (file, packet);\n \t  return;\n \t}\n     }\n@@ -2319,7 +2319,7 @@ show_remote_protocol_Z_packet_cmd (struct ui_file *file, int from_tty,\n \n   for (i = 0; i < NR_Z_PACKET_TYPES; i++)\n     {\n-      show_packet_config_cmd (&remote_protocol_packets[PACKET_Z0 + i]);\n+      show_packet_config_cmd (file, &remote_protocol_packets[PACKET_Z0 + i]);\n     }\n }\n "
    },
    {
      "sha": "f2f116091b3b9cf6a721900b1f2f0466312cc87e",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -400,11 +400,11 @@ set_directories_command (const char *args,\n    function.  */\n \n static void\n-show_directories_1 (char *ignore, int from_tty)\n+show_directories_1 (ui_file *file, char *ignore, int from_tty)\n {\n-  puts_filtered (\"Source directories searched: \");\n-  puts_filtered (source_path.c_str ());\n-  puts_filtered (\"\\n\");\n+  fputs_filtered (\"Source directories searched: \", file);\n+  fputs_filtered (source_path.c_str (), file);\n+  fputs_filtered (\"\\n\", file);\n }\n \n /* Handler for \"show directories\" command.  */\n@@ -413,7 +413,7 @@ static void\n show_directories_command (struct ui_file *file, int from_tty,\n \t\t\t  struct cmd_list_element *c, const char *value)\n {\n-  show_directories_1 (NULL, from_tty);\n+  show_directories_1 (file, NULL, from_tty);\n }\n \n /* See source.h.  */\n@@ -485,7 +485,7 @@ directory_command (const char *dirname, int from_tty)\n       gdb::observers::command_param_changed.notify (\"directories\",\n \t\t\t\t\t\t    source_path.c_str ());\n       if (from_tty)\n-\tshow_directories_1 ((char *) 0, from_tty);\n+\tshow_directories_1 (gdb_stdout, (char *) 0, from_tty);\n     }\n }\n "
    },
    {
      "sha": "ffbfe3559497a6bd1efb9effb91dbeab3237f01d",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -1303,11 +1303,13 @@ show_tdesc_filename_cmd (struct ui_file *file, int from_tty,\n   value = get_tdesc_info (current_inferior ())->filename.data ();\n \n   if (value != NULL && *value != '\\0')\n-    printf_filtered (_(\"The target description will be read from \\\"%s\\\".\\n\"),\n-\t\t     value);\n+    fprintf_filtered (file,\n+\t\t      _(\"The target description will be read from \\\"%s\\\".\\n\"),\n+\t\t      value);\n   else\n-    printf_filtered (_(\"The target description will be \"\n-\t\t       \"read from the target.\\n\"));\n+    fprintf_filtered (file,\n+\t\t      _(\"The target description will be \"\n+\t\t\t\"read from the target.\\n\"));\n }\n \n static void"
    },
    {
      "sha": "d92c5fcad18ae434d75e30f32afe4636f1c27ac3",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7514a661283b9725ceeb4385be67b6b5d7702b2c/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=7514a661283b9725ceeb4385be67b6b5d7702b2c",
      "patch": "@@ -790,7 +790,7 @@ static void\n tui_show_tab_width (struct ui_file *file, int from_tty,\n \t\t    struct cmd_list_element *c, const char *value)\n {\n-  fprintf_filtered (gdb_stdout, _(\"TUI tab width is %s spaces.\\n\"), value);\n+  fprintf_filtered (file, _(\"TUI tab width is %s spaces.\\n\"), value);\n \n }\n \n@@ -814,7 +814,7 @@ static void\n tui_show_compact_source (struct ui_file *file, int from_tty,\n \t\t\t struct cmd_list_element *c, const char *value)\n {\n-  printf_filtered (_(\"TUI source window compactness is %s.\\n\"), value);\n+  fprintf_filtered (file, _(\"TUI source window compactness is %s.\\n\"), value);\n }\n \n /* Set the tab width of the specified window.  */"
    }
  ]
}