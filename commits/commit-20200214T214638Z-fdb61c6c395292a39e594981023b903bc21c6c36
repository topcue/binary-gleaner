{
  "sha": "fdb61c6c395292a39e594981023b903bc21c6c36",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmRiNjFjNmMzOTUyOTJhMzllNTk0OTgxMDIzYjkwM2JjMjFjNmMzNg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-02-14T21:45:40Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-02-14T21:46:38Z"
    },
    "message": "gdb: introduce displaced_step_closure_up type alias\n\nTo help with readability, add the type displaced_step_closure_up, an\nalias for std::unique_ptr<displaced_step_closure>, and use it throughout\nthe code base.\n\ngdb/ChangeLog:\n\n\t* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Use\n\tdisplaced_step_closure_up.\n\t* aarch64-tdep.h (aarch64_displaced_step_copy_insn): Likewise.\n\t(struct displaced_step_closure_up):\n\t* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.\n\t* amd64-tdep.h (amd64_displaced_step_copy_insn): Likewise.\n\t* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn):\n\tLikewise.\n\t* gdbarch.sh (displaced_step_copy_insn): Likewise.\n\t* gdbarch.c, gdbarch.h: Re-generate.\n\t* i386-linux-tdep.c (i386_linux_displaced_step_copy_insn): Use\n\tdisplaced_step_closure_up.\n\t* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.\n\t* i386-tdep.h (i386_displaced_step_copy_insn): Likewise.\n\t* infrun.h (displaced_step_closure_up): New type alias.\n\t(struct displaced_step_inferior_state) <step_closure>: Change\n\ttype to displaced_step_closure_up.\n\t* rs6000-tdep.c (ppc_displaced_step_copy_insn): Use\n\tdisplaced_step_closure_up.\n\t* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.",
    "tree": {
      "sha": "a64cfd188ab715c02dc4b7ec4a027ffae5f90763",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a64cfd188ab715c02dc4b7ec4a027ffae5f90763"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fdb61c6c395292a39e594981023b903bc21c6c36",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fdb61c6c395292a39e594981023b903bc21c6c36",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fdb61c6c395292a39e594981023b903bc21c6c36",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fdb61c6c395292a39e594981023b903bc21c6c36/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1a627e7e6c61e97951932e3a9c5fb706efe3ef3e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a627e7e6c61e97951932e3a9c5fb706efe3ef3e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1a627e7e6c61e97951932e3a9c5fb706efe3ef3e"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 46,
    "deletions": 18
  },
  "files": [
    {
      "sha": "dafd90ec37302bb0c0b72135a58b234de221c902",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -1,3 +1,26 @@\n+2020-02-14  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* aarch64-tdep.c (aarch64_displaced_step_copy_insn): Use\n+\tdisplaced_step_closure_up.\n+\t* aarch64-tdep.h (aarch64_displaced_step_copy_insn): Likewise.\n+\t(struct displaced_step_closure_up):\n+\t* amd64-tdep.c (amd64_displaced_step_copy_insn): Likewise.\n+\t* amd64-tdep.h (amd64_displaced_step_copy_insn): Likewise.\n+\t* arm-linux-tdep.c (arm_linux_displaced_step_copy_insn):\n+\tLikewise.\n+\t* gdbarch.sh (displaced_step_copy_insn): Likewise.\n+\t* gdbarch.c, gdbarch.h: Re-generate.\n+\t* i386-linux-tdep.c (i386_linux_displaced_step_copy_insn): Use\n+\tdisplaced_step_closure_up.\n+\t* i386-tdep.c (i386_displaced_step_copy_insn): Likewise.\n+\t* i386-tdep.h (i386_displaced_step_copy_insn): Likewise.\n+\t* infrun.h (displaced_step_closure_up): New type alias.\n+\t(struct displaced_step_inferior_state) <step_closure>: Change\n+\ttype to displaced_step_closure_up.\n+\t* rs6000-tdep.c (ppc_displaced_step_copy_insn): Use\n+\tdisplaced_step_closure_up.\n+\t* s390-tdep.c (s390_displaced_step_copy_insn): Likewise.\n+\n 2020-02-14  Tom Tromey  <tom@tromey.com>\n \n \t* minidebug.c (gnu_debug_key): New global."
    },
    {
      "sha": "bfacfb05b213ca6e57a797743234d02406853bd3",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -2999,7 +2999,7 @@ static const struct aarch64_insn_visitor visitor =\n \n /* Implement the \"displaced_step_copy_insn\" gdbarch method.  */\n \n-std::unique_ptr<displaced_step_closure>\n+displaced_step_closure_up\n aarch64_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t\t  CORE_ADDR from, CORE_ADDR to,\n \t\t\t\t  struct regcache *regs)"
    },
    {
      "sha": "f6ebabeaeb95b49010c0e70cfd9ca714e554a52f",
      "filename": "gdb/aarch64-tdep.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/aarch64-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/aarch64-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.h?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -23,6 +23,7 @@\n #define AARCH64_TDEP_H\n \n #include \"arch/aarch64.h\"\n+#include \"infrun.h\"\n \n /* Forward declarations.  */\n struct gdbarch;\n@@ -106,7 +107,7 @@ const target_desc *aarch64_read_description (uint64_t vq, bool pauth_p);\n extern int aarch64_process_record (struct gdbarch *gdbarch,\n                                struct regcache *regcache, CORE_ADDR addr);\n \n-struct std::unique_ptr<displaced_step_closure>\n+displaced_step_closure_up\n   aarch64_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t\t    CORE_ADDR from, CORE_ADDR to,\n \t\t\t\t    struct regcache *regs);"
    },
    {
      "sha": "9264fe4026d44ec2349f8b5e1c16e0473ddac371",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -1465,7 +1465,7 @@ fixup_displaced_copy (struct gdbarch *gdbarch,\n     }\n }\n \n-std::unique_ptr<displaced_step_closure>\n+displaced_step_closure_up\n amd64_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t\tCORE_ADDR from, CORE_ADDR to,\n \t\t\t\tstruct regcache *regs)"
    },
    {
      "sha": "44c1250cb915cfce71ee15ded244069ac9c5adb2",
      "filename": "gdb/amd64-tdep.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/amd64-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/amd64-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.h?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -26,6 +26,7 @@ struct frame_info;\n struct regcache;\n \n #include \"i386-tdep.h\"\n+#include \"infrun.h\"\n \n /* Register numbers of various important registers.  */\n \n@@ -87,7 +88,7 @@ enum amd64_regnum\n \n #define AMD64_NUM_REGS\t\t(AMD64_GSBASE_REGNUM + 1)\n \n-extern std::unique_ptr<displaced_step_closure> amd64_displaced_step_copy_insn\n+extern displaced_step_closure_up amd64_displaced_step_copy_insn\n   (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to,\n    struct regcache *regs);\n extern void amd64_displaced_step_fixup (struct gdbarch *gdbarch,"
    },
    {
      "sha": "ccb556babb087c03207488fb1a8c457da5b8d43f",
      "filename": "gdb/arm-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/arm-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/arm-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-linux-tdep.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -1103,7 +1103,7 @@ arm_catch_kernel_helper_return (struct gdbarch *gdbarch, CORE_ADDR from,\n    the program has stepped into a Linux kernel helper routine (which must be\n    handled as a special case).  */\n \n-static std::unique_ptr<displaced_step_closure>\n+static displaced_step_closure_up\n arm_linux_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t\t    CORE_ADDR from, CORE_ADDR to,\n \t\t\t\t    struct regcache *regs)"
    },
    {
      "sha": "e7d4ccca9e7d6ebaa0a4dc37add2929ad2026613",
      "filename": "gdb/gdbarch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/gdbarch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/gdbarch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -3936,7 +3936,7 @@ gdbarch_displaced_step_copy_insn_p (struct gdbarch *gdbarch)\n   return gdbarch->displaced_step_copy_insn != NULL;\n }\n \n-std::unique_ptr<displaced_step_closure>\n+displaced_step_closure_up\n gdbarch_displaced_step_copy_insn (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to, struct regcache *regs)\n {\n   gdb_assert (gdbarch != NULL);"
    },
    {
      "sha": "0259fcdbfd26cd5947582b117714adefda0ba58d",
      "filename": "gdb/gdbarch.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/gdbarch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/gdbarch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.h?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -39,6 +39,7 @@\n #include \"frame.h\"\n #include \"dis-asm.h\"\n #include \"gdb_obstack.h\"\n+#include \"infrun.h\"\n \n struct floatformat;\n struct ui_file;\n@@ -55,7 +56,6 @@ struct obstack;\n struct bp_target_info;\n struct target_desc;\n struct symbol;\n-struct displaced_step_closure;\n struct syscall;\n struct agent_expr;\n struct axs_value;\n@@ -1036,8 +1036,8 @@ extern void set_gdbarch_max_insn_length (struct gdbarch *gdbarch, ULONGEST max_i\n \n extern int gdbarch_displaced_step_copy_insn_p (struct gdbarch *gdbarch);\n \n-typedef std::unique_ptr<displaced_step_closure> (gdbarch_displaced_step_copy_insn_ftype) (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to, struct regcache *regs);\n-extern std::unique_ptr<displaced_step_closure> gdbarch_displaced_step_copy_insn (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to, struct regcache *regs);\n+typedef displaced_step_closure_up (gdbarch_displaced_step_copy_insn_ftype) (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to, struct regcache *regs);\n+extern displaced_step_closure_up gdbarch_displaced_step_copy_insn (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to, struct regcache *regs);\n extern void set_gdbarch_displaced_step_copy_insn (struct gdbarch *gdbarch, gdbarch_displaced_step_copy_insn_ftype *displaced_step_copy_insn);\n \n /* Return true if GDB should use hardware single-stepping to execute"
    },
    {
      "sha": "4a4b1bc66cfac05f82194eee2648f42aef6ef579",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -816,7 +816,7 @@ V;ULONGEST;max_insn_length;;;0;0\n # If the instruction cannot execute out of line, return NULL.  The\n # core falls back to stepping past the instruction in-line instead in\n # that case.\n-M;std::unique_ptr<displaced_step_closure>;displaced_step_copy_insn;CORE_ADDR from, CORE_ADDR to, struct regcache *regs;from, to, regs\n+M;displaced_step_closure_up;displaced_step_copy_insn;CORE_ADDR from, CORE_ADDR to, struct regcache *regs;from, to, regs\n \n # Return true if GDB should use hardware single-stepping to execute\n # the displaced instruction identified by CLOSURE.  If false,\n@@ -1312,6 +1312,7 @@ cat <<EOF\n #include \"frame.h\"\n #include \"dis-asm.h\"\n #include \"gdb_obstack.h\"\n+#include \"infrun.h\"\n \n struct floatformat;\n struct ui_file;\n@@ -1328,7 +1329,6 @@ struct obstack;\n struct bp_target_info;\n struct target_desc;\n struct symbol;\n-struct displaced_step_closure;\n struct syscall;\n struct agent_expr;\n struct axs_value;"
    },
    {
      "sha": "c576b31956647839445adcbbfe8bed6dfee7dced",
      "filename": "gdb/i386-linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/i386-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/i386-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-linux-tdep.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -36,6 +36,7 @@\n #include \"symtab.h\"\n #include \"arch-utils.h\"\n #include \"xml-syscall.h\"\n+#include \"infrun.h\"\n \n #include \"i387-tdep.h\"\n #include \"gdbsupport/x86-xstate.h\"\n@@ -797,12 +798,12 @@ i386_linux_iterate_over_regset_sections (struct gdbarch *gdbarch,\n    which does not seem worth it.  The same effect is achieved by patching that\n    'nop' instruction there instead.  */\n \n-static std::unique_ptr<displaced_step_closure>\n+static displaced_step_closure_up\n i386_linux_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t\t     CORE_ADDR from, CORE_ADDR to,\n \t\t\t\t     struct regcache *regs)\n {\n-  std::unique_ptr<displaced_step_closure> closure_\n+  displaced_step_closure_up closure_\n     =  i386_displaced_step_copy_insn (gdbarch, from, to, regs);\n \n   if (i386_linux_get_syscall_number_from_regcache (regs) != -1)"
    },
    {
      "sha": "9771421c86b1ea115a9033fbaf4f3bc42ef06230",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -798,7 +798,7 @@ i386_insn_is_jump (struct gdbarch *gdbarch, CORE_ADDR addr)\n \n /* Some kernels may run one past a syscall insn, so we have to cope.  */\n \n-std::unique_ptr<displaced_step_closure>\n+displaced_step_closure_up\n i386_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t       CORE_ADDR from, CORE_ADDR to,\n \t\t\t       struct regcache *regs)"
    },
    {
      "sha": "fa29e316a19bd384bebf6cafe15dc33d68116bc6",
      "filename": "gdb/i386-tdep.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/i386-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/i386-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.h?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -428,7 +428,7 @@ extern void\n \n typedef buf_displaced_step_closure i386_displaced_step_closure;\n \n-extern std::unique_ptr<displaced_step_closure> i386_displaced_step_copy_insn\n+extern displaced_step_closure_up i386_displaced_step_copy_insn\n   (struct gdbarch *gdbarch, CORE_ADDR from, CORE_ADDR to,\n    struct regcache *regs);\n extern void i386_displaced_step_fixup (struct gdbarch *gdbarch,"
    },
    {
      "sha": "625c53a94a082d31a8d30a73441da1aaafebf51b",
      "filename": "gdb/infrun.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/infrun.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/infrun.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.h?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -265,6 +265,8 @@ struct displaced_step_closure\n   virtual ~displaced_step_closure () = 0;\n };\n \n+using displaced_step_closure_up = std::unique_ptr<displaced_step_closure>;\n+\n /* A simple displaced step closure that contains only a byte buffer.  */\n \n struct buf_displaced_step_closure : displaced_step_closure\n@@ -310,7 +312,7 @@ struct displaced_step_inferior_state\n \n   /* The closure provided gdbarch_displaced_step_copy_insn, to be used\n      for post-step cleanup.  */\n-  std::unique_ptr<displaced_step_closure> step_closure;\n+  displaced_step_closure_up step_closure;\n \n   /* The address of the original instruction, and the copy we\n      made.  */"
    },
    {
      "sha": "513ce6a34fcb404e2186def8562e4e0fa9ef86ca",
      "filename": "gdb/rs6000-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/rs6000-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/rs6000-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rs6000-tdep.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -855,7 +855,7 @@ typedef buf_displaced_step_closure ppc_displaced_step_closure;\n \n /* We can't displaced step atomic sequences.  */\n \n-static std::unique_ptr<displaced_step_closure>\n+static displaced_step_closure_up\n ppc_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t      CORE_ADDR from, CORE_ADDR to,\n \t\t\t      struct regcache *regs)"
    },
    {
      "sha": "51d0203231f5af3db52c6365653128278f5ca6ec",
      "filename": "gdb/s390-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/s390-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb61c6c395292a39e594981023b903bc21c6c36/gdb/s390-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-tdep.c?ref=fdb61c6c395292a39e594981023b903bc21c6c36",
      "patch": "@@ -425,7 +425,7 @@ typedef buf_displaced_step_closure s390_displaced_step_closure;\n \n /* Implementation of gdbarch_displaced_step_copy_insn.  */\n \n-static std::unique_ptr<displaced_step_closure>\n+static displaced_step_closure_up\n s390_displaced_step_copy_insn (struct gdbarch *gdbarch,\n \t\t\t       CORE_ADDR from, CORE_ADDR to,\n \t\t\t       struct regcache *regs)"
    }
  ]
}