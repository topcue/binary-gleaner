{
  "sha": "98e713abc69e9bd0232417dfadae339fa6113ee1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OThlNzEzYWJjNjllOWJkMDIzMjQxN2RmYWRhZTMzOWZhNjExM2VlMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-21T14:42:39Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-04-21T14:47:16Z"
    },
    "message": "testsuite, gdb.mi: fix duplicate test names in mi-break.exp\n\ngdb/testsuite/ChangeLog:\n2021-04-21  Simon Marchi  <simon.marchi@polymtl.ca>\n\t    Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.mi/mi-break.exp: Fix the duplicate test names.",
    "tree": {
      "sha": "20f03cc613414fb1a0509b6ad0d4205b810fe47b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/20f03cc613414fb1a0509b6ad0d4205b810fe47b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/98e713abc69e9bd0232417dfadae339fa6113ee1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/98e713abc69e9bd0232417dfadae339fa6113ee1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/98e713abc69e9bd0232417dfadae339fa6113ee1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/98e713abc69e9bd0232417dfadae339fa6113ee1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "85c88e2a79973660719be21dbec920fe32f285c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85c88e2a79973660719be21dbec920fe32f285c1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/85c88e2a79973660719be21dbec920fe32f285c1"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 14,
    "deletions": 9
  },
  "files": [
    {
      "sha": "353dde9168a0b05a352335a2b5dbc65ec3fa9fef",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/98e713abc69e9bd0232417dfadae339fa6113ee1/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/98e713abc69e9bd0232417dfadae339fa6113ee1/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=98e713abc69e9bd0232417dfadae339fa6113ee1",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-21  Simon Marchi  <simon.marchi@polymtl.ca>\n+\t    Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.mi/mi-break.exp: Fix the duplicate test names.\n+\n 2021-04-20  Felix Willgerodt  <felix.willgerodt@intel.com>\n \n \t* gdb.base/address_space_qualifier.exp: New file."
    },
    {
      "sha": "19438f21f6345f8347cb0be9f245b81e57f703fd",
      "filename": "gdb/testsuite/gdb.mi/mi-break.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/98e713abc69e9bd0232417dfadae339fa6113ee1/gdb/testsuite/gdb.mi/mi-break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/98e713abc69e9bd0232417dfadae339fa6113ee1/gdb/testsuite/gdb.mi/mi-break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-break.exp?ref=98e713abc69e9bd0232417dfadae339fa6113ee1",
      "patch": "@@ -46,7 +46,7 @@ set line_callme_body   [expr $line_callme_head + 2]\n \n set fullname \"fullname=\\\"${fullname_syntax}${srcfile}\\\"\"\n \n-proc test_tbreak_creation_and_listing {} {\n+proc_with_prefix test_tbreak_creation_and_listing {} {\n     global srcfile\n     global line_callee4_head\n     global line_callee4_body\n@@ -96,7 +96,7 @@ proc test_tbreak_creation_and_listing {} {\n \t    \"delete temp breakpoints\"\n }\n \n-proc test_rbreak_creation_and_listing {} {\n+proc_with_prefix test_rbreak_creation_and_listing {} {\n     global line_callee4_body\n     global line_callee3_body\n     global line_callee2_body\n@@ -165,7 +165,7 @@ proc test_rbreak_creation_and_listing {} {\n \t    \"delete temp breakpoints\"\n }\n \n-proc test_abreak_creation {} {\n+proc_with_prefix test_abreak_creation {} {\n     mi_create_varobj tpnum \\$tpnum \"create local variable tpnum\"\n     # Test that $tpnum is not set before creating a tracepoint.\n     mi_gdb_test \"521-var-evaluate-expression tpnum\" \\\n@@ -183,7 +183,7 @@ proc test_abreak_creation {} {\n \t\"524\\\\^done,value=\\\"10\\\"\" \"eval tpnum after tracepoint\"\n }\n \n-proc test_ignore_count {} {\n+proc_with_prefix test_ignore_count {} {\n     global line_callme_body\n \n     mi_gdb_test \"-break-insert -i 1 callme\" \\\n@@ -196,7 +196,7 @@ proc test_ignore_count {} {\n         {\"\" \"disp=\\\"keep\\\"\" } \"run to breakpoint with ignore count\"\n }\n \n-proc test_error {} {\n+proc_with_prefix test_error {} {\n     mi_gdb_test \"-break-insert function_that_does_not_exist\" \\\n         \".*\\\\^error,msg=\\\"Function \\\\\\\\\\\"function_that_does_not_exist\\\\\\\\\\\" not defined.\\\"\" \\\n         \"breakpoint at nonexistent function\"\n@@ -226,7 +226,7 @@ proc test_error {} {\n         \"conditional breakpoint with garbage after location\"\n }\n \n-proc test_disabled_creation {} {\n+proc_with_prefix test_disabled_creation {} {\n     global line_callee2_body\n \n     set bp [mi_make_breakpoint -number 6 -type breakpoint -disp keep \\\n@@ -241,7 +241,7 @@ proc test_disabled_creation {} {\n             \"test disabled creation: cleanup\"\n }\n \n-proc test_breakpoint_commands {} {\n+proc_with_prefix test_breakpoint_commands {} {\n     global line_callee2_body\n \n     set bp_no_script \\\n@@ -281,7 +281,7 @@ proc test_breakpoint_commands {} {\n \n     mi_gdb_test \"-break-commands 9 \\\"bt\\\" \\\"set \\$i=0\\\" \\\"while \\$i<10\\\" \\\"print \\$i\\\" \\\"set \\$i=\\$i+1\\\" \\\"end\\\" \\\"continue\\\" \" \\\n         \"\\\\^done\" \\\n-        \"breakpoint commands: set commands\"\n+        \"breakpoint commands: set more commands\"\n \n     mi_send_resuming_command \"exec-continue\" \"breakpoint commands: continue\"\n \n@@ -318,7 +318,7 @@ proc test_breakpoint_commands {} {\n # code.  In-depth testing of explicit breakpoints is accomplished in\n # gdb.linespec tests.\n \n-proc test_explicit_breakpoints {} {\n+proc_with_prefix test_explicit_breakpoints {} {\n     global srcfile\n     global line_callee3_head line_callee4_head\n     global line_callee3_body line_callee4_body"
    }
  ]
}