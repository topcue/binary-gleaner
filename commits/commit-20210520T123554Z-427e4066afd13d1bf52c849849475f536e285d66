{
  "sha": "427e4066afd13d1bf52c849849475f536e285d66",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDI3ZTQwNjZhZmQxM2QxYmY1MmM4NDk4NDk0NzVmNTM2ZTI4NWQ2Ng==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-20T08:16:41Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-20T12:35:54Z"
    },
    "message": "gdb/bfd: avoid crash when architecture is forced to csky or riscv\n\nI built GDB with `--enable-targets=all`, then started GDB passing it\nan x86-64 executable, finally I ran 'maint selftest', and observed GDB\ncrash like this:\n\n  BFD: BFD (GNU Binutils) 2.36.50.20210519 assertion fail ../../src/bfd/hash.c:438\n  Aborted (core dumped)\n\nThe problem originates from two locations, for example in csky-dis.c\n(csky_get_disassembler) where we do this:\n\n  const char *sec_name = NULL;\n  ...\n  sec_name = get_elf_backend_data (abfd)->obj_attrs_section;\n  if (bfd_get_section_by_name (abfd, sec_name) != NULL)\n    ...\n\nWe end up in here because during the selftests GDB forces the\narchitecture to be csky, but the BFD being accessed is still of type\nx86-64.  As a result obj_attrs_section returns NULL, which means we\nend up passing NULL to bfd_get_section_by_name.  If we follow the\nfunction calls from bfd_get_section_by_name we eventually end up in\nbfd_hash_hash, which asserts that the string (i.e. the name) is not\nNULL.\n\nThe same crash can be reproduced in GDB without using the selftests,\nfor example:\n\n  (gdb) file x86_64.elf\n  (gdb) start\n  (gdb) set architecture csky\n  (gdb) disassemble main\n  Dump of assembler code for function main:\n  BFD: BFD (GNU Binutils) 2.36.50.20210519 assertion fail ../../src/bfd/hash.c:438\n  Aborted (core dumped)\n\nThe fix I propose here is to have bfd_get_section_by_name return NULL\nif name is ever NULL.  For consistency I updated\nbfd_get_section_by_name_if in the same way, even though I'm not\nhitting any problems along that code path right now.\n\nI looked through the source tree and removed two NULL checks in\nbfd/dwarf2.c which are no longer needed, its possible that there are\nadditional NULL checks that could be removed, I just didn't find them.\n\nbfd/ChangeLog:\n\n\t* section.c (bfd_get_section_by_name): Return NULL if name is\n\tNULL.\n\t(bfd_get_section_by_name_if): Likewise.\n\t* dwarf2.c (read_section): Remove unneeded NULL check.\n\t(find_debug_info): Likewise.",
    "tree": {
      "sha": "9436dcc8227e05bc1f1be839dcc3d3518c4a0758",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9436dcc8227e05bc1f1be839dcc3d3518c4a0758"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/427e4066afd13d1bf52c849849475f536e285d66",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/427e4066afd13d1bf52c849849475f536e285d66",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/427e4066afd13d1bf52c849849475f536e285d66",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/427e4066afd13d1bf52c849849475f536e285d66/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8baee38bfee176505e6bb541f1df8ec4156b3d46",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8baee38bfee176505e6bb541f1df8ec4156b3d46",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8baee38bfee176505e6bb541f1df8ec4156b3d46"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 18,
    "deletions": 8
  },
  "files": [
    {
      "sha": "2ad7803301583b0c12e2ddcc431f6f2c3df2d4d1",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/427e4066afd13d1bf52c849849475f536e285d66/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/427e4066afd13d1bf52c849849475f536e285d66/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=427e4066afd13d1bf52c849849475f536e285d66",
      "patch": "@@ -1,3 +1,11 @@\n+2021-05-20  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* section.c (bfd_get_section_by_name): Return NULL if name is\n+\tNULL.\n+\t(bfd_get_section_by_name_if): Likewise.\n+\t* dwarf2.c (read_section): Remove unneeded NULL check.\n+\t(find_debug_info): Likewise.\n+\n 2021-05-19  Nick Clifton  <nickc@redhat.com>\n \n \t* plugin.c (bfd_plugin_open_input): Inform the user if the limit"
    },
    {
      "sha": "cf1f1d1f1fff91aa08016452fc0b78cdba47ddc5",
      "filename": "bfd/dwarf2.c",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/427e4066afd13d1bf52c849849475f536e285d66/bfd/dwarf2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/427e4066afd13d1bf52c849849475f536e285d66/bfd/dwarf2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/dwarf2.c?ref=427e4066afd13d1bf52c849849475f536e285d66",
      "patch": "@@ -545,8 +545,7 @@ read_section (bfd *\t      abfd,\n       if (msec == NULL)\n \t{\n \t  section_name = sec->compressed_name;\n-\t  if (section_name != NULL)\n-\t    msec = bfd_get_section_by_name (abfd, section_name);\n+          msec = bfd_get_section_by_name (abfd, section_name);\n \t}\n       if (msec == NULL)\n \t{\n@@ -4226,12 +4225,9 @@ find_debug_info (bfd *abfd, const struct dwarf_debug_section *debug_sections,\n \treturn msec;\n \n       look = debug_sections[debug_info].compressed_name;\n-      if (look != NULL)\n-\t{\n-\t  msec = bfd_get_section_by_name (abfd, look);\n-\t  if (msec != NULL)\n-\t    return msec;\n-\t}\n+      msec = bfd_get_section_by_name (abfd, look);\n+      if (msec != NULL)\n+        return msec;\n \n       for (msec = abfd->sections; msec != NULL; msec = msec->next)\n \tif (startswith (msec->name, GNU_LINKONCE_INFO))"
    },
    {
      "sha": "6b6aa92b968bbe7de87afff81222e1fbc88df5d0",
      "filename": "bfd/section.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/427e4066afd13d1bf52c849849475f536e285d66/bfd/section.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/427e4066afd13d1bf52c849849475f536e285d66/bfd/section.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/section.c?ref=427e4066afd13d1bf52c849849475f536e285d66",
      "patch": "@@ -898,6 +898,9 @@ bfd_get_section_by_name (bfd *abfd, const char *name)\n {\n   struct section_hash_entry *sh;\n \n+  if (name == NULL)\n+    return NULL;\n+\n   sh = section_hash_lookup (&abfd->section_htab, name, false, false);\n   if (sh != NULL)\n     return &sh->section;\n@@ -1006,6 +1009,9 @@ bfd_get_section_by_name_if (bfd *abfd, const char *name,\n   struct section_hash_entry *sh;\n   unsigned long hash;\n \n+  if (name == NULL)\n+    return NULL;\n+\n   sh = section_hash_lookup (&abfd->section_htab, name, false, false);\n   if (sh == NULL)\n     return NULL;"
    }
  ]
}