{
  "sha": "e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTQzYjEwZTEwZWJhOWQ5NDkzYTBhZDQwMTc2YjJhZWE5Y2ZiNjJhYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-05T22:21:24Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-01T21:12:37Z"
    },
    "message": "Remove the ui_out_style_kind enum\n\nThis removes the ui_out_style_kind enum, in favor of simply using\nui_file_style references.  This simplifies the code somewhat.\n\ngdb/ChangeLog\n2019-10-01  Tom Tromey  <tom@tromey.com>\n\n\t* ui-out.h (enum class ui_out_style_kind): Remove.\n\t(class ui_out) <field_string, field_stsream, do_field_string>:\n\tChange type of \"style\".\n\t* ui-out.c (ui_out::field_core_addr, ui_out::field_stream)\n\t(ui_out::field_string): Update.\n\t* tui/tui-out.h (class tui_ui_out) <do_field_string>: Change type\n\tof \"style\".\n\t* tui/tui-out.c (tui_ui_out::do_field_string): Update.\n\t* tracepoint.c (print_one_static_tracepoint_marker): Update.\n\t* stack.c (print_frame_arg, print_frame_info, print_frame):\n\tUpdate.\n\t* source.c (print_source_lines_base): Update.\n\t* solib.c (info_sharedlibrary_command): Update.\n\t* skip.c (info_skip_command): Update.\n\t* record-btrace.c (btrace_call_history_src_line)\n\t(btrace_call_history): Update.\n\t* python/py-framefilter.c (py_print_frame): Update.\n\t* mi/mi-out.h (class mi_ui_out) <do_field_string>: Change type of\n\t\"style\".\n\t* mi/mi-out.c (mi_ui_out::do_table_header)\n\t(mi_ui_out::do_field_signed, mi_ui_out::do_field_unsigned)\n\t(mi_ui_out::do_field_string): Update.\n\t* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):\n\tUpdate.\n\t* cli-out.h (class cli_ui_out) <do_field_string>: Change type of\n\t\"style\".\n\t* cli-out.c (cli_ui_out::do_table_header)\n\t(cli_ui_out::do_field_signed, cli_ui_out::do_field_unsigned)\n\t(cli_ui_out::do_field_skip, cli_ui_out::do_field_string)\n\t(cli_ui_out::do_field_fmt): Update.\n\t* breakpoint.c (print_breakpoint_location): Update.\n\t(update_static_tracepoint): Update.",
    "tree": {
      "sha": "cc57a08cdee3a133b1f0c726a7596719d47060d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cc57a08cdee3a133b1f0c726a7596719d47060d7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "53d666ecfbb18f836cd4cb9f1de7013e3d03f4df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/53d666ecfbb18f836cd4cb9f1de7013e3d03f4df",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/53d666ecfbb18f836cd4cb9f1de7013e3d03f4df"
    }
  ],
  "stats": {
    "total": 179,
    "additions": 93,
    "deletions": 86
  },
  "files": [
    {
      "sha": "dd196d7e4f15faf02ff54154098286ca6368d7ca",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -1,3 +1,38 @@\n+2019-10-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* ui-out.h (enum class ui_out_style_kind): Remove.\n+\t(class ui_out) <field_string, field_stsream, do_field_string>:\n+\tChange type of \"style\".\n+\t* ui-out.c (ui_out::field_core_addr, ui_out::field_stream)\n+\t(ui_out::field_string): Update.\n+\t* tui/tui-out.h (class tui_ui_out) <do_field_string>: Change type\n+\tof \"style\".\n+\t* tui/tui-out.c (tui_ui_out::do_field_string): Update.\n+\t* tracepoint.c (print_one_static_tracepoint_marker): Update.\n+\t* stack.c (print_frame_arg, print_frame_info, print_frame):\n+\tUpdate.\n+\t* source.c (print_source_lines_base): Update.\n+\t* solib.c (info_sharedlibrary_command): Update.\n+\t* skip.c (info_skip_command): Update.\n+\t* record-btrace.c (btrace_call_history_src_line)\n+\t(btrace_call_history): Update.\n+\t* python/py-framefilter.c (py_print_frame): Update.\n+\t* mi/mi-out.h (class mi_ui_out) <do_field_string>: Change type of\n+\t\"style\".\n+\t* mi/mi-out.c (mi_ui_out::do_table_header)\n+\t(mi_ui_out::do_field_signed, mi_ui_out::do_field_unsigned)\n+\t(mi_ui_out::do_field_string): Update.\n+\t* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn):\n+\tUpdate.\n+\t* cli-out.h (class cli_ui_out) <do_field_string>: Change type of\n+\t\"style\".\n+\t* cli-out.c (cli_ui_out::do_table_header)\n+\t(cli_ui_out::do_field_signed, cli_ui_out::do_field_unsigned)\n+\t(cli_ui_out::do_field_skip, cli_ui_out::do_field_string)\n+\t(cli_ui_out::do_field_fmt): Update.\n+\t* breakpoint.c (print_breakpoint_location): Update.\n+\t(update_static_tracepoint): Update.\n+\n 2019-10-01  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* main.c (relocate_gdbinit_path_maybe_in_datadir): Remove std::string"
    },
    {
      "sha": "dd8fe4c86208543fe42acb92b88ab6cb1bf19f01",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -5823,14 +5823,14 @@ print_breakpoint_location (struct breakpoint *b,\n \t{\n \t  uiout->text (\"in \");\n \t  uiout->field_string (\"func\", SYMBOL_PRINT_NAME (sym),\n-\t\t\t       ui_out_style_kind::FUNCTION);\n+\t\t\t       function_name_style.style ());\n \t  uiout->text (\" \");\n \t  uiout->wrap_hint (wrap_indent_at_field (uiout, \"what\"));\n \t  uiout->text (\"at \");\n \t}\n       uiout->field_string (\"file\",\n \t\t\t   symtab_to_filename_for_display (loc->symtab),\n-\t\t\t   ui_out_style_kind::FILE);\n+\t\t\t   file_name_style.style ());\n       uiout->text (\":\");\n \n       if (uiout->is_mi_like_p ())\n@@ -13317,12 +13317,12 @@ update_static_tracepoint (struct breakpoint *b, struct symtab_and_line sal)\n \t  if (sym)\n \t    {\n \t      uiout->field_string (\"func\", SYMBOL_PRINT_NAME (sym),\n-\t\t\t\t   ui_out_style_kind::FUNCTION);\n+\t\t\t\t   function_name_style.style ());\n \t      uiout->text (\" at \");\n \t    }\n \t  uiout->field_string (\"file\",\n \t\t\t       symtab_to_filename_for_display (sal2.symtab),\n-\t\t\t       ui_out_style_kind::FILE);\n+\t\t\t       file_name_style.style ());\n \t  uiout->text (\":\");\n \n \t  if (uiout->is_mi_like_p ())"
    },
    {
      "sha": "fa72a1d344f41afc281d8414aa0544a2626fc0f7",
      "filename": "gdb/cli-out.c",
      "status": "modified",
      "additions": 7,
      "deletions": 31,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/cli-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/cli-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli-out.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -73,7 +73,7 @@ cli_ui_out::do_table_header (int width, ui_align alignment,\n     return;\n \n   do_field_string (0, width, alignment, 0, col_hdr.c_str (),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n }\n \n /* Mark beginning of a list */\n@@ -100,7 +100,7 @@ cli_ui_out::do_field_signed (int fldno, int width, ui_align alignment,\n     return;\n \n   do_field_string (fldno, width, alignment, fldname, plongest (value),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n }\n \n /* output an unsigned field */\n@@ -113,7 +113,7 @@ cli_ui_out::do_field_unsigned (int fldno, int width, ui_align alignment,\n     return;\n \n   do_field_string (fldno, width, alignment, fldname, pulongest (value),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n }\n \n /* used to omit a field */\n@@ -126,7 +126,7 @@ cli_ui_out::do_field_skip (int fldno, int width, ui_align alignment,\n     return;\n \n   do_field_string (fldno, width, alignment, fldname, \"\",\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n }\n \n /* other specific cli_field_* end up here so alignment and field\n@@ -135,7 +135,7 @@ cli_ui_out::do_field_skip (int fldno, int width, ui_align alignment,\n void\n cli_ui_out::do_field_string (int fldno, int width, ui_align align,\n \t\t\t     const char *fldname, const char *string,\n-\t\t\t     ui_out_style_kind style)\n+\t\t\t     const ui_file_style &style)\n {\n   int before = 0;\n   int after = 0;\n@@ -170,31 +170,7 @@ cli_ui_out::do_field_string (int fldno, int width, ui_align align,\n     spaces (before);\n \n   if (string)\n-    {\n-      ui_file_style fstyle;\n-      switch (style)\n-\t{\n-\tcase ui_out_style_kind::DEFAULT:\n-\t  /* Nothing.  */\n-\t  break;\n-\tcase ui_out_style_kind::FILE:\n-\t  /* Nothing.  */\n-\t  fstyle = file_name_style.style ();\n-\t  break;\n-\tcase ui_out_style_kind::FUNCTION:\n-\t  fstyle = function_name_style.style ();\n-\t  break;\n-\tcase ui_out_style_kind::VARIABLE:\n-\t  fstyle = variable_name_style.style ();\n-\t  break;\n-\tcase ui_out_style_kind::ADDRESS:\n-\t  fstyle = address_style.style ();\n-\t  break;\n-\tdefault:\n-\t  gdb_assert_not_reached (\"missing case\");\n-\t}\n-      fputs_styled (string, fstyle, m_streams.back ());\n-    }\n+    fputs_styled (string, style, m_streams.back ());\n \n   if (after)\n     spaces (after);\n@@ -216,7 +192,7 @@ cli_ui_out::do_field_fmt (int fldno, int width, ui_align align,\n   std::string str = string_vprintf (format, args);\n \n   do_field_string (fldno, width, align, fldname, str.c_str (),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n }\n \n void"
    },
    {
      "sha": "bc8b781d605d749adb28a4224b985ba87da08d0f",
      "filename": "gdb/cli-out.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/cli-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/cli-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli-out.h?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -57,7 +57,7 @@ class cli_ui_out : public ui_out\n   virtual void do_field_string (int fldno, int width, ui_align align,\n \t\t\t\tconst char *fldname,\n \t\t\t\tconst char *string,\n-\t\t\t\tui_out_style_kind style) override;\n+\t\t\t\tconst ui_file_style &style) override;\n   virtual void do_field_fmt (int fldno, int width, ui_align align,\n \t\t\t     const char *fldname, const char *format,\n \t\t\t     va_list args)"
    },
    {
      "sha": "f483a5e5cd0ccffb4f13a960a7c28cc49b51d182",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -31,6 +31,7 @@\n #include <algorithm>\n #include \"gdbsupport/gdb_optional.h\"\n #include \"valprint.h\"\n+#include \"cli/cli-style.h\"\n \n /* Disassemble functions.\n    FIXME: We should get rid of all the duplicate code in gdb that does\n@@ -245,7 +246,7 @@ gdb_pretty_print_disassembler::pretty_print_insn (const struct disasm_insn *insn\n \tm_uiout->text (\" <\");\n \tif (!omit_fname)\n \t  m_uiout->field_string (\"func-name\", name.c_str (),\n-\t\t\t\t ui_out_style_kind::FUNCTION);\n+\t\t\t\t function_name_style.style ());\n \t/* For negative offsets, avoid displaying them as +-N; the sign of\n \t   the offset takes the place of the \"+\" here.  */\n \tif (offset >= 0)"
    },
    {
      "sha": "0b930738f1dd5dbda118f441e5f24cde42ab5ebf",
      "filename": "gdb/mi/mi-out.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/mi/mi-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/mi/mi-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -70,9 +70,9 @@ mi_ui_out::do_table_header (int width, ui_align alignment,\n   do_field_signed (0, 0, ui_center, \"width\", width);\n   do_field_signed (0, 0, ui_center, \"alignment\", alignment);\n   do_field_string (0, 0, ui_center, \"col_name\", col_name.c_str (),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n   do_field_string (0, width, alignment, \"colhdr\", col_hdr.c_str (),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n   close (ui_out_type_tuple);\n }\n \n@@ -99,7 +99,7 @@ mi_ui_out::do_field_signed (int fldno, int width, ui_align alignment,\n \t\t\t    const char *fldname, LONGEST value)\n {\n   do_field_string (fldno, width, alignment, fldname, plongest (value),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n }\n \n /* Output an unsigned field.  */\n@@ -109,7 +109,7 @@ mi_ui_out::do_field_unsigned (int fldno, int width, ui_align alignment,\n \t\t\t      const char *fldname, ULONGEST value)\n {\n   do_field_string (fldno, width, alignment, fldname, pulongest (value),\n-\t\t   ui_out_style_kind::DEFAULT);\n+\t\t   ui_file_style ());\n }\n \n /* Used to omit a field.  */\n@@ -126,7 +126,7 @@ mi_ui_out::do_field_skip (int fldno, int width, ui_align alignment,\n void\n mi_ui_out::do_field_string (int fldno, int width, ui_align align,\n \t\t\t    const char *fldname, const char *string,\n-\t\t\t    ui_out_style_kind style)\n+\t\t\t    const ui_file_style &style)\n {\n   ui_file *stream = m_streams.back ();\n   field_separator ();"
    },
    {
      "sha": "90528fd4e84d270ca4d877270130c50a6bbe031c",
      "filename": "gdb/mi/mi-out.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/mi/mi-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/mi/mi-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.h?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -66,7 +66,7 @@ class mi_ui_out : public ui_out\n \t\t\t   const char *fldname) override;\n   virtual void do_field_string (int fldno, int width, ui_align align,\n \t\t\t\tconst char *fldname, const char *string,\n-\t\t\t\tui_out_style_kind style) override;\n+\t\t\t\tconst ui_file_style &style) override;\n   virtual void do_field_fmt (int fldno, int width, ui_align align,\n \t\t\t  const char *fldname, const char *format, va_list args)\n     override ATTRIBUTE_PRINTF (6,0);"
    },
    {
      "sha": "f82a239c2a85e1f6aa8f4c19e66a547ab4563b9b",
      "filename": "gdb/python/py-framefilter.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/python/py-framefilter.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/python/py-framefilter.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-framefilter.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -33,6 +33,7 @@\n #include \"mi/mi-cmds.h\"\n #include \"python-internal.h\"\n #include \"gdbsupport/gdb_optional.h\"\n+#include \"cli/cli-style.h\"\n \n enum mi_print_types\n {\n@@ -947,7 +948,7 @@ py_print_frame (PyObject *filter, frame_filter_flags flags,\n \t  if (function == NULL)\n \t    out->field_skip (\"func\");\n \t  else\n-\t    out->field_string (\"func\", function, ui_out_style_kind::FUNCTION);\n+\t    out->field_string (\"func\", function, function_name_style.style ());\n \t}\n     }\n \n@@ -987,7 +988,7 @@ py_print_frame (PyObject *filter, frame_filter_flags flags,\n \t      out->text (\" at \");\n \t      annotate_frame_source_file ();\n \t      out->field_string (\"file\", filename.get (),\n-\t\t\t\t ui_out_style_kind::FILE);\n+\t\t\t\t file_name_style.style ());\n \t      annotate_frame_source_file_end ();\n \t    }\n \t}"
    },
    {
      "sha": "c923b365c48d1a178256ba793c5430c0ac508b66",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -42,6 +42,7 @@\n #include \"inferior.h\"\n #include <algorithm>\n #include \"gdbarch.h\"\n+#include \"cli/cli-style.h\"\n \n static const target_info record_btrace_target_info = {\n   \"record-btrace\",\n@@ -1084,7 +1085,7 @@ btrace_call_history_src_line (struct ui_out *uiout,\n \n   uiout->field_string (\"file\",\n \t\t       symtab_to_filename_for_display (symbol_symtab (sym)),\n-\t\t       ui_out_style_kind::FILE);\n+\t\t       file_name_style.style ());\n \n   btrace_compute_src_line_range (bfun, &begin, &end);\n   if (end < begin)\n@@ -1176,13 +1177,13 @@ btrace_call_history (struct ui_out *uiout,\n \n       if (sym != NULL)\n \tuiout->field_string (\"function\", SYMBOL_PRINT_NAME (sym),\n-\t\t\t     ui_out_style_kind::FUNCTION);\n+\t\t\t     function_name_style.style ());\n       else if (msym != NULL)\n \tuiout->field_string (\"function\", MSYMBOL_PRINT_NAME (msym),\n-\t\t\t     ui_out_style_kind::FUNCTION);\n+\t\t\t     function_name_style.style ());\n       else if (!uiout->is_mi_like_p ())\n \tuiout->field_string (\"function\", \"??\",\n-\t\t\t     ui_out_style_kind::FUNCTION);\n+\t\t\t     function_name_style.style ());\n \n       if ((flags & RECORD_PRINT_INSN_RANGE) != 0)\n \t{"
    },
    {
      "sha": "fcf41bf79a732d05ac7a4eebf12d2feeaf08e662",
      "filename": "gdb/skip.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/skip.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/skip.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/skip.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -36,6 +36,7 @@\n #include \"gdb_regex.h\"\n #include \"gdbsupport/gdb_optional.h\"\n #include <list>\n+#include \"cli/cli-style.h\"\n \n /* True if we want to print debug printouts related to file/function\n    skipping. */\n@@ -414,7 +415,7 @@ info_skip_command (const char *arg, int from_tty)\n       current_uiout->field_string (\"file\",\n \t\t\t\t   e.file ().empty () ? \"<none>\"\n \t\t\t\t   : e.file ().c_str (),\n-\t\t\t\t   ui_out_style_kind::FILE); /* 4 */\n+\t\t\t\t   file_name_style.style ()); /* 4 */\n       if (e.function_is_regexp ())\n \tcurrent_uiout->field_string (\"regexp\", \"y\"); /* 5 */\n       else\n@@ -423,7 +424,7 @@ info_skip_command (const char *arg, int from_tty)\n       current_uiout->field_string (\"function\",\n \t\t\t\t   e.function ().empty () ? \"<none>\"\n \t\t\t\t   : e.function ().c_str (),\n-\t\t\t\t   ui_out_style_kind::FUNCTION); /* 6 */\n+\t\t\t\t   function_name_style.style ()); /* 6 */\n \n       current_uiout->text (\"\\n\");\n     }"
    },
    {
      "sha": "db6a52d2c147fccd8cb7004753354d35e1f7ff42",
      "filename": "gdb/solib.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/solib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/solib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -47,6 +47,7 @@\n #include \"gdb_bfd.h\"\n #include \"gdbsupport/filestuff.h\"\n #include \"source.h\"\n+#include \"cli/cli-style.h\"\n \n /* Architecture-specific operations.  */\n \n@@ -1104,7 +1105,7 @@ info_sharedlibrary_command (const char *pattern, int from_tty)\n \telse\n \t  uiout->field_string (\"syms-read\", so->symbols_loaded ? \"Yes\" : \"No\");\n \n-\tuiout->field_string (\"name\", so->so_name, ui_out_style_kind::FILE);\n+\tuiout->field_string (\"name\", so->so_name, file_name_style.style ());\n \n \tuiout->text (\"\\n\");\n       }"
    },
    {
      "sha": "ff2181894951a16739ee562d531dbcb74c08befc",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -46,6 +46,7 @@\n #include <algorithm>\n #include \"gdbsupport/pathstuff.h\"\n #include \"source-cache.h\"\n+#include \"cli/cli-style.h\"\n \n #define OPEN_MODE (O_RDONLY | O_BINARY)\n #define FDOPEN_MODE FOPEN_RB\n@@ -1235,7 +1236,7 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n \t     not for TUI.  */\n \t  if (uiout->is_mi_like_p () || uiout->test_flags (ui_source_list))\n \t    uiout->field_string (\"file\", symtab_to_filename_for_display (s),\n-\t\t\t\t ui_out_style_kind::FILE);\n+\t\t\t\t file_name_style.style ());\n \t  if (uiout->is_mi_like_p () || !uiout->test_flags (ui_source_list))\n  \t    {\n \t      const char *s_fullname = symtab_to_fullname (s);"
    },
    {
      "sha": "4899d0f416984f3a7237ea8959f57ce5bb53c2bf",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -54,6 +54,7 @@\n #include \"observable.h\"\n #include \"gdbsupport/def-vector.h\"\n #include \"cli/cli-option.h\"\n+#include \"cli/cli-style.h\"\n \n /* The possible choices of \"set print frame-arguments\", and the value\n    of this setting.  */\n@@ -381,7 +382,7 @@ print_frame_arg (const frame_print_options &fp_opts,\n   if (arg->entry_kind == print_entry_values_only\n       || arg->entry_kind == print_entry_values_compact)\n     stb.puts (\"@entry\");\n-  uiout->field_stream (\"name\", stb, ui_out_style_kind::VARIABLE);\n+  uiout->field_stream (\"name\", stb, variable_name_style.style ());\n   annotate_arg_name_end ();\n   uiout->text (\"=\");\n \n@@ -1005,18 +1006,18 @@ print_frame_info (const frame_print_options &fp_opts,\n         {\n           annotate_function_call ();\n           uiout->field_string (\"func\", \"<function called from gdb>\",\n-\t\t\t       ui_out_style_kind::FUNCTION);\n+\t\t\t       function_name_style.style ());\n \t}\n       else if (get_frame_type (frame) == SIGTRAMP_FRAME)\n         {\n \t  annotate_signal_handler_caller ();\n           uiout->field_string (\"func\", \"<signal handler called>\",\n-\t\t\t       ui_out_style_kind::FUNCTION);\n+\t\t\t       function_name_style.style ());\n         }\n       else if (get_frame_type (frame) == ARCH_FRAME)\n         {\n           uiout->field_string (\"func\", \"<cross-architecture call>\",\n-\t\t\t       ui_out_style_kind::FUNCTION);\n+\t\t\t       function_name_style.style ());\n \t}\n       uiout->text (\"\\n\");\n       annotate_frame_end ();\n@@ -1310,7 +1311,7 @@ print_frame (const frame_print_options &fp_opts,\n \t    print_pc (uiout, gdbarch, frame, pc);\n \t  else\n \t    uiout->field_string (\"addr\", \"<unavailable>\",\n-\t\t\t\t ui_out_style_kind::ADDRESS);\n+\t\t\t\t address_style.style ());\n \t  annotate_frame_address_end ();\n \t  uiout->text (\" in \");\n \t}\n@@ -1319,7 +1320,7 @@ print_frame (const frame_print_options &fp_opts,\n     string_file stb;\n     fprintf_symbol_filtered (&stb, funname ? funname.get () : \"??\",\n \t\t\t     funlang, DMGL_ANSI);\n-    uiout->field_stream (\"func\", stb, ui_out_style_kind::FUNCTION);\n+    uiout->field_stream (\"func\", stb, function_name_style.style ());\n     uiout->wrap_hint (\"   \");\n     annotate_frame_args ();\n \n@@ -1361,7 +1362,8 @@ print_frame (const frame_print_options &fp_opts,\n \tuiout->wrap_hint (\"   \");\n \tuiout->text (\" at \");\n \tannotate_frame_source_file ();\n-\tuiout->field_string (\"file\", filename_display, ui_out_style_kind::FILE);\n+\tuiout->field_string (\"file\", filename_display,\n+\t\t\t     file_name_style.style ());\n \tif (uiout->is_mi_like_p ())\n \t  {\n \t    const char *fullname = symtab_to_fullname (sal.symtab);"
    },
    {
      "sha": "2f91e49efd3f21450495542145bfe11fe3bdc020",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -57,6 +57,7 @@\n #include \"tracefile.h\"\n #include \"location.h\"\n #include <algorithm>\n+#include \"cli/cli-style.h\"\n \n #include <unistd.h>\n \n@@ -3683,7 +3684,7 @@ print_one_static_tracepoint_marker (int count,\n     {\n       uiout->text (\"in \");\n       uiout->field_string (\"func\", SYMBOL_PRINT_NAME (sym),\n-\t\t\t   ui_out_style_kind::FUNCTION);\n+\t\t\t   function_name_style.style ());\n       uiout->wrap_hint (wrap_indent);\n       uiout->text (\" at \");\n     }\n@@ -3694,7 +3695,7 @@ print_one_static_tracepoint_marker (int count,\n     {\n       uiout->field_string (\"file\",\n \t\t\t   symtab_to_filename_for_display (sal.symtab),\n-\t\t\t   ui_out_style_kind::FILE);\n+\t\t\t   file_name_style.style ());\n       uiout->text (\":\");\n \n       if (uiout->is_mi_like_p ())"
    },
    {
      "sha": "d415e7b64a0404dbbe38fb78fde4c1b86e09c51a",
      "filename": "gdb/tui/tui-out.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/tui/tui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/tui/tui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-out.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -52,7 +52,7 @@ tui_ui_out::do_field_signed (int fldno, int width, ui_align alignment,\n void\n tui_ui_out::do_field_string (int fldno, int width, ui_align align,\n \t\t\t     const char *fldname, const char *string,\n-\t\t\t     ui_out_style_kind style)\n+\t\t\t     const ui_file_style &style)\n {\n   if (suppress_output ())\n     return;"
    },
    {
      "sha": "9df9e93aa9df676a5068c387cbee30ac11bd429c",
      "filename": "gdb/tui/tui-out.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/tui/tui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/tui/tui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-out.h?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -35,7 +35,7 @@ class tui_ui_out : public cli_ui_out\n   void do_field_signed (int fldno, int width, ui_align align, const char *fldname,\n \t\t\tLONGEST value) override;\n   void do_field_string (int fldno, int width, ui_align align, const char *fldname,\n-\t\t\tconst char *string, ui_out_style_kind style) override;\n+\t\t\tconst char *string, const ui_file_style &style) override;\n   void do_field_fmt (int fldno, int width, ui_align align, const char *fldname,\n \t\t  const char *format, va_list args) override\n     ATTRIBUTE_PRINTF (6,0);"
    },
    {
      "sha": "e8fe44c8268e31ab0a3818581a4a4bc0c832d8f4",
      "filename": "gdb/ui-out.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/ui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/ui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.c?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -24,6 +24,8 @@\n #include \"expression.h\"\t\t/* For language.h */\n #include \"language.h\"\n #include \"ui-out.h\"\n+#include \"gdbsupport/format.h\"\n+#include \"cli/cli-style.h\"\n \n #include <vector>\n #include <memory>\n@@ -483,12 +485,12 @@ ui_out::field_core_addr (const char *fldname, struct gdbarch *gdbarch,\n \t\t\t CORE_ADDR address)\n {\n   field_string (fldname, print_core_address (gdbarch, address),\n-\t\tui_out_style_kind::ADDRESS);\n+\t\taddress_style.style ());\n }\n \n void\n ui_out::field_stream (const char *fldname, string_file &stream,\n-\t\t      ui_out_style_kind style)\n+\t\t      const ui_file_style &style)\n {\n   if (!stream.empty ())\n     field_string (fldname, stream.c_str (), style);\n@@ -513,7 +515,7 @@ ui_out::field_skip (const char *fldname)\n \n void\n ui_out::field_string (const char *fldname, const char *string,\n-\t\t      ui_out_style_kind style)\n+\t\t      const ui_file_style &style)\n {\n   int fldno;\n   int width;"
    },
    {
      "sha": "6732f04671915bdede5b83de8df580c1e70b5819",
      "filename": "gdb/ui-out.h",
      "status": "modified",
      "additions": 4,
      "deletions": 19,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/ui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e43b10e10eba9d9493a0ad40176b2aea9cfb62ab/gdb/ui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.h?ref=e43b10e10eba9d9493a0ad40176b2aea9cfb62ab",
      "patch": "@@ -26,6 +26,7 @@\n #include <vector>\n \n #include \"gdbsupport/enum-flags.h\"\n+#include \"ui-style.h\"\n \n class ui_out_level;\n class ui_out_table;\n@@ -67,22 +68,6 @@ enum ui_out_type\n     ui_out_type_list\n   };\n \n-/* Possible kinds of styling.  */\n-\n-enum class ui_out_style_kind\n-{\n-  /* The default (plain) style.  */\n-  DEFAULT,\n-  /* File name.  */\n-  FILE,\n-  /* Function name.  */\n-  FUNCTION,\n-  /* Variable name.  */\n-  VARIABLE,\n-  /* Address.  */\n-  ADDRESS\n-};\n-\n class ui_out\n {\n  public:\n@@ -115,10 +100,10 @@ class ui_out\n   void field_core_addr (const char *fldname, struct gdbarch *gdbarch,\n \t\t\tCORE_ADDR address);\n   void field_string (const char *fldname, const char *string,\n-\t\t     ui_out_style_kind style = ui_out_style_kind::DEFAULT);\n+\t\t     const ui_file_style &style = ui_file_style ());\n   void field_string (const char *fldname, const std::string &string);\n   void field_stream (const char *fldname, string_file &stream,\n-\t\t     ui_out_style_kind style = ui_out_style_kind::DEFAULT);\n+\t\t     const ui_file_style &style = ui_file_style ());\n   void field_skip (const char *fldname);\n   void field_fmt (const char *fldname, const char *format, ...)\n     ATTRIBUTE_PRINTF (3, 4);\n@@ -169,7 +154,7 @@ class ui_out\n \t\t\t      const char *fldname) = 0;\n   virtual void do_field_string (int fldno, int width, ui_align align,\n \t\t\t\tconst char *fldname, const char *string,\n-\t\t\t\tui_out_style_kind style) = 0;\n+\t\t\t\tconst ui_file_style &style) = 0;\n   virtual void do_field_fmt (int fldno, int width, ui_align align,\n \t\t\t     const char *fldname, const char *format,\n \t\t\t     va_list args)"
    }
  ]
}