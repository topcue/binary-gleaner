{
  "sha": "7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2Y1MzMxYTg4NWMyZThiOGNiOGJlNWIyN2RjNGJjZmEyOTBhZDZjMA==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2019-03-26T22:30:21Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2019-03-26T22:30:21Z"
    },
    "message": "gdb-gdb.py.in: Fix error when printing range type\n\nI noticed that trying to print the contents of a struct main_type\nwould fail when the type was a TYPE_CODE_RANGE:\n\n    (gdb) p *type.main_type\n    $1 = Python Exception <class 'gdb.error'> There is no member named low_undefined.:\n\nAnd indeed, Python is right, fields \"low_undefined\" has been removed\nfrom struct range_bounds back in ... 2014! It was done when we introduced\ndynamic bounds handling. This patch fixes gdb-gdb.py.in according to\nthe new structure.\n\ngdb/ChangeLog:\n\n\t* gdb-gdb.py.in (StructMainTypePrettyPrinter.bound_img): New method.\n\t(StructMainTypePrettyPrinter.bounds_img): Use new \"bound_img\"\n\tmethod to compute the bounds of range types. Also print \"[evaluated]\"\n\tif the bounds' values come from a dynamic evaluation.",
    "tree": {
      "sha": "6bc2586b2dba30c5f92bf6825910ff6898c48e05",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6bc2586b2dba30c5f92bf6825910ff6898c48e05"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f9aa85206ab31d2c583e7fef568700d31eb577e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9f9aa85206ab31d2c583e7fef568700d31eb577e"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 28,
    "deletions": 7
  },
  "files": [
    {
      "sha": "4ef8a5c9780ba218f814324f0870b91fd68ec6aa",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-26  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* gdb-gdb.py.in (StructMainTypePrettyPrinter.bound_img): New method.\n+\t(StructMainTypePrettyPrinter.bounds_img): Use new \"bound_img\"\n+\tmethod to compute the bounds of range types. Also print \"[evaluated]\"\n+\tif the bounds' values come from a dynamic evaluation.\n+\n 2019-03-26  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* cp-valprint.c (cp_print_value_fields): Don't print trailing"
    },
    {
      "sha": "8700689f3dd866d29b884c12e8e91d5a58fadbf8",
      "filename": "gdb/gdb-gdb.py.in",
      "status": "modified",
      "additions": 21,
      "deletions": 7,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0/gdb/gdb-gdb.py.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0/gdb/gdb-gdb.py.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb-gdb.py.in?ref=7f5331a885c2e8b8cb8be5b27dc4bcfa290ad6c0",
      "patch": "@@ -181,17 +181,31 @@ class StructMainTypePrettyPrinter:\n         fields.append(self.struct_field_location_img(f))\n         return label + \"\\n\" + \"  {\" + \",\\n   \".join(fields) + \"}\"\n \n+    def bound_img(self, bound_name):\n+        \"\"\"Return an image of the given main_type's bound.\"\"\"\n+        b = self.val['flds_bnds']['bounds'].dereference()[bound_name]\n+        bnd_kind = str(b['kind'])\n+        if bnd_kind == 'PROP_CONST':\n+            return str(b['data']['const_val'])\n+        elif bnd_kind == 'PROP_UNDEFINED':\n+            return '(undefined)'\n+        else:\n+            info = [bnd_kind]\n+            if bound_name == 'high' and b['flag_upper_bound_is_count']:\n+                info.append('upper_bound_is_count')\n+            return '{} ({})'.format(str(b['data']['baton']), ','.join(info))\n+\n     def bounds_img(self):\n         \"\"\"Return an image of the main_type bounds.\n         \"\"\"\n         b = self.val['flds_bnds']['bounds'].dereference()\n-        low = str(b['low'])\n-        if b['low_undefined'] != 0:\n-            low += \" (undefined)\"\n-        high = str(b['high'])\n-        if b['high_undefined'] != 0:\n-            high += \" (undefined)\"\n-        return \"flds_bnds.bounds = {%s, %s}\" % (low, high)\n+        low = self.bound_img('low')\n+        high = self.bound_img('high')\n+\n+        img = \"flds_bnds.bounds = {%s, %s}\" % (low, high)\n+        if b['flag_bound_evaluated']:\n+            img += ' [evaluated]'\n+        return img\n \n     def type_specific_img(self):\n         \"\"\"Return a string image of the main_type type_specific union."
    }
  ]
}