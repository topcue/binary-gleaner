{
  "sha": "cd6d537c48fa862e8a5888b648102d7b2330ef81",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Q2ZDUzN2M0OGZhODYyZThhNTg4OGI2NDgxMDJkN2IyMzMwZWY4MQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-01-04T20:37:49Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-01-04T20:38:05Z"
    },
    "message": "elf: Allow mixed ordered/unordered inputs for non-relocatable link\n\nFor non-relocatable link with SHF_LINK_ORDER inputs, allow mixed indirect\nand data inputs with ordered and unordered inputs:\n\n1. Add pattern to bfd_section for the matching section name pattern in\nlinker script and update BFD_FAKE_SECTION.\n2. Sort the consecutive bfd_indirect_link_order sections with the same\npattern to allow linker script to overdide input section order.\n3. Place unordered sections before ordered sections.\n4. Change the offsets of the indirect input sections only.\n\nbfd/\n\n\tPR ld/26256\n\t* elflink.c (compare_link_order): Place unordered sections before\n\tordered sections.\n\t(elf_fixup_link_order): Add a link info argument.  Allow mixed\n\tordered and unordered input sections for non-relocatable link.\n\tSort the consecutive bfd_indirect_link_order sections with the\n\tsame pattern.  Change the offsets of the bfd_indirect_link_order\n\tsections only.\n\t(bfd_elf_final_link): Pass info to elf_fixup_link_order.\n\t* section.c (bfd_section): Add pattern.\n\t(BFD_FAKE_SECTION): Initialize pattern to NULL.\n\t* bfd-in2.h: Regenerated.\n\ngas/\n\n\tPR ld/26256\n\t* config/obj-elf.c (obj_elf_change_section): Also filter out\n\tSHF_LINK_ORDER.\n\nld/\n\n\tPR ld/26256\n\t* ldlang.c (gc_section_callback): Set pattern.\n\t* testsuite/ld-elf/pr26256-1.s: New file.\n\t* testsuite/ld-elf/pr26256-1.t: Likewise.\n\t* testsuite/ld-elf/pr26256-1a.d: Likewise.\n\t* testsuite/ld-elf/pr26256-1b.d: Likewise.\n\t* testsuite/ld-elf/pr26256-2.s: Likewise.\n\t* testsuite/ld-elf/pr26256-2.t: Likewise.\n\t* testsuite/ld-elf/pr26256-2a.d: Likewise.\n\t* testsuite/ld-elf/pr26256-2b-alt.d: Likewise.\n\t* testsuite/ld-elf/pr26256-2b.d: Likewise.\n\t* testsuite/ld-elf/pr26256-3.s: Likewise.\n\t* testsuite/ld-elf/pr26256-3a.d: Likewise.\n\t* testsuite/ld-elf/pr26256-3a.t: Likewise.\n\t* testsuite/ld-elf/pr26256-3b.d: Likewise.\n\t* testsuite/ld-elf/pr26256-3b.t: Likewise.",
    "tree": {
      "sha": "1ab9bc928a0acb1a3acc04f6d985338ae45f279e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ab9bc928a0acb1a3acc04f6d985338ae45f279e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cd6d537c48fa862e8a5888b648102d7b2330ef81",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd6d537c48fa862e8a5888b648102d7b2330ef81",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cd6d537c48fa862e8a5888b648102d7b2330ef81",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd6d537c48fa862e8a5888b648102d7b2330ef81/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e4ad960a577405c4d0f7593f439ad560fabc9d49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e4ad960a577405c4d0f7593f439ad560fabc9d49",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e4ad960a577405c4d0f7593f439ad560fabc9d49"
    }
  ],
  "stats": {
    "total": 379,
    "additions": 354,
    "deletions": 25
  },
  "files": [
    {
      "sha": "f1ae342b4c3569240a31c28174730403176974b1",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -1,3 +1,18 @@\n+2021-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26256\n+\t* elflink.c (compare_link_order): Place unordered sections before\n+\tordered sections.\n+\t(elf_fixup_link_order): Add a link info argument.  Allow mixed\n+\tordered and unordered input sections for non-relocatable link.\n+\tSort the consecutive bfd_indirect_link_order sections with the\n+\tsame pattern.  Change the offsets of the bfd_indirect_link_order\n+\tsections only.\n+\t(bfd_elf_final_link): Pass info to elf_fixup_link_order.\n+\t* section.c (bfd_section): Add pattern.\n+\t(BFD_FAKE_SECTION): Initialize pattern to NULL.\n+\t* bfd-in2.h: Regenerated.\n+\n 2021-01-04  Alexander Fedotov  <alfedotov@gmail.com>\n \n \t* elf32-arm.c (elf32_arm_print_private_bfd_data): Prefix hex value"
    },
    {
      "sha": "43ead185c197bbad6f1b1d4b806876f0b5efe6f3",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -1184,6 +1184,9 @@ typedef struct bfd_section\n   struct bfd_symbol *symbol;\n   struct bfd_symbol **symbol_ptr_ptr;\n \n+  /* The matching section name pattern in linker script.  */\n+  const char *pattern;\n+\n   /* Early in the link process, map_head and map_tail are used to build\n      a list of input sections attached to an output section.  Later,\n      output sections use these fields for a list of bfd_link_order\n@@ -1377,8 +1380,8 @@ discarded_section (const asection *sec)\n   /* target_index, used_by_bfd, constructor_chain, owner,           */ \\\n      0,            NULL,        NULL,              NULL,               \\\n                                                                        \\\n-  /* symbol,                    symbol_ptr_ptr,                     */ \\\n-     (struct bfd_symbol *) SYM, &SEC.symbol,                           \\\n+  /* symbol,                    symbol_ptr_ptr, pattern,            */ \\\n+     (struct bfd_symbol *) SYM, &SEC.symbol,    NULL,                  \\\n                                                                        \\\n   /* map_head, map_tail, already_assigned                           */ \\\n      { NULL }, { NULL }, NULL                                          \\"
    },
    {
      "sha": "df5b997cf0089b515dc97a215671c5a8edbf5335",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 64,
      "deletions": 19,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -11869,8 +11869,21 @@ compare_link_order (const void *a, const void *b)\n   const struct bfd_link_order *blo = *(const struct bfd_link_order **) b;\n   asection *asec = elf_linked_to_section (alo->u.indirect.section);\n   asection *bsec = elf_linked_to_section (blo->u.indirect.section);\n-  bfd_vma apos = asec->output_section->lma + asec->output_offset;\n-  bfd_vma bpos = bsec->output_section->lma + bsec->output_offset;\n+  bfd_vma apos, bpos;\n+\n+  /* Check if any sections are unordered.  */\n+  if (asec == NULL || bsec == NULL)\n+    {\n+      /* Place unordered sections before ordered sections.  */\n+      if (bsec != NULL)\n+\treturn -1;\n+      else if (asec != NULL)\n+\treturn 1;\n+      return 0;\n+    }\n+\n+  apos = asec->output_section->lma + asec->output_offset;\n+  bpos = bsec->output_section->lma + bsec->output_offset;\n \n   if (apos < bpos)\n     return -1;\n@@ -11905,14 +11918,14 @@ compare_link_order (const void *a, const void *b)\n    sections.  Ideally we'd do this in the linker proper.  */\n \n static bfd_boolean\n-elf_fixup_link_order (bfd *abfd, asection *o)\n+elf_fixup_link_order (struct bfd_link_info *info, bfd *abfd, asection *o)\n {\n   size_t seen_linkorder;\n   size_t seen_other;\n   size_t n;\n   struct bfd_link_order *p;\n   bfd *sub;\n-  struct bfd_link_order **sections;\n+  struct bfd_link_order **sections, **indirect_sections;\n   asection *other_sec, *linkorder_sec;\n   bfd_vma offset;  /* Octets.  */\n \n@@ -11943,7 +11956,9 @@ elf_fixup_link_order (bfd *abfd, asection *o)\n       else\n \tseen_other++;\n \n-      if (seen_other && seen_linkorder)\n+      /* Allow mixed ordered and unordered input sections for\n+         non-relocatable link.  */\n+      if (bfd_link_relocatable (info) && seen_other && seen_linkorder)\n \t{\n \t  if (other_sec && linkorder_sec)\n \t    _bfd_error_handler\n@@ -11963,6 +11978,10 @@ elf_fixup_link_order (bfd *abfd, asection *o)\n   if (!seen_linkorder)\n     return TRUE;\n \n+  /* Non-relocatable output can have both ordered and unordered input\n+     sections.  */\n+  seen_linkorder += seen_other;\n+\n   sections = bfd_malloc (seen_linkorder * sizeof (*sections));\n   if (sections == NULL)\n     return FALSE;\n@@ -11971,22 +11990,48 @@ elf_fixup_link_order (bfd *abfd, asection *o)\n   for (p = o->map_head.link_order; p != NULL; p = p->next)\n     sections[seen_linkorder++] = p;\n \n-  /* Sort the input sections in the order of their linked section.  */\n-  qsort (sections, seen_linkorder, sizeof (*sections), compare_link_order);\n+  for (indirect_sections = sections, n = 0;\n+       n < seen_linkorder;\n+       indirect_sections++, n++)\n+    {\n+      /* Find the first bfd_indirect_link_order section.  */\n+      if (indirect_sections[0]->type == bfd_indirect_link_order)\n+\t{\n+\t  /* Count the consecutive bfd_indirect_link_order sections\n+\t     with the same pattern.  */\n+\t  size_t i, n_indirect;\n+\t  const char *pattern\n+\t    = indirect_sections[0]->u.indirect.section->pattern;\n+\t  for (i = n + 1; i < seen_linkorder; i++)\n+\t    if (sections[i]->type != bfd_indirect_link_order\n+\t\t|| sections[i]->u.indirect.section->pattern != pattern)\n+\t      break;\n+\t  n_indirect = i - n;\n+\t  /* Sort the bfd_indirect_link_order sections in the order of\n+\t     their linked section.  */\n+\t  qsort (indirect_sections, n_indirect, sizeof (*sections),\n+\t\t compare_link_order);\n+\t  indirect_sections += n_indirect;\n+\t  n += n_indirect;\n+\t}\n+    }\n \n-  /* Change the offsets of the sections.  */\n+  /* Change the offsets of the bfd_indirect_link_order sections.  */\n   offset = 0;\n   for (n = 0; n < seen_linkorder; n++)\n-    {\n-      bfd_vma mask;\n-      asection *s = sections[n]->u.indirect.section;\n-      unsigned int opb = bfd_octets_per_byte (abfd, s);\n-\n-      mask = ~(bfd_vma) 0 << s->alignment_power * opb;\n-      offset = (offset + ~mask) & mask;\n-      sections[n]->offset = s->output_offset = offset / opb;\n-      offset += sections[n]->size;\n-    }\n+    if (sections[n]->type == bfd_indirect_link_order)\n+      {\n+\tbfd_vma mask;\n+\tasection *s = sections[n]->u.indirect.section;\n+\tunsigned int opb = bfd_octets_per_byte (abfd, s);\n+\n+\tmask = ~(bfd_vma) 0 << s->alignment_power * opb;\n+\toffset = (offset + ~mask) & mask;\n+\tsections[n]->offset = s->output_offset = offset / opb;\n+\toffset += sections[n]->size;\n+      }\n+    else\n+      offset = sections[n]->offset + sections[n]->size;\n \n   free (sections);\n   return TRUE;\n@@ -12629,7 +12674,7 @@ bfd_elf_final_link (bfd *abfd, struct bfd_link_info *info)\n   /* Reorder SHF_LINK_ORDER sections.  */\n   for (o = abfd->sections; o != NULL; o = o->next)\n     {\n-      if (!elf_fixup_link_order (abfd, o))\n+      if (!elf_fixup_link_order (info, abfd, o))\n \treturn FALSE;\n     }\n "
    },
    {
      "sha": "10efc3c4aa7bf1030e9f5a639a01d895f79dbc22",
      "filename": "bfd/section.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/section.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/bfd/section.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/section.c?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -541,6 +541,9 @@ CODE_FRAGMENT\n .  struct bfd_symbol *symbol;\n .  struct bfd_symbol **symbol_ptr_ptr;\n .\n+.  {* The matching section name pattern in linker script.  *}\n+.  const char *pattern;\n+.\n .  {* Early in the link process, map_head and map_tail are used to build\n .     a list of input sections attached to an output section.  Later,\n .     output sections use these fields for a list of bfd_link_order\n@@ -734,8 +737,8 @@ CODE_FRAGMENT\n .  {* target_index, used_by_bfd, constructor_chain, owner,           *}\t\\\n .     0,            NULL,        NULL,              NULL,\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n-.  {* symbol,                    symbol_ptr_ptr,                     *}\t\\\n-.     (struct bfd_symbol *) SYM, &SEC.symbol,\t\t\t\t\\\n+.  {* symbol,                    symbol_ptr_ptr, pattern,            *}\t\\\n+.     (struct bfd_symbol *) SYM, &SEC.symbol,    NULL,\t\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n .  {* map_head, map_tail, already_assigned                           *}\t\\\n .     { NULL }, { NULL }, NULL\t\t\t\t\t\t\\"
    },
    {
      "sha": "03ea1a1c9c31ff29d97eaeae1d5d7095d3523167",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26256\n+\t* config/obj-elf.c (obj_elf_change_section): Also filter out\n+\tSHF_LINK_ORDER.\n+\n 2021-01-04  Alan Modra  <amodra@gmail.com>\n \n \tPR 27102"
    },
    {
      "sha": "94fa8051a0bfe749b4201c999272a700687d4f7a",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -666,7 +666,9 @@ obj_elf_change_section (const char *name,\n \t    }\n \t}\n \n-      if (old_sec == NULL && ((attr & ~(SHF_MASKOS | SHF_MASKPROC))\n+      if (old_sec == NULL && ((attr & ~(SHF_LINK_ORDER\n+\t\t\t\t\t| SHF_MASKOS\n+\t\t\t\t\t| SHF_MASKPROC))\n \t\t\t      & ~ssect->attr) != 0)\n \t{\n \t  /* As a GNU extension, we permit a .note section to be"
    },
    {
      "sha": "1fe689a3cf0c677e73012eabc981f89deb981806",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -1,3 +1,22 @@\n+2021-01-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26256\n+\t* ldlang.c (gc_section_callback): Set pattern.\n+\t* testsuite/ld-elf/pr26256-1.s: New file.\n+\t* testsuite/ld-elf/pr26256-1.t: Likewise.\n+\t* testsuite/ld-elf/pr26256-1a.d: Likewise.\n+\t* testsuite/ld-elf/pr26256-1b.d: Likewise.\n+\t* testsuite/ld-elf/pr26256-2.s: Likewise.\n+\t* testsuite/ld-elf/pr26256-2.t: Likewise.\n+\t* testsuite/ld-elf/pr26256-2a.d: Likewise.\n+\t* testsuite/ld-elf/pr26256-2b-alt.d: Likewise.\n+\t* testsuite/ld-elf/pr26256-2b.d: Likewise.\n+\t* testsuite/ld-elf/pr26256-3.s: Likewise.\n+\t* testsuite/ld-elf/pr26256-3a.d: Likewise.\n+\t* testsuite/ld-elf/pr26256-3a.t: Likewise.\n+\t* testsuite/ld-elf/pr26256-3b.d: Likewise.\n+\t* testsuite/ld-elf/pr26256-3b.t: Likewise.\n+\n 2021-01-04  Alan Modra  <amodra@gmail.com>\n \n \tPR 26822"
    },
    {
      "sha": "8cbeda68f460b22c1312b39fb264e37d07657d44",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -7488,7 +7488,7 @@ lang_reset_memory_regions (void)\n \n static void\n gc_section_callback (lang_wild_statement_type *ptr,\n-\t\t     struct wildcard_list *sec ATTRIBUTE_UNUSED,\n+\t\t     struct wildcard_list *sec,\n \t\t     asection *section,\n \t\t     struct flag_info *sflag_info ATTRIBUTE_UNUSED,\n \t\t     lang_input_statement_type *file ATTRIBUTE_UNUSED,\n@@ -7498,6 +7498,8 @@ gc_section_callback (lang_wild_statement_type *ptr,\n      should be as well.  */\n   if (ptr->keep_sections)\n     section->flags |= SEC_KEEP;\n+  if (sec)\n+    section->pattern = sec->spec.name;\n }\n \n /* Iterate over sections marking them against GC.  */"
    },
    {
      "sha": "7351f76655a3ba9f35a0a0b80105b7a1ab318a92",
      "filename": "ld/testsuite/ld-elf/pr26256-1.s",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-1.s?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,20 @@\n+\t.section\t.text.bar,\"ax\",%progbits\n+\t.globl\tbar\n+\t.type\tbar, %function\n+bar:\n+\t.section __patchable_function_entries,\"awo\",%progbits,bar\n+\t.dc.a\t.LPFE1\n+\t.section\t.text.bar,\"ax\",%progbits\n+.LPFE1:\n+\t.byte 0\n+\t.section\t.text._start,\"ax\",%progbits\n+\t.globl\t_start\n+\t.type\t_start, %function\n+_start:\n+\t.section __patchable_function_entries,\"awo\",%progbits,_start\n+\t.dc.a\t.LPFE2\n+\t.section\t.text._start,\"ax\",%progbits\n+.LPFE2:\n+\t.byte 0\n+\t.section .init.data,\"aw\",%progbits\n+\t.byte 0"
    },
    {
      "sha": "f93fff93541cac098a283df1ccb5b9009ba1f543",
      "filename": "ld/testsuite/ld-elf/pr26256-1.t",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-1.t?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,13 @@\n+SECTIONS\n+{\n+  .text : { *(.text*) }\n+  .init.data :\n+  {\n+    *(.init.data);\n+    *(__patchable_function_entries);\n+  }\n+  /DISCARD/ :\n+  {\n+    *(.reginfo) *(.MIPS.abiflags) *(.MIPS.options) *(.trampolines)\n+  }\n+}"
    },
    {
      "sha": "025ace0e8799993b34e772e27f3a60bb95903bf8",
      "filename": "ld/testsuite/ld-elf/pr26256-1a.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-1a.d?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,7 @@\n+#source: pr26256-1.s\n+#ld: -e _start -T pr26256-1.t\n+#nm: -n\n+\n+#...\n+[0-9a-f]+ T _start\n+#pass"
    },
    {
      "sha": "760c6d82e7b7a464bb75a46ac8a00335b58a33fd",
      "filename": "ld/testsuite/ld-elf/pr26256-1b.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-1b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-1b.d?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,7 @@\n+#source: pr26256-1.s\n+#ld: -e _start\n+#nm: -n\n+\n+#...\n+[0-9a-f]+ T _start\n+#pass"
    },
    {
      "sha": "70e3693f42984e8fa59db6893fc6be6b9e243ddb",
      "filename": "ld/testsuite/ld-elf/pr26256-2.s",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-2.s?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,32 @@\n+\t.section .text,\"ax\",%progbits,unique,0\n+\t.globl text0\n+text0:\n+\t.nop\n+\t.section .text,\"ax\",%progbits,unique,1\n+\t.globl text1\n+text1:\n+\t.nop\n+\t.section .linkorder,\"ao\",%progbits,0,unique,0\n+\t.globl linkorder2\n+linkorder2:\n+\t.byte 0\n+\t.section .linkorder,\"ao\",%progbits,text0\n+\t.globl linkorder0\n+linkorder0:\n+\t.byte 1\n+\t.section .linkorder,\"ao\",%progbits,text1\n+\t.globl linkorder1\n+linkorder1:\n+\t.byte 2\n+\t.section .linkorder,\"a\",%progbits\n+\t.globl linkorder3\n+linkorder3:\n+\t.byte 3\n+\t.section .linkorder,\"ao\",%progbits,0,unique,3\n+\t.globl linkorder4\n+linkorder4:\n+\t.byte 4\n+\t.text\n+\t.global _start\n+_start:\n+\t.nop"
    },
    {
      "sha": "0c5e5bc2f131c615ee6ebbe26aba33389131d9a3",
      "filename": "ld/testsuite/ld-elf/pr26256-2.t",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-2.t?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,9 @@\n+SECTIONS\n+{\n+  .linkorder : { *(.linkorder.*) }\n+  .text : { *(.text) }\n+  /DISCARD/ :\n+  {\n+    *(.reginfo) *(.MIPS.abiflags) *(.MIPS.options) *(.trampolines)\n+  }\n+}"
    },
    {
      "sha": "03804d844d7474e13e6f4eab645e9f5b59e4046f",
      "filename": "ld/testsuite/ld-elf/pr26256-2a.d",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-2a.d?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,20 @@\n+#source: pr26256-2.s\n+#ld: -e _start -T pr26256-2.t\n+#nm: -n\n+#xfail: [is_generic]\n+\n+#...\n+[0-9a-f]+ R linkorder2\n+#...\n+[0-9a-f]+ R linkorder3\n+#...\n+[0-9a-f]+ R linkorder4\n+#...\n+[0-9a-f]+ R linkorder0\n+#...\n+[0-9a-f]+ R linkorder1\n+#...\n+[0-9a-f]+ T text0\n+#...\n+[0-9a-f]+ T text1\n+#pass"
    },
    {
      "sha": "f2f03a0f0c3807ab868137ef5e11639ca1feb64c",
      "filename": "ld/testsuite/ld-elf/pr26256-2b-alt.d",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2b-alt.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2b-alt.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-2b-alt.d?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,21 @@\n+#source: pr26256-2.s\n+#ld: -e _start\n+#nm: -n\n+#target: fr30-*-* iq2000-*-* ip2k-*-* xstormy16-*-*\n+# These targets place .linkorder sections before .text sections.\n+\n+#...\n+[0-9a-f]+ R linkorder2\n+#...\n+[0-9a-f]+ R linkorder3\n+#...\n+[0-9a-f]+ R linkorder4\n+#...\n+[0-9a-f]+ R linkorder0\n+#...\n+[0-9a-f]+ R linkorder1\n+#...\n+[0-9a-f]+ T text0\n+#...\n+[0-9a-f]+ T text1\n+#pass"
    },
    {
      "sha": "60c3bff7cd300f73b4e1247f70bab3b5be9fabc3",
      "filename": "ld/testsuite/ld-elf/pr26256-2b.d",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-2b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-2b.d?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,22 @@\n+#source: pr26256-2.s\n+#ld: -e _start\n+#nm: -n\n+#xfail: [is_generic]\n+#notarget: fr30-*-* iq2000-*-* ip2k-*-* xstormy16-*-*\n+# These targets place .linkorder sections before .text sections.\n+\n+#...\n+[0-9a-f]+ T text0\n+#...\n+[0-9a-f]+ T text1\n+#...\n+[0-9a-f]+ R linkorder2\n+#...\n+[0-9a-f]+ R linkorder3\n+#...\n+[0-9a-f]+ R linkorder4\n+#...\n+[0-9a-f]+ R linkorder0\n+#...\n+[0-9a-f]+ R linkorder1\n+#pass"
    },
    {
      "sha": "baad9dcd2e70e004270725625712aedc8bc5c645",
      "filename": "ld/testsuite/ld-elf/pr26256-3.s",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-3.s?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,27 @@\n+\t.text\n+\t.global _start\n+_start:\n+\t.long 0x33333333\n+\t.long 0x33333333\n+\t.long 0x33333333\n+\t.long 0x33333333\n+\n+\t.section .rosection,\"a\"\n+\t.byte 9\n+\n+\t.section .text.bar,\"a\",%progbits\n+\t.long 0x22222222\n+\t.long 0x22222222\n+\t.long 0x22222222\n+\t.long 0x22222222\n+\t.section .text.foo,\"a\",%progbits\n+\t.long 0x11111111\n+\t.long 0x11111111\n+\t.long 0x11111111\n+\t.long 0x11111111\n+\t.section .rodata.foo,\"ao\",%progbits,.text.foo\n+\t.byte 1\n+\t.section .rodata.bar,\"a\",%progbits\n+\t.byte 2\n+\t.section .rodata.bar,\"ao\",%progbits,.text.bar\n+\t.byte 3"
    },
    {
      "sha": "4546f0a0004d0a285cf0364e8a899e4ffdad2e6e",
      "filename": "ld/testsuite/ld-elf/pr26256-3a.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-3a.d?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,11 @@\n+#source: pr26256-3.s\n+#ld: -e _start -T pr26256-3a.t\n+#readelf: -x .rodata -x .text\n+\n+Hex dump of section \\'.rodata\\':\n+  0x[a-f0-9]+ +00010203 +040907 +.+\n+\n+Hex dump of section \\'.text\\':\n+  0x[a-f0-9]+ +22222222 +22222222 +22222222 +.+\n+  0x[a-f0-9]+ +11111111 +11111111 +11111111 +.+\n+  0x[a-f0-9]+ +33333333 +33333333 +33333333 +.+"
    },
    {
      "sha": "12f6fd1171d179a129e3d10f153384d2006f39a7",
      "filename": "ld/testsuite/ld-elf/pr26256-3a.t",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3a.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3a.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-3a.t?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,17 @@\n+SECTIONS\n+{\n+  .rodata :\n+    {\n+      BYTE(0)\n+      *(.rodata.foo)\n+      *(.rodata.bar)\n+      BYTE(4)\n+      *(.rosection)\n+      BYTE(7)\n+    }\n+  .text : {*(.text.bar) *(.text.foo)}\n+  /DISCARD/ :\n+  {\n+    *(.reginfo) *(.MIPS.abiflags) *(.MIPS.options) *(.trampolines)\n+  }\n+}"
    },
    {
      "sha": "7d6dff24fbdcea41f4856839aa2e65a3d6796d48",
      "filename": "ld/testsuite/ld-elf/pr26256-3b.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-3b.d?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,12 @@\n+#source: pr26256-3.s\n+#ld: -e _start -T pr26256-3b.t\n+#readelf: -x .rodata -x .text\n+#xfail: [is_generic]\n+\n+Hex dump of section \\'.rodata\\':\n+  0x[a-f0-9]+ +00020301 +040907 +.+\n+\n+Hex dump of section \\'.text\\':\n+  0x[a-f0-9]+ +22222222 +22222222 +22222222 +.+\n+  0x[a-f0-9]+ +11111111 +11111111 +11111111 +.+\n+  0x[a-f0-9]+ +33333333 +33333333 +33333333 +.+"
    },
    {
      "sha": "952c8d2d8908ec83401ca4c9ace2810f3297dc56",
      "filename": "ld/testsuite/ld-elf/pr26256-3b.t",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3b.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd6d537c48fa862e8a5888b648102d7b2330ef81/ld/testsuite/ld-elf/pr26256-3b.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26256-3b.t?ref=cd6d537c48fa862e8a5888b648102d7b2330ef81",
      "patch": "@@ -0,0 +1,16 @@\n+SECTIONS\n+{\n+  .rodata :\n+    {\n+      BYTE(0)\n+      *(.rodata*)\n+      BYTE(4)\n+      *(.rosection)\n+      BYTE(7)\n+    }\n+  .text : {*(.text.bar) *(.text.foo)}\n+  /DISCARD/ :\n+  {\n+    *(.reginfo) *(.MIPS.abiflags) *(.MIPS.options) *(.trampolines)\n+  }\n+}"
    }
  ]
}