{
  "sha": "11af934b5cdba71d14f8ea7905b484c8a6ba0561",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTFhZjkzNGI1Y2RiYTcxZDE0ZjhlYTc5MDViNDg0YzhhNmJhMDU2MQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-11-02T05:55:10Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-11-02T05:55:10Z"
    },
    "message": "[gdb/testsuite] Remove superfluous 3rd argument from gdb_test call (4)\n\nThere's a pattern:\n...\ngdb_test <command> <pattern> <command>\n...\nthat can be written shorter as:\n...\ngdb_test <command> <pattern>\n...\n\nDetect this pattern in proc gdb_test:\n...\n     global gdb_prompt\n     upvar timeout timeout\n\n     if [llength $args]>2 then {\n        set message [lindex $args 2]\n+       if { $message == [lindex $args 0] && [llength $args] == 3 } {\n+           error \"HERE\"\n+       }\n     } else {\n         set message [lindex $args 0]\n     }\n...\nand fix all occurrences in the testsuite/gdb.base subdir.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-11-02  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/advance.exp: Drop superfluous 3rd argument to gdb_test.\n\t* gdb.base/anon.exp: Same.\n\t* gdb.base/auto-connect-native-target.exp: Same.\n\t* gdb.base/call-ar-st.exp: Same.\n\t* gdb.base/catch-syscall.exp: Same.\n\t* gdb.base/commands.exp: Same.\n\t* gdb.base/default.exp: Same.\n\t* gdb.base/display.exp: Same.\n\t* gdb.base/float.exp: Same.\n\t* gdb.base/foll-fork.exp: Same.\n\t* gdb.base/help.exp: Same.\n\t* gdb.base/info-macros.exp: Same.\n\t* gdb.base/info-proc.exp: Same.\n\t* gdb.base/info-target.exp: Same.\n\t* gdb.base/long_long.exp: Same.\n\t* gdb.base/macscp.exp: Same.\n\t* gdb.base/memattr.exp: Same.\n\t* gdb.base/nofield.exp: Same.\n\t* gdb.base/pointers.exp: Same.\n\t* gdb.base/printcmds.exp: Same.\n\t* gdb.base/ptype.exp: Same.\n\t* gdb.base/restore.exp: Same.\n\t* gdb.base/return.exp: Same.\n\t* gdb.base/scope.exp: Same.\n\t* gdb.base/set-noassign.exp: Same.\n\t* gdb.base/setshow.exp: Same.\n\t* gdb.base/shlib-call.exp: Same.\n\t* gdb.base/signals.exp: Same.\n\t* gdb.base/sigstep.exp: Same.\n\t* gdb.base/skip.exp: Same.\n\t* gdb.base/solib-symbol.exp: Same.\n\t* gdb.base/stap-probe.exp: Same.\n\t* gdb.base/step-line.exp: Same.\n\t* gdb.base/step-test.exp: Same.\n\t* gdb.base/style.exp: Same.\n\t* gdb.base/varargs.exp: Same.\n\t* gdb.base/vla-datatypes.exp: Same.\n\t* gdb.base/vla-ptr.exp: Same.\n\t* gdb.base/vla-sideeffect.exp: Same.\n\t* gdb.base/volatile.exp: Same.\n\t* gdb.base/watch-cond-infcall.exp: Same.\n\t* gdb.base/watchpoint.exp: Same.\n\nChange-Id: Ifd24dc13d552e7dd03f9049db419b08c6adc4112",
    "tree": {
      "sha": "8f3f9303975c94a58bd00685f6025cf12e6b8eba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8f3f9303975c94a58bd00685f6025cf12e6b8eba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/11af934b5cdba71d14f8ea7905b484c8a6ba0561",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11af934b5cdba71d14f8ea7905b484c8a6ba0561",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/11af934b5cdba71d14f8ea7905b484c8a6ba0561",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11af934b5cdba71d14f8ea7905b484c8a6ba0561/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e96ec2bab75a943e1666497b1389e297775af5a8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e96ec2bab75a943e1666497b1389e297775af5a8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e96ec2bab75a943e1666497b1389e297775af5a8"
    }
  ],
  "stats": {
    "total": 756,
    "additions": 359,
    "deletions": 397
  },
  "files": [
    {
      "sha": "9b7bcf64478f6007a980bc78358c0dd1a9ecaf13",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -1,3 +1,48 @@\n+2019-11-02  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/advance.exp: Drop superfluous 3rd argument to gdb_test.\n+\t* gdb.base/anon.exp: Same.\n+\t* gdb.base/auto-connect-native-target.exp: Same.\n+\t* gdb.base/call-ar-st.exp: Same.\n+\t* gdb.base/catch-syscall.exp: Same.\n+\t* gdb.base/commands.exp: Same.\n+\t* gdb.base/default.exp: Same.\n+\t* gdb.base/display.exp: Same.\n+\t* gdb.base/float.exp: Same.\n+\t* gdb.base/foll-fork.exp: Same.\n+\t* gdb.base/help.exp: Same.\n+\t* gdb.base/info-macros.exp: Same.\n+\t* gdb.base/info-proc.exp: Same.\n+\t* gdb.base/info-target.exp: Same.\n+\t* gdb.base/long_long.exp: Same.\n+\t* gdb.base/macscp.exp: Same.\n+\t* gdb.base/memattr.exp: Same.\n+\t* gdb.base/nofield.exp: Same.\n+\t* gdb.base/pointers.exp: Same.\n+\t* gdb.base/printcmds.exp: Same.\n+\t* gdb.base/ptype.exp: Same.\n+\t* gdb.base/restore.exp: Same.\n+\t* gdb.base/return.exp: Same.\n+\t* gdb.base/scope.exp: Same.\n+\t* gdb.base/set-noassign.exp: Same.\n+\t* gdb.base/setshow.exp: Same.\n+\t* gdb.base/shlib-call.exp: Same.\n+\t* gdb.base/signals.exp: Same.\n+\t* gdb.base/sigstep.exp: Same.\n+\t* gdb.base/skip.exp: Same.\n+\t* gdb.base/solib-symbol.exp: Same.\n+\t* gdb.base/stap-probe.exp: Same.\n+\t* gdb.base/step-line.exp: Same.\n+\t* gdb.base/step-test.exp: Same.\n+\t* gdb.base/style.exp: Same.\n+\t* gdb.base/varargs.exp: Same.\n+\t* gdb.base/vla-datatypes.exp: Same.\n+\t* gdb.base/vla-ptr.exp: Same.\n+\t* gdb.base/vla-sideeffect.exp: Same.\n+\t* gdb.base/volatile.exp: Same.\n+\t* gdb.base/watch-cond-infcall.exp: Same.\n+\t* gdb.base/watchpoint.exp: Same.\n+\n 2019-11-02  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.cp/anon-union.exp: Drop superfluous 3rd argument to gdb_test."
    },
    {
      "sha": "9e20af295259fcfbee242c604071ebe49de6075f",
      "filename": "gdb/testsuite/gdb.base/advance.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/advance.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/advance.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/advance.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -42,8 +42,7 @@ gdb_test \"advance [gdb_get_line_number \"advance malformed\"] then stop\" \\\n # Verify that \"advance <funcname>\" works.\n #\n gdb_test \"advance func\" \\\n-\t\"func.*at.*x = x \\\\+ 5.\" \\\n-\t\"advance func\"\n+\t\"func.*at.*x = x \\\\+ 5.\"\n \n # Verify that \"advance <funcname>\" when funcname is NOT called by the current\n # frame, stops at the end of the current frame."
    },
    {
      "sha": "4ce377a977558c1081f15ad4185ca97d13c53516",
      "filename": "gdb/testsuite/gdb.base/anon.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/anon.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/anon.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/anon.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -29,4 +29,4 @@ set loc [gdb_get_line_number \"break here\"]\n gdb_test \"break $loc\" \".*Breakpoint 2 .*\" \"set breakpoint in anon.c\"\n gdb_continue_to_breakpoint \"continue to breakpoint in anon.c\"\n \n-gdb_test \"print val.data.six\" \" = 6\" \"print val.data.six\"\n+gdb_test \"print val.data.six\" \" = 6\""
    },
    {
      "sha": "d1a8566e6533aff4df0602de8cec93ff94a4a017",
      "filename": "gdb/testsuite/gdb.base/auto-connect-native-target.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/auto-connect-native-target.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/auto-connect-native-target.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/auto-connect-native-target.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -139,7 +139,7 @@ proc test_native_target_remains_pushed {} {\n # remains pushed.\n \n with_test_prefix \"kill\" {\n-    gdb_test \"start\" \"main.*\" \"start\"\n+    gdb_test \"start\" \"main.*\"\n \n     kill_program \"kill\"\n "
    },
    {
      "sha": "ec80840582b070e4a02c73ef76395cf9f8a218b7",
      "filename": "gdb/testsuite/gdb.base/call-ar-st.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/call-ar-st.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/call-ar-st.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/call-ar-st.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -363,8 +363,7 @@ if {!$skip_float_test && \\\n \n #call compute_with_small_structs(20)\n gdb_test \"print compute_with_small_structs(20)\" \\\n-    \"\\[0-9\\]+ = void\" \\\n-    \"print compute_with_small_structs(20)\"\n+    \"\\[0-9\\]+ = void\"\n \n \n #call print_ten_doubles(123.456, 123.456, -0.12, -1.23, 343434.8, 89.098, "
    },
    {
      "sha": "78394aa5a7ace309bddeef086df5ed600a80746a",
      "filename": "gdb/testsuite/gdb.base/catch-syscall.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/catch-syscall.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/catch-syscall.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/catch-syscall.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -425,8 +425,7 @@ proc do_syscall_tests {} {\n     # For the build tree that is handled by INTERNAL_GDBFLAGS.\n \n     # Verify that the 'catch syscall' help is available\n-    set thistest \"help catch syscall\"\n-    gdb_test \"help catch syscall\" \"Catch system calls.*\" $thistest\n+    gdb_test \"help catch syscall\" \"Catch system calls.*\"\n \n     # Try to set a catchpoint to a nonsense syscall\n     set thistest \"catch syscall to a nonsense syscall is prohibited\"\n@@ -594,16 +593,14 @@ proc test_catch_syscall_multi_arch {} {\n \tgdb_start\n \n \tgdb_test \"set architecture $arch1\" \\\n-\t    \"The target architecture is assumed to be $arch1\" \\\n-\t    \"set arch to $arch1\"\n+\t    \"The target architecture is assumed to be $arch1\"\n \n \tgdb_test \"catch syscall $syscall_number\" \\\n \t    \"Catchpoint $decimal \\\\(syscall .${syscall1_name}. \\\\\\[${syscall_number}\\\\\\]\\\\)\" \\\n \t    \"insert catch syscall on syscall $syscall_number -- $syscall1_name on $arch1\"\n \n \tgdb_test \"set architecture $arch2\" \\\n-\t    \"The target architecture is assumed to be $arch2\" \\\n-\t    \"set arch to $arch2\"\n+\t    \"The target architecture is assumed to be $arch2\"\n \n \tgdb_test \"catch syscall $syscall_number\" \\\n \t    \"Catchpoint $decimal \\\\(syscall .${syscall2_name}. \\\\\\[${syscall_number}\\\\\\]\\\\)\" \\"
    },
    {
      "sha": "904143f756c51b4746eef7af2d73d54e470cfafc",
      "filename": "gdb/testsuite/gdb.base/commands.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/commands.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/commands.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/commands.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -195,7 +195,7 @@ proc_with_prefix if_while_breakpoint_command_test {} {\n     # currently support it.  Bash value variable to be what we want.\n     gdb_test \"p value=5\" \" = 5\" \"set value to 5\"\n     delete_breakpoints\n-    gdb_test \"break factorial\" \"Breakpoint.*at.*\" \"break factorial\"\n+    gdb_test \"break factorial\" \"Breakpoint.*at.*\"\n \n     gdb_test_multiple \"commands\" \"commands\" {\n \t-re \"End with\" {"
    },
    {
      "sha": "c323060d9ab941abbf9163a20a6cac8d60a0a78a",
      "filename": "gdb/testsuite/gdb.base/default.exp",
      "status": "modified",
      "additions": 138,
      "deletions": 138,
      "changes": 276,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/default.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -25,7 +25,7 @@ set timeout 60\n # test default actions of gdb commands\n #\n \n-gdb_test \"add-symbol-file\" \"add-symbol-file takes a file name and an address\" \"add-symbol-file\"\n+gdb_test \"add-symbol-file\" \"add-symbol-file takes a file name and an address\"\n \n # test append\n gdb_test \"append\" \"\\\"append\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of append subcommands:.*\" \n@@ -51,7 +51,7 @@ if !$use_gdb_stub {\n \t}\n     }\n \n-    gdb_test \"break\" \"No default breakpoint address now.\" \"break\"\n+    gdb_test \"break\" \"No default breakpoint address now.\"\n     foreach i \"b br bre brea\" {\n \tgdb_test $i \"No default breakpoint address now.\" \"break \\\"$i\\\" abbreviation\"\n     }\n@@ -70,36 +70,36 @@ if !$use_gdb_stub {\n     warning \"Skipping backtrace and break tests because of GDB stub.\"\n }\n \n-gdb_test \"continue\" \"The program is not being run.\" \"continue\"\n+gdb_test \"continue\" \"The program is not being run.\"\n gdb_test \"c\" \"The program is not being run.\" \"continue \\\"c\\\" abbreviation\"\n \n #test call\n-gdb_test \"call\" \"The history is empty..*\" \"call\"\n+gdb_test \"call\" \"The history is empty..*\"\n \n \n #test catch\n-gdb_test \"catch\" \"Catch requires an event name..*\" \"catch\"\n+gdb_test \"catch\" \"Catch requires an event name..*\"\n \n #test cd\n gdb_test \"cd\" \"Working directory \\[^\\r\\n\\]*\\(\\r\\n \\\\(canonically \\[^\\r\\n\\]*\\\\)\\)?\\\\.\"\n \n #test clear\n-gdb_test \"clear\" \"No source file specified..*\" \"clear\"\n+gdb_test \"clear\" \"No source file specified..*\"\n \n #test commands\n-gdb_test \"commands\" \"Argument required .one or more breakpoint numbers...*\" \"commands\"\n+gdb_test \"commands\" \"Argument required .one or more breakpoint numbers...*\"\n \n #test condition\n-gdb_test \"condition\" \"Argument required .breakpoint number.*\" \"condition\"\n+gdb_test \"condition\" \"Argument required .breakpoint number.*\"\n \n #test core-file\n-gdb_test \"core-file\" \"No core file now.\" \"core-file\"\n+gdb_test \"core-file\" \"No core file now.\"\n #test delete \"d\" abbreviation\n gdb_test_no_output \"d\" \"delete \\\"d\\\" abbreviation\"\n #test delete\n gdb_test_no_output \"delete\" \"delete\"\n #test define\n-gdb_test \"define\" \"Argument required \\[(\\]name of command to define\\[)\\].\" \"define\"\n+gdb_test \"define\" \"Argument required \\[(\\]name of command to define\\[)\\].\"\n #test delete breakpoints\n gdb_test_no_output \"delete breakpoints\" \"delete breakpoints\"\n #test delete display\n@@ -113,7 +113,7 @@ gdb_test \"delete display\" \\\n \n \n #test detach\n-gdb_test \"detach\" \".*\" \"detach\"\n+gdb_test \"detach\" \".*\"\n \n #test directory\n # FIXME -- need to dump full output to detailed log\n@@ -135,17 +135,17 @@ gdb_test_no_output \"disable breakpoints\" \"disable breakpoints\"\n #test disable display\n gdb_test_no_output \"disable display\" \"disable display\"\n #test disassemble\n-gdb_test \"disassemble\" \"No frame selected.\" \"disassemble\"\n+gdb_test \"disassemble\" \"No frame selected.\"\n #test display\n gdb_test_no_output \"display\" \"display\"\n #test do\n-gdb_test \"do\" \"No stack.\" \"do\"\n+gdb_test \"do\" \"No stack.\"\n #test document\n-gdb_test \"document\" \"Argument required .name of command to define.*\" \"document\"\n+gdb_test \"document\" \"Argument required .name of command to define.*\"\n #test down\n-gdb_test \"down\" \"No stack.*\" \"down\"\n+gdb_test \"down\" \"No stack.*\"\n #test down-silently\n-gdb_test \"down-silently\" \"No stack.\" \"down-silently\"\n+gdb_test \"down-silently\" \"No stack.\"\n # test dump\n gdb_test \"dump\" \"\\\"dump\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of dump subcommands:.*\" \n gdb_test \"dump binary\" \"\\\"dump binary\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of dump binary subcommands:.*\" \n@@ -165,17 +165,17 @@ gdb_test \"dump tekhex value\"  \"Missing filename\\.\"\n #test echo\n gdb_test_no_output \"echo\" \"echo\"\n #test enable breakpoints delete\n-gdb_test \"enable breakpoints delete\" \"Argument required .one or more breakpoint numbers.*\" \"enable breakpoints delete\"\n+gdb_test \"enable breakpoints delete\" \"Argument required .one or more breakpoint numbers.*\"\n #test enable breakpoints once\n-gdb_test \"enable breakpoints once\" \"Argument required .one or more breakpoint numbers.*\" \"enable breakpoints once\"\n+gdb_test \"enable breakpoints once\" \"Argument required .one or more breakpoint numbers.*\"\n #test enable breakpoints\n gdb_test_no_output \"enable breakpoints\" \"enable breakpoints\"\n #test enable delete\n-gdb_test \"enable delete\" \"Argument required .one or more breakpoint numbers.*\" \"enable delete\"\n+gdb_test \"enable delete\" \"Argument required .one or more breakpoint numbers.*\"\n #test enable display\n gdb_test_no_output \"enable display\" \"enable display\"\n #test enable once\n-gdb_test \"enable once\" \"Argument required .one or more breakpoint numbers.*\" \"enable once\"\n+gdb_test \"enable once\" \"Argument required .one or more breakpoint numbers.*\"\n #test enable\n gdb_test_no_output \"enable\" \"enable\"\n #test exec-file\n@@ -199,9 +199,9 @@ gdb_expect {\n #test frame \"f\" abbreviation\n gdb_test \"f\" \"No stack.\" \"frame \\\"f\\\" abbreviation\"\n #test frame\n-gdb_test \"frame\" \"No stack.\" \"frame\"\n+gdb_test \"frame\" \"No stack.\"\n #test fg\n-gdb_test \"fg\" \"The program is not being run.\" \"fg\"\n+gdb_test \"fg\" \"The program is not being run.\"\n \n #test file\n send_gdb \"file\\n\"\n@@ -221,11 +221,11 @@ gdb_expect {\n }\n \n #test finish\n-gdb_test \"finish\" \"The program is not being run.\" \"finish\"\n+gdb_test \"finish\" \"The program is not being run.\"\n #test forward-search\n # The message here comes from the regexp library, not gdb, and so can\n # vary on different systems.\n-gdb_test \"forward-search\" \"No previous regular expression.*|There is no previous regular expression.*\" \"forward-search\"\n+gdb_test \"forward-search\" \"No previous regular expression.*|There is no previous regular expression.*\"\n #test gcore\n \n gdb_test_multiple \"gcore\" \"gcore\" {\n@@ -249,25 +249,25 @@ gdb_test_multiple \"generate-core-file\" \"generate-core-file\" {\n #test help \"h\" abbreviation\n gdb_test \"h\" \"List of classes of commands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+aliases -- Aliases of other commands(\\[^\\r\\n\\]*\\[\\r\\n\\])+breakpoints -- Making program stop at certain points(\\[^\\r\\n\\]*\\[\\r\\n\\])+data -- Examining data(\\[^\\r\\n\\]*\\[\\r\\n\\])+files -- Specifying and examining files(\\[^\\r\\n\\]*\\[\\r\\n\\])+obscure -- Obscure features(\\[^\\r\\n\\]*\\[\\r\\n\\])+running -- Running the program(\\[^\\r\\n\\]*\\[\\r\\n\\])+stack -- Examining the stack(\\[^\\r\\n\\]*\\[\\r\\n\\])+status -- Status inquiries(\\[^\\r\\n\\]*\\[\\r\\n\\])+support -- Support facilities(\\[^\\r\\n\\]*\\[\\r\\n\\])+user-defined -- User-defined commands(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help\\\" followed by a class name for a list of commands in that class.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help\\\" followed by command name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"help \\\"h\\\" abbreviation\"\n #test help\n-gdb_test \"help\" \"List of classes of commands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+aliases -- Aliases of other commands(\\[^\\r\\n\\]*\\[\\r\\n\\])+breakpoints -- Making program stop at certain points(\\[^\\r\\n\\]*\\[\\r\\n\\])+data -- Examining data(\\[^\\r\\n\\]*\\[\\r\\n\\])+files -- Specifying and examining files(\\[^\\r\\n\\]*\\[\\r\\n\\])+obscure -- Obscure features(\\[^\\r\\n\\]*\\[\\r\\n\\])+running -- Running the program(\\[^\\r\\n\\]*\\[\\r\\n\\])+stack -- Examining the stack(\\[^\\r\\n\\]*\\[\\r\\n\\])+status -- Status inquiries(\\[^\\r\\n\\]*\\[\\r\\n\\])+support -- Support facilities(\\[^\\r\\n\\]*\\[\\r\\n\\])+user-defined -- User-defined commands(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help\\\" followed by a class name for a list of commands in that class.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help\\\" followed by command name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"help\"\n+gdb_test \"help\" \"List of classes of commands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+aliases -- Aliases of other commands(\\[^\\r\\n\\]*\\[\\r\\n\\])+breakpoints -- Making program stop at certain points(\\[^\\r\\n\\]*\\[\\r\\n\\])+data -- Examining data(\\[^\\r\\n\\]*\\[\\r\\n\\])+files -- Specifying and examining files(\\[^\\r\\n\\]*\\[\\r\\n\\])+obscure -- Obscure features(\\[^\\r\\n\\]*\\[\\r\\n\\])+running -- Running the program(\\[^\\r\\n\\]*\\[\\r\\n\\])+stack -- Examining the stack(\\[^\\r\\n\\]*\\[\\r\\n\\])+status -- Status inquiries(\\[^\\r\\n\\]*\\[\\r\\n\\])+support -- Support facilities(\\[^\\r\\n\\]*\\[\\r\\n\\])+user-defined -- User-defined commands(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help\\\" followed by a class name for a list of commands in that class.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help\\\" followed by command name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test handle\n-gdb_test \"handle\" \"Argument required .signal to handle.*\" \"handle\"\n+gdb_test \"handle\" \"Argument required .signal to handle.*\"\n #test info \"i\" abbreviation \n gdb_test \"i\" \"\\\"info\\\" must be followed by the name of an info command.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of info subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help info\\\" followed by info subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"info \\\"i\\\" abbreviation\"\n #test info\n-gdb_test \"info\" \"\\\"info\\\" must be followed by the name of an info command.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of info subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help info\\\" followed by info subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"info\"\n+gdb_test \"info\" \"\\\"info\\\" must be followed by the name of an info command.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of info subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help info\\\" followed by info subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test ignore\n-gdb_test \"ignore\" \"Argument required .a breakpoint number.*\" \"ignore\"\n+gdb_test \"ignore\" \"Argument required .a breakpoint number.*\"\n #test info address\n-gdb_test \"info address\" \"Argument required.\" \"info address\"\n+gdb_test \"info address\" \"Argument required.\"\n #test info all-registers\n-gdb_test \"info all-registers\" \"The program has no registers now.\" \"info all-registers\"\n+gdb_test \"info all-registers\" \"The program has no registers now.\"\n #test info args\n-gdb_test \"info args\" \"No frame selected.\" \"info args\"\n+gdb_test \"info args\" \"No frame selected.\"\n #test info bogus-gdb-command\n-gdb_test \"info bogus-gdb-command\" \"Undefined info command: \\\"bogus-gdb-command\\\".  Try \\\"help info\\\".*\" \"info bogus-gdb-command\"\n+gdb_test \"info bogus-gdb-command\" \"Undefined info command: \\\"bogus-gdb-command\\\".  Try \\\"help info\\\".*\"\n #test info breakpoints\n-gdb_test \"info breakpoints\" \"No breakpoints or watchpoints.\" \"info breakpoints\"\n+gdb_test \"info breakpoints\" \"No breakpoints or watchpoints.\"\n #test info copying\n # FIXME -- doesn't work worth a shit\n #send_gdb \"info copying\"\n@@ -277,27 +277,27 @@ gdb_test \"info copying\"\n #\n #\n #test info display\n-gdb_test \"info display\" \"There are no auto-display expressions now.\" \"info display\"\n+gdb_test \"info display\" \"There are no auto-display expressions now.\"\n #test info frame \"f\" abbreviation\n gdb_test \"info f\" \"No stack.*|No selected frame.*\" \"info frame \\\"f\\\" abbreviation\"\n #test info frame\n-gdb_test \"info frame\" \"No stack.|No selected frame.\" \"info frame\"\n+gdb_test \"info frame\" \"No stack.|No selected frame.\"\n #test info files\n gdb_test_no_output \"info files\" \"info files\"\n #test info float\n-gdb_test \"info float\" \"The program has no registers now.\" \"info float\"\n+gdb_test \"info float\" \"The program has no registers now.\"\n #test info functions\n-gdb_test \"info functions\" \"All defined functions:\" \"info functions\"\n+gdb_test \"info functions\" \"All defined functions:\"\n #test info locals\n-gdb_test \"info locals\" \"No frame selected.\" \"info locals\"\n+gdb_test \"info locals\" \"No frame selected.\"\n #test info program\n-gdb_test \"info program\" \"The program being debugged is not being run.\" \"info program\"\n+gdb_test \"info program\" \"The program being debugged is not being run.\"\n #test info registers\n-gdb_test \"info registers\" \"The program has no registers now.\" \"info registers\"\n+gdb_test \"info registers\" \"The program has no registers now.\"\n #test info stack \"s\" abbreviation\n gdb_test \"info s\" \"No stack.\" \"info stack \\\"s\\\" abbreviation\"\n #test info stack\n-gdb_test \"info stack\" \"No stack.\" \"info stack\"\n+gdb_test \"info stack\" \"No stack.\"\n #test info set\n # Test improved to check three parts:\n # 1) confirm\n@@ -332,50 +332,50 @@ gdb_test_multiple \"info set\" \"info set\" {\n }\n gdb_test \"info symbol\" \"Argument required .address..\"\n #test info source\n-gdb_test  \"info source\" \"No current source file..*\" \"info source\"\n+gdb_test  \"info source\" \"No current source file..*\"\n #test info sources\n-gdb_test \"info sources\" \"No symbol table is loaded.  Use the \\\"file\\\" command.*\" \"info sources\"\n+gdb_test \"info sources\" \"No symbol table is loaded.  Use the \\\"file\\\" command.*\"\n #test info target\n gdb_test_no_output \"info target\" \"info target\"\n #test info terminal\n-gdb_test \"info terminal\" \"No saved terminal information.\" \"info terminal\"\n+gdb_test \"info terminal\" \"No saved terminal information.\"\n # test info threads\n-gdb_test \"info threads\" \"No threads.\" \"info threads\"\n+gdb_test \"info threads\" \"No threads.\"\n #test info types\n-gdb_test \"info types\" \"All defined types:\" \"info types\"\n+gdb_test \"info types\" \"All defined types:\"\n #test info variables\n-gdb_test \"info variables\" \"All defined variables:\" \"info variables\"\n+gdb_test \"info variables\" \"All defined variables:\"\n #test info vector\n-gdb_test \"info vector\" \"The program has no registers now.\" \"info vector\"\n+gdb_test \"info vector\" \"The program has no registers now.\"\n #test info warranty\n-gdb_test \"info warranty\" \"15. *Disclaimer of Warranty.*\" \"info warranty\"\n+gdb_test \"info warranty\" \"15. *Disclaimer of Warranty.*\"\n #test info watchpoints\n-gdb_test \"info watchpoints\" \"No watchpoints.\" \"info watchpoints\"\n+gdb_test \"info watchpoints\" \"No watchpoints.\"\n #test inspect\n-gdb_test \"inspect\" \"The history is empty.\" \"inspect\"\n+gdb_test \"inspect\" \"The history is empty.\"\n #test jump\n-gdb_test \"jump\" \"The program is not being run.\" \"jump\"\n+gdb_test \"jump\" \"The program is not being run.\"\n #test kill\n-gdb_test \"kill\" \"The program is not being run.\" \"kill\"\n+gdb_test \"kill\" \"The program is not being run.\"\n #test list \"l\" abbreviation\n gdb_test \"l\" \"No symbol table is loaded.  Use the \\\"file\\\" command.*\" \"list \\\"l\\\" abbreviation\"\n #test list\n-gdb_test \"list\" \"No symbol table is loaded.  Use the \\\"file\\\" command.*\" \"list\"\n+gdb_test \"list\" \"No symbol table is loaded.  Use the \\\"file\\\" command.*\"\n #test load\n # The ``takes a file name'' case is for vxgdb.\n # The ``Use the \"file\" command'' case is for newer GDB versions which try\n # to deduce the filename from the exec file.\n-gdb_test \"load\" \"You can't do that when your target is `None'.*|The load command takes a file name.*|Must specify at least a file name with the load command.*|.*Use the .file. or .exec-file. command.*\" \"load\"\n+gdb_test \"load\" \"You can't do that when your target is `None'.*|The load command takes a file name.*|Must specify at least a file name with the load command.*|.*Use the .file. or .exec-file. command.*\"\n #test next \"n\" abbreviation\n gdb_test \"n\" \"The program is not being run.\" \"next \\\"n\\\" abbreviation\"\n #test next\n-gdb_test \"next\" \"The program is not being run.\" \"next\"\n+gdb_test \"next\" \"The program is not being run.\"\n #test nexti \"ni\" abbreviation\n gdb_test \"ni\" \"The program is not being run.\" \"nexti \\\"ni\\\" abbreviation\"\n #test nexti\n-gdb_test \"nexti\" \"The program is not being run.\" \"nexti\"\n+gdb_test \"nexti\" \"The program is not being run.\"\n #test output\n-gdb_test \"output\" \"Argument required .expression to compute.*\" \"output\"\n+gdb_test \"output\" \"Argument required .expression to compute.*\"\n \n #test overlay\n gdb_test \"overlay\" \"\\\"overlay\\\" must be followed by the name of .*\"\n@@ -394,13 +394,13 @@ gdb_test \"overlay unmap\"  \"Argument required: name of an overlay section.\" \"over\n #test print \"p\" abbreviation\n gdb_test \"p\" \"The history is empty.\" \"print \\\"p\\\" abbreviation\"\n #test print\n-gdb_test \"print\" \"The history is empty.\" \"print\"\n+gdb_test \"print\" \"The history is empty.\"\n #test printf\n-gdb_test \"printf\" \"Argument required .format-control string and values to print.*\" \"printf\"\n+gdb_test \"printf\" \"Argument required .format-control string and values to print.*\"\n #test ptype\n-gdb_test \"ptype\" \"The history is empty.\" \"ptype\"\n+gdb_test \"ptype\" \"The history is empty.\"\n #test pwd\n-gdb_test \"pwd\" \"Working directory .*\" \"pwd\"\n+gdb_test \"pwd\" \"Working directory .*\"\n \n #test run \"r\" abbreviation\n if $use_gdb_stub {\n@@ -459,17 +459,17 @@ gdb_test \"return\" \"No selected frame..*\" \"return\"  \"Make .* return now.*y or n.\n \n \n #test reverse-search\n-gdb_test \"reverse-search\" \"No previous regular expression.*|There is no previous regular expression.*\" \"reverse-search\"\n+gdb_test \"reverse-search\" \"No previous regular expression.*|There is no previous regular expression.*\"\n #test step \"s\" abbreviation\n gdb_test \"s\" \"The program is not being run.\" \"step \\\"s\\\" abbreviation #1\"\n #test step\n gdb_test \"step\" \"The program is not being run.\" \"step #1\"\n #test search\n-gdb_test \"search\" \"No previous regular expression.*|There is no previous regular expression.*\" \"search\"\n+gdb_test \"search\" \"No previous regular expression.*|There is no previous regular expression.*\"\n #test section\n-gdb_test \"section\" \"Must specify section name and its virtual address.*\" \"section\"\n+gdb_test \"section\" \"Must specify section name and its virtual address.*\"\n #test set annotate\n-gdb_test \"set annotate\" \"Argument required .integer to set it to.*\" \"set annotate\"\n+gdb_test \"set annotate\" \"Argument required .integer to set it to.*\"\n #test set args\n gdb_test_no_output \"set args\" \"set args\"\n \n@@ -480,44 +480,44 @@ foreach x {\"c\" \"ch\" \"check\"} {\n }\n \n #test set check range\n-gdb_test \"set check range\" \".*\" \"set check range\"\n+gdb_test \"set check range\" \".*\"\n #test set check type\n-gdb_test \"set check type\" \".*\" \"set check type\"\n+gdb_test \"set check type\" \".*\"\n #test set complaints\n-gdb_test \"set complaints\" \"Argument required .integer to set it to.*\" \"set complaints\"\n+gdb_test \"set complaints\" \"Argument required .integer to set it to.*\"\n #test set confirm\n gdb_test_no_output \"set confirm\" \"set confirm\"\n # Don't test set editing. What if we're talking to a gdb that\n # won't do editing correctly while we're talking to it?\n # gdb_test \"set editing\" \"\" \"set editing\"\n \n #test set environment\n-gdb_test \"set environment\" \"Argument required .environment variable and value.*\" \"set environment\"\n+gdb_test \"set environment\" \"Argument required .environment variable and value.*\"\n #test set height\n-gdb_test \"set height\" \"Argument required .integer to set it to.*\" \"set height\"\n+gdb_test \"set height\" \"Argument required .integer to set it to.*\"\n #test set history expansion\n gdb_test_no_output \"set history expansion\" \"set history expansion\"\n #test set history filename\n-gdb_test \"set history filename\" \"Argument required .filename to set it to.*\" \"set history filename\"\n+gdb_test \"set history filename\" \"Argument required .filename to set it to.*\"\n # Make sure the history ends up in the right place.\n gdb_test_no_output \"set history filename [standard_output_file .gdb_history]\" \\\n     \"set the history filename\"\n #test set history save\n gdb_test_no_output \"set history save\" \"set history save\"\n #test set history size\n-gdb_test \"set history size\" \"Argument required .integer to set it to.*\" \"set history size\"\n+gdb_test \"set history size\" \"Argument required .integer to set it to.*\"\n #test set history\n-gdb_test \"set history\" \"\\\"set history\\\" must be followed by the name of a history subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set history subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history expansion -- Set history expansion on command input(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history filename -- Set the filename in which to record the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history save -- Set saving of the history record on exit(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history size -- Set the size of the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set history\\\" followed by set history subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set history\"\n+gdb_test \"set history\" \"\\\"set history\\\" must be followed by the name of a history subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set history subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history expansion -- Set history expansion on command input(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history filename -- Set the filename in which to record the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history save -- Set saving of the history record on exit(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history size -- Set the size of the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set history\\\" followed by set history subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test set language\n-gdb_test \"set language\" \"Requires an argument. Valid arguments are auto, local, unknown, ada, asm, c, c.., d, fortran, go, minimal, modula-2, objective-c, opencl, pascal, rust.\" \"set language\"\n+gdb_test \"set language\" \"Requires an argument. Valid arguments are auto, local, unknown, ada, asm, c, c.., d, fortran, go, minimal, modula-2, objective-c, opencl, pascal, rust.\"\n #test set listsize\n-gdb_test \"set listsize\" \"Argument required .integer to set it to.*\" \"set listsize\"\n+gdb_test \"set listsize\" \"Argument required .integer to set it to.*\"\n #test set print \"p\" abbreviation\n gdb_test \"set p\" \"\\\"set print\\\" must be followed by the name of a print subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set print \\\"p\\\" abbreviation\"\n #test set print \"pr\" abbreviation\n gdb_test \"set pr\" \"\\\"set print\\\" must be followed by the name of a print subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set print \\\"pr\\\" abbreviation\"\n #test set print\n-gdb_test \"set print\" \"\\\"set print\\\" must be followed by the name of a print subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set print\"\n+gdb_test \"set print\" \"\\\"set print\\\" must be followed by the name of a print subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test set print address\n gdb_test_no_output \"set print address\" \"set print address\"\n #test set print array\n@@ -527,7 +527,7 @@ gdb_test_no_output \"set print asm-demangle\" \"set print asm-demangle\"\n #test set print demangle\n gdb_test_no_output \"set print demangle\" \"set print demangle\"\n #test set print elements\n-gdb_test \"set print elements\" \"Argument required .integer to set it to.*\" \"set print elements\"\n+gdb_test \"set print elements\" \"Argument required .integer to set it to.*\"\n #test set print object\n gdb_test_no_output \"set print object\" \"set print object\"\n #test set print pretty\n@@ -540,24 +540,24 @@ gdb_test_no_output \"set print union\" \"set print union\"\n gdb_test_no_output \"set print vtbl\" \"set print vtbl\"\n # FIXME -- need a test for \"set prompt\"\n #test set radix\n-gdb_test \"set radix\" \"Input and output radices now set to decimal 10, hex a, octal 12.*\" \"set radix\"\n+gdb_test \"set radix\" \"Input and output radices now set to decimal 10, hex a, octal 12.*\"\n #test set variable\n-gdb_test \"set variable\" \"Argument required .expression to compute.*\" \"set variable\"\n+gdb_test \"set variable\" \"Argument required .expression to compute.*\"\n #test set verbose\n gdb_test_no_output \"set verbose\" \"set verbose\"\n #test set width\n-gdb_test \"set width\" \"Argument required .integer to set it to.*\" \"set width\"\n+gdb_test \"set width\" \"Argument required .integer to set it to.*\"\n #test set write\n # This is only supported on targets which use exec.o.\n gdb_test_no_output \"set write\" \"set write\"\n #test set\n-gdb_test \"set\" \"Argument required .expression to compute.*\" \"set\"\n+gdb_test \"set\" \"Argument required .expression to compute.*\"\n #test shell echo Hi dad!\n-gdb_test \"shell echo Hi dad!\" \"Hi dad!\" \"shell echo Hi dad!\"\n+gdb_test \"shell echo Hi dad!\" \"Hi dad!\"\n #test show annotate\n-gdb_test \"show annotate\" \"Annotation_level is 0.\" \t \"show annotate\"\n+gdb_test \"show annotate\" \"Annotation_level is 0.\"\n #test show args\n-gdb_test \"show args\" \"Argument list to give program being debugged when it is started is \\\"\\\".\" \"show args\"\n+gdb_test \"show args\" \"Argument list to give program being debugged when it is started is \\\"\\\".\"\n \n # test show check abbreviations\n foreach x {\"c\" \"ch\" \"check\"} {\n@@ -566,15 +566,15 @@ foreach x {\"c\" \"ch\" \"check\"} {\n }\n \n #test show check range\n-gdb_test \"show check range\" \"Range checking is \\\"auto; currently off\\\".\" \"show check range\"\n+gdb_test \"show check range\" \"Range checking is \\\"auto; currently off\\\".\"\n #test show check type\n-gdb_test \"show check type\" \"Strict type checking is on\\.\" \"show check type\"\n+gdb_test \"show check type\" \"Strict type checking is on\\.\"\n #test show commands\n-gdb_test \"show commands\" \".*\" \"show commands\"\n+gdb_test \"show commands\" \".*\"\n #test show complaints\n-gdb_test \"show complaints\" \"Max number of complaints about incorrect symbols is 0.\" \"show complaints\"\n+gdb_test \"show complaints\" \"Max number of complaints about incorrect symbols is 0.\"\n #test show confirm\n-gdb_test \"show confirm\" \"Whether to confirm potentially dangerous operations is o\\[a-z\\]*.\" \"show confirm\"\n+gdb_test \"show confirm\" \"Whether to confirm potentially dangerous operations is o\\[a-z\\]*.\"\n \n #test show convenience\n # This is trickier as there are multiple internal convenience vars and\n@@ -633,73 +633,73 @@ gdb_test_list_exact \"show convenience\" \"show convenience\" \\\n     $show_conv_list\n \n #test show directories\n-gdb_test \"show directories\" \"Source directories searched: .cdir\\[:;\\].cwd\" \"show directories\"\n+gdb_test \"show directories\" \"Source directories searched: .cdir\\[:;\\].cwd\"\n #test show editing\n-gdb_test \"show editing\" \"Editing of command lines as they are typed is o\\[a-z\\]*.\" \"show editing\"\n+gdb_test \"show editing\" \"Editing of command lines as they are typed is o\\[a-z\\]*.\"\n #test show height\n-gdb_test \"show height\" \"Number of lines gdb thinks are in a page is.*\" \"show height\"\n+gdb_test \"show height\" \"Number of lines gdb thinks are in a page is.*\"\n #test show history expansion\n-gdb_test \"show history expansion\" \"History expansion on command input is o\\[a-z\\]*.*\" \"show history expansion\"\n+gdb_test \"show history expansion\" \"History expansion on command input is o\\[a-z\\]*.*\"\n #test show history filename\n-gdb_test \"show history filename\" \"The filename in which to record the command history is.*.gdb_history.*\" \"show history filename\"\n+gdb_test \"show history filename\" \"The filename in which to record the command history is.*.gdb_history.*\"\n #test show history save\n-gdb_test \"show history save\" \"Saving of the history record on exit is on.\" \"show history save\"\n+gdb_test \"show history save\" \"Saving of the history record on exit is on.\"\n #test show history size\n-gdb_test \"show history size\" \"The size of the command history is.*\" \"show history size\"\n+gdb_test \"show history size\" \"The size of the command history is.*\"\n #test show history\n-gdb_test \"show history\" \"expansion:  *History expansion on command input is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+filename:  *The filename in which to record the command history is.*.gdb_history(\\[^\\r\\n\\]*\\[\\r\\n\\])+save: *Saving of the history record on exit is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+size: * The size of the command history is.*\" \"show history\"\n+gdb_test \"show history\" \"expansion:  *History expansion on command input is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+filename:  *The filename in which to record the command history is.*.gdb_history(\\[^\\r\\n\\]*\\[\\r\\n\\])+save: *Saving of the history record on exit is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+size: * The size of the command history is.*\"\n #test show language\n-gdb_test \"show language\" \"The current source language is \\\"auto; currently c\\\".\" \"show language\"\n+gdb_test \"show language\" \"The current source language is \\\"auto; currently c\\\".\"\n #test show listsize\n-gdb_test \"show listsize\" \"Number of source lines gdb will list by default is 10.\" \"show listsize\"\n+gdb_test \"show listsize\" \"Number of source lines gdb will list by default is 10.\"\n #test show print \"p\" abbreviation\n-gdb_test \"show p\" \".*\" \"show p\"\n+gdb_test \"show p\" \".*\"\n #test show print \"pr\" abbreviation\n-gdb_test \"show pr\" \".*\" \"show pr\"\n+gdb_test \"show pr\" \".*\"\n #test show print\n-gdb_test \"show print\" \".*\" \"show print\"\n+gdb_test \"show print\" \".*\"\n #test show paths\n-gdb_test \"show paths\" \"Executable and object file path:.*\" \"show paths\"\n+gdb_test \"show paths\" \"Executable and object file path:.*\"\n #test show print address\n-gdb_test \"show print address\" \"Printing of addresses is on.\" \"show print address\"\n+gdb_test \"show print address\" \"Printing of addresses is on.\"\n #test show print array\n-gdb_test \"show print array\" \"Pretty formatting of arrays is on.\" \"show print array\"\n+gdb_test \"show print array\" \"Pretty formatting of arrays is on.\"\n #test show print asm-demangle\n-gdb_test \"show print asm-demangle\" \"Demangling of C\\[+\\]+/ObjC names in disassembly listings is on.\" \"show print asm-demangle\"\n+gdb_test \"show print asm-demangle\" \"Demangling of C\\[+\\]+/ObjC names in disassembly listings is on.\"\n #test show print demangle\n-gdb_test \"show print demangle\" \"Demangling of encoded C\\[+\\]+/ObjC names when displaying symbols is on.\" \"show print demangle\"\n+gdb_test \"show print demangle\" \"Demangling of encoded C\\[+\\]+/ObjC names when displaying symbols is on.\"\n #test show print elements\n-gdb_test \"show print elements\" \"Limit on string chars or array elements to print is 200.\" \"show print elements\"\n+gdb_test \"show print elements\" \"Limit on string chars or array elements to print is 200.\"\n #test show print object\n-gdb_test \"show print object\" \"Printing of object's derived type based on vtable info is on.\" \"show print object\"\n+gdb_test \"show print object\" \"Printing of object's derived type based on vtable info is on.\"\n #test show print pretty\n-gdb_test \"show print pretty\" \"Pretty formatting of structures is on.\" \"show print pretty\"\n+gdb_test \"show print pretty\" \"Pretty formatting of structures is on.\"\n #test show print sevenbit-strings\n-gdb_test \"show print sevenbit-strings\" \"Printing of 8-bit characters in strings as .nnn is on.\" \"show print sevenbit-strings\"\n+gdb_test \"show print sevenbit-strings\" \"Printing of 8-bit characters in strings as .nnn is on.\"\n #test show print union\n-gdb_test \"show print union\" \"Printing of unions interior to structures is on.\" \"show print union\"\n+gdb_test \"show print union\" \"Printing of unions interior to structures is on.\"\n #test show print vtbl\n-gdb_test \"show print vtbl\" \"Printing of C\\[+\\]+ virtual function tables is on.\" \"show print vtbl\"\n+gdb_test \"show print vtbl\" \"Printing of C\\[+\\]+ virtual function tables is on.\"\n #test show prompt\n # In the FAIL case, can't just look for $gdb_prompt because that will match\n # the output, rather than the prompt. So look for $gdb_prompt at the start\n # of a line.\n-gdb_test \"show prompt\" \"Gdb's prompt is \\\"$gdb_prompt \\\".*\" \"show prompt\"\n+gdb_test \"show prompt\" \"Gdb's prompt is \\\"$gdb_prompt \\\".*\"\n #test show radix\n-gdb_test \"show radix\" \"Input and output radices set to decimal 10, hex a, octal 12.\" \"show radix\"\n+gdb_test \"show radix\" \"Input and output radices set to decimal 10, hex a, octal 12.\"\n #test show user\n gdb_test_no_output \"show user\" \"show user\"\n #test show values\n gdb_test_no_output \"show values\" \"show values\"\n #test show verbose\n-gdb_test \"show verbose\" \"Verbose printing of informational messages is o.*|Verbosity is off.*\" \"show verbose\"\n+gdb_test \"show verbose\" \"Verbose printing of informational messages is o.*|Verbosity is off.*\"\n #test show version\n-gdb_test \"show version\" \"GNU gdb \\[0-9\\.\\]*(\\[^\\r\\n\\]*\\[\\r\\n\\])+Copyright \\\\(C\\\\) \\[0-9\\]* Free Software Foundation, Inc(\\[^\\r\\n\\]*\\[\\r\\n\\])+License GPLv3\\\\+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>(\\[^\\r\\n\\]*\\[\\r\\n\\])+This is free software: you are free to change and redistribute it.(\\[^\\r\\n\\]*\\[\\r\\n\\])+There is NO WARRANTY, to the extent permitted by law.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"show copying\\\" and \\\"show warranty\\\" for details..*\" \"show version\"\n+gdb_test \"show version\" \"GNU gdb \\[0-9\\.\\]*(\\[^\\r\\n\\]*\\[\\r\\n\\])+Copyright \\\\(C\\\\) \\[0-9\\]* Free Software Foundation, Inc(\\[^\\r\\n\\]*\\[\\r\\n\\])+License GPLv3\\\\+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>(\\[^\\r\\n\\]*\\[\\r\\n\\])+This is free software: you are free to change and redistribute it.(\\[^\\r\\n\\]*\\[\\r\\n\\])+There is NO WARRANTY, to the extent permitted by law.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"show copying\\\" and \\\"show warranty\\\" for details..*\"\n #test show width\n-gdb_test \"show width\" \"Number of characters gdb thinks are in a line is.*\" \"show width\"\n+gdb_test \"show width\" \"Number of characters gdb thinks are in a line is.*\"\n #test show write\n # This is only supported on targets which use exec.o.\n-gdb_test \"show write\" \"Writing into executable and core files is o.*\" \"show write\"\n+gdb_test \"show write\" \"Writing into executable and core files is o.*\"\n #test show\n set show_confirm_seen 0\n set show_prompt_seen 0\n@@ -729,20 +729,20 @@ gdb_test_no_output \"set history save off\" \"set history save off\"\n #test stepi \"si\" abbreviation\n gdb_test  \"si\" \"The program is not being run.\" \"stepi \\\"si\\\" abbreviation\"\n #test stepi\n-gdb_test \"stepi\" \"The program is not being run.\" \"stepi\"\n+gdb_test \"stepi\" \"The program is not being run.\"\n #test signal\n-gdb_test \"signal\" \"The program is not being run.\" \"signal\"\n+gdb_test \"signal\" \"The program is not being run.\"\n #test source\n-gdb_test \"source\" \"source command requires file name of file to source..*|No such file or directory.*\" \"source\"\n+gdb_test \"source\" \"source command requires file name of file to source..*|No such file or directory.*\"\n #test step \"s\" abbreviation\n gdb_test \"s\" \"The program is not being run.\" \"step \\\"s\\\" abbreviation #2\"\n #test step\n gdb_test \"step\" \"The program is not being run.\" \"step #2\"\n #test symbol-file\n-gdb_test \"symbol-file\" \".*\" \"symbol-file\"\n+gdb_test \"symbol-file\" \".*\"\n \n #test target native\n-gdb_test \"target native\" \"Use the \\\"run\\\" command to start a process.*|Undefined target command: \\\"native\\\".  *Try \\\"help target\\\".*\" \"target native\"\n+gdb_test \"target native\" \"Use the \\\"run\\\" command to start a process.*|Undefined target command: \\\"native\\\".  *Try \\\"help target\\\".*\"\n \n #test target core\n send_gdb \"target core\\n\"\n@@ -796,21 +796,21 @@ gdb_expect {\n }\n \n #test target\n-gdb_test \"target\" \"Argument required .target name.*\" \"target\"\n+gdb_test \"target\" \"Argument required .target name.*\"\n #test tbreak\n-gdb_test \"tbreak\" \"No default breakpoint address now.\" \"tbreak\"\n+gdb_test \"tbreak\" \"No default breakpoint address now.\"\n #test thread\n-gdb_test \"thread\" \"No thread selected\" \"thread\"\n+gdb_test \"thread\" \"No thread selected\"\n #test thread apply\n-gdb_test \"thread apply\" \"Please specify a thread ID list\" \"thread apply\"\n+gdb_test \"thread apply\" \"Please specify a thread ID list\"\n #test thread find\n-gdb_test \"thread find\" \"Command requires an argument.\" \"thread find\"\n+gdb_test \"thread find\" \"Command requires an argument.\"\n #test thread name\n-gdb_test \"thread name\" \"No thread selected\" \"thread name\"\n+gdb_test \"thread name\" \"No thread selected\"\n #test until \"u\" abbreviation\n gdb_test \"u\" \"The program is not being run.\" \"until \\\"u\\\" abbreviation\"\n #test until\n-gdb_test \"until\" \"The program is not being run.\" \"until\"\n+gdb_test \"until\" \"The program is not being run.\"\n #test undisplay\n # FIXME -- need to dump full output to detailed log\n \n@@ -829,18 +829,18 @@ gdb_test \"unset environment\" \\\n     \"y\"\n \n #test unset\n-gdb_test \"unset\" \"\\\"unset\\\" must be followed by the name of an unset subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of unset subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+unset environment -- Cancel environment variable VAR for the program(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help unset\\\" followed by unset subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"unset\"\n+gdb_test \"unset\" \"\\\"unset\\\" must be followed by the name of an unset subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of unset subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+unset environment -- Cancel environment variable VAR for the program(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help unset\\\" followed by unset subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test up\n #test up-silently\n-gdb_test \"up-silently\" \"No stack.\" \"up-silently\"\n+gdb_test \"up-silently\" \"No stack.\"\n #test watch\n-gdb_test \"watch\" \"Argument required .expression to compute.*\" \"watch\"\n+gdb_test \"watch\" \"Argument required .expression to compute.*\"\n #test whatis\n-gdb_test \"whatis\" \"The history is empty.\" \"whatis\"\n+gdb_test \"whatis\" \"The history is empty.\"\n #test where\n-gdb_test \"where\" \"No stack.\" \"where\"\n+gdb_test \"where\" \"No stack.\"\n #test x\n-gdb_test \"x\" \"Argument required .starting display address.*\" \"x\"\n+gdb_test \"x\" \"Argument required .starting display address.*\"\n \n gdb_exit\n "
    },
    {
      "sha": "ed02441ccefdd070c77a0c1ed13df93f5c180038",
      "filename": "gdb/testsuite/gdb.base/display.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/display.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/display.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/display.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -112,7 +112,7 @@ gdb_test \"info disp\" [multi_line \\\n \t\t\t  \".*n  /x j\" \\\n \t\t\t  \".*y  /1bi &k\" \\\n \t\t\t  \".*y  /f f\" \\\n-\t\t\t ] \"info disp\"\n+\t\t\t ]\n \n gdb_test \"cont\" [multi_line \\\n \t\t     \".*\\[Ww\\]atch.*\" \\\n@@ -146,7 +146,7 @@ if { !$can_read_0 } {\n \t\"y\"\n }\n \n-gdb_test \"disab 3\" \".*.*\" \"disab 3\"\n+gdb_test \"disab 3\" \".*.*\"\n gdb_test \"cont\" \".*Breakpoint 4.*\" \"watch off\"\n \n # Now the printf tests\n@@ -195,7 +195,7 @@ gdb_test \"print j\"   \" = 0\\[\\\\r\\\\n\\]+\"   \"debug test output 3\"\n # x/0 j doesn't produce any output and terminates PA64 process when testing\n gdb_test_no_output \"x/0 j\"\n \n-gdb_test \"print/0 j\" \".*Item count other than 1 is meaningless.*\" \"print/0 j\"\n+gdb_test \"print/0 j\" \".*Item count other than 1 is meaningless.*\"\n gdb_test \"print/s sum\" \" = 1000\" \"ignored s\"\n gdb_test \"print/i sum\" \".*Format letter.*is meaningless.*.*\" \"no i\"\n gdb_test \"print/a &sum\" \".*= $hex.*<sum>.*\""
    },
    {
      "sha": "b36425072696349d93936a86f56d01b83e07c120",
      "filename": "gdb/testsuite/gdb.base/float.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/float.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/float.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/float.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -37,9 +37,9 @@ if ![runto_main] then {\n # Test \"info float\".\n \n if { [is_aarch64_target] } then {\n-    gdb_test \"info float\" \"d0.*d1.*d31.*s0.*s1.*s31.*\" \"info float\"\n+    gdb_test \"info float\" \"d0.*d1.*d31.*s0.*s1.*s31.*\"\n } elseif { [istarget \"alpha*-*-*\"] } then {\n-    gdb_test \"info float\" \"f0.*\" \"info float\"\n+    gdb_test \"info float\" \"f0.*\"\n } elseif { [is_aarch32_target] } then {\n     gdb_test_multiple \"info float\" \"info float\" {\n \t-re \"Software FPU type.*mask:.*flags:.*$gdb_prompt $\" {\n@@ -55,9 +55,9 @@ if { [is_aarch64_target] } then {\n \t}\n     }\n } elseif { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } then {\n-    gdb_test \"info float\" \"R7:.*Status Word:.*Opcode:.*\" \"info float\"\n+    gdb_test \"info float\" \"R7:.*Status Word:.*Opcode:.*\"\n } elseif [istarget \"ia64-*-*\"] then {\n-    gdb_test \"info float\" \"f0.*f1.*f127.*\" \"info float\"\n+    gdb_test \"info float\" \"f0.*f1.*f127.*\"\n } elseif [istarget \"m68k-*-*\"] then {\n     gdb_test_multiple \"info float\" \"info_float\" {\n         -re \"fp0.*fp1.*fp7.*$gdb_prompt $\" {"
    },
    {
      "sha": "c7b75908497c93fade9ec05de234e55e016c669d",
      "filename": "gdb/testsuite/gdb.base/foll-fork.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 14,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/foll-fork.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/foll-fork.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/foll-fork.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -91,8 +91,7 @@ proc test_follow_fork { who detach cmd } {\n \t}\n \n \tgdb_test \"show follow-fork\" \\\n-\t\"Debugger response to a program call of fork or vfork is \\\"$who\\\".\" \\\n-\t\"show follow-fork\"\n+\t\"Debugger response to a program call of fork or vfork is \\\"$who\\\".\"\n \n \t# Set detach-on-fork mode if we aren't using the default.\n \tif {$detach == \"default\"} {\n@@ -102,8 +101,7 @@ proc test_follow_fork { who detach cmd } {\n \t}\n \n \tgdb_test \"show detach-on-fork\" \\\n-\t\t \"Whether gdb will detach.* fork is $detach.\" \\\n-\t\t \"show detach-on-fork\"\n+\t\t \"Whether gdb will detach.* fork is $detach.\"\n \n \t# Set a breakpoint after the fork if we aren't single-stepping\n \t# past the fork.\n@@ -138,15 +136,13 @@ proc test_follow_fork { who detach cmd } {\n \tif {$who == \"parent\" && $detach == \"on\"} {\n \n \t    # Follow parent / detach child: the only inferior is the parent.\n-\t    gdb_test \"info inferiors\" \"\\\\* 1 .* process.*\" \\\n-\t\t     \"info inferiors\"\n+\t    gdb_test \"info inferiors\" \"\\\\* 1 .* process.*\"\n \n \t} elseif {$who == \"parent\" && $detach == \"off\"} {\n \n \t    # Follow parent / keep child: two inferiors under debug, the\n \t    # parent is the current inferior.\n-\t    gdb_test \"info inferiors\" \"\\\\* 1 .*process.* 2 .*process.*\" \\\n-\t\t     \"info inferiors\"\n+\t    gdb_test \"info inferiors\" \"\\\\* 1 .*process.* 2 .*process.*\"\n \n \t    gdb_test \"inferior 2\" \"Switching to inferior 2 .*\"\n \t    set resume_unfollowed 1\n@@ -156,15 +152,13 @@ proc test_follow_fork { who detach cmd } {\n \t    # Follow child / detach parent: the child is under debug and is\n \t    # the current inferior.  The parent is listed but is not under\n \t    # debug.\n-\t    gdb_test \"info inferiors\" \" 1 .*<null>.*\\\\* 2 .*process.*\" \\\n-\t\t     \"info inferiors\"\n+\t    gdb_test \"info inferiors\" \" 1 .*<null>.*\\\\* 2 .*process.*\"\n \n \t} elseif {$who == \"child\" && $detach == \"off\"} {\n \n \t    # Follow child / keep parent: two inferiors under debug, the\n \t    # child is the current inferior.\n-\t    gdb_test \"info inferiors\" \" 1 .*process.*\\\\* 2 .*process.*\" \\\n-\t\t     \"info inferiors\"\n+\t    gdb_test \"info inferiors\" \" 1 .*process.*\\\\* 2 .*process.*\"\n \n \t    gdb_test \"inferior 1\" \"Switching to inferior 1 .*\"\n \t    set resume_unfollowed 1\n@@ -340,8 +334,7 @@ A fork or vfork creates a new process.  follow-fork-mode can be:.*\n .*parent  - the original process is debugged after a fork.*\n .*child   - the new process is debugged after a fork.*\n The unfollowed process will continue to run..*\n-By default, the debugger will follow the parent process..*\" \\\n-\t\"help set follow-fork\"\n+By default, the debugger will follow the parent process..*\"\n \n     # Verify that we can set follow-fork-mode, using an abbreviation\n     # for both the flag and its value."
    },
    {
      "sha": "41a1763a2b162149b2162ec831031f04091ba264",
      "filename": "gdb/testsuite/gdb.base/help.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 11,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/help.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/help.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/help.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -78,10 +78,10 @@ set help_backtrace_text \"Print backtrace of all stack frames, or innermost COUNT\n # test help backtrace \"bt\" abbreviation\n gdb_test \"help bt\" $help_backtrace_text \"help backtrace \\\"bt\\\" abbreviation\"\n # test help backtrace\n-gdb_test \"help backtrace\" $help_backtrace_text \"help backtrace\"\n+gdb_test \"help backtrace\" $help_backtrace_text\n \n # test help commands\n-gdb_test \"help commands\" \"Set commands to be executed when the given breakpoints are hit\\.\\[\\r\\n\\]+Give a space-separated breakpoint list as argument after \\\"commands\\\"\\.\\[\\r\\n\\]+A list element can be a breakpoint number \\\\(e.g. `5'\\\\) or a range of numbers\\[\\r\\n\\]+\\\\(e.g. `5-7'\\\\)\\.\\[\\r\\n\\]+With no argument, the targeted breakpoint is the last one set\\.\\[\\r\\n\\]+The commands themselves follow starting on the next line\\.\\[\\r\\n\\]+Type a line containing \\\"end\\\" to indicate the end of them\\.\\[\\r\\n\\]+Give \\\"silent\\\" as the first line to make the breakpoint silent;\\[\\r\\n\\]+then no output is printed when it is hit, except what the commands print\\.\" \"help commands\"\n+gdb_test \"help commands\" \"Set commands to be executed when the given breakpoints are hit\\.\\[\\r\\n\\]+Give a space-separated breakpoint list as argument after \\\"commands\\\"\\.\\[\\r\\n\\]+A list element can be a breakpoint number \\\\(e.g. `5'\\\\) or a range of numbers\\[\\r\\n\\]+\\\\(e.g. `5-7'\\\\)\\.\\[\\r\\n\\]+With no argument, the targeted breakpoint is the last one set\\.\\[\\r\\n\\]+The commands themselves follow starting on the next line\\.\\[\\r\\n\\]+Type a line containing \\\"end\\\" to indicate the end of them\\.\\[\\r\\n\\]+Give \\\"silent\\\" as the first line to make the breakpoint silent;\\[\\r\\n\\]+then no output is printed when it is hit, except what the commands print\\.\"\n \n # Test a prefix command.  \"delete\" is picked at random.\n # test help delete \"d\" abbreviation\n@@ -100,27 +100,25 @@ test_prefix_command_help \"delete\" $expected_help_delete\n # test help help \"h\" abbreviation \n gdb_test \"help h\" \"Print list of commands\\.\" \"help help \\\"h\\\" abbreviation\"\n # test help help\n-gdb_test \"help help\" \"Print list of commands\\.\" \"help help\"\n+gdb_test \"help help\" \"Print list of commands\\.\"\n \n # The startup banner refers to \"show copying\" and \"show warranty\",\n # might as well test for them.\n # test help info copying\n-gdb_test \"help show copying\" \"Conditions for redistributing copies of GDB\\.\" \\\n-    \"help show copying\"\n+gdb_test \"help show copying\" \"Conditions for redistributing copies of GDB\\.\"\n # test help info warranty\n-gdb_test \"help show warranty\" \"Various kinds of warranty you do not have\\.\" \\\n-    \"help show warranty\"\n+gdb_test \"help show warranty\" \"Various kinds of warranty you do not have\\.\"\n \n # Test a few other random \"help show\" commands.\n # test help show commands\n-gdb_test \"help show commands\" \"Show the history of commands you typed\\.\\[\\r\\n\\]+You can supply a command number to start with, or a `\\[+\\]' to start after\\[\\r\\n\\]+the previous command number shown\\.\" \"help show commands\"\n+gdb_test \"help show commands\" \"Show the history of commands you typed\\.\\[\\r\\n\\]+You can supply a command number to start with, or a `\\[+\\]' to start after\\[\\r\\n\\]+the previous command number shown\\.\"\n # test help show confirm\n-gdb_test \"help show confirm\" \"Show whether to confirm potentially dangerous operations\\.\" \"help show confirm\"\n+gdb_test \"help show confirm\" \"Show whether to confirm potentially dangerous operations\\.\"\n \n # test help info bogus-gdb-command\n-gdb_test \"help info bogus-gdb-command\" \"Undefined info command: \\\"bogus-gdb-command\\\"\\.  Try \\\"help info\\\"\\.\" \"help info bogus-gdb-command\"\n+gdb_test \"help info bogus-gdb-command\" \"Undefined info command: \\\"bogus-gdb-command\\\"\\.  Try \\\"help info\\\"\\.\"\n # test help gotcha\n-gdb_test \"help gotcha\" \"Undefined command: \\\"gotcha\\\"\\.  Try \\\"help\\\"\\.\" \"help gotcha\"\n+gdb_test \"help gotcha\" \"Undefined command: \\\"gotcha\\\"\\.  Try \\\"help\\\"\\.\"\n \n # test apropos regex\n gdb_test \"apropos \\\\\\(print\\[\\^\\[ bsiedf\\\\\\\".-\\]\\\\\\)\" \"handle -- Specify how to handle signals\\.\""
    },
    {
      "sha": "534a12e25cde4c485d4fdc74d2508cfea01694c6",
      "filename": "gdb/testsuite/gdb.base/info-macros.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 39,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/info-macros.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/info-macros.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-macros.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -42,70 +42,53 @@ if ![runto_main] {\n \n # Test various error messages.\n gdb_test \"info macro -- -all\" \\\n-\t \"The symbol `-all' has no definition .*\\r\\nat .*$srcfile:\\[0-9\\]+\" \\\n-\t \"info macro -- -all\"\n+\t \"The symbol `-all' has no definition .*\\r\\nat .*$srcfile:\\[0-9\\]+\"\n gdb_test \"info macro  -- -all\" \\\n-\t \"The symbol `-all' has no definition .*\\r\\nat .*$srcfile:\\[0-9\\]+\" \\\n-\t \"info macro  -- -all\"\n+\t \"The symbol `-all' has no definition .*\\r\\nat .*$srcfile:\\[0-9\\]+\"\n \n gdb_test \"info macro -all --\" \\\n-\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\" \\\n-\t \"info macro -all --\"\n+\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\"\n \n gdb_test \"info macro -all  --\" \\\n-\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\" \\\n-\t \"info macro -all  --\"\n+\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\"\n \n gdb_test \"info macro  -all  --\" \\\n-\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\" \\\n-\t \"info macro  -all  --\"\n+\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\"\n \n gdb_test \"info macro --\" \\\n-\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\" \\\n-\t \"info macro --\"\n+\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\"\n \n gdb_test \"info macro -- \" \\\n-\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\" \\\n-\t \"'info macro -- '\"\n+\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\"\n gdb_test \"info macro  -- \" \\\n-\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\" \\\n-\t \"'info macro  -- '\"\n+\t \"You must follow.*with the name.*you want to see.*\\[^\\r\\n\\]*\\[\\r\\n\\]\"\n \n gdb_test \"info macro -invalid-option\" \\\n-\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\" \\\n-\t \"info macro -invalid-option 1\"\n+\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\"\n \n gdb_test \"info macro  -invalid-option\" \\\n-\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\" \\\n-\t \"info macro  -invalid-option\"\n+\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\"\n \n gdb_test \"info macro -invalid-option FOO\" \\\n-\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\" \\\n-\t \"info macro -invalid-option FOO\"\n+\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\"\n gdb_test \"info macro  -invalid-option FOO\" \\\n-\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\" \\\n-\t \"info macro  -invalid-option FOO\"\n+\t \"Unrecognized option.*Try \\\"help info macro\\\"\\.\"\n \n # Single macro lookups.\n gdb_test \"info macro -- FOO\" \\\n-\t \".*#define FOO \\\"hello\\\"\" \\\n-\t \"info macro -- FOO\"\n+\t \".*#define FOO \\\"hello\\\"\"\n \n gdb_test \"info macro  -- FOO\" \\\n-\t \".*#define FOO \\\"hello\\\"\" \\\n-\t \"info macro  -- FOO\"\n+\t \".*#define FOO \\\"hello\\\"\"\n \n gdb_test \"info macro --  FOO\" \\\n-\t \".*#define FOO \\\"hello\\\"\" \\\n-\t \"info macro --  FOO\"\n+\t \".*#define FOO \\\"hello\\\"\"\n \n gdb_test \"info macro FOO\" \\\n-\t \".*#define FOO \\\"hello\\\"\" \\\n-\t \"info macro FOO\"\n+\t \".*#define FOO \\\"hello\\\"\"\n \n gdb_test \"info macro  FOO\" \\\n-\t \".*#define FOO \\\"hello\\\"\" \\\n-\t \"info macro  FOO\"\n+\t \".*#define FOO \\\"hello\\\"\"\n \n # Multiple macro lookups.\n set test \"info macro -a FOO\"\n@@ -125,12 +108,10 @@ set testname \"$test 1\"\n gdb_test \"$test\" \"$r1$r2$r3$r4\" \"$testname\"\n \n set test \"info macro -a  --  FOO\"\n-set testname \"$test\"\n-gdb_test \"$test\" \"$r1$r2$r3$r4\" \"$testname\"\n+gdb_test \"$test\" \"$r1$r2$r3$r4\"\n \n set test \"info macro  -a  --  FOO\"\n-set testname \"$test\"\n-gdb_test \"$test\" \"$r1$r2$r3$r4\" \"$testname\"\n+gdb_test \"$test\" \"$r1$r2$r3$r4\"\n \n proc gdb_test_multiple_with_read1_timeout_factor { factor command message \\\n \t\t\t\t\t\t       user_code } {\n@@ -295,4 +276,4 @@ set r2 \".*define ONE\"\n # info macros on the line where the #define or #include is\n # fails to find the macro defined (though it works on the next line.)\n setup_kfail \"gdb/NNNN\" *-*-*\n-gdb_test \"$test\" \"$r1$r2\" \"$test\"\n+gdb_test \"$test\" \"$r1$r2\""
    },
    {
      "sha": "7aa0cbbb7406c1eac932e75f48dcc94331e52035",
      "filename": "gdb/testsuite/gdb.base/info-proc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/info-proc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/info-proc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-proc.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -56,8 +56,7 @@ if { ! [ runto_main ] } then {\n gdb_test \"info proc\" \"process ${decimal}.*\" \"info proc with process\"\n \n gdb_test \"info proc mapping\" \\\n-\t\".*Mapped address spaces:.*${hex}${ws}${hex}${ws}${hex}${ws}${hex}.*\" \\\n-\t\"info proc mapping\"\n+\t\".*Mapped address spaces:.*${hex}${ws}${hex}${ws}${hex}${ws}${hex}.*\"\n \n if {[istarget \"*-*-linux*\"]} {\n     if { $cmdline != \"\" } {"
    },
    {
      "sha": "141cc29e800d9bd24b324a4259a4944a12a67c57",
      "filename": "gdb/testsuite/gdb.base/info-target.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/info-target.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/info-target.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-target.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -27,6 +27,4 @@ set eol \"\\[\\r\\n\\]+\"\n # it is formatted properly.  For instance, make sure that no '\\n' is\n # missing at the end some lines.\n gdb_test \"info target\" \\\n-         \"Symbols from \\\".*${testfile}.*\\\"\\\\..*${eol}Local exec file:${eol}.*Entry point: 0x\\[0-9a-zA-Z\\]+${eol}.*\" \\\n-         \"info target\"\n-\n+         \"Symbols from \\\".*${testfile}.*\\\"\\\\..*${eol}Local exec file:${eol}.*Entry point: 0x\\[0-9a-zA-Z\\]+${eol}.*\""
    },
    {
      "sha": "55f1f586d45f43e41f1f653b83703d552dcea203",
      "filename": "gdb/testsuite/gdb.base/long_long.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 9,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/long_long.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/long_long.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/long_long.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -67,19 +67,23 @@ proc pat2 { n pats } {\n     return [lindex $pats $i]\n }\n \n-proc gdb_test_xxx { test pat name } {\n+proc gdb_test_xxx { test pat args } {\n     if { $pat == \"\" } {\n \tsetup_kfail gdb/1672 *-*-*\n-\tgdb_test $test \"xxx\" $name\n-    } else {\n+\tset pat \"xxx\"\n+    }\n+    if { [llength $args] == 1 } {\n+\tset name [lindex $args 0]\n \tgdb_test $test $pat $name\n     }\n+\n+    gdb_test $test $pat\n }\n \n proc gdb_test_ptr { test args } {\n     global sizeof_data_ptr\n \n-    gdb_test_xxx $test [pat2 $sizeof_data_ptr $args] $test\n+    gdb_test_xxx $test [pat2 $sizeof_data_ptr $args]\n }\n \n proc gdb_test_xptr { examine args } {\n@@ -91,27 +95,27 @@ proc gdb_test_xptr { examine args } {\n \n proc gdb_test_char { test args } {\n     global sizeof_char\n-    gdb_test_xxx $test [pat2 $sizeof_char $args] $test\n+    gdb_test_xxx $test [pat2 $sizeof_char $args]\n }\n \n proc gdb_test_short { test args } {\n     global sizeof_short\n-    gdb_test_xxx $test [pat2 $sizeof_short $args] $test\n+    gdb_test_xxx $test [pat2 $sizeof_short $args]\n }\n \n proc gdb_test_int { test args } {\n     global sizeof_int\n-    gdb_test_xxx $test [pat2 $sizeof_int $args] $test\n+    gdb_test_xxx $test [pat2 $sizeof_int $args]\n }\n \n proc gdb_test_long { test args } {\n     global sizeof_long\n-    gdb_test_xxx $test [pat2 $sizeof_long $args] $test\n+    gdb_test_xxx $test [pat2 $sizeof_long $args]\n }\n \n proc gdb_test_long_long { test args } {\n     global sizeof_long_long\n-    gdb_test_xxx $test [pat2 $sizeof_long_long $args] $test\n+    gdb_test_xxx $test [pat2 $sizeof_long_long $args]\n }\n \n gdb_breakpoint [gdb_get_line_number \"Stop here and look\"]"
    },
    {
      "sha": "9c06849509f5c62b3123ee4d5c740634b9eeba89",
      "filename": "gdb/testsuite/gdb.base/macscp.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/macscp.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/macscp.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/macscp.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -449,8 +449,7 @@ gdb_test \"break $l2  if foo != MACRO_TO_EXPAND\" \\\n gdb_test \"continue\" \"foo = 0;.*\" \"continue to macsp_expr\"\n \n gdb_test \"print address.addr\" \\\n-  \" = 0\" \\\n-  \"print address.addr\"\n+  \" = 0\"\n \n gdb_test \"print MACRO_TO_EXPAND\" \\\n     \"No symbol \\\"MACRO_TO_EXPAND\\\" in current context\\.\" \\\n@@ -752,8 +751,7 @@ gdb_test_no_output \"macro define si_addr fields.fault.si_addr\" \\\n   \"define si_addr macro\"\n \n gdb_test \"macro expand siginfo.si_addr\" \\\n-  \"expands to: siginfo.fields.fault.si_addr\" \\\n-  \"macro expand siginfo.si_addr\"\n+  \"expands to: siginfo.fields.fault.si_addr\"\n \n gdb_test \"print __FILE__\" \" = \\\".*macscp1.c\\\"\"\n gdb_test \"print __LINE__\" \\"
    },
    {
      "sha": "d764991d185b13de9d527d0dd48e89d5379728d0",
      "filename": "gdb/testsuite/gdb.base/memattr.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/memattr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/memattr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/memattr.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -447,8 +447,7 @@ set see4 0\n set see5 0\n \n gdb_test \"delete mem 2-4\" \\\n-    \"No memory region number 2.*No memory region number 4.\" \\\n-    \"delete mem 2-4\"\n+    \"No memory region number 2.*No memory region number 4.\"\n gdb_test_multiple \"info mem\" \"mem 2-4 were deleted\" {\n     -re ${info_mem_header_pattern} {\n \t# Discard the header."
    },
    {
      "sha": "4cf16b5ace135f8fdccfea588db4c2f105de4ad1",
      "filename": "gdb/testsuite/gdb.base/nofield.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/nofield.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/nofield.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/nofield.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -26,14 +26,10 @@ set sp \"\\[ \\t\\]*\"\n clean_restart ${binfile}\n \n gdb_test \"ptype struct not_empty\" \\\n-         \"type = struct not_empty {$eol${sp}void \\\\*e;$eol${sp}void \\\\*u;$eol}\" \\\n-         \"ptype struct not_empty\"\n+         \"type = struct not_empty {$eol${sp}void \\\\*e;$eol${sp}void \\\\*u;$eol}\"\n \n gdb_test \"ptype struct empty\" \\\n-         \"type = struct empty {$eol$sp<no data fields>$eol}\" \\\n-         \"ptype struct empty\"\n+         \"type = struct empty {$eol$sp<no data fields>$eol}\"\n \n gdb_test \"ptype union empty_union\" \\\n-         \"type = union empty_union {$eol$sp<no data fields>$eol}\" \\\n-         \"ptype union empty_union\"\n-\n+         \"type = union empty_union {$eol$sp<no data fields>$eol}\""
    },
    {
      "sha": "dab542c913f2cbe1d659c6f979c1ccef9d670db8",
      "filename": "gdb/testsuite/gdb.base/pointers.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/pointers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/pointers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/pointers.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -212,7 +212,7 @@ gdb_test \"up\" \"more_code.*\" \"up from marker1\"\n \n gdb_test \"print *pUC\" \" = 21 \\'.025\\'.*\" \"print value of *pUC\"\n \n-gdb_test \"ptype pUC\" \"type = unsigned char \\\\*\" \"ptype pUC\"\n+gdb_test \"ptype pUC\" \"type = unsigned char \\\\*\"\n \n gdb_test \"print *pS\" \" = -14\" \"print value of *pS\"\n \n@@ -230,11 +230,11 @@ gdb_test_multiple \"ptype pUS\" \"ptype pUS\" {\n \n gdb_test \"print *pI\" \" = 102\" \"print value of *pI\"\n \n-gdb_test \"ptype pI\" \"type = int \\\\*\" \"ptype pI\"\n+gdb_test \"ptype pI\" \"type = int \\\\*\"\n \n gdb_test \"print *pUI\" \" = 1002\" \"print value of *pUI\"\n \n-gdb_test \"ptype pUI\" \"type = unsigned int \\\\*\" \"ptype pUI\"\n+gdb_test \"ptype pUI\" \"type = unsigned int \\\\*\"\n \n gdb_test \"print *pL\" \" = -234\" \"print value of *pL\"\n \n@@ -252,26 +252,26 @@ gdb_test_multiple \"ptype pUL\" \"ptype pUL\" {\n \n gdb_test \"print *pF\" \" = 1.2\\[0-9\\]*e\\\\+0?10\" \"print value of *pF\"\n \n-gdb_test \"ptype pF\" \"type = float \\\\*\" \"ptype pF\"\n+gdb_test \"ptype pF\" \"type = float \\\\*\"\n \n gdb_test \"print *pD\" \" = -1.2\\[0-9\\]*e\\\\-0?37\" \"print value of *pD\"\n \n-gdb_test \"ptype pD\" \"type = double \\\\*\" \"ptype pD\"\n+gdb_test \"ptype pD\" \"type = double \\\\*\"\n \n gdb_test \"print ******ppppppC\" \" = 65 \\'A\\'\" \\\n     \"print value of ******ppppppC\"\n \n-gdb_test \"ptype pC\" \"type = char \\\\*\" \"ptype pC\"\n+gdb_test \"ptype pC\" \"type = char \\\\*\"\n \n-gdb_test \"ptype ppC\" \"type = char \\\\*\\\\*\" \"ptype ppC\"\n+gdb_test \"ptype ppC\" \"type = char \\\\*\\\\*\"\n \n-gdb_test \"ptype pppC\" \"type = char \\\\*\\\\*\\\\*\" \"ptype pppC\"\n+gdb_test \"ptype pppC\" \"type = char \\\\*\\\\*\\\\*\"\n \n-gdb_test \"ptype ppppC\" \"type = char \\\\*\\\\*\\\\*\\\\*\" \"ptype ppppC\"\n+gdb_test \"ptype ppppC\" \"type = char \\\\*\\\\*\\\\*\\\\*\"\n \n-gdb_test \"ptype pppppC\" \"type = char \\\\*\\\\*\\\\*\\\\*\\\\*\" \"ptype pppppC\"\n+gdb_test \"ptype pppppC\" \"type = char \\\\*\\\\*\\\\*\\\\*\\\\*\"\n \n-gdb_test \"ptype ppppppC\" \"type = char \\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\" \"ptype ppppppC\"\n+gdb_test \"ptype ppppppC\" \"type = char \\\\*\\\\*\\\\*\\\\*\\\\*\\\\*\"\n \n # Regression test for a crash.\n "
    },
    {
      "sha": "7e56e08d527613dd287a4ed4f04a42db72fc2bf9",
      "filename": "gdb/testsuite/gdb.base/printcmds.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/printcmds.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/printcmds.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/printcmds.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -948,7 +948,7 @@ proc test_printf_convenience_var {prefix} {\n \t# Without a target, the below produces no output\n \t# but with a target, it gives a warning.\n \t# So, use gdb_test expecting \".*\" instead of gdb_test_no_output.\n-\tgdb_test \"set language ada\" \".*\" \"set language ada\"\n+\tgdb_test \"set language ada\" \".*\"\n \tgdb_test_no_output \"set var \\$astr := \\\"fghij\\\"\" \"set \\$astr\"\n \tgdb_test \"printf \\\"astr val = %s\\\\n\\\", \\$astr\" \"astr val = fghij\" \\\n \t    \"printf \\$astr\"\n@@ -959,7 +959,7 @@ proc test_printf_convenience_var {prefix} {\n \t# Switch to c++ for the wide strings tests, as wchar_t is predefined\n \t# when current language is c++.\n \t# See above \"set language ada\" about why we use gdb_test.\n-\tgdb_test \"set language c++\" \".*\" \"set language c++\"\n+\tgdb_test \"set language c++\" \".*\"\n \tgdb_test_no_output \"set var \\$wstr = L\\\"facile\\\"\" \\\n \t    \"set \\$wstr\"\n \tgdb_test \"printf \\\"wstr val = %ls\\\\n\\\", \\$wstr\" \\"
    },
    {
      "sha": "7cbdea1839b6e82bba124c13d8611e70801509b9",
      "filename": "gdb/testsuite/gdb.base/ptype.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/ptype.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/ptype.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ptype.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -500,8 +500,7 @@ gdb_test \"ptype nested_su.inner_union_instance\" \"type = union inner_union \\{.*\\[\n # correctly printed (at nesting level 1 and 2).\n \n gdb_test \"ptype the_highest\" \\\n-         \"type = struct highest \\{.*\\[\\r\\n\\] *int a;.*\\[\\r\\n\\] *struct \\{.*\\[\\r\\n\\] *int b;.*\\[\\r\\n\\] *struct \\{\\.\\.\\.\\} anonymous_level_2;.*\\[\\r\\n\\] *\\} anonymous_level_1;.*\\[\\r\\n\\]}.*\" \\\n-         \"ptype the_highest\" \n+         \"type = struct highest \\{.*\\[\\r\\n\\] *int a;.*\\[\\r\\n\\] *struct \\{.*\\[\\r\\n\\] *int b;.*\\[\\r\\n\\] *struct \\{\\.\\.\\.\\} anonymous_level_2;.*\\[\\r\\n\\] *\\} anonymous_level_1;.*\\[\\r\\n\\]}.*\"\n \n # Print the type descrption for one of the fields of variable the_highest.\n # The purpose is to verify that the type of a field that was printed above\n@@ -612,5 +611,5 @@ if [runto_main] then {\n   set timeout $prev_timeout\n \n   # Test ptype of user register\n-  gdb_test \"ptype \\$pc\" \"void \\\\(\\\\*\\\\)\\\\(\\\\)\" \"ptype \\$pc\"\n+  gdb_test \"ptype \\$pc\" \"void \\\\(\\\\*\\\\)\\\\(\\\\)\"\n }"
    },
    {
      "sha": "a04873b16e8d9df86a02eefac23ba85958631605",
      "filename": "gdb/testsuite/gdb.base/restore.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/restore.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/restore.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/restore.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -45,8 +45,7 @@ proc restore_tests { } {\n     for {set c 1} {$c <= $limit} {incr c} {\n \n         # Set a breakpoint at the next caller function.\n-        gdb_test \"tbreak caller$c\" \"Temporary breakpoint.*\\[0-9\\]*\\\\.\" \\\n-\t    \"tbreak caller$c\"\n+        gdb_test \"tbreak caller$c\" \"Temporary breakpoint.*\\[0-9\\]*\\\\.\"\n \n \t# Continue to the next caller function.\n \tgdb_test \"continue\" \" caller$c prologue .*\" \"run to caller$c\""
    },
    {
      "sha": "3499303fb256f0a16ef89fe87edc443879c70254",
      "filename": "gdb/testsuite/gdb.base/return.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/return.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/return.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/return.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -42,8 +42,8 @@ proc return_tests { } {\n     }\n \n     # Set breakpoints in other interesting functions.\n-    gdb_test \"break func2\" \".*\" \"break func2\"\n-    gdb_test \"break func3\" \".*\" \"break func3\"\n+    gdb_test \"break func2\" \".*\"\n+    gdb_test \"break func3\" \".*\"\n \n     gdb_test \"continue\" \"return -5;\" \"continue to return of -5\"\n "
    },
    {
      "sha": "7a84e7cd33d47ef82099a40f80e277b753a5d62b",
      "filename": "gdb/testsuite/gdb.base/scope.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/scope.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/scope.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/scope.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -49,7 +49,7 @@ proc test_at_main {} {\n \n     # Print scope0.c::filelocal, which is 1\n \n-    if [gdb_test \"print filelocal\" \"\\\\\\$$decimal = 1\" \"print filelocal\" ] { \n+    if [gdb_test \"print filelocal\" \"\\\\\\$$decimal = 1\"] { \n       gdb_suppress_tests\n     }\n \n@@ -61,7 +61,7 @@ proc test_at_main {} {\n \n     # Print scope0.c::filelocal_bss, which is 101\n \n-    if [gdb_test \"print filelocal_bss\" \"\\\\\\$$decimal = 101\" \"print filelocal_bss\" ] { \n+    if [gdb_test \"print filelocal_bss\" \"\\\\\\$$decimal = 101\"] { \n       gdb_suppress_tests\n     }\n \n@@ -112,7 +112,7 @@ proc test_at_main {} {\n \n     # Print scope1.c::foo::funclocal, which is 3\n \n-    if [gdb_test \"print foo::funclocal\" \"\\\\\\$$decimal = 3\" \"print foo::funclocal\" ] { \n+    if [gdb_test \"print foo::funclocal\" \"\\\\\\$$decimal = 3\"] { \n       gdb_suppress_tests\n     }\n \n@@ -125,7 +125,7 @@ proc test_at_main {} {\n \n     # Print scope1.c::foo::funclocal_ro, which is 203\n \n-    if [gdb_test \"print foo::funclocal_ro\" \"\\\\\\$$decimal = 203\" \"print foo::funclocal_ro\" ] { \n+    if [gdb_test \"print foo::funclocal_ro\" \"\\\\\\$$decimal = 203\"] { \n       gdb_suppress_tests\n     }\n \n@@ -138,7 +138,7 @@ proc test_at_main {} {\n \n     # Print scope1.c::bar::funclocal, which is 4\n \n-    if [gdb_test \"print bar::funclocal\" \"\\\\\\$$decimal = 4\" \"print bar::funclocal\" ] { \n+    if [gdb_test \"print bar::funclocal\" \"\\\\\\$$decimal = 4\"] { \n       gdb_suppress_tests\n     }\n "
    },
    {
      "sha": "98eb9a4bed26a344e20d46b11c8a9a9eb9b0356a",
      "filename": "gdb/testsuite/gdb.base/set-noassign.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/set-noassign.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/set-noassign.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/set-noassign.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -25,7 +25,7 @@ if ![runto_main] then {\n \n # Verify that set command without assignment emits a warning.\n #\n-gdb_test \"set language ada\" \".*\" \"set language ada\"\n+gdb_test \"set language ada\" \".*\"\n \n gdb_test \"set x=3\" \\\n \t\"warning: Expression is not an assignment \\\\(and might have no effect\\\\)\" \\"
    },
    {
      "sha": "717bcc327066e597b3d5469c3ff0689f305a3ec8",
      "filename": "gdb/testsuite/gdb.base/setshow.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/setshow.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/setshow.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/setshow.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -74,7 +74,7 @@ gdb_test_multiple \"info line 1\" \"annotation_level 2\" {\n set gdb_prompt $old_gdb_prompt\n \n #test set annotate 1\n-gdb_test \"set annotate 1\" \".*post-prompt.*\"  \"set annotate 1\" \n+gdb_test \"set annotate 1\" \".*post-prompt.*\"\n gdb_test \"show annotate\" \"Annotation_level is 1..*\"  \"show annotate (1)\" \n #test annotation_level 1\n gdb_test \"info line 1\" \"Line 1 of .* is at address .* but contains no code.*:1:0:beg:0x.*\"  \"annotation_level 1\" \n@@ -93,7 +93,7 @@ gdb_test \"show args\" \"Argument list to give program being debugged when it is st\n #test set args\n gdb_test_no_output \"set args foo bar blup baz bubble\" \"set args\" \n #test show args\n-gdb_test \"show args\" \"Argument list to give program being debugged when it is started is \\\"foo bar blup baz bubble\\\"..*\" \"show args\"\n+gdb_test \"show args\" \"Argument list to give program being debugged when it is started is \\\"foo bar blup baz bubble\\\"..*\"\n gdb_test \"p \\$_gdb_setting(\\\"args\\\")\" \" = \\\"foo bar blup baz bubble\\\"\" \\\n     \"_gdb_setting args\"\n \n@@ -208,11 +208,11 @@ gdb_test \"show editing\" \"Editing of command lines as they are typed is off..*\" \"\n gdb_test_no_output \"set environment FOOBARBAZ = grbxgrbxgrbx\" \\\n     \"set environment FOOBARBAZ\" \n #test show environment FOOBARBAZ\n-gdb_test \"show environment FOOBARBAZ\" \"FOOBARBAZ = grbxgrbxgrbx.*\"  \"show environment FOOBARBAZ\" \n+gdb_test \"show environment FOOBARBAZ\" \"FOOBARBAZ = grbxgrbxgrbx.*\"\n #test set height 100\n gdb_test_no_output \"set height 100\" \"set height 100\" \n #test show height 100\n-gdb_test \"show height\" \"Number of lines gdb thinks are in a page is 100..*\" \"show height\" \n+gdb_test \"show height\" \"Number of lines gdb thinks are in a page is 100..*\"\n gdb_test \"p \\$_gdb_setting_str(\\\"height\\\")\" \" = \\\"100\\\"\" \\\n     \"_gdb_setting_str height 100\"\n gdb_test \"p \\$_gdb_setting(\\\"height\\\")\" \" = 100\" \\\n@@ -324,9 +324,9 @@ if ![board_info target exists gdb_prompt] {\n }\n \n #test set radix 11\n-gdb_test \"set radix 11\" \"Unsupported output radix ``decimal 11''; output radix unchanged..*\"  \"set radix 11\" \n+gdb_test \"set radix 11\" \"Unsupported output radix ``decimal 11''; output radix unchanged..*\"\n #test set radix 16\n-gdb_test \"set radix 16\" \"Input and output radices now set to decimal 16, hex 10, octal 20..*\"  \"set radix 16\" \n+gdb_test \"set radix 16\" \"Input and output radices now set to decimal 16, hex 10, octal 20..*\"\n #test show radix 16\n gdb_test \"show radix\" \"Input and output radices set to decimal 16, hex 10, octal 20..*\"  \"show radix (16)\" \n #test set radix 10"
    },
    {
      "sha": "2093c5431e660c50e50a09bfa6b09c3c0b4b3aa0",
      "filename": "gdb/testsuite/gdb.base/shlib-call.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/shlib-call.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/shlib-call.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/shlib-call.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -76,7 +76,7 @@ gdb_test \"next 2\" \"g = shr1\\\\(g\\\\);\" \"next to shr1\"\n \n #print g\n \n-gdb_test \"print g\" \"\\[0-9\\]* = 1\" \"print g\"\n+gdb_test \"print g\" \"\\[0-9\\]* = 1\"\n \n #step -over\n if ![gdb_skip_stdio_test \"next over shr1\"] {\n@@ -90,7 +90,7 @@ if ![gdb_skip_stdio_test \"next over shr1\"] {\n \n \n #print g\n-gdb_test \"print g\" \"\\[0-9\\]* = 2\" \"print g\"\n+gdb_test \"print g\" \"\\[0-9\\]* = 2\"\n \n #print shr1(1)\n if ![gdb_skip_stdio_test \"print shr1(1)\"] {\n@@ -149,7 +149,7 @@ gdb_test_multiple \"step\" \"step out of shr2 to main\" {\n }\n     \n #print mainshr1(1)\n-gdb_test \"print mainshr1(1)\" \"\\[0-9\\]* = 2\" \"print mainshr1(1)\"\n+gdb_test \"print mainshr1(1)\" \"\\[0-9\\]* = 2\"\n \n #step\n gdb_test \"step\" \"mainshr1 \\\\(g=4\\\\) at.*return 2.g;\" \\"
    },
    {
      "sha": "5d62f48e02f5356cb0dec159fe5618dc4a523d94",
      "filename": "gdb/testsuite/gdb.base/signals.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/signals.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/signals.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/signals.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -158,12 +158,10 @@ The program being debugged stopped while in a function called from GDB.*\" \\\n     # symbolic signal name, or an integer ID.\n \n     gdb_test \"info signal SIGTRAP\" \\\n-\t\"SIGTRAP\\[ \\t\\]*Yes\\[ \\t\\]*Yes\\[ \\t\\]*No\\[ \\t\\]*Trace/breakpoint trap.*\" \\\n-\t\"info signal SIGTRAP\"\n+\t\"SIGTRAP\\[ \\t\\]*Yes\\[ \\t\\]*Yes\\[ \\t\\]*No\\[ \\t\\]*Trace/breakpoint trap.*\"\n \n     gdb_test \"info signal 5\" \\\n-\t\"SIGTRAP\\[ \\t\\]*Yes\\[ \\t\\]*Yes\\[ \\t\\]*No\\[ \\t\\]*Trace/breakpoint trap.*\" \\\n-\t\"info signal 5\"\n+\t\"SIGTRAP\\[ \\t\\]*Yes\\[ \\t\\]*Yes\\[ \\t\\]*No\\[ \\t\\]*Trace/breakpoint trap.*\"\n \n     # Verify that \"handle\" with illegal arguments is gracefully, um,\n     # handled."
    },
    {
      "sha": "418e8b37888ed853045a9510dcb40fa7e5d11af1",
      "filename": "gdb/testsuite/gdb.base/sigstep.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/sigstep.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/sigstep.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/sigstep.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -307,7 +307,7 @@ proc skip_to_handler { cmd } {\n \tsleep 1\n \n \t# Insert the handler breakpoint.\n-\tgdb_test \"break handler\" \".*\" \"break handler\"\n+\tgdb_test \"break handler\" \".*\"\n \n \t# Step into the handler.\n \tgdb_test \"$cmd\" \" handler .*\" \"performing $cmd\"\n@@ -432,7 +432,7 @@ proc breakpoint_to_handler { displaced cmd } {\n \tgdb_test_no_output \"set itimer = itimer_real\"\n \n \tgdb_test \"break $infinite_loop\" \".*\" \"break infinite loop\"\n-\tgdb_test \"break handler\" \".*\" \"break handler\"\n+\tgdb_test \"break handler\" \".*\"\n \n \t# Continue to the infinite loop.\n \tgdb_test \"continue\" \"while ..done.*\" \"continue to infinite loop\""
    },
    {
      "sha": "d76319451b8f686bf0df06732d3cd72d0fdf88b3",
      "filename": "gdb/testsuite/gdb.base/skip.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/skip.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/skip.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/skip.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -204,8 +204,7 @@ with_test_prefix \"admin\" {\n     gdb_test \"info skip 2-3\" \\\n \t\"Num\\\\s+Enb\\\\s+Glob\\\\s+File\\\\s+RE\\\\s+Function\\\\s*\n 2\\\\s+y\\\\s+n\\\\s+<none>\\\\s+n\\\\s+main\\\\s*\n-3\\\\s+y\\\\s+n\\\\s+$srcfile1\\\\s+n\\\\s+<none>\\\\s*\" \\\n-\t\"info skip 2-3\"\n+3\\\\s+y\\\\s+n\\\\s+$srcfile1\\\\s+n\\\\s+<none>\\\\s*\"\n \n     gdb_test \"skip delete 2 3\"\n     gdb_test \"info skip\" \\"
    },
    {
      "sha": "b21477b8de9e24ec0b0021d39ada00d41ca6ace6",
      "filename": "gdb/testsuite/gdb.base/solib-symbol.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/solib-symbol.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/solib-symbol.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/solib-symbol.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -64,8 +64,7 @@ gdb_test \"br foo\" \\\n \t \"foo in libmd\"\n \n gdb_test \"continue\" \\\n-\t \"Continuing.*\" \\\n-\t \"continue\"\n+\t \"Continuing.*\"\n \n # This symbol is now looked up in the ELF library and the binary.\n gdb_test \"br foo2\" \\"
    },
    {
      "sha": "7571482e04d99898662580bd63e7845b8af3ce62",
      "filename": "gdb/testsuite/gdb.base/stap-probe.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/stap-probe.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/stap-probe.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/stap-probe.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -34,8 +34,7 @@ proc stap_test {exec_name {arg \"\"}} {\n \t\"check argument not at probe point\"\n \n     gdb_test \"info probes stap\" \\\n-\t\"test *user *$hex .*\" \\\n-\t\"info probes stap\"\n+\t\"test *user *$hex .*\"\n     \n     if {[runto \"-pstap test:user\"]} {\n \tpass \"run to -pstap test:user\""
    },
    {
      "sha": "944a0cbfe4da4cafc2dca830b2942d1d536f0238",
      "filename": "gdb/testsuite/gdb.base/step-line.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/step-line.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/step-line.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/step-line.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -34,7 +34,7 @@ if ![runto_main] then {\n \n set remote_linefile [gdb_remote_download host ${srcdir}/${subdir}/${linefile}]\n \n-gdb_test \"break f1\" \".*Breakpoint 2 at .* file .*step-line.c.*\" \"break f1\"\n+gdb_test \"break f1\" \".*Breakpoint 2 at .* file .*step-line.c.*\"\n gdb_test \"continue\" \\\n          \"Continuing.*Breakpoint 2, f1 \\\\(i=4\\\\).*dummy \\\\(1, i\\\\);\" \\\n \t \"continue to f1\""
    },
    {
      "sha": "49cc6ef16ae12b89cbb9bdcb272e8fbf57dd0424",
      "filename": "gdb/testsuite/gdb.base/step-test.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/step-test.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/step-test.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/step-test.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -41,8 +41,8 @@ gdb_test \"step\" \".*${decimal}.*y = 2;.*\" \"step 1\"\n \n # With count\n #\n-gdb_test \"next 2\" \".*${decimal}.*w = w.*2;.*\" \"next 2\"\n-gdb_test \"step 3\" \".*${decimal}.*z = z.*5;.*\" \"step 3\"\n+gdb_test \"next 2\" \".*${decimal}.*w = w.*2;.*\"\n+gdb_test \"step 3\" \".*${decimal}.*z = z.*5;.*\"\n gdb_test \"next\" \".*${decimal}.*callee.*OVER.*\" \"next 3\"\n \n # Step over call"
    },
    {
      "sha": "c450f16b609a79ffed3abd7f0a6298feb91b1b84",
      "filename": "gdb/testsuite/gdb.base/style.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/style.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/style.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -124,8 +124,7 @@ save_vars { env(TERM) } {\n \t     \"${tfaas_expr} --.*\" \\\n \t     \"Usage:.*\" \\\n \t     \"short${cut_for_thre_expr}ad apply.*\" \\\n-\t    ] \\\n-\t\"apropos -v cut for 'thre\"\n+\t    ]\n \n     set quoted [string_to_regexp $binfile]\n     gdb_test \"file $binfile\" \\"
    },
    {
      "sha": "3ce3498d06121ffdef69a0f435019c0091e489d2",
      "filename": "gdb/testsuite/gdb.base/varargs.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/varargs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/varargs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/varargs.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -81,8 +81,7 @@ gdb_test_stdio \"print find_max1(1,3)\" \\\n \n gdb_test_stdio \"print find_max1(10,1,2,3,4,5,6,7,8,29,0)\" \\\n     \"find_max\\\\(10, 1, 2, 3, 4, 5, 6, 7, 8, 29, 0\\\\) returns 29\\[ \\r\\n\\]+\" \\\n-    \".\\[0-9\\]+ = 29\" \\\n-    \"print find_max1(10,1,2,3,4,5,6,7,8,29,0)\"\n+    \".\\[0-9\\]+ = 29\"\n \n gdb_test_stdio \"print find_max2(3,1,2,3)\" \\\n     \"find_max\\\\(3, 1, 2, 3\\\\) returns 3\\[ \\r\\n\\]+\" \\\n@@ -102,12 +101,12 @@ if [support_complex_tests] {\n     global gdb_prompt\n \n     set test \"print find_max_float_real(4, fc1, fc2, fc3, fc4)\"\n-    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\" $test\n+    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\"\n \n     set test \"print find_max_double_real(4, dc1, dc2, dc3, dc4)\"\n-    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\" $test\n+    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\"\n \n     set test \"print find_max_long_double_real(4, ldc1, ldc2, ldc3, ldc4)\"\n-    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\" $test\n+    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\"\n \n }"
    },
    {
      "sha": "3d5278658306d40217c98765101aa979a245b669",
      "filename": "gdb/testsuite/gdb.base/vla-datatypes.exp",
      "status": "modified",
      "additions": 39,
      "deletions": 64,
      "changes": 103,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/vla-datatypes.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/vla-datatypes.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/vla-datatypes.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -27,81 +27,57 @@ gdb_breakpoint [gdb_get_line_number \"vlas_filled\"]\n gdb_continue_to_breakpoint \"vlas_filled\"\n \n # Check the values of VLA's.\n-gdb_test \"print int_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\" \\\n-         \"print int_vla\"\n-gdb_test \"print unsigned_int_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\" \\\n-         \"print unsigned_int_vla\"\n-gdb_test \"print double_vla\" \" = \\\\\\{0, 0.5, 1, 1.5, 2\\\\\\}\" \\\n-         \"print double_vla\"\n-gdb_test \"print float_vla\" \" = \\\\\\{0, 0.5, 1, 1.5, 2\\\\\\}\" \\\n-         \"print float_vla\"\n-gdb_test \"print long_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\" \\\n-         \"print long_vla\"\n-gdb_test \"print unsigned_long_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\" \\\n-         \"print unsigned_long_vla\"\n-gdb_test \"print char_vla\" \" = \\\"AAAAA\\\"\" \\\n-         \"print char_vla\"\n-gdb_test \"print short_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\" \\\n-         \"print short_vla\"\n-gdb_test \"print unsigned_short_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\" \\\n-         \"print unsigned_short_vla\"\n-gdb_test \"print unsigned_char_vla\" \" = \\\"AAAAA\\\"\" \\\n-         \"print unsigned_char_vla\"\n+gdb_test \"print int_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\"\n+gdb_test \"print unsigned_int_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\"\n+gdb_test \"print double_vla\" \" = \\\\\\{0, 0.5, 1, 1.5, 2\\\\\\}\"\n+gdb_test \"print float_vla\" \" = \\\\\\{0, 0.5, 1, 1.5, 2\\\\\\}\"\n+gdb_test \"print long_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\"\n+gdb_test \"print unsigned_long_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\"\n+gdb_test \"print char_vla\" \" = \\\"AAAAA\\\"\"\n+gdb_test \"print short_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\"\n+gdb_test \"print unsigned_short_vla\" \" = \\\\\\{0, 2, 4, 6, 8\\\\\\}\"\n+gdb_test \"print unsigned_char_vla\" \" = \\\"AAAAA\\\"\"\n gdb_test \"print foo_vla\" \\\n-         \"\\\\\\{\\\\\\{a = 0\\\\\\}, \\\\\\{a = 2\\\\\\}, \\\\\\{a = 4\\\\\\}, \\\\\\{a = 6\\\\\\}, \\\\\\{a = 8\\\\\\}\\\\\\}\" \\\n-         \"print foo_vla\"\n+         \"\\\\\\{\\\\\\{a = 0\\\\\\}, \\\\\\{a = 2\\\\\\}, \\\\\\{a = 4\\\\\\}, \\\\\\{a = 6\\\\\\}, \\\\\\{a = 8\\\\\\}\\\\\\}\"\n gdb_test \"print bar_vla\" \\\n-         \"\\\\\\{\\\\\\{x = 0, y = \\\\\\{a = 0\\\\\\}\\\\\\}, \\\\\\{x = 2, y = \\\\\\{a = 2\\\\\\}\\\\\\}, \\\\\\{x = 4, y = \\\\\\{a = 4\\\\\\}\\\\\\}, \\\\\\{x = 6, y = \\\\\\{a = 6\\\\\\}\\\\\\}, \\\\\\{x = 8, y = \\\\\\{a = 8\\\\\\}\\\\\\}\\\\\\}\" \\\n-         \"print bar_vla\"\n+         \"\\\\\\{\\\\\\{x = 0, y = \\\\\\{a = 0\\\\\\}\\\\\\}, \\\\\\{x = 2, y = \\\\\\{a = 2\\\\\\}\\\\\\}, \\\\\\{x = 4, y = \\\\\\{a = 4\\\\\\}\\\\\\}, \\\\\\{x = 6, y = \\\\\\{a = 6\\\\\\}\\\\\\}, \\\\\\{x = 8, y = \\\\\\{a = 8\\\\\\}\\\\\\}\\\\\\}\"\n gdb_test \"print vla_struct_object\" \\\n     \"\\\\\\{something = 5, vla_field = \\\\\\{0, 2, 4, 6, 8\\\\\\}\\\\\\}\"\n gdb_test \"print vla_union_object\" \\\n     \"\\\\\\{vla_field = \\\\\\{0, 2, 4, 6, 8\\\\\\}\\\\\\}\"\n \n # Check whatis of VLA's.\n-gdb_test \"whatis int_vla\" \"type = int \\\\\\[5\\\\\\]\" \"whatis int_vla\"\n-gdb_test \"whatis unsigned_int_vla\" \"type = unsigned int \\\\\\[5\\\\\\]\" \\\n-         \"whatis unsigned_int_vla\"\n-gdb_test \"whatis double_vla\" \"type = double \\\\\\[5\\\\\\]\" \"whatis double_vla\"\n-gdb_test \"whatis float_vla\" \"type = float \\\\\\[5\\\\\\]\" \"whatis float_vla\"\n-gdb_test \"whatis long_vla\" \"type = long( int)? \\\\\\[5\\\\\\]\" \"whatis long_vla\"\n+gdb_test \"whatis int_vla\" \"type = int \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis unsigned_int_vla\" \"type = unsigned int \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis double_vla\" \"type = double \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis float_vla\" \"type = float \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis long_vla\" \"type = long( int)? \\\\\\[5\\\\\\]\"\n gdb_test \"whatis unsigned_long_vla\" \\\n-         \"type = (long unsigned int|unsigned long) \\\\\\[5\\\\\\]\" \\\n-         \"whatis unsigned_long_vla\"\n-gdb_test \"whatis char_vla\" \"type = char \\\\\\[5\\\\\\]\" \"whatis char_vla\"\n-gdb_test \"whatis short_vla\" \"type = short( int)? \\\\\\[5\\\\\\]\" \\\n-         \"whatis short_vla\"\n+         \"type = (long unsigned int|unsigned long) \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis char_vla\" \"type = char \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis short_vla\" \"type = short( int)? \\\\\\[5\\\\\\]\"\n gdb_test \"whatis unsigned_short_vla\" \\\n-         \"type = (short unsigned int|unsigned short) \\\\\\[5\\\\\\]\" \\\n-         \"whatis unsigned_short_vla\"\n-gdb_test \"whatis unsigned_char_vla\" \"type = unsigned char \\\\\\[5\\\\\\]\" \\\n-         \"whatis unsigned_char_vla\"\n-gdb_test \"whatis foo_vla\" \"type = struct foo \\\\\\[5\\\\\\]\" \"whatis foo_vla\"\n-gdb_test \"whatis bar_vla\" \"type = BAR \\\\\\[5\\\\\\]\" \"whatis bar_vla\"\n+         \"type = (short unsigned int|unsigned short) \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis unsigned_char_vla\" \"type = unsigned char \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis foo_vla\" \"type = struct foo \\\\\\[5\\\\\\]\"\n+gdb_test \"whatis bar_vla\" \"type = BAR \\\\\\[5\\\\\\]\"\n gdb_test \"whatis vla_struct_object\" \"type = struct vla_struct\"\n gdb_test \"whatis vla_union_object\" \"type = union vla_union\"\n \n # Check ptype of VLA's.\n-gdb_test \"ptype int_vla\" \"type = int \\\\\\[5\\\\\\]\" \"ptype int_vla\"\n-gdb_test \"ptype unsigned_int_vla\" \"type = unsigned int \\\\\\[5\\\\\\]\" \\\n-         \"ptype unsigned_int_vla\"\n-gdb_test \"ptype double_vla\" \"type = double \\\\\\[5\\\\\\]\" \"ptype double_vla\"\n-gdb_test \"ptype float_vla\" \"type = float \\\\\\[5\\\\\\]\" \"ptype float_vla\"\n-gdb_test \"ptype long_vla\" \"type = long( int)? \\\\\\[5\\\\\\]\" \"ptype long_vla\"\n-gdb_test \"ptype unsigned_long_vla\" \"type = unsigned long \\\\\\[5\\\\\\]\" \\\n-         \"ptype unsigned_long_vla\"\n-gdb_test \"ptype char_vla\" \"type = char \\\\\\[5\\\\\\]\" \"ptype char_vla\"\n-gdb_test \"ptype short_vla\" \"type = short( int)? \\\\\\[5\\\\\\]\" \\\n-         \"ptype short_vla\"\n-gdb_test \"ptype unsigned_short_vla\" \"type = unsigned short \\\\\\[5\\\\\\]\" \\\n-         \"ptype unsigned_short_vla\"\n-gdb_test \"ptype unsigned_char_vla\" \"type = unsigned char \\\\\\[5\\\\\\]\" \\\n-         \"ptype unsigned_char_vla\"\n-gdb_test \"ptype foo_vla\" \"type = struct foo {\\r\\n\\\\s+int a;\\r\\n} \\\\\\[5\\\\\\]\" \\\n-         \"ptype foo_vla\"\n+gdb_test \"ptype int_vla\" \"type = int \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype unsigned_int_vla\" \"type = unsigned int \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype double_vla\" \"type = double \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype float_vla\" \"type = float \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype long_vla\" \"type = long( int)? \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype unsigned_long_vla\" \"type = unsigned long \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype char_vla\" \"type = char \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype short_vla\" \"type = short( int)? \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype unsigned_short_vla\" \"type = unsigned short \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype unsigned_char_vla\" \"type = unsigned char \\\\\\[5\\\\\\]\"\n+gdb_test \"ptype foo_vla\" \"type = struct foo {\\r\\n\\\\s+int a;\\r\\n} \\\\\\[5\\\\\\]\"\n gdb_test \"ptype bar_vla\" \\\n-         \"type = struct bar {\\r\\n\\\\s+int x;\\r\\n\\\\s+struct foo y;\\r\\n} \\\\\\[5\\\\\\]\" \\\n-         \"ptype bar_vla\"\n+         \"type = struct bar {\\r\\n\\\\s+int x;\\r\\n\\\\s+struct foo y;\\r\\n} \\\\\\[5\\\\\\]\"\n gdb_test \"ptype vla_struct_object\" \\\n     \"type = struct vla_struct {\\r\\n\\\\s+int something;\\r\\n\\\\s+int vla_field\\\\\\[5\\\\\\];\\r\\n}\"\n gdb_test \"ptype vla_union_object\" \\\n@@ -139,16 +115,15 @@ set sizeof_int [get_sizeof \"int\" 4]\n gdb_test_no_output  \"set variable int_vla\\[0\\] = 42\" \\\n                     \"set variable int_vla\\[0\\] = 42\"\n \n-gdb_test \"print sizeof (++int_vla\\[0\\])\" \" = ${sizeof_int}\" \\\n-         \"print sizeof (++int_vla\\[0\\])\"\n+gdb_test \"print sizeof (++int_vla\\[0\\])\" \" = ${sizeof_int}\"\n gdb_test \"print int_vla\\[0\\]\" \" = 42\" \\\n          \"print int_vla\\[0\\] - sizeof no side effects\"\n \n-gdb_test \"ptype ++int_vla\\[0\\]\" \"type = int\" \"ptype ++int_vla\\[0\\]\"\n+gdb_test \"ptype ++int_vla\\[0\\]\" \"type = int\"\n gdb_test \"print int_vla\\[0\\]\" \" = 42\" \\\n          \"print int_vla\\[0\\] - ptype no side effects\"\n \n-gdb_test \"whatis ++int_vla\\[0\\]\" \"type = int\" \"whatis ++int_vla\\[0\\]\"\n+gdb_test \"whatis ++int_vla\\[0\\]\" \"type = int\"\n gdb_test \"print int_vla\\[0\\]\" \" = 42\" \\\n          \"print int_vla\\[0\\] - whatis no side effects\"\n "
    },
    {
      "sha": "6978891a0e19dcffac29d05ce323253e692b9fa5",
      "filename": "gdb/testsuite/gdb.base/vla-ptr.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/vla-ptr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/vla-ptr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/vla-ptr.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -38,4 +38,4 @@ gdb_test \"print *vla_ptr\" \" = 2\" \"print *vla_ptr (bar)\"\n \n gdb_breakpoint [gdb_get_line_number \"vla_func_bp\"]\n gdb_continue_to_breakpoint \"vla_func_bp\"\n-gdb_test \"print td_vla\" \" = \\\\\\{4, 5, 6, 7, 8\\\\\\}\" \"print td_vla\"\n+gdb_test \"print td_vla\" \" = \\\\\\{4, 5, 6, 7, 8\\\\\\}\""
    },
    {
      "sha": "b03b477228547a080c92f2bf63a4198a9e77d8c9",
      "filename": "gdb/testsuite/gdb.base/vla-sideeffect.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 18,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/vla-sideeffect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/vla-sideeffect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/vla-sideeffect.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -33,56 +33,48 @@ gdb_continue_to_breakpoint \"vla-filled\"\n set sizeof_int [get_sizeof \"int\" 4]\n set sizeof_vla [ expr \"10\" * \"$sizeof_int\" ]\n \n-gdb_test \"print sizeof (vla1\\[i++\\])\" \" = ${sizeof_int}\" \\\n-         \"print sizeof (vla1\\[i++\\])\"\n+gdb_test \"print sizeof (vla1\\[i++\\])\" \" = ${sizeof_int}\"\n gdb_test \"print i\" \" = 0\" \\\n          \"print i - sizeof no side effects\"\n \n-gdb_test \"print sizeof (++vla1\\[0\\])\" \" = ${sizeof_int}\" \\\n-         \"print sizeof (++vla1\\[0\\])\"\n+gdb_test \"print sizeof (++vla1\\[0\\])\" \" = ${sizeof_int}\"\n gdb_test \"print vla1\\[0\\]\" \" = 10\" \\\n          \"print vla1\\[0\\] - sizeof no side effects\"\n \n-gdb_test \"ptype ++vla1\\[0\\]\" \"type = int\" \"ptype ++vla1\\[0\\]\"\n+gdb_test \"ptype ++vla1\\[0\\]\" \"type = int\"\n gdb_test \"print vla1\\[0\\]\" \" = 10\" \\\n          \"print vla1\\[0\\] - ptype no side effects\"\n \n-gdb_test \"whatis ++vla1\\[0\\]\" \"type = int\" \"whatis ++vla1\\[0\\]\"\n+gdb_test \"whatis ++vla1\\[0\\]\" \"type = int\"\n gdb_test \"print vla1\\[0\\]\" \" = 10\" \\\n          \"print vla1\\[0\\] - whatis no side effects\"\n \n \n-gdb_test \"print sizeof (vla2\\[i++\\])\" \" = ${sizeof_vla}\" \\\n-         \"print sizeof (vla2\\[i++\\])\"\n+gdb_test \"print sizeof (vla2\\[i++\\])\" \" = ${sizeof_vla}\"\n gdb_test \"print i\" \" = 1\" \\\n          \"print i - sizeof with side effects (1)\"\n \n-gdb_test \"print sizeof (vla2\\[i++ + sizeof(j++)\\])\" \" = ${sizeof_vla}\" \\\n-         \"print sizeof (vla2\\[i++ + sizeof(j++)\\])\"\n+gdb_test \"print sizeof (vla2\\[i++ + sizeof(j++)\\])\" \" = ${sizeof_vla}\"\n gdb_test \"print i\" \" = 2\" \\\n          \"print i - sizeof with side effects (2)\"\n gdb_test \"print j\" \" = 0\" \\\n          \"print j - sizeof with no side effects\"\n \n-gdb_test \"ptype vla2\\[i++\\]\" \"type = int \\\\\\[10\\\\\\]\" \\\n-         \"ptype vla2\\[i++\\]\"\n+gdb_test \"ptype vla2\\[i++\\]\" \"type = int \\\\\\[10\\\\\\]\"\n gdb_test \"print i\" \" = 2\" \\\n          \"print i - ptype with side effects (1)\"\n \n-gdb_test \"ptype vla2\\[i++ + sizeof(j++)\\]\" \"type = int \\\\\\[10\\\\\\]\" \\\n-         \"ptype vla2\\[i++ + sizeof(j++)\\]\"\n+gdb_test \"ptype vla2\\[i++ + sizeof(j++)\\]\" \"type = int \\\\\\[10\\\\\\]\"\n gdb_test \"print i\" \" = 2\" \\\n          \"print i - ptype with side effects (2)\"\n gdb_test \"print j\" \" = 0\" \\\n          \"print j - ptype with no side effects\"\n \n-gdb_test \"whatis vla2\\[i++\\]\" \"type = int \\\\\\[10\\\\\\]\" \\\n-         \"whatis vla2\\[i++\\]\"\n+gdb_test \"whatis vla2\\[i++\\]\" \"type = int \\\\\\[10\\\\\\]\"\n gdb_test \"print i\" \" = 2\" \\\n          \"print i - whatis with side effects (1)\"\n \n-gdb_test \"whatis vla2\\[i++ + sizeof(j++)\\]\" \"type = int \\\\\\[10\\\\\\]\" \\\n-         \"whatis vla2\\[i++ + sizeof(j++)\\]\"\n+gdb_test \"whatis vla2\\[i++ + sizeof(j++)\\]\" \"type = int \\\\\\[10\\\\\\]\"\n gdb_test \"print i\" \" = 2\" \\\n          \"print i - whatis with side effects (2)\"\n gdb_test \"print j\" \" = 0\" \\"
    },
    {
      "sha": "69433987263177cf863ea97cede555913dc920aa",
      "filename": "gdb/testsuite/gdb.base/volatile.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/volatile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/volatile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/volatile.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -252,5 +252,4 @@ local_compiler_xfail_check\n local_compiler_xfail_check_2\n \n gdb_test \"ptype qux2\" \\\n-    \"type = int \\\\(volatile unsigned char, const volatile int, volatile short( int)?, volatile long( int)? \\\\*, float \\\\* volatile, const volatile signed char \\\\* const volatile\\\\)\" \\\n-    \"ptype qux2\"\n+    \"type = int \\\\(volatile unsigned char, const volatile int, volatile short( int)?, volatile long( int)? \\\\*, float \\\\* volatile, const volatile signed char \\\\* const volatile\\\\)\""
    },
    {
      "sha": "94b10a3d7bb62e63975b0ffffaf63f5f43af693d",
      "filename": "gdb/testsuite/gdb.base/watch-cond-infcall.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/watch-cond-infcall.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/watch-cond-infcall.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/watch-cond-infcall.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -47,8 +47,7 @@ proc test_watchpoint { hw } {\n     gdb_breakpoint [gdb_get_line_number \"break-at-exit\"]\n \n     gdb_test \"continue\" \\\n-\t\"atchpoint \\[0-9\\]+: var\\r\\n\\r\\nOld value = 0\\r\\nNew value = 1\\r\\n.*watchpoint-stop.*\" \\\n-\t\"continue\"\n+\t\"atchpoint \\[0-9\\]+: var\\r\\n\\r\\nOld value = 0\\r\\nNew value = 1\\r\\n.*watchpoint-stop.*\"\n }\n \n if { ![target_info exists gdb,no_hardware_watchpoints] } {"
    },
    {
      "sha": "f6e080b0e548449edeb48a2d89effe6eec285864",
      "filename": "gdb/testsuite/gdb.base/watchpoint.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/watchpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11af934b5cdba71d14f8ea7905b484c8a6ba0561/gdb/testsuite/gdb.base/watchpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/watchpoint.exp?ref=11af934b5cdba71d14f8ea7905b484c8a6ba0561",
      "patch": "@@ -646,12 +646,12 @@ proc test_wide_location_1 {} {\n     gdb_continue_to_breakpoint \"func6 breakpoint here\"\n \n     if { $hw_expected } {\n-\tgdb_test \"watch foo2\" \"Hardware watchpoint .*: .*\" \"watch foo2\"\n+\tgdb_test \"watch foo2\" \"Hardware watchpoint .*: .*\"\n \tgdb_test \"continue\" \\\n \t    \"Continuing.*Hardware watchpoint .*: .*New value = \\\\\\{val = \\\\\\{0, 11\\\\\\}\\\\\\}.*\" \\\n \t    \"continue with watch foo2\"\n     } else {\n-\tgdb_test \"watch foo2\" \"atchpoint .*: .*\" \"watch foo2\"\n+\tgdb_test \"watch foo2\" \"atchpoint .*: .*\"\n \tset test \"continue with watch foo2\"\n \tgdb_test_multiple \"cont\" $test {\n \t    -re \"Continuing.*\\[Ww\\]atchpoint .*: .*New value = \\\\\\{val = \\\\\\{0, 11\\\\\\}\\\\\\}.*$gdb_prompt $\" {\n@@ -693,12 +693,12 @@ proc test_wide_location_2 {} {\n     gdb_continue_to_breakpoint \"func7 breakpoint here\"\n \n     if { $hw_expected } {\n-\tgdb_test \"watch foo4\" \"Hardware watchpoint .*: .*\" \"watch foo4\"\n+\tgdb_test \"watch foo4\" \"Hardware watchpoint .*: .*\"\n \tgdb_test \"continue\" \\\n \t    \"Continuing.*Hardware watchpoint .*: .*New value = \\\\\\{val = \\\\\\{0, 0, 0, 33\\\\\\}\\\\\\}.*\" \\\n \t    \"continue with watch foo4\"\n     } else {\n-\tgdb_test \"watch foo4\" \"atchpoint .*: .*\" \"watch foo4\"\n+\tgdb_test \"watch foo4\" \"atchpoint .*: .*\"\n \tset test \"continue with watch foo4\"\n \tgdb_test_multiple \"cont\" $test {\n \t    -re \"Continuing.*\\[Ww\\]atchpoint .*: .*New value = \\\\\\{val = \\\\\\{0, 0, 0, 33\\\\\\}\\\\\\}.*$gdb_prompt $\" {"
    }
  ]
}