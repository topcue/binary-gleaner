{
  "sha": "1218a4bf49919878d41ad37cbe906f412d6fbdad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTIxOGE0YmY0OTkxOTg3OGQ0MWFkMzdjYmU5MDZmNDEyZDZmYmRhZA==",
  "commit": {
    "author": {
      "name": "Cristiano De Alti",
      "email": "cristiano_dealti@hotmail.com",
      "date": "2020-05-25T15:55:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-05-25T15:56:14Z"
    },
    "message": "gdb: make avr_integer_to_address generate code or data address based on type\n\nThe AVR architecture is a Harvard one, meaning it has different memory\nspaces for code and data.  In GDB, this is dealt with by having the data\n(SRAM) addresses start at 0x00800000.  When interpreting an integer as\nan address (converting to a CORE_ADDR), we currently always generate a\ndata address.  This doesn't work for some cases described below, where\nthe integer is meant to represent a code address.\n\nThis patch changes avr_integer_to_address so that it generates the\ncorrect type of address (code or data) based on the passed type.\n\nUsing the simavr.exp board, I didn't see any regressions when running\nthe gdb.base/*.exp tests.  A few tests go from fail to pass, but none\nfrom pass to fail.  There are a few new fails and unresolved, but it's\njust because some tests manage to make more progress before failing in a\ndifferent way.\n\nIn practice, it fixes disassembling by address, as described in the PR:\n\n    - (gdb) disassemble 0x12a,0x12b\n    - Dump of assembler code from 0x12a to 0x12b:\n    -    0x0000012a <main+0>: push    r28\n    - End of assembler dump.\n\n    + (gdb) disassemble 0x12a,0x12b\n    + Dump of assembler code from 0x80012a to 0x80012b:\n    +    0x0080012a:  nop\n    + End of assembler dump.\n\nAnd also, setting a breakpoint by address:\n\n    - (gdb) p &main\n    - $1 = (int (*)(void)) 0x12a <main>\n    - (gdb) b *0x12a\n    - Breakpoint 1 at 0x80012a\n\n    + (gdb) p &main\n    + $1 = (int (*)(void)) 0x12a <main>\n    + (gdb) b *0x12a\n    + Breakpoint 1 at 0x12a: file test-avr.c, line 3.\n    + Note: automatically using hardware breakpoints for read-only addresses.\n\ngdb/ChangeLog:\n\n\tPR gdb/13519\n\t* avr-tdep.c (avr_integer_to_address): Return data or code\n\taddress accordingly to the second 'type' argument of the\n\tfunction.\n\nChange-Id: Iaea1587d053e86f4ab8aebdcabec8d31a6d262cd",
    "tree": {
      "sha": "2b2e4ef59471f6b61c9c0007e9bc6dc1a6d11bbe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2b2e4ef59471f6b61c9c0007e9bc6dc1a6d11bbe"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1218a4bf49919878d41ad37cbe906f412d6fbdad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1218a4bf49919878d41ad37cbe906f412d6fbdad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1218a4bf49919878d41ad37cbe906f412d6fbdad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1218a4bf49919878d41ad37cbe906f412d6fbdad/comments",
  "author": {
    "login": "drugo72",
    "id": 3309585,
    "node_id": "MDQ6VXNlcjMzMDk1ODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3309585?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/drugo72",
    "html_url": "https://github.com/drugo72",
    "followers_url": "https://api.github.com/users/drugo72/followers",
    "following_url": "https://api.github.com/users/drugo72/following{/other_user}",
    "gists_url": "https://api.github.com/users/drugo72/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/drugo72/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/drugo72/subscriptions",
    "organizations_url": "https://api.github.com/users/drugo72/orgs",
    "repos_url": "https://api.github.com/users/drugo72/repos",
    "events_url": "https://api.github.com/users/drugo72/events{/privacy}",
    "received_events_url": "https://api.github.com/users/drugo72/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "462f72c552226823829e7d370572b7e0852d9c02",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/462f72c552226823829e7d370572b7e0852d9c02",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/462f72c552226823829e7d370572b7e0852d9c02"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 11,
    "deletions": 1
  },
  "files": [
    {
      "sha": "2e21613640caae623a90515f2da2b80448b2c9e1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1218a4bf49919878d41ad37cbe906f412d6fbdad/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1218a4bf49919878d41ad37cbe906f412d6fbdad/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1218a4bf49919878d41ad37cbe906f412d6fbdad",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-25  Cristiano De Alti  <cristiano_dealti@hotmail.com>\n+\n+\tPR gdb/13519\n+\t* avr-tdep.c (avr_integer_to_address): Return data or code\n+\taddress accordingly to the second 'type' argument of the\n+\tfunction.\n+\n 2020-05-25  Michael Weghorn  <m.weghorn@posteo.de>\n \n \t* infcmd.c, inferior.h: (construct_inferior_arguments):"
    },
    {
      "sha": "74ab531711e9f0e878041efcc42453397ac91f3a",
      "filename": "gdb/avr-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1218a4bf49919878d41ad37cbe906f412d6fbdad/gdb/avr-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1218a4bf49919878d41ad37cbe906f412d6fbdad/gdb/avr-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/avr-tdep.c?ref=1218a4bf49919878d41ad37cbe906f412d6fbdad",
      "patch": "@@ -363,7 +363,10 @@ avr_integer_to_address (struct gdbarch *gdbarch,\n {\n   ULONGEST addr = unpack_long (type, buf);\n \n-  return avr_make_saddr (addr);\n+  if (TYPE_DATA_SPACE (type))\n+    return avr_make_saddr (addr);\n+  else\n+    return avr_make_iaddr (addr);\n }\n \n static CORE_ADDR"
    }
  ]
}