{
  "sha": "eba4caf23152a1a66d10ce37c502ec78654cd5eb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWJhNGNhZjIzMTUyYTFhNjZkMTBjZTM3YzUwMmVjNzg2NTRjZDVlYg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-08-09T04:49:04Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-08-09T04:49:04Z"
    },
    "message": "[gdb] Fix gdb.dwarf2/varval.exp with -fPIE/-pie\n\nWith target board unix/-fPIE/-pie, we get:\n...\nFAIL: gdb.dwarf2/varval.exp: print varval2\n...\n\nThis is due comparing a get_frame_pc result (which includes the for PIE\nnon-zero relocation offset) with pc_high and pc_low obtained using\nget_scope_pc_bounds (which do not include the relocation offset).\n\nFix this by adjusting pc_high and pc_low with the relocation offset.\n\nTested on x86_64-linux with target board unix/-fPIE/-pie.\n\ngdb/ChangeLog:\n\n2019-08-09  Tom de Vries  <tdevries@suse.de>\n\n\tPR gdb/24591\n\t* dwarf2read.c (dwarf2_fetch_die_loc_sect_off): Adjust pc_high and\n\tpc_low with relocation offset.",
    "tree": {
      "sha": "ce04049ed9ed4644954febfadbe51e800db27dde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce04049ed9ed4644954febfadbe51e800db27dde"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eba4caf23152a1a66d10ce37c502ec78654cd5eb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eba4caf23152a1a66d10ce37c502ec78654cd5eb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eba4caf23152a1a66d10ce37c502ec78654cd5eb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eba4caf23152a1a66d10ce37c502ec78654cd5eb/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "378646f7a4260eecd244ba840ae1af4e663e30a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/378646f7a4260eecd244ba840ae1af4e663e30a5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/378646f7a4260eecd244ba840ae1af4e663e30a5"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 14,
    "deletions": 2
  },
  "files": [
    {
      "sha": "6e6390c99165d8c07d186eda4534456236031ec7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eba4caf23152a1a66d10ce37c502ec78654cd5eb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eba4caf23152a1a66d10ce37c502ec78654cd5eb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=eba4caf23152a1a66d10ce37c502ec78654cd5eb",
      "patch": "@@ -1,3 +1,9 @@\n+2019-08-09  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR gdb/24591\n+\t* dwarf2read.c (dwarf2_fetch_die_loc_sect_off): Adjust pc_high and\n+\tpc_low with relocation offset.\n+\n 2019-08-07  Tom Tromey  <tromey@adacore.com>\n \n \t* stack.c (print_frame_arg, read_frame_local, read_frame_arg)"
    },
    {
      "sha": "de9755f6ce300a9bfd7ca45c0cd3d05c5cae1069",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eba4caf23152a1a66d10ce37c502ec78654cd5eb/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eba4caf23152a1a66d10ce37c502ec78654cd5eb/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=eba4caf23152a1a66d10ce37c502ec78654cd5eb",
      "patch": "@@ -23206,6 +23206,9 @@ dwarf2_fetch_die_loc_sect_off (sect_offset sect_off,\n \t  != dwarf2_per_objfile->abstract_to_concrete.end ()))\n     {\n       CORE_ADDR pc = (*get_frame_pc) (baton);\n+      CORE_ADDR baseaddr\n+\t= ANOFFSET (objfile->section_offsets, SECT_OFF_TEXT (objfile));\n+      struct gdbarch *gdbarch = get_objfile_arch (objfile);\n \n       for (const auto &cand_off\n \t     : dwarf2_per_objfile->abstract_to_concrete[die->sect_off])\n@@ -23220,8 +23223,11 @@ dwarf2_fetch_die_loc_sect_off (sect_offset sect_off,\n \n \t  CORE_ADDR pc_low, pc_high;\n \t  get_scope_pc_bounds (cand->parent, &pc_low, &pc_high, cu);\n-\t  if (pc_low == ((CORE_ADDR) -1)\n-\t      || !(pc_low <= pc && pc < pc_high))\n+\t  if (pc_low == ((CORE_ADDR) -1))\n+\t    continue;\n+\t  pc_low = gdbarch_adjust_dwarf2_addr (gdbarch, pc_low + baseaddr);\n+\t  pc_high = gdbarch_adjust_dwarf2_addr (gdbarch, pc_high + baseaddr);\n+\t  if (!(pc_low <= pc && pc < pc_high))\n \t    continue;\n \n \t  die = cand;"
    }
  ]
}