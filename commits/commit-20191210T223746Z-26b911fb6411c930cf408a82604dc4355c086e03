{
  "sha": "26b911fb6411c930cf408a82604dc4355c086e03",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjZiOTExZmI2NDExYzkzMGNmNDA4YTgyNjA0ZGM0MzU1YzA4NmUwMw==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-08-22T02:32:12Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-12-10T22:37:46Z"
    },
    "message": "Add gdb_compile_openmp to lib/gdb.exp\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (gdb_compile_openmp): New proc.\n\t(build_executable_from_specs): Add an \"openmp\" option.\n\t(gdb_compile_pthreads): Add non-executable case.\n\nChange-Id: I94048b8b0940c707ce0529a6bcfa6e4eace49101",
    "tree": {
      "sha": "5bf38d6893ac1ba08afe3a61e433d8ea835dff7a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5bf38d6893ac1ba08afe3a61e433d8ea835dff7a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/26b911fb6411c930cf408a82604dc4355c086e03",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26b911fb6411c930cf408a82604dc4355c086e03",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/26b911fb6411c930cf408a82604dc4355c086e03",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26b911fb6411c930cf408a82604dc4355c086e03/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cb51113052d534b628c635ac7b86b95fe436d60d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb51113052d534b628c635ac7b86b95fe436d60d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cb51113052d534b628c635ac7b86b95fe436d60d"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 19,
    "deletions": 2
  },
  "files": [
    {
      "sha": "d3510d42cbc2f4bfef075c27a6e4ddd95ca27761",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26b911fb6411c930cf408a82604dc4355c086e03/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26b911fb6411c930cf408a82604dc4355c086e03/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=26b911fb6411c930cf408a82604dc4355c086e03",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-10  Kevin Buettner  <kevinb@redhat.com>\n+\n+            * lib/gdb.exp (gdb_compile_openmp): New proc.\n+            (build_executable_from_specs): Add an \"openmp\" option.\n+            (gdb_compile_pthreads): Add non-executable case.\n+\n 2019-12-10  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/unchecked_union.exp: New file."
    },
    {
      "sha": "806e5a0c304e8b130909fd854f3fcd6ab07f5317",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26b911fb6411c930cf408a82604dc4355c086e03/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26b911fb6411c930cf408a82604dc4355c086e03/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=26b911fb6411c930cf408a82604dc4355c086e03",
      "patch": "@@ -3951,6 +3951,9 @@ proc gdb_compile {source dest type options} {\n # against several different thread libraries, to see which one this\n # system has.\n proc gdb_compile_pthreads {source dest type options} {\n+    if {$type != \"executable\"} {\n+\treturn [gdb_compile $source $dest $type $options]\n+    }\n     set built_binfile 0\n     set why_msg \"unrecognized error\"\n     foreach lib {-lpthreads -lpthread -lthread \"\"} {\n@@ -4156,6 +4159,14 @@ proc gdb_compile_objc {source dest type options} {\n     }\n }\n \n+# Build an OpenMP program from SOURCE.  See prefatory comment for\n+# gdb_compile, above, for discussion of the parameters to this proc.\n+\n+proc gdb_compile_openmp {source dest type options} {\n+    lappend options \"additional_flags=-fopenmp\"\n+    return [gdb_compile $source $dest $type $options]\n+}\n+\n # Send a command to GDB.\n # For options for TYPE see gdb_stdin_log_write\n \n@@ -5901,7 +5912,7 @@ proc build_executable_from_specs {testname executable options args} {\n     }\n \n     set func gdb_compile\n-    set func_index [lsearch -regexp $options {^(pthreads|shlib|shlib_pthreads)$}]\n+    set func_index [lsearch -regexp $options {^(pthreads|shlib|shlib_pthreads|openmp)$}]\n     if {$func_index != -1} {\n \tset func \"${func}_[lindex $options $func_index]\"\n     }\n@@ -5936,7 +5947,7 @@ proc build_executable_from_specs {testname executable options args} {\n \t    if { ! [regexp \"^/\" \"$s\"] } then {\n \t\tset s \"$srcdir/$subdir/$s\"\n \t    }\n-\t    if  { [gdb_compile \"${s}\" \"${binfile}${i}.o\" object $local_options] != \"\" } {\n+\t    if  { [$func \"${s}\" \"${binfile}${i}.o\" object $local_options] != \"\" } {\n \t\tuntested $testname\n \t\treturn -1\n \t    }"
    }
  ]
}