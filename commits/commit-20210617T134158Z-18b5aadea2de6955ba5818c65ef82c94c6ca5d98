{
  "sha": "18b5aadea2de6955ba5818c65ef82c94c6ca5d98",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MThiNWFhZGVhMmRlNjk1NWJhNTgxOGM2NWVmODJjOTRjNmNhNWQ5OA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-06-17T13:41:58Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-06-17T13:41:58Z"
    },
    "message": "gdb/testsuite: gdb.base/args.exp: use save_vars\n\nUse save_vars instead of manually saving/restoring.  This ensures that\nif anything throws an error, GDBFLAGS will be correctly restored.\n\nRemove the global GDBFLAGS declaration at the top, it's not necessary.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/args.exp: Use save_vars.\n\nChange-Id: I3a45e4fc1635ec0212de2415040f91eecaf4a057",
    "tree": {
      "sha": "1cd24cdf8c99d56706114b35c47cf17aba91cc29",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1cd24cdf8c99d56706114b35c47cf17aba91cc29"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/18b5aadea2de6955ba5818c65ef82c94c6ca5d98",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18b5aadea2de6955ba5818c65ef82c94c6ca5d98",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/18b5aadea2de6955ba5818c65ef82c94c6ca5d98",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18b5aadea2de6955ba5818c65ef82c94c6ca5d98/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "82a5082ed3f00b8d7bd1e3810c6eeb4351e35286",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82a5082ed3f00b8d7bd1e3810c6eeb4351e35286",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82a5082ed3f00b8d7bd1e3810c6eeb4351e35286"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 31,
    "deletions": 29
  },
  "files": [
    {
      "sha": "30d1a4ffa227a28f77d179df0518eddacc6be290",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18b5aadea2de6955ba5818c65ef82c94c6ca5d98/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18b5aadea2de6955ba5818c65ef82c94c6ca5d98/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=18b5aadea2de6955ba5818c65ef82c94c6ca5d98",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-17  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdb.base/args.exp: Use save_vars.\n+\n 2021-06-14  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.base/annota1.exp: Build list using [list] instead of {}."
    },
    {
      "sha": "bff750dff24f76960412c73652e8a9403052bbe4",
      "filename": "gdb/testsuite/gdb.base/args.exp",
      "status": "modified",
      "additions": 27,
      "deletions": 29,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18b5aadea2de6955ba5818c65ef82c94c6ca5d98/gdb/testsuite/gdb.base/args.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18b5aadea2de6955ba5818c65ef82c94c6ca5d98/gdb/testsuite/gdb.base/args.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/args.exp?ref=18b5aadea2de6955ba5818c65ef82c94c6ca5d98",
      "patch": "@@ -15,9 +15,6 @@\n \n # This is a test for the gdb invocation option --args.\n \n-\n-global GDBFLAGS\n-\n # Skip test if target does not support argument passing.\n if [target_info exists noargs] {\n     return\n@@ -64,39 +61,40 @@ proc args_test { name arglist } {\n #\n # Test that the --args are processed correctly.\n #\n-set old_gdbflags $GDBFLAGS\n \n-set GDBFLAGS \"$old_gdbflags --args $binfile 1 3\"\n-args_test basic {{1} {3}}\n+save_vars { GDBFLAGS } {\n+    set old_gdbflags $GDBFLAGS\n \n-#\n-# Test that the --args are processed correctly even if one of them is empty.\n-# The syntax needed is a little peculiar; DejaGNU treats the arguments as a\n-# list and expands them itself, since no shell redirection is involved.\n-#\n-set GDBFLAGS \"$old_gdbflags --args $binfile 1 {} 3\"\n-args_test \"one empty\" {{1} {} {3}}\n+    set GDBFLAGS \"$old_gdbflags --args $binfile 1 3\"\n+    args_test basic {{1} {3}}\n \n-#\n-# try with 2 empty args\n-#\n-set GDBFLAGS \"$old_gdbflags --args $binfile 1 {} {} 3\"\n-args_test \"two empty\" {{1} {} {} 3}\n+    #\n+    # Test that the --args are processed correctly even if one of them is empty.\n+    # The syntax needed is a little peculiar; DejaGNU treats the arguments as a\n+    # list and expands them itself, since no shell redirection is involved.\n+    #\n+    set GDBFLAGS \"$old_gdbflags --args $binfile 1 {} 3\"\n+    args_test \"one empty\" {{1} {} {3}}\n \n-# Try with arguments containing literal single quotes.\n+    #\n+    # try with 2 empty args\n+    #\n+    set GDBFLAGS \"$old_gdbflags --args $binfile 1 {} {} 3\"\n+    args_test \"two empty\" {{1} {} {} 3}\n \n-set GDBFLAGS \"$old_gdbflags --args $binfile 1 '' 3\"\n-args_test \"one empty (with single quotes)\" {{1} {''} {3}}\n+    # Try with arguments containing literal single quotes.\n \n-set GDBFLAGS \"$old_gdbflags --args $binfile 1 '' '' 3\"\n-args_test \"two empty (with single quotes)\" {{1} {''} {''} {3}}\n+    set GDBFLAGS \"$old_gdbflags --args $binfile 1 '' 3\"\n+    args_test \"one empty (with single quotes)\" {{1} {''} {3}}\n \n-# try with arguments containing literal newlines.\n+    set GDBFLAGS \"$old_gdbflags --args $binfile 1 '' '' 3\"\n+    args_test \"two empty (with single quotes)\" {{1} {''} {''} {3}}\n \n-set GDBFLAGS \"-nx --args $binfile 1 {\\n} 3\"\n-args_test \"one newline\" {{1} {\\\\n} {3}}\n+    # try with arguments containing literal newlines.\n \n-set GDBFLAGS \"-nx --args $binfile 1 {\\n} {\\n} 3\"\n-args_test \"two newlines\" {{1} {\\\\n} {\\\\n} {3}}\n+    set GDBFLAGS \"-nx --args $binfile 1 {\\n} 3\"\n+    args_test \"one newline\" {{1} {\\\\n} {3}}\n \n-set GDBFLAGS $old_gdbflags\n+    set GDBFLAGS \"-nx --args $binfile 1 {\\n} {\\n} 3\"\n+    args_test \"two newlines\" {{1} {\\\\n} {\\\\n} {3}}\n+}"
    }
  ]
}