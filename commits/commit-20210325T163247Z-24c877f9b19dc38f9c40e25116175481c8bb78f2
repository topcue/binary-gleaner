{
  "sha": "24c877f9b19dc38f9c40e25116175481c8bb78f2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjRjODc3ZjliMTlkYzM4ZjljNDBlMjUxMTYxNzU0ODFjOGJiNzhmMg==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:46Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:47Z"
    },
    "message": "include: always do unsigned left-shift in CTF_SET_STID\n\nThis turns into a signed left shift by 31 bits, otherwise.  This is an\noffset and is always treated as unsigned in any case, so add an\nappropriate cast.\n\ninclude/ChangeLog\n2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n\n\tPR libctf/27628\n\t* ctf-api.h: Fix some indentation.\n\t(CTF_SET_STID): Always do an unsigned shift, even if STID is\n\tsigned.",
    "tree": {
      "sha": "8fbbd508b009e36b690ff30176cf6df38f17534a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8fbbd508b009e36b690ff30176cf6df38f17534a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/24c877f9b19dc38f9c40e25116175481c8bb78f2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24c877f9b19dc38f9c40e25116175481c8bb78f2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/24c877f9b19dc38f9c40e25116175481c8bb78f2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24c877f9b19dc38f9c40e25116175481c8bb78f2/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "485170cdb1b634b550cf227f4642dcb38097b80c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/485170cdb1b634b550cf227f4642dcb38097b80c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/485170cdb1b634b550cf227f4642dcb38097b80c"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 15,
    "deletions": 8
  },
  "files": [
    {
      "sha": "5fa6b09ac846831f0858b0574d4c7918812a9014",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24c877f9b19dc38f9c40e25116175481c8bb78f2/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24c877f9b19dc38f9c40e25116175481c8bb78f2/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=24c877f9b19dc38f9c40e25116175481c8bb78f2",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tPR libctf/27628\n+\t* ctf-api.h: Fix some indentation.\n+\t(CTF_SET_STID): Always do an unsigned shift, even if STID is\n+\tsigned.\n+\n 2021-03-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* elf/common.h (EM_INTEL205): Renamed to ..."
    },
    {
      "sha": "90631fccbd60110da9acd472e6e3e222e6c61fab",
      "filename": "include/ctf.h",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24c877f9b19dc38f9c40e25116175481c8bb78f2/include/ctf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24c877f9b19dc38f9c40e25116175481c8bb78f2/include/ctf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf.h?ref=24c877f9b19dc38f9c40e25116175481c8bb78f2",
      "patch": "@@ -358,17 +358,17 @@ union\n    c.ctt_info = CTF_TYPE_INFO(kind, vlen);\n    c.ctt_name = CTF_TYPE_NAME(stid, offset);  */\n \n-# define CTF_V1_INFO_KIND(info)\t\t(((info) & 0xf800) >> 11)\n-# define CTF_V1_INFO_ISROOT(info)\t(((info) & 0x0400) >> 10)\n-# define CTF_V1_INFO_VLEN(info)\t\t(((info) & CTF_MAX_VLEN_V1))\n+#define CTF_V1_INFO_KIND(info)\t\t(((info) & 0xf800) >> 11)\n+#define CTF_V1_INFO_ISROOT(info)\t(((info) & 0x0400) >> 10)\n+#define CTF_V1_INFO_VLEN(info)\t\t(((info) & CTF_MAX_VLEN_V1))\n \n #define CTF_V2_INFO_KIND(info)\t\t(((info) & 0xfc000000) >> 26)\n #define CTF_V2_INFO_ISROOT(info)\t(((info) & 0x2000000) >> 25)\n #define CTF_V2_INFO_VLEN(info)\t\t(((info) & CTF_MAX_VLEN))\n \n #define CTF_NAME_STID(name)\t\t((name) >> 31)\n #define CTF_NAME_OFFSET(name)\t\t((name) & CTF_MAX_NAME)\n-#define CTF_SET_STID(name, stid)\t((name) | (stid) << 31)\n+#define CTF_SET_STID(name, stid)\t((name) | ((unsigned int) stid) << 31)\n \n /* V2 only. */\n #define CTF_TYPE_INFO(kind, isroot, vlen) \\\n@@ -387,10 +387,10 @@ union\n #define CTF_V2_TYPE_TO_INDEX(id)\t((id) & CTF_MAX_PTYPE)\n #define CTF_V2_INDEX_TO_TYPE(id, child) ((child) ? ((id) | (CTF_MAX_PTYPE+1)) : (id))\n \n-# define CTF_V1_TYPE_ISPARENT(fp, id)\t((id) <= CTF_MAX_PTYPE_V1)\n-# define CTF_V1_TYPE_ISCHILD(fp, id)\t((id) > CTF_MAX_PTYPE_V1)\n-# define CTF_V1_TYPE_TO_INDEX(id)\t((id) & CTF_MAX_PTYPE_V1)\n-# define CTF_V1_INDEX_TO_TYPE(id, child) ((child) ? ((id) | (CTF_MAX_PTYPE_V1+1)) : (id))\n+#define CTF_V1_TYPE_ISPARENT(fp, id)\t((id) <= CTF_MAX_PTYPE_V1)\n+#define CTF_V1_TYPE_ISCHILD(fp, id)\t((id) > CTF_MAX_PTYPE_V1)\n+#define CTF_V1_TYPE_TO_INDEX(id)\t((id) & CTF_MAX_PTYPE_V1)\n+#define CTF_V1_INDEX_TO_TYPE(id, child) ((child) ? ((id) | (CTF_MAX_PTYPE_V1+1)) : (id))\n \n /* Valid for both V1 and V2. */\n #define CTF_TYPE_LSIZE(cttp) \\"
    }
  ]
}