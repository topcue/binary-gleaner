{
  "sha": "3f46044c09fc5a4982f4ad99aff5b7af60d3f186",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Y0NjA0NGMwOWZjNWE0OTgyZjRhZDk5YWZmNWI3YWY2MGQzZjE4Ng==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-09-14T15:08:04Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-09-14T15:08:04Z"
    },
    "message": "gdb: remove TYPE_STUB_SUPPORTED\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (TYPE_STUB_SUPPORTED): Remove, replace all\n\tuses with type::stub_is_supported.\n\nChange-Id: I69dbc32a619455605b7f934a701bc36bd664b7c0",
    "tree": {
      "sha": "64ad871acb6768f7e42794fbc58d34c41ba605f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64ad871acb6768f7e42794fbc58d34c41ba605f6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3f46044c09fc5a4982f4ad99aff5b7af60d3f186",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f46044c09fc5a4982f4ad99aff5b7af60d3f186",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3f46044c09fc5a4982f4ad99aff5b7af60d3f186",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f46044c09fc5a4982f4ad99aff5b7af60d3f186/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9baccff6ae259e74ba1f172008a377dbe2107318",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9baccff6ae259e74ba1f172008a377dbe2107318",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9baccff6ae259e74ba1f172008a377dbe2107318"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 12,
    "deletions": 9
  },
  "files": [
    {
      "sha": "1bfe02b504ff344ad9f46ecc3b660c7b47a87053",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f46044c09fc5a4982f4ad99aff5b7af60d3f186/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f46044c09fc5a4982f4ad99aff5b7af60d3f186/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3f46044c09fc5a4982f4ad99aff5b7af60d3f186",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.h (TYPE_STUB_SUPPORTED): Remove, replace all\n+\tuses with type::stub_is_supported.\n+\n 2020-09-14  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.h (struct type) <stub_is_supported, set_stub_is_supported>: New methods."
    },
    {
      "sha": "bc8a6f29a4e1effa1aa7887e06df14a3d84f3847",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f46044c09fc5a4982f4ad99aff5b7af60d3f186/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f46044c09fc5a4982f4ad99aff5b7af60d3f186/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=3f46044c09fc5a4982f4ad99aff5b7af60d3f186",
      "patch": "@@ -5103,7 +5103,7 @@ recursive_dump_type (struct type *type, int spaces)\n     {\n       puts_filtered (\" TYPE_FIXED_INSTANCE\");\n     }\n-  if (TYPE_STUB_SUPPORTED (type))\n+  if (type->stub_is_supported ())\n     {\n       puts_filtered (\" TYPE_STUB_SUPPORTED\");\n     }"
    },
    {
      "sha": "ed1b30a753dbd8c3d566ffdc4ceaf2ef2c96fc1f",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f46044c09fc5a4982f4ad99aff5b7af60d3f186/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f46044c09fc5a4982f4ad99aff5b7af60d3f186/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=3f46044c09fc5a4982f4ad99aff5b7af60d3f186",
      "patch": "@@ -228,13 +228,6 @@ DEF_ENUM_FLAGS_TYPE (enum type_instance_flag_value, type_instance_flags);\n \n #define TYPE_FIXED_INSTANCE(t) (TYPE_MAIN_TYPE (t)->flag_fixed_instance)\n \n-/* * This debug target supports TYPE_STUB(t).  In the unsupported case\n-   we have to rely on NFIELDS to be zero etc., see TYPE_IS_OPAQUE().\n-   TYPE_STUB(t) with !TYPE_STUB_SUPPORTED(t) may exist if we only\n-   guessed the TYPE_STUB(t) value (see dwarfread.c).  */\n-\n-#define TYPE_STUB_SUPPORTED(t)   ((t)->stub_is_supported ())\n-\n /* * Not textual.  By default, GDB treats all single byte integers as\n    characters (or elements of strings) unless this flag is set.  */\n \n@@ -1125,6 +1118,11 @@ struct type\n     this->main_type->m_flag_vector = is_vector;\n   }\n \n+  /* This debug target supports TYPE_STUB(t).  In the unsupported case\n+     we have to rely on NFIELDS to be zero etc., see TYPE_IS_OPAQUE().\n+     TYPE_STUB(t) with !TYPE_STUB_SUPPORTED(t) may exist if we only\n+     guessed the TYPE_STUB(t) value (see dwarfread.c).  */\n+\n   bool stub_is_supported () const\n   {\n     return this->main_type->m_flag_stub_supported;\n@@ -1882,7 +1880,7 @@ extern void set_type_vptr_basetype (struct type *, struct type *);\n    && ((thistype)->num_fields () == 0) \\\n    && (!HAVE_CPLUS_STRUCT (thistype) \\\n        || TYPE_NFN_FIELDS (thistype) == 0) \\\n-   && ((thistype)->is_stub () || !TYPE_STUB_SUPPORTED (thistype)))\n+   && ((thistype)->is_stub () || !(thistype)->stub_is_supported ()))\n \n /* * A helper macro that returns the name of a type or \"unnamed type\"\n    if the type has no name.  */"
    }
  ]
}