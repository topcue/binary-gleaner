{
  "sha": "b6fb1ee51c9a773d2d6044993af6c0fd7499638f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjZmYjFlZTUxYzlhNzczZDJkNjA0NDk5M2FmNmMwZmQ3NDk5NjM4Zg==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-01-20T15:59:00Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-01-21T20:19:13Z"
    },
    "message": "Fix leak in event-top.c history expansion\n\nE.g. in gdb.base/default.exp, valgrind detects leaks such as\n==17663== 1,438 bytes in 101 blocks are definitely lost in loss record 2,804 of 2,884\n==17663==    at 0x4C2BE6D: malloc (vg_replace_malloc.c:309)\n==17663==    by 0x418A17: xmalloc (common-utils.c:44)\n==17663==    by 0x4E6F19C: history_expand (histexpand.c:1061)\n==17663==    by 0x4B4490: handle_line_of_input(buffer*, char const*, int, char const*) (event-top.c:685)\n==17663==    by 0x4B4562: command_line_handler(std::unique_ptr<char, gdb::xfree_deleter<char> >&&) (event-top.c:753)\n...\n\nFix the leak by using an unique_xmalloc_ptr for history_value.\n\ngdb/ChangeLog\n2019-01-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* event-top.c (handle_line_of_input): use unique_xmalloc_ptr for\n\thistory_value.",
    "tree": {
      "sha": "e5c0bc712d38cc952f20fc6b095fd0f509084804",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e5c0bc712d38cc952f20fc6b095fd0f509084804"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b6fb1ee51c9a773d2d6044993af6c0fd7499638f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6fb1ee51c9a773d2d6044993af6c0fd7499638f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b6fb1ee51c9a773d2d6044993af6c0fd7499638f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6fb1ee51c9a773d2d6044993af6c0fd7499638f/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "be6d4f74c77c6f521afc873d226480e001cb99c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be6d4f74c77c6f521afc873d226480e001cb99c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/be6d4f74c77c6f521afc873d226480e001cb99c2"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 13,
    "deletions": 10
  },
  "files": [
    {
      "sha": "8e03dbf883fa41341ca2669069348591cf528d76",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb1ee51c9a773d2d6044993af6c0fd7499638f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb1ee51c9a773d2d6044993af6c0fd7499638f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b6fb1ee51c9a773d2d6044993af6c0fd7499638f",
      "patch": "@@ -1,3 +1,8 @@\n+2019-01-22  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* event-top.c (handle_line_of_input): use unique_xmalloc_ptr for\n+\thistory_value.\n+\n 2019-01-21  Tom Tromey  <tom@tromey.com>\n \n \t* ui-out.c: Fix includes."
    },
    {
      "sha": "920b47f7e3cb4774612082e0c790c70d8eacd0aa",
      "filename": "gdb/event-top.c",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6fb1ee51c9a773d2d6044993af6c0fd7499638f/gdb/event-top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6fb1ee51c9a773d2d6044993af6c0fd7499638f/gdb/event-top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.c?ref=b6fb1ee51c9a773d2d6044993af6c0fd7499638f",
      "patch": "@@ -679,31 +679,29 @@ handle_line_of_input (struct buffer *cmd_line_buffer,\n   /* Do history expansion if that is wished.  */\n   if (history_expansion_p && from_tty && input_interactive_p (current_ui))\n     {\n-      char *history_value;\n+      char *cmd_expansion;\n       int expanded;\n \n-      expanded = history_expand (cmd, &history_value);\n+      expanded = history_expand (cmd, &cmd_expansion);\n+      gdb::unique_xmalloc_ptr<char> history_value (cmd_expansion);\n       if (expanded)\n \t{\n \t  size_t len;\n \n \t  /* Print the changes.  */\n-\t  printf_unfiltered (\"%s\\n\", history_value);\n+\t  printf_unfiltered (\"%s\\n\", history_value.get ());\n \n \t  /* If there was an error, call this function again.  */\n \t  if (expanded < 0)\n-\t    {\n-\t      xfree (history_value);\n-\t      return cmd;\n-\t    }\n+\t    return cmd;\n \n \t  /* history_expand returns an allocated string.  Just replace\n \t     our buffer with it.  */\n-\t  len = strlen (history_value);\n+\t  len = strlen (history_value.get ());\n \t  xfree (buffer_finish (cmd_line_buffer));\n-\t  cmd_line_buffer->buffer = history_value;\n+\t  cmd_line_buffer->buffer = history_value.get ();\n \t  cmd_line_buffer->buffer_size = len + 1;\n-\t  cmd = history_value;\n+\t  cmd = history_value.release ();\n \t}\n     }\n "
    }
  ]
}