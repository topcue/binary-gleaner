{
  "sha": "ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmY5ODU2NzEwNzdhNjBmODJlM2NkOGJjY2VkYTNlZmEwZjNmYWJlNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-04-24T21:35:01Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-24T21:35:02Z"
    },
    "message": "Convert symbol_set_demangled_name to a method\n\nThis changes symbol_set_demangled_name to be a method on\ngeneral_symbol_info, and updates the users.\n\ngdb/ChangeLog\n2020-04-24  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.h (struct general_symbol_info) <set_demangled_name>: New\n\tmethod.\n\t(symbol_set_demangled_name): Don't declare.\n\t* symtab.c (general_symbol_info::set_demangled_name): Rename from\n\tsymbol_set_demangled_name.\n\t(general_symbol_info::set_language)\n\t(general_symbol_info::compute_and_set_names): Update.\n\t* minsyms.c (minimal_symbol_reader::install): Update.\n\t* dwarf2/read.c (new_symbol): Update.",
    "tree": {
      "sha": "3d1a6d44867f0af36908fe0f4551b87f5f14eb67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3d1a6d44867f0af36908fe0f4551b87f5f14eb67"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7cf288744fdd238bbab079a53584f76181d44218",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cf288744fdd238bbab079a53584f76181d44218",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7cf288744fdd238bbab079a53584f76181d44218"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 32,
    "deletions": 25
  },
  "files": [
    {
      "sha": "e2312778821bc90eaf67a80158444b802d8f8dca",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
      "patch": "@@ -1,3 +1,15 @@\n+2020-04-24  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.h (struct general_symbol_info) <set_demangled_name>: New\n+\tmethod.\n+\t(symbol_set_demangled_name): Don't declare.\n+\t* symtab.c (general_symbol_info::set_demangled_name): Rename from\n+\tsymbol_set_demangled_name.\n+\t(general_symbol_info::set_language)\n+\t(general_symbol_info::compute_and_set_names): Update.\n+\t* minsyms.c (minimal_symbol_reader::install): Update.\n+\t* dwarf2/read.c (new_symbol): Update.\n+\n 2020-04-24  Tom Tromey  <tromey@adacore.com>\n \n \tPR python/23662:"
    },
    {
      "sha": "86d3a7b7fdbaf35c734f595cbd8c4d3967e59155",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
      "patch": "@@ -20569,9 +20569,7 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \t between gfortran, iFort etc.  */\n       if (cu->language == language_fortran\n           && symbol_get_demangled_name (sym) == NULL)\n-\tsymbol_set_demangled_name (sym,\n-\t\t\t\t   dwarf2_full_name (name, die, cu),\n-\t                           NULL);\n+\tsym->set_demangled_name (dwarf2_full_name (name, die, cu), NULL);\n \n       /* Default assumptions.\n          Use the passed type or decode it from the die.  */"
    },
    {
      "sha": "47c6f0bc0cd895f19b61e8cdd51dec4b2bc31427",
      "filename": "gdb/minsyms.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/minsyms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/minsyms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/minsyms.c?ref=ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
      "patch": "@@ -1418,9 +1418,8 @@ minimal_symbol_reader::install ()\n \t\t   /* This will be freed later, by compute_and_set_names.  */\n \t\t   char *demangled_name\n \t\t     = symbol_find_demangled_name (msym, msym->linkage_name ());\n-\t\t   symbol_set_demangled_name\n-\t\t     (msym, demangled_name,\n-\t\t      &m_objfile->per_bfd->storage_obstack);\n+\t\t   msym->set_demangled_name\n+\t\t     (demangled_name, &m_objfile->per_bfd->storage_obstack);\n \t\t   msym->name_set = 1;\n \t\t }\n \t       /* This mangled_name_hash computation has to be outside of"
    },
    {
      "sha": "c9c75e94182242c32e1c71afecf6628e6cd65f6a",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 12,
      "deletions": 15,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
      "patch": "@@ -667,29 +667,27 @@ gdb_mangle_name (struct type *type, int method_id, int signature_id)\n   return (mangled_name);\n }\n \n-/* Set the demangled name of GSYMBOL to NAME.  NAME must be already\n-   correctly allocated.  */\n+/* See symtab.h.  */\n \n void\n-symbol_set_demangled_name (struct general_symbol_info *gsymbol,\n-                           const char *name,\n-                           struct obstack *obstack)\n+general_symbol_info::set_demangled_name (const char *name,\n+\t\t\t\t\t struct obstack *obstack)\n {\n-  if (gsymbol->language () == language_ada)\n+  if (language () == language_ada)\n     {\n       if (name == NULL)\n \t{\n-\t  gsymbol->ada_mangled = 0;\n-\t  gsymbol->language_specific.obstack = obstack;\n+\t  ada_mangled = 0;\n+\t  language_specific.obstack = obstack;\n \t}\n       else\n \t{\n-\t  gsymbol->ada_mangled = 1;\n-\t  gsymbol->language_specific.demangled_name = name;\n+\t  ada_mangled = 1;\n+\t  language_specific.demangled_name = name;\n \t}\n     }\n   else\n-    gsymbol->language_specific.demangled_name = name;\n+    language_specific.demangled_name = name;\n }\n \n /* Return the demangled name of GSYMBOL.  */\n@@ -722,7 +720,7 @@ general_symbol_info::set_language (enum language language,\n       || language == language_objc\n       || language == language_fortran)\n     {\n-      symbol_set_demangled_name (this, NULL, obstack);\n+      set_demangled_name (NULL, obstack);\n     }\n   else if (language == language_ada)\n     {\n@@ -872,7 +870,7 @@ general_symbol_info::compute_and_set_names (gdb::string_view linkage_name,\n \tm_name = obstack_strndup (&per_bfd->storage_obstack,\n \t\t\t\t  linkage_name.data (),\n \t\t\t\t  linkage_name.length ());\n-      symbol_set_demangled_name (this, NULL, &per_bfd->storage_obstack);\n+      set_demangled_name (NULL, &per_bfd->storage_obstack);\n \n       return;\n     }\n@@ -962,8 +960,7 @@ general_symbol_info::compute_and_set_names (gdb::string_view linkage_name,\n     m_language = (*slot)->language;\n \n   m_name = (*slot)->mangled.data ();\n-  symbol_set_demangled_name (this, (*slot)->demangled.get (),\n-\t\t\t     &per_bfd->storage_obstack);\n+  set_demangled_name ((*slot)->demangled.get (), &per_bfd->storage_obstack);\n }\n \n /* See symtab.h.  */"
    },
    {
      "sha": "ee570f922858fc05c1676838a03a52a3b63bf350",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ff985671077a60f82e3cd8bcceda3efa0f3fabe6/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=ff985671077a60f82e3cd8bcceda3efa0f3fabe6",
      "patch": "@@ -454,6 +454,11 @@ struct general_symbol_info\n   void set_linkage_name (const char *linkage_name)\n   { m_name = linkage_name; }\n \n+  /* Set the demangled name of this symbol to NAME.  NAME must be\n+     already correctly allocated.  If the symbol's language is Ada,\n+     then the name is ignored and the obstack is set.  */\n+  void set_demangled_name (const char *name, struct obstack *obstack);\n+\n   enum language language () const\n   { return m_language; }\n \n@@ -537,10 +542,6 @@ struct general_symbol_info\n   short section;\n };\n \n-extern void symbol_set_demangled_name (struct general_symbol_info *,\n-\t\t\t\t       const char *,\n-                                       struct obstack *);\n-\n extern const char *symbol_get_demangled_name\n   (const struct general_symbol_info *);\n "
    }
  ]
}