{
  "sha": "aa33ea68330ae5f34013a47b8b7b019a0d1e38e7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWEzM2VhNjgzMzBhZTVmMzQwMTNhNDdiOGI3YjAxOWEwZDFlMzhlNw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-03-29T14:00:41Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-03-29T14:52:03Z"
    },
    "message": "testsuite, mi: avoid a clang bug in 'user-selected-context-sync.exp'\n\nThis test causes several timeouts for Clang, taking too long time to\nfinish.  The reason is, for an infinite loop of the form\n\n   while(1); /* suppose this is line 30.  */\n\nClang generates code that looks like\n\n   0x00000000004004d4 <+4>:     jmp    0x4004d9 <loop+9>\n   0x00000000004004d9 <+9>:     jmp    0x4004d9 <loop+9>\n\nSo, the real loop is the instruction at address 0x4004d9.  But a\nbreakpoint that's defined at the loop line (assume line 30 in this\ncase) is inserted at address 0x4004d4.\n\n  (gdb) break 30\n  Breakpoint 1 at 0x4004d4: file test.c, line 30.\n\nTherefore, continuing a thread that was spinning on the loop does not hit\nthe breakpoint.  The bug is reported at\n\n  https://bugs.llvm.org/show_bug.cgi?id=49614\n\nTweak the infinite loop to spin on a variable to avoid this bug.  The\ntest is unrelated to the bug.\n\ngdb/testsuite/ChangeLog:\n2021-03-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.mi/user-selected-context-sync.exp: Spin on a variable in\n\tthe infinite loop to avoid a Clang bug.",
    "tree": {
      "sha": "4efde8e8a817bb2730166d7a3f07a798ed077878",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4efde8e8a817bb2730166d7a3f07a798ed077878"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "25b48839b37e81e854cfdef9bc8592a4195a5e32",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25b48839b37e81e854cfdef9bc8592a4195a5e32",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/25b48839b37e81e854cfdef9bc8592a4195a5e32"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 13,
    "deletions": 2
  },
  "files": [
    {
      "sha": "628261b5fbe15ae0f783ccdfd0a899aed83d5c30",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=aa33ea68330ae5f34013a47b8b7b019a0d1e38e7",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.mi/user-selected-context-sync.exp: Spin on a variable in\n+\tthe infinite loop to avoid a Clang bug.\n+\n 2021-03-26  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gdb.arch/powerpc-disassembler-options.exp: Extend some test"
    },
    {
      "sha": "9818f30277fe1dde14b62d7eb7b177c59eedfedb",
      "filename": "gdb/testsuite/gdb.mi/user-selected-context-sync.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7/gdb/testsuite/gdb.mi/user-selected-context-sync.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa33ea68330ae5f34013a47b8b7b019a0d1e38e7/gdb/testsuite/gdb.mi/user-selected-context-sync.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/user-selected-context-sync.c?ref=aa33ea68330ae5f34013a47b8b7b019a0d1e38e7",
      "patch": "@@ -27,7 +27,10 @@ static pthread_barrier_t barrier;\n static void\n child_sub_function (void)\n {\n-  while (1); /* thread loop line */\n+  /* Deliberately spin on a variable instead of plain 'while (1)' to\n+     avoid the Clang bug https://bugs.llvm.org/show_bug.cgi?id=49614.  */\n+  int spin = 1;\n+  while (spin); /* thread loop line */\n }\n \n static void *\n@@ -57,7 +60,10 @@ main (void)\n \n   pthread_barrier_wait (&barrier);\n \n-  while (1); /* main break line */\n+  /* Deliberately spin on a variable instead of plain 'while (1)' to\n+     avoid the Clang bug https://bugs.llvm.org/show_bug.cgi?id=49614.  */\n+  int spin = 1;\n+  while (spin); /* main break line */\n \n   return 0;\n }"
    }
  ]
}