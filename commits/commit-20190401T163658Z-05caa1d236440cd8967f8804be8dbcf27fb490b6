{
  "sha": "05caa1d236440cd8967f8804be8dbcf27fb490b6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDVjYWExZDIzNjQ0MGNkODk2N2Y4ODA0YmU4ZGJjZjI3ZmI0OTBiNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-27T19:21:24Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-01T16:36:58Z"
    },
    "message": "Handle DW_AT_ranges when reading partial symtabs\n\nadd_partial_subprogram does not handle DW_AT_ranges, while the full\nsymtab reader does.  This can lead to discrepancies where a function\nis not put into a partial symtab, and so is not available to \"break\"\nand the like -- but is available if the full symtab has somehow been\nread.\n\nThis patch fixes the bug by arranging to read DW_AT_ranges when\nreading partial DIEs.\n\nThis is PR symtab/23331.\n\nThe new test case is derived from dw2-ranges-func.exp, which is why I\nkept the copyright dates.\n\ngdb/ChangeLog\n2019-04-01  Tom Tromey  <tromey@adacore.com>\n\n\tPR symtab/23331:\n\t* dwarf2read.c (partial_die_info::read): Handle DW_AT_ranges.\n\ngdb/testsuite/ChangeLog\n2019-04-01  Tom Tromey  <tromey@adacore.com>\n\n\tPR symtab/23331:\n\t* gdb.dwarf2/dw2-ranges-main.c: New file.\n\t* gdb.dwarf2/dw2-ranges-psym.c: New file.\n\t* gdb.dwarf2/dw2-ranges-psym.exp: New file.",
    "tree": {
      "sha": "be5a159d7aa6d8d434c51aac2951495455e55ffc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/be5a159d7aa6d8d434c51aac2951495455e55ffc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/05caa1d236440cd8967f8804be8dbcf27fb490b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05caa1d236440cd8967f8804be8dbcf27fb490b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/05caa1d236440cd8967f8804be8dbcf27fb490b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05caa1d236440cd8967f8804be8dbcf27fb490b6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9d1447e09d4aa673826039321163b5a684e8e043",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d1447e09d4aa673826039321163b5a684e8e043",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9d1447e09d4aa673826039321163b5a684e8e043"
    }
  ],
  "stats": {
    "total": 234,
    "additions": 234,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f3f30b1aa4c64ce630da6e190dcb9a54f69ee189",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=05caa1d236440cd8967f8804be8dbcf27fb490b6",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-01  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR symtab/23331:\n+\t* dwarf2read.c (partial_die_info::read): Handle DW_AT_ranges.\n+\n 2019-04-01  Sergio Durigan Junior  <sergiodj@redhat.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "a5e953bd4275b092f9fe48f61c5b33cb46659fab",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=05caa1d236440cd8967f8804be8dbcf27fb490b6",
      "patch": "@@ -18751,6 +18751,25 @@ partial_die_info::read (const struct die_reader_specs *reader,\n \t  main_subprogram = DW_UNSND (&attr);\n \t  break;\n \n+\tcase DW_AT_ranges:\n+\t  {\n+\t    /* It would be nice to reuse dwarf2_get_pc_bounds here,\n+\t       but that requires a full DIE, so instead we just\n+\t       reimplement it.  */\n+\t    int need_ranges_base = tag != DW_TAG_compile_unit;\n+\t    unsigned int ranges_offset = (DW_UNSND (&attr)\n+\t\t\t\t\t  + (need_ranges_base\n+\t\t\t\t\t     ? cu->ranges_base\n+\t\t\t\t\t     : 0));\n+\n+\t    /* Value of the DW_AT_ranges attribute is the offset in the\n+\t       .debug_ranges section.  */\n+\t    if (dwarf2_ranges_read (ranges_offset, &lowpc, &highpc, cu,\n+\t\t\t\t    nullptr))\n+\t      has_pc_info = 1;\n+\t  }\n+\t  break;\n+\n \tdefault:\n \t  break;\n \t}"
    },
    {
      "sha": "b429149c04e4be4cdd7784957645d8cce6398ca4",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=05caa1d236440cd8967f8804be8dbcf27fb490b6",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-01  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR symtab/23331:\n+\t* gdb.dwarf2/dw2-ranges-main.c: New file.\n+\t* gdb.dwarf2/dw2-ranges-psym.c: New file.\n+\t* gdb.dwarf2/dw2-ranges-psym.exp: New file.\n+\n 2019-03-30  Simon Marchi <simark@simark.ca>\n \n \t* gdb.base/default.exp: Add values for $_gdb_major and"
    },
    {
      "sha": "35a4d4c07e1ab691850b7b836846bec331cdf418",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-main.c",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/gdb.dwarf2/dw2-ranges-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/gdb.dwarf2/dw2-ranges-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-main.c?ref=05caa1d236440cd8967f8804be8dbcf27fb490b6",
      "patch": "@@ -0,0 +1,19 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int main ()\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "7d0408a56a9c7ca0279eccc9f5e3fb6550712a51",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.c",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.c?ref=05caa1d236440cd8967f8804be8dbcf27fb490b6",
      "patch": "@@ -0,0 +1,46 @@\n+/* Copyright 2018-2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+volatile int e = 0;\n+\n+void\n+baz (void)\n+{\n+  asm (\"baz_label: .globl baz_label\");\n+}\t\t\t\t\t\t/* baz end */\n+\n+void\n+foo_low (void)\n+{\t\t\t\t\t\t/* foo_low prologue */\n+  asm (\"foo_low_label: .globl foo_low_label\");\n+  baz ();\t\t\t\t\t/* foo_low baz call */\n+  asm (\"foo_low_label2: .globl foo_low_label2\");\n+}\t\t\t\t\t\t/* foo_low end */\n+\n+void\n+bar (void)\n+{\n+  asm (\"bar_label: .globl bar_label\");\n+}\t\t\t\t\t\t/* bar end */\n+\n+void\n+foo (void)\n+{\t\t\t\t\t\t/* foo prologue */\n+  asm (\"foo_label: .globl foo_label\");\n+  bar ();\t\t\t\t\t/* foo bar call */\n+  asm (\"foo_label2: .globl foo_label2\");\n+  if (e) foo_low ();\t\t\t\t/* foo foo_low call */\n+  asm (\"foo_label3: .globl foo_label3\");\n+}\t\t\t\t\t\t/* foo end */"
    },
    {
      "sha": "0e9acbfad52dd2b709adb30e756691c0756149b1",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "status": "added",
      "additions": 138,
      "deletions": 0,
      "changes": 138,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05caa1d236440cd8967f8804be8dbcf27fb490b6/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp?ref=05caa1d236440cd8967f8804be8dbcf27fb490b6",
      "patch": "@@ -0,0 +1,138 @@\n+# Copyright 2018-2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib dwarf.exp\n+\n+# Test that psymbols are made when DW_AT_ranges is used.\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    unsupported \"dwarf2 support required for this test\"\n+    return 0\n+}\n+\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    unsupported \"gcc required for this test\"\n+    return 0\n+}\n+\n+standard_testfile dw2-ranges-main.c dw2-ranges-psym.c dw2-ranges-psym-dw.S\n+\n+# We need to know the size of integer and address types in order to\n+# write some of the debugging info we'd like to generate.\n+#\n+# For that, we ask GDB by debugging our test program.  Any program\n+# would do, but since we already have it specifically for this\n+# testcase, might as well use that.\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list ${srcfile} ${srcfile2}]] } {\n+    return -1\n+}\n+\n+set asm_file [standard_output_file $srcfile3]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile srcfile2\n+    declare_labels integer_label volatile_label func_ranges_label cu_ranges_label\n+    set int_size [get_sizeof \"int\" 4]\n+\n+    # Find start address and length for our functions.\n+    set sources  [list ${srcdir}/${subdir}/$srcfile ${srcdir}/${subdir}/$srcfile2]\n+\n+    lassign [function_range foo $sources] \\\n+\tfoo_start foo_len\n+    set foo_end \"$foo_start + $foo_len\"\n+\n+    lassign [function_range foo_low $sources] \\\n+\tfoo_low_start foo_low_len\n+    set foo_low_end \"$foo_low_start + $foo_low_len\"\n+\n+    lassign [function_range bar $sources] \\\n+\tbar_start bar_len\n+    set bar_end \"$bar_start + $bar_len\"\n+\n+    lassign [function_range baz $sources] \\\n+\tbaz_start baz_len\n+    set baz_end \"$baz_start + $baz_len\"\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {language @DW_LANG_C}\n+\t    {name dw-ranges-psym.c}\n+\t    {low_pc 0 addr}\n+\t    {ranges ${cu_ranges_label} DW_FORM_sec_offset}\n+\t} {\n+\t    integer_label: DW_TAG_base_type {\n+\t\t{DW_AT_byte_size $int_size DW_FORM_sdata}\n+\t\t{DW_AT_encoding  @DW_ATE_signed}\n+\t\t{DW_AT_name      integer}\n+\t    }\n+\t    volatile_label: DW_TAG_volatile_type {\n+\t\t{type :$integer_label}\n+\t    }\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name someothername}\n+\t\t{ranges ${func_ranges_label} DW_FORM_sec_offset}\n+\t    }\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name bar}\n+\t\t{low_pc $bar_start addr}\n+\t\t{high_pc $bar_len DW_FORM_data4}\n+\t    }\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name baz}\n+\t\t{low_pc $baz_start addr}\n+\t\t{high_pc $baz_len DW_FORM_data4}\n+\t    }\n+\t}\n+    }\n+\n+    # Generate ranges data.\n+    ranges {is_64 [is_64_target]} {\n+\tfunc_ranges_label: sequence {\n+\t    {range {$foo_start } $foo_end}\n+\t    {range {$foo_low_start} $foo_low_end}\n+\t}\n+\tcu_ranges_label: sequence {\n+\t    {range {$foo_start } $foo_end}\n+\t    {range {$foo_low_start} $foo_low_end}\n+\t    {range {$bar_start} $bar_end}\n+\t    {range {$baz_start} $baz_end}\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $srcfile2 $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+# \"someothername\" should be put into the partial symbol table, but\n+# there was a bug causing functions using DW_AT_ranges not to be.\n+# Note we use a name that is very different from the linkage name, in\n+# order to not set the breakpoint via minsyms.\n+gdb_test \"break someothername\" \\\n+    \"Breakpoint.*at.*\" \\\n+    \"break someothername\""
    }
  ]
}