{
  "sha": "d503b685c6b7384b389767d5153235039e2b8fc4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDUwM2I2ODVjNmI3Mzg0YjM4OTc2N2Q1MTUzMjM1MDM5ZTJiOGZjNA==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-03-24T17:03:08Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-03-25T14:31:09Z"
    },
    "message": "Fix WOW64 process system DLL paths\n\nGetModuleFileNameEx returns for some DLLs of WOW64 processes\nthe path inside the 64bit system directory instead of the 32bit\nsyswow64 directory.\n\nProblem happens e.g. with dbghelp.dll:\n\n(gdb) start\nTemporary breakpoint 1 at 0x415a00: file fiber.cpp, line 430.\nStarting program: C:\\src\\tests\\fiber.exe\nwarning: `C:\\Windows\\system32\\dbghelp.dll': Shared library architecture i386:x86-64 is not compatible with target architecture i386.\n\nTemporary breakpoint 1, main () at fiber.cpp:430\n430     {\n(gdb) info sharedlibrary\nFrom        To          Syms Read   Shared Object Library\n0x77070000  0x771d4d20  Yes (*)     C:\\Windows\\SysWOW64\\ntdll.dll\n0x74dc0000  0x74ebad9c  Yes (*)     C:\\Windows\\syswow64\\kernel32.dll\n0x75341000  0x75386a18  Yes (*)     C:\\Windows\\syswow64\\KernelBase.dll\n0x6f6a1000  0x6f7c48fc  Yes (*)     C:\\Windows\\system32\\dbghelp.dll\n0x74d01000  0x74dab2c4  Yes (*)     C:\\Windows\\syswow64\\msvcrt.dll\n(*): Shared library is missing debugging information.\n\nThis detects this situation and converts the DLL path to the\nsyswow64 equivalent.\n\ngdb/ChangeLog:\n\n2020-03-25  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* windows-nat.c (windows_add_all_dlls): Fix system dll paths.",
    "tree": {
      "sha": "dde41a1bfc61b100c8968ea169e1330afb4c56a8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dde41a1bfc61b100c8968ea169e1330afb4c56a8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d503b685c6b7384b389767d5153235039e2b8fc4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d503b685c6b7384b389767d5153235039e2b8fc4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d503b685c6b7384b389767d5153235039e2b8fc4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d503b685c6b7384b389767d5153235039e2b8fc4/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4c83662712f80abe9a7d8ef645123347a9de7adb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c83662712f80abe9a7d8ef645123347a9de7adb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4c83662712f80abe9a7d8ef645123347a9de7adb"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 45,
    "deletions": 3
  },
  "files": [
    {
      "sha": "5400a4e34845c1f4116f0fe592da3d622e5fa842",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d503b685c6b7384b389767d5153235039e2b8fc4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d503b685c6b7384b389767d5153235039e2b8fc4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d503b685c6b7384b389767d5153235039e2b8fc4",
      "patch": "@@ -1,3 +1,7 @@\n+2020-03-25  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* windows-nat.c (windows_add_all_dlls): Fix system dll paths.\n+\n 2020-03-25  Tom de Vries  <tdevries@suse.de>\n \n \t* symtab.h (is_main_symtab_of_compunit_symtab): New function."
    },
    {
      "sha": "8547ec2f99b4c8a838c8f5a6d71c7b97d2ae67a7",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 41,
      "deletions": 3,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d503b685c6b7384b389767d5153235039e2b8fc4/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d503b685c6b7384b389767d5153235039e2b8fc4/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=d503b685c6b7384b389767d5153235039e2b8fc4",
      "patch": "@@ -2058,27 +2058,65 @@ windows_add_all_dlls (void)\n \treturn;\n     }\n \n+#ifdef __x86_64__\n+  char system_dir[__PMAX];\n+  char syswow_dir[__PMAX];\n+  size_t system_dir_len = 0;\n+  if (wow64_process)\n+    {\n+      UINT len = GetSystemDirectoryA (system_dir, sizeof (system_dir));\n+      /* Error check.  */\n+      gdb_assert (len != 0);\n+      /* Check that we have passed a large enough buffer.  */\n+      gdb_assert (len < sizeof (system_dir));\n+\n+      len = GetSystemWow64DirectoryA (syswow_dir, sizeof (syswow_dir));\n+      /* Error check.  */\n+      gdb_assert (len != 0);\n+      /* Check that we have passed a large enough buffer.  */\n+      gdb_assert (len < sizeof (syswow_dir));\n+\n+      strcat (system_dir, \"\\\\\");\n+      strcat (syswow_dir, \"\\\\\");\n+      system_dir_len = strlen (system_dir);\n+    }\n+#endif\n   for (i = 1; i < (int) (cb_needed / sizeof (HMODULE)); i++)\n     {\n       MODULEINFO mi;\n #ifdef __USEWIDE\n       wchar_t dll_name[__PMAX];\n-      char name[__PMAX];\n+      char dll_name_mb[__PMAX];\n #else\n       char dll_name[__PMAX];\n-      char *name;\n #endif\n+      const char *name;\n       if (GetModuleInformation (current_process_handle, hmodules[i],\n \t\t\t\t&mi, sizeof (mi)) == 0)\n \tcontinue;\n       if (GetModuleFileNameEx (current_process_handle, hmodules[i],\n \t\t\t       dll_name, sizeof (dll_name)) == 0)\n \tcontinue;\n #ifdef __USEWIDE\n-      wcstombs (name, dll_name, __PMAX);\n+      wcstombs (dll_name_mb, dll_name, __PMAX);\n+      name = dll_name_mb;\n #else\n       name = dll_name;\n #endif\n+#ifdef __x86_64__\n+      /* Convert the DLL path of WOW64 processes returned by\n+\t GetModuleFileNameEx from the 64bit system directory to the\n+\t 32bit syswow64 directory if necessary.  */\n+      std::string syswow_dll_path;\n+      if (wow64_process\n+\t  && strncasecmp (name, system_dir, system_dir_len) == 0\n+\t  && strchr (name + system_dir_len, '\\\\') == nullptr)\n+\t{\n+\t  syswow_dll_path = syswow_dir;\n+\t  syswow_dll_path += name + system_dir_len;\n+\t  name = syswow_dll_path.c_str();\n+\t}\n+#endif\n \n       solib_end->next = windows_make_so (name, mi.lpBaseOfDll);\n       solib_end = solib_end->next;"
    }
  ]
}