{
  "sha": "5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWFhZTlhZTk3ZjY1ZjY2NTFjZjkxZGI4NTZhMWY4YjRiZWY1ZTg5Ng==",
  "commit": {
    "author": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2020-02-10T16:39:02Z"
    },
    "committer": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2020-02-10T16:50:14Z"
    },
    "message": "[binutils][arm] Implement Custom Datapath Extensions for MVE\n\nHere we implement the custom datapath extensions for MVE.\n\nThis required the following changes:\n\n- Adding a new register argument type (that takes either an MVE vector or\n  a Neon S or D register).\n- Adding two new immediate operands types (0-127 and 0-4095).\n- Using the Neon type machinery to distinguish between instruction\n  types.  This required the introduction of new neon shapes to account\n  for the coprocessor operands to these instructions.\n- Adding a new disassembly character to `print_insn_cde` to handle the\n  new register types.\n\nSpecification can be found at\nhttps://developer.arm.com/docs/ddi0607/latest\n\nSuccessfully regression tested on arm-none-eabi, and arm-wince-pe.\n\ngas/ChangeLog:\n\n2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* config/tc-arm.c (NEON_MAX_TYPE_ELS): Increment to account for\n\tinstructions that can have 5 arguments.\n\t(enum operand_parse_code): Add new operands.\n\t(parse_operands): Account for new operands.\n\t(S5): New macro.\n\t(enum neon_shape_el): Introduce P suffixes for coprocessor.\n\t(neon_select_shape): Account for P suffix.\n\t(LOW1): Move macro to global position.\n\t(HI4): Move macro to global position.\n\t(vcx_assign_vec_d): New.\n\t(vcx_assign_vec_m): New.\n\t(vcx_assign_vec_n): New.\n\t(enum vcx_reg_type): New.\n\t(vcx_get_reg_type): New.\n\t(vcx_size_pos): New.\n\t(vcx_vec_pos): New.\n\t(vcx_handle_shape): New.\n\t(vcx_ensure_register_in_range): New.\n\t(vcx_handle_register_arguments): New.\n\t(vcx_handle_insn_block): New.\n\t(vcx_handle_common_checks): New.\n\t(do_vcx1): New.\n\t(do_vcx2): New.\n\t(do_vcx3): New.\n\t* testsuite/gas/arm/cde-missing-fp.d: New test.\n\t* testsuite/gas/arm/cde-missing-fp.l: New test.\n\t* testsuite/gas/arm/cde-missing-mve.d: New test.\n\t* testsuite/gas/arm/cde-missing-mve.l: New test.\n\t* testsuite/gas/arm/cde-mve-or-neon.d: New test.\n\t* testsuite/gas/arm/cde-mve-or-neon.s: New test.\n\t* testsuite/gas/arm/cde-mve.s: New test.\n\t* testsuite/gas/arm/cde-warnings.l:\n\t* testsuite/gas/arm/cde-warnings.s:\n\t* testsuite/gas/arm/cde.d:\n\t* testsuite/gas/arm/cde.s:\n\nopcodes/ChangeLog:\n\n2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* arm-dis.c (print_insn_cde): Define 'V' parse character.\n\t(cde_opcodes): Add VCX* instructions.",
    "tree": {
      "sha": "47e5e20c08d9b53251ea7b624a9aeec5ac23e61c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/47e5e20c08d9b53251ea7b624a9aeec5ac23e61c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/comments",
  "author": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4934a27c8c1d5c8623366f5dbafae8af60b96bc0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4934a27c8c1d5c8623366f5dbafae8af60b96bc0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4934a27c8c1d5c8623366f5dbafae8af60b96bc0"
    }
  ],
  "stats": {
    "total": 1442,
    "additions": 1438,
    "deletions": 4
  },
  "files": [
    {
      "sha": "b0863740e82e99bcfc481facf719821da1c2e414",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -1,3 +1,41 @@\n+2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* config/tc-arm.c (NEON_MAX_TYPE_ELS): Increment to account for\n+\tinstructions that can have 5 arguments.\n+\t(enum operand_parse_code): Add new operands.\n+\t(parse_operands): Account for new operands.\n+\t(S5): New macro.\n+\t(enum neon_shape_el): Introduce P suffixes for coprocessor.\n+\t(neon_select_shape): Account for P suffix.\n+\t(LOW1): Move macro to global position.\n+\t(HI4): Move macro to global position.\n+\t(vcx_assign_vec_d): New.\n+\t(vcx_assign_vec_m): New.\n+\t(vcx_assign_vec_n): New.\n+\t(enum vcx_reg_type): New.\n+\t(vcx_get_reg_type): New.\n+\t(vcx_size_pos): New.\n+\t(vcx_vec_pos): New.\n+\t(vcx_handle_shape): New.\n+\t(vcx_ensure_register_in_range): New.\n+\t(vcx_handle_register_arguments): New.\n+\t(vcx_handle_insn_block): New.\n+\t(vcx_handle_common_checks): New.\n+\t(do_vcx1): New.\n+\t(do_vcx2): New.\n+\t(do_vcx3): New.\n+\t* testsuite/gas/arm/cde-missing-fp.d: New test.\n+\t* testsuite/gas/arm/cde-missing-fp.l: New test.\n+\t* testsuite/gas/arm/cde-missing-mve.d: New test.\n+\t* testsuite/gas/arm/cde-missing-mve.l: New test.\n+\t* testsuite/gas/arm/cde-mve-or-neon.d: New test.\n+\t* testsuite/gas/arm/cde-mve-or-neon.s: New test.\n+\t* testsuite/gas/arm/cde-mve.s: New test.\n+\t* testsuite/gas/arm/cde-warnings.l:\n+\t* testsuite/gas/arm/cde-warnings.s:\n+\t* testsuite/gas/arm/cde.d:\n+\t* testsuite/gas/arm/cde.s:\n+\n 2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n \t    Matthew Malcomson  <matthew.malcomson@arm.com>\n "
    },
    {
      "sha": "48b1d3603f8c77ceb06d6e0f078f5e3cd612466e",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 252,
      "deletions": 4,
      "changes": 256,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -339,6 +339,11 @@ static const arm_feature_set mve_ext =\n   ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE);\n static const arm_feature_set mve_fp_ext =\n   ARM_FEATURE_CORE_HIGH (ARM_EXT2_MVE_FP);\n+/* Note: This has more than one bit set, which means using it with\n+   mark_feature_used (which returns if *any* of the bits are set in the current\n+   cpu variant) can give surprising results.  */\n+static const arm_feature_set armv8m_fp =\n+  ARM_FEATURE_COPROC (FPU_VFP_V5_SP_D16);\n #ifdef OBJ_ELF\n static const arm_feature_set fpu_vfp_fp16 =\n   ARM_FEATURE_COPROC (FPU_VFP_EXT_FP16);\n@@ -478,7 +483,7 @@ struct neon_type_el\n   unsigned size;\n };\n \n-#define NEON_MAX_TYPE_ELS 4\n+#define NEON_MAX_TYPE_ELS 5\n \n struct neon_type\n {\n@@ -7092,6 +7097,7 @@ enum operand_parse_code\n   OP_RIWG,\t/* iWMMXt wCG register */\n   OP_RXA,\t/* XScale accumulator register */\n \n+  OP_RNSDMQ,\t/* Neon single, double or MVE vector register */\n   OP_RNSDQMQ,\t/* Neon single, double or quad register or MVE vector register\n \t\t */\n   OP_RNSDQMQR,\t/* Neon single, double or quad register, MVE vector register or\n@@ -7160,8 +7166,10 @@ enum operand_parse_code\n   OP_I63s,\t/*\t\t -64 .. 63 */\n   OP_I64,\t/*\t\t   1 .. 64 */\n   OP_I64z,\t/*\t\t   0 .. 64 */\n+  OP_I127,\t/*\t\t   0 .. 127 */\n   OP_I255,\t/*\t\t   0 .. 255 */\n   OP_I511,\t/*\t\t   0 .. 511 */\n+  OP_I4095,\t/*\t\t   0 .. 4095 */\n   OP_I8191,\t/*\t\t   0 .. 8191 */\n   OP_I4b,\t/* immediate, prefix optional, 1 .. 4 */\n   OP_I7b,\t/*\t\t\t       0 .. 7 */\n@@ -7480,6 +7488,12 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n \tcase OP_RVSD_COND:\n \t  po_reg_or_goto (REG_TYPE_VFSD, try_cond);\n \t  break;\n+\tcase OP_RNSDMQ:\n+\t  po_reg_or_goto (REG_TYPE_NSD, try_mq2);\n+\t  break;\n+\t  try_mq2:\n+\t  po_reg_or_fail (REG_TYPE_MQ);\n+\t  break;\n \tcase OP_oRNSDQ:\n \tcase OP_RNSDQ: po_reg_or_fail (REG_TYPE_NSDQ);    break;\n \tcase OP_RNSDQMQR:\n@@ -7676,8 +7690,10 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n \tcase OP_I63:\t po_imm_or_fail (  0,     63, FALSE);   break;\n \tcase OP_I64:\t po_imm_or_fail (  1,     64, FALSE);   break;\n \tcase OP_I64z:\t po_imm_or_fail (  0,     64, FALSE);   break;\n+\tcase OP_I127:\t po_imm_or_fail (  0,\t 127, FALSE);\tbreak;\n \tcase OP_I255:\t po_imm_or_fail (  0,\t 255, FALSE);\tbreak;\n \tcase OP_I511:\t po_imm_or_fail (  0,\t 511, FALSE);\tbreak;\n+\tcase OP_I4095:\t po_imm_or_fail (  0,\t 4095, FALSE);\tbreak;\n \tcase OP_I8191:   po_imm_or_fail (  0,\t 8191, FALSE);\tbreak;\n \tcase OP_I4b:\t po_imm_or_fail (  1,\t   4, TRUE);\tbreak;\n \tcase OP_oI7b:\n@@ -14797,6 +14813,15 @@ NEON_ENC_TAB\n   X(2, (Q, R), QUAD),\t\t\t\\\n   X(2, (D, I), DOUBLE),\t\t\t\\\n   X(2, (Q, I), QUAD),\t\t\t\\\n+  X(3, (P, F, I), SINGLE),\t\t\\\n+  X(3, (P, D, I), DOUBLE),\t\t\\\n+  X(3, (P, Q, I), QUAD),\t\t\\\n+  X(4, (P, F, F, I), SINGLE),\t\t\\\n+  X(4, (P, D, D, I), DOUBLE),\t\t\\\n+  X(4, (P, Q, Q, I), QUAD),\t\t\\\n+  X(5, (P, F, F, F, I), SINGLE),\t\\\n+  X(5, (P, D, D, D, I), DOUBLE),\t\\\n+  X(5, (P, Q, Q, Q, I), QUAD),\t\t\\\n   X(3, (D, L, D), DOUBLE),\t\t\\\n   X(2, (D, Q), MIXED),\t\t\t\\\n   X(2, (Q, D), MIXED),\t\t\t\\\n@@ -14845,6 +14870,7 @@ NEON_ENC_TAB\n #define S2(A,B)\t\tNS_##A##B\n #define S3(A,B,C)\tNS_##A##B##C\n #define S4(A,B,C,D)\tNS_##A##B##C##D\n+#define S5(A,B,C,D,E)\tNS_##A##B##C##D##E\n \n #define X(N, L, C) S##N L\n \n@@ -14858,6 +14884,7 @@ enum neon_shape\n #undef S2\n #undef S3\n #undef S4\n+#undef S5\n \n enum neon_shape_class\n {\n@@ -14886,7 +14913,8 @@ enum neon_shape_el\n   SE_I,\n   SE_S,\n   SE_R,\n-  SE_L\n+  SE_L,\n+  SE_P\n };\n \n /* Register widths of above.  */\n@@ -14899,6 +14927,7 @@ static unsigned neon_shape_el_size[] =\n   0,\n   32,\n   32,\n+  0,\n   0\n };\n \n@@ -14911,6 +14940,7 @@ struct neon_shape_info\n #define S2(A,B)\t\t{ SE_##A, SE_##B }\n #define S3(A,B,C)\t{ SE_##A, SE_##B, SE_##C }\n #define S4(A,B,C,D)\t{ SE_##A, SE_##B, SE_##C, SE_##D }\n+#define S5(A,B,C,D,E)\t{ SE_##A, SE_##B, SE_##C, SE_##D, SE_##E }\n \n #define X(N, L, C) { N, S##N L }\n \n@@ -14923,6 +14953,7 @@ static struct neon_shape_info neon_shape_tab[] =\n #undef S2\n #undef S3\n #undef S4\n+#undef S5\n \n /* Bit masks used in type checking given instructions.\n   'N_EQK' means the type must be the same as (or based on in some way) the key\n@@ -15112,6 +15143,7 @@ neon_select_shape (enum neon_shape shape, ...)\n \t\tmatches = 0;\n \t      break;\n \n+\t    case SE_P:\n \t    case SE_L:\n \t      break;\n \t    }\n@@ -15840,6 +15872,8 @@ neon_logbits (unsigned x)\n \n #define LOW4(R) ((R) & 0xf)\n #define HI1(R) (((R) >> 4) & 1)\n+#define LOW1(R) ((R) & 0x1)\n+#define HI4(R) (((R) >> 1) & 0xf)\n \n static unsigned\n mve_get_vcmp_vpt_cond (struct neon_type_el et)\n@@ -19728,8 +19762,6 @@ do_neon_fmac_maybe_scalar_long (int subtype)\n   inst.instruction &= 0x00ffffff;\n   inst.instruction |= high8;\n \n-#define LOW1(R) ((R) & 0x1)\n-#define HI4(R) (((R) >> 1) & 0xf)\n   /* Unlike usually NEON three-same, encoding for Vn and Vm will depend on\n      whether the instruction is in Q form and whether Vm is a scalar indexed\n      operand.  */\n@@ -21840,6 +21872,212 @@ do_cx3da (void)\n   return do_custom_instruction_3 (1, 1);\n }\n \n+static void\n+vcx_assign_vec_d (unsigned regnum)\n+{\n+  inst.instruction |= HI4 (regnum) << 12;\n+  inst.instruction |= LOW1 (regnum) << 22;\n+}\n+\n+static void\n+vcx_assign_vec_m (unsigned regnum)\n+{\n+  inst.instruction |= HI4 (regnum);\n+  inst.instruction |= LOW1 (regnum) << 5;\n+}\n+\n+static void\n+vcx_assign_vec_n (unsigned regnum)\n+{\n+  inst.instruction |= HI4 (regnum) << 16;\n+  inst.instruction |= LOW1 (regnum) << 7;\n+}\n+\n+enum vcx_reg_type {\n+    q_reg,\n+    d_reg,\n+    s_reg\n+};\n+\n+static enum vcx_reg_type\n+vcx_get_reg_type (enum neon_shape ns)\n+{\n+  gas_assert (ns == NS_PQI\n+\t      || ns == NS_PDI\n+\t      || ns == NS_PFI\n+\t      || ns == NS_PQQI\n+\t      || ns == NS_PDDI\n+\t      || ns == NS_PFFI\n+\t      || ns == NS_PQQQI\n+\t      || ns == NS_PDDDI\n+\t      || ns == NS_PFFFI);\n+  if (ns == NS_PQI || ns == NS_PQQI || ns == NS_PQQQI)\n+    return q_reg;\n+  if (ns == NS_PDI || ns == NS_PDDI || ns == NS_PDDDI)\n+    return d_reg;\n+  return s_reg;\n+}\n+\n+#define vcx_size_pos 24\n+#define vcx_vec_pos 6\n+static unsigned\n+vcx_handle_shape (enum vcx_reg_type reg_type)\n+{\n+  unsigned mult = 2;\n+  if (reg_type == q_reg)\n+    inst.instruction |= 1 << vcx_vec_pos;\n+  else if (reg_type == d_reg)\n+    inst.instruction |= 1 << vcx_size_pos;\n+  else\n+    mult = 1;\n+  /* NOTE:\n+     The documentation says that the Q registers are encoded as 2*N in the D:Vd\n+     bits (or equivalent for N and M registers).\n+     Similarly the D registers are encoded as N in D:Vd bits.\n+     While the S registers are encoded as N in the Vd:D bits.\n+\n+     Taking into account the maximum values of these registers we can see a\n+     nicer pattern for calculation:\n+       Q -> 7, D -> 15, S -> 31\n+\n+     If we say that everything is encoded in the Vd:D bits, then we can say\n+     that Q is encoded as 4*N, and D is encoded as 2*N.\n+     This way the bits will end up the same, and calculation is simpler.\n+     (calculation is now:\n+\t1. Multiply by a number determined by the register letter.\n+\t2. Encode resulting number in Vd:D bits.)\n+\n+      This is made a little more complicated by automatic handling of 'Q'\n+      registers elsewhere, which means the register number is already 2*N where\n+      N is the number the user wrote after the register letter.\n+     */\n+  return mult;\n+}\n+#undef vcx_vec_pos\n+#undef vcx_size_pos\n+\n+static void\n+vcx_ensure_register_in_range (unsigned R, enum vcx_reg_type reg_type)\n+{\n+  if (reg_type == q_reg)\n+    {\n+      gas_assert (R % 2 == 0);\n+      constraint (R >= 16, _(\"'q' register must be in range 0-7\"));\n+    }\n+  else if (reg_type == d_reg)\n+    constraint (R >= 16, _(\"'d' register must be in range 0-15\"));\n+  else\n+    constraint (R >= 32, _(\"'s' register must be in range 0-31\"));\n+}\n+\n+static void (*vcx_assign_vec[3]) (unsigned) = {\n+    vcx_assign_vec_d,\n+    vcx_assign_vec_m,\n+    vcx_assign_vec_n\n+};\n+\n+static void\n+vcx_handle_register_arguments (unsigned num_registers,\n+\t\t\t       enum vcx_reg_type reg_type)\n+{\n+  unsigned R;\n+  unsigned reg_mult = vcx_handle_shape (reg_type);\n+  for (unsigned i = 0; i < num_registers; i++)\n+    {\n+      R = inst.operands[i+1].reg;\n+      vcx_ensure_register_in_range (R, reg_type);\n+      if (num_registers == 3 && i > 0)\n+\t{\n+\t  if (i == 2)\n+\t    vcx_assign_vec[1] (R * reg_mult);\n+\t  else\n+\t    vcx_assign_vec[2] (R * reg_mult);\n+\t  continue;\n+\t}\n+      vcx_assign_vec[i](R * reg_mult);\n+    }\n+}\n+\n+static void\n+vcx_handle_insn_block (enum vcx_reg_type reg_type)\n+{\n+  if (reg_type == q_reg)\n+    if (inst.cond > COND_ALWAYS)\n+      inst.pred_insn_type = INSIDE_VPT_INSN;\n+    else\n+      inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+  else if (inst.cond == COND_ALWAYS)\n+    inst.pred_insn_type = OUTSIDE_PRED_INSN;\n+  else\n+    inst.error = BAD_NOT_IT;\n+}\n+\n+static void\n+vcx_handle_common_checks (unsigned num_args, enum neon_shape rs)\n+{\n+  constraint (!mark_feature_used (&arm_ext_cde), _(BAD_CDE));\n+  cde_handle_coproc ();\n+  enum vcx_reg_type reg_type = vcx_get_reg_type (rs);\n+  vcx_handle_register_arguments (num_args, reg_type);\n+  vcx_handle_insn_block (reg_type);\n+  if (reg_type == q_reg)\n+    constraint (!mark_feature_used (&mve_ext),\n+\t\t_(\"vcx instructions with Q registers require MVE\"));\n+  else\n+    constraint (!(ARM_FSET_CPU_SUBSET (armv8m_fp, cpu_variant)\n+\t\t  && mark_feature_used (&armv8m_fp))\n+\t\t&& !mark_feature_used (&mve_ext),\n+\t\t_(\"vcx instructions with S or D registers require either MVE\"\n+\t\t  \" or Armv8-M floating point etension.\"));\n+}\n+\n+static void\n+do_vcx1 (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_PQI, NS_PDI, NS_PFI, NS_NULL);\n+  vcx_handle_common_checks (1, rs);\n+\n+  unsigned imm = inst.operands[2].imm;\n+  inst.instruction |= (imm & 0x03f);\n+  inst.instruction |= (imm & 0x040) << 1;\n+  inst.instruction |= (imm & 0x780) << 9;\n+  if (rs != NS_PQI)\n+    constraint (imm >= 2048,\n+\t\t_(\"vcx1 with S or D registers takes immediate within 0-2047\"));\n+  inst.instruction |= (imm & 0x800) << 13;\n+}\n+\n+static void\n+do_vcx2 (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_PQQI, NS_PDDI, NS_PFFI, NS_NULL);\n+  vcx_handle_common_checks (2, rs);\n+\n+  unsigned imm = inst.operands[3].imm;\n+  inst.instruction |= (imm & 0x01) << 4;\n+  inst.instruction |= (imm & 0x02) << 6;\n+  inst.instruction |= (imm & 0x3c) << 14;\n+  if (rs != NS_PQQI)\n+    constraint (imm >= 64,\n+\t\t_(\"vcx2 with S or D registers takes immediate within 0-63\"));\n+  inst.instruction |= (imm & 0x40) << 18;\n+}\n+\n+static void\n+do_vcx3 (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_PQQQI, NS_PDDDI, NS_PFFFI, NS_NULL);\n+  vcx_handle_common_checks (3, rs);\n+\n+  unsigned imm = inst.operands[4].imm;\n+  inst.instruction |= (imm & 0x1) << 4;\n+  inst.instruction |= (imm & 0x6) << 19;\n+  if (rs != NS_PQQQI)\n+    constraint (imm >= 8,\n+\t\t_(\"vcx2 with S or D registers takes immediate within 0-7\"));\n+  inst.instruction |= (imm & 0x8) << 21;\n+}\n+\n /* Crypto v1 instructions.  */\n static void\n do_crypto_2op_1 (unsigned elttype, int op)\n@@ -26400,7 +26638,17 @@ static const struct asm_opcode insns[] =\n  ToC (\"cx3a\", fe800000, 5, (RCP, APSR_RR, APSR_RR, APSR_RR, I63), cx3a),\n  ToC (\"cx3d\", ee800040, 6, (RCP, RR, APSR_RR, APSR_RR, APSR_RR, I63), cx3d),\n  ToC (\"cx3da\", fe800040, 6, (RCP, RR, APSR_RR, APSR_RR, APSR_RR, I63), cx3da),\n+\n+ mToC (\"vcx1\", ec200000, 3, (RCP, RNSDMQ, I4095), vcx1),\n+ mToC (\"vcx1a\", fc200000, 3, (RCP, RNSDMQ, I4095), vcx1),\n+\n+ mToC (\"vcx2\", ec300000, 4, (RCP, RNSDMQ, RNSDMQ, I127), vcx2),\n+ mToC (\"vcx2a\", fc300000, 4, (RCP, RNSDMQ, RNSDMQ, I127), vcx2),\n+\n+ mToC (\"vcx3\", ec800000, 5, (RCP, RNSDMQ, RNSDMQ, RNSDMQ, I15), vcx3),\n+ mToC (\"vcx3a\", fc800000, 5, (RCP, RNSDMQ, RNSDMQ, RNSDMQ, I15), vcx3),\n };\n+\n #undef ARM_VARIANT\n #undef THUMB_VARIANT\n #undef TCE"
    },
    {
      "sha": "de7ebc87d1870f4ef391a11b903f13a6d7cc28ac",
      "filename": "gas/testsuite/gas/arm/cde-missing-fp.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-fp.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-fp.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-missing-fp.d?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -0,0 +1,5 @@\n+#name: Custom Datapath Extension FP missing (CDE)\n+#source: cde.s\n+#as: -mno-warn-deprecated -march=armv8-m.main+cdecp0+cdecp7 -I$srcdir/$subdir\n+#as: -mno-warn-deprecated -march=armv8-m.main+cdecp0+cdecp1+cdecp2+cdecp3+cdecp4+cdecp5+cdecp6+cdecp7 -I$srcdir/$subdir\n+#error_output: cde-missing-fp.l"
    },
    {
      "sha": "2fbfa9dd27b1c7c09e531ea8df261c8fe124a8a0",
      "filename": "gas/testsuite/gas/arm/cde-missing-fp.l",
      "status": "added",
      "additions": 148,
      "deletions": 0,
      "changes": 148,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-fp.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-fp.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-missing-fp.l?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -0,0 +1,148 @@\n+[^ :]+: Assembler messages:\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#2048'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#1920'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#63'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q7,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#2048'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#1920'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#63'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q7,#0'\n+[^ :]+:[0-9]+: Error: selected processor does not support `vptt\\.i8 eq,q0,q0' in Thumb mode\n+[^ :]+:[0-9]+: Error: bad instruction `vcx1t p0,q0,#0'\n+[^ :]+:[0-9]+: Error: bad instruction `vcx1at p0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#60'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#2'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#60'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#2'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: selected processor does not support `vptt\\.i8 eq,q0,q0' in Thumb mode\n+[^ :]+:[0-9]+: Error: bad instruction `vcx2t p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: bad instruction `vcx2at p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#8'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#6'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p7,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#8'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#6'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p7,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: selected processor does not support `vptt\\.i8 eq,q0,q0' in Thumb mode\n+[^ :]+:[0-9]+: Error: bad instruction `vcx3t p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: bad instruction `vcx3at p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,s0,#1920'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,s0,#64'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,s0,#63'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p7,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,s1,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,s30,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,d0,#1920'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,d0,#64'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,d0,#63'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p7,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1 p0,d15,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,s0,#1920'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,s0,#64'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,s0,#63'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p7,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,s1,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,s30,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,d0,#1920'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,d0,#64'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,d0,#63'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p7,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx1a p0,d15,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s0,s0,#60'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s0,s0,#2'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s0,s0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p7,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s1,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s30,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s0,s1,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,s0,s30,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,d0,d0,#60'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,d0,d0,#2'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,d0,d0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p7,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,d15,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2 p0,d0,d15,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s0,s0,#60'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s0,s0,#2'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s0,s0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p7,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s1,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s30,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s0,s1,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,s0,s30,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,d0,d0,#60'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,d0,d0,#2'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,d0,d0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p7,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,d15,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx2a p0,d0,d15,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s0,s0,s0,#6'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s0,s0,s0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p7,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s1,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s30,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s0,s1,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s0,s30,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s0,s0,s1,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,s0,s0,s30,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,d0,d0,d0,#6'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,d0,d0,d0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p7,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,d15,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,d0,d15,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3 p0,d0,d0,d15,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s0,s0,s0,#6'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s0,s0,s0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p7,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s1,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s30,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s0,s1,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s0,s30,s0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s0,s0,s1,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,s0,s0,s30,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,d0,d0,d0,#6'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,d0,d0,d0,#1'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p7,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,d15,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,d0,d15,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx instructions with S or D registers require either MVE or Armv8-M floating point etension\\. -- `vcx3a p0,d0,d0,d15,#0'"
    },
    {
      "sha": "22ac9fec5269954be6cb168bc4f955ab453e568e",
      "filename": "gas/testsuite/gas/arm/cde-missing-mve.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-mve.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-mve.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-missing-mve.d?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -0,0 +1,7 @@\n+#name: Custom Datapath Extension MVE missing (CDE)\n+#source: cde.s\n+#as: -mno-warn-deprecated -march=armv8.1-m.main+cdecp0+cdecp7+fp -I$srcdir/$subdir\n+#as: -mno-warn-deprecated -march=armv8.1-m.main+cdecp0+cdecp1+cdecp2+cdecp3+cdecp4+cdecp5+cdecp6+cdecp7+fp -I$srcdir/$subdir\n+#as: -mno-warn-deprecated -march=armv8-m.main+cdecp0+cdecp7+fp -I$srcdir/$subdir\n+#as: -mno-warn-deprecated -march=armv8-m.main+cdecp0+cdecp1+cdecp2+cdecp3+cdecp4+cdecp5+cdecp6+cdecp7+fp -I$srcdir/$subdir\n+#error_output: cde-missing-mve.l"
    },
    {
      "sha": "997fbe40601f384a543817452e2d85dd72ad7cb4",
      "filename": "gas/testsuite/gas/arm/cde-missing-mve.l",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-mve.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-missing-mve.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-missing-mve.l?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -0,0 +1,57 @@\n+[^ :]+: Assembler messages:\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#2048'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#1920'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q0,#63'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,q7,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#2048'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#1920'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q0,#63'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,q7,#0'\n+[^ :]+:[0-9]+: Error: selected processor does not support `vptt\\.i8 eq,q0,q0' in Thumb mode\n+[^ :]+:[0-9]+: Error: bad instruction `vcx1t p0,q0,#0'\n+[^ :]+:[0-9]+: Error: bad instruction `vcx1at p0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#60'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#2'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#64'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#60'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#2'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: selected processor does not support `vptt\\.i8 eq,q0,q0' in Thumb mode\n+[^ :]+:[0-9]+: Error: bad instruction `vcx2t p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: bad instruction `vcx2at p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#8'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#6'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p7,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#8'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#6'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q0,#1'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p7,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q7,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q7,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,q7,#0'\n+[^ :]+:[0-9]+: Error: selected processor does not support `vptt\\.i8 eq,q0,q0' in Thumb mode\n+[^ :]+:[0-9]+: Error: bad instruction `vcx3t p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: bad instruction `vcx3at p0,q0,q0,q0,#0'\n+"
    },
    {
      "sha": "7d0a1b8d3d51f60cbb82b2854c6d2d17eeb5be28",
      "filename": "gas/testsuite/gas/arm/cde-mve-or-neon.d",
      "status": "added",
      "additions": 99,
      "deletions": 0,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-mve-or-neon.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-mve-or-neon.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-mve-or-neon.d?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -0,0 +1,99 @@\n+#name: Custom Datapath Extension (CDE)\n+#source: cde-mve-or-neon.s\n+#as: -mno-warn-deprecated -march=armv8-m.main+cdecp0+cdecp7+fp -I$srcdir/$subdir\n+#as: -mno-warn-deprecated -march=armv8-m.main+cdecp0+cdecp1+cdecp2+cdecp3+cdecp4+cdecp5+cdecp6+cdecp7+fp -I$srcdir/$subdir\n+#objdump: -M force-thumb -dr --show-raw-insn -marmv8-m.main -M coproc0=cde -M coproc7=cde\n+#...\n+00000000 <\\.text>:\n+ *[0-9a-f]+:\tec20 0000 \tvcx1\tp0, s0, #0\n+ *[0-9a-f]+:\tec2f 0000 \tvcx1\tp0, s0, #1920\n+ *[0-9a-f]+:\tec20 0080 \tvcx1\tp0, s0, #64\n+ *[0-9a-f]+:\tec20 003f \tvcx1\tp0, s0, #63\n+ *[0-9a-f]+:\tec20 0700 \tvcx1\tp7, s0, #0\n+ *[0-9a-f]+:\tec60 0000 \tvcx1\tp0, s1, #0\n+ *[0-9a-f]+:\tec20 f000 \tvcx1\tp0, s30, #0\n+ *[0-9a-f]+:\ted20 0000 \tvcx1\tp0, d0, #0\n+ *[0-9a-f]+:\ted2f 0000 \tvcx1\tp0, d0, #1920\n+ *[0-9a-f]+:\ted20 0080 \tvcx1\tp0, d0, #64\n+ *[0-9a-f]+:\ted20 003f \tvcx1\tp0, d0, #63\n+ *[0-9a-f]+:\ted20 0700 \tvcx1\tp7, d0, #0\n+ *[0-9a-f]+:\ted20 f000 \tvcx1\tp0, d15, #0\n+ *[0-9a-f]+:\tfc20 0000 \tvcx1a\tp0, s0, #0\n+ *[0-9a-f]+:\tfc2f 0000 \tvcx1a\tp0, s0, #1920\n+ *[0-9a-f]+:\tfc20 0080 \tvcx1a\tp0, s0, #64\n+ *[0-9a-f]+:\tfc20 003f \tvcx1a\tp0, s0, #63\n+ *[0-9a-f]+:\tfc20 0700 \tvcx1a\tp7, s0, #0\n+ *[0-9a-f]+:\tfc60 0000 \tvcx1a\tp0, s1, #0\n+ *[0-9a-f]+:\tfc20 f000 \tvcx1a\tp0, s30, #0\n+ *[0-9a-f]+:\tfd20 0000 \tvcx1a\tp0, d0, #0\n+ *[0-9a-f]+:\tfd2f 0000 \tvcx1a\tp0, d0, #1920\n+ *[0-9a-f]+:\tfd20 0080 \tvcx1a\tp0, d0, #64\n+ *[0-9a-f]+:\tfd20 003f \tvcx1a\tp0, d0, #63\n+ *[0-9a-f]+:\tfd20 0700 \tvcx1a\tp7, d0, #0\n+ *[0-9a-f]+:\tfd20 f000 \tvcx1a\tp0, d15, #0\n+ *[0-9a-f]+:\tec30 0000 \tvcx2\tp0, s0, s0, #0\n+ *[0-9a-f]+:\tec3f 0000 \tvcx2\tp0, s0, s0, #60\n+ *[0-9a-f]+:\tec30 0080 \tvcx2\tp0, s0, s0, #2\n+ *[0-9a-f]+:\tec30 0010 \tvcx2\tp0, s0, s0, #1\n+ *[0-9a-f]+:\tec30 0700 \tvcx2\tp7, s0, s0, #0\n+ *[0-9a-f]+:\tec70 0000 \tvcx2\tp0, s1, s0, #0\n+ *[0-9a-f]+:\tec30 f000 \tvcx2\tp0, s30, s0, #0\n+ *[0-9a-f]+:\tec30 0020 \tvcx2\tp0, s0, s1, #0\n+ *[0-9a-f]+:\tec30 000f \tvcx2\tp0, s0, s30, #0\n+ *[0-9a-f]+:\ted30 0000 \tvcx2\tp0, d0, d0, #0\n+ *[0-9a-f]+:\ted3f 0000 \tvcx2\tp0, d0, d0, #60\n+ *[0-9a-f]+:\ted30 0080 \tvcx2\tp0, d0, d0, #2\n+ *[0-9a-f]+:\ted30 0010 \tvcx2\tp0, d0, d0, #1\n+ *[0-9a-f]+:\ted30 0700 \tvcx2\tp7, d0, d0, #0\n+ *[0-9a-f]+:\ted30 f000 \tvcx2\tp0, d15, d0, #0\n+ *[0-9a-f]+:\ted30 000f \tvcx2\tp0, d0, d15, #0\n+ *[0-9a-f]+:\tfc30 0000 \tvcx2a\tp0, s0, s0, #0\n+ *[0-9a-f]+:\tfc3f 0000 \tvcx2a\tp0, s0, s0, #60\n+ *[0-9a-f]+:\tfc30 0080 \tvcx2a\tp0, s0, s0, #2\n+ *[0-9a-f]+:\tfc30 0010 \tvcx2a\tp0, s0, s0, #1\n+ *[0-9a-f]+:\tfc30 0700 \tvcx2a\tp7, s0, s0, #0\n+ *[0-9a-f]+:\tfc70 0000 \tvcx2a\tp0, s1, s0, #0\n+ *[0-9a-f]+:\tfc30 f000 \tvcx2a\tp0, s30, s0, #0\n+ *[0-9a-f]+:\tfc30 0020 \tvcx2a\tp0, s0, s1, #0\n+ *[0-9a-f]+:\tfc30 000f \tvcx2a\tp0, s0, s30, #0\n+ *[0-9a-f]+:\tfd30 0000 \tvcx2a\tp0, d0, d0, #0\n+ *[0-9a-f]+:\tfd3f 0000 \tvcx2a\tp0, d0, d0, #60\n+ *[0-9a-f]+:\tfd30 0080 \tvcx2a\tp0, d0, d0, #2\n+ *[0-9a-f]+:\tfd30 0010 \tvcx2a\tp0, d0, d0, #1\n+ *[0-9a-f]+:\tfd30 0700 \tvcx2a\tp7, d0, d0, #0\n+ *[0-9a-f]+:\tfd30 f000 \tvcx2a\tp0, d15, d0, #0\n+ *[0-9a-f]+:\tfd30 000f \tvcx2a\tp0, d0, d15, #0\n+ *[0-9a-f]+:\tec80 0000 \tvcx3\tp0, s0, s0, s0, #0\n+ *[0-9a-f]+:\tecb0 0000 \tvcx3\tp0, s0, s0, s0, #6\n+ *[0-9a-f]+:\tec80 0010 \tvcx3\tp0, s0, s0, s0, #1\n+ *[0-9a-f]+:\tec80 0700 \tvcx3\tp7, s0, s0, s0, #0\n+ *[0-9a-f]+:\tecc0 0000 \tvcx3\tp0, s1, s0, s0, #0\n+ *[0-9a-f]+:\tec80 f000 \tvcx3\tp0, s30, s0, s0, #0\n+ *[0-9a-f]+:\tec80 0080 \tvcx3\tp0, s0, s1, s0, #0\n+ *[0-9a-f]+:\tec8f 0000 \tvcx3\tp0, s0, s30, s0, #0\n+ *[0-9a-f]+:\tec80 0020 \tvcx3\tp0, s0, s0, s1, #0\n+ *[0-9a-f]+:\tec80 000f \tvcx3\tp0, s0, s0, s30, #0\n+ *[0-9a-f]+:\ted80 0000 \tvcx3\tp0, d0, d0, d0, #0\n+ *[0-9a-f]+:\tedb0 0000 \tvcx3\tp0, d0, d0, d0, #6\n+ *[0-9a-f]+:\ted80 0010 \tvcx3\tp0, d0, d0, d0, #1\n+ *[0-9a-f]+:\ted80 0700 \tvcx3\tp7, d0, d0, d0, #0\n+ *[0-9a-f]+:\ted80 f000 \tvcx3\tp0, d15, d0, d0, #0\n+ *[0-9a-f]+:\ted8f 0000 \tvcx3\tp0, d0, d15, d0, #0\n+ *[0-9a-f]+:\ted80 000f \tvcx3\tp0, d0, d0, d15, #0\n+ *[0-9a-f]+:\tfc80 0000 \tvcx3a\tp0, s0, s0, s0, #0\n+ *[0-9a-f]+:\tfcb0 0000 \tvcx3a\tp0, s0, s0, s0, #6\n+ *[0-9a-f]+:\tfc80 0010 \tvcx3a\tp0, s0, s0, s0, #1\n+ *[0-9a-f]+:\tfc80 0700 \tvcx3a\tp7, s0, s0, s0, #0\n+ *[0-9a-f]+:\tfcc0 0000 \tvcx3a\tp0, s1, s0, s0, #0\n+ *[0-9a-f]+:\tfc80 f000 \tvcx3a\tp0, s30, s0, s0, #0\n+ *[0-9a-f]+:\tfc80 0080 \tvcx3a\tp0, s0, s1, s0, #0\n+ *[0-9a-f]+:\tfc8f 0000 \tvcx3a\tp0, s0, s30, s0, #0\n+ *[0-9a-f]+:\tfc80 0020 \tvcx3a\tp0, s0, s0, s1, #0\n+ *[0-9a-f]+:\tfc80 000f \tvcx3a\tp0, s0, s0, s30, #0\n+ *[0-9a-f]+:\tfd80 0000 \tvcx3a\tp0, d0, d0, d0, #0\n+ *[0-9a-f]+:\tfdb0 0000 \tvcx3a\tp0, d0, d0, d0, #6\n+ *[0-9a-f]+:\tfd80 0010 \tvcx3a\tp0, d0, d0, d0, #1\n+ *[0-9a-f]+:\tfd80 0700 \tvcx3a\tp7, d0, d0, d0, #0\n+ *[0-9a-f]+:\tfd80 f000 \tvcx3a\tp0, d15, d0, d0, #0\n+ *[0-9a-f]+:\tfd8f 0000 \tvcx3a\tp0, d0, d15, d0, #0\n+ *[0-9a-f]+:\tfd80 000f \tvcx3a\tp0, d0, d0, d15, #0"
    },
    {
      "sha": "ba8bc7263eec1e1f9ba9beb0ef62c794fea45a00",
      "filename": "gas/testsuite/gas/arm/cde-mve-or-neon.s",
      "status": "added",
      "additions": 96,
      "deletions": 0,
      "changes": 96,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-mve-or-neon.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-mve-or-neon.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-mve-or-neon.s?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -0,0 +1,96 @@\n+.syntax unified\n+vcx1 p0, s0, #0\n+vcx1 p0, s0, #1920\n+vcx1 p0, s0, #64\n+vcx1 p0, s0, #63\n+vcx1 p7, s0, #0\n+vcx1 p0, s1, #0\n+vcx1 p0, s30, #0\n+vcx1 p0, d0, #0\n+vcx1 p0, d0, #1920\n+vcx1 p0, d0, #64\n+vcx1 p0, d0, #63\n+vcx1 p7, d0, #0\n+vcx1 p0, d15, #0\n+vcx1a p0, s0, #0\n+vcx1a p0, s0, #1920\n+vcx1a p0, s0, #64\n+vcx1a p0, s0, #63\n+vcx1a p7, s0, #0\n+vcx1a p0, s1, #0\n+vcx1a p0, s30, #0\n+vcx1a p0, d0, #0\n+vcx1a p0, d0, #1920\n+vcx1a p0, d0, #64\n+vcx1a p0, d0, #63\n+vcx1a p7, d0, #0\n+vcx1a p0, d15, #0\n+\n+vcx2 p0, s0, s0, #0\n+vcx2 p0, s0, s0, #60\n+vcx2 p0, s0, s0, #2\n+vcx2 p0, s0, s0, #1\n+vcx2 p7, s0, s0, #0\n+vcx2 p0, s1, s0, #0\n+vcx2 p0, s30, s0, #0\n+vcx2 p0, s0, s1, #0\n+vcx2 p0, s0, s30, #0\n+vcx2 p0, d0, d0, #0\n+vcx2 p0, d0, d0, #60\n+vcx2 p0, d0, d0, #2\n+vcx2 p0, d0, d0, #1\n+vcx2 p7, d0, d0, #0\n+vcx2 p0, d15, d0, #0\n+vcx2 p0, d0, d15, #0\n+vcx2a p0, s0, s0, #0\n+vcx2a p0, s0, s0, #60\n+vcx2a p0, s0, s0, #2\n+vcx2a p0, s0, s0, #1\n+vcx2a p7, s0, s0, #0\n+vcx2a p0, s1, s0, #0\n+vcx2a p0, s30, s0, #0\n+vcx2a p0, s0, s1, #0\n+vcx2a p0, s0, s30, #0\n+vcx2a p0, d0, d0, #0\n+vcx2a p0, d0, d0, #60\n+vcx2a p0, d0, d0, #2\n+vcx2a p0, d0, d0, #1\n+vcx2a p7, d0, d0, #0\n+vcx2a p0, d15, d0, #0\n+vcx2a p0, d0, d15, #0\n+\n+\n+vcx3 p0, s0, s0, s0, #0\n+vcx3 p0, s0, s0, s0, #6\n+vcx3 p0, s0, s0, s0, #1\n+vcx3 p7, s0, s0, s0, #0\n+vcx3 p0, s1, s0, s0, #0\n+vcx3 p0, s30, s0, s0, #0\n+vcx3 p0, s0, s1, s0, #0\n+vcx3 p0, s0, s30, s0, #0\n+vcx3 p0, s0, s0, s1, #0\n+vcx3 p0, s0, s0, s30, #0\n+vcx3 p0, d0, d0, d0, #0\n+vcx3 p0, d0, d0, d0, #6\n+vcx3 p0, d0, d0, d0, #1\n+vcx3 p7, d0, d0, d0, #0\n+vcx3 p0, d15, d0, d0, #0\n+vcx3 p0, d0, d15, d0, #0\n+vcx3 p0, d0, d0, d15, #0\n+vcx3a p0, s0, s0, s0, #0\n+vcx3a p0, s0, s0, s0, #6\n+vcx3a p0, s0, s0, s0, #1\n+vcx3a p7, s0, s0, s0, #0\n+vcx3a p0, s1, s0, s0, #0\n+vcx3a p0, s30, s0, s0, #0\n+vcx3a p0, s0, s1, s0, #0\n+vcx3a p0, s0, s30, s0, #0\n+vcx3a p0, s0, s0, s1, #0\n+vcx3a p0, s0, s0, s30, #0\n+vcx3a p0, d0, d0, d0, #0\n+vcx3a p0, d0, d0, d0, #6\n+vcx3a p0, d0, d0, d0, #1\n+vcx3a p7, d0, d0, d0, #0\n+vcx3a p0, d15, d0, d0, #0\n+vcx3a p0, d0, d15, d0, #0\n+vcx3a p0, d0, d0, d15, #0"
    },
    {
      "sha": "04e014cdd9fdd4b5914fe895f226576ec1255add",
      "filename": "gas/testsuite/gas/arm/cde-mve.s",
      "status": "added",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-mve.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-mve.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-mve.s?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -0,0 +1,62 @@\n+.syntax unified\n+\n+vcx1 p0, q0, #0\n+vcx1 p0, q0, #2048\n+vcx1 p0, q0, #1920\n+vcx1 p0, q0, #64\n+vcx1 p0, q0, #63\n+vcx1 p7, q0, #0\n+vcx1 p0, q7, #0\n+vcx1a p0, q0, #0\n+vcx1a p0, q0, #2048\n+vcx1a p0, q0, #1920\n+vcx1a p0, q0, #64\n+vcx1a p0, q0, #63\n+vcx1a p7, q0, #0\n+vcx1a p0, q7, #0\n+\n+vptt.i8 eq, q0, q0\n+vcx1t p0, q0, #0\n+vcx1at p0, q0, #0\n+\n+vcx2 p0, q0, q0, #0\n+vcx2 p0, q0, q0, #64\n+vcx2 p0, q0, q0, #60\n+vcx2 p0, q0, q0, #2\n+vcx2 p0, q0, q0, #1\n+vcx2 p7, q0, q0, #0\n+vcx2 p0, q7, q0, #0\n+vcx2 p0, q0, q7, #0\n+vcx2a p0, q0, q0, #0\n+vcx2a p0, q0, q0, #64\n+vcx2a p0, q0, q0, #60\n+vcx2a p0, q0, q0, #2\n+vcx2a p0, q0, q0, #1\n+vcx2a p7, q0, q0, #0\n+vcx2a p0, q7, q0, #0\n+vcx2a p0, q0, q7, #0\n+\n+vptt.i8 eq, q0, q0\n+vcx2t p0, q0, q0, #0\n+vcx2at p0, q0, q0, #0\n+\n+vcx3 p0, q0, q0, q0, #0\n+vcx3 p0, q0, q0, q0, #8\n+vcx3 p0, q0, q0, q0, #6\n+vcx3 p0, q0, q0, q0, #1\n+vcx3 p7, q0, q0, q0, #0\n+vcx3 p0, q7, q0, q0, #0\n+vcx3 p0, q0, q7, q0, #0\n+vcx3 p0, q0, q0, q7, #0\n+vcx3a p0, q0, q0, q0, #0\n+vcx3a p0, q0, q0, q0, #8\n+vcx3a p0, q0, q0, q0, #6\n+vcx3a p0, q0, q0, q0, #1\n+vcx3a p7, q0, q0, q0, #0\n+vcx3a p0, q7, q0, q0, #0\n+vcx3a p0, q0, q7, q0, #0\n+vcx3a p0, q0, q0, q7, #0\n+\n+vptt.i8 eq, q0, q0\n+vcx3t p0, q0, q0, q0, #0\n+vcx3at p0, q0, q0, q0, #0"
    },
    {
      "sha": "d0380d9d79a647d4c48f92a5524b0073d96bce89",
      "filename": "gas/testsuite/gas/arm/cde-warnings.l",
      "status": "modified",
      "additions": 180,
      "deletions": 0,
      "changes": 180,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-warnings.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-warnings.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-warnings.l?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -173,3 +173,183 @@\n [^ :]+:[0-9]+: Error: constant expression required -- `cx3da p0,r0,r1,r0,r0,r0,#0'\n [^ :]+:[0-9]+: Error: syntax error -- `cx3d p0,r0,r0,r0,#0'\n [^ :]+:[0-9]+: Error: syntax error -- `cx3da p0,r0,r0,r0,#0'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1 p0,q0,#4096'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1a p0,q0,#4096'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1 p0,q0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1a p0,q0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx1 p8,q0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx1a p8,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx1 p0,q8,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx1a p0,q8,#0'\n+[^ :]+:[0-9]+: Warning: instruction is UNPREDICTABLE in an IT block\n+[^ :]+:[0-9]+: Error: syntax error -- `vcx1ne p0,q0,#0'\n+[^ :]+:[0-9]+: Warning: instruction is UNPREDICTABLE in an IT block\n+[^ :]+:[0-9]+: Error: syntax error -- `vcx1ane p0,q0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx1 p1,q0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx1a p1,q0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx1 p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx1a p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,#0'\n+[^ :]+:[0-9]+: Error: vcx1 with S or D registers takes immediate within 0-2047 -- `vcx1 p0,d0,#2048'\n+[^ :]+:[0-9]+: Error: vcx1 with S or D registers takes immediate within 0-2047 -- `vcx1a p0,d0,#2048'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1 p0,d0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1a p0,d0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx1 p8,d0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx1a p8,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx1 p0,d16,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx1a p0,d16,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1 p0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1ne p0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1a p0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1ane p0,d0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx1 p1,d0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx1a p1,d0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx1 p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx1a p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,#0'\n+[^ :]+:[0-9]+: Error: vcx1 with S or D registers takes immediate within 0-2047 -- `vcx1 p0,s0,#2048'\n+[^ :]+:[0-9]+: Error: vcx1 with S or D registers takes immediate within 0-2047 -- `vcx1a p0,s0,#2048'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1 p0,s0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx1a p0,s0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx1 p8,s0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx1a p8,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,s32,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,s32,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1 p0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1ne p0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1a p0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx1ane p0,s0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx1 p1,s0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx1a p1,s0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx1 p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx1a p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1 p0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx1a p0,#0'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2 p0,q0,q0,#128'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2a p0,q0,q0,#128'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2 p0,q0,q0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2a p0,q0,q0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx2 p8,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx2a p8,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx2 p0,q8,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx2a p0,q8,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx2 p0,q0,q8,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx2a p0,q0,q8,#0'\n+[^ :]+:[0-9]+: Warning: instruction is UNPREDICTABLE in an IT block\n+[^ :]+:[0-9]+: Error: syntax error -- `vcx2ne p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Warning: instruction is UNPREDICTABLE in an IT block\n+[^ :]+:[0-9]+: Error: syntax error -- `vcx2ane p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx2 p1,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx2a p1,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx2 p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx2a p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,q0,#0'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-63 -- `vcx2 p0,d0,d0,#64'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-63 -- `vcx2a p0,d0,d0,#64'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2 p0,d0,d0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2a p0,d0,d0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx2 p8,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx2a p8,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx2 p0,d16,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx2a p0,d16,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx2 p0,d0,d16,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx2a p0,d0,d16,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2 p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2ne p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2a p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2ane p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx2 p1,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx2a p1,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx2 p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx2a p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,d0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-63 -- `vcx2 p0,s0,s0,#64'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-63 -- `vcx2a p0,s0,s0,#64'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2 p0,s0,s0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx2a p0,s0,s0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx2 p8,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx2a p8,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,s32,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,s32,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,s0,s32,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,s0,s32,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2 p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2ne p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2a p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx2ane p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx2 p1,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx2a p1,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx2 p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx2a p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2 p0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx2a p0,s0,#0'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3 p0,q0,q0,q0,#16'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3a p0,q0,q0,q0,#16'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3 p0,q0,q0,q0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3a p0,q0,q0,q0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx3 p8,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx3a p8,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx3 p0,q8,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx3a p0,q8,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx3 p0,q8,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx3a p0,q0,q8,q0,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx3 p0,q0,q0,q8,#0'\n+[^ :]+:[0-9]+: Error: expected MVE register \\[q0\\.\\.q7\\] -- `vcx3a p0,q0,q0,q8,#0'\n+[^ :]+:[0-9]+: Warning: instruction is UNPREDICTABLE in an IT block\n+[^ :]+:[0-9]+: Error: syntax error -- `vcx3ne p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Warning: instruction is UNPREDICTABLE in an IT block\n+[^ :]+:[0-9]+: Error: syntax error -- `vcx3ane p0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx3 p1,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx3a p1,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx3 p0,q0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx3a p0,q0,q0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,q0,q0,#0'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-7 -- `vcx3 p0,d0,d0,d0,#8'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-7 -- `vcx3a p0,d0,d0,d0,#8'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3 p0,d0,d0,d0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3a p0,d0,d0,d0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx3 p8,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx3a p8,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx3 p0,d16,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx3a p0,d16,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx3 p0,d0,d16,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx3a p0,d0,d16,d0,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx3 p0,d0,d0,d16,#0'\n+[^ :]+:[0-9]+: Error: 'd' register must be in range 0-15 -- `vcx3a p0,d0,d0,d16,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3 p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3ne p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3a p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3ane p0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx3 p1,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx3a p1,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx3 p0,d0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx3a p0,d0,d0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,d0,d0,#0'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-7 -- `vcx3 p0,s0,s0,s0,#8'\n+[^ :]+:[0-9]+: Error: vcx2 with S or D registers takes immediate within 0-7 -- `vcx3a p0,s0,s0,s0,#8'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3 p0,s0,s0,s0,#-1'\n+[^ :]+:[0-9]+: Error: immediate value out of range -- `vcx3a p0,s0,s0,s0,#-1'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx3 p8,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: CDE Coprocessor must be in range 0-7 -- `vcx3a p8,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,s32,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,s32,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,s0,s32,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,s0,s32,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,s0,s0,s32,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,s0,s0,s32,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3 p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3ne p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3a p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: instruction not allowed in IT block -- `vcx3ane p0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx3 p1,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: coprocessor for insn is not enabled for cde -- `vcx3a p1,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx3 p0,s0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: constant expression required -- `vcx3a p0,s0,s0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3 p0,s0,s0,#0'\n+[^ :]+:[0-9]+: Error: MVE vector register expected -- `vcx3a p0,s0,s0,#0'"
    },
    {
      "sha": "34b923f4e0c5f40aec12132428db60fbadf0c691",
      "filename": "gas/testsuite/gas/arm/cde-warnings.s",
      "status": "modified",
      "additions": 269,
      "deletions": 0,
      "changes": 269,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-warnings.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde-warnings.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde-warnings.s?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -333,3 +333,272 @@ cx3da p0, r0, r1, r0, r0, r0, #0\n \n cx3d p0, r0, r0, r0, #0\n cx3da p0, r0, r0, r0, #0\n+\n+# vcx1{a}\n+# Immediate out of range.\n+# Each register out of range.\n+# IT block => constrained unpredictable\n+#\n+# Error given when using coprocessor number not enabled on command line.\n+# Too many arguments\n+# Too little arguments\n+\n+vcx1 p0, q0, #4096\n+vcx1a p0, q0, #4096\n+vcx1 p0, q0, #-1\n+vcx1a p0, q0, #-1\n+\n+vcx1 p8, q0, #0\n+vcx1a p8, q0, #0\n+vcx1 p0, q8, #0\n+vcx1a p0, q8, #0\n+\n+itttt ne\n+vcx1 p0, q0, #0\n+vcx1ne p0, q0, #0\n+vcx1a p0, q0, #0\n+vcx1ane p0, q0, #0\n+\n+vcx1 p1, q0, #0\n+vcx1a p1, q0, #0\n+\n+vcx1 p0, q0, q0, #0\n+vcx1a p0, q0, q0, #0\n+vcx1 p0, #0\n+vcx1a p0, #0\n+\n+\n+vcx1 p0, d0, #2048\n+vcx1a p0, d0, #2048\n+vcx1 p0, d0, #-1\n+vcx1a p0, d0, #-1\n+\n+vcx1 p8, d0, #0\n+vcx1a p8, d0, #0\n+vcx1 p0, d16, #0\n+vcx1a p0, d16, #0\n+\n+itttt ne\n+vcx1 p0, d0, #0\n+vcx1ne p0, d0, #0\n+vcx1a p0, d0, #0\n+vcx1ane p0, d0, #0\n+\n+vcx1 p1, d0, #0\n+vcx1a p1, d0, #0\n+\n+vcx1 p0, d0, d0, #0\n+vcx1a p0, d0, d0, #0\n+vcx1 p0, #0\n+vcx1a p0, #0\n+\n+\n+vcx1 p0, s0, #2048\n+vcx1a p0, s0, #2048\n+vcx1 p0, s0, #-1\n+vcx1a p0, s0, #-1\n+\n+vcx1 p8, s0, #0\n+vcx1a p8, s0, #0\n+vcx1 p0, s32, #0\n+vcx1a p0, s32, #0\n+\n+itttt ne\n+vcx1 p0, s0, #0\n+vcx1ne p0, s0, #0\n+vcx1a p0, s0, #0\n+vcx1ane p0, s0, #0\n+\n+vcx1 p1, s0, #0\n+vcx1a p1, s0, #0\n+\n+vcx1 p0, s0, s0, #0\n+vcx1a p0, s0, s0, #0\n+vcx1 p0, #0\n+vcx1a p0, #0\n+\n+\n+# vcx2{a}\n+# Immediate out of range.\n+# Each register out of range.\n+# IT block => constrained unpredictable\n+#\n+# Error given when using coprocessor number not enabled on command line.\n+# Too many arguments\n+# Too little arguments\n+\n+vcx2 p0, q0, q0, #128\n+vcx2a p0, q0, q0, #128\n+vcx2 p0, q0, q0, #-1\n+vcx2a p0, q0, q0, #-1\n+\n+vcx2 p8, q0, q0, #0\n+vcx2a p8, q0, q0, #0\n+vcx2 p0, q8, q0, #0\n+vcx2a p0, q8, q0, #0\n+vcx2 p0, q0, q8, #0\n+vcx2a p0, q0, q8, #0\n+\n+itttt ne\n+vcx2 p0, q0, q0, #0\n+vcx2ne p0, q0, q0, #0\n+vcx2a p0, q0, q0, #0\n+vcx2ane p0, q0, q0, #0\n+\n+vcx2 p1, q0, q0, #0\n+vcx2a p1, q0, q0, #0\n+\n+vcx2 p0, q0, q0, q0, #0\n+vcx2a p0, q0, q0, q0, #0\n+vcx2 p0, q0, #0\n+vcx2a p0, q0, #0\n+\n+\n+vcx2 p0, d0, d0, #64\n+vcx2a p0, d0, d0, #64\n+vcx2 p0, d0, d0, #-1\n+vcx2a p0, d0, d0, #-1\n+\n+vcx2 p8, d0, d0, #0\n+vcx2a p8, d0, d0, #0\n+vcx2 p0, d16, d0, #0\n+vcx2a p0, d16, d0, #0\n+vcx2 p0, d0, d16, #0\n+vcx2a p0, d0, d16, #0\n+\n+itttt ne\n+vcx2 p0, d0, d0, #0\n+vcx2ne p0, d0, d0, #0\n+vcx2a p0, d0, d0, #0\n+vcx2ane p0, d0, d0, #0\n+\n+vcx2 p1, d0, d0, #0\n+vcx2a p1, d0, d0, #0\n+\n+vcx2 p0, d0, d0, d0, #0\n+vcx2a p0, d0, d0, d0, #0\n+vcx2 p0, d0, #0\n+vcx2a p0, d0, #0\n+\n+\n+vcx2 p0, s0, s0, #64\n+vcx2a p0, s0, s0, #64\n+vcx2 p0, s0, s0, #-1\n+vcx2a p0, s0, s0, #-1\n+\n+vcx2 p8, s0, s0, #0\n+vcx2a p8, s0, s0, #0\n+vcx2 p0, s32, s0, #0\n+vcx2a p0, s32, s0, #0\n+vcx2 p0, s0, s32, #0\n+vcx2a p0, s0, s32, #0\n+\n+itttt ne\n+vcx2 p0, s0, s0, #0\n+vcx2ne p0, s0, s0, #0\n+vcx2a p0, s0, s0, #0\n+vcx2ane p0, s0, s0, #0\n+\n+vcx2 p1, s0, s0, #0\n+vcx2a p1, s0, s0, #0\n+\n+vcx2 p0, s0, s0, s0, #0\n+vcx2a p0, s0, s0, s0, #0\n+vcx2 p0, s0, #0\n+vcx2a p0, s0, #0\n+\n+# vcx3{a}\n+# Immediate out of range.\n+# Each register out of range.\n+# IT block => constrained unpredictable\n+#\n+# Error given when using coprocessor number not enabled on command line.\n+# Too many arguments\n+# Too little arguments\n+\n+vcx3 p0, q0, q0, q0, #16\n+vcx3a p0, q0, q0, q0, #16\n+vcx3 p0, q0, q0, q0, #-1\n+vcx3a p0, q0, q0, q0, #-1\n+\n+vcx3 p8, q0, q0, q0, #0\n+vcx3a p8, q0, q0, q0, #0\n+vcx3 p0, q8, q0, q0, #0\n+vcx3a p0, q8, q0, q0, #0\n+vcx3 p0, q8, q0, q0, #0\n+vcx3a p0, q0, q8, q0, #0\n+vcx3 p0, q0, q0, q8, #0\n+vcx3a p0, q0, q0, q8, #0\n+\n+itttt ne\n+vcx3 p0, q0, q0, q0, #0\n+vcx3ne p0, q0, q0, q0, #0\n+vcx3a p0, q0, q0, q0, #0\n+vcx3ane p0, q0, q0, q0, #0\n+\n+vcx3 p1, q0, q0, q0, #0\n+vcx3a p1, q0, q0, q0, #0\n+\n+vcx3 p0, q0, q0, q0, q0, #0\n+vcx3a p0, q0, q0, q0, q0, #0\n+vcx3 p0, q0, q0, #0\n+vcx3a p0, q0, q0, #0\n+\n+\n+vcx3 p0, d0, d0, d0, #8\n+vcx3a p0, d0, d0, d0, #8\n+vcx3 p0, d0, d0, d0, #-1\n+vcx3a p0, d0, d0, d0, #-1\n+\n+vcx3 p8, d0, d0, d0, #0\n+vcx3a p8, d0, d0, d0, #0\n+vcx3 p0, d16, d0, d0, #0\n+vcx3a p0, d16, d0, d0, #0\n+vcx3 p0, d0, d16, d0, #0\n+vcx3a p0, d0, d16, d0, #0\n+vcx3 p0, d0, d0, d16, #0\n+vcx3a p0, d0, d0, d16, #0\n+\n+itttt ne\n+vcx3 p0, d0, d0, d0, #0\n+vcx3ne p0, d0, d0, d0, #0\n+vcx3a p0, d0, d0, d0, #0\n+vcx3ane p0, d0, d0, d0, #0\n+\n+vcx3 p1, d0, d0, d0, #0\n+vcx3a p1, d0, d0, d0, #0\n+\n+vcx3 p0, d0, d0, d0, d0, #0\n+vcx3a p0, d0, d0, d0, d0, #0\n+vcx3 p0, d0, d0, #0\n+vcx3a p0, d0, d0, #0\n+\n+\n+vcx3 p0, s0, s0, s0, #8\n+vcx3a p0, s0, s0, s0, #8\n+vcx3 p0, s0, s0, s0, #-1\n+vcx3a p0, s0, s0, s0, #-1\n+\n+vcx3 p8, s0, s0, s0, #0\n+vcx3a p8, s0, s0, s0, #0\n+vcx3 p0, s32, s0, s0, #0\n+vcx3a p0, s32, s0, s0, #0\n+vcx3 p0, s0, s32, s0, #0\n+vcx3a p0, s0, s32, s0, #0\n+vcx3 p0, s0, s0, s32, #0\n+vcx3a p0, s0, s0, s32, #0\n+\n+itttt ne\n+vcx3 p0, s0, s0, s0, #0\n+vcx3ne p0, s0, s0, s0, #0\n+vcx3a p0, s0, s0, s0, #0\n+vcx3ane p0, s0, s0, s0, #0\n+\n+vcx3 p1, s0, s0, s0, #0\n+vcx3a p1, s0, s0, s0, #0\n+\n+vcx3 p0, s0, s0, s0, s0, #0\n+vcx3a p0, s0, s0, s0, s0, #0\n+vcx3 p0, s0, s0, #0\n+vcx3a p0, s0, s0, #0\n+"
    },
    {
      "sha": "0fa02ad18bcba0fd4c9293eeef6f9a99f9471564",
      "filename": "gas/testsuite/gas/arm/cde.d",
      "status": "modified",
      "additions": 147,
      "deletions": 0,
      "changes": 147,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde.d?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -117,3 +117,150 @@\n  *[0-9a-f]+:\tfe89 0040 \tcx3da\tp0, r0, r1, r9, r0, #0\n  *[0-9a-f]+:\tfe80 f040 \tcx3da\tp0, r0, r1, r0, APSR_nzcv, #0\n  *[0-9a-f]+:\tfe80 9040 \tcx3da\tp0, r0, r1, r0, r9, #0\n+ *[0-9a-f]+:\tec20 0040 \tvcx1\tp0, q0, #0\n+ *[0-9a-f]+:\ted20 0040 \tvcx1\tp0, q0, #2048\n+ *[0-9a-f]+:\tec2f 0040 \tvcx1\tp0, q0, #1920\n+ *[0-9a-f]+:\tec20 00c0 \tvcx1\tp0, q0, #64\n+ *[0-9a-f]+:\tec20 007f \tvcx1\tp0, q0, #63\n+ *[0-9a-f]+:\tec20 0740 \tvcx1\tp7, q0, #0\n+ *[0-9a-f]+:\tec20 e040 \tvcx1\tp0, q7, #0\n+ *[0-9a-f]+:\tfc20 0040 \tvcx1a\tp0, q0, #0\n+ *[0-9a-f]+:\tfd20 0040 \tvcx1a\tp0, q0, #2048\n+ *[0-9a-f]+:\tfc2f 0040 \tvcx1a\tp0, q0, #1920\n+ *[0-9a-f]+:\tfc20 00c0 \tvcx1a\tp0, q0, #64\n+ *[0-9a-f]+:\tfc20 007f \tvcx1a\tp0, q0, #63\n+ *[0-9a-f]+:\tfc20 0740 \tvcx1a\tp7, q0, #0\n+ *[0-9a-f]+:\tfc20 e040 \tvcx1a\tp0, q7, #0\n+ *[0-9a-f]+:\tfe01 8f00 \tvptt\\.i8\teq, q0, q0\n+ *[0-9a-f]+:\tec20 0040 \tvcx1\tp0, q0, #0\n+ *[0-9a-f]+:\tfc20 0040 \tvcx1a\tp0, q0, #0\n+ *[0-9a-f]+:\tec30 0040 \tvcx2\tp0, q0, q0, #0\n+ *[0-9a-f]+:\ted30 0040 \tvcx2\tp0, q0, q0, #64\n+ *[0-9a-f]+:\tec3f 0040 \tvcx2\tp0, q0, q0, #60\n+ *[0-9a-f]+:\tec30 00c0 \tvcx2\tp0, q0, q0, #2\n+ *[0-9a-f]+:\tec30 0050 \tvcx2\tp0, q0, q0, #1\n+ *[0-9a-f]+:\tec30 0740 \tvcx2\tp7, q0, q0, #0\n+ *[0-9a-f]+:\tec30 e040 \tvcx2\tp0, q7, q0, #0\n+ *[0-9a-f]+:\tec30 004e \tvcx2\tp0, q0, q7, #0\n+ *[0-9a-f]+:\tfc30 0040 \tvcx2a\tp0, q0, q0, #0\n+ *[0-9a-f]+:\tfd30 0040 \tvcx2a\tp0, q0, q0, #64\n+ *[0-9a-f]+:\tfc3f 0040 \tvcx2a\tp0, q0, q0, #60\n+ *[0-9a-f]+:\tfc30 00c0 \tvcx2a\tp0, q0, q0, #2\n+ *[0-9a-f]+:\tfc30 0050 \tvcx2a\tp0, q0, q0, #1\n+ *[0-9a-f]+:\tfc30 0740 \tvcx2a\tp7, q0, q0, #0\n+ *[0-9a-f]+:\tfc30 e040 \tvcx2a\tp0, q7, q0, #0\n+ *[0-9a-f]+:\tfc30 004e \tvcx2a\tp0, q0, q7, #0\n+ *[0-9a-f]+:\tfe01 8f00 \tvptt\\.i8\teq, q0, q0\n+ *[0-9a-f]+:\tec30 0040 \tvcx2\tp0, q0, q0, #0\n+ *[0-9a-f]+:\tfc30 0040 \tvcx2a\tp0, q0, q0, #0\n+ *[0-9a-f]+:\tec80 0040 \tvcx3\tp0, q0, q0, q0, #0\n+ *[0-9a-f]+:\ted80 0040 \tvcx3\tp0, q0, q0, q0, #8\n+ *[0-9a-f]+:\tecb0 0040 \tvcx3\tp0, q0, q0, q0, #6\n+ *[0-9a-f]+:\tec80 0050 \tvcx3\tp0, q0, q0, q0, #1\n+ *[0-9a-f]+:\tec80 0740 \tvcx3\tp7, q0, q0, q0, #0\n+ *[0-9a-f]+:\tec80 e040 \tvcx3\tp0, q7, q0, q0, #0\n+ *[0-9a-f]+:\tec8e 0040 \tvcx3\tp0, q0, q7, q0, #0\n+ *[0-9a-f]+:\tec80 004e \tvcx3\tp0, q0, q0, q7, #0\n+ *[0-9a-f]+:\tfc80 0040 \tvcx3a\tp0, q0, q0, q0, #0\n+ *[0-9a-f]+:\tfd80 0040 \tvcx3a\tp0, q0, q0, q0, #8\n+ *[0-9a-f]+:\tfcb0 0040 \tvcx3a\tp0, q0, q0, q0, #6\n+ *[0-9a-f]+:\tfc80 0050 \tvcx3a\tp0, q0, q0, q0, #1\n+ *[0-9a-f]+:\tfc80 0740 \tvcx3a\tp7, q0, q0, q0, #0\n+ *[0-9a-f]+:\tfc80 e040 \tvcx3a\tp0, q7, q0, q0, #0\n+ *[0-9a-f]+:\tfc8e 0040 \tvcx3a\tp0, q0, q7, q0, #0\n+ *[0-9a-f]+:\tfc80 004e \tvcx3a\tp0, q0, q0, q7, #0\n+ *[0-9a-f]+:\tfe01 8f00 \tvptt\\.i8\teq, q0, q0\n+ *[0-9a-f]+:\tec80 0040 \tvcx3\tp0, q0, q0, q0, #0\n+ *[0-9a-f]+:\tfc80 0040 \tvcx3a\tp0, q0, q0, q0, #0\n+ *[0-9a-f]+:\tec20 0000 \tvcx1\tp0, s0, #0\n+ *[0-9a-f]+:\tec2f 0000 \tvcx1\tp0, s0, #1920\n+ *[0-9a-f]+:\tec20 0080 \tvcx1\tp0, s0, #64\n+ *[0-9a-f]+:\tec20 003f \tvcx1\tp0, s0, #63\n+ *[0-9a-f]+:\tec20 0700 \tvcx1\tp7, s0, #0\n+ *[0-9a-f]+:\tec60 0000 \tvcx1\tp0, s1, #0\n+ *[0-9a-f]+:\tec20 f000 \tvcx1\tp0, s30, #0\n+ *[0-9a-f]+:\ted20 0000 \tvcx1\tp0, d0, #0\n+ *[0-9a-f]+:\ted2f 0000 \tvcx1\tp0, d0, #1920\n+ *[0-9a-f]+:\ted20 0080 \tvcx1\tp0, d0, #64\n+ *[0-9a-f]+:\ted20 003f \tvcx1\tp0, d0, #63\n+ *[0-9a-f]+:\ted20 0700 \tvcx1\tp7, d0, #0\n+ *[0-9a-f]+:\ted20 f000 \tvcx1\tp0, d15, #0\n+ *[0-9a-f]+:\tfc20 0000 \tvcx1a\tp0, s0, #0\n+ *[0-9a-f]+:\tfc2f 0000 \tvcx1a\tp0, s0, #1920\n+ *[0-9a-f]+:\tfc20 0080 \tvcx1a\tp0, s0, #64\n+ *[0-9a-f]+:\tfc20 003f \tvcx1a\tp0, s0, #63\n+ *[0-9a-f]+:\tfc20 0700 \tvcx1a\tp7, s0, #0\n+ *[0-9a-f]+:\tfc60 0000 \tvcx1a\tp0, s1, #0\n+ *[0-9a-f]+:\tfc20 f000 \tvcx1a\tp0, s30, #0\n+ *[0-9a-f]+:\tfd20 0000 \tvcx1a\tp0, d0, #0\n+ *[0-9a-f]+:\tfd2f 0000 \tvcx1a\tp0, d0, #1920\n+ *[0-9a-f]+:\tfd20 0080 \tvcx1a\tp0, d0, #64\n+ *[0-9a-f]+:\tfd20 003f \tvcx1a\tp0, d0, #63\n+ *[0-9a-f]+:\tfd20 0700 \tvcx1a\tp7, d0, #0\n+ *[0-9a-f]+:\tfd20 f000 \tvcx1a\tp0, d15, #0\n+ *[0-9a-f]+:\tec30 0000 \tvcx2\tp0, s0, s0, #0\n+ *[0-9a-f]+:\tec3f 0000 \tvcx2\tp0, s0, s0, #60\n+ *[0-9a-f]+:\tec30 0080 \tvcx2\tp0, s0, s0, #2\n+ *[0-9a-f]+:\tec30 0010 \tvcx2\tp0, s0, s0, #1\n+ *[0-9a-f]+:\tec30 0700 \tvcx2\tp7, s0, s0, #0\n+ *[0-9a-f]+:\tec70 0000 \tvcx2\tp0, s1, s0, #0\n+ *[0-9a-f]+:\tec30 f000 \tvcx2\tp0, s30, s0, #0\n+ *[0-9a-f]+:\tec30 0020 \tvcx2\tp0, s0, s1, #0\n+ *[0-9a-f]+:\tec30 000f \tvcx2\tp0, s0, s30, #0\n+ *[0-9a-f]+:\ted30 0000 \tvcx2\tp0, d0, d0, #0\n+ *[0-9a-f]+:\ted3f 0000 \tvcx2\tp0, d0, d0, #60\n+ *[0-9a-f]+:\ted30 0080 \tvcx2\tp0, d0, d0, #2\n+ *[0-9a-f]+:\ted30 0010 \tvcx2\tp0, d0, d0, #1\n+ *[0-9a-f]+:\ted30 0700 \tvcx2\tp7, d0, d0, #0\n+ *[0-9a-f]+:\ted30 f000 \tvcx2\tp0, d15, d0, #0\n+ *[0-9a-f]+:\ted30 000f \tvcx2\tp0, d0, d15, #0\n+ *[0-9a-f]+:\tfc30 0000 \tvcx2a\tp0, s0, s0, #0\n+ *[0-9a-f]+:\tfc3f 0000 \tvcx2a\tp0, s0, s0, #60\n+ *[0-9a-f]+:\tfc30 0080 \tvcx2a\tp0, s0, s0, #2\n+ *[0-9a-f]+:\tfc30 0010 \tvcx2a\tp0, s0, s0, #1\n+ *[0-9a-f]+:\tfc30 0700 \tvcx2a\tp7, s0, s0, #0\n+ *[0-9a-f]+:\tfc70 0000 \tvcx2a\tp0, s1, s0, #0\n+ *[0-9a-f]+:\tfc30 f000 \tvcx2a\tp0, s30, s0, #0\n+ *[0-9a-f]+:\tfc30 0020 \tvcx2a\tp0, s0, s1, #0\n+ *[0-9a-f]+:\tfc30 000f \tvcx2a\tp0, s0, s30, #0\n+ *[0-9a-f]+:\tfd30 0000 \tvcx2a\tp0, d0, d0, #0\n+ *[0-9a-f]+:\tfd3f 0000 \tvcx2a\tp0, d0, d0, #60\n+ *[0-9a-f]+:\tfd30 0080 \tvcx2a\tp0, d0, d0, #2\n+ *[0-9a-f]+:\tfd30 0010 \tvcx2a\tp0, d0, d0, #1\n+ *[0-9a-f]+:\tfd30 0700 \tvcx2a\tp7, d0, d0, #0\n+ *[0-9a-f]+:\tfd30 f000 \tvcx2a\tp0, d15, d0, #0\n+ *[0-9a-f]+:\tfd30 000f \tvcx2a\tp0, d0, d15, #0\n+ *[0-9a-f]+:\tec80 0000 \tvcx3\tp0, s0, s0, s0, #0\n+ *[0-9a-f]+:\tecb0 0000 \tvcx3\tp0, s0, s0, s0, #6\n+ *[0-9a-f]+:\tec80 0010 \tvcx3\tp0, s0, s0, s0, #1\n+ *[0-9a-f]+:\tec80 0700 \tvcx3\tp7, s0, s0, s0, #0\n+ *[0-9a-f]+:\tecc0 0000 \tvcx3\tp0, s1, s0, s0, #0\n+ *[0-9a-f]+:\tec80 f000 \tvcx3\tp0, s30, s0, s0, #0\n+ *[0-9a-f]+:\tec80 0080 \tvcx3\tp0, s0, s1, s0, #0\n+ *[0-9a-f]+:\tec8f 0000 \tvcx3\tp0, s0, s30, s0, #0\n+ *[0-9a-f]+:\tec80 0020 \tvcx3\tp0, s0, s0, s1, #0\n+ *[0-9a-f]+:\tec80 000f \tvcx3\tp0, s0, s0, s30, #0\n+ *[0-9a-f]+:\ted80 0000 \tvcx3\tp0, d0, d0, d0, #0\n+ *[0-9a-f]+:\tedb0 0000 \tvcx3\tp0, d0, d0, d0, #6\n+ *[0-9a-f]+:\ted80 0010 \tvcx3\tp0, d0, d0, d0, #1\n+ *[0-9a-f]+:\ted80 0700 \tvcx3\tp7, d0, d0, d0, #0\n+ *[0-9a-f]+:\ted80 f000 \tvcx3\tp0, d15, d0, d0, #0\n+ *[0-9a-f]+:\ted8f 0000 \tvcx3\tp0, d0, d15, d0, #0\n+ *[0-9a-f]+:\ted80 000f \tvcx3\tp0, d0, d0, d15, #0\n+ *[0-9a-f]+:\tfc80 0000 \tvcx3a\tp0, s0, s0, s0, #0\n+ *[0-9a-f]+:\tfcb0 0000 \tvcx3a\tp0, s0, s0, s0, #6\n+ *[0-9a-f]+:\tfc80 0010 \tvcx3a\tp0, s0, s0, s0, #1\n+ *[0-9a-f]+:\tfc80 0700 \tvcx3a\tp7, s0, s0, s0, #0\n+ *[0-9a-f]+:\tfcc0 0000 \tvcx3a\tp0, s1, s0, s0, #0\n+ *[0-9a-f]+:\tfc80 f000 \tvcx3a\tp0, s30, s0, s0, #0\n+ *[0-9a-f]+:\tfc80 0080 \tvcx3a\tp0, s0, s1, s0, #0\n+ *[0-9a-f]+:\tfc8f 0000 \tvcx3a\tp0, s0, s30, s0, #0\n+ *[0-9a-f]+:\tfc80 0020 \tvcx3a\tp0, s0, s0, s1, #0\n+ *[0-9a-f]+:\tfc80 000f \tvcx3a\tp0, s0, s0, s30, #0\n+ *[0-9a-f]+:\tfd80 0000 \tvcx3a\tp0, d0, d0, d0, #0\n+ *[0-9a-f]+:\tfdb0 0000 \tvcx3a\tp0, d0, d0, d0, #6\n+ *[0-9a-f]+:\tfd80 0010 \tvcx3a\tp0, d0, d0, d0, #1\n+ *[0-9a-f]+:\tfd80 0700 \tvcx3a\tp7, d0, d0, d0, #0\n+ *[0-9a-f]+:\tfd80 f000 \tvcx3a\tp0, d15, d0, d0, #0\n+ *[0-9a-f]+:\tfd8f 0000 \tvcx3a\tp0, d0, d15, d0, #0\n+ *[0-9a-f]+:\tfd80 000f \tvcx3a\tp0, d0, d0, d15, #0"
    },
    {
      "sha": "e7ae1ea71b1117dfa8e8e3912a346c4690ba7046",
      "filename": "gas/testsuite/gas/arm/cde.s",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/gas/testsuite/gas/arm/cde.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/cde.s?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -1,3 +1,36 @@\n .syntax unified\n \n .include \"cde-scalar.s\"\n+\n+# vcx1{a} encoding has the following form\n+# 111a110i0d10iiiidddd0pppi1iiiiii (vector form)\n+\n+# 111a110s0d10iiiidddd0pppi0iiiiii (S/D register form)\n+#\n+# Variants to test:\n+# - immediates that set each set of `i` to ones in turn.\n+# - each register set to something non-zero\n+#   (where each block of register sets is set to all-ones if possible)\n+# - coprocessor set to 7\n+\n+# vcx2{a} encoding has the following form\n+# 111a110i0d11iiiidddd0pppi1mimmmm (vector form)\n+# 111a110s0d11iiiidddd0pppi0mimmmm (S/D register form)\n+#\n+# Variants to test:\n+# - immediates that set each set of `i` to ones in turn.\n+# - each register set to something non-zero\n+#   (where each block of register sets is set to all-ones if possible)\n+# - coprocessor set to 7\n+\n+# vcx3{a} encoding has the following form\n+# 111a110i1diinnnndddd0pppn1mimmmm (vector form)\n+# 111a110s1diinnnndddd0pppn0mimmmm (S/D register form)\n+#\n+# Variants to test:\n+# - immediates that set each set of `i` to ones in turn.\n+# - each register set to something non-zero\n+#   (where each block of register sets is set to all-ones if possible)\n+# - coprocessor set to 7\n+.include \"cde-mve.s\"\n+.include \"cde-mve-or-neon.s\""
    },
    {
      "sha": "7ab3a819a7737e07e9f975946ee338c4bcaef4d1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-10  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* arm-dis.c (print_insn_cde): Define 'V' parse character.\n+\t(cde_opcodes): Add VCX* instructions.\n+\n 2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n \t    Matthew Malcomson  <matthew.malcomson@arm.com>\n "
    },
    {
      "sha": "b926b65d6a23ab5a3a7b543e3b0afefd1b673808",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5aae9ae97f65f6651cf91db856a1f8b4bef5e896/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=5aae9ae97f65f6651cf91db856a1f8b4bef5e896",
      "patch": "@@ -514,6 +514,27 @@ static const struct cdeopcode32 cde_opcodes[] =\n \t      0xee800040, 0xef800840,\n \t     \"cx3d%a\\t%p, %0-3S, %0-3T, %16-19n, %12-15n, #%4-5,7,20-22d\"),\n \n+  CDE_OPCODE (ARM_FEATURE_CORE_HIGH (ARM_EXT2_CDE),\n+\t      0xec200000, 0xeeb00840,\n+\t      \"vcx1%a\\t%p, %12-15,22V, #%0-5,7,16-19d\"),\n+  CDE_OPCODE (ARM_FEATURE_CORE_HIGH (ARM_EXT2_CDE),\n+\t      0xec200040, 0xeeb00840,\n+\t      \"vcx1%a\\t%p, %12-15,22V, #%0-5,7,16-19,24d\"),\n+\n+  CDE_OPCODE (ARM_FEATURE_CORE_HIGH (ARM_EXT2_CDE),\n+\t      0xec300000, 0xeeb00840,\n+\t      \"vcx2%a\\t%p, %12-15,22V, %0-3,5V, #%4,7,16-19d\"),\n+  CDE_OPCODE (ARM_FEATURE_CORE_HIGH (ARM_EXT2_CDE),\n+\t      0xec300040, 0xeeb00840,\n+\t      \"vcx2%a\\t%p, %12-15,22V, %0-3,5V, #%4,7,16-19,24d\"),\n+\n+  CDE_OPCODE (ARM_FEATURE_CORE_HIGH (ARM_EXT2_CDE),\n+\t      0xec800000, 0xee800840,\n+\t      \"vcx3%a\\t%p, %12-15,22V, %16-19,7V, %0-3,5V, #%4,20-21d\"),\n+  CDE_OPCODE (ARM_FEATURE_CORE_HIGH (ARM_EXT2_CDE),\n+\t      0xec800040, 0xee800840,\n+\t      \"vcx3%a\\t%p, %12-15,22V, %16-19,7V, %0-3,5V, #%4,20-21,24d\"),\n+\n   CDE_OPCODE (ARM_FEATURE_CORE_LOW (0), 0, 0, 0)\n \n };\n@@ -8920,6 +8941,25 @@ print_insn_cde (struct disassemble_info *info, long given, bfd_boolean thumb)\n \t\t    func (stream, \"%ld\", value);\n \t\t    break;\n \n+\t\t  case 'V':\n+\t\t    if (given & (1 << 6))\n+\t\t      func (stream, \"q%ld\", value >> 1);\n+\t\t    else if (given & (1 << 24))\n+\t\t      func (stream, \"d%ld\", value);\n+\t\t    else\n+\t\t      {\n+\t\t\t/* Encoding for S register is different than for D and\n+\t\t\t   Q registers.  S registers are encoded using the top\n+\t\t\t   single bit in position 22 as the lowest bit of the\n+\t\t\t   register number, while for Q and D it represents the\n+\t\t\t   highest bit of the register number.  */\n+\t\t\tuint8_t top_bit = (value >> 4) & 1;\n+\t\t\tuint8_t tmp = (value << 1) & 0x1e;\n+\t\t\tuint8_t res = tmp | top_bit;\n+\t\t\tfunc (stream, \"s%u\", res);\n+\t\t      }\n+\t\t    break;\n+\n \t\tdefault:\n \t\t  abort ();\n \t\t}"
    }
  ]
}