{
  "sha": "66d8c862859ab241c1db9b40c3981f8a71951bd4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjZkOGM4NjI4NTlhYjI0MWMxZGI5YjQwYzM5ODFmOGE3MTk1MWJkNA==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-05-31T12:00:47Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-06-03T19:59:18Z"
    },
    "message": "Improve usability and/or readibility of help and apropos output.\n\nThe \"help\" command can output long list of command names or classes.\nUse the title style to style the command names or classes to make\nthe output more readable.\n\nSimilarly, change \"apropos\" command to also style the command names.\n\nIt is sometimes unclear why \"apropos REGEXP\" lists some commands,\nand then the user has to manually do 'help command' for all commands\nlisted by \"apropos\" to see more details about the matching commands.\n\n=> Add an optional flag -v so that \"apropos -v REGEXP\":\n  * outputs the full documentation of matching commands.\n  * highlights the documentation parts matching REGEXP.",
    "tree": {
      "sha": "57fb3b62dd57ed6d13590367df2f482ead9bdb98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/57fb3b62dd57ed6d13590367df2f482ead9bdb98"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/66d8c862859ab241c1db9b40c3981f8a71951bd4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66d8c862859ab241c1db9b40c3981f8a71951bd4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/66d8c862859ab241c1db9b40c3981f8a71951bd4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66d8c862859ab241c1db9b40c3981f8a71951bd4/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "9303eb2fb1630678def10613c81215c2bd21d278",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9303eb2fb1630678def10613c81215c2bd21d278",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9303eb2fb1630678def10613c81215c2bd21d278"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 69,
    "deletions": 22
  },
  "files": [
    {
      "sha": "8619fd86156cee88d353ca62c51e461bbbf6dc6c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=66d8c862859ab241c1db9b40c3981f8a71951bd4",
      "patch": "@@ -1,3 +1,14 @@\n+2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* cli/cli-decode.h (apropos_cmd): Add verbose argument.\n+\t* cli/cli-decode.c (apropos_cmd): Likewise.  Use print_doc_of_command\n+\tinstead of print_help_for_command.\n+\t(print_doc_of_command): New function.\n+\t(help_list): Add 'apropos -v word' suggestion.\n+\t(print_help_for_command): Style the command name using title style.\n+\t* cli/cli-cmds.c (apropos_command): Parse optional -v flag.\n+\t(_initialize_cli_cmds): Describe -v in apropos_command help.\n+\n 2019-06-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* cli/cli-style.h (cli_style_option): Add name in constructor,"
    },
    {
      "sha": "09f932c2d218b2535b1a23fa91b7267393d2a79d",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=66d8c862859ab241c1db9b40c3981f8a71951bd4",
      "patch": "@@ -1376,16 +1376,21 @@ show_user (const char *args, int from_tty)\n /* Search through names of commands and documentations for a certain\n    regular expression.  */\n \n-static void \n-apropos_command (const char *searchstr, int from_tty)\n+static void\n+apropos_command (const char *arg, int from_tty)\n {\n-  if (searchstr == NULL)\n+  bool verbose = arg && check_for_argument (&arg, \"-v\", 2);\n+\n+  if (verbose)\n+    arg = skip_spaces (arg);\n+\n+  if (arg == NULL || *arg == '\\0')\n     error (_(\"REGEXP string is empty\"));\n \n-  compiled_regex pattern (searchstr, REG_ICASE,\n+  compiled_regex pattern (arg, REG_ICASE,\n \t\t\t  _(\"Error in regular expression\"));\n \n-  apropos_cmd (gdb_stdout, cmdlist, pattern, \"\");\n+  apropos_cmd (gdb_stdout, cmdlist, verbose, pattern, \"\");\n }\n \n /* Subroutine of alias_command to simplify it.\n@@ -1981,8 +1986,11 @@ Run the ``make'' program using the rest of the line as arguments.\"));\n Show definitions of non-python/scheme user defined commands.\\n\\\n Argument is the name of the user defined command.\\n\\\n With no argument, show definitions of all user defined commands.\"), &showlist);\n-  add_com (\"apropos\", class_support, apropos_command,\n-\t   _(\"Search for commands matching a REGEXP\"));\n+  add_com (\"apropos\", class_support, apropos_command, _(\"\\\n+Search for commands matching a REGEXP\\n\\\n+Usage: apropos [-v] REGEXP\\n\\\n+Flag -v indicates to produce a verbose output, showing full documentation\\n\\\n+of the matching commands.\"));\n \n   add_setshow_uinteger_cmd (\"max-user-call-depth\", no_class,\n \t\t\t   &max_user_call_depth, _(\"\\"
    },
    {
      "sha": "e59e0c70409235ac6a1d00ad186c491c1b7bfb7b",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 42,
      "deletions": 14,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=66d8c862859ab241c1db9b40c3981f8a71951bd4",
      "patch": "@@ -23,6 +23,7 @@\n #include \"ui-out.h\"\n #include \"cli/cli-cmds.h\"\n #include \"cli/cli-decode.h\"\n+#include \"cli/cli-style.h\"\n #include \"common/gdb_optional.h\"\n \n /* Prototypes for local functions.  */\n@@ -937,14 +938,42 @@ add_com_suppress_notification (const char *name, enum command_class theclass,\n \t\t\t\t\t&cmdlist, suppress_notification);\n }\n \n+/* If VERBOSE, print the full help for command C and highlight the\n+   documentation parts matching HIGHLIGHT,\n+   otherwise print only one-line help for command C.  */\n+\n+static void\n+print_doc_of_command (struct cmd_list_element *c, const char *prefix,\n+\t\t      bool verbose, compiled_regex &highlight,\n+\t\t      struct ui_file *stream)\n+{\n+  /* When printing the full documentation, add a line to separate\n+     this documentation from the previous command help, in the likely\n+     case that apropos finds several commands.  */\n+  if (verbose)\n+    fputs_filtered (\"\\n\", stream);\n+\n+  fprintf_styled (stream, title_style.style (),\n+\t\t  \"%s%s\", prefix, c->name);\n+  fputs_filtered (\" -- \", stream);\n+  if (verbose)\n+    fputs_highlighted (c->doc, highlight, stream);\n+  else\n+    print_doc_line (stream, c->doc);\n+  fputs_filtered (\"\\n\", stream);\n+}\n+\n /* Recursively walk the commandlist structures, and print out the\n    documentation of commands that match our regex in either their\n    name, or their documentation.\n+   If VERBOSE, prints the complete documentation and highlight the\n+   documentation parts matching REGEX, otherwise prints only\n+   the first line.\n */\n-void \n-apropos_cmd (struct ui_file *stream, \n+void\n+apropos_cmd (struct ui_file *stream,\n \t     struct cmd_list_element *commandlist,\n-\t     compiled_regex &regex, const char *prefix)\n+\t     bool verbose, compiled_regex &regex, const char *prefix)\n {\n   struct cmd_list_element *c;\n   int returnvalue;\n@@ -960,21 +989,15 @@ apropos_cmd (struct ui_file *stream,\n \t  /* Try to match against the name.  */\n \t  returnvalue = regex.search (c->name, name_len, 0, name_len, NULL);\n \t  if (returnvalue >= 0)\n-\t    {\n-\t      print_help_for_command (c, prefix, \n-\t\t\t\t      0 /* don't recurse */, stream);\n-\t    }\n+\t    print_doc_of_command (c, prefix, verbose, regex, stream);\n \t}\n       if (c->doc != NULL && returnvalue < 0)\n \t{\n \t  size_t doc_len = strlen (c->doc);\n \n \t  /* Try to match against documentation.  */\n \t  if (regex.search (c->doc, doc_len, 0, doc_len, NULL) >= 0)\n-\t    {\n-\t      print_help_for_command (c, prefix, \n-\t\t\t\t      0 /* don't recurse */, stream);\n-\t    }\n+\t    print_doc_of_command (c, prefix, verbose, regex, stream);\n \t}\n       /* Check if this command has subcommands and is not an\n \t abbreviation.  We skip listing subcommands of abbreviations\n@@ -983,7 +1006,7 @@ apropos_cmd (struct ui_file *stream,\n \t{\n \t  /* Recursively call ourselves on the subcommand list,\n \t     passing the right prefix in.  */\n-\t  apropos_cmd (stream,*c->prefixlist,regex,c->prefixname);\n+\t  apropos_cmd (stream, *c->prefixlist, verbose, regex, c->prefixname);\n \t}\n     }\n }\n@@ -1126,6 +1149,9 @@ Type \\\"help all\\\" for the list of all commands.\");\n   fputs_filtered (\"documentation.\\n\", stream);\n   fputs_filtered (\"Type \\\"apropos word\\\" to search \"\n \t\t  \"for commands related to \\\"word\\\".\\n\", stream);\n+  fputs_filtered (\"Type \\\"apropos -v word\\\" for full documentation\", stream);\n+  wrap_here (\"\");\n+  fputs_filtered (\" of commands related to \\\"word\\\".\\n\", stream);\n   fputs_filtered (\"Command name abbreviations are allowed if unambiguous.\\n\",\n \t\t  stream);\n }\n@@ -1212,10 +1238,12 @@ static void\n print_help_for_command (struct cmd_list_element *c, const char *prefix,\n \t\t\tint recurse, struct ui_file *stream)\n {\n-  fprintf_filtered (stream, \"%s%s -- \", prefix, c->name);\n+  fprintf_styled (stream, title_style.style (),\n+\t\t  \"%s%s\", prefix, c->name);\n+  fputs_filtered (\" -- \", stream);\n   print_doc_line (stream, c->doc);\n   fputs_filtered (\"\\n\", stream);\n-  \n+\n   if (recurse\n       && c->prefixlist != 0\n       && c->abbrev_flag == 0)"
    },
    {
      "sha": "a9f9cbfb31e2983470863a6b08b5f2d192202869",
      "filename": "gdb/cli/cli-decode.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/cli/cli-decode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d8c862859ab241c1db9b40c3981f8a71951bd4/gdb/cli/cli-decode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.h?ref=66d8c862859ab241c1db9b40c3981f8a71951bd4",
      "patch": "@@ -249,7 +249,7 @@ extern void help_cmd_list (struct cmd_list_element *, enum command_class,\n extern void help_cmd (const char *, struct ui_file *);\n \n extern void apropos_cmd (struct ui_file *, struct cmd_list_element *,\n-                         compiled_regex &, const char *);\n+\t\t\t bool verbose, compiled_regex &, const char *);\n \n /* Used to mark commands that don't do anything.  If we just leave the\n    function field NULL, the command is interpreted as a help topic, or"
    }
  ]
}