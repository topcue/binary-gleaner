{
  "sha": "54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTRjNDdkZmI2OGE1ZTJjZmRlNWZlYzcyMjRiMGY5MmIxMmVkYzQyYw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-16T02:37:38Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-20T02:41:05Z"
    },
    "message": "sim: ppc: rename inline defines to match common code\n\nUse the same basic names as the common sim inline logic so we can\nmerge the two.  We don't do that here, just prepare for it.\n\nThe common code seems to be based on the ppc version but with slightly\ndifferent names as it was cleaned up & generalized.  I *think* these\nconcepts are the same, so binding them together is OK, but maybe I'm\nmisreading them.  If so, can always tweak them later.\n\tREVEAL_MODULE  ->  H_REVEALS_MODULE\n\tINLINE_MODULE  ->  C_REVEALS_MODULE",
    "tree": {
      "sha": "e447e1560ec9ace125b4e26dbe16efbd638d9ca8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e447e1560ec9ace125b4e26dbe16efbd638d9ca8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36842f65be97ba702ef574af6290bd327df64886",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36842f65be97ba702ef574af6290bd327df64886",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/36842f65be97ba702ef574af6290bd327df64886"
    }
  ],
  "stats": {
    "total": 116,
    "additions": 64,
    "deletions": 52
  },
  "files": [
    {
      "sha": "ec248cb48ddbf347b76d31bb14cfb375a445af2d",
      "filename": "sim/ppc/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog?ref=54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
      "patch": "@@ -1,3 +1,16 @@\n+2021-06-19  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Replace ALL_INLINE with ALL_C_INLINE and\n+\tPSIM_INLINE_LOCALS with INLINE_LOCALS.\n+\t* inline.h: Likewise.\n+\t* options.c: Likewise.\n+\t* std-config.h: Likewise.  Include sim-inline.h explicitly.\n+\t(REVEAL_MODULE): Define to H_REVEALS_MODULE.\n+\t(INLINE_MODULE): Define to C_REVEALS_MODULE.\n+\t(PSIM_INLINE_LOCALS): Delete.\n+\t(ALL_INLINE): Delete.\n+\t* configure: Regenerate.\n+\n 2021-06-19  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in: Move intl vars to ../arch-subdir.mk.in."
    },
    {
      "sha": "6228d17ddea948adebbda7f3d4ea76437b2fc2b7",
      "filename": "sim/ppc/configure",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure?ref=54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
      "patch": "@@ -3311,15 +3311,15 @@ if test \"${enable_sim_inline+set}\" = set; then :\n case \"$enableval\" in\n   no)\t\tsim_inline=\"-DDEFAULT_INLINE=0\";;\n   0)\t\tsim_inline=\"-DDEFAULT_INLINE=0\";;\n-  yes | 2)\tsim_inline=\"-DDEFAULT_INLINE=ALL_INLINE\";;\n-  1)\t\tsim_inline=\"-DDEFAULT_INLINE=PSIM_INLINE_LOCALS\";;\n+  yes | 2)\tsim_inline=\"-DDEFAULT_INLINE=ALL_C_INLINE\";;\n+  1)\t\tsim_inline=\"-DDEFAULT_INLINE=INLINE_LOCALS\";;\n   *) for x in `echo \"$enableval\" | sed -e \"s/,/ /g\"`; do\n        new_flag=\"\"\n        case \"$x\" in\n \t *_INLINE=*)\tnew_flag=\"-D$x\";;\n \t *=*)\t\tnew_flag=`echo \"$x\" | sed -e \"s/=/_INLINE=/\" -e \"s/^/-D/\"`;;\n-\t *_INLINE)\tnew_flag=\"-D$x=ALL_INLINE\";;\n-\t *)\t\tnew_flag=\"-D$x\"\"_INLINE=ALL_INLINE\";;\n+\t *_INLINE)\tnew_flag=\"-D$x=ALL_C_INLINE\";;\n+\t *)\t\tnew_flag=\"-D$x\"\"_INLINE=ALL_C_INLINE\";;\n        esac\n        if test x\"$sim_inline\" = x\"\"; then\n \t sim_inline=\"$new_flag\"\n@@ -3333,7 +3333,7 @@ if test x\"$silent\" != x\"yes\" && test x\"$sim_inline\" != x\"\"; then\n fi\n else\n   if test x\"$GCC\" != \"\"; then\n-  sim_inline=\"-DDEFAULT_INLINE=PSIM_INLINE_LOCALS\"\n+  sim_inline=\"-DDEFAULT_INLINE=INLINE_LOCALS\"\n   if test x\"$silent\" != x\"yes\"; then\n     echo \"Setting inline flags = $sim_inline\" 6>&1\n   fi"
    },
    {
      "sha": "19dbd77bda917342a0e6dd15eb54b35a295e99f4",
      "filename": "sim/ppc/configure.ac",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure.ac?ref=54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
      "patch": "@@ -275,15 +275,15 @@ AC_ARG_ENABLE(sim-inline,\n case \"$enableval\" in\n   no)\t\tsim_inline=\"-DDEFAULT_INLINE=0\";;\n   0)\t\tsim_inline=\"-DDEFAULT_INLINE=0\";;\n-  yes | 2)\tsim_inline=\"-DDEFAULT_INLINE=ALL_INLINE\";;\n-  1)\t\tsim_inline=\"-DDEFAULT_INLINE=PSIM_INLINE_LOCALS\";;\n+  yes | 2)\tsim_inline=\"-DDEFAULT_INLINE=ALL_C_INLINE\";;\n+  1)\t\tsim_inline=\"-DDEFAULT_INLINE=INLINE_LOCALS\";;\n   *) for x in `echo \"$enableval\" | sed -e \"s/,/ /g\"`; do\n        new_flag=\"\"\n        case \"$x\" in\n \t *_INLINE=*)\tnew_flag=\"-D$x\";;\n \t *=*)\t\tnew_flag=`echo \"$x\" | sed -e \"s/=/_INLINE=/\" -e \"s/^/-D/\"`;;\n-\t *_INLINE)\tnew_flag=\"-D$x=ALL_INLINE\";;\n-\t *)\t\tnew_flag=\"-D$x\"\"_INLINE=ALL_INLINE\";;\n+\t *_INLINE)\tnew_flag=\"-D$x=ALL_C_INLINE\";;\n+\t *)\t\tnew_flag=\"-D$x\"\"_INLINE=ALL_C_INLINE\";;\n        esac\n        if test x\"$sim_inline\" = x\"\"; then\n \t sim_inline=\"$new_flag\"\n@@ -295,7 +295,7 @@ esac\n if test x\"$silent\" != x\"yes\" && test x\"$sim_inline\" != x\"\"; then\n   echo \"Setting inline flags = $sim_inline\" 6>&1\n fi],[if test x\"$GCC\" != \"\"; then\n-  sim_inline=\"-DDEFAULT_INLINE=PSIM_INLINE_LOCALS\"\n+  sim_inline=\"-DDEFAULT_INLINE=INLINE_LOCALS\"\n   if test x\"$silent\" != x\"yes\"; then\n     echo \"Setting inline flags = $sim_inline\" 6>&1\n   fi"
    },
    {
      "sha": "da0bd5cf7eb76ae1f8b101d1ebda55069c15bc33",
      "filename": "sim/ppc/inline.h",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/inline.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/inline.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/inline.h?ref=54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
      "patch": "@@ -41,7 +41,7 @@\n # define EXTERN_PSIM_ENDIAN(TYPE) TYPE\n #endif\n \n-#if (SIM_ENDIAN_INLINE & PSIM_INLINE_LOCALS)\n+#if (SIM_ENDIAN_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_PSIM_ENDIAN(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_PSIM_ENDIAN(TYPE) static TYPE\n@@ -63,7 +63,7 @@\n # define EXTERN_BITS(TYPE) TYPE\n #endif\n \n-#if (BITS_INLINE & PSIM_INLINE_LOCALS)\n+#if (BITS_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_BITS(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_BITS(TYPE) static TYPE\n@@ -85,7 +85,7 @@\n # define EXTERN_CORE(TYPE) TYPE\n #endif\n \n-#if (CORE_INLINE & PSIM_INLINE_LOCALS)\n+#if (CORE_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_CORE(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_CORE(TYPE) static TYPE\n@@ -107,7 +107,7 @@\n # define EXTERN_VM(TYPE) TYPE\n #endif\n \n-#if (VM_INLINE & PSIM_INLINE_LOCALS)\n+#if (VM_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_VM(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_VM(TYPE) static TYPE\n@@ -129,7 +129,7 @@\n # define EXTERN_CPU(TYPE) TYPE\n #endif\n \n-#if (CPU_INLINE & PSIM_INLINE_LOCALS)\n+#if (CPU_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_CPU(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_CPU(TYPE) static TYPE\n@@ -151,7 +151,7 @@\n # define EXTERN_MODEL(TYPE) TYPE\n #endif\n \n-#if (MODEL_INLINE & PSIM_INLINE_LOCALS)\n+#if (MODEL_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_MODEL(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_MODEL(TYPE) static TYPE\n@@ -173,7 +173,7 @@\n # define EXTERN_EVENTS(TYPE) TYPE\n #endif\n \n-#if (EVENTS_INLINE & PSIM_INLINE_LOCALS)\n+#if (EVENTS_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_EVENTS(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_EVENTS(TYPE) static TYPE\n@@ -195,7 +195,7 @@\n # define EXTERN_MON(TYPE) TYPE\n #endif\n \n-#if (MON_INLINE & PSIM_INLINE_LOCALS)\n+#if (MON_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_MON(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_MON(TYPE) static TYPE\n@@ -217,7 +217,7 @@\n # define EXTERN_REGISTERS(TYPE) TYPE\n #endif\n \n-#if (REGISTERS_INLINE & PSIM_INLINE_LOCALS)\n+#if (REGISTERS_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_REGISTERS(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_REGISTERS(TYPE) static TYPE\n@@ -239,7 +239,7 @@\n # define EXTERN_INTERRUPTS(TYPE) TYPE\n #endif\n \n-#if (INTERRUPTS_INLINE & PSIM_INLINE_LOCALS)\n+#if (INTERRUPTS_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_INTERRUPTS(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_INTERRUPTS(TYPE) static TYPE\n@@ -261,7 +261,7 @@\n # define EXTERN_DEVICE(TYPE) TYPE\n #endif\n \n-#if (DEVICE_INLINE & PSIM_INLINE_LOCALS)\n+#if (DEVICE_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_DEVICE(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_DEVICE(TYPE) static TYPE\n@@ -283,7 +283,7 @@\n # define EXTERN_TREE(TYPE) TYPE\n #endif\n \n-#if (TREE_INLINE & PSIM_INLINE_LOCALS)\n+#if (TREE_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_TREE(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_TREE(TYPE) static TYPE\n@@ -305,7 +305,7 @@\n # define EXTERN_SPREG(TYPE) TYPE\n #endif\n \n-#if (SPREG_INLINE & PSIM_INLINE_LOCALS)\n+#if (SPREG_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_SPREG(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_SPREG(TYPE) static TYPE\n@@ -328,7 +328,7 @@\n #endif\n \n #if 0 /* this isn't used */\n-#if (SEMANTICS_INLINE & PSIM_INLINE_LOCALS)\n+#if (SEMANTICS_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_SEMANTICS(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_SEMANTICS(TYPE) static TYPE\n@@ -352,7 +352,7 @@\n #endif\n \n #if 0 /* this isn't used */\n-#if (IDECODE_INLINE & PSIM_INLINE_LOCALS)\n+#if (IDECODE_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_IDECODE(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_IDECODE(TYPE) static TYPE\n@@ -376,7 +376,7 @@\n #endif\n \n #if 0 /* this isn't used */\n-#if (ICACHE_INLINE & PSIM_INLINE_LOCALS)\n+#if (ICACHE_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_ICACHE(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_ICACHE(TYPE) static TYPE\n@@ -400,7 +400,7 @@\n #endif\n \n #if 0 /* this isn't used */\n-#if (SUPPORT_INLINE & PSIM_INLINE_LOCALS)\n+#if (SUPPORT_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_SUPPORT(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_SUPPORT(TYPE) static TYPE\n@@ -423,7 +423,7 @@\n # define EXTERN_OPTIONS(TYPE) TYPE\n #endif\n \n-#if (OPTIONS_INLINE & PSIM_INLINE_LOCALS)\n+#if (OPTIONS_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_OPTIONS(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_OPTIONS(TYPE) static TYPE\n@@ -445,7 +445,7 @@\n # define EXTERN_OS_EMUL(TYPE) TYPE\n #endif\n \n-#if (OS_EMUL_INLINE & PSIM_INLINE_LOCALS)\n+#if (OS_EMUL_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_OS_EMUL(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_OS_EMUL(TYPE) static TYPE\n@@ -467,7 +467,7 @@\n # define EXTERN_PSIM(TYPE) TYPE\n #endif\n \n-#if (PSIM_INLINE & PSIM_INLINE_LOCALS)\n+#if (PSIM_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_PSIM(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_PSIM(TYPE) static TYPE\n@@ -489,7 +489,7 @@\n # define EXTERN_CAP(TYPE) TYPE\n #endif\n \n-#if (CAP_INLINE & PSIM_INLINE_LOCALS)\n+#if (CAP_INLINE & INLINE_LOCALS)\n # define STATIC_INLINE_CAP(TYPE) static INLINE TYPE\n #else\n # define STATIC_INLINE_CAP(TYPE) static TYPE"
    },
    {
      "sha": "8aefcb16a6a300ed91b30f4131752750fd6d9148",
      "filename": "sim/ppc/options.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/options.c?ref=54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
      "patch": "@@ -97,10 +97,10 @@ options_inline (int in)\n   case /*1*/ REVEAL_MODULE:\t\t\treturn \"REVEAL_MODULE\";\n   case /*2*/ INLINE_MODULE:\t\t\treturn \"INLINE_MODULE\";\n   case /*3*/ REVEAL_MODULE|INLINE_MODULE:\treturn \"REVEAL_MODULE|INLINE_MODULE\";\n-  case /*4*/ PSIM_INLINE_LOCALS:\t\treturn \"PSIM_LOCALS_INLINE\";\n-  case /*5*/ PSIM_INLINE_LOCALS|REVEAL_MODULE:\treturn \"PSIM_INLINE_LOCALS|REVEAL_MODULE\";\n-  case /*6*/ PSIM_INLINE_LOCALS|INLINE_MODULE:\treturn \"PSIM_INLINE_LOCALS|INLINE_MODULE\";\n-  case /*7*/ ALL_INLINE:\t\t\treturn \"ALL_INLINE\";\n+  case /*4*/ INLINE_LOCALS:\t\t\treturn \"INLINE_LOCALS\";\n+  case /*5*/ INLINE_LOCALS|REVEAL_MODULE:\treturn \"INLINE_LOCALS|REVEAL_MODULE\";\n+  case /*6*/ INLINE_LOCALS|INLINE_MODULE:\treturn \"INLINE_LOCALS|INLINE_MODULE\";\n+  case /*7*/ ALL_C_INLINE:\t\t\treturn \"ALL_C_INLINE\";\n   }\n   return \"0\";\n }"
    },
    {
      "sha": "75aaa58815666048f75673a2871020a6897c546d",
      "filename": "sim/ppc/std-config.h",
      "status": "modified",
      "additions": 16,
      "deletions": 17,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/std-config.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54c47dfb68a5e2cfde5fec7224b0f92b12edc42c/sim/ppc/std-config.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/std-config.h?ref=54c47dfb68a5e2cfde5fec7224b0f92b12edc42c",
      "patch": "@@ -309,15 +309,15 @@ extern int current_stdio;\n          the module is included into a file being compiled, calls to\n \t its funtions can be eliminated. 2 implies 1.\n \n-      PSIM_INLINE_LOCALS:\n+      INLINE_LOCALS:\n \n          Make internal (static) functions within the module `inline'.\n \n    The following abreviations are available:\n \n       INCLUDE_MODULE == (REVEAL_MODULE | INLINE_MODULE)\n \n-      ALL_INLINE == (REVEAL_MODULE | INLINE_MODULE | PSIM_INLINE_LOCALS)\n+      ALL_C_INLINE == (REVEAL_MODULE | INLINE_MODULE | INLINE_LOCALS)\n \n    In addition to this, modules have been put into two categories.\n \n@@ -415,11 +415,10 @@ extern int current_stdio;\n \n    */\n \n-#define REVEAL_MODULE\t\t\t1\n-#define INLINE_MODULE\t\t\t2\n+#include \"../common/sim-inline.h\"\n+#define REVEAL_MODULE\t\t\tH_REVEALS_MODULE\n+#define INLINE_MODULE\t\t\tC_REVEALS_MODULE\n #define INCLUDE_MODULE\t\t\t(INLINE_MODULE | REVEAL_MODULE)\n-#define PSIM_INLINE_LOCALS\t\t\t4\n-#define ALL_INLINE\t\t\t7\n \n /* Your compilers inline reserved word */\n \n@@ -441,7 +440,7 @@ extern int current_stdio;\n /* Default macro to simplify control several of key the inlines */\n \n #ifndef DEFAULT_INLINE\n-#define\tDEFAULT_INLINE\t\t\tPSIM_INLINE_LOCALS\n+#define\tDEFAULT_INLINE\t\t\tINLINE_LOCALS\n #endif\n \n /* Code that converts between hosts and target byte order.  Used on\n@@ -450,21 +449,21 @@ extern int current_stdio;\n    can inline for all callers */\n \n #ifndef SIM_ENDIAN_INLINE\n-#define SIM_ENDIAN_INLINE\t\t(DEFAULT_INLINE ? ALL_INLINE : 0)\n+#define SIM_ENDIAN_INLINE\t\t(DEFAULT_INLINE ? ALL_C_INLINE : 0)\n #endif\n \n /* Low level bit manipulation routines. This module can inline for all\n    callers */\n \n #ifndef BITS_INLINE\n-#define BITS_INLINE\t\t\t(DEFAULT_INLINE ? ALL_INLINE : 0)\n+#define BITS_INLINE\t\t\t(DEFAULT_INLINE ? ALL_C_INLINE : 0)\n #endif\n \n /* Code that gives access to various CPU internals such as registers.\n    Used every time an instruction is executed */\n \n #ifndef CPU_INLINE\n-#define CPU_INLINE\t\t\t(DEFAULT_INLINE ? ALL_INLINE : 0)\n+#define CPU_INLINE\t\t\t(DEFAULT_INLINE ? ALL_C_INLINE : 0)\n #endif\n \n /* Code that translates between an effective and real address.  Used\n@@ -485,14 +484,14 @@ extern int current_stdio;\n    Called once per instruction cycle */\n \n #ifndef EVENTS_INLINE\n-#define EVENTS_INLINE\t\t\t(DEFAULT_INLINE ? ALL_INLINE : 0)\n+#define EVENTS_INLINE\t\t\t(DEFAULT_INLINE ? ALL_C_INLINE : 0)\n #endif\n \n /* Code monotoring the processors performance.  It counts events on\n    every instruction cycle */\n \n #ifndef MON_INLINE\n-#define MON_INLINE\t\t\t(DEFAULT_INLINE ? ALL_INLINE : 0)\n+#define MON_INLINE\t\t\t(DEFAULT_INLINE ? ALL_C_INLINE : 0)\n #endif\n \n /* Code called on the rare occasions that an interrupt occures. */\n@@ -515,15 +514,15 @@ extern int current_stdio;\n    a jump table. */\n \n #ifndef DEVICE_INLINE\n-#define DEVICE_INLINE\t\t\t(DEFAULT_INLINE ? PSIM_INLINE_LOCALS : 0)\n+#define DEVICE_INLINE\t\t\t(DEFAULT_INLINE ? INLINE_LOCALS : 0)\n #endif\n \n /* Code called used while the device tree is being built.\n \n    Inlining this is of no benefit */\n \n #ifndef TREE_INLINE\n-#define TREE_INLINE\t\t\t(DEFAULT_INLINE ? PSIM_INLINE_LOCALS : 0)\n+#define TREE_INLINE\t\t\t(DEFAULT_INLINE ? INLINE_LOCALS : 0)\n #endif\n \n /* Code called whenever information on a Special Purpose Register is\n@@ -563,7 +562,7 @@ extern int current_stdio;\n    code is reduced. */\n \n #ifndef SUPPORT_INLINE\n-#define SUPPORT_INLINE\t\t\tPSIM_INLINE_LOCALS\n+#define SUPPORT_INLINE\t\t\tINLINE_LOCALS\n #endif\n \n /* Model specific code used in simulating functional units.  Note, it actaully\n@@ -588,13 +587,13 @@ extern int current_stdio;\n    into this file */\n \n #ifndef IDECOCE_INLINE\n-#define IDECODE_INLINE\t\t\tPSIM_INLINE_LOCALS\n+#define IDECODE_INLINE\t\t\tINLINE_LOCALS\n #endif\n \n /* psim, isn't actually inlined */\n \n #ifndef PSIM_INLINE\n-#define PSIM_INLINE\t\t\tPSIM_INLINE_LOCALS\n+#define PSIM_INLINE\t\t\tINLINE_LOCALS\n #endif\n \n /* Code to emulate os or rom compatibility.  This code is called via a"
    }
  ]
}