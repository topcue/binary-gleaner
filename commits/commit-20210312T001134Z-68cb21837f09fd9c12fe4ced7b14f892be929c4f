{
  "sha": "68cb21837f09fd9c12fe4ced7b14f892be929c4f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjhjYjIxODM3ZjA5ZmQ5YzEyZmU0Y2VkN2IxNGY4OTJiZTkyOWM0Zg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-11T11:10:02Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-12T00:11:34Z"
    },
    "message": "PE image base fallout\n\nFixes x86_64-w64-mingw32 tests that failed with the recent diagnosis\nfor out of range RVA, and a couple of other gc-sections tests that failed\nfor other reasons.\n\n\t* testsuite/ld-gc/gc.exp: Pass \"-image-base 0\" to ld for PE, and\n\tarrange to define __main for some run_dump_test tests.\n\t* testsuite/ld-gc/pr13683.d: Accept more symbols.\n\t* testsuite/ld-gc/pr14265.d: Likewise, and ordering.\n\t* testsuite/ld-scripts/crossref.exp: Pass \"-image-base 0\" to ld for PE.\n\t* testsuite/ld-srec/srec.exp: Likewise.\n\t* testsuite/lib/ld-lib.exp (ld_link_defsyms): Use is_pecoff_format.",
    "tree": {
      "sha": "2aac19510c37a1f4cc14fca7a0be91f2a7091ac8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2aac19510c37a1f4cc14fca7a0be91f2a7091ac8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68cb21837f09fd9c12fe4ced7b14f892be929c4f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68cb21837f09fd9c12fe4ced7b14f892be929c4f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68cb21837f09fd9c12fe4ced7b14f892be929c4f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68cb21837f09fd9c12fe4ced7b14f892be929c4f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1e1e17e5e2395bb94a9c0062c1cb991d1eecd04c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e1e17e5e2395bb94a9c0062c1cb991d1eecd04c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1e1e17e5e2395bb94a9c0062c1cb991d1eecd04c"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 53,
    "deletions": 21
  },
  "files": [
    {
      "sha": "acb8aabc991345aec84eb05fbbca65fde330a293",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=68cb21837f09fd9c12fe4ced7b14f892be929c4f",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-gc/gc.exp: Pass \"-image-base 0\" to ld for PE, and\n+\tarrange to define __main for some run_dump_test tests.\n+\t* testsuite/ld-gc/pr13683.d: Accept more symbols.\n+\t* testsuite/ld-gc/pr14265.d: Likewise, and ordering.\n+\t* testsuite/ld-scripts/crossref.exp: Pass \"-image-base 0\" to ld for PE.\n+\t* testsuite/ld-srec/srec.exp: Likewise.\n+\t* testsuite/lib/ld-lib.exp (ld_link_defsyms): Use is_pecoff_format.\n+\n 2021-03-11  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* emultempl/riscvelf.em (after_allocation): Run ldelf_map_segments"
    },
    {
      "sha": "298f2d48406127f58b6d0c5292c34c93eb707230",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 10,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=68cb21837f09fd9c12fe4ced7b14f892be929c4f",
      "patch": "@@ -54,6 +54,9 @@ proc test_gc { testname filename linker ldflags} {\n \n     set outfile \"tmpdir/$filename\"\n     set options \"-L$srcdir/$subdir\"\n+    if [is_pecoff_format] {\n+\tappend ldflags \" --image-base 0\"\n+    }\n     append options \" \" $ldflags \" \" [ld_link_defsyms] \" \" $objfile\n \n     if ![ld_link $linker $outfile $options] {\n@@ -86,9 +89,13 @@ test_gc \"Check --gc-section/-q\" \"gcrexe\" $ld \"--gc-sections -q -e main\"\n test_gc \"Check --gc-section/-r/-e\" \"gcrel\" $ld \"-r --gc-sections -e main\"\n test_gc \"Check --gc-section/-r/-u\" \"gcrel\" $ld \"-r --gc-sections -u used_func\"\n \n+set old_ldflags $LDFLAGS\n+if [is_pecoff_format] {\n+    append LDFLAGS \" --image-base 0\"\n+}\n set old_asflags $ASFLAGS\n if [is_underscore_target] {\n-    set ASFLAGS \"$ASFLAGS --defsym UNDERSCORE=1\"\n+    append ASFLAGS \" --defsym UNDERSCORE=1\"\n }\n \n run_dump_test \"noent\"\n@@ -111,7 +118,7 @@ if { [is_elf_format] && [check_shared_lib_support] } then {\n \tset gasopt \"-mpic -mpid=near\"\n     }\n     # These targets do not default to linking with shared libraries.\n-    set old_ldflags $LDFLAGS\n+    set save_ldflags $LDFLAGS\n     if { [istarget \"mips*vr4100*-*-elf*\"] \\\n \t || [istarget \"mips*vr4300*-*-elf*\"] \\\n \t || [istarget \"mips*vr5000*-*-elf*\"] } {\n@@ -130,7 +137,7 @@ if { [is_elf_format] && [check_shared_lib_support] } then {\n     } else {\n \trun_dump_test \"pr20022\"\n     }\n-    set LDFLAGS $old_ldflags\n+    set LDFLAGS $save_ldflags\n }\n \n if { [check_compiler_available] } {\n@@ -144,25 +151,28 @@ if { [check_compiler_available] } {\n     }\n }\n \n+set symdefs \"\"\n+if [is_pecoff_format] {\n+    set symdefs {{ld {--defsym __main=main --defsym ___main=main}}}\n+}\n+\n if { [check_compiler_available] } {\n-\tld_compile \"$CC $CFLAGS $cflags\" $srcdir/$subdir/pr13683.c tmpdir/pr13683.o\n-\trun_dump_test \"pr13683\"\n+    ld_compile \"$CC $CFLAGS $cflags\" $srcdir/$subdir/pr13683.c tmpdir/pr13683.o\n+    run_dump_test \"pr13683\" $symdefs\n }\n \n if { [check_compiler_available] } {\n     ld_compile \"$CC $CFLAGS $cflags $NOPIE_CFLAGS\" $srcdir/$subdir/pr14265.c tmpdir/pr14265.o\n-    run_dump_test \"pr14265\"\n+    run_dump_test \"pr14265\" $symdefs\n }\n \n if { [check_compiler_available] } {\n     ld_compile \"$CC $CFLAGS $cflags -O0\" $srcdir/$subdir/pr19161-1.c tmpdir/pr19161-1.o\n     ld_compile \"$CC $CFLAGS $cflags -O0\" $srcdir/$subdir/pr19161-2.c tmpdir/pr19161-2.o\n-    set saved_LDFLAGS \"$LDFLAGS\"\n     if [istarget hppa*-*-linux*] {\n-\tset LDFLAGS \"$LDFLAGS --defsym '\\$\\$dyncall=0'\"\n+\tset symdefs {{ld {--defsym '\\$\\$dyncall=0'}}}\n     }\n-    run_dump_test \"pr19161\"\n-    set LDFLAGS \"$saved_LDFLAGS\"\n+    run_dump_test \"pr19161\" $symdefs\n }\n \n if { [is_elf_format] && [check_shared_lib_support] \\\n@@ -185,3 +195,4 @@ if { [is_elf_format] } then {\n }\n \n set ASFLAGS $old_asflags\n+set LDFLAGS $old_ldflags"
    },
    {
      "sha": "2c4d424e05f9e4285d22180db98f13090e793452",
      "filename": "ld/testsuite/ld-gc/pr13683.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-gc/pr13683.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-gc/pr13683.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/pr13683.d?ref=68cb21837f09fd9c12fe4ced7b14f892be929c4f",
      "patch": "@@ -8,5 +8,6 @@\n \n #...\n 0*[1-9a-f]+[0-9a-f]*[ \t](T|D)[ \t]_*foo\n+#...\n 0*[1-9a-f]+[0-9a-f]*[ \t](T|D)[ \t]_*foo2\n #..."
    },
    {
      "sha": "70896eb1f783ad72df1190ed150831155412a892",
      "filename": "ld/testsuite/ld-gc/pr14265.d",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-gc/pr14265.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-gc/pr14265.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/pr14265.d?ref=68cb21837f09fd9c12fe4ced7b14f892be929c4f",
      "patch": "@@ -4,12 +4,15 @@\n #nm: --format=bsd --numeric-sort\n \n #...\n-[0-9a-f]+[ \t][dD][ \t]_*foo1_start\n+[0-9a-f]+ ([dD] _*foo1_start|D _*foo1)\n #...\n-[0-9a-f]+[ \t]D[ \t]_*foo1\n+[0-9a-f]+ (D _*foo1|[dD] _*foo1_start)\n #...\n-[0-9a-f]+[ \t][dD][ \t]_*foo1_end\n-[0-9a-f]+[ \t][dD][ \t]_*foo2_start\n-[0-9a-f]+[ \t]D[ \t]_*foo2\n-[0-9a-f]+[ \t][dD][ \t]_*foo2_end\n+[0-9a-f]+ [dD] _*foo1_end\n+#...\n+[0-9a-f]+ ([dD] _*foo2_start|D _*foo2)\n+#...\n+[0-9a-f]+ (D _*foo2|[dD] _*foo2_start)\n+#...\n+[0-9a-f]+ [dD] _*foo2_end\n #..."
    },
    {
      "sha": "4eaafcc0f250bf791188af588d91752be22a4672",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=68cb21837f09fd9c12fe4ced7b14f892be929c4f",
      "patch": "@@ -76,7 +76,11 @@ set flags [big_or_little_endian]\n \n # arc-elf32 requires the symbol __SDATA_BEGIN__ to always be present.\n if [istarget arc*-*-elf32] {\n-    set flags \"$flags --defsym=__SDATA_BEGIN__=0\"\n+    append flags \" --defsym __SDATA_BEGIN__=0\"\n+}\n+\n+if [is_pecoff_format] {\n+    append flags \" --image-base 0\"\n }\n \n set exec_output [run_host_cmd \"$ld\" \"$flags -o tmpdir/cross1 -T $srcdir/$subdir/cross1.t tmpdir/cross1.o tmpdir/cross2.o\"]"
    },
    {
      "sha": "c8d561b87a3eddf58f9f5a3d7fb87de0023791a5",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=68cb21837f09fd9c12fe4ced7b14f892be929c4f",
      "patch": "@@ -238,7 +238,10 @@ proc run_srec_test { test objs } {\n     # poorly with a.out.\n \n     if { $sizeof_headers } {\n-\tset flags \"$flags -Ttext 0x1000\"\n+\tappend flags \" -Ttext 0x1000\"\n+\tif [is_pecoff_format] {\n+\t    append flags \" --image-base 0\"\n+\t}\n     }\n \n     # ARM targets cannot convert format in the linker\n@@ -295,12 +298,12 @@ proc run_srec_test { test objs } {\n \n     # Xtensa ELF targets relax by default; S-Record linker does not\n     if [istarget xtensa*-*-*] {\n-\tset flags \"$flags -no-relax\"\n+\tappend flags \" -no-relax\"\n     }\n \n     # PRU ELF target relaxes by default; S-Record linker does not\n     if [istarget pru*-*-*] {\n-\tset flags \"$flags -no-relax\"\n+\tappend flags \" -no-relax\"\n     }\n \n     if { ![ld_link $ld tmpdir/sr1 \"$flags $objs\"] \\"
    },
    {
      "sha": "a56c945f9b1d5f694870277ad0b9c5c980a53ca3",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68cb21837f09fd9c12fe4ced7b14f892be929c4f/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=68cb21837f09fd9c12fe4ced7b14f892be929c4f",
      "patch": "@@ -380,7 +380,7 @@ proc ld_link_defsyms {} {\n     }\n \n     # Windows targets need __main, some prefixed with underscore.\n-    if {[istarget *-*-cygwin* ] || [istarget *-*-mingw*]} {\n+    if [is_pecoff_format] {\n \tappend flags \" --defsym __main=main --defsym ___main=main\"\n     }\n "
    }
  ]
}