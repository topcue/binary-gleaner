{
  "sha": "246994051b6659bf9f4c89b5d5ede86717c5bbef",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjQ2OTk0MDUxYjY2NTliZjlmNGM4OWI1ZDVlZGU4NjcxN2M1YmJlZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-01T21:09:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:52Z"
    },
    "message": "Convert coffread.c to type-safe registry API\n\nThis changes coffread.c to use the type-safe registry API.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* coffread.c (struct coff_symfile_info): Add initializers.\n\t(coff_objfile_data_key): Move lower.  Change type.\n\t(coff_symfile_init, coff_symfile_read, _initialize_coffread):\n\tUpdate.\n\t(coff_free_info): Remove.",
    "tree": {
      "sha": "9fdeeed3a25382470c5dadb0cf30efa942ea001c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9fdeeed3a25382470c5dadb0cf30efa942ea001c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/246994051b6659bf9f4c89b5d5ede86717c5bbef",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/246994051b6659bf9f4c89b5d5ede86717c5bbef",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/246994051b6659bf9f4c89b5d5ede86717c5bbef",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/246994051b6659bf9f4c89b5d5ede86717c5bbef/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4e05d2fea956e65618fc12c57fb81e8788ef07d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4e05d2fea956e65618fc12c57fb81e8788ef07d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4e05d2fea956e65618fc12c57fb81e8788ef07d"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 20,
    "deletions": 26
  },
  "files": [
    {
      "sha": "5677e336351e0e8fc31d7012fee894bd74159105",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/246994051b6659bf9f4c89b5d5ede86717c5bbef/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/246994051b6659bf9f4c89b5d5ede86717c5bbef/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=246994051b6659bf9f4c89b5d5ede86717c5bbef",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* coffread.c (struct coff_symfile_info): Add initializers.\n+\t(coff_objfile_data_key): Move lower.  Change type.\n+\t(coff_symfile_init, coff_symfile_read, _initialize_coffread):\n+\tUpdate.\n+\t(coff_free_info): Remove.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* fbsd-tdep.c (struct fbsd_pspace_data): Add initializers."
    },
    {
      "sha": "0956f3897b43befe182515af4238fabd780aef7d",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 12,
      "deletions": 26,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/246994051b6659bf9f4c89b5d5ede86717c5bbef/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/246994051b6659bf9f4c89b5d5ede86717c5bbef/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=246994051b6659bf9f4c89b5d5ede86717c5bbef",
      "patch": "@@ -43,26 +43,26 @@\n #include \"psymtab.h\"\n #include \"build-id.h\"\n \n-/* Key for COFF-associated data.  */\n-\n-static const struct objfile_data *coff_objfile_data_key;\n-\n /* The objfile we are currently reading.  */\n \n static struct objfile *coffread_objfile;\n \n struct coff_symfile_info\n   {\n-    file_ptr min_lineno_offset;\t/* Where in file lowest line#s are.  */\n-    file_ptr max_lineno_offset;\t/* 1+last byte of line#s in file.  */\n+    file_ptr min_lineno_offset = 0;\t/* Where in file lowest line#s are.  */\n+    file_ptr max_lineno_offset = 0;\t/* 1+last byte of line#s in file.  */\n \n-    CORE_ADDR textaddr;\t\t/* Addr of .text section.  */\n-    unsigned int textsize;\t/* Size of .text section.  */\n+    CORE_ADDR textaddr = 0;\t\t/* Addr of .text section.  */\n+    unsigned int textsize = 0;\t/* Size of .text section.  */\n     std::vector<asection *> *stabsects;\t/* .stab sections.  */\n-    asection *stabstrsect;\t/* Section pointer for .stab section.  */\n-    char *stabstrdata;\n+    asection *stabstrsect = nullptr;\t/* Section pointer for .stab section.  */\n+    char *stabstrdata = nullptr;\n   };\n \n+/* Key for COFF-associated data.  */\n+\n+static const struct objfile_key<coff_symfile_info> coff_objfile_data_key;\n+\n /* Translate an external name string into a user-visible name.  */\n #define\tEXTERNAL_NAME(string, abfd) \\\n \t(string[0] == bfd_get_symbol_leading_char (abfd) \\\n@@ -485,15 +485,13 @@ static void\n coff_symfile_init (struct objfile *objfile)\n {\n   struct dbx_symfile_info *dbx;\n-  struct coff_symfile_info *coff;\n \n   /* Allocate struct to keep track of stab reading.  */\n   dbx = XCNEW (struct dbx_symfile_info);\n   set_objfile_data (objfile, dbx_objfile_data_key, dbx);\n \n   /* Allocate struct to keep track of the symfile.  */\n-  coff = XCNEW (struct coff_symfile_info);\n-  set_objfile_data (objfile, coff_objfile_data_key, coff);\n+  coff_objfile_data_key.emplace (objfile);\n \n   /* COFF objects may be reordered, so set OBJF_REORDERED.  If we\n      find this causes a significant slowdown in gdb then we could\n@@ -554,8 +552,7 @@ coff_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n   int stringtab_offset;\n   int stabstrsize;\n   \n-  info = (struct coff_symfile_info *) objfile_data (objfile,\n-\t\t\t\t\t\t    coff_objfile_data_key);\n+  info = coff_objfile_data_key.get (objfile);\n   symfile_bfd = abfd;\t\t/* Kludge for swap routines.  */\n \n   std::vector<asection *> stabsects;\n@@ -2211,22 +2208,11 @@ static const struct sym_fns coff_sym_fns =\n   &psym_functions\n };\n \n-/* Free the per-objfile COFF data.  */\n-\n-static void\n-coff_free_info (struct objfile *objfile, void *arg)\n-{\n-  xfree (arg);\n-}\n-\n void\n _initialize_coffread (void)\n {\n   add_symtab_fns (bfd_target_coff_flavour, &coff_sym_fns);\n \n-  coff_objfile_data_key = register_objfile_data_with_cleanup (NULL,\n-\t\t\t\t\t\t\t      coff_free_info);\n-\n   coff_register_index\n     = register_symbol_register_impl (LOC_REGISTER, &coff_register_funcs);\n }"
    }
  ]
}