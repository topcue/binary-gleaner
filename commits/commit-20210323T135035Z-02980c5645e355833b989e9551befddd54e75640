{
  "sha": "02980c5645e355833b989e9551befddd54e75640",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDI5ODBjNTY0NWUzNTU4MzNiOTg5ZTk1NTFiZWZkZGQ1NGU3NTY0MA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-03-23T13:50:35Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-03-23T13:50:35Z"
    },
    "message": "gdb: remove push_target free functions\n\nSame as the previous patch, but for the push_target functions.\n\nThe implementation of the move variant is moved to a new overload of\ninferior::push_target.\n\ngdb/ChangeLog:\n\n\t* target.h (push_target): Remove, update callers to use\n\tinferior::push_target.\n\t* target.c (push_target): Remove.\n\t* inferior.h (class inferior) <push_target>: New overload.\n\nChange-Id: I5a95496666278b8f3965e5e8aecb76f54a97c185",
    "tree": {
      "sha": "9cdcf5e5ceb0fece771f1cc5084dc7343556e9fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9cdcf5e5ceb0fece771f1cc5084dc7343556e9fc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/02980c5645e355833b989e9551befddd54e75640",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02980c5645e355833b989e9551befddd54e75640",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/02980c5645e355833b989e9551befddd54e75640",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02980c5645e355833b989e9551befddd54e75640/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fadf6add3028d477457c809f60f07643964d7fd2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fadf6add3028d477457c809f60f07643964d7fd2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fadf6add3028d477457c809f60f07643964d7fd2"
    }
  ],
  "stats": {
    "total": 115,
    "additions": 54,
    "deletions": 61
  },
  "files": [
    {
      "sha": "274e157905d71fcf06f46e26cbaaf00b3642046b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-23  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* target.h (push_target): Remove, update callers to use\n+\tinferior::push_target.\n+\t* target.c (push_target): Remove.\n+\t* inferior.h (class inferior) <push_target>: New overload.\n+\n 2021-03-23  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* target.h (unpush_target): Remove, update all callers"
    },
    {
      "sha": "fc34210cf9e2e77ad81f35f28a539eba7ae456b2",
      "filename": "gdb/aix-thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/aix-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/aix-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aix-thread.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -974,7 +974,7 @@ pd_enable (void)\n     return;\n \n   /* Prepare for thread debugging.  */\n-  push_target (&aix_thread_ops);\n+  current_inferior ()->push_target (&aix_thread_ops);\n   pd_able = 1;\n \n   /* If we're debugging a core file or an attached inferior, the"
    },
    {
      "sha": "89da40afcb78f213a1a9ab62d9bb9ef99ec6d73f",
      "filename": "gdb/bsd-kvm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/bsd-kvm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/bsd-kvm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-kvm.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -134,7 +134,7 @@ bsd_kvm_target_open (const char *arg, int from_tty)\n   bsd_kvm_corefile = filename;\n   current_inferior ()->unpush_target (&bsd_kvm_ops);\n   core_kd = temp_kd;\n-  push_target (&bsd_kvm_ops);\n+  current_inferior ()->push_target (&bsd_kvm_ops);\n \n   thread_info *thr = add_thread_silent (&bsd_kvm_ops, bsd_kvm_ptid);\n   switch_to_thread (thr);"
    },
    {
      "sha": "3cb8f64c89a7243d916d7acf4a854195af1a6619",
      "filename": "gdb/bsd-uthread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/bsd-uthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/bsd-uthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-uthread.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -231,7 +231,7 @@ bsd_uthread_activate (struct objfile *objfile)\n   bsd_uthread_thread_ctx_offset =\n     bsd_uthread_lookup_offset (\"_thread_ctx_offset\", objfile);\n \n-  push_target (&bsd_uthread_ops);\n+  current_inferior ()->push_target (&bsd_uthread_ops);\n   bsd_uthread_active = 1;\n   return 1;\n }"
    },
    {
      "sha": "a1943ab2ea6dc03f576d654bbc732c9acbabff8d",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -458,7 +458,7 @@ core_target_open (const char *arg, int from_tty)\n   if (!current_program_space->exec_bfd ())\n     set_gdbarch_from_file (core_bfd);\n \n-  push_target (std::move (target_holder));\n+  current_inferior ()->push_target (std::move (target_holder));\n \n   switch_to_no_thread ();\n "
    },
    {
      "sha": "f8e4443ff408f14388ecf8674b420e385864511f",
      "filename": "gdb/darwin-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/darwin-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/darwin-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -1659,7 +1659,7 @@ darwin_attach_pid (struct inferior *inf)\n \n   target_ops *darwin_ops = get_native_target ();\n   if (!target_is_pushed (darwin_ops))\n-    push_target (darwin_ops);\n+    inf->push_target (darwin_ops);\n }\n \n /* Get the thread_info object corresponding to this darwin_thread_info.  */"
    },
    {
      "sha": "b737bcf6e0f3c25462233b39cf50be0d24e4b5aa",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -616,7 +616,7 @@ program_space::add_target_sections (void *owner,\n \t    continue;\n \n \t  switch_to_inferior_no_thread (inf);\n-\t  push_target (&exec_ops);\n+\t  inf->push_target (&exec_ops);\n \t}\n     }\n }\n@@ -682,7 +682,7 @@ void\n exec_on_vfork ()\n {\n   if (!current_program_space->target_sections ().empty ())\n-    push_target (&exec_ops);\n+    current_inferior ()->push_target (&exec_ops);\n }\n \n \f"
    },
    {
      "sha": "9ea4c408934054d230fb001e68d28e17d3031bb1",
      "filename": "gdb/gnu-nat.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/gnu-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/gnu-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-nat.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -2114,7 +2114,7 @@ gnu_nat_target::create_inferior (const char *exec_file,\n   inf_debug (inf, \"creating inferior\");\n \n   if (!target_is_pushed (this))\n-    push_target (this);\n+    current_inferior ()->push_target (this);\n \n   pid = fork_inferior (exec_file, allargs, env, gnu_ptrace_me,\n \t\t       NULL, NULL, NULL, NULL);\n@@ -2190,9 +2190,9 @@ gnu_nat_target::attach (const char *args, int from_tty)\n \n   inf_attach (inf, pid);\n \n-  push_target (this);\n-\n   inferior = current_inferior ();\n+  inferior->push_target (this);\n+\n   inferior_appeared (inferior, pid);\n   inferior->attach_flag = 1;\n "
    },
    {
      "sha": "79c31fcd98771d89051f495be7b704d74644dd0c",
      "filename": "gdb/go32-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/go32-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/go32-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go32-nat.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -757,7 +757,7 @@ go32_nat_target::create_inferior (const char *exec_file,\n   inferior_appeared (inf, SOME_PID);\n \n   if (!target_is_pushed (this))\n-    push_target (this);\n+    inf->push_target (this);\n \n   thread_info *thr = add_thread_silent (ptid_t (SOME_PID));\n   switch_to_thread (thr);"
    },
    {
      "sha": "0e68a40d7c04a91fd7d35c674bbb0770fef65a6c",
      "filename": "gdb/inf-child.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/inf-child.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/inf-child.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-child.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -166,7 +166,7 @@ inf_child_open_target (const char *arg, int from_tty)\n   gdb_assert (dynamic_cast<inf_child_target *> (target) != NULL);\n \n   target_preopen (from_tty);\n-  push_target (target);\n+  current_inferior ()->push_target (target);\n   inf_child_explicitly_opened = 1;\n   if (from_tty)\n     printf_filtered (\"Done.  Use the \\\"run\\\" command to start a process.\\n\");"
    },
    {
      "sha": "e630ba447f40ae7b983293ffcc63b6e463227a18",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -82,7 +82,7 @@ inf_ptrace_target::create_inferior (const char *exec_file,\n   if (! ops_already_pushed)\n     {\n       /* Clear possible core file with its process_stratum.  */\n-      push_target (this);\n+      current_inferior ()->push_target (this);\n       unpusher.reset (this);\n     }\n \n@@ -139,12 +139,14 @@ inf_ptrace_target::attach (const char *args, int from_tty)\n   if (pid == getpid ())\t\t/* Trying to masturbate?  */\n     error (_(\"I refuse to debug myself!\"));\n \n+  inf = current_inferior ();\n+\n   target_unpush_up unpusher;\n   if (! ops_already_pushed)\n     {\n       /* target_pid_to_str already uses the target.  Also clear possible core\n \t file with its process_stratum.  */\n-      push_target (this);\n+      inf->push_target (this);\n       unpusher.reset (this);\n     }\n \n@@ -169,7 +171,6 @@ inf_ptrace_target::attach (const char *args, int from_tty)\n   error (_(\"This system does not support attaching to a process\"));\n #endif\n \n-  inf = current_inferior ();\n   inferior_appeared (inf, pid);\n   inf->attach_flag = 1;\n "
    },
    {
      "sha": "69baee34ce9d25dd26eda5fc78feadc853708e67",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -771,7 +771,7 @@ switch_to_inferior_and_push_target (inferior *new_inf,\n   /* Reuse the target for new inferior.  */\n   if (!no_connection && proc_target != NULL)\n     {\n-      push_target (proc_target);\n+      new_inf->push_target (proc_target);\n       if (proc_target->connection_string () != NULL)\n \tprintf_filtered (_(\"Added inferior %d on connection %d (%s %s)\\n\"),\n \t\t\t new_inf->num,"
    },
    {
      "sha": "66fc180ce53034f05204c2d0bdac8bbb8d47f741",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -352,6 +352,13 @@ class inferior : public refcounted_object\n   void push_target (struct target_ops *t)\n   { m_target_stack.push (t); }\n \n+  /* An overload that deletes the target on failure.  */\n+  void push_target (target_ops_up &&t)\n+  {\n+    m_target_stack.push (t.get ());\n+    t.release ();\n+  }\n+\n   /* Unpush T from this inferior's target stack.  */\n   int unpush_target (struct target_ops *t)\n   { return m_target_stack.unpush (t); }"
    },
    {
      "sha": "50340e6edad4c30542c176e43c3589a6d658684d",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -477,7 +477,7 @@ holding the child stopped.  Try \\\"set detach-on-fork\\\" or \\\n \t  set_current_inferior (child_inf);\n \t  switch_to_no_thread ();\n \t  child_inf->symfile_flags = SYMFILE_NO_READ;\n-\t  push_target (parent_inf->process_target ());\n+\t  child_inf->push_target (parent_inf->process_target ());\n \t  thread_info *child_thr\n \t    = add_thread_silent (child_inf->process_target (), child_ptid);\n \n@@ -627,7 +627,7 @@ holding the child stopped.  Try \\\"set detach-on-fork\\\" or \\\n \t   informing the solib layer about this new process.  */\n \n \tset_current_inferior (child_inf);\n-\tpush_target (target);\n+\tchild_inf->push_target (target);\n       }\n \n       thread_info *child_thr = add_thread_silent (target, child_ptid);\n@@ -1183,7 +1183,7 @@ follow_exec (ptid_t ptid, const char *exec_file_target)\n \n       inferior *org_inferior = current_inferior ();\n       switch_to_inferior_no_thread (inf);\n-      push_target (org_inferior->process_target ());\n+      inf->push_target (org_inferior->process_target ());\n       thread_info *thr = add_thread (inf->process_target (), ptid);\n       switch_to_thread (thr);\n     }"
    },
    {
      "sha": "de8687e99c730f9643d1b99ba351b75eaa57a830",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -944,7 +944,7 @@ try_thread_db_load_1 (struct thread_db_info *info)\n \n   /* The thread library was detected.  Activate the thread_db target\n      for this process.  */\n-  push_target (&the_thread_db_target);\n+  current_inferior ()->push_target (&the_thread_db_target);\n   return true;\n }\n "
    },
    {
      "sha": "b74392fef3201e252869db19e4a3a14eb86db5e2",
      "filename": "gdb/nto-procfs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/nto-procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/nto-procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nto-procfs.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -718,7 +718,7 @@ nto_procfs_target::attach (const char *args, int from_tty)\n   inf->attach_flag = 1;\n \n   if (!target_is_pushed (ops))\n-    push_target (ops);\n+    inf->push_target (ops);\n \n   update_thread_list ();\n \n@@ -1319,7 +1319,7 @@ nto_procfs_target::create_inferior (const char *exec_file,\n \t errn, safe_strerror(errn) ); */\n     }\n   if (!target_is_pushed (ops))\n-    push_target (ops);\n+    inf->push_target (ops);\n   target_terminal::init ();\n \n   if (current_program_space->exec_bfd () != NULL"
    },
    {
      "sha": "b37680923cd84e0298ab1809747e4bf08535e79f",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -1771,7 +1771,7 @@ procfs_target::attach (const char *args, int from_tty)\n   target_unpush_up unpusher;\n   if (!target_is_pushed (this))\n     {\n-      push_target (this);\n+      current_inferior ()->push_target (this);\n       unpusher.reset (this);\n     }\n \n@@ -2863,7 +2863,7 @@ procfs_target::create_inferior (const char *exec_file,\n     }\n \n   if (!target_is_pushed (this))\n-    push_target (this);\n+    current_inferior ()->push_target (this);\n \n   pid = fork_inferior (exec_file, allargs, env, procfs_set_exec_trap,\n \t\t       NULL, procfs_pre_trace, shell_file, NULL);"
    },
    {
      "sha": "1398d1b7c9e6138262f75f6e271a6a4d68a1bfb4",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -674,7 +674,7 @@ ravenscar_inferior_created (inferior *inf)\n     }\n \n   ravenscar_thread_target *rtarget = new ravenscar_thread_target ();\n-  push_target (target_ops_up (rtarget));\n+  inf->push_target (target_ops_up (rtarget));\n   thread_info *thr = rtarget->add_active_thread ();\n   if (thr != nullptr)\n     switch_to_thread (thr);"
    },
    {
      "sha": "b7b3c91f85dbb11c38a6fae9d93b1585daa60643",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -337,7 +337,7 @@ record_btrace_push_target (void)\n \n   record_btrace_auto_enable ();\n \n-  push_target (&record_btrace_ops);\n+  current_inferior ()->push_target (&record_btrace_ops);\n \n   record_btrace_async_inferior_event_handler\n     = create_async_event_handler (record_btrace_handle_async_inferior_event,"
    },
    {
      "sha": "8310b7b4c25663521cdb8429a63ad055bbf52d1c",
      "filename": "gdb/record-full.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/record-full.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/record-full.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-full.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -924,7 +924,7 @@ record_full_core_open_1 (const char *name, int from_tty)\n \n   record_full_core_sections = build_section_table (core_bfd);\n \n-  push_target (&record_full_core_ops);\n+  current_inferior ()->push_target (&record_full_core_ops);\n   record_full_restore ();\n }\n \n@@ -947,7 +947,7 @@ record_full_open_1 (const char *name, int from_tty)\n     error (_(\"Process record: the current architecture doesn't support \"\n \t     \"record function.\"));\n \n-  push_target (&record_full_ops);\n+  current_inferior ()->push_target (&record_full_ops);\n }\n \n static void record_full_init_record_breakpoints (void);"
    },
    {
      "sha": "a419a21f30a06454e706b883cd0ebbeef6bfb372",
      "filename": "gdb/regcache.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/regcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/regcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -1925,7 +1925,7 @@ cooked_write_test (struct gdbarch *gdbarch)\n \n   /* Push the process_stratum target so we can mock accessing\n      registers.  */\n-  push_target (&mock_target);\n+  current_inferior ()->push_target (&mock_target);\n \n   /* Pop it again on exit (return/exception).  */\n   struct on_exit"
    },
    {
      "sha": "1746b626fa11d51019d342a5fcefa9d351298183",
      "filename": "gdb/remote-sim.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/remote-sim.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/remote-sim.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote-sim.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -763,7 +763,7 @@ gdbsim_target_open (const char *args, int from_tty)\n \n   sim_data->gdbsim_desc = gdbsim_desc;\n \n-  push_target (&gdbsim_ops);\n+  current_inferior ()->push_target (&gdbsim_ops);\n   printf_filtered (\"Connected to the simulator.\\n\");\n \n   /* There's nothing running after \"target sim\" or \"load\"; not until"
    },
    {
      "sha": "a7f35396045b8c2edfb90eb315cde275de0ab3b8",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -2474,7 +2474,7 @@ remote_target::remote_add_inferior (bool fake_pid_p, int pid, int attached,\n \t  inf = add_inferior_with_spaces ();\n \t}\n       switch_to_inferior_no_thread (inf);\n-      push_target (this);\n+      inf->push_target (this);\n       inferior_appeared (inf, pid);\n     }\n \n@@ -5673,7 +5673,7 @@ remote_target::open_1 (const char *name, int from_tty, int extended_p)\n     }\n \n   /* Switch to using the remote target now.  */\n-  push_target (std::move (target_holder));\n+  current_inferior ()->push_target (std::move (target_holder));\n \n   /* Register extra event sources in the event loop.  */\n   rs->remote_async_inferior_event_token"
    },
    {
      "sha": "8d295ba1bbe6c42c50711156d033f582ea738a6f",
      "filename": "gdb/scoped-mock-context.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/scoped-mock-context.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/scoped-mock-context.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/scoped-mock-context.h?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -64,7 +64,7 @@ struct scoped_mock_context\n     /* Push the process_stratum target so we can mock accessing\n        registers.  */\n     gdb_assert (mock_target.stratum () == process_stratum);\n-    push_target (&mock_target);\n+    mock_inferior.push_target (&mock_target);\n \n     /* Switch to the mock thread.  */\n     switch_to_thread (&mock_thread);"
    },
    {
      "sha": "825f69131fc46e4e6d4b240e811b3fca50add169",
      "filename": "gdb/sol-thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/sol-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/sol-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sol-thread.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -641,7 +641,7 @@ check_for_thread_db (void)\n       printf_unfiltered (_(\"[Thread debugging using libthread_db enabled]\\n\"));\n \n       /* The thread library was detected.  Activate the sol_thread target.  */\n-      push_target (&sol_thread_ops);\n+      current_inferior ()->push_target (&sol_thread_ops);\n       sol_thread_active = 1;\n \n       main_ph.ptid = inferior_ptid; /* Save for xfer_memory.  */"
    },
    {
      "sha": "fe9731221efd7048183d61c785de9b332ad6126d",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 1,
      "deletions": 18,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -158,7 +158,7 @@ static void\n set_targetdebug  (const char *args, int from_tty, struct cmd_list_element *c)\n {\n   if (targetdebug)\n-    push_target (the_debug_target);\n+    current_inferior ()->push_target (the_debug_target);\n   else\n     current_inferior ()->unpush_target (the_debug_target);\n }\n@@ -572,23 +572,6 @@ target_stack::push (target_ops *t)\n \n /* See target.h.  */\n \n-void\n-push_target (struct target_ops *t)\n-{\n-  current_inferior ()->push_target (t);\n-}\n-\n-/* See target.h.  */\n-\n-void\n-push_target (target_ops_up &&t)\n-{\n-  current_inferior ()->push_target (t.get ());\n-  t.release ();\n-}\n-\n-/* See target.h.  */\n-\n bool\n target_stack::unpush (target_ops *t)\n {"
    },
    {
      "sha": "1830d3a8106f7c58d252029af75e554170aa918c",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -2385,11 +2385,6 @@ extern void add_target (const target_info &info,\n extern void add_deprecated_target_alias (const target_info &info,\n \t\t\t\t\t const char *alias);\n \n-extern void push_target (struct target_ops *);\n-\n-/* An overload that deletes the target on failure.  */\n-extern void push_target (target_ops_up &&);\n-\n /* A unique_ptr helper to unpush a target.  */\n \n struct target_unpusher"
    },
    {
      "sha": "4a245ee11a5affcf3ae26982eb1a2d20efef88b7",
      "filename": "gdb/tracectf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/tracectf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/tracectf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracectf.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -1165,7 +1165,7 @@ ctf_target_open (const char *dirname, int from_tty)\n   gdb_assert (start_pos->type == BT_SEEK_RESTORE);\n \n   trace_dirname = xstrdup (dirname);\n-  push_target (&ctf_ops);\n+  current_inferior ()->push_target (&ctf_ops);\n \n   inferior_appeared (current_inferior (), CTF_PID);\n "
    },
    {
      "sha": "d82cac8d9ddd04fdb3b20d2f5904c21944fbc7df",
      "filename": "gdb/tracefile-tfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/tracefile-tfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/tracefile-tfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracefile-tfile.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -498,7 +498,7 @@ tfile_target_open (const char *arg, int from_tty)\n \t&& (startswith (header + 1, \"TRACE0\\n\"))))\n     error (_(\"File is not a valid trace file.\"));\n \n-  push_target (&tfile_ops);\n+  current_inferior ()->push_target (&tfile_ops);\n \n   trace_regblock_size = 0;\n   ts = current_trace_status ();"
    },
    {
      "sha": "51662896d691c65d6ec5e18d2f0004bd5a2b7c71",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02980c5645e355833b989e9551befddd54e75640/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02980c5645e355833b989e9551befddd54e75640/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=02980c5645e355833b989e9551befddd54e75640",
      "patch": "@@ -2027,8 +2027,9 @@ windows_nat_target::do_initial_windows_stuff (DWORD pid, bool attaching)\n #endif\n   current_event.dwProcessId = pid;\n   memset (&current_event, 0, sizeof (current_event));\n+  inf = current_inferior ();\n   if (!target_is_pushed (this))\n-    push_target (this);\n+    inf->push_target (this);\n   disable_breakpoints_in_shlibs ();\n   windows_clear_solib ();\n   clear_proceed_status (0);\n@@ -2049,7 +2050,6 @@ windows_nat_target::do_initial_windows_stuff (DWORD pid, bool attaching)\n       windows_set_segment_register_p (i386_windows_segment_register_p);\n     }\n \n-  inf = current_inferior ();\n   inferior_appeared (inf, pid);\n   inf->attach_flag = attaching;\n "
    }
  ]
}