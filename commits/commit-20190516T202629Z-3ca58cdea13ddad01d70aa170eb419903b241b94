{
  "sha": "3ca58cdea13ddad01d70aa170eb419903b241b94",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2NhNThjZGVhMTNkZGFkMDFkNzBhYTE3MGViNDE5OTAzYjI0MWI5NA==",
  "commit": {
    "author": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-05-16T20:11:20Z"
    },
    "committer": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-05-16T20:26:29Z"
    },
    "message": "Update some comments on stap-probe.c\n\nSome functions's comments were not entirely correct on stap-probe.c,\nso this patch updates them.\n\nPushed as obvious.\n\ngdb/ChangeLog:\n2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n\n\t* stap-probe.c (stap_get_opcode): Update comment.\n\t(stap_get_expected_argument_type): Likewise.\n\t(handle_stap_probe): Likewise.",
    "tree": {
      "sha": "ae36fc802dc87b4ca1889198681e39fdbaaa0799",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ae36fc802dc87b4ca1889198681e39fdbaaa0799"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3ca58cdea13ddad01d70aa170eb419903b241b94",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ca58cdea13ddad01d70aa170eb419903b241b94",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3ca58cdea13ddad01d70aa170eb419903b241b94",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ca58cdea13ddad01d70aa170eb419903b241b94/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "af2d9beee989c7b75de849d9c08629a1e3f567ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af2d9beee989c7b75de849d9c08629a1e3f567ad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af2d9beee989c7b75de849d9c08629a1e3f567ad"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 12,
    "deletions": 7
  },
  "files": [
    {
      "sha": "3389167adba6ed50e682db0ef92d6086b55e28a6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ca58cdea13ddad01d70aa170eb419903b241b94/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ca58cdea13ddad01d70aa170eb419903b241b94/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3ca58cdea13ddad01d70aa170eb419903b241b94",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n+\n+\t* stap-probe.c (stap_get_opcode): Update comment.\n+\t(stap_get_expected_argument_type): Likewise.\n+\t(handle_stap_probe): Likewise.\n+\n 2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* i386-tdep.c (i386_stap_parse_special_token_triplet): Change"
    },
    {
      "sha": "bc2f9fc85b3c4f3a799ed23445e8a2ebfc3498ba",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ca58cdea13ddad01d70aa170eb419903b241b94/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ca58cdea13ddad01d70aa170eb419903b241b94/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=3ca58cdea13ddad01d70aa170eb419903b241b94",
      "patch": "@@ -316,8 +316,9 @@ stap_get_operator_prec (enum exp_opcode op)\n     }\n }\n \n-/* Given S, read the operator in it and fills the OP pointer with its code.\n-   Return 1 on success, zero if the operator was not recognized.  */\n+/* Given S, read the operator in it.  Return the EXP_OPCODE which\n+   represents the operator detected, or throw an error if no operator\n+   was found.  */\n \n static enum exp_opcode\n stap_get_opcode (const char **s)\n@@ -422,7 +423,8 @@ stap_get_opcode (const char **s)\n }\n \n /* Given the bitness of the argument, represented by B, return the\n-   corresponding `struct type *'.  */\n+   corresponding `struct type *', or throw an error if B is\n+   unknown.  */\n \n static struct type *\n stap_get_expected_argument_type (struct gdbarch *gdbarch,\n@@ -1491,10 +1493,7 @@ stap_probe::gen_info_probes_table_values () const\n      probe doesn't have an associated semaphore;\n    - Probe's provider name;\n    - Probe's name;\n-   - Probe's argument format\n-   \n-   This function returns 1 if the handling was successful, and zero\n-   otherwise.  */\n+   - Probe's argument format.  */\n \n static void\n handle_stap_probe (struct objfile *objfile, struct sdt_note *el,"
    }
  ]
}