{
  "sha": "035e7389dd36526df823b28e7f9fb1dea16cae2e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDM1ZTczODlkZDM2NTI2ZGY4MjNiMjhlN2Y5ZmIxZGVhMTZjYWUyZQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:42:03Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:42:03Z"
    },
    "message": "x86: simplify decode of opcodes valid only without any (embedded) prefix\n\nIn this case there's no need to go through prefix_table[] at all - the\n.prefix_requirement == PREFIX_OPCODE machinery takes care of this case\nalready.\n\nA couple of further adjustments are needed though:\n- Gv / Ev and alike then can't be used (needs to be Gdq / Edq instead),\n- dq_mode and friends shouldn't lead to PREFIX_DATA getting set in\n  used_prefixes.",
    "tree": {
      "sha": "85b38bfde804a22ca085fe1209fbede3753ab7e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/85b38bfde804a22ca085fe1209fbede3753ab7e4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/035e7389dd36526df823b28e7f9fb1dea16cae2e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/035e7389dd36526df823b28e7f9fb1dea16cae2e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/035e7389dd36526df823b28e7f9fb1dea16cae2e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/035e7389dd36526df823b28e7f9fb1dea16cae2e/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bb5b3501b3d639bd4f7da4b3be791fb059c8a835"
    }
  ],
  "stats": {
    "total": 196,
    "additions": 61,
    "deletions": 135
  },
  "files": [
    {
      "sha": "3769588a091e1bdad1e56939a0e1ba7076f15b2c",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/035e7389dd36526df823b28e7f9fb1dea16cae2e/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/035e7389dd36526df823b28e7f9fb1dea16cae2e/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=035e7389dd36526df823b28e7f9fb1dea16cae2e",
      "patch": "@@ -1,3 +1,22 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (PREFIX_0F01_REG_7_MOD_3_RM_3,\n+\tPREFIX_0FAE_REG_5_MOD_0, PREFIX_0FC3_MOD_0, PREFIX_0F38C8,\n+\tPREFIX_0F38C9, PREFIX_0F38CA, PREFIX_0F38CB, PREFIX_0F38CC,\n+\tPREFIX_0F38CD, PREFIX_0F38F9, PREFIX_0F3ACC, PREFIX_VEX_0F77,\n+\tPREFIX_VEX_0F38F2, PREFIX_VEX_0F38F3_REG_1,\n+\tPREFIX_VEX_0F38F3_REG_2, PREFIX_VEX_0F38F3_REG_3): Delete.\n+\t(MOD_0F38F9_PREFIX_0, VEX_LEN_0F77_P_0, VEX_LEN_0F38F2_P_0,\n+\tVEX_LEN_0F38F3_R_1_P_0, VEX_LEN_0F38F3_R_2_P_0,\n+\tVEX_LEN_0F38F3_R_3_P_0): Rename to ...\n+\t(MOD_0F38F9, VEX_LEN_0F77, VEX_LEN_0F38F2, VEX_LEN_0F38F3_R_1,\n+\tVEX_LEN_0F38F3_R_2, VEX_LEN_0F38F3_R_3): ... these respectively.\n+\t(reg_table, prefix_table, three_byte_table, vex_table,\n+\tvex_len_table, mod_table, rm_table): Replace / remove respective\n+\tentries.\n+\t(intel_operand_size, OP_E_register, OP_G): Avoid undue setting\n+\tof PREFIX_DATA in used_prefixes.\n+\n 2020-07-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (MOD_VEX_0F3A30_L_0_W_0, MOD_VEX_0F3A30_L_0_W_1,"
    },
    {
      "sha": "2f748b838f585af83d71d1890771e6369edde796",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 42,
      "deletions": 135,
      "changes": 177,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/035e7389dd36526df823b28e7f9fb1dea16cae2e/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/035e7389dd36526df823b28e7f9fb1dea16cae2e/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=035e7389dd36526df823b28e7f9fb1dea16cae2e",
      "patch": "@@ -809,7 +809,7 @@ enum\n   MOD_0F38F8_PREFIX_1,\n   MOD_0F38F8_PREFIX_2,\n   MOD_0F38F8_PREFIX_3,\n-  MOD_0F38F9_PREFIX_0,\n+  MOD_0F38F9,\n   MOD_62_32BIT,\n   MOD_C4_32BIT,\n   MOD_C5_32BIT,\n@@ -951,7 +951,6 @@ enum\n   PREFIX_0F01_REG_5_MOD_3_RM_1,\n   PREFIX_0F01_REG_5_MOD_3_RM_2,\n   PREFIX_0F01_REG_7_MOD_3_RM_2,\n-  PREFIX_0F01_REG_7_MOD_3_RM_3,\n   PREFIX_0F09,\n   PREFIX_0F10,\n   PREFIX_0F11,\n@@ -995,7 +994,6 @@ enum\n   PREFIX_0FAE_REG_3_MOD_3,\n   PREFIX_0FAE_REG_4_MOD_0,\n   PREFIX_0FAE_REG_4_MOD_3,\n-  PREFIX_0FAE_REG_5_MOD_0,\n   PREFIX_0FAE_REG_5_MOD_3,\n   PREFIX_0FAE_REG_6_MOD_0,\n   PREFIX_0FAE_REG_6_MOD_3,\n@@ -1004,7 +1002,6 @@ enum\n   PREFIX_0FBC,\n   PREFIX_0FBD,\n   PREFIX_0FC2,\n-  PREFIX_0FC3_MOD_0,\n   PREFIX_0FC7_REG_6_MOD_0,\n   PREFIX_0FC7_REG_6_MOD_3,\n   PREFIX_0FC7_REG_7_MOD_3,\n@@ -1014,18 +1011,10 @@ enum\n   PREFIX_0FE7,\n   PREFIX_0FF0,\n   PREFIX_0FF7,\n-  PREFIX_0F38C8,\n-  PREFIX_0F38C9,\n-  PREFIX_0F38CA,\n-  PREFIX_0F38CB,\n-  PREFIX_0F38CC,\n-  PREFIX_0F38CD,\n   PREFIX_0F38F0,\n   PREFIX_0F38F1,\n   PREFIX_0F38F6,\n   PREFIX_0F38F8,\n-  PREFIX_0F38F9,\n-  PREFIX_0F3ACC,\n   PREFIX_VEX_0F10,\n   PREFIX_VEX_0F11,\n   PREFIX_VEX_0F12,\n@@ -1056,7 +1045,6 @@ enum\n   PREFIX_VEX_0F5F,\n   PREFIX_VEX_0F6F,\n   PREFIX_VEX_0F70,\n-  PREFIX_VEX_0F77,\n   PREFIX_VEX_0F7C,\n   PREFIX_VEX_0F7D,\n   PREFIX_VEX_0F7E,\n@@ -1075,10 +1063,6 @@ enum\n   PREFIX_VEX_0F384B_X86_64,\n   PREFIX_VEX_0F385C_X86_64,\n   PREFIX_VEX_0F385E_X86_64,\n-  PREFIX_VEX_0F38F2,\n-  PREFIX_VEX_0F38F3_REG_1,\n-  PREFIX_VEX_0F38F3_REG_2,\n-  PREFIX_VEX_0F38F3_REG_3,\n   PREFIX_VEX_0F38F5,\n   PREFIX_VEX_0F38F6,\n   PREFIX_VEX_0F38F7,\n@@ -1239,7 +1223,7 @@ enum\n   VEX_LEN_0F4B_P_0,\n   VEX_LEN_0F4B_P_2,\n   VEX_LEN_0F6E,\n-  VEX_LEN_0F77_P_0,\n+  VEX_LEN_0F77,\n   VEX_LEN_0F7E_P_1,\n   VEX_LEN_0F7E_P_2,\n   VEX_LEN_0F90_P_0,\n@@ -1281,10 +1265,10 @@ enum\n   VEX_LEN_0F385E_X86_64_P_2_W_0_M_0,\n   VEX_LEN_0F385E_X86_64_P_3_W_0_M_0,\n   VEX_LEN_0F38DB,\n-  VEX_LEN_0F38F2_P_0,\n-  VEX_LEN_0F38F3_R_1_P_0,\n-  VEX_LEN_0F38F3_R_2_P_0,\n-  VEX_LEN_0F38F3_R_3_P_0,\n+  VEX_LEN_0F38F2,\n+  VEX_LEN_0F38F3_R_1,\n+  VEX_LEN_0F38F3_R_2,\n+  VEX_LEN_0F38F3_R_3,\n   VEX_LEN_0F38F5_P_0,\n   VEX_LEN_0F38F5_P_1,\n   VEX_LEN_0F38F5_P_3,\n@@ -3032,9 +3016,9 @@ static const struct dis386 reg_table[][8] = {\n   /* REG_VEX_0F38F3 */\n   {\n     { Bad_Opcode },\n-    { PREFIX_TABLE (PREFIX_VEX_0F38F3_REG_1) },\n-    { PREFIX_TABLE (PREFIX_VEX_0F38F3_REG_2) },\n-    { PREFIX_TABLE (PREFIX_VEX_0F38F3_REG_3) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F38F3_R_1) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F38F3_R_2) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F38F3_R_3) },\n   },\n   /* REG_0FXOP_09_01_L_0 */\n   {\n@@ -3122,11 +3106,6 @@ static const struct dis386 prefix_table[][4] = {\n     { \"mcommit\",\t{ Skip_MODRM }, 0 },\n   },\n \n-  /* PREFIX_0F01_REG_7_MOD_3_RM_3 */\n-  {\n-    { \"mwaitx\",\t\t{ { OP_Mwait, eBX_reg } }, 0  },\n-  },\n-\n   /* PREFIX_0F09 */\n   {\n     { \"wbinvd\",   { XX }, 0 },\n@@ -3443,11 +3422,6 @@ static const struct dis386 prefix_table[][4] = {\n     { \"ptwrite{%LQ|}\", { Edq }, 0 },\n   },\n \n-  /* PREFIX_0FAE_REG_5_MOD_0 */\n-  {\n-    { \"xrstor\",\t\t{ FXSAVE }, PREFIX_OPCODE },\n-  },\n-\n   /* PREFIX_0FAE_REG_5_MOD_3 */\n   {\n     { \"lfence\",\t\t{ Skip_MODRM }, 0 },\n@@ -3504,11 +3478,6 @@ static const struct dis386 prefix_table[][4] = {\n     { \"cmpsd\",\t{ XM, EXq, CMP }, PREFIX_OPCODE },\n   },\n \n-  /* PREFIX_0FC3_MOD_0 */\n-  {\n-    { \"movntiS\", { Edq, Gdq }, PREFIX_OPCODE },\n-  },\n-\n   /* PREFIX_0FC7_REG_6_MOD_0 */\n   {\n     { \"vmptrld\",{ Mq }, 0 },\n@@ -3576,36 +3545,6 @@ static const struct dis386 prefix_table[][4] = {\n     { \"maskmovdqu\", { XM, XS }, PREFIX_OPCODE },\n   },\n \n-  /* PREFIX_0F38C8 */\n-  {\n-    { \"sha1nexte\", { XM, EXxmm }, PREFIX_OPCODE },\n-  },\n-\n-  /* PREFIX_0F38C9 */\n-  {\n-    { \"sha1msg1\", { XM, EXxmm }, PREFIX_OPCODE },\n-  },\n-\n-  /* PREFIX_0F38CA */\n-  {\n-    { \"sha1msg2\", { XM, EXxmm }, PREFIX_OPCODE },\n-  },\n-\n-  /* PREFIX_0F38CB */\n-  {\n-    { \"sha256rnds2\", { XM, EXxmm, XMM0 }, PREFIX_OPCODE },\n-  },\n-\n-  /* PREFIX_0F38CC */\n-  {\n-    { \"sha256msg1\", { XM, EXxmm }, PREFIX_OPCODE },\n-  },\n-\n-  /* PREFIX_0F38CD */\n-  {\n-    { \"sha256msg2\", { XM, EXxmm }, PREFIX_OPCODE },\n-  },\n-\n   /* PREFIX_0F38F0 */\n   {\n     { \"movbeS\",\t{ Gv, Mv }, PREFIX_OPCODE },\n@@ -3638,16 +3577,6 @@ static const struct dis386 prefix_table[][4] = {\n     { MOD_TABLE (MOD_0F38F8_PREFIX_3) },\n   },\n \n-  /* PREFIX_0F38F9 */\n-  {\n-    { MOD_TABLE (MOD_0F38F9_PREFIX_0) },\n-  },\n-\n-  /* PREFIX_0F3ACC */\n-  {\n-    { \"sha1rnds4\", { XM, EXxmm, Ib }, PREFIX_OPCODE },\n-  },\n-\n   /* PREFIX_VEX_0F10 */\n   {\n     { \"vmovups\",\t{ XM, EXx }, 0 },\n@@ -3871,11 +3800,6 @@ static const struct dis386 prefix_table[][4] = {\n     { \"vpshuflw\",\t{ XM, EXx, Ib }, 0 },\n   },\n \n-  /* PREFIX_VEX_0F77 */\n-  {\n-    { VEX_LEN_TABLE (VEX_LEN_0F77_P_0) },\n-  },\n-\n   /* PREFIX_VEX_0F7C */\n   {\n     { Bad_Opcode },\n@@ -4013,26 +3937,6 @@ static const struct dis386 prefix_table[][4] = {\n     { VEX_W_TABLE (VEX_W_0F385E_X86_64_P_3) },\n   },\n \n-  /* PREFIX_VEX_0F38F2 */\n-  {\n-    { VEX_LEN_TABLE (VEX_LEN_0F38F2_P_0) },\n-  },\n-\n-  /* PREFIX_VEX_0F38F3_REG_1 */\n-  {\n-    { VEX_LEN_TABLE (VEX_LEN_0F38F3_R_1_P_0) },\n-  },\n-\n-  /* PREFIX_VEX_0F38F3_REG_2 */\n-  {\n-    { VEX_LEN_TABLE (VEX_LEN_0F38F3_R_2_P_0) },\n-  },\n-\n-  /* PREFIX_VEX_0F38F3_REG_3 */\n-  {\n-    { VEX_LEN_TABLE (VEX_LEN_0F38F3_R_3_P_0) },\n-  },\n-\n   /* PREFIX_VEX_0F38F5 */\n   {\n     { VEX_LEN_TABLE (VEX_LEN_0F38F5_P_0) },\n@@ -4504,12 +4408,12 @@ static const struct dis386 three_byte_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     /* c8 */\n-    { PREFIX_TABLE (PREFIX_0F38C8) },\n-    { PREFIX_TABLE (PREFIX_0F38C9) },\n-    { PREFIX_TABLE (PREFIX_0F38CA) },\n-    { PREFIX_TABLE (PREFIX_0F38CB) },\n-    { PREFIX_TABLE (PREFIX_0F38CC) },\n-    { PREFIX_TABLE (PREFIX_0F38CD) },\n+    { \"sha1nexte\", { XM, EXxmm }, PREFIX_OPCODE },\n+    { \"sha1msg1\", { XM, EXxmm }, PREFIX_OPCODE },\n+    { \"sha1msg2\", { XM, EXxmm }, PREFIX_OPCODE },\n+    { \"sha256rnds2\", { XM, EXxmm, XMM0 }, PREFIX_OPCODE },\n+    { \"sha256msg1\", { XM, EXxmm }, PREFIX_OPCODE },\n+    { \"sha256msg2\", { XM, EXxmm }, PREFIX_OPCODE },\n     { Bad_Opcode },\n     { \"gf2p8mulb\", { XM, EXxmm }, PREFIX_DATA },\n     /* d0 */\n@@ -4559,7 +4463,7 @@ static const struct dis386 three_byte_table[][256] = {\n     { Bad_Opcode },\n     /* f8 */\n     { PREFIX_TABLE (PREFIX_0F38F8) },\n-    { PREFIX_TABLE (PREFIX_0F38F9) },\n+    { MOD_TABLE (MOD_0F38F9) },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -4799,7 +4703,7 @@ static const struct dis386 three_byte_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { PREFIX_TABLE (PREFIX_0F3ACC) },\n+    { \"sha1rnds4\", { XM, EXxmm, Ib }, PREFIX_OPCODE },\n     { Bad_Opcode },\n     { \"gf2p8affineqb\", { XM, EXxmm, Ib }, PREFIX_DATA },\n     { \"gf2p8affineinvqb\", { XM, EXxmm, Ib }, PREFIX_DATA },\n@@ -5873,7 +5777,7 @@ static const struct dis386 vex_table[][256] = {\n     { \"vpcmpeqb\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { \"vpcmpeqw\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { \"vpcmpeqd\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n-    { PREFIX_TABLE (PREFIX_VEX_0F77) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F77) },\n     /* 78 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -6303,7 +6207,7 @@ static const struct dis386 vex_table[][256] = {\n     /* f0 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { PREFIX_TABLE (PREFIX_VEX_0F38F2) },\n+    { VEX_LEN_TABLE (VEX_LEN_0F38F2) },\n     { REG_TABLE (REG_VEX_0F38F3) },\n     { Bad_Opcode },\n     { PREFIX_TABLE (PREFIX_VEX_0F38F5) },\n@@ -6729,7 +6633,7 @@ static const struct dis386 vex_len_table[][2] = {\n     { \"vmovK\",\t\t{ XMScalar, Edq }, PREFIX_DATA },\n   },\n \n-  /* VEX_LEN_0F77_P_1 */\n+  /* VEX_LEN_0F77 */\n   {\n     { \"vzeroupper\",\t{ XX }, 0 },\n     { \"vzeroall\",\t{ XX }, 0 },\n@@ -6944,24 +6848,24 @@ static const struct dis386 vex_len_table[][2] = {\n     { \"vaesimc\",\t{ XM, EXx }, PREFIX_DATA },\n   },\n \n-  /* VEX_LEN_0F38F2_P_0 */\n+  /* VEX_LEN_0F38F2 */\n   {\n-    { \"andnS\",\t\t{ Gdq, VexGdq, Edq }, 0 },\n+    { \"andnS\",\t\t{ Gdq, VexGdq, Edq }, PREFIX_OPCODE },\n   },\n \n-  /* VEX_LEN_0F38F3_R_1_P_0 */\n+  /* VEX_LEN_0F38F3_R_1 */\n   {\n-    { \"blsrS\",\t\t{ VexGdq, Edq }, 0 },\n+    { \"blsrS\",\t\t{ VexGdq, Edq }, PREFIX_OPCODE },\n   },\n \n-  /* VEX_LEN_0F38F3_R_2_P_0 */\n+  /* VEX_LEN_0F38F3_R_2 */\n   {\n-    { \"blsmskS\",\t{ VexGdq, Edq }, 0 },\n+    { \"blsmskS\",\t{ VexGdq, Edq }, PREFIX_OPCODE },\n   },\n \n-  /* VEX_LEN_0F38F3_R_3_P_0 */\n+  /* VEX_LEN_0F38F3_R_3 */\n   {\n-    { \"blsiS\",\t\t{ VexGdq, Edq }, 0 },\n+    { \"blsiS\",\t\t{ VexGdq, Edq }, PREFIX_OPCODE },\n   },\n \n   /* VEX_LEN_0F38F5_P_0 */\n@@ -8191,7 +8095,7 @@ static const struct dis386 mod_table[][2] = {\n   },\n   {\n     /* MOD_0FAE_REG_5 */\n-    { PREFIX_TABLE (PREFIX_0FAE_REG_5_MOD_0) },\n+    { \"xrstor\",\t\t{ FXSAVE }, PREFIX_OPCODE },\n     { PREFIX_TABLE (PREFIX_0FAE_REG_5_MOD_3) },\n   },\n   {\n@@ -8218,7 +8122,7 @@ static const struct dis386 mod_table[][2] = {\n   },\n   {\n     /* MOD_0FC3 */\n-    { PREFIX_TABLE (PREFIX_0FC3_MOD_0) },\n+    { \"movntiS\", { Edq, Gdq }, PREFIX_OPCODE },\n   },\n   {\n     /* MOD_0FC7_REG_3 */\n@@ -8331,8 +8235,8 @@ static const struct dis386 mod_table[][2] = {\n     { \"enqcmd\",\t\t{ Gva, M }, PREFIX_OPCODE },\n   },\n   {\n-    /* MOD_0F38F9_PREFIX_0 */\n-    { \"movdiri\",\t{ Ev, Gv }, PREFIX_OPCODE },\n+    /* MOD_0F38F9 */\n+    { \"movdiri\",\t{ Edq, Gdq }, PREFIX_OPCODE },\n   },\n   {\n     /* MOD_62_32BIT */\n@@ -8832,7 +8736,7 @@ static const struct dis386 rm_table[][8] = {\n     { \"swapgs\",\t\t{ Skip_MODRM }, 0  },\n     { \"rdtscp\",\t\t{ Skip_MODRM }, 0  },\n     { PREFIX_TABLE (PREFIX_0F01_REG_7_MOD_3_RM_2) },\n-    { PREFIX_TABLE (PREFIX_0F01_REG_7_MOD_3_RM_3) },\n+    { \"mwaitx\",\t\t{ { OP_Mwait, eBX_reg } }, PREFIX_OPCODE },\n     { \"clzero\",\t\t{ Skip_MODRM }, 0  },\n     { \"rdpru\",\t\t{ Skip_MODRM }, 0  },\n   },\n@@ -11286,9 +11190,11 @@ intel_operand_size (int bytemode, int sizeflag)\n       USED_REX (REX_W);\n       if (rex & REX_W)\n \toappend (\"QWORD PTR \");\n+      else if (bytemode == dq_mode)\n+\toappend (\"DWORD PTR \");\n       else\n \t{\n-\t  if ((sizeflag & DFLAG) || bytemode == dq_mode)\n+\t  if (sizeflag & DFLAG)\n \t    oappend (\"DWORD PTR \");\n \t  else\n \t    oappend (\"WORD PTR \");\n@@ -11684,11 +11590,11 @@ OP_E_register (int bytemode, int sizeflag)\n       USED_REX (REX_W);\n       if (rex & REX_W)\n \tnames = names64;\n+      else if (bytemode != v_mode && bytemode != v_swap_mode)\n+\tnames = names32;\n       else\n \t{\n-\t  if ((sizeflag & DFLAG)\n-\t      || (bytemode != v_mode\n-\t\t  && bytemode != v_swap_mode))\n+\t  if (sizeflag & DFLAG)\n \t    names = names32;\n \t  else\n \t    names = names16;\n@@ -12280,10 +12186,11 @@ OP_G (int bytemode, int sizeflag)\n       USED_REX (REX_W);\n       if (rex & REX_W)\n \toappend (names64[modrm.reg + add]);\n+      else if (bytemode != v_mode && bytemode != movsxd_mode)\n+\toappend (names32[modrm.reg + add]);\n       else\n \t{\n-\t  if ((sizeflag & DFLAG)\n-\t      || (bytemode != v_mode && bytemode != movsxd_mode))\n+\t  if (sizeflag & DFLAG)\n \t    oappend (names32[modrm.reg + add]);\n \t  else\n \t    oappend (names16[modrm.reg + add]);"
    }
  ]
}