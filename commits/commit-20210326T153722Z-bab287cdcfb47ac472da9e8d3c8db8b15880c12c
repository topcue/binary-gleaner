{
  "sha": "bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmFiMjg3Y2RjZmI0N2FjNDcyZGE5ZThkM2M4ZGI4YjE1ODgwYzEyYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-26T15:37:22Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-26T15:37:22Z"
    },
    "message": "Avoid some pointer chasing in DWARF reader\n\nI noticed a spot in the DWARF reader using \"per_objfile->per_bfd\",\nwhere a local per_bfd variable had already been created.  Looking\nthrough the file, I found a number of such spots.  This patch changes\nthem to use the already-existing local, avoiding a bit of excess\npointer chasing.\n\ngdb/ChangeLog\n2021-03-26  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (dwarf2_read_debug_names)\n\t(dwarf2_build_psymtabs_hard, create_addrmap_from_aranges)\n\t(dw2_debug_names_iterator::next, create_type_unit_group):\n\tSimplify.",
    "tree": {
      "sha": "a74014e35507b6d96edc175a57ffadd723b47b84",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a74014e35507b6d96edc175a57ffadd723b47b84"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab287cdcfb47ac472da9e8d3c8db8b15880c12c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3c2dcf90b55fea84260ac83ab968c5df3b44d34d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c2dcf90b55fea84260ac83ab968c5df3b44d34d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3c2dcf90b55fea84260ac83ab968c5df3b44d34d"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 13,
    "deletions": 7
  },
  "files": [
    {
      "sha": "8e7b92087aab59ab05b570253b6904300d1b48a8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab287cdcfb47ac472da9e8d3c8db8b15880c12c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab287cdcfb47ac472da9e8d3c8db8b15880c12c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (dwarf2_read_debug_names)\n+\t(dwarf2_build_psymtabs_hard, create_addrmap_from_aranges)\n+\t(dw2_debug_names_iterator::next, create_type_unit_group):\n+\tSimplify.\n+\n 2021-03-25  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.server/bkpt-other-inferior.exp: Only enable remote output"
    },
    {
      "sha": "2f4b54b1aa3a39f710eb05094de1bfefef3c7f75",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab287cdcfb47ac472da9e8d3c8db8b15880c12c/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab287cdcfb47ac472da9e8d3c8db8b15880c12c/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
      "patch": "@@ -2774,7 +2774,7 @@ create_addrmap_from_aranges (dwarf2_per_objfile *per_objfile,\n \t\t     dwarf2_per_cu_data *,\n \t\t     gdb::hash_enum<sect_offset>>\n     debug_info_offset_to_per_cu;\n-  for (dwarf2_per_cu_data *per_cu : per_objfile->per_bfd->all_comp_units)\n+  for (dwarf2_per_cu_data *per_cu : per_bfd->all_comp_units)\n     {\n       const auto insertpair\n \t= debug_info_offset_to_per_cu.emplace (per_cu->sect_off, per_cu);\n@@ -5299,7 +5299,7 @@ dwarf2_read_debug_names (dwarf2_per_objfile *per_objfile)\n   dwarf2_per_bfd *per_bfd = per_objfile->per_bfd;\n \n   if (!read_debug_names_from_section (objfile, objfile_name (objfile),\n-\t\t\t\t      &per_objfile->per_bfd->debug_names, *map))\n+\t\t\t\t      &per_bfd->debug_names, *map))\n     return false;\n \n   /* Don't use the index if it's empty.  */\n@@ -5341,7 +5341,7 @@ dwarf2_read_debug_names (dwarf2_per_objfile *per_objfile)\n   per_bfd->debug_names_table = std::move (map);\n   per_bfd->using_index = 1;\n   per_bfd->quick_file_names_table =\n-    create_quick_file_names_table (per_objfile->per_bfd->all_comp_units.size ());\n+    create_quick_file_names_table (per_bfd->all_comp_units.size ());\n \n   return true;\n }\n@@ -5596,7 +5596,7 @@ dw2_debug_names_iterator::next ()\n \t{\n \tcase DW_IDX_compile_unit:\n \t  /* Don't crash on bad data.  */\n-\t  if (ull >= m_per_objfile->per_bfd->all_comp_units.size ())\n+\t  if (ull >= per_bfd->all_comp_units.size ())\n \t    {\n \t      complaint (_(\".debug_names entry has bad CU index %s\"\n \t\t\t   \" [in module %s]\"),\n@@ -7455,7 +7455,7 @@ create_type_unit_group (struct dwarf2_cu *cu, sect_offset line_offset_struct)\n   struct dwarf2_per_cu_data *per_cu;\n   struct type_unit_group *tu_group;\n \n-  tu_group = OBSTACK_ZALLOC (&per_objfile->per_bfd->obstack, type_unit_group);\n+  tu_group = OBSTACK_ZALLOC (&per_bfd->obstack, type_unit_group);\n   per_cu = &tu_group->per_cu;\n   per_cu->per_bfd = per_bfd;\n \n@@ -8081,8 +8081,7 @@ dwarf2_build_psymtabs_hard (dwarf2_per_objfile *per_objfile)\n \t\t\t   objfile_name (objfile));\n \n   scoped_restore restore_reading_psyms\n-    = make_scoped_restore (&per_objfile->per_bfd->reading_partial_symbols,\n-\t\t\t   true);\n+    = make_scoped_restore (&per_bfd->reading_partial_symbols, true);\n \n   per_bfd->info.read (objfile);\n "
    }
  ]
}