{
  "sha": "9db9aa232ac37e4dca92733678748adc1bfc7ef0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWRiOWFhMjMyYWMzN2U0ZGNhOTI3MzM2Nzg3NDhhZGMxYmZjN2VmMA==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:27Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:27Z"
    },
    "message": "gdbserver/linux-low: turn 'insert_point' and 'remove_point' into methods\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn the 'insert_point' and 'remove_point' linux target ops into\n\tmethods of linux_process_target.\n\n\t* linux-low.h (struct linux_target_ops): Remove the ops.\n\t(class linux_process_target) <low_insert_point>\n\t<low_remove_point>: Declare.\n\t* linux-low.cc (linux_process_target::low_insert_point)\n\t(linux_process_target::low_remove_point): Define.\n\t(linux_process_target::insert_point)\n\t(linux_process_target::remove_point): Update for calls to\n\tlow_insert_point and low_remove_point.\n\t* linux-x86-low.cc (class x86_target) <low_insert_point>\n\t<low_remove_point>: Declare.\n\t(x86_insert_point): Turn into...\n\t(x86_target::low_insert_point): ...this.\n\t(x86_remove_point): Turn into...\n\t(x86_target::low_remove_point): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-aarch64-low.cc (class aarch64_target) <low_insert_point>\n\t<low_remove_point>: Declare.\n\t(aarch64_insert_point): Turn into...\n\t(aarch64_target::low_insert_point): ...this.\n\t(aarch64_remove_point): Turn into...\n\t(aarch64_target::low_remove_point): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-arm-low.cc (class arm_target) <low_insert_point>\n\t<low_remove_point>: Declare.\n\t(arm_insert_point): Turn into...\n\t(arm_target::low_insert_point): ...this.\n\t(arm_remove_point): Turn into...\n\t(arm_target::low_remove_point): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-crisv32-low.cc (class crisv32_target) <low_insert_point>\n\t<low_remove_point>: Declare.\n\t(crisv32_insert_point): Turn into...\n\t(crisv32_target::low_insert_point): ...this.\n\t(crisv32_remove_point): Turn into...\n\t(crisv32_target::low_remove_point): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-mips-low.cc (class mips_target) <low_insert_point>\n\t<low_remove_point>: Declare.\n\t(mips_insert_point): Turn into...\n\t(mips_target::low_insert_point): ...this.\n\t(mips_remove_point): Turn into...\n\t(mips_target::low_remove_point): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-ppc-low.cc (class ppc_target) <low_insert_point>\n\t<low_remove_point>: Declare.\n\t(ppc_insert_point): Turn into...\n\t(ppc_target::low_insert_point): ...this.\n\t(ppc_remove_point): Turn into...\n\t(ppc_target::low_remove_point): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-bfin-low.cc (the_low_target): Remove the op fields.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-s390-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-sparc-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.",
    "tree": {
      "sha": "7c3d910fc277f04624576333969b0bfc27f45559",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7c3d910fc277f04624576333969b0bfc27f45559"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9db9aa232ac37e4dca92733678748adc1bfc7ef0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9db9aa232ac37e4dca92733678748adc1bfc7ef0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9db9aa232ac37e4dca92733678748adc1bfc7ef0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9db9aa232ac37e4dca92733678748adc1bfc7ef0/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/007c9b975dcb9ad50b45d52d2d7a955537beefb7"
    }
  ],
  "stats": {
    "total": 260,
    "additions": 172,
    "deletions": 88
  },
  "files": [
    {
      "sha": "45860154721dfdd14cc67d18654d5d13b2be0cff",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 65,
      "deletions": 0,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -1,3 +1,68 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn the 'insert_point' and 'remove_point' linux target ops into\n+\tmethods of linux_process_target.\n+\n+\t* linux-low.h (struct linux_target_ops): Remove the ops.\n+\t(class linux_process_target) <low_insert_point>\n+\t<low_remove_point>: Declare.\n+\t* linux-low.cc (linux_process_target::low_insert_point)\n+\t(linux_process_target::low_remove_point): Define.\n+\t(linux_process_target::insert_point)\n+\t(linux_process_target::remove_point): Update for calls to\n+\tlow_insert_point and low_remove_point.\n+\t* linux-x86-low.cc (class x86_target) <low_insert_point>\n+\t<low_remove_point>: Declare.\n+\t(x86_insert_point): Turn into...\n+\t(x86_target::low_insert_point): ...this.\n+\t(x86_remove_point): Turn into...\n+\t(x86_target::low_remove_point): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-aarch64-low.cc (class aarch64_target) <low_insert_point>\n+\t<low_remove_point>: Declare.\n+\t(aarch64_insert_point): Turn into...\n+\t(aarch64_target::low_insert_point): ...this.\n+\t(aarch64_remove_point): Turn into...\n+\t(aarch64_target::low_remove_point): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-arm-low.cc (class arm_target) <low_insert_point>\n+\t<low_remove_point>: Declare.\n+\t(arm_insert_point): Turn into...\n+\t(arm_target::low_insert_point): ...this.\n+\t(arm_remove_point): Turn into...\n+\t(arm_target::low_remove_point): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-crisv32-low.cc (class crisv32_target) <low_insert_point>\n+\t<low_remove_point>: Declare.\n+\t(crisv32_insert_point): Turn into...\n+\t(crisv32_target::low_insert_point): ...this.\n+\t(crisv32_remove_point): Turn into...\n+\t(crisv32_target::low_remove_point): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-mips-low.cc (class mips_target) <low_insert_point>\n+\t<low_remove_point>: Declare.\n+\t(mips_insert_point): Turn into...\n+\t(mips_target::low_insert_point): ...this.\n+\t(mips_remove_point): Turn into...\n+\t(mips_target::low_remove_point): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-ppc-low.cc (class ppc_target) <low_insert_point>\n+\t<low_remove_point>: Declare.\n+\t(ppc_insert_point): Turn into...\n+\t(ppc_target::low_insert_point): ...this.\n+\t(ppc_remove_point): Turn into...\n+\t(ppc_target::low_remove_point): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-bfin-low.cc (the_low_target): Remove the op fields.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-s390-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-sparc-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tRemove the 'supports_z_point_type' linux target op and let the"
    },
    {
      "sha": "5660ec0fd6031000b7998d71032ee61382d111c8",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 14,
      "deletions": 10,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -80,6 +80,12 @@ class aarch64_target : public linux_process_target\n   void low_set_pc (regcache *regcache, CORE_ADDR newpc) override;\n \n   bool low_breakpoint_at (CORE_ADDR pc) override;\n+\n+  int low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n+\n+  int low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -308,14 +314,14 @@ aarch64_target::supports_z_point_type (char z_type)\n     }\n }\n \n-/* Implementation of linux_target_ops method \"insert_point\".\n+/* Implementation of linux target ops method \"low_insert_point\".\n \n    It actually only records the info of the to-be-inserted bp/wp;\n    the actual insertion will happen when threads are resumed.  */\n \n-static int\n-aarch64_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t      int len, struct raw_breakpoint *bp)\n+int\n+aarch64_target::low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\t  int len, raw_breakpoint *bp)\n {\n   int ret;\n   enum target_hw_bp_type targ_type;\n@@ -357,14 +363,14 @@ aarch64_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n   return ret;\n }\n \n-/* Implementation of linux_target_ops method \"remove_point\".\n+/* Implementation of linux target ops method \"low_remove_point\".\n \n    It actually only records the info of the to-be-removed bp/wp,\n    the actual removal will be done when threads are resumed.  */\n \n-static int\n-aarch64_remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t      int len, struct raw_breakpoint *bp)\n+int\n+aarch64_target::low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\t  int len, raw_breakpoint *bp)\n {\n   int ret;\n   enum target_hw_bp_type targ_type;\n@@ -3106,8 +3112,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_insert_point,\n-  aarch64_remove_point,\n   aarch64_stopped_by_watchpoint,\n   aarch64_stopped_data_address,\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "edb8cd05c1d1b8b2d8c3e0cbc63fdd1c3bce7a24",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -89,6 +89,12 @@ class arm_target : public linux_process_target\n   std::vector<CORE_ADDR> low_get_next_pcs (regcache *regcache) override;\n \n   bool low_breakpoint_at (CORE_ADDR pc) override;\n+\n+  int low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n+\n+  int low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -576,9 +582,9 @@ arm_target::supports_z_point_type (char z_type)\n }\n \n /* Insert hardware break-/watchpoint.  */\n-static int\n-arm_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t  int len, struct raw_breakpoint *bp)\n+int\n+arm_target::low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t      int len, raw_breakpoint *bp)\n {\n   struct process_info *proc = current_process ();\n   struct arm_linux_hw_breakpoint p, *pts;\n@@ -621,9 +627,9 @@ arm_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n }\n \n /* Remove hardware break-/watchpoint.  */\n-static int\n-arm_remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t  int len, struct raw_breakpoint *bp)\n+int\n+arm_target::low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t      int len, raw_breakpoint *bp)\n {\n   struct process_info *proc = current_process ();\n   struct arm_linux_hw_breakpoint p, *pts;\n@@ -1095,8 +1101,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  arm_insert_point,\n-  arm_remove_point,\n   arm_stopped_by_watchpoint,\n   arm_stopped_data_address,\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "50c1743a6b4b1620b756a116841d510b2357ab8f",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -171,8 +171,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* insert_point */\n-  NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */\n   NULL, /* stopped_data_address */\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "4d5edc570e55fed02925c6eabc51323a2cad08c9",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -47,6 +47,12 @@ class crisv32_target : public linux_process_target\n   void low_set_pc (regcache *regcache, CORE_ADDR newpc) override;\n \n   bool low_breakpoint_at (CORE_ADDR pc) override;\n+\n+  int low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n+\n+  int low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -193,9 +199,9 @@ crisv32_target::supports_z_point_type (char z_type)\n     }\n }\n \n-static int\n-cris_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t   int len, struct raw_breakpoint *bp)\n+int\n+crisv32_target::low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\t  int len, raw_breakpoint *bp)\n {\n   int bp;\n   unsigned long bp_ctrl;\n@@ -266,9 +272,9 @@ cris_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n   return 0;\n }\n \n-static int\n-cris_remove_point (enum raw_bkpt_type type, CORE_ADDR addr, int len,\n-\t\t   struct raw_breakpoint *bp)\n+int\n+crisv32_target::low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\t  int len, raw_breakpoint *bp)\n {\n   int bp;\n   unsigned long bp_ctrl;\n@@ -458,8 +464,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  cris_insert_point,\n-  cris_remove_point,\n   cris_stopped_by_watchpoint,\n   cris_stopped_data_address,\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "814c03705cd3f739f300d6629d4fbeee95a859e6",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 18,
      "deletions": 8,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -5835,11 +5835,16 @@ linux_process_target::insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n {\n   if (type == raw_bkpt_type_sw)\n     return insert_memory_breakpoint (bp);\n-  else if (the_low_target.insert_point != NULL)\n-    return the_low_target.insert_point (type, addr, size, bp);\n   else\n-    /* Unsupported (see target.h).  */\n-    return 1;\n+    return low_insert_point (type, addr, size, bp);\n+}\n+\n+int\n+linux_process_target::low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\t\tint size, raw_breakpoint *bp)\n+{\n+  /* Unsupported (see target.h).  */\n+  return 1;\n }\n \n int\n@@ -5848,11 +5853,16 @@ linux_process_target::remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n {\n   if (type == raw_bkpt_type_sw)\n     return remove_memory_breakpoint (bp);\n-  else if (the_low_target.remove_point != NULL)\n-    return the_low_target.remove_point (type, addr, size, bp);\n   else\n-    /* Unsupported (see target.h).  */\n-    return 1;\n+    return low_remove_point (type, addr, size, bp);\n+}\n+\n+int\n+linux_process_target::low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\t\tint size, raw_breakpoint *bp)\n+{\n+  /* Unsupported (see target.h).  */\n+  return 1;\n }\n \n /* Implement the stopped_by_sw_breakpoint target_ops"
    },
    {
      "sha": "0fdd8ceb9457facc0ec58a549928d9d6c1af26ed",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -131,13 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Breakpoint and watchpoint related functions.  See target.h for\n-     comments.  */\n-  int (*insert_point) (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t       int size, struct raw_breakpoint *bp);\n-  int (*remove_point) (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t       int size, struct raw_breakpoint *bp);\n-\n   int (*stopped_by_watchpoint) (void);\n   CORE_ADDR (*stopped_data_address) (void);\n \n@@ -664,6 +657,14 @@ class linux_process_target : public process_stratum_target\n   /* Return true if there is a breakpoint at PC.  */\n   virtual bool low_breakpoint_at (CORE_ADDR pc) = 0;\n \n+  /* Breakpoint and watchpoint related functions.  See target.h for\n+     comments.  */\n+  virtual int low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\tint size, raw_breakpoint *bp);\n+\n+  virtual int low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t\tint size, raw_breakpoint *bp);\n+\n   /* How many bytes the PC should be decremented after a break.  */\n   virtual int low_decr_pc_after_break ();\n };"
    },
    {
      "sha": "bbafe8fa5c2d0c7024e16f656618bd5886599262",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -161,8 +161,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* insert_point */\n-  NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */\n   NULL, /* stopped_data_address */\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "fd2d601ba082f51aaa22bc4e4eb648f3c13e4748",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -265,8 +265,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* insert_point */\n-  NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */\n   NULL, /* stopped_data_address */\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "5696af6fae26aa71ec34eebfe9857216fb7aeb2a",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -54,6 +54,12 @@ class mips_target : public linux_process_target\n   void low_set_pc (regcache *regcache, CORE_ADDR newpc) override;\n \n   bool low_breakpoint_at (CORE_ADDR pc) override;\n+\n+  int low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n+\n+  int low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -508,12 +514,12 @@ mips_target::supports_z_point_type (char z_type)\n     }\n }\n \n-/* This is the implementation of linux_target_ops method\n-   insert_point.  */\n+/* This is the implementation of linux target ops method\n+   low_insert_point.  */\n \n-static int\n-mips_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t   int len, struct raw_breakpoint *bp)\n+int\n+mips_target::low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t       int len, raw_breakpoint *bp)\n {\n   struct process_info *proc = current_process ();\n   struct arch_process_info *priv = proc->priv->arch_private;\n@@ -553,12 +559,12 @@ mips_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n   return 0;\n }\n \n-/* This is the implementation of linux_target_ops method\n-   remove_point.  */\n+/* This is the implementation of linux target ops method\n+   low_remove_point.  */\n \n-static int\n-mips_remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t   int len, struct raw_breakpoint *bp)\n+int\n+mips_target::low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t       int len, raw_breakpoint *bp)\n {\n   struct process_info *proc = current_process ();\n   struct arch_process_info *priv = proc->priv->arch_private;\n@@ -970,8 +976,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  mips_insert_point,\n-  mips_remove_point,\n   mips_stopped_by_watchpoint,\n   mips_stopped_data_address,\n   mips_collect_ptrace_register,"
    },
    {
      "sha": "d28551534bfa5e992b888975eabd9d38910382a6",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 14,
      "deletions": 10,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -71,6 +71,12 @@ class ppc_target : public linux_process_target\n   void low_set_pc (regcache *regcache, CORE_ADDR newpc) override;\n \n   bool low_breakpoint_at (CORE_ADDR pc) override;\n+\n+  int low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n+\n+  int low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -346,12 +352,12 @@ ppc_target::supports_z_point_type (char z_type)\n     }\n }\n \n-/* Implement insert_point target-ops.\n+/* Implement the low_insert_point linux target op.\n    Returns 0 on success, -1 on failure and 1 on unsupported.  */\n \n-static int\n-ppc_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t  int size, struct raw_breakpoint *bp)\n+int\n+ppc_target::low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t      int size, raw_breakpoint *bp)\n {\n   switch (type)\n     {\n@@ -367,12 +373,12 @@ ppc_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n     }\n }\n \n-/* Implement remove_point target-ops.\n+/* Implement the low_remove_point linux target op.\n    Returns 0 on success, -1 on failure and 1 on unsupported.  */\n \n-static int\n-ppc_remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t  int size, struct raw_breakpoint *bp)\n+int\n+ppc_target::low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t      int size, raw_breakpoint *bp)\n {\n   switch (type)\n     {\n@@ -3410,8 +3416,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  ppc_insert_point,\n-  ppc_remove_point,\n   NULL,\n   NULL,\n   ppc_collect_ptrace_register,"
    },
    {
      "sha": "36471fbea62e77b7aab0e4e4051716478a585cb0",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -2838,8 +2838,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,\n-  NULL,\n   NULL,\n   NULL,\n   s390_collect_ptrace_register,"
    },
    {
      "sha": "c4af7defadbbf6f301e05b7dac8cf0ee12fa24cd",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -192,8 +192,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* insert_point */\n-  NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */\n   NULL, /* stopped_data_address */\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "0380cedb800306767ae1cba3faa7e81a2fefef7f",
      "filename": "gdbserver/linux-sparc-low.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-sparc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-sparc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sparc-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -341,7 +341,7 @@ sparc_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, NULL, NULL, NULL,\n+  NULL, NULL,\n   NULL, NULL\n };\n "
    },
    {
      "sha": "e6f2203d492c92b74e9cd190721920c510b7b0be",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -423,8 +423,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* insert_point */\n-  NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */\n   NULL, /* stopped_data_address */\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "f9c5460989e028ba8ab4f6eb1a0c2d4a3bf3ee12",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -224,8 +224,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* insert_point */\n-  NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */\n   NULL, /* stopped_data_address */\n   NULL, /* collect_ptrace_register */"
    },
    {
      "sha": "e6566a1da9475da9f952f02a757385b4f584f6f9",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -127,6 +127,12 @@ class x86_target : public linux_process_target\n   int low_decr_pc_after_break () override;\n \n   bool low_breakpoint_at (CORE_ADDR pc) override;\n+\n+  int low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n+\n+  int low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\tint size, raw_breakpoint *bp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -604,9 +610,9 @@ x86_target::supports_z_point_type (char z_type)\n     }\n }\n \n-static int\n-x86_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t  int size, struct raw_breakpoint *bp)\n+int\n+x86_target::low_insert_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t      int size, raw_breakpoint *bp)\n {\n   struct process_info *proc = current_process ();\n \n@@ -630,9 +636,9 @@ x86_insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n     }\n }\n \n-static int\n-x86_remove_point (enum raw_bkpt_type type, CORE_ADDR addr,\n-\t\t  int size, struct raw_breakpoint *bp)\n+int\n+x86_target::low_remove_point (raw_bkpt_type type, CORE_ADDR addr,\n+\t\t\t      int size, raw_breakpoint *bp)\n {\n   struct process_info *proc = current_process ();\n \n@@ -2912,8 +2918,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  x86_insert_point,\n-  x86_remove_point,\n   x86_stopped_by_watchpoint,\n   x86_stopped_data_address,\n   /* collect_ptrace_register/supply_ptrace_register are not needed in the"
    },
    {
      "sha": "a7023f465b298642bd5c268811059af2924d2395",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9db9aa232ac37e4dca92733678748adc1bfc7ef0/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=9db9aa232ac37e4dca92733678748adc1bfc7ef0",
      "patch": "@@ -329,8 +329,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* insert_point */\n-  NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */\n   NULL, /* stopped_data_address */\n   NULL, /* collect_ptrace_register */"
    }
  ]
}