{
  "sha": "6976b5b96120ad71af4cec2891f3d8ae7869e4e0",
  "node_id": "C_kwDOANOeidoAKDY5NzZiNWI5NjEyMGFkNzFhZjRjZWMyODkxZjNkOGFlNzg2OWU0ZTA",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-01T02:00:59Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-01T02:05:26Z"
    },
    "message": "gdb.base/corefile-buildid.exp: fix DUPLICATEs when failing to generate a core file\n\nWhen my system isn't properly configured to generate core files in the\nlocal directory, I see these DUPLICATEs:\n\n    DUPLICATE: gdb.base/corefile-buildid.exp: could not generate core file\n\nFix that by having a single with_test_prefix around that message and\nwhat follows.\n\nChange-Id: I4ac245fcce1c666db56e3bad3582aa17f183dcba",
    "tree": {
      "sha": "db32ef6209f4974b42e0cbedf63a311f9806f1df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/db32ef6209f4974b42e0cbedf63a311f9806f1df"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6976b5b96120ad71af4cec2891f3d8ae7869e4e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6976b5b96120ad71af4cec2891f3d8ae7869e4e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6976b5b96120ad71af4cec2891f3d8ae7869e4e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6976b5b96120ad71af4cec2891f3d8ae7869e4e0/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "360ef3b94a9120729ae36f1ca9e7e1935d5788eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/360ef3b94a9120729ae36f1ca9e7e1935d5788eb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/360ef3b94a9120729ae36f1ca9e7e1935d5788eb"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 19,
    "deletions": 19
  },
  "files": [
    {
      "sha": "e1703d6a24855bd733c20fbbad9fb882472456f3",
      "filename": "gdb/testsuite/gdb.base/corefile-buildid.exp",
      "status": "modified",
      "additions": 19,
      "deletions": 19,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6976b5b96120ad71af4cec2891f3d8ae7869e4e0/gdb/testsuite/gdb.base/corefile-buildid.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6976b5b96120ad71af4cec2891f3d8ae7869e4e0/gdb/testsuite/gdb.base/corefile-buildid.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/corefile-buildid.exp?ref=6976b5b96120ad71af4cec2891f3d8ae7869e4e0",
      "patch": "@@ -257,30 +257,30 @@ proc do_corefile_buildid_tests {args} {\n \tlappend suffix \"sepdebug\"\n     }\n \n-    # Find the core file.\n-    set corefile [core_find $program_to_run]\n-    if {$corefile == \"\"} {\n-\tuntested \"could not generate core file\"\n-\treturn\n-    }\n-    verbose -log \"corefile is $corefile\"\n+    with_test_prefix \"[join $suffix \\ ]\" {\n+\t# Find the core file.\n+\tset corefile [core_find $program_to_run]\n+\tif {$corefile == \"\"} {\n+\t    untested \"could not generate core file\"\n+\t    return\n+\t}\n+\tverbose -log \"corefile is $corefile\"\n \n-    # Grab the build-id from the binary, removing \".debug\" from the end.\n-    set buildid [build_id_debug_filename_get $program_to_run]\n-    if {$buildid == \"\"} {\n-\tuntested \"binary for [join $suffix \\ ] has no build-id\"\n-    }\n-    regsub {\\.debug$} $buildid {} buildid\n-    verbose -log \"build-id is $buildid\"\n+\t# Grab the build-id from the binary, removing \".debug\" from the end.\n+\tset buildid [build_id_debug_filename_get $program_to_run]\n+\tif {$buildid == \"\"} {\n+\t    untested \"binary has no build-id\"\n+\t}\n+\tregsub {\\.debug$} $buildid {} buildid\n+\tverbose -log \"build-id is $buildid\"\n \n-    with_test_prefix \"[join $suffix \\ ]\"  {\n \tlocate_exec_from_core_build_id $corefile $buildid \\\n \t    [join $suffix -] $sepdebug false $shared\n-    }\n \n-    with_test_prefix \"symlink [join $suffix \\ ]\" {\n-\tlocate_exec_from_core_build_id $corefile $buildid \\\n-\t    [join $suffix -] $sepdebug true $shared\n+\twith_test_prefix \"symlink\" {\n+\t    locate_exec_from_core_build_id $corefile $buildid \\\n+\t\t[join $suffix -] $sepdebug true $shared\n+\t}\n     }\n }\n "
    }
  ]
}