{
  "sha": "df4a0200dc896abe32bef4172ca047465caaedfe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGY0YTAyMDBkYzg5NmFiZTMyYmVmNDE3MmNhMDQ3NDY1Y2FhZWRmZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-01-13T19:04:53Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-01-13T19:04:53Z"
    },
    "message": "gdbserver: make some functions static in linux-x86-low.c\n\nThese functions are only used in this file, so should be static.\n\ngdb/gdbserver/ChangeLog:\n\n\t* linux-x86-low.c (x86_linux_regs_info, amd64_emit_eq_goto,\n\tamd64_emit_ne_goto, amd64_emit_lt_goto, amd64_emit_le_goto,\n\tamd64_emit_gt_goto, amd64_emit_ge_goto, amd64_emit_ge_goto,\n\ti386_emit_eq_goto, i386_emit_ne_goto, i386_emit_lt_goto,\n\ti386_emit_le_goto, i386_emit_gt_goto, i386_emit_ge_goto): Make\n\tstatic.\n\nChange-Id: I703da41867735aefadd49140e80cd60f6ab9ad39",
    "tree": {
      "sha": "25e46e6d4cffe62faec72aa96e3769bf64588450",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/25e46e6d4cffe62faec72aa96e3769bf64588450"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/df4a0200dc896abe32bef4172ca047465caaedfe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df4a0200dc896abe32bef4172ca047465caaedfe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/df4a0200dc896abe32bef4172ca047465caaedfe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df4a0200dc896abe32bef4172ca047465caaedfe/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "89e94ec9af58bfab38d469fe42c3eaf2aeb35e31",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89e94ec9af58bfab38d469fe42c3eaf2aeb35e31",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/89e94ec9af58bfab38d469fe42c3eaf2aeb35e31"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 22,
    "deletions": 13
  },
  "files": [
    {
      "sha": "9842da52b709db764b93a655b87b6c5c32ba1ff1",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df4a0200dc896abe32bef4172ca047465caaedfe/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df4a0200dc896abe32bef4172ca047465caaedfe/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=df4a0200dc896abe32bef4172ca047465caaedfe",
      "patch": "@@ -1,3 +1,12 @@\n+2020-01-13  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* linux-x86-low.c (x86_linux_regs_info, amd64_emit_eq_goto,\n+\tamd64_emit_ne_goto, amd64_emit_lt_goto, amd64_emit_le_goto,\n+\tamd64_emit_gt_goto, amd64_emit_ge_goto, amd64_emit_ge_goto,\n+\ti386_emit_eq_goto, i386_emit_ne_goto, i386_emit_lt_goto,\n+\ti386_emit_le_goto, i386_emit_gt_goto, i386_emit_ge_goto): Make\n+\tstatic.\n+\n 2020-01-13  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* inferiors.c: Include gdbsupport/common-inferior.h."
    },
    {
      "sha": "09ec22ff678f314dcab0d0e35652e0728139ce1a",
      "filename": "gdb/gdbserver/linux-x86-low.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df4a0200dc896abe32bef4172ca047465caaedfe/gdb/gdbserver/linux-x86-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df4a0200dc896abe32bef4172ca047465caaedfe/gdb/gdbserver/linux-x86-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-x86-low.c?ref=df4a0200dc896abe32bef4172ca047465caaedfe",
      "patch": "@@ -961,7 +961,7 @@ static struct regs_info i386_linux_regs_info =\n     &x86_regsets_info\n   };\n \n-const struct regs_info *\n+static const struct regs_info *\n x86_linux_regs_info (void)\n {\n #ifdef __x86_64__\n@@ -1970,7 +1970,7 @@ amd64_emit_void_call_2 (CORE_ADDR fn, int arg1)\n \t    \"pop %rax\");\n }\n \n-void\n+static void\n amd64_emit_eq_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM (amd64_eq,\n@@ -1990,7 +1990,7 @@ amd64_emit_eq_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n amd64_emit_ne_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM (amd64_ne,\n@@ -2010,7 +2010,7 @@ amd64_emit_ne_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n amd64_emit_lt_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM (amd64_lt,\n@@ -2030,7 +2030,7 @@ amd64_emit_lt_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n amd64_emit_le_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM (amd64_le,\n@@ -2050,7 +2050,7 @@ amd64_emit_le_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n amd64_emit_gt_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM (amd64_gt,\n@@ -2070,7 +2070,7 @@ amd64_emit_gt_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n amd64_emit_ge_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM (amd64_ge,\n@@ -2605,7 +2605,7 @@ i386_emit_void_call_2 (CORE_ADDR fn, int arg1)\n }\n \n \n-void\n+static void\n i386_emit_eq_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM32 (eq,\n@@ -2630,7 +2630,7 @@ i386_emit_eq_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n i386_emit_ne_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM32 (ne,\n@@ -2656,7 +2656,7 @@ i386_emit_ne_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n i386_emit_lt_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM32 (lt,\n@@ -2682,7 +2682,7 @@ i386_emit_lt_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n i386_emit_le_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM32 (le,\n@@ -2708,7 +2708,7 @@ i386_emit_le_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n i386_emit_gt_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM32 (gt,\n@@ -2734,7 +2734,7 @@ i386_emit_gt_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-void\n+static void\n i386_emit_ge_goto (int *offset_p, int *size_p)\n {\n   EMIT_ASM32 (ge,"
    }
  ]
}