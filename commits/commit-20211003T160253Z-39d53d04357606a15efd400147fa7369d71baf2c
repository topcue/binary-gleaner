{
  "sha": "39d53d04357606a15efd400147fa7369d71baf2c",
  "node_id": "C_kwDOANOeidoAKDM5ZDUzZDA0MzU3NjA2YTE1ZWZkNDAwMTQ3ZmE3MzY5ZDcxYmFmMmM",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-10-03T16:02:53Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-10-03T16:02:53Z"
    },
    "message": "sim: filter out SIGSTKSZ [PR sim/28302]\n\nWe map target signals to host signals so we can propagate signals\nbetween the host & simulated worlds.  That means we need to know\nthe symbolic names & values of all signals that might be sent.\n\nThe tools that generate that list use signal.h and include all\nsymbols that start with \"SIG\" so as to automatically include any\nnew symbols that the C library might add.  Unfortunately, this\nalso picks up \"SIGSTKSZ\" which is not actually a signal itself,\nbut a signal related setting -- it's the size of the stack when\na signal is handled.\n\nBy itself this doesn't super matter as we will never see a signal\nwith that same value (since the range of valid signals tend to be\nway less than 1024, and the size of the default signal stack will\nnever be that small).  But with recent glibc changes that make this\ninto a dynamic value instead of a compile-time constant, some users\nsee build failures when building the sim.\n\nAs suggested by Adam Sampson, update our scripts to ignore this\nsymbol to simplify everything and avoid the build failure.\n\nBug: https://sourceware.org/PR28302",
    "tree": {
      "sha": "fd46aa00b5dff9df14057a26024f87d7c326f052",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fd46aa00b5dff9df14057a26024f87d7c326f052"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/39d53d04357606a15efd400147fa7369d71baf2c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39d53d04357606a15efd400147fa7369d71baf2c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/39d53d04357606a15efd400147fa7369d71baf2c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39d53d04357606a15efd400147fa7369d71baf2c/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "46039d3632e32d9a404c1f18cf55f14c894e4627",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46039d3632e32d9a404c1f18cf55f14c894e4627",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/46039d3632e32d9a404c1f18cf55f14c894e4627"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 5,
    "deletions": 7
  },
  "files": [
    {
      "sha": "0340ed54764e0485dbe42566bdc1bfc847eed731",
      "filename": "sim/bfin/linux-targ-map.h",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39d53d04357606a15efd400147fa7369d71baf2c/sim/bfin/linux-targ-map.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39d53d04357606a15efd400147fa7369d71baf2c/sim/bfin/linux-targ-map.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/linux-targ-map.h?ref=39d53d04357606a15efd400147fa7369d71baf2c",
      "patch": "@@ -30,6 +30,7 @@ echo\n # XXX: nothing uses this ?\n echo '#include <signal.h>' | \\\n bfin-uclinux-gcc -E -dD -P - | \\\n+grep -v SIGSTKSZ | \\\n sed -r -n \\\n     -e '1istatic CB_TARGET_DEFS_MAP cb_linux_signal_map[] = {' \\\n     -e '$i\\ \\ { 0, -1, -1 }\\n};' \\\n@@ -1987,10 +1988,6 @@ static CB_TARGET_DEFS_MAP cb_linux_signal_map[] =\n #ifdef SIG_SETMASK\n # define TARGET_LINUX_SIG_SETMASK 2\n   { \"SIG_SETMASK\", SIG_SETMASK, TARGET_LINUX_SIG_SETMASK },\n-#endif\n-#ifdef SIGSTKSZ\n-# define TARGET_LINUX_SIGSTKSZ 8192\n-  { \"SIGSTKSZ\", SIGSTKSZ, TARGET_LINUX_SIGSTKSZ },\n #endif\n   { 0, -1, -1 }\n };"
    },
    {
      "sha": "955ace34311068c5356bafae4f0dc454da0f08b8",
      "filename": "sim/common/gennltvals.py",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39d53d04357606a15efd400147fa7369d71baf2c/sim/common/gennltvals.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39d53d04357606a15efd400147fa7369d71baf2c/sim/common/gennltvals.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/gennltvals.py?ref=39d53d04357606a15efd400147fa7369d71baf2c",
      "patch": "@@ -67,6 +67,7 @@\n def gentvals(output: TextIO, cpp: str, srctype: str, srcdir: Path,\n              headers: Iterable[str],\n              pattern: str,\n+             filter: str = r'^$',\n              target: str = None):\n     \"\"\"Extract constants from the specified files using a regular expression.\n \n@@ -94,12 +95,13 @@ def gentvals(output: TextIO, cpp: str, srctype: str, srcdir: Path,\n     srcfile = ''.join(f'#include <{x}>\\n' for x in headers)\n     syms = set()\n     define_pattern = re.compile(r'^#\\s*define\\s+(' + pattern + ')')\n+    filter_pattern = re.compile(filter)\n     for header in headers:\n         with open(srcdir / header, 'r', encoding='utf-8') as fp:\n             data = fp.read()\n         for line in data.splitlines():\n             m = define_pattern.match(line)\n-            if m:\n+            if m and not filter_pattern.search(line):\n                 syms.add(m.group(1))\n     for sym in sorted(syms):\n         srcfile += f'#ifdef {sym}\\nDEFVAL {{ \"{sym}\", {sym} }},\\n#endif\\n'\n@@ -129,7 +131,7 @@ def gen_common(output: TextIO, newlib: Path, cpp: str):\n              ('errno.h', 'sys/errno.h'), 'E[A-Z0-9]*')\n \n     gentvals(output, cpp, 'signal', newlib / 'newlib/libc/include',\n-             ('signal.h', 'sys/signal.h'), r'SIG[A-Z0-9]*')\n+             ('signal.h', 'sys/signal.h'), r'SIG[A-Z0-9]*', filter=r'SIGSTKSZ')\n \n     gentvals(output, cpp, 'open', newlib / 'newlib/libc/include',\n              ('fcntl.h', 'sys/fcntl.h', 'sys/_default_fcntl.h'), r'O_[A-Z0-9]*')"
    },
    {
      "sha": "8bc6ae59026dbff0a24ebc1f8d9af3ace6aa6b28",
      "filename": "sim/common/nltvals.def",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39d53d04357606a15efd400147fa7369d71baf2c/sim/common/nltvals.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39d53d04357606a15efd400147fa7369d71baf2c/sim/common/nltvals.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/nltvals.def?ref=39d53d04357606a15efd400147fa7369d71baf2c",
      "patch": "@@ -116,7 +116,6 @@\n  { \"SIGPROF\", 27 },\n  { \"SIGQUIT\", 3 },\n  { \"SIGSEGV\", 11 },\n- { \"SIGSTKSZ\", 8192 },\n  { \"SIGSTOP\", 17 },\n  { \"SIGSYS\", 12 },\n  { \"SIGTERM\", 15 },"
    }
  ]
}