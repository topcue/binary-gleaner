{
  "sha": "c5cd900e4f197870812c2d3e2c194871c171ef42",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzVjZDkwMGU0ZjE5Nzg3MDgxMmMyZDNlMmMxOTQ4NzFjMTcxZWY0Mg==",
  "commit": {
    "author": {
      "name": "Alok Kumar Sharma",
      "email": "AlokKumar.Sharma@amd.com",
      "date": "2020-09-03T16:35:18Z"
    },
    "committer": {
      "name": "Alok Kumar Sharma",
      "email": "AlokKumar.Sharma@amd.com",
      "date": "2020-09-03T16:35:18Z"
    },
    "message": "Allow Flang kind printing in complex.exp,pointer-to-pointer.exp,vla-ptr-info.exp\n\nIn the test cases complex.exp,pointer-to-pointer.exp,vla-ptr-info.exp\nfortran.exp routines are not used, which are to determine the type/kind\nstring. Due to this these test incorrectly fail for Flang.\nNow test cases are modified to use fortran.exp routines. fortran.exp\nfile is modified to add absent routines fortran_complex8 and\nfortran_complex16.\n\ngdb/testsuite/ChangeLog\n\n\t* lib/fortran.exp (fortran_complex8): New proc.\n\t(fortran_complex16): New proc.\n\t* gdb.fortran/complex.exp: Use routines from fortran.exp\n\t* gdb.fortran/pointer-to-pointer.exp: Likewise.\n\t* gdb.fortran/vla-ptr-info.exp: Likewise.",
    "tree": {
      "sha": "f2b9774241c88799f404b5c02615d7aa5250a78b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2b9774241c88799f404b5c02615d7aa5250a78b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c5cd900e4f197870812c2d3e2c194871c171ef42",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5cd900e4f197870812c2d3e2c194871c171ef42",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c5cd900e4f197870812c2d3e2c194871c171ef42",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5cd900e4f197870812c2d3e2c194871c171ef42/comments",
  "author": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e56798df08154c6e5155d3bb6cb536a14de0ebb4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e56798df08154c6e5155d3bb6cb536a14de0ebb4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e56798df08154c6e5155d3bb6cb536a14de0ebb4"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 53,
    "deletions": 8
  },
  "files": [
    {
      "sha": "854dca5128e049a3f0b7137519a8a55e78f8f7c9",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c5cd900e4f197870812c2d3e2c194871c171ef42",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-03  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>\n+\n+\t* lib/fortran.exp (fortran_complex8): New proc.\n+\t(fortran_complex16): New proc.\n+\t* gdb.fortran/complex.exp: Use routines from fortran.exp\n+\t* gdb.fortran/pointer-to-pointer.exp: Likewise.\n+\t* gdb.fortran/vla-ptr-info.exp: Likewise.\n+\n 2020-09-03  Tom de Vries  <tdevries@suse.de>\n \n \tPR breakpoint/26546"
    },
    {
      "sha": "5d52dce647de4f01199d208b2c85cb563c455a7d",
      "filename": "gdb/testsuite/gdb.fortran/complex.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/gdb.fortran/complex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/gdb.fortran/complex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/complex.exp?ref=c5cd900e4f197870812c2d3e2c194871c171ef42",
      "patch": "@@ -27,6 +27,10 @@ if ![fortran_runto_main] then {\n     continue\n }\n \n+# Depending on the compiler being used, the type names can be printed differently.\n+set complex4 [fortran_complex4]\n+set complex8 [fortran_complex8]\n+set complex16 [fortran_complex16]\n \n gdb_breakpoint [gdb_get_line_number \"stop\"]\n gdb_continue_to_breakpoint \"continue\"\n@@ -38,29 +42,29 @@ gdb_test \"print dc\" \" = \\\\(321,-22\\\\)\"\n \n gdb_test \"print c16\" \" = \\\\(-874,19\\\\)\"\n \n-gdb_test \"whatis c\" \"type = complex\\\\(kind=4\\\\)\"\n+gdb_test \"whatis c\" \"type = $complex4\"\n gdb_test \"print \\$_creal (c)\" \" = 1000\"\n with_test_prefix \"c\" {\n     gdb_test \"whatis \\$\" \" = real\"\n }\n \n-gdb_test \"whatis c4\" \"type = complex\\\\(kind=4\\\\)\"\n+gdb_test \"whatis c4\" \"type = $complex4\"\n gdb_test \"print \\$_creal (c4)\" \" = 1000\"\n with_test_prefix \"c4\" {\n     gdb_test \"whatis \\$\" \" = real\"\n }\n-gdb_test \"whatis c8\" \"type = complex\\\\(kind=8\\\\)\"\n+gdb_test \"whatis c8\" \"type = $complex8\"\n gdb_test \"print \\$_creal (c8)\" \" = 321\"\n with_test_prefix \"c8\" {\n     gdb_test \"whatis \\$\" \" = real\\\\*8\"\n }\n-gdb_test \"whatis dc\" \"type = complex\\\\(kind=8\\\\)\"\n+gdb_test \"whatis dc\" \"type = $complex8\"\n gdb_test \"print \\$_creal (dc)\" \" = 321\"\n with_test_prefix \"dc\" {\n     gdb_test \"whatis \\$\" \" = real\\\\*8\"\n }\n \n-gdb_test \"whatis c16\" \"type = complex\\\\(kind=16\\\\)\"\n+gdb_test \"whatis c16\" \"type = $complex16\"\n gdb_test \"print \\$_creal (c16)\" \" = -874\"\n with_test_prefix \"c16\" {\n     gdb_test \"whatis \\$\" \" = real\\\\*16\""
    },
    {
      "sha": "4c643c29903a0b5890fe48c60e98a5db3fbdaec9",
      "filename": "gdb/testsuite/gdb.fortran/pointer-to-pointer.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/gdb.fortran/pointer-to-pointer.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/gdb.fortran/pointer-to-pointer.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/pointer-to-pointer.exp?ref=c5cd900e4f197870812c2d3e2c194871c171ef42",
      "patch": "@@ -30,6 +30,9 @@ if ![fortran_runto_main] {\n     return -1\n }\n \n+# Depending on the compiler being used, the type names can be printed differently.\n+set real4 [fortran_real4]\n+\n gdb_breakpoint [gdb_get_line_number \"Break Here\"]\n gdb_continue_to_breakpoint \"Break Here\"\n \n@@ -38,9 +41,9 @@ gdb_test \"print *buffer\" \\\n \n set l_buffer_type [multi_line \\\n \t\t       \"Type l_buffer\" \\\n-\t\t       \"    real\\\\(kind=4\\\\) :: alpha\\\\(:\\\\)\" \\\n+\t\t       \"    $real4 :: alpha\\\\(:\\\\)\" \\\n \t\t       \"End Type l_buffer\" ]\n \n gdb_test \"ptype buffer\" \"type = PTR TO -> \\\\( ${l_buffer_type} \\\\)\"\n gdb_test \"ptype *buffer\" \"type = ${l_buffer_type}\"\n-gdb_test \"ptype buffer%alpha\" \"type = real\\\\(kind=4\\\\) \\\\(5\\\\)\"\n+gdb_test \"ptype buffer%alpha\" \"type = $real4 \\\\(5\\\\)\""
    },
    {
      "sha": "7ead9191b9363d3ca0b05e2299aa532b507cc612",
      "filename": "gdb/testsuite/gdb.fortran/vla-ptr-info.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/gdb.fortran/vla-ptr-info.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/gdb.fortran/vla-ptr-info.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-ptr-info.exp?ref=c5cd900e4f197870812c2d3e2c194871c171ef42",
      "patch": "@@ -28,8 +28,10 @@ if ![fortran_runto_main] {\n     return -1\n }\n \n+set real4 [fortran_real4]\n+\n # Check the status of a pointer to a dynamic array.\n gdb_breakpoint [gdb_get_line_number \"pvla-associated\"]\n gdb_continue_to_breakpoint \"pvla-associated\"\n-gdb_test \"print &pvla\" \" = \\\\(PTR TO -> \\\\( real\\\\(kind=4\\\\) \\\\(10,10,10\\\\) \\\\)\\\\) ${hex}\" \\\n+gdb_test \"print &pvla\" \" = \\\\(PTR TO -> \\\\( $real4 \\\\(10,10,10\\\\) \\\\)\\\\) ${hex}\" \\\n   \"print pvla pointer information\""
    },
    {
      "sha": "97e442b84905d95ca02b120761e4571c88b2bf1c",
      "filename": "gdb/testsuite/lib/fortran.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/lib/fortran.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5cd900e4f197870812c2d3e2c194871c171ef42/gdb/testsuite/lib/fortran.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/fortran.exp?ref=c5cd900e4f197870812c2d3e2c194871c171ef42",
      "patch": "@@ -99,6 +99,34 @@ proc fortran_complex4 {} {\n     }\n }\n \n+proc fortran_complex8 {} {\n+    if {[test_compiler_info {gcc-4-[012]-*}]} {\n+\treturn \"complex8\"\n+    } elseif {[test_compiler_info {gcc-*}]} {\n+\treturn \"complex\\\\(kind=8\\\\)\"\n+    } elseif {[test_compiler_info {clang-*}]} {\n+\treturn \"double complex\"\n+    } elseif {[test_compiler_info {icc-*}]} {\n+\treturn \"COMPLEX\\\\(8\\\\)\"\n+    } else {\n+\treturn \"unknown\"\n+    }\n+}\n+\n+proc fortran_complex16 {} {\n+    if {[test_compiler_info {gcc-4-[012]-*}]} {\n+\treturn \"complex16\"\n+    } elseif {[test_compiler_info {gcc-*}]} {\n+\treturn \"complex\\\\(kind=16\\\\)\"\n+    } elseif {[test_compiler_info {clang-*}]} {\n+\treturn \"quad complex\"\n+    } elseif {[test_compiler_info {icc-*}]} {\n+\treturn \"COMPLEX\\\\(16\\\\)\"\n+    } else {\n+\treturn \"unknown\"\n+    }\n+}\n+\n proc fortran_logical4 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"logical4\""
    }
  ]
}