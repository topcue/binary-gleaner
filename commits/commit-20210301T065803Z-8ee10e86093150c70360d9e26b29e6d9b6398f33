{
  "sha": "8ee10e86093150c70360d9e26b29e6d9b6398f33",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGVlMTBlODYwOTMxNTBjNzAzNjBkOWUyNmIyOWU2ZDliNjM5OGYzMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-28T21:52:49Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-01T06:58:03Z"
    },
    "message": "PR27451, -z start_stop_gc\n\nWhen --gc-sections is in effect, a reference from a retained section\nto __start_SECNAME or __stop_SECNAME causes all input sections named\nSECNAME to also be retained, if SECNAME is representable as a C\nidentifier and either __start_SECNAME or __stop_SECNAME is synthesized\nby the linker.  Add an option to disable that feature, effectively\nignoring any relocation that references a synthesized linker defined\n__start_ or __stop_ symbol.\n\n\tPR 27451\ninclude/\n\t* bfdlink.h (struct bfd_link_info): Add start_stop_gc.\nbfd/\n\t* elflink.c (_bfd_elf_gc_mark_rsec): Ignore synthesized linker\n\tdefined start/stop symbols when start_stop_gc.\n\t(bfd_elf_gc_mark_dynamic_ref_symbol): Likewise.\n\t(bfd_elf_define_start_stop): Don't modify ldscript_def syms.\n\t* linker.c (bfd_generic_define_start_stop): Likewise.\nld/\n\t* emultempl/elf.em: Handle -z start-stop-gc and -z nostart-stop-gc.\n\t* lexsup.c (elf_static_list_options): Display help for them.  Move\n\thelp for -z stack-size to here from elf_shlib_list_options. Add\n\thelp for -z start-stop-visibility and -z undefs.\n\t* ld.texi: Document -z start-stop-gc and -z nostart-stop-gc.\n\t* NEWS: Mention -z start-stop-gc.\n\t* testsuite/ld-gc/start2.s,\n\t* testsuite/ld-gc/start2.d: New test.\n\t* testsuite/ld-gc/gc.exp: Run it.",
    "tree": {
      "sha": "d9b022e21486a83064279ec452009a394b62a8b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d9b022e21486a83064279ec452009a394b62a8b0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8ee10e86093150c70360d9e26b29e6d9b6398f33",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ee10e86093150c70360d9e26b29e6d9b6398f33",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8ee10e86093150c70360d9e26b29e6d9b6398f33",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ee10e86093150c70360d9e26b29e6d9b6398f33/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7824c1d22fcab8a68162634d4293f4a6666ca43e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7824c1d22fcab8a68162634d4293f4a6666ca43e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7824c1d22fcab8a68162634d4293f4a6666ca43e"
    }
  ],
  "stats": {
    "total": 99,
    "additions": 95,
    "deletions": 4
  },
  "files": [
    {
      "sha": "818f580e359cd92d4bbaac4b2bc3556c6b07de68",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-01  Alan Modra  <amodra@gmail.com>\n+\t    Fangrui Song <maskray@google.com>\n+\n+\t* elflink.c (_bfd_elf_gc_mark_rsec): Ignore synthesized linker\n+\tdefined start/stop symbols when start_stop_gc.\n+\t(bfd_elf_gc_mark_dynamic_ref_symbol): Likewise.\n+\t(bfd_elf_define_start_stop): Don't modify ldscript_def syms.\n+\t* linker.c (bfd_generic_define_start_stop): Likewise.\n+\n 2021-02-25  Alan Modra  <amodra@gmail.com>\n \n \tPR 27441"
    },
    {
      "sha": "74b54c2c0c0887a34652fa7ab9089229ea0f0301",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -13444,12 +13444,15 @@ _bfd_elf_gc_mark_rsec (struct bfd_link_info *info, asection *sec,\n \t  hw->mark = 1;\n \t}\n \n-      if (start_stop != NULL)\n+      if (h->start_stop && !h->root.ldscript_def)\n \t{\n+\t  if (info->start_stop_gc)\n+\t    return NULL;\n+\n \t  /* To work around a glibc bug, mark XXX input sections\n \t     when there is a reference to __start_XXX or __stop_XXX\n \t     symbols.  */\n-\t  if (h->start_stop)\n+\t  else if (start_stop != NULL)\n \t    {\n \t      asection *s = h->u2.start_stop_section;\n \t      *start_stop = !s->gc_mark;\n@@ -13912,6 +13915,9 @@ bfd_elf_gc_mark_dynamic_ref_symbol (struct elf_link_hash_entry *h, void *inf)\n \n   if ((h->root.type == bfd_link_hash_defined\n        || h->root.type == bfd_link_hash_defweak)\n+      && (!h->start_stop\n+\t  || h->root.ldscript_def\n+\t  || !info->start_stop_gc)\n       && ((h->ref_dynamic && !h->forced_local)\n \t  || ((h->def_regular || ELF_COMMON_DEF_P (h))\n \t      && ELF_ST_VISIBILITY (h->other) != STV_INTERNAL\n@@ -14984,6 +14990,7 @@ bfd_elf_define_start_stop (struct bfd_link_info *info,\n \t\t\t    FALSE, FALSE, TRUE);\n   /* NB: Common symbols will be turned into definition later.  */\n   if (h != NULL\n+      && !h->root.ldscript_def\n       && (h->root.type == bfd_link_hash_undefined\n \t  || h->root.type == bfd_link_hash_undefweak\n \t  || ((h->ref_regular || h->def_dynamic)"
    },
    {
      "sha": "7e0415cbed276016dc844f8e38bcebe0a4238631",
      "filename": "bfd/linker.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/bfd/linker.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/bfd/linker.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/linker.c?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -3188,6 +3188,7 @@ bfd_generic_define_start_stop (struct bfd_link_info *info,\n \n   h = bfd_link_hash_lookup (info->hash, symbol, FALSE, FALSE, TRUE);\n   if (h != NULL\n+      && !h->ldscript_def\n       && (h->type == bfd_link_hash_undefined\n \t  || h->type == bfd_link_hash_undefweak))\n     {"
    },
    {
      "sha": "16c14d9b7a617f2bd41452f2e299c3eaf373c8e7",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-01  Alan Modra  <amodra@gmail.com>\n+\t    Fangrui Song <maskray@google.com>\n+\n+\t* bfdlink.h (struct bfd_link_info): Add start_stop_gc.\n+\n 2021-02-21  Alan Modra  <amodra@gmail.com>\n \n \t* bfdlink.h (struct bfd_link_info): Add warn_multiple_definition."
    },
    {
      "sha": "0871a0c025acf82d4af71b409c6ad914e9afabc5",
      "filename": "include/bfdlink.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/include/bfdlink.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/include/bfdlink.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/bfdlink.h?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -662,6 +662,10 @@ struct bfd_link_info\n   /* May be used to set DT_GNU_FLAGS_1 for ELF. */\n   bfd_vma gnu_flags_1;\n \n+  /* TRUE if references to __start_/__stop_ synthesized symbols do not\n+     specially retain C identifier named sections.  */\n+  int start_stop_gc;\n+\n   /* May be used to set ELF visibility for __start_* / __stop_.  */\n   unsigned int start_stop_visibility;\n "
    },
    {
      "sha": "d72d69af1204de0941220fdb439d43039a97bce2",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -1,3 +1,16 @@\n+2021-03-01  Alan Modra  <amodra@gmail.com>\n+\t    Fangrui Song <maskray@google.com>\n+\n+\t* emultempl/elf.em: Handle -z start-stop-gc and -z nostart-stop-gc.\n+\t* lexsup.c (elf_static_list_options): Display help for them.  Move\n+\thelp for -z stack-size to here from elf_shlib_list_options. Add\n+\thelp for -z start-stop-visibility and -z undefs.\n+\t* ld.texi: Document -z start-stop-gc and -z nostart-stop-gc.\n+\t* NEWS: Mention -z start-stop-gc.\n+\t* testsuite/ld-gc/start2.s,\n+\t* testsuite/ld-gc/start2.d: New test.\n+\t* testsuite/ld-gc/gc.exp: Run it.\n+\n 2021-03-01  Alan Modra  <amodra@gmail.com>\n \n \t* ldlang.c (undef_start_stop): For ELF make undefined start/stop"
    },
    {
      "sha": "d1aa3b07000b4d08a53758549ae6c2c6ab343a85",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -5,6 +5,9 @@\n * Add -z report-relative-reloc to x86 ELF linker to report dynamic\n   relative relocations.\n \n+* Add -z start-stop-gc to disable special treatment of __start_*/__stop_*\n+  references when --gc-sections.\n+\n Changes in 2.36:\n \n * Add libdep plugin, for linking dependencies of static libraries that"
    },
    {
      "sha": "cea89e57e255b06fb4930dc7c3b91aeaf482e434",
      "filename": "ld/emultempl/elf.em",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/emultempl/elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/emultempl/elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf.em?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -760,6 +760,10 @@ fragment <<EOF\n \t{\n \t  link_info.flags_1 |= DF_1_GLOBAUDIT;\n \t}\n+      else if (CONST_STRNEQ (optarg, \"start-stop-gc\"))\n+\tlink_info.start_stop_gc = TRUE;\n+      else if (CONST_STRNEQ (optarg, \"nostart-stop-gc\"))\n+\tlink_info.start_stop_gc = FALSE;\n       else if (CONST_STRNEQ (optarg, \"start-stop-visibility=\"))\n \t{\n \t  if (strcmp (optarg, \"start-stop-visibility=default\") == 0)"
    },
    {
      "sha": "6d016ecc347d7ec32260f61c50bc5dadd74b8632",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -1453,6 +1453,23 @@ Specify a stack size for an ELF @code{PT_GNU_STACK} segment.\n Specifying zero will override any default non-zero sized\n @code{PT_GNU_STACK} segment creation.\n \n+@item start-stop-gc\n+@itemx nostart-stop-gc\n+@cindex start-stop-gc\n+When @samp{--gc-sections} is in effect, a reference from a retained\n+section to @code{__start_SECNAME} or @code{__stop_SECNAME} causes all\n+input sections named @code{SECNAME} to also be retained, if\n+@code{SECNAME} is representable as a C identifier and either\n+@code{__start_SECNAME} or @code{__stop_SECNAME} is synthesized by the\n+linker.  @samp{-z start-stop-gc} disables this effect, allowing\n+sections to be garbage collected as if the special synthesized symbols\n+were not defined.  @samp{-z start-stop-gc} has no effect on a\n+definition of @code{__start_SECNAME} or @code{__stop_SECNAME} in an\n+object file or linker script.  Such a definition will prevent the\n+linker providing a synthesized @code{__start_SECNAME} or\n+@code{__stop_SECNAME} respectively, and therefore the special\n+treatment by garbage collection for those references.\n+\n @item start-stop-visibility=@var{value}\n @cindex visibility\n @cindex ELF symbol visibility"
    },
    {
      "sha": "7a3c02aeaa62fd9d579fc9c13e8bf26fc0e1d973",
      "filename": "ld/ldmain.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/ldmain.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/ldmain.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldmain.c?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -357,6 +357,7 @@ main (int argc, char **argv)\n #ifdef DEFAULT_NEW_DTAGS\n   link_info.new_dtags = DEFAULT_NEW_DTAGS;\n #endif\n+  link_info.start_stop_gc = FALSE;\n   link_info.start_stop_visibility = STV_PROTECTED;\n \n   ldfile_add_arch (\"\");"
    },
    {
      "sha": "36492abb405c95a84bd5f743534afb02e5a1db7f",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -2070,8 +2070,6 @@ elf_shlib_list_options (FILE *file)\n   -z common                   Generate common symbols with STT_COMMON type\\n\"));\n   fprintf (file, _(\"\\\n   -z nocommon                 Generate common symbols with STT_OBJECT type\\n\"));\n-  fprintf (file, _(\"\\\n-  -z stack-size=SIZE          Set size of stack segment\\n\"));\n   if (link_info.textrel_check == textrel_check_error)\n     fprintf (file, _(\"\\\n   -z text                     Treat DT_TEXTREL in output as error (default)\\n\"));\n@@ -2116,8 +2114,12 @@ elf_static_list_options (FILE *file)\n   fprintf (file, _(\"\\\n   -z defs                     Report unresolved symbols in object files\\n\"));\n   fprintf (file, _(\"\\\n+  -z undefs                   Ignore unresolved symbols in object files\\n\"));\n+  fprintf (file, _(\"\\\n   -z muldefs                  Allow multiple definitions\\n\"));\n   fprintf (file, _(\"\\\n+  -z stack-size=SIZE          Set size of stack segment\\n\"));\n+  fprintf (file, _(\"\\\n   -z execstack                Mark executable as requiring executable stack\\n\"));\n   fprintf (file, _(\"\\\n   -z noexecstack              Mark executable as not requiring executable stack\\n\"));\n@@ -2127,6 +2129,13 @@ elf_static_list_options (FILE *file)\n   -z nounique-symbol          Keep duplicated local symbol names (default)\\n\"));\n   fprintf (file, _(\"\\\n   -z globalaudit              Mark executable requiring global auditing\\n\"));\n+  fprintf (file, _(\"\\\n+  -z start-stop-gc            Enable garbage collection on __start/__stop\\n\"));\n+  fprintf (file, _(\"\\\n+  -z nostart-stop-gc          Don't garbage collect __start/__stop (default)\\n\"));\n+  fprintf (file, _(\"\\\n+  -z start-stop-visibility=V  Set visibility of built-in __start/__stop symbols\\n\\\n+                                to DEFAULT, PROTECTED, HIDDEN or INTERNAL\\n\"));\n }\n \n static void"
    },
    {
      "sha": "ad3bc2e641e456a62c6f365df708cb45601fa42c",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -89,6 +89,7 @@ test_gc \"Check --gc-section/-r/-u\" \"gcrel\" $ld \"-r --gc-sections -u used_func\"\n run_dump_test \"noent\"\n run_dump_test \"abi-note\"\n run_dump_test \"start\"\n+run_dump_test \"start2\"\n run_dump_test \"stop\"\n run_dump_test \"pr19167\"\n if { [is_elf_format] } then {"
    },
    {
      "sha": "480dc74d9f30c62bd3ac4e17edd421fda25312c2",
      "filename": "ld/testsuite/ld-gc/start2.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/testsuite/ld-gc/start2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/testsuite/ld-gc/start2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/start2.d?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -0,0 +1,10 @@\n+#name: --gc-sections with -z start-stop-gc\n+#ld: --gc-sections -e _start -z start-stop-gc\n+#nm: -n\n+#target: *-*-linux* *-*-gnu* arm*-*-uclinuxfdpiceabi\n+#xfail: bfin-*-*linux* frv-*-*\n+\n+#failif\n+#...\n+[0-9a-f]+ D +__start__foo\n+#..."
    },
    {
      "sha": "b0084a188ae28546046e9ca403b91e0e0ef6b3ba",
      "filename": "ld/testsuite/ld-gc/start2.s",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/testsuite/ld-gc/start2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ee10e86093150c70360d9e26b29e6d9b6398f33/ld/testsuite/ld-gc/start2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/start2.s?ref=8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "patch": "@@ -0,0 +1,7 @@\n+.globl _start\n+_start:\n+\t.weak\t__start__foo\n+\t.dc.a\t__start__foo\n+\t.section\t_foo,\"aw\",%progbits\n+foo:\n+\t.long\t1"
    }
  ]
}