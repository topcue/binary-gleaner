{
  "sha": "b966f55ffa570a05081b2030577b2158e8116c5a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yjk2NmY1NWZmYTU3MGEwNTA4MWIyMDMwNTc3YjIxNThlODExNmM1YQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-19T01:49:50Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-19T01:52:00Z"
    },
    "message": "Invalid read in process_netbsd_elf_note\n\n\t* readelf.c (process_netbsd_elf_note): Validate descsz before\n\taccessing descdata.  Formatting.",
    "tree": {
      "sha": "452474212c576adaa21ae1702e27084270d2a983",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/452474212c576adaa21ae1702e27084270d2a983"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b966f55ffa570a05081b2030577b2158e8116c5a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b966f55ffa570a05081b2030577b2158e8116c5a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b966f55ffa570a05081b2030577b2158e8116c5a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b966f55ffa570a05081b2030577b2158e8116c5a/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "645ba68105ee79511a79386811dd932be8becafa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/645ba68105ee79511a79386811dd932be8becafa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/645ba68105ee79511a79386811dd932be8becafa"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 15,
    "deletions": 7
  },
  "files": [
    {
      "sha": "7522653315d7ca96d81570fcb6efdbf39b2f97c6",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b966f55ffa570a05081b2030577b2158e8116c5a/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b966f55ffa570a05081b2030577b2158e8116c5a/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=b966f55ffa570a05081b2030577b2158e8116c5a",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_netbsd_elf_note): Validate descsz before\n+\taccessing descdata.  Formatting.\n+\n 2020-03-19  Alan Modra  <amodra@gmail.com>\n \n \t* elfcomm.c (setup_archive): Make file_size an off_t.  Comment."
    },
    {
      "sha": "c8ca66e52cf203d9ad1005683c5a4092e810c069",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 10,
      "deletions": 7,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b966f55ffa570a05081b2030577b2158e8116c5a/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b966f55ffa570a05081b2030577b2158e8116c5a/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=b966f55ffa570a05081b2030577b2158e8116c5a",
      "patch": "@@ -18402,15 +18402,17 @@ process_netbsd_elf_note (Elf_Internal_Note * pnote)\n   switch (pnote->type)\n     {\n     case NT_NETBSD_IDENT:\n+      if (pnote->descsz < 1)\n+\tbreak;\n       version = byte_get ((unsigned char *) pnote->descdata, sizeof (version));\n       if ((version / 10000) % 100)\n-        printf (\"  NetBSD\\t\\t0x%08lx\\tIDENT %u (%u.%u%s%c)\\n\", pnote->descsz,\n+\tprintf (\"  NetBSD\\t\\t0x%08lx\\tIDENT %u (%u.%u%s%c)\\n\", pnote->descsz,\n \t\tversion, version / 100000000, (version / 1000000) % 100,\n \t\t(version / 10000) % 100 > 26 ? \"Z\" : \"\",\n \t\t'A' + (version / 10000) % 26);\n       else\n \tprintf (\"  NetBSD\\t\\t0x%08lx\\tIDENT %u (%u.%u.%u)\\n\", pnote->descsz,\n-\t        version, version / 100000000, (version / 1000000) % 100,\n+\t\tversion, version / 100000000, (version / 1000000) % 100,\n \t\t(version / 100) % 100);\n       return TRUE;\n \n@@ -18421,6 +18423,8 @@ process_netbsd_elf_note (Elf_Internal_Note * pnote)\n \n #ifdef   NT_NETBSD_PAX\n     case NT_NETBSD_PAX:\n+      if (pnote->descsz < 1)\n+\tbreak;\n       version = byte_get ((unsigned char *) pnote->descdata, sizeof (version));\n       printf (\"  NetBSD\\t\\t0x%08lx\\tPaX <%s%s%s%s%s%s>\\n\", pnote->descsz,\n \t      ((version & NT_NETBSD_PAX_MPROTECT) ? \"+mprotect\" : \"\"),\n@@ -18431,12 +18435,11 @@ process_netbsd_elf_note (Elf_Internal_Note * pnote)\n \t      ((version & NT_NETBSD_PAX_NOASLR) ? \"-ASLR\" : \"\"));\n       return TRUE;\n #endif\n-\n-    default:\n-      printf (\"  NetBSD\\t0x%08lx\\tUnknown note type: (0x%08lx)\\n\", pnote->descsz,\n-\t      pnote->type);\n-      return FALSE;\n     }\n+\n+  printf (\"  NetBSD\\t0x%08lx\\tUnknown note type: (0x%08lx)\\n\",\n+\t  pnote->descsz, pnote->type);\n+  return FALSE;\n }\n \n static const char *"
    }
  ]
}