{
  "sha": "297989a10c56aec56eab0ee63f1e61c33ab20905",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjk3OTg5YTEwYzU2YWVjNTZlYWIwZWU2M2YxZTYxYzMzYWIyMDkwNQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-07-25T16:39:31Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-07-25T16:39:31Z"
    },
    "message": "[gdb/testsuite] Test skip_libstdcxx_probe_tests in mi-catch-cpp-exceptions.exp\n\nOn a system without SDT probes in libstdc++, we run into:\n...\nFAIL: gdb.mi/mi-catch-cpp-exceptions.exp: all with invalid regexp: run until \\\n  breakpoint in main (unknown output after running)\n...\n\nThe test-case uses a regexp argument for the catch throw/rethrow/catch\ncommand, which is only supported on systems with SDT probes in libstdc++.\n\nFix this by marking the portions of the test-case that use a regexp argument\nas unsupported on a system without SDT probes.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-07-25  Tom de Vries  <tdevries@suse.de>\n\n\tPR testsuite/24830\n\t* gdb.mi/mi-catch-cpp-exceptions.exp: Call\n\tmi_skip_libstdcxx_probe_tests, and skip unsupported tests.\n\t* lib/gdb.exp (skip_libstdcxx_probe_tests_prompt): Factor out of ...\n\t(skip_libstdcxx_probe_tests): ... here.\n\t* lib/mi-support.exp (mi_skip_libstdcxx_probe_tests): New proc.",
    "tree": {
      "sha": "82047b95990091c11544c76018648d88cd576258",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/82047b95990091c11544c76018648d88cd576258"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/297989a10c56aec56eab0ee63f1e61c33ab20905",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/297989a10c56aec56eab0ee63f1e61c33ab20905",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/297989a10c56aec56eab0ee63f1e61c33ab20905",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/297989a10c56aec56eab0ee63f1e61c33ab20905/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d079b9c04afb48ecba42c42632c34974f5a32ce8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d079b9c04afb48ecba42c42632c34974f5a32ce8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d079b9c04afb48ecba42c42632c34974f5a32ce8"
    }
  ],
  "stats": {
    "total": 132,
    "additions": 88,
    "deletions": 44
  },
  "files": [
    {
      "sha": "9d3d649f563f4c1d39b011d7e4471a5e52933dea",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=297989a10c56aec56eab0ee63f1e61c33ab20905",
      "patch": "@@ -1,3 +1,12 @@\n+2019-07-25  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR testsuite/24830\n+\t* gdb.mi/mi-catch-cpp-exceptions.exp: Call\n+\tmi_skip_libstdcxx_probe_tests, and skip unsupported tests.\n+\t* lib/gdb.exp (skip_libstdcxx_probe_tests_prompt): Factor out of ...\n+\t(skip_libstdcxx_probe_tests): ... here.\n+\t* lib/mi-support.exp (mi_skip_libstdcxx_probe_tests): New proc.\n+\n 2019-07-24  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/24807"
    },
    {
      "sha": "029dc1bd0258b54cc759ed8e1f6a4aada0ea64bf",
      "filename": "gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "status": "modified",
      "additions": 61,
      "deletions": 38,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp?ref=297989a10c56aec56eab0ee63f1e61c33ab20905",
      "patch": "@@ -27,6 +27,17 @@ if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {deb\n     return -1\n }\n \n+if [mi_gdb_start] {\n+    continue\n+}\n+mi_delete_breakpoints\n+mi_gdb_reinitialize_dir $srcdir/$subdir\n+mi_gdb_load ${binfile}\n+if {![mi_run_to_main]} {\n+    return -1\n+}\n+set libstdcxx_probe_tests_supported [mi_skip_libstdcxx_probe_tests]\n+\n # Grab some line numbers we'll need.\n set catch_1_lineno [gdb_get_line_number \"Catch 1\"]\n set catch_2_lineno [gdb_get_line_number \"Catch 2\"]\n@@ -123,36 +134,44 @@ with_test_prefix \"-catch-catch\" {\n     continue_to_breakpoint_in_main\n }\n \n-# Now check that all of the command with a regexp that doesn't match,\n-# don't trigger.\n-with_test_prefix \"all with invalid regexp\" {\n-    restart_for_test\n-    setup_catchpoint \"throw\" \"-r blahblah\"\n-    setup_catchpoint \"rethrow\" \"-r woofwoof\"\n-    setup_catchpoint \"catch\" \"-r miowmiow\"\n-    continue_to_breakpoint_in_main\n+if { $libstdcxx_probe_tests_supported  == 1 } {\n+    # Now check that all of the command with a regexp that doesn't match,\n+    # don't trigger.\n+    with_test_prefix \"all with invalid regexp\" {\n+\trestart_for_test\n+\tsetup_catchpoint \"throw\" \"-r blahblah\"\n+\tsetup_catchpoint \"rethrow\" \"-r woofwoof\"\n+\tsetup_catchpoint \"catch\" \"-r miowmiow\"\n+\tcontinue_to_breakpoint_in_main\n+    }\n+} else {\n+    unsupported \"all with invalid regexp\"\n }\n \n-# Now check that all of the commands with a regexp that does match,\n-# still trigger.\n-with_test_prefix \"all with valid regexp\" {\n-    restart_for_test\n-    setup_catchpoint \"throw\" \"-r my_ex\"\n-    setup_catchpoint \"rethrow\" \"-r _except\"\n-    setup_catchpoint \"catch\" \"-r my_exception\"\n-    continue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 1\"\n-    continue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 1\"\n-    continue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 2\"\n-    continue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 2\"\n-    continue_to_next_exception \"foo\" \"${throw_2_lineno}\" \"rethrow 1\"\n-    continue_to_next_exception \"main\" \"${catch_2_lineno}\" \"catch 3\"\n-    continue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 3\"\n-    continue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 4\"\n-    continue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 4\"\n-    continue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 5\"\n-    continue_to_next_exception \"foo\" \"${throw_2_lineno}\" \"rethrow 2\"\n-    continue_to_next_exception \"main\" \"${catch_2_lineno}\" \"catch 6\"\n-    continue_to_breakpoint_in_main\n+if { $libstdcxx_probe_tests_supported  == 1 } {\n+    # Now check that all of the commands with a regexp that does match,\n+    # still trigger.\n+    with_test_prefix \"all with valid regexp\" {\n+\trestart_for_test\n+\tsetup_catchpoint \"throw\" \"-r my_ex\"\n+\tsetup_catchpoint \"rethrow\" \"-r _except\"\n+\tsetup_catchpoint \"catch\" \"-r my_exception\"\n+\tcontinue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 1\"\n+\tcontinue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 1\"\n+\tcontinue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 2\"\n+\tcontinue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 2\"\n+\tcontinue_to_next_exception \"foo\" \"${throw_2_lineno}\" \"rethrow 1\"\n+\tcontinue_to_next_exception \"main\" \"${catch_2_lineno}\" \"catch 3\"\n+\tcontinue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 3\"\n+\tcontinue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 4\"\n+\tcontinue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 4\"\n+\tcontinue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 5\"\n+\tcontinue_to_next_exception \"foo\" \"${throw_2_lineno}\" \"rethrow 2\"\n+\tcontinue_to_next_exception \"main\" \"${catch_2_lineno}\" \"catch 6\"\n+\tcontinue_to_breakpoint_in_main\n+    }\n+} else {\n+    unsupported \"all with valid regexp\"\n }\n \n # Check that the temporary switch works on its own.\n@@ -167,14 +186,18 @@ with_test_prefix \"all with -t\" {\n     continue_to_breakpoint_in_main\n }\n \n-# Check that the temporary switch works when used with a regexp.\n-restart_for_test\n-with_test_prefix \"all with -t and regexp\" {\n-    setup_catchpoint \"throw\" \"-t -r my_ex\"\n-    setup_catchpoint \"rethrow\" \"-t -r _except\"\n-    setup_catchpoint \"catch\" \"-t -r my_exception\"\n-    continue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 1\"\n-    continue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 1\"\n-    continue_to_next_exception \"foo\" \"${throw_2_lineno}\" \"rethrow 1\"\n-    continue_to_breakpoint_in_main\n+if { $libstdcxx_probe_tests_supported  == 1 } {\n+    # Check that the temporary switch works when used with a regexp.\n+    restart_for_test\n+    with_test_prefix \"all with -t and regexp\" {\n+\tsetup_catchpoint \"throw\" \"-t -r my_ex\"\n+\tsetup_catchpoint \"rethrow\" \"-t -r _except\"\n+\tsetup_catchpoint \"catch\" \"-t -r my_exception\"\n+\tcontinue_to_next_exception \"bar\" \"${throw_1_lineno}\" \"throw 1\"\n+\tcontinue_to_next_exception \"foo\" \"${catch_1_lineno}\" \"catch 1\"\n+\tcontinue_to_next_exception \"foo\" \"${throw_2_lineno}\" \"rethrow 1\"\n+\tcontinue_to_breakpoint_in_main\n+    }\n+} else {\n+    unsupported \"all with -t and regexp\"\n }"
    },
    {
      "sha": "54cee2ec41c635eab5426c35a02b48024cc99415",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=297989a10c56aec56eab0ee63f1e61c33ab20905",
      "patch": "@@ -3104,22 +3104,27 @@ proc skip_unwinder_tests {} {\n \n # Return 0 if we should skip tests that require the libstdc++ stap\n # probes.  This must be invoked while gdb is running, after shared\n-# libraries have been loaded.\n-\n-proc skip_libstdcxx_probe_tests {} {\n-    global gdb_prompt\n+# libraries have been loaded.  PROMPT_REGEXP is the expected prompt.\n \n+proc skip_libstdcxx_probe_tests_prompt { prompt_regexp } {\n     set ok 0\n     gdb_test_multiple \"info probe\" \"check for stap probe in libstdc++\" {\n-\t-re \".*libstdcxx.*catch.*\\r\\n$gdb_prompt $\" {\n+\t-re \".*libstdcxx.*catch.*\\r\\n$prompt_regexp\" {\n \t    set ok 1\n \t}\n-\t-re \"\\r\\n$gdb_prompt $\" {\n+\t-re \"\\r\\n$prompt_regexp\" {\n \t}\n     }\n     return $ok\n }\n \n+# As skip_libstdcxx_probe_tests_prompt, with gdb_prompt.\n+\n+proc skip_libstdcxx_probe_tests {} {\n+    global gdb_prompt\n+    return [skip_libstdcxx_probe_tests_prompt \"$gdb_prompt $\"]\n+}\n+\n # Return 1 if we should skip tests of the \"compile\" feature.\n # This must be invoked after the inferior has been started.\n "
    },
    {
      "sha": "dcb472b1d67e4201cdbcdf779426a57075b8f4e1",
      "filename": "gdb/testsuite/lib/mi-support.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/lib/mi-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/297989a10c56aec56eab0ee63f1e61c33ab20905/gdb/testsuite/lib/mi-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/mi-support.exp?ref=297989a10c56aec56eab0ee63f1e61c33ab20905",
      "patch": "@@ -2601,6 +2601,13 @@ proc mi_skip_python_tests {} {\n     return [skip_python_tests_prompt \"$mi_gdb_prompt$\"]\n }\n \n+# As skip_libstdcxx_probe_tests_prompt, with mi_gdb_prompt.\n+\n+proc mi_skip_libstdcxx_probe_tests {} {\n+    global mi_gdb_prompt\n+    return [skip_libstdcxx_probe_tests_prompt \"$mi_gdb_prompt$\"]\n+}\n+\n # Check whether we're testing with the remote or extended-remote\n # targets.\n "
    }
  ]
}