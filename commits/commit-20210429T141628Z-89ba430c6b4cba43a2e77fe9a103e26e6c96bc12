{
  "sha": "89ba430c6b4cba43a2e77fe9a103e26e6c96bc12",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODliYTQzMGM2YjRjYmE0M2EyZTc3ZmU5YTEwM2UyNmU2Yzk2YmMxMg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-29T14:16:28Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-29T14:16:28Z"
    },
    "message": "gdb: move some variables to an inner scope in save_waitstatus\n\nThese two variables:\n\n      struct regcache *regcache = get_thread_regcache (tp);\n      const address_space *aspace = regcache->aspace ();\n\nare only needed inside the \"if\".  Getting a thread's regcache is a\nsomewhat expensive operation, so it's good to avoid it if not necessary.\nMove the variable declarations and their initialization to the \"if\"\nscope.\n\ngdb/ChangeLog:\n\n\t* infrun.c (save_waitstatus): Move variables to inner scope.\n\nChange-Id: Ief1463728755b4dcc142c0a0a76896e9d594ae84",
    "tree": {
      "sha": "8f6f17870ef9a4b291ae0af72ae2cde62ef3dae2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8f6f17870ef9a4b291ae0af72ae2cde62ef3dae2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a2443c8988a443e802fced3c03dd55b563629afd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2443c8988a443e802fced3c03dd55b563629afd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a2443c8988a443e802fced3c03dd55b563629afd"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 6,
    "deletions": 3
  },
  "files": [
    {
      "sha": "ea65327e6e0c949db824403fd160244ac2d4e4b4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=89ba430c6b4cba43a2e77fe9a103e26e6c96bc12",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-29  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* infrun.c (save_waitstatus): Move variables to inner scope.\n+\n 2021-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* NEWS: Fix typo and stray full stop."
    },
    {
      "sha": "90bab8d984f5b1bd557e8cb58faf04c17f38a79e",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89ba430c6b4cba43a2e77fe9a103e26e6c96bc12/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=89ba430c6b4cba43a2e77fe9a103e26e6c96bc12",
      "patch": "@@ -4703,12 +4703,11 @@ save_waitstatus (struct thread_info *tp, const target_waitstatus *ws)\n   tp->suspend.waitstatus = *ws;\n   tp->suspend.waitstatus_pending_p = 1;\n \n-  struct regcache *regcache = get_thread_regcache (tp);\n-  const address_space *aspace = regcache->aspace ();\n-\n   if (ws->kind == TARGET_WAITKIND_STOPPED\n       && ws->value.sig == GDB_SIGNAL_TRAP)\n     {\n+      struct regcache *regcache = get_thread_regcache (tp);\n+      const address_space *aspace = regcache->aspace ();\n       CORE_ADDR pc = regcache_read_pc (regcache);\n \n       adjust_pc_after_break (tp, &tp->suspend.waitstatus);"
    }
  ]
}