{
  "sha": "a288c270991de1578ad28ac312120f4167347234",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTI4OGMyNzA5OTFkZTE1NzhhZDI4YWMzMTIxMjBmNDE2NzM0NzIzNA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-03T12:06:46Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-04T07:27:33Z"
    },
    "message": "PR24511, nm should not mark symbols in .init_array as \"t\"\n\nThis patch restricts the section names matched in coff_section_type,\na function that translates section names to symbol type, and arranges\nto translate section flags to symbol type before looking at names.\nThe latter change resulted in various test failures due to improper\nsection flags being used in tests, and by the plugin support, so fix\nthat too.\n\nThe new test fails on many ELF targets that lack .init/fini_array\nin their scripts.  I've just xfailed those.  pru-elf oddly defines\n__init_array_begin rather than __init_array_start.  I've left that\ntarget as a FAIL, and pj-elf too which reports an error for undefined\nweak symbols.\n\nbfd/\n\tPR 24511\n\t* syms.c (coff_section_type): Only allow '.', '$' and numeric\n\tfollowing the standard section names.\n\t(bfd_decode_symclass): Prioritize section flag tests in\n\tdecode_section_type before name tests in coff_section_type.\n\t* plugin.c (bfd_plugin_canonicalize_symtab): Init fake_section\n\tand fake_common_section using BFD_FAKE_SECTION.  Use \"fake\" as\n\ttheir names and choose standard .text section flags for\n\tfake_section.\nld/\n\tPR 24511\n\t* testsuite/ld-elf/pr14156a.d: Allow for .init/.fini being a\n\tdata section on hppa64.\n\t* testsuite/ld-elf/pr14156b.d: Likewise.\n\t* testsuite/ld-scripts/pr18963.t: Map standard sections to set\n\toutput section flags.\n\t* testsuite/ld-scripts/sane1.t: Likewise.\n\t* testsuite/ld-elf/init-fini-arrays.s: Reference __init_array_start\n\tand __fini_array_start.  Define __start et al.\n\t* testsuite/ld-elf/pr24511.d: New test.",
    "tree": {
      "sha": "a20874b7ba76dddaed092039d5efb3d6615798f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a20874b7ba76dddaed092039d5efb3d6615798f6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a288c270991de1578ad28ac312120f4167347234",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a288c270991de1578ad28ac312120f4167347234",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a288c270991de1578ad28ac312120f4167347234",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a288c270991de1578ad28ac312120f4167347234/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "66452beb773568c7f60dbc6b7c70f671a8c9cf4b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66452beb773568c7f60dbc6b7c70f671a8c9cf4b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/66452beb773568c7f60dbc6b7c70f671a8c9cf4b"
    }
  ],
  "stats": {
    "total": 111,
    "additions": 88,
    "deletions": 23
  },
  "files": [
    {
      "sha": "6f7f19a80f2b3f9c6611f4b1a14e66d620460d6c",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -1,3 +1,15 @@\n+2019-05-04  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24511\n+\t* syms.c (coff_section_type): Only allow '.', '$' and numeric\n+\tfollowing the standard section names.\n+\t(bfd_decode_symclass): Prioritize section flag tests in\n+\tdecode_section_type before name tests in coff_section_type.\n+\t* plugin.c (bfd_plugin_canonicalize_symtab): Init fake_section\n+\tand fake_common_section using BFD_FAKE_SECTION.  Use \"fake\" as\n+\ttheir names and choose standard .text section flags for\n+\tfake_section.\n+\n 2019-05-02  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24493"
    },
    {
      "sha": "376e92cdb3e7117b464e2a5a941486d9a67ddc2d",
      "filename": "bfd/plugin.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/bfd/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/bfd/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/plugin.c?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -530,13 +530,13 @@ bfd_plugin_canonicalize_symtab (bfd *abfd,\n   struct plugin_data_struct *plugin_data = abfd->tdata.plugin_data;\n   long nsyms = plugin_data->nsyms;\n   const struct ld_plugin_symbol *syms = plugin_data->syms;\n-  static asection fake_section;\n-  static asection fake_common_section;\n+  static asection fake_section\n+    = BFD_FAKE_SECTION (fake_section, NULL, \"plug\", 0,\n+\t\t\tSEC_ALLOC | SEC_LOAD | SEC_CODE | SEC_HAS_CONTENTS);\n+  static asection fake_common_section\n+    = BFD_FAKE_SECTION (fake_common_section, NULL, \"plug\", 0, SEC_IS_COMMON);\n   int i;\n \n-  fake_section.name = \".text\";\n-  fake_common_section.flags = SEC_IS_COMMON;\n-\n   for (i = 0; i < nsyms; i++)\n     {\n       asymbol *s = bfd_alloc (abfd, sizeof (asymbol));"
    },
    {
      "sha": "da1c90d52ebeb7badb5722d58ed2f1ddfd081b1d",
      "filename": "bfd/syms.c",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/bfd/syms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/bfd/syms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/syms.c?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -595,17 +595,22 @@ static const struct section_to_type stt[] =\n /* Return the single-character symbol type corresponding to\n    section S, or '?' for an unknown COFF section.\n \n-   Check for any leading string which matches, so .text5 returns\n-   't' as well as .text */\n+   Check for leading strings which match, followed by a number, '.',\n+   or '$' so .text5 matches the .text entry, but .init_array doesn't\n+   match the .init entry.  */\n \n static char\n coff_section_type (const char *s)\n {\n   const struct section_to_type *t;\n \n   for (t = &stt[0]; t->section; t++)\n-    if (!strncmp (s, t->section, strlen (t->section)))\n-      return t->type;\n+    {\n+      size_t len = strlen (t->section);\n+      if (strncmp (s, t->section, len) == 0\n+\t  && memchr (\".$0123456789\", s[len], 13) != 0)\n+\treturn t->type;\n+    }\n \n   return '?';\n }\n@@ -700,9 +705,9 @@ bfd_decode_symclass (asymbol *symbol)\n     c = 'a';\n   else if (symbol->section)\n     {\n-      c = coff_section_type (symbol->section->name);\n+      c = decode_section_type (symbol->section);\n       if (c == '?')\n-\tc = decode_section_type (symbol->section);\n+\tc = coff_section_type (symbol->section->name);\n     }\n   else\n     return '?';"
    },
    {
      "sha": "722e65669cc10fc4ce557ee4e45d0bd5dcd5004b",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -1,3 +1,16 @@\n+2019-05-04  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24511\n+\t* testsuite/ld-elf/pr14156a.d: Allow for .init/.fini being a\n+\tdata section on hppa64.\n+\t* testsuite/ld-elf/pr14156b.d: Likewise.\n+\t* testsuite/ld-scripts/pr18963.t: Map standard sections to set\n+\toutput section flags.\n+\t* testsuite/ld-scripts/sane1.t: Likewise.\n+\t* testsuite/ld-elf/init-fini-arrays.s: Reference __init_array_start\n+\tand __fini_array_start.  Define __start et al.\n+\t* testsuite/ld-elf/pr24511.d: New test.\n+\n 2019-04-30  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/elfv2exe.d: Update."
    },
    {
      "sha": "b8adc29a3c0348becbc0f1e63275e8fad2d467a2",
      "filename": "ld/testsuite/ld-elf/init-fini-arrays.s",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/init-fini-arrays.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/init-fini-arrays.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/init-fini-arrays.s?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -1,7 +1,20 @@\n  .section .init_array.01000,\"aw\",%init_array\n  .p2align 2\n- .word 0\n+ .weak __init_array_start, ___init_array_start\n+ .dc.a __init_array_start\n+ .dc.a ___init_array_start\n \n  .section .fini_array.01000,\"aw\",%fini_array\n  .p2align 2\n- .word 0\n+ .weak __fini_array_start, ___fini_array_start\n+ .dc.a __fini_array_start\n+ .dc.a ___fini_array_start\n+\n+ .text\n+ .globl main, _main, start, _start, __start\n+main:\n+_main:\n+start:\n+_start:\n+__start:\n+ .dc.a 0"
    },
    {
      "sha": "535ac3e159c94f18b92adbd8496d5914c4f5ec5a",
      "filename": "ld/testsuite/ld-elf/pr14156a.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/pr14156a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/pr14156a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr14156a.d?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -7,10 +7,10 @@\n #nm: -n\n \n #...\n-[0-9a-f]+ T foo\n-[0-9a-f]+ t foo1\n+[0-9a-f]+ [TD] foo\n+[0-9a-f]+ [td] foo1\n #...\n-[0-9a-f]+ t foo2\n-[0-9a-f]+ t foo3\n-[0-9a-f]+ t last\n+[0-9a-f]+ [td] foo2\n+[0-9a-f]+ [td] foo3\n+[0-9a-f]+ [td] last\n #pass"
    },
    {
      "sha": "27da0166f408610e1b9bbe29f0944fc28fb0bfab",
      "filename": "ld/testsuite/ld-elf/pr14156b.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/pr14156b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/pr14156b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr14156b.d?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -7,10 +7,10 @@\n #nm: -n\n \n #...\n-[0-9a-f]+ T foo\n-[0-9a-f]+ t foo1\n+[0-9a-f]+ [TD] foo\n+[0-9a-f]+ [td] foo1\n #...\n-[0-9a-f]+ t foo2\n-[0-9a-f]+ t foo3\n-[0-9a-f]+ t last\n+[0-9a-f]+ [td] foo2\n+[0-9a-f]+ [td] foo3\n+[0-9a-f]+ [td] last\n #pass"
    },
    {
      "sha": "f77a43b9e2e6ab43a672a56b8102490082bc6011",
      "filename": "ld/testsuite/ld-elf/pr24511.d",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/pr24511.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-elf/pr24511.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr24511.d?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -0,0 +1,18 @@\n+#source: init-fini-arrays.s\n+#ld:\n+#nm: -n\n+# Most targets with their own scripts don't support init/fini_array and\n+# thus don't define __init/fini_array_start.\n+#xfail: avr-*-* cr16-*-* crx-*-* d10v-*-* d30v-*-* dlx-*-* ft32-*-* iq2000-*-*\n+#xfail: m68hc1*-*-* mep-*-* microblaze*-*-elf* s12z-*-* v850-*-* visium-*-*\n+#xfail: xgate-*-* xstormy*-*-*\n+# Some targets with their own scripts haven't kept up with elf.sc and\n+# PROVIDE __init_array_start rather than using PROVIDE_HIDDEN.  These\n+# result in D symbols.  rx-elf makes .init/fini_array SHF_EXECINSTR so\n+# gets t symbols.\n+\n+#...\n+[0-9a-f]+ [dDt] _?__init_array_start\n+#...\n+[0-9a-f]+ [dDt] _?__fini_array_start\n+#pass"
    },
    {
      "sha": "830ded78dd916d6f505e1909f8faaef8ca25b4c0",
      "filename": "ld/testsuite/ld-scripts/pr18963.t",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-scripts/pr18963.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-scripts/pr18963.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/pr18963.t?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -5,16 +5,19 @@ SECTIONS\n   .text :\n   {\n     _start = .;\n+    *(.text)\n     . = 0x10000;\n   }\n   B = .;\n   .data :\n   {\n+    *(.data)\n     . = 0x10000;\n   }\n   C = .;\n   .bss :\n   {\n+    *(.bss)\n     . = 0x10000;\n   }\n   D = A - C + B;"
    },
    {
      "sha": "90ee9b62d0dc58697c8dc139f7242df6d4ec27f0",
      "filename": "ld/testsuite/ld-scripts/sane1.t",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-scripts/sane1.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a288c270991de1578ad28ac312120f4167347234/ld/testsuite/ld-scripts/sane1.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/sane1.t?ref=a288c270991de1578ad28ac312120f4167347234",
      "patch": "@@ -20,6 +20,7 @@ SECTIONS\n     s4 = ABSOLUTE (d1) - 2;\n     s5 = ABSOLUTE (d2) % 5;\n     s6 = ABSOLUTE (d2) / 5;\n+    *(.data)\n   }\n   /DISCARD/ : {*(*)}\n "
    }
  ]
}