{
  "sha": "6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmNjODU2NGI5YTJmM2FhMTMzY2VhZjlhYjZlNzFlZDY4MTI5YThmOA==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2019-11-25T15:27:44Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2019-11-25T15:27:44Z"
    },
    "message": "[Debugging output] Make remote packet truncation length  adjustable\n\nWhile debugging, i felt the need to adjust the truncation length of remote\npackets so i could see more or less data as needed. The default is currently\nset to 512 bytes.\n\nThis patch makes this option adjustable through the new \"set debug\nremote-packet-max-chars\" command. It can be set to unlimited if we want to\ncompletely disable truncation.\n\nUpdate on v5:\n\n- Adjusted function and variable documentation, NEWS entry and GDB manual.\n\ngdb/ChangeLog:\n\n2019-11-25  Luis Machado  <luis.machado@linaro.org>\n\n\t* NEWS (New Commands): Mention \"set debug remote-packet-max-chars\".\n\t* remote.c (REMOTE_DEBUG_MAX_CHAR): Remove.\n\t(remote_packet_max_chars): New static global.\n\t(show_remote_packet_max_chars): New function.\n\t(remote_target::putpkt_binary): Adjust to use new\n\tremote_packet_max_chars option.\n\t(remote_target::getpkt_or_notif_sane_1): Likewise.\n\t(_initialize_remote): Register new remote-packet-max-chars option.\n\ngdb/doc/ChangeLog:\n\n2019-11-25  Luis Machado  <luis.machado@linaro.org>\n\n\t* gdb.texinfo (Debugging Output): Document set debug\n\tremote-packet-max-chars.\n\nChange-Id: I2e871b37bfcaa6376537c3fe3db8f016dd806a7c",
    "tree": {
      "sha": "eea6dbcf7d667dc7dde4d261e145c4f6c88eebfb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eea6dbcf7d667dc7dde4d261e145c4f6c88eebfb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bb2942085c83289c56cc3ef8b9ab0ecf6267efa3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb2942085c83289c56cc3ef8b9ab0ecf6267efa3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bb2942085c83289c56cc3ef8b9ab0ecf6267efa3"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 79,
    "deletions": 11
  },
  "files": [
    {
      "sha": "45ff42a6c0fc1e91585ee636f63a5d19dc92ebae",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
      "patch": "@@ -1,3 +1,14 @@\n+2019-11-25  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* NEWS (New Commands): Mention \"set debug remote-packet-max-chars\".\n+\t* remote.c (REMOTE_DEBUG_MAX_CHAR): Remove.\n+\t(remote_packet_max_chars): New static global.\n+\t(show_remote_packet_max_chars): New function.\n+\t(remote_target::putpkt_binary): Adjust to use new\n+\tremote_packet_max_chars option.\n+\t(remote_target::getpkt_or_notif_sane_1): Likewise.\n+\t(_initialize_remote): Register new remote-packet-max-chars option.\n+\n 2019-11-24  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* m68k-linux-nat.c: Include gdbarch.h."
    },
    {
      "sha": "01b38cf9bd80abfaf6f2d13c86967aa7e0e4ccca",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
      "patch": "@@ -186,6 +186,12 @@ info module variables [-q] [-m MODULE_REGEXP] [-t TYPE_REGEXP] [REGEXP]\n   TYPE_REGEXP matches against the variable type, and REGEXP matches\n   against the variable name.\n \n+set debug remote-packet-max-chars\n+show debug remote-packet-max-chars\n+  Controls the number of characters to output in a remote packet when using\n+  \"set debug remote\".\n+  The default is 512 bytes.\n+\n * Changed commands\n \n help"
    },
    {
      "sha": "c6fa5f573ea68b05bac478f838a05235d67df764",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-25  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* gdb.texinfo (Debugging Output): Document set debug\n+\tremote-packet-max-chars.\n+\n 2019-11-14  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.texinfo: Fix typos."
    },
    {
      "sha": "18bb18b2245c7ad5e49af6e1616b1f36bfa56da6",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
      "patch": "@@ -26274,6 +26274,19 @@ the serial line to the remote machine.  The info is printed on the\n @item show debug remote\n Displays the state of display of remote packets.\n \n+@item set debug remote-packet-max-chars\n+Sets the maximum number of characters to display for each remote packet when\n+@code{set debug remote} is on.  This is useful to prevent @value{GDBN} from\n+displaying lengthy remote packets and polluting the console.\n+\n+The default value is @code{512}, which means @value{GDBN} will truncate each\n+remote packet after 512 bytes.\n+\n+Setting this option to @code{unlimited} will disable truncation and will output\n+the full length of the remote packets.\n+@item show debug remote-packet-max-chars\n+Displays the number of bytes to output for remote packet debugging.\n+\n @item set debug separate-debug-file\n Turns on or off display of debug output about separate debug file search.\n @item show debug separate-debug-file"
    },
    {
      "sha": "3fc9a2608e637380329004af0517b63ca6386628",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 44,
      "deletions": 11,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=6cc8564b9a2f3aa133ceaf9ab6e71ed68129a8f8",
      "patch": "@@ -1041,11 +1041,6 @@ static struct cmd_list_element *remote_show_cmdlist;\n \n static bool use_range_stepping = true;\n \n-/* The max number of chars in debug output.  The rest of chars are\n-   omitted.  */\n-\n-#define REMOTE_DEBUG_MAX_CHAR 512\n-\n /* Private data that we'll store in (struct thread_info)->priv.  */\n struct remote_thread_info : public private_thread_info\n {\n@@ -1712,6 +1707,23 @@ show_hardware_breakpoint_limit (struct ui_file *file, int from_tty,\n \t\t\t    \"breakpoints is %s.\\n\"), value);\n }\n \n+/* Controls the maximum number of characters to display in the debug output\n+   for each remote packet.  The remaining characters are omitted.  */\n+\n+static int remote_packet_max_chars = 512;\n+\n+/* Show the maximum number of characters to display for each remote packet\n+   when remote debugging is enabled.  */\n+\n+static void\n+show_remote_packet_max_chars (struct ui_file *file, int from_tty,\n+\t\t\t      struct cmd_list_element *c,\n+\t\t\t      const char *value)\n+{\n+  fprintf_filtered (file, _(\"Number of remote packet characters to \"\n+\t\t\t    \"display is %s.\\n\"), value);\n+}\n+\n long\n remote_target::get_memory_write_packet_size ()\n {\n@@ -9119,15 +9131,21 @@ remote_target::putpkt_binary (const char *buf, int cnt)\n \t  *p = '\\0';\n \n \t  int len = (int) (p - buf2);\n+\t  int max_chars;\n+\n+\t  if (remote_packet_max_chars < 0)\n+\t    max_chars = len;\n+\t  else\n+\t    max_chars = remote_packet_max_chars;\n \n \t  std::string str\n-\t    = escape_buffer (buf2, std::min (len, REMOTE_DEBUG_MAX_CHAR));\n+\t    = escape_buffer (buf2, std::min (len, max_chars));\n \n \t  fprintf_unfiltered (gdb_stdlog, \"Sending packet: %s\", str.c_str ());\n \n-\t  if (len > REMOTE_DEBUG_MAX_CHAR)\n+\t  if (len > max_chars)\n \t    fprintf_unfiltered (gdb_stdlog, \"[%d bytes omitted]\",\n-\t\t\t\tlen - REMOTE_DEBUG_MAX_CHAR);\n+\t\t\t\tlen - max_chars);\n \n \t  fprintf_unfiltered (gdb_stdlog, \"...\");\n \n@@ -9563,16 +9581,23 @@ remote_target::getpkt_or_notif_sane_1 (gdb::char_vector *buf,\n \t{\n \t  if (remote_debug)\n \t    {\n+\t      int max_chars;\n+\n+\t      if (remote_packet_max_chars < 0)\n+\t\tmax_chars = val;\n+\t      else\n+\t\tmax_chars = remote_packet_max_chars;\n+\n \t      std::string str\n \t\t= escape_buffer (buf->data (),\n-\t\t\t\t std::min (val, REMOTE_DEBUG_MAX_CHAR));\n+\t\t\t\t std::min (val, max_chars));\n \n \t      fprintf_unfiltered (gdb_stdlog, \"Packet received: %s\",\n \t\t\t\t  str.c_str ());\n \n-\t      if (val > REMOTE_DEBUG_MAX_CHAR)\n+\t      if (val > max_chars)\n \t\tfprintf_unfiltered (gdb_stdlog, \"[%d bytes omitted]\",\n-\t\t\t\t    val - REMOTE_DEBUG_MAX_CHAR);\n+\t\t\t\t    val - max_chars);\n \n \t      fprintf_unfiltered (gdb_stdlog, \"\\n\");\n \t    }\n@@ -14723,6 +14748,14 @@ of time passes without a response from the target, an error occurs.\"),\n \t\t\t    show_watchdog,\n \t\t\t    &setlist, &showlist);\n \n+  add_setshow_zuinteger_unlimited_cmd (\"remote-packet-max-chars\", no_class,\n+\t\t\t\t       &remote_packet_max_chars, _(\"\\\n+Set the maximum number of characters to display for each remote packet.\"), _(\"\\\n+Show the maximum number of characters to display for each remote packet.\"), _(\"\\\n+Specify \\\"unlimited\\\" to display all the characters.\"),\n+\t\t\t\t       NULL, show_remote_packet_max_chars,\n+\t\t\t\t       &setdebuglist, &showdebuglist);\n+\n   /* Eventually initialize fileio.  See fileio.c */\n   initialize_remote_fileio (remote_set_cmdlist, remote_show_cmdlist);\n }"
    }
  ]
}