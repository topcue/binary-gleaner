{
  "sha": "e67e940f5d9102fb452b87aca441a2829a67d66b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTY3ZTk0MGY1ZDkxMDJmYjQ1MmI4N2FjYTQ0MWEyODI5YTY3ZDY2Yg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-26T13:46:26Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-26T13:53:36Z"
    },
    "message": "gas: Silence GCC 10 warning on tc-crx.c\n\nopcode/crx.h has\n\ntypedef enum\n  {\n    ...\n    MAX_REG\n  }\nreg;\n\ntypedef enum\n  {\n    c0 = MAX_REG,\n  }\ncopreg;\n\ntc-crx.c has\n\nstatic int\ngetreg_image (reg r)\n{\n  ...\n /* Check whether the register is in registers table.  */\n  if (r < MAX_REG)\n    rreg = &crx_regtab[r];\n  /* Check whether the register is in coprocessor registers table.  */\n  else if (r < (int) MAX_COPREG)\n    rreg = &crx_copregtab[r-MAX_REG];\n}\n\nChange getreg_image's argument type to int and replace fragP->fr_literal\nwith &fragP->fr_literal[0] to silence GCC 10 warning.\n\n\tPR gas/26044\n\t* config/tc-crx.c (getreg_image): Change argument type to int.\n\t(md_convert_frag): Replace fragP->fr_literal with\n\t&fragP->fr_literal[0].",
    "tree": {
      "sha": "20eb98b59087da5bc459895645e73d2a4e822a51",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/20eb98b59087da5bc459895645e73d2a4e822a51"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e67e940f5d9102fb452b87aca441a2829a67d66b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e67e940f5d9102fb452b87aca441a2829a67d66b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e67e940f5d9102fb452b87aca441a2829a67d66b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e67e940f5d9102fb452b87aca441a2829a67d66b/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e7cb4c359e6a86550bca296db617fb4c8068c1a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e7cb4c359e6a86550bca296db617fb4c8068c1a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9e7cb4c359e6a86550bca296db617fb4c8068c1a"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 10,
    "deletions": 3
  },
  "files": [
    {
      "sha": "9a1dc3b0ecf1484c1addab7df4a030f681f58876",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e67e940f5d9102fb452b87aca441a2829a67d66b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e67e940f5d9102fb452b87aca441a2829a67d66b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e67e940f5d9102fb452b87aca441a2829a67d66b",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/26044\n+\t* config/tc-crx.c (getreg_image): Change argument type to int.\n+\t(md_convert_frag): Replace fragP->fr_literal with\n+\t&fragP->fr_literal[0].\n+\n 2020-05-26  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR gas/26044"
    },
    {
      "sha": "f0b32466dc72dafa60ed44ee995d7ae658a04478",
      "filename": "gas/config/tc-crx.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e67e940f5d9102fb452b87aca441a2829a67d66b/gas/config/tc-crx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e67e940f5d9102fb452b87aca441a2829a67d66b/gas/config/tc-crx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-crx.c?ref=e67e940f5d9102fb452b87aca441a2829a67d66b",
      "patch": "@@ -153,7 +153,7 @@ static void    handle_LoadStor\t        (const char *);\n static int     get_cinv_parameters      (const char *);\n static long    getconstant\t\t(long, int);\n static op_err  check_range\t\t(long *, int, unsigned int, int);\n-static int     getreg_image\t        (reg);\n+static int     getreg_image\t        (int);\n static void    parse_operands\t        (ins *, char *);\n static void    parse_insn\t        (ins *, char *);\n static void    print_operand\t        (int, int, argument *);\n@@ -402,7 +402,7 @@ md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED, asection *sec, fragS *fragP)\n {\n   /* 'opcode' points to the start of the instruction, whether\n      we need to change the instruction's fixed encoding.  */\n-  char *opcode = fragP->fr_literal + fragP->fr_fix;\n+  char *opcode = &fragP->fr_literal[0] + fragP->fr_fix;\n   bfd_reloc_code_real_type reloc;\n \n   subseg_change (sec, 0);\n@@ -1107,7 +1107,7 @@ get_cinv_parameters (const char *operand)\n    issue an error.  */\n \n static int\n-getreg_image (reg r)\n+getreg_image (int r)\n {\n   const reg_entry *rreg;\n   char *reg_name;"
    }
  ]
}