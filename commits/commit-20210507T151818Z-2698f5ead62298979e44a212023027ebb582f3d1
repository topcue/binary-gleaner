{
  "sha": "2698f5ead62298979e44a212023027ebb582f3d1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjY5OGY1ZWFkNjIyOTg5NzllNDRhMjEyMDIzMDI3ZWJiNTgyZjNkMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-07T15:18:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-07T15:18:18Z"
    },
    "message": "Remove streq_hash in favor of htab_eq_string\n\nNow that libiberty includes htab_eq_string, we can remove the\nidentical function from gdb.\n\ngdb/ChangeLog\n2021-05-07  Tom Tromey  <tom@tromey.com>\n\n\t* breakpoint.c (ambiguous_names_p): Use htab_eq_string.\n\t* utils.c (streq_hash): Remove.\n\t* utils.h (streq_hash): Don't declare.\n\t* completer.c (completion_tracker::discard_completions): Update\n\tcomment.\n\t* ada-lang.c (_initialize_ada_language): Use htab_eq_string.",
    "tree": {
      "sha": "860ea79a3e5a70c56ec2fb16b0c7d4a7e2d62dcb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/860ea79a3e5a70c56ec2fb16b0c7d4a7e2d62dcb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2698f5ead62298979e44a212023027ebb582f3d1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2698f5ead62298979e44a212023027ebb582f3d1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2698f5ead62298979e44a212023027ebb582f3d1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2698f5ead62298979e44a212023027ebb582f3d1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "13123da89a2c7e06a5312ca6b4b24c68ba1c6c2d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13123da89a2c7e06a5312ca6b4b24c68ba1c6c2d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/13123da89a2c7e06a5312ca6b4b24c68ba1c6c2d"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 13,
    "deletions": 16
  },
  "files": [
    {
      "sha": "76ccb6beb3cfc975ad5c63568f2051d399217d9d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2698f5ead62298979e44a212023027ebb582f3d1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2698f5ead62298979e44a212023027ebb582f3d1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2698f5ead62298979e44a212023027ebb582f3d1",
      "patch": "@@ -1,3 +1,12 @@\n+2021-05-07  Tom Tromey  <tom@tromey.com>\n+\n+\t* breakpoint.c (ambiguous_names_p): Use htab_eq_string.\n+\t* utils.c (streq_hash): Remove.\n+\t* utils.h (streq_hash): Don't declare.\n+\t* completer.c (completion_tracker::discard_completions): Update\n+\tcomment.\n+\t* ada-lang.c (_initialize_ada_language): Use htab_eq_string.\n+\n 2021-05-07  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* Re-format all Python files using black."
    },
    {
      "sha": "34b0e925685fc5cd529bf75cf2e4633e2acc498e",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2698f5ead62298979e44a212023027ebb582f3d1/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2698f5ead62298979e44a212023027ebb582f3d1/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=2698f5ead62298979e44a212023027ebb582f3d1",
      "patch": "@@ -13490,7 +13490,8 @@ When enabled, the debugger will stop using the DW_AT_GNAT_descriptive_type\\n\\\n DWARF attribute.\"),\n      NULL, NULL, &maint_set_ada_cmdlist, &maint_show_ada_cmdlist);\n \n-  decoded_names_store = htab_create_alloc (256, htab_hash_string, streq_hash,\n+  decoded_names_store = htab_create_alloc (256, htab_hash_string,\n+\t\t\t\t\t   htab_eq_string,\n \t\t\t\t\t   NULL, xcalloc, xfree);\n \n   /* The ada-lang observers.  */"
    },
    {
      "sha": "38406b45856cef058854729e1aad884ffc337667",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2698f5ead62298979e44a212023027ebb582f3d1/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2698f5ead62298979e44a212023027ebb582f3d1/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=2698f5ead62298979e44a212023027ebb582f3d1",
      "patch": "@@ -13471,7 +13471,7 @@ static int\n ambiguous_names_p (struct bp_location *loc)\n {\n   struct bp_location *l;\n-  htab_up htab (htab_create_alloc (13, htab_hash_string, streq_hash, NULL,\n+  htab_up htab (htab_create_alloc (13, htab_hash_string, htab_eq_string, NULL,\n \t\t\t\t   xcalloc, xfree));\n \n   for (l = loc; l != NULL; l = l->next)"
    },
    {
      "sha": "80e8c7b743e1a75d0a212a6980fd21b9b5790b9b",
      "filename": "gdb/completer.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2698f5ead62298979e44a212023027ebb582f3d1/gdb/completer.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2698f5ead62298979e44a212023027ebb582f3d1/gdb/completer.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/completer.c?ref=2698f5ead62298979e44a212023027ebb582f3d1",
      "patch": "@@ -1593,7 +1593,7 @@ completion_tracker::discard_completions ()\n   m_entries_hash.reset (nullptr);\n \n   /* A callback used by the hash table to compare new entries with existing\n-     entries.  We can't use the standard streq_hash function here as the\n+     entries.  We can't use the standard htab_eq_string function here as the\n      key to our hash is just a single string, while the values we store in\n      the hash are a struct containing multiple strings.  */\n   static auto entry_eq_func"
    },
    {
      "sha": "1f48a5a0bfea5e8ecde4c7138771dce5ee057832",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2698f5ead62298979e44a212023027ebb582f3d1/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2698f5ead62298979e44a212023027ebb582f3d1/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=2698f5ead62298979e44a212023027ebb582f3d1",
      "patch": "@@ -2818,14 +2818,6 @@ streq (const char *lhs, const char *rhs)\n   return !strcmp (lhs, rhs);\n }\n \n-/* See utils.h.  */\n-\n-int\n-streq_hash (const void *lhs, const void *rhs)\n-{\n-  return streq ((const char *) lhs, (const char *) rhs);\n-}\n-\n \f\n \n /*"
    },
    {
      "sha": "94d37c5a8b1a8b2baa65209805aa893f23e76ee9",
      "filename": "gdb/utils.h",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2698f5ead62298979e44a212023027ebb582f3d1/gdb/utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2698f5ead62298979e44a212023027ebb582f3d1/gdb/utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.h?ref=2698f5ead62298979e44a212023027ebb582f3d1",
      "patch": "@@ -99,11 +99,6 @@ extern int strcmp_iw_ordered (const char *, const char *);\n \n extern bool streq (const char *, const char *);\n \n-/* A variant of streq that is suitable for use as an htab\n-   callback.  */\n-\n-extern int streq_hash (const void *, const void *);\n-\n extern int subset_compare (const char *, const char *);\n \n /* Compare C strings for std::sort.  */"
    }
  ]
}