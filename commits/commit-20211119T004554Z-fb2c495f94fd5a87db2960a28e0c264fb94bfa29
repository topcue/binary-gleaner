{
  "sha": "fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
  "node_id": "C_kwDOANOeidoAKGZiMmM0OTVmOTRmZDVhODdkYjI5NjBhMjhlMGMyNjRmYjk0YmZhMjk",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-19T00:10:28Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-19T00:45:54Z"
    },
    "message": "sim: avoid installing headers when there is no sim\n\nIf we aren't building any sims, don't install the sim headers as they\nwon't be useful to anyone.",
    "tree": {
      "sha": "67fd2fb7a0165406e7d23f3fd6741718399318b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/67fd2fb7a0165406e7d23f3fd6741718399318b6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a6e8dea6862f09ae7fef6266142de2868a4e7a1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a6e8dea6862f09ae7fef6266142de2868a4e7a1d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a6e8dea6862f09ae7fef6266142de2868a4e7a1d"
    }
  ],
  "stats": {
    "total": 120,
    "additions": 72,
    "deletions": 48
  },
  "files": [
    {
      "sha": "4831fbc6d1e15a07089131138936ec78c7d77958",
      "filename": "sim/Makefile.am",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.am?ref=fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
      "patch": "@@ -28,6 +28,7 @@ AM_MAKEFLAGS = SIM_PRIMARY_TARGET=$(SIM_PRIMARY_TARGET)\n \n # We don't set some of these vars here, but we need to define them so they may\n # be used consistently in local.mk files we include below.\n+pkginclude_HEADERS =\n check_PROGRAMS =\n noinst_LIBRARIES =\n EXTRA_PROGRAMS =\n@@ -58,9 +59,11 @@ SIM_ALL_RECURSIVE_DEPS =\n nltvals:\n \t$(srccom)/gennltvals.py --cpp \"$(CPP)\"\n \n-pkginclude_HEADERS = \\\n+if ENABLE_SIM\n+pkginclude_HEADERS += \\\n \t$(srcroot)/include/sim/callback.h \\\n \t$(srcroot)/include/sim/sim.h\n+endif\n \n include common/local.mk\n if SIM_ENABLE_IGEN"
    },
    {
      "sha": "0ea9d746c88a62d997bb98b30c2ac92f1c5f98fc",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 51,
      "deletions": 45,
      "changes": 96,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
      "patch": "@@ -432,83 +432,87 @@ EXTRA_PROGRAMS = $(am__EXEEXT_2) testsuite/common/bits-gen$(EXEEXT) \\\n \ttestsuite/common/fpu-tst$(EXEEXT) $(am__EXEEXT_3) \\\n \t$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \\\n \t$(am__EXEEXT_7)\n+@ENABLE_SIM_TRUE@am__append_1 = \\\n+@ENABLE_SIM_TRUE@\t$(srcroot)/include/sim/callback.h \\\n+@ENABLE_SIM_TRUE@\t$(srcroot)/include/sim/sim.h\n+\n \n # This makes sure igen is available before building the arch-subdirs which\n # need to run the igen tool.\n-@SIM_ENABLE_IGEN_TRUE@am__append_1 = $(IGEN)\n-@SIM_ENABLE_IGEN_TRUE@am__append_2 = igen/libigen.a\n-@SIM_ENABLE_IGEN_TRUE@am__append_3 = $(igen_IGEN_TOOLS)\n+@SIM_ENABLE_IGEN_TRUE@am__append_2 = $(IGEN)\n+@SIM_ENABLE_IGEN_TRUE@am__append_3 = igen/libigen.a\n @SIM_ENABLE_IGEN_TRUE@am__append_4 = $(igen_IGEN_TOOLS)\n+@SIM_ENABLE_IGEN_TRUE@am__append_5 = $(igen_IGEN_TOOLS)\n TESTS = testsuite/common/bits32m0$(EXEEXT) \\\n \ttestsuite/common/bits32m31$(EXEEXT) \\\n \ttestsuite/common/bits64m0$(EXEEXT) \\\n \ttestsuite/common/bits64m63$(EXEEXT) \\\n \ttestsuite/common/alu-tst$(EXEEXT)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_bpf_TRUE@am__append_5 = $(bpf_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_bpf_TRUE@am__append_6 = $(bpf_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_bpf_TRUE@am__append_7 = $(bpf_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_cr16_TRUE@am__append_7 = $(cr16_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_cr16_TRUE@am__append_8 = cr16/gencode\n-@SIM_ENABLE_ARCH_cr16_TRUE@am__append_9 = $(cr16_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_cr16_TRUE@am__append_8 = $(cr16_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_cr16_TRUE@am__append_9 = cr16/gencode\n+@SIM_ENABLE_ARCH_cr16_TRUE@am__append_10 = $(cr16_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_cris_TRUE@am__append_10 = $(cris_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_cris_TRUE@am__append_11 = $(cris_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_cris_TRUE@am__append_12 = $(cris_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_d10v_TRUE@am__append_12 = $(d10v_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_d10v_TRUE@am__append_13 = d10v/gencode\n-@SIM_ENABLE_ARCH_d10v_TRUE@am__append_14 = $(d10v_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_d10v_TRUE@am__append_13 = $(d10v_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_d10v_TRUE@am__append_14 = d10v/gencode\n+@SIM_ENABLE_ARCH_d10v_TRUE@am__append_15 = $(d10v_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_frv_TRUE@am__append_15 = $(frv_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_frv_TRUE@am__append_16 = $(frv_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_frv_TRUE@am__append_17 = $(frv_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_iq2000_TRUE@am__append_17 = $(iq2000_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_iq2000_TRUE@am__append_18 = $(iq2000_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_iq2000_TRUE@am__append_19 = $(iq2000_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_lm32_TRUE@am__append_19 = $(lm32_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_lm32_TRUE@am__append_20 = $(lm32_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_lm32_TRUE@am__append_21 = $(lm32_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_m32c_TRUE@am__append_21 = $(m32c_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_m32c_TRUE@am__append_22 = m32c/opc2c\n-@SIM_ENABLE_ARCH_m32c_TRUE@am__append_23 = \\\n+@SIM_ENABLE_ARCH_m32c_TRUE@am__append_22 = $(m32c_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m32c_TRUE@am__append_23 = m32c/opc2c\n+@SIM_ENABLE_ARCH_m32c_TRUE@am__append_24 = \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\t$(m32c_BUILD_OUTPUTS) \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\tm32c/m32c.c.log \\\n @SIM_ENABLE_ARCH_m32c_TRUE@\tm32c/r8c.c.log\n \n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_m32r_TRUE@am__append_24 = $(m32r_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_m32r_TRUE@am__append_25 = $(m32r_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m32r_TRUE@am__append_26 = $(m32r_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_26 = $(m68hc11_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_27 = m68hc11/gencode\n-@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_28 = $(m68hc11_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_27 = $(m68hc11_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_28 = m68hc11/gencode\n+@SIM_ENABLE_ARCH_m68hc11_TRUE@am__append_29 = $(m68hc11_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_mn10300_TRUE@am__append_29 = $(mn10300_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_mn10300_TRUE@am__append_30 = $(mn10300_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_mn10300_TRUE@am__append_31 = $(mn10300_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_or1k_TRUE@am__append_31 = $(or1k_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_or1k_TRUE@am__append_32 = $(or1k_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_or1k_TRUE@am__append_33 = $(or1k_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_sh_TRUE@am__append_33 = $(sh_BUILD_OUTPUTS)\n-@SIM_ENABLE_ARCH_sh_TRUE@am__append_34 = sh/gencode\n-@SIM_ENABLE_ARCH_sh_TRUE@am__append_35 = $(sh_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_sh_TRUE@am__append_34 = $(sh_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_sh_TRUE@am__append_35 = sh/gencode\n+@SIM_ENABLE_ARCH_sh_TRUE@am__append_36 = $(sh_BUILD_OUTPUTS)\n \n # This makes sure build tools are available before building the arch-subdirs.\n-@SIM_ENABLE_ARCH_v850_TRUE@am__append_36 = $(v850_BUILD_OUTPUTS)\n @SIM_ENABLE_ARCH_v850_TRUE@am__append_37 = $(v850_BUILD_OUTPUTS)\n+@SIM_ENABLE_ARCH_v850_TRUE@am__append_38 = $(v850_BUILD_OUTPUTS)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n@@ -542,7 +546,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \\\n-\t$(am__configure_deps) $(pkginclude_HEADERS)\n+\t$(am__configure_deps) $(am__pkginclude_HEADERS_DIST)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n  configure.lineno config.status.lineno\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -747,6 +751,8 @@ am__can_run_installinfo = \\\n     n|no|NO) false;; \\\n     *) (install-info --version) >/dev/null 2>&1;; \\\n   esac\n+am__pkginclude_HEADERS_DIST = $(srcroot)/include/sim/callback.h \\\n+\t$(srcroot)/include/sim/sim.h\n am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n am__vpath_adj = case $$p in \\\n     $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n@@ -1159,20 +1165,24 @@ srcroot = $(srcdir)/..\n SUBDIRS = @subdirs@ $(SIM_SUBDIRS)\n AM_MAKEFLAGS = SIM_PRIMARY_TARGET=$(SIM_PRIMARY_TARGET)\n \n+# We don't set some of these vars here, but we need to define them so they may\n+# be used consistently in local.mk files we include below.\n+pkginclude_HEADERS = $(am__append_1)\n+\n # NB: libcommon.a isn't used directly by ports.  We need a target for common\n # objects to be a part of, and ports use the individual objects directly.\n-noinst_LIBRARIES = common/libcommon.a $(am__append_2)\n+noinst_LIBRARIES = common/libcommon.a $(am__append_3)\n CLEANFILES = common/version.c common/version.c-stamp \\\n \ttestsuite/common/bits-gen testsuite/common/bits32m0.c \\\n \ttestsuite/common/bits32m31.c testsuite/common/bits64m0.c \\\n \ttestsuite/common/bits64m63.c\n DISTCLEANFILES = \n-MOSTLYCLEANFILES = core $(am__append_4) site-srcdir.exp testrun.log \\\n-\ttestrun.sum $(am__append_6) $(am__append_9) $(am__append_11) \\\n-\t$(am__append_14) $(am__append_16) $(am__append_18) \\\n-\t$(am__append_20) $(am__append_23) $(am__append_25) \\\n-\t$(am__append_28) $(am__append_30) $(am__append_32) \\\n-\t$(am__append_35) $(am__append_37)\n+MOSTLYCLEANFILES = core $(am__append_5) site-srcdir.exp testrun.log \\\n+\ttestrun.sum $(am__append_7) $(am__append_10) $(am__append_12) \\\n+\t$(am__append_15) $(am__append_17) $(am__append_19) \\\n+\t$(am__append_21) $(am__append_24) $(am__append_26) \\\n+\t$(am__append_29) $(am__append_31) $(am__append_33) \\\n+\t$(am__append_36) $(am__append_38)\n AM_CFLAGS = $(WERROR_CFLAGS) $(WARN_CFLAGS)\n AM_CPPFLAGS = -I$(srcroot)/include $(SIM_INLINE) -I$(srcdir)/common\n COMPILE_FOR_BUILD = $(CC_FOR_BUILD) $(AM_CPPFLAGS) $(CFLAGS_FOR_BUILD)\n@@ -1183,16 +1193,12 @@ LINK_FOR_BUILD = $(CC_FOR_BUILD) $(CFLAGS_FOR_BUILD) $(LDFLAGS_FOR_BUILD) -o $@\n \n # This makes sure common parts are available before building the arch-subdirs\n # which will refer to these.\n-SIM_ALL_RECURSIVE_DEPS = common/libcommon.a $(am__append_1) \\\n-\t$(am__append_5) $(am__append_7) $(am__append_10) \\\n-\t$(am__append_12) $(am__append_15) $(am__append_17) \\\n-\t$(am__append_19) $(am__append_21) $(am__append_24) \\\n-\t$(am__append_26) $(am__append_29) $(am__append_31) \\\n-\t$(am__append_33) $(am__append_36)\n-pkginclude_HEADERS = \\\n-\t$(srcroot)/include/sim/callback.h \\\n-\t$(srcroot)/include/sim/sim.h\n-\n+SIM_ALL_RECURSIVE_DEPS = common/libcommon.a $(am__append_2) \\\n+\t$(am__append_6) $(am__append_8) $(am__append_11) \\\n+\t$(am__append_13) $(am__append_16) $(am__append_18) \\\n+\t$(am__append_20) $(am__append_22) $(am__append_25) \\\n+\t$(am__append_27) $(am__append_30) $(am__append_32) \\\n+\t$(am__append_34) $(am__append_37)\n common_libcommon_a_CPPFLAGS = \\\n \t$(AM_CPPFLAGS) \\\n \t-DSIM_COMMON_BUILD \\"
    },
    {
      "sha": "4589362d36cd3516047fb5c9be1df951fd91f20f",
      "filename": "sim/configure",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/configure?ref=fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
      "patch": "@@ -650,6 +650,8 @@ SIM_ENABLE_HW_TRUE\n cgen\n cgendir\n CGEN_MAINT\n+ENABLE_SIM_FALSE\n+ENABLE_SIM_TRUE\n SIM_ENABLE_IGEN_FALSE\n SIM_ENABLE_IGEN_TRUE\n SIM_ENABLE_ARCH_v850_FALSE\n@@ -12245,7 +12247,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12248 \"configure\"\n+#line 12250 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12351,7 +12353,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12354 \"configure\"\n+#line 12356 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14860,6 +14862,14 @@ else\n   SIM_ENABLE_IGEN_FALSE=\n fi\n \n+ if test -n \"$SIM_SUBDIRS\"; then\n+  ENABLE_SIM_TRUE=\n+  ENABLE_SIM_FALSE='#'\n+else\n+  ENABLE_SIM_TRUE='#'\n+  ENABLE_SIM_FALSE=\n+fi\n+\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to force sim alignment\" >&5\n $as_echo_n \"checking whether to force sim alignment... \" >&6; }\n@@ -15621,6 +15631,10 @@ if test -z \"${SIM_ENABLE_IGEN_TRUE}\" && test -z \"${SIM_ENABLE_IGEN_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"SIM_ENABLE_IGEN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_SIM_TRUE}\" && test -z \"${ENABLE_SIM_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"ENABLE_SIM\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${SIM_ENABLE_HW_TRUE}\" && test -z \"${SIM_ENABLE_HW_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"SIM_ENABLE_HW\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"
    },
    {
      "sha": "86a800b6d6b1066a52b8579e3167c871e479040c",
      "filename": "sim/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb2c495f94fd5a87db2960a28e0c264fb94bfa29/sim/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/configure.ac?ref=fb2c495f94fd5a87db2960a28e0c264fb94bfa29",
      "patch": "@@ -155,6 +155,7 @@ if test \"${enable_sim}\" != no; then\n   fi\n fi\n AM_CONDITIONAL([SIM_ENABLE_IGEN], [test \"$sim_igen\" = \"yes\"])\n+AM_CONDITIONAL([ENABLE_SIM], [test -n \"$SIM_SUBDIRS\"])\n \n dnl Standard (and optional) simulator options.\n dnl Eventually all simulators will support these."
    }
  ]
}