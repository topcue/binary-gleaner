{
  "sha": "b65ce565416b950d8730b34106c54779c48efd29",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjY1Y2U1NjU0MTZiOTUwZDg3MzBiMzQxMDZjNTQ3NzljNDhlZmQyOQ==",
  "commit": {
    "author": {
      "name": "J\u00e9r\u00e9mie Galarneau",
      "email": "jeremie.galarneau@efficios.com",
      "date": "2020-02-18T00:08:03Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-02-26T21:23:11Z"
    },
    "message": "gdb: print thread names in thread apply command output\n\nThis makes the thread apply command print the thread's name.  The use\nof target_pid_to_str is replaced by thread_target_id_str, which\nprovides the same output as \"info threads\".\n\nBefore:\n(gdb) thread apply 2 bt\n\nThread 2 (Thread 0x7fd245602700 (LWP 3837)):\n[...]\n\nAfter:\n(gdb) thread apply 2 bt\n\nThread 2 (Thread 0x7fd245602700 (LWP 3837) \"HT cleanup\"):\n[...]\n\nThe thread's description header is pre-computed before running the\ncommand since the command may change the selected inferior. This is\nnot permitted by thread_target_id_str as target_thread_name asserts\nthat `info->inf == current_inferior ()`.\n\nThis situation arises in the `gdb.threads/threadapply.exp` test which\nkills and removes the inferior as part of a \"thread apply\" command.\n\ngdb/ChangeLog:\n\n        * thread.c (thr_try_catch_cmd): Print thread name.",
    "tree": {
      "sha": "3d6b332ab4c995ebd6311af193dc00e4101b2504",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3d6b332ab4c995ebd6311af193dc00e4101b2504"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b65ce565416b950d8730b34106c54779c48efd29",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b65ce565416b950d8730b34106c54779c48efd29",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b65ce565416b950d8730b34106c54779c48efd29",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b65ce565416b950d8730b34106c54779c48efd29/comments",
  "author": {
    "login": "jgalar",
    "id": 1395184,
    "node_id": "MDQ6VXNlcjEzOTUxODQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1395184?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jgalar",
    "html_url": "https://github.com/jgalar",
    "followers_url": "https://api.github.com/users/jgalar/followers",
    "following_url": "https://api.github.com/users/jgalar/following{/other_user}",
    "gists_url": "https://api.github.com/users/jgalar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jgalar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jgalar/subscriptions",
    "organizations_url": "https://api.github.com/users/jgalar/orgs",
    "repos_url": "https://api.github.com/users/jgalar/repos",
    "events_url": "https://api.github.com/users/jgalar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jgalar/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4c9a4f87ddbbb79d852f59ee1723e03294540c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4c9a4f87ddbbb79d852f59ee1723e03294540c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4c9a4f87ddbbb79d852f59ee1723e03294540c2"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 14,
    "deletions": 6
  },
  "files": [
    {
      "sha": "385cd010af9b7865aafb3a5d1d0800960fe0cb0d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b65ce565416b950d8730b34106c54779c48efd29/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b65ce565416b950d8730b34106c54779c48efd29/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b65ce565416b950d8730b34106c54779c48efd29",
      "patch": "@@ -1,3 +1,7 @@\n+2020-02-26  J\u00e9r\u00e9mie Galarneau  <jeremie.galarneau@efficios.com>\n+\n+\t* thread.c (thr_try_catch_cmd): Print thread name.\n+\n 2020-02-26  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/loc.h (dwarf2_fetch_die_loc_sect_off,"
    },
    {
      "sha": "c6e3d356a5a352de4bb07e5a3eab38a4b39b2fc9",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b65ce565416b950d8730b34106c54779c48efd29/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b65ce565416b950d8730b34106c54779c48efd29/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=b65ce565416b950d8730b34106c54779c48efd29",
      "patch": "@@ -1563,16 +1563,22 @@ thr_try_catch_cmd (thread_info *thr, const char *cmd, int from_tty,\n \t\t   const qcs_flags &flags)\n {\n   switch_to_thread (thr);\n+\n+  /* The thread header is computed before running the command since\n+     the command can change the inferior, which is not permitted\n+     by thread_target_id_str.  */\n+  std::string thr_header =\n+    string_printf (_(\"\\nThread %s (%s):\\n\"), print_thread_id (thr),\n+\t\t   thread_target_id_str (thr).c_str ());\n+\n   try\n     {\n       std::string cmd_result = execute_command_to_string\n \t(cmd, from_tty, gdb_stdout->term_out ());\n       if (!flags.silent || cmd_result.length () > 0)\n \t{\n \t  if (!flags.quiet)\n-\t    printf_filtered (_(\"\\nThread %s (%s):\\n\"),\n-\t\t\t     print_thread_id (thr),\n-\t\t\t     target_pid_to_str (inferior_ptid).c_str ());\n+\t    printf_filtered (\"%s\", thr_header.c_str ());\n \t  printf_filtered (\"%s\", cmd_result.c_str ());\n \t}\n     }\n@@ -1581,9 +1587,7 @@ thr_try_catch_cmd (thread_info *thr, const char *cmd, int from_tty,\n       if (!flags.silent)\n \t{\n \t  if (!flags.quiet)\n-\t    printf_filtered (_(\"\\nThread %s (%s):\\n\"),\n-\t\t\t     print_thread_id (thr),\n-\t\t\t     target_pid_to_str (inferior_ptid).c_str ());\n+\t    printf_filtered (\"%s\", thr_header.c_str ());\n \t  if (flags.cont)\n \t    printf_filtered (\"%s\\n\", ex.what ());\n \t  else"
    }
  ]
}