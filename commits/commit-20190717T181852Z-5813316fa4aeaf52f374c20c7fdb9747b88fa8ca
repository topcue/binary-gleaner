{
  "sha": "5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTgxMzMxNmZhNGFlYWY1MmYzNzRjMjBjN2ZkYjk3NDdiODhmYThjYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-24T02:57:09Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:18:52Z"
    },
    "message": "Remove some uses of TUI_WIN_SRC\n\nThis adds a 'win_info' parameter to a couple of functions.  This\nreduces the number of references to the TUI_WIN_SRC global.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.c (tui_update_source_window_as_is)\n\t(tui_update_source_windows_with_addr): Update.\n\t* tui/tui-source.h (tui_set_source_content)\n\t(tui_show_symtab_source): Add \"win_info\" parameter.\n\t* tui/tui-source.c (tui_set_source_content): Add \"win_info\"\n\tparameter.\n\t(tui_show_symtab_source): Likewise.",
    "tree": {
      "sha": "a4c8acf44eeffd116a679f7c78b6dd33f9988f77",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a4c8acf44eeffd116a679f7c78b6dd33f9988f77"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "00e264e7626260a6df6b5a0aa7ee25215ea93f9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00e264e7626260a6df6b5a0aa7ee25215ea93f9c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/00e264e7626260a6df6b5a0aa7ee25215ea93f9c"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 40,
    "deletions": 27
  },
  "files": [
    {
      "sha": "f3cd6e9826480c51cc04f0b3dcebc66e14e3fa08",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
      "patch": "@@ -1,3 +1,13 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.c (tui_update_source_window_as_is)\n+\t(tui_update_source_windows_with_addr): Update.\n+\t* tui/tui-source.h (tui_set_source_content)\n+\t(tui_show_symtab_source): Add \"win_info\" parameter.\n+\t* tui/tui-source.c (tui_set_source_content): Add \"win_info\"\n+\tparameter.\n+\t(tui_show_symtab_source): Likewise.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.c"
    },
    {
      "sha": "e62ee4ea5f9dcffbaae4b9b67b48a3a7260fab84",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
      "patch": "@@ -123,7 +123,8 @@ copy_source_line (const char **ptr, int line_no, int first_col,\n \n /* Function to display source in the source window.  */\n enum tui_status\n-tui_set_source_content (struct symtab *s, \n+tui_set_source_content (tui_source_window_base *win_info,\n+\t\t\tstruct symtab *s, \n \t\t\tint line_no,\n \t\t\tint noerror)\n {\n@@ -134,11 +135,11 @@ tui_set_source_content (struct symtab *s,\n       int line_width, nlines;\n \n       ret = TUI_SUCCESS;\n-      tui_alloc_source_buffer (TUI_SRC_WIN);\n-      line_width = TUI_SRC_WIN->width - 1;\n+      tui_alloc_source_buffer (win_info);\n+      line_width = win_info->width - 1;\n       /* Take hilite (window border) into account, when\n \t calculating the number of lines.  */\n-      nlines = (line_no + (TUI_SRC_WIN->height - 2)) - line_no;\n+      nlines = (line_no + (win_info->height - 2)) - line_no;\n \n       std::string srclines;\n       if (!g_source_cache.get_source_lines (s, line_no, line_no + nlines,\n@@ -159,32 +160,30 @@ tui_set_source_content (struct symtab *s,\n \t  int cur_line_no, cur_line;\n \t  struct tui_locator_window *locator\n \t    = tui_locator_win_info_ptr ();\n-\t  struct tui_source_window_base *src\n-\t    = (struct tui_source_window_base *) TUI_SRC_WIN;\n \t  const char *s_filename = symtab_to_filename_for_display (s);\n \n-\t  xfree (TUI_SRC_WIN->title);\n-\t  TUI_SRC_WIN->title = xstrdup (s_filename);\n+\t  xfree (win_info->title);\n+\t  win_info->title = xstrdup (s_filename);\n \n-\t  xfree (src->fullname);\n-\t  src->fullname = xstrdup (symtab_to_fullname (s));\n+\t  xfree (win_info->fullname);\n+\t  win_info->fullname = xstrdup (symtab_to_fullname (s));\n \n \t  cur_line = 0;\n-\t  src->gdbarch = get_objfile_arch (SYMTAB_OBJFILE (s));\n-\t  src->start_line_or_addr.loa = LOA_LINE;\n-\t  cur_line_no = src->start_line_or_addr.u.line_no = line_no;\n+\t  win_info->gdbarch = get_objfile_arch (SYMTAB_OBJFILE (s));\n+\t  win_info->start_line_or_addr.loa = LOA_LINE;\n+\t  cur_line_no = win_info->start_line_or_addr.u.line_no = line_no;\n \n \t  const char *iter = srclines.c_str ();\n-\t  TUI_SRC_WIN->content.resize (nlines);\n+\t  win_info->content.resize (nlines);\n \t  while (cur_line < nlines)\n \t    {\n \t      struct tui_source_element *element\n-\t\t= &TUI_SRC_WIN->content[cur_line];\n+\t\t= &win_info->content[cur_line];\n \n \t      std::string text;\n \t      if (*iter != '\\0')\n \t\ttext = copy_source_line (&iter, cur_line_no,\n-\t\t\t\t\t src->horizontal_offset,\n+\t\t\t\t\t win_info->horizontal_offset,\n \t\t\t\t\t line_width);\n \n \t      /* Set whether element is the execution point\n@@ -196,8 +195,8 @@ tui_set_source_content (struct symtab *s,\n \t\t\t\t symtab_to_fullname (s)) == 0\n \t\t   && cur_line_no == locator->line_no);\n \n-\t      xfree (TUI_SRC_WIN->content[cur_line].line);\n-\t      TUI_SRC_WIN->content[cur_line].line\n+\t      xfree (win_info->content[cur_line].line);\n+\t      win_info->content[cur_line].line\n \t\t= xstrdup (text.c_str ());\n \n \t      cur_line++;\n@@ -276,12 +275,13 @@ tui_set_source_content_nil (struct tui_source_window_base *win_info,\n /* Function to display source in the source window.  This function\n    initializes the horizontal scroll to 0.  */\n void\n-tui_show_symtab_source (struct gdbarch *gdbarch, struct symtab *s,\n+tui_show_symtab_source (tui_source_window_base *win_info,\n+\t\t\tstruct gdbarch *gdbarch, struct symtab *s,\n \t\t\tstruct tui_line_or_address line, \n \t\t\tint noerror)\n {\n-  TUI_SRC_WIN->horizontal_offset = 0;\n-  tui_update_source_window_as_is (TUI_SRC_WIN, gdbarch, s, line, noerror);\n+  win_info->horizontal_offset = 0;\n+  tui_update_source_window_as_is (win_info, gdbarch, s, line, noerror);\n }\n \n "
    },
    {
      "sha": "8ceb194e3923799f7a464595919d7e73483288b5",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
      "patch": "@@ -30,9 +30,11 @@ struct tui_win_info;\n extern void tui_set_source_content_nil (struct tui_source_window_base *,\n \t\t\t\t\tconst char *);\n \n-extern enum tui_status tui_set_source_content (struct symtab *, \n+extern enum tui_status tui_set_source_content (tui_source_window_base *,\n+\t\t\t\t\t       struct symtab *, \n \t\t\t\t\t       int, int);\n-extern void tui_show_symtab_source (struct gdbarch *, struct symtab *,\n+extern void tui_show_symtab_source (tui_source_window_base *,\n+\t\t\t\t    struct gdbarch *, struct symtab *,\n \t\t\t\t    struct tui_line_or_address,\n \t\t\t\t    int);\n extern int tui_source_is_displayed (const char *);"
    },
    {
      "sha": "c7c04dfe816fcd735c6475c6506d7f2aec49adf1",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5813316fa4aeaf52f374c20c7fdb9747b88fa8ca/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=5813316fa4aeaf52f374c20c7fdb9747b88fa8ca",
      "patch": "@@ -94,7 +94,8 @@ tui_update_source_window_as_is (struct tui_source_window_base *win_info,\n   enum tui_status ret;\n \n   if (win_info->type == SRC_WIN)\n-    ret = tui_set_source_content (s, line_or_addr.u.line_no, noerror);\n+    ret = tui_set_source_content (win_info, s, line_or_addr.u.line_no,\n+\t\t\t\t  noerror);\n   else\n     ret = tui_set_disassem_content (gdbarch, line_or_addr.u.addr);\n \n@@ -121,7 +122,7 @@ tui_update_source_window_as_is (struct tui_source_window_base *win_info,\n \t     we don't have a split layout.  */\n \t  if (tui_win_with_focus () == TUI_DISASM_WIN\n \t      && tui_current_layout () != SRC_DISASSEM_COMMAND)\n-\t    tui_set_win_focus_to (TUI_SRC_WIN);\n+\t    tui_set_win_focus_to (win_info);\n \t}\n     }\n \n@@ -153,7 +154,7 @@ tui_update_source_windows_with_addr (struct gdbarch *gdbarch, CORE_ADDR addr)\n \t  sal = find_pc_line (addr, 0);\n \t  l.loa = LOA_LINE;\n \t  l.u.line_no = sal.line;\n-\t  tui_show_symtab_source (gdbarch, sal.symtab, l, FALSE);\n+\t  tui_show_symtab_source (TUI_SRC_WIN, gdbarch, sal.symtab, l, FALSE);\n \t  break;\n \t}\n     }\n@@ -191,7 +192,7 @@ tui_update_source_windows_with_line (struct symtab *s, int line)\n     default:\n       l.loa = LOA_LINE;\n       l.u.line_no = line;\n-      tui_show_symtab_source (gdbarch, s, l, FALSE);\n+      tui_show_symtab_source (TUI_SRC_WIN, gdbarch, s, l, FALSE);\n       if (tui_current_layout () == SRC_DISASSEM_COMMAND)\n \t{\n \t  find_line_pc (s, line, &pc);"
    }
  ]
}