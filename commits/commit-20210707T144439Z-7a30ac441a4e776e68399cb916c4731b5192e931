{
  "sha": "7a30ac441a4e776e68399cb916c4731b5192e931",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2EzMGFjNDQxYTRlNzc2ZTY4Mzk5Y2I5MTZjNDczMWI1MTkyZTkzMQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-07-06T13:21:54Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-07-07T14:44:39Z"
    },
    "message": "ld: Check archive only for archive member\n\nSince plugin_maybe_claim calls bfd_close on the original input BFD if it\nisn't an archive member, pass NULL to bfd_plugin_close_file_descriptor\nto indicate that the BFD isn't an archive member.\n\nbfd/\n\n\tPR ld/18028\n\t* plugin.c (bfd_plugin_close_file_descriptor): Check archive\n\tonly of abfd != NULL.\n\t(try_claim): Pass NULL to bfd_plugin_close_file_descriptor if\n\tit isn't an archive member.\n\nld/\n\n\tPR ld/18028\n\t* plugin.c (plugin_input_file): Add comments for abfd and ibfd.\n\t(plugin_object_p): Set input->ibfd to NULL if it isn't an\n\tarchive member.",
    "tree": {
      "sha": "6c117dae85d6a43e3ec89cbdc8a03751e4d6732c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6c117dae85d6a43e3ec89cbdc8a03751e4d6732c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7a30ac441a4e776e68399cb916c4731b5192e931",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a30ac441a4e776e68399cb916c4731b5192e931",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7a30ac441a4e776e68399cb916c4731b5192e931",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a30ac441a4e776e68399cb916c4731b5192e931/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b180e8298b2068c2a530c25d0d6c4f2be651e12e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b180e8298b2068c2a530c25d0d6c4f2be651e12e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b180e8298b2068c2a530c25d0d6c4f2be651e12e"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 16,
    "deletions": 13
  },
  "files": [
    {
      "sha": "6cfa2b6647041772a3492f996c01f93c3ba19aa0",
      "filename": "bfd/plugin.c",
      "status": "modified",
      "additions": 13,
      "deletions": 12,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a30ac441a4e776e68399cb916c4731b5192e931/bfd/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a30ac441a4e776e68399cb916c4731b5192e931/bfd/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/plugin.c?ref=7a30ac441a4e776e68399cb916c4731b5192e931",
      "patch": "@@ -277,27 +277,26 @@ bfd_plugin_open_input (bfd *ibfd, struct ld_plugin_input_file *file)\n   return 1;\n }\n \n-/* Close the plugin file descriptor.  */\n+/* Close the plugin file descriptor FD.  If ABFD isn't NULL, it is an\n+   archive member.   */\n \n void\n bfd_plugin_close_file_descriptor (bfd *abfd, int fd)\n {\n-  bfd *iobfd;\n-\n-  iobfd = abfd;\n-  while (iobfd->my_archive\n-\t && !bfd_is_thin_archive (iobfd->my_archive))\n-    iobfd = iobfd->my_archive;\n-  if (iobfd == abfd)\n+  if (abfd == NULL)\n     close (fd);\n   else\n     {\n-      iobfd->archive_plugin_fd_open_count--;\n+      while (abfd->my_archive\n+\t     && !bfd_is_thin_archive (abfd->my_archive))\n+\tabfd = abfd->my_archive;\n+\n+      abfd->archive_plugin_fd_open_count--;\n       /* Dup the archive plugin file descriptor for later use, which\n \t will be closed by _bfd_archive_close_and_cleanup.  */\n-      if (iobfd->archive_plugin_fd_open_count == 0)\n+      if (abfd->archive_plugin_fd_open_count == 0)\n \t{\n-\t  iobfd->archive_plugin_fd = dup (fd);\n+\t  abfd->archive_plugin_fd = dup (fd);\n \t  close (fd);\n \t}\n     }\n@@ -314,7 +313,9 @@ try_claim (bfd *abfd)\n       && current_plugin->claim_file)\n     {\n       current_plugin->claim_file (&file, &claimed);\n-      bfd_plugin_close_file_descriptor (abfd, file.fd);\n+      bfd_plugin_close_file_descriptor ((abfd->my_archive != NULL\n+\t\t\t\t\t ? abfd : NULL),\n+\t\t\t\t\tfile.fd);\n     }\n \n   return claimed;"
    },
    {
      "sha": "b91a958b812db6b16214cf6d56ec972ac6b14417",
      "filename": "ld/plugin.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a30ac441a4e776e68399cb916c4731b5192e931/ld/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a30ac441a4e776e68399cb916c4731b5192e931/ld/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/plugin.c?ref=7a30ac441a4e776e68399cb916c4731b5192e931",
      "patch": "@@ -102,7 +102,9 @@ typedef struct view_buffer\n    pointer.  */\n typedef struct plugin_input_file\n {\n+  /* The dummy BFD.  */\n   bfd *abfd;\n+  /* The original input BFD.  Non-NULL if it is an archive member.  */\n   bfd *ibfd;\n   view_buffer_t view_buffer;\n   char *name;\n@@ -1220,7 +1222,7 @@ plugin_object_p (bfd *ibfd)\n \n   file.handle = input;\n   input->abfd = abfd;\n-  input->ibfd = ibfd;\n+  input->ibfd = ibfd->my_archive != NULL ? ibfd : NULL;\n   input->view_buffer.addr = NULL;\n   input->view_buffer.filesize = 0;\n   input->view_buffer.offset = 0;"
    }
  ]
}