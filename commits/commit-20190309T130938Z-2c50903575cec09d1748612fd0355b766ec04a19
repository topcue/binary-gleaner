{
  "sha": "2c50903575cec09d1748612fd0355b766ec04a19",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmM1MDkwMzU3NWNlYzA5ZDE3NDg2MTJmZDAzNTViNzY2ZWMwNGExOQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-03-08T15:15:10Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-03-09T13:09:38Z"
    },
    "message": "Split rank_one_type_parm_bool from rank_one_type\n\ngdb/ChangeLog:\n\n\t* gdbtypes.c (rank_one_type_parm_bool): New function extracted\n\tfrom...\n\t(rank_one_type): ... this.",
    "tree": {
      "sha": "5e4d158310d6362a1dbd62ecf6044373b08f3569",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e4d158310d6362a1dbd62ecf6044373b08f3569"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2c50903575cec09d1748612fd0355b766ec04a19",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c50903575cec09d1748612fd0355b766ec04a19",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2c50903575cec09d1748612fd0355b766ec04a19",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c50903575cec09d1748612fd0355b766ec04a19/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0dd322dc1345d1b8809f20a674c977276f0c0430",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0dd322dc1345d1b8809f20a674c977276f0c0430",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0dd322dc1345d1b8809f20a674c977276f0c0430"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 38,
    "deletions": 25
  },
  "files": [
    {
      "sha": "09599854c0b6d3cc9a0bd978c8736cff2c63a3f1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c50903575cec09d1748612fd0355b766ec04a19/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c50903575cec09d1748612fd0355b766ec04a19/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2c50903575cec09d1748612fd0355b766ec04a19",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.c (rank_one_type_parm_bool): New function extracted\n+\tfrom...\n+\t(rank_one_type): ... this.\n+\n 2019-03-08  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.c (rank_one_type_parm_range): New function extracted"
    },
    {
      "sha": "22ccb9fee2d8c3ee5792e524b544d5485bd6b926",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 32,
      "deletions": 25,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c50903575cec09d1748612fd0355b766ec04a19/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c50903575cec09d1748612fd0355b766ec04a19/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=2c50903575cec09d1748612fd0355b766ec04a19",
      "patch": "@@ -4065,6 +4065,37 @@ rank_one_type_parm_range (struct type *parm, struct type *arg, struct value *val\n     }\n }\n \n+/* rank_one_type helper for when PARM's type code is TYPE_CODE_BOOL.  */\n+\n+static struct rank\n+rank_one_type_parm_bool (struct type *parm, struct type *arg, struct value *value)\n+{\n+  switch (TYPE_CODE (arg))\n+    {\n+      /* n3290 draft, section 4.12.1 (conv.bool):\n+\n+\t \"A prvalue of arithmetic, unscoped enumeration, pointer, or\n+\t pointer to member type can be converted to a prvalue of type\n+\t bool.  A zero value, null pointer value, or null member pointer\n+\t value is converted to false; any other value is converted to\n+\t true.  A prvalue of type std::nullptr_t can be converted to a\n+\t prvalue of type bool; the resulting value is false.\"  */\n+    case TYPE_CODE_INT:\n+    case TYPE_CODE_CHAR:\n+    case TYPE_CODE_ENUM:\n+    case TYPE_CODE_FLT:\n+    case TYPE_CODE_MEMBERPTR:\n+    case TYPE_CODE_PTR:\n+      return BOOL_CONVERSION_BADNESS;\n+    case TYPE_CODE_RANGE:\n+      return INCOMPATIBLE_TYPE_BADNESS;\n+    case TYPE_CODE_BOOL:\n+      return EXACT_MATCH_BADNESS;\n+    default:\n+      return INCOMPATIBLE_TYPE_BADNESS;\n+    }\n+}\n+\n /* Compare one type (PARM) for compatibility with another (ARG).\n  * PARM is intended to be the parameter type of a function; and\n  * ARG is the supplied argument's type.  This function tests if\n@@ -4169,31 +4200,7 @@ rank_one_type (struct type *parm, struct type *arg, struct value *value)\n     case TYPE_CODE_RANGE:\n       return rank_one_type_parm_range (parm, arg, value);\n     case TYPE_CODE_BOOL:\n-      switch (TYPE_CODE (arg))\n-\t{\n-\t  /* n3290 draft, section 4.12.1 (conv.bool):\n-\n-\t     \"A prvalue of arithmetic, unscoped enumeration, pointer, or\n-\t     pointer to member type can be converted to a prvalue of type\n-\t     bool.  A zero value, null pointer value, or null member pointer\n-\t     value is converted to false; any other value is converted to\n-\t     true.  A prvalue of type std::nullptr_t can be converted to a\n-\t     prvalue of type bool; the resulting value is false.\"  */\n-\tcase TYPE_CODE_INT:\n-\tcase TYPE_CODE_CHAR:\n-\tcase TYPE_CODE_ENUM:\n-\tcase TYPE_CODE_FLT:\n-\tcase TYPE_CODE_MEMBERPTR:\n-\tcase TYPE_CODE_PTR:\n-\t  return BOOL_CONVERSION_BADNESS;\n-\tcase TYPE_CODE_RANGE:\n-\t  return INCOMPATIBLE_TYPE_BADNESS;\n-\tcase TYPE_CODE_BOOL:\n-\t  return EXACT_MATCH_BADNESS;\n-\tdefault:\n-\t  return INCOMPATIBLE_TYPE_BADNESS;\n-\t}\n-      break;\n+      return rank_one_type_parm_bool (parm, arg, value);\n     case TYPE_CODE_FLT:\n       switch (TYPE_CODE (arg))\n \t{"
    }
  ]
}