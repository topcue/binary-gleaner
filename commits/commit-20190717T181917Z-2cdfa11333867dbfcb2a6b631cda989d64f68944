{
  "sha": "2cdfa11333867dbfcb2a6b631cda989d64f68944",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmNkZmExMTMzMzg2N2RiZmNiMmE2YjYzMWNkYTk4OWQ2NGY2ODk0NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-01T06:51:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:19:17Z"
    },
    "message": "Change tui_get_register to return void\n\ntui_get_register returns a tui_status, but nothing checks this, so it\ncan return void instead.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.c (tui_get_register): Return void.",
    "tree": {
      "sha": "ce834c1475e64c9eaea6c26e41f1e563192f5f85",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce834c1475e64c9eaea6c26e41f1e563192f5f85"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2cdfa11333867dbfcb2a6b631cda989d64f68944",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2cdfa11333867dbfcb2a6b631cda989d64f68944",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2cdfa11333867dbfcb2a6b631cda989d64f68944",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2cdfa11333867dbfcb2a6b631cda989d64f68944/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8e3cfd09e813fc1a2738b0d4d19d15358e438ace",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e3cfd09e813fc1a2738b0d4d19d15358e438ace",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8e3cfd09e813fc1a2738b0d4d19d15358e438ace"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 8,
    "deletions": 9
  },
  "files": [
    {
      "sha": "8de1558eea24862b8a507a6405a5d49e1358caf2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2cdfa11333867dbfcb2a6b631cda989d64f68944/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2cdfa11333867dbfcb2a6b631cda989d64f68944/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2cdfa11333867dbfcb2a6b631cda989d64f68944",
      "patch": "@@ -1,3 +1,7 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.c (tui_get_register): Return void.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.c (tui_gen_win_info::make_visible):"
    },
    {
      "sha": "52f67026b549043e76f1b346f111729c53461795",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2cdfa11333867dbfcb2a6b631cda989d64f68944/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2cdfa11333867dbfcb2a6b631cda989d64f68944/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=2cdfa11333867dbfcb2a6b631cda989d64f68944",
      "patch": "@@ -54,9 +54,9 @@ static void tui_show_register_group (tui_data_window *win_info,\n \t\t\t\t     struct frame_info *frame,\n \t\t\t\t     int refresh_values_only);\n \n-static enum tui_status tui_get_register (struct frame_info *frame,\n-\t\t\t\t\t struct tui_data_item_window *data,\n-\t\t\t\t\t int regnum, bool *changedp);\n+static void tui_get_register (struct frame_info *frame,\n+\t\t\t      struct tui_data_item_window *data,\n+\t\t\t      int regnum, bool *changedp);\n \n \n \n@@ -646,13 +646,11 @@ tui_register_format (struct frame_info *frame, int regnum)\n /* Get the register value from the given frame and format it for the\n    display.  When changep is set, check if the new register value has\n    changed with respect to the previous call.  */\n-static enum tui_status\n+static void\n tui_get_register (struct frame_info *frame,\n                   struct tui_data_item_window *data, \n \t\t  int regnum, bool *changedp)\n {\n-  enum tui_status ret = TUI_FAILURE;\n-\n   if (changedp)\n     *changedp = false;\n   if (target_has_registers)\n@@ -666,8 +664,5 @@ tui_get_register (struct frame_info *frame,\n \t*changedp = true;\n \n       xfree (prev_content);\n-\n-      ret = TUI_SUCCESS;\n     }\n-  return ret;\n }"
    }
  ]
}