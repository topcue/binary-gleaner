{
  "sha": "546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTQ2Y2IyZDg1ZWRkYmE0ZjU2ZGZiY2IwMjg4ZGI2ODI0M2UzYTBmZA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-05T15:16:03Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-05T15:16:03Z"
    },
    "message": "Restore readelf's warnings that describe real problems with the file being examined.  Fix bug displaying empty file name tables.\n\nbinutils* dwarf.c (do_checks): New global variable.\n\t(display_formatted_table): Warn about an unexpected number of\n\tcolumns in the table, if checks are enabled.  Do not complain\n\tabout the lack of data following the number of entries in the\n\ttable if the table is empty.\n\t(display_debug_lines_decoded): Only warn about an unexpected\n\tnumber of columns in a table if checks are enabled.\n\t* dwarf.h (do_checks): Add a prototype.\n\t* elfcomm.c (error): Remove weak attribute.\n\t(warn): Likewise.\n\t* readelf.c (do_checks): Delete.\n\t(warn): Delete.\n\t(process_section_headers): Only warn about empty sections if\n\tchecks are enabled.\n\ngas\t* dwarf2dbg.c (out_dir_and_file_list): Add comments describing the\n\tconstruction of a DWARF-5 directory name table.\n\t* testsuite/gas/elf/pr25917.d: Update expected output.",
    "tree": {
      "sha": "35769bf0625cb16c6d8bd6ec734a8648ccfd2bc4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/35769bf0625cb16c6d8bd6ec734a8648ccfd2bc4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7d0bd4874453d781a0e6e998b47422f968907bdb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d0bd4874453d781a0e6e998b47422f968907bdb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7d0bd4874453d781a0e6e998b47422f968907bdb"
    }
  ],
  "stats": {
    "total": 104,
    "additions": 56,
    "deletions": 48
  },
  "files": [
    {
      "sha": "7d00344eb0d3160cf2087bec5697cec5c405b7d9",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -1,3 +1,20 @@\n+2020-05-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (do_checks): New global variable.\n+\t(display_formatted_table): Warn about an unexpected number of\n+\tcolumns in the table, if checks are enabled.  Do not complain\n+\tabout the lack of data following the number of entries in the\n+\ttable if the table is empty.\n+\t(display_debug_lines_decoded): Only warn about an unexpected\n+\tnumber of columns in a table if checks are enabled.\n+\t* dwarf.h (do_checks): Add a prototype.\n+\t* elfcomm.c (error): Remove weak attribute.\n+\t(warn): Likewise.\n+\t* readelf.c (do_checks): Delete.\n+\t(warn): Delete.\n+\t(process_section_headers): Only warn about empty sections if\n+\tchecks are enabled.\n+\n 2020-05-04  Fangrui Song   <maskray@google.com>\n \n \t* objcopy.c (copy_object): Allow empty section."
    },
    {
      "sha": "7b5f7af8a1e2f0bd19a4a32f3fe954e45221c873",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 17,
      "deletions": 10,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -98,6 +98,7 @@ int do_debug_cu_index;\n int do_wide;\n int do_debug_links;\n int do_follow_links;\n+bfd_boolean do_checks;\n \n int dwarf_cutoff_level = -1;\n unsigned long dwarf_start_die;\n@@ -3739,6 +3740,10 @@ display_formatted_table (unsigned char *                   data,\n   const char * table_name = is_dir ? N_(\"Directory Table\") : N_(\"File Name Table\");\n   \n   SAFE_BYTE_GET_AND_INC (format_count, data, 1, end);\n+  if (do_checks && format_count > 5)\n+    warn (_(\"Unexpectedly large number of columns in the %s (%u)\\n\"),\n+\t  table_name, format_count);\n+\n   format_start = data;\n   for (formati = 0; formati < format_count; formati++)\n     {\n@@ -3752,17 +3757,18 @@ display_formatted_table (unsigned char *                   data,\n     }\n \n   READ_ULEB (data_count, data, end);\n-  if (data == end)\n+  if (data_count == 0)\n     {\n-      warn (_(\"%s: Corrupt entry count\\n\"), table_name);\n+      printf (_(\"\\n The %s is empty.\\n\"), table_name);\n       return data;\n     }\n-\n-  if (data_count == 0)\n+  else if (data == end)\n     {\n-      printf (_(\"\\n The %s is empty.\\n\"), table_name);\n+      warn (_(\"%s: Corrupt entry count - expected %s but none found\\n\"),\n+\t    table_name, dwarf_vmatoa (\"x\", data_count));\n       return data;\n     }\n+\n   else if (format_count == 0)\n     {\n       warn (_(\"%s: format count is zero, but the table is not empty\\n\"),\n@@ -4343,8 +4349,9 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \n \t      /* Skip directories format.  */\n \t      SAFE_BYTE_GET_AND_INC (format_count, data, 1, end);\n-\t      if (format_count > 1)\n-\t\twarn (\"Unexpectedly large number of columns in the directory name table (%u)\\n\", format_count);\n+\t      if (do_checks && format_count > 1)\n+\t\twarn (_(\"Unexpectedly large number of columns in the directory name table (%u)\\n\"),\n+\t\t      format_count);\n \t      format_start = data;\n \t      for (formati = 0; formati < format_count; formati++)\n \t\t{\n@@ -4416,9 +4423,9 @@ display_debug_lines_decoded (struct dwarf_section *  section,\n \n \t      /* Skip files format.  */\n \t      SAFE_BYTE_GET_AND_INC (format_count, data, 1, end);\n-\t      if (format_count > 5)\n-\t\twarn (\"Unexpectedly large number of columns in the file name table (%u)\\n\", format_count);\n-\t      format_count = 2;\n+\t      if (do_checks && format_count > 5)\n+\t\twarn (_(\"Unexpectedly large number of columns in the file name table (%u)\\n\"),\n+\t\t      format_count);\n \t      format_start = data;\n \t      for (formati = 0; formati < format_count; formati++)\n \t\t{"
    },
    {
      "sha": "0c9f3661073991ddfafda9b593bd47a600377105",
      "filename": "binutils/dwarf.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/dwarf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/dwarf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.h?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -221,6 +221,7 @@ extern int do_debug_cu_index;\n extern int do_wide;\n extern int do_debug_links;\n extern int do_follow_links;\n+extern bfd_boolean do_checks;\n \n extern int dwarf_cutoff_level;\n extern unsigned long dwarf_start_die;"
    },
    {
      "sha": "5ec4690e13234b6eeed7ac45e2d32672cb9a21d0",
      "filename": "binutils/elfcomm.c",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/elfcomm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/elfcomm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/elfcomm.c?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -34,15 +34,6 @@\n \n extern char *program_name;\n \n-/* FIXME:  This definition really ought to be in ansidecl.h.  */\n-#ifndef ATTRIBUTE_WEAK\n-#define ATTRIBUTE_WEAK __attribute__((weak))\n-#endif\n-\n-/* Allow the following two functions to be overridden if desired.  */\n-void error (const char *, ...) ATTRIBUTE_WEAK;\n-void warn (const char *, ...) ATTRIBUTE_WEAK;\n-\n void\n error (const char *message, ...)\n {"
    },
    {
      "sha": "abf84b5cb9e8d7edf6c40d5c2eafd6fa664a7136",
      "filename": "binutils/elfcomm.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/elfcomm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/elfcomm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/elfcomm.h?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -26,8 +26,8 @@\n \n #include \"aout/ar.h\"\n \n-void error (const char *, ...) ATTRIBUTE_PRINTF_1;\n-void warn (const char *, ...) ATTRIBUTE_PRINTF_1;\n+extern void error (const char *, ...) ATTRIBUTE_PRINTF_1;\n+extern void warn (const char *, ...) ATTRIBUTE_PRINTF_1;\n \n typedef unsigned HOST_WIDEST_INT elf_vma;\n "
    },
    {
      "sha": "6bf6d5294ccfc746c9c0d66bfc058969b7f6571e",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 6,
      "deletions": 25,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -231,7 +231,6 @@ static bfd_boolean do_ctf = FALSE;\n static bfd_boolean do_arch = FALSE;\n static bfd_boolean do_notes = FALSE;\n static bfd_boolean do_archive_index = FALSE;\n-static bfd_boolean do_checks = FALSE;\n static bfd_boolean check_all = FALSE;\n static bfd_boolean is_32bit_elf = FALSE;\n static bfd_boolean decompress_dumps = FALSE;\n@@ -387,25 +386,6 @@ bfd_vmatoa (char *fmtch, bfd_vma value)\n   return ret;\n }\n \n-/* A version of the warn() function that is disabled if do_checks is not active.  */\n-\n-void\n-warn (const char *message, ...)\n-{\n-  va_list args;\n-\n-  if (!do_checks)\n-    return;\n-\n-  /* Try to keep warning messages in sync with the program's normal output.  */\n-  fflush (stdout);\n-\n-  va_start (args, message);\n-  fprintf (stderr, _(\"%s: Warning: \"), program_name);\n-  vfprintf (stderr, message, args);\n-  va_end (args);\n-}\n-\n /* Retrieve NMEMB structures, each SIZE bytes long from FILEDATA starting at\n    OFFSET + the offset of the current archive member, if we are examining an\n    archive.  Put the retrieved data into VAR, if it is not NULL.  Otherwise\n@@ -6378,21 +6358,22 @@ process_section_headers (Filedata * filedata)\n \n \tcase SHT_REL:\n \t  CHECK_ENTSIZE (section, i, Rel);\n-\t  if (section->sh_size == 0)\n+\t  if (do_checks && section->sh_size == 0)\n \t    warn (_(\"Section '%s': zero-sized relocation section\\n\"), name);\n \t  break;\n \n \tcase SHT_RELA:\n \t  CHECK_ENTSIZE (section, i, Rela);\n-\t  if (section->sh_size == 0)\n+\t  if (do_checks && section->sh_size == 0)\n \t    warn (_(\"Section '%s': zero-sized relocation section\\n\"), name);\n \t  break;\n \n \tcase SHT_NOTE:\n \tcase SHT_PROGBITS:\n-\t  if (section->sh_size == 0)\n-\t    /* This is not illegal according to the ELF standard, but\n-\t       it might be an indication that something is wrong.  */\n+\t  /* Having a zero sized section is not illegal according to the\n+\t     ELF standard, but it might be an indication that something\n+\t     is wrong.  So issue a warning if we are running in lint mode.  */\n+\t  if (do_checks && section->sh_size == 0)\n \t    warn (_(\"Section '%s': has a size of zero - is this intended ?\\n\"), name);\n \t  break;\n "
    },
    {
      "sha": "3ad9fb33d916ddaf619b7049f3a6eb5a643dc3d5",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf2dbg.c (out_dir_and_file_list): Add comments describing the\n+\tconstruction of a DWARF-5 directory name table.\n+\t* testsuite/gas/elf/pr25917.d: Update expected output.\n+\n 2020-05-05  Gunther Nikl <gnikl@justmail.de>\n \n \t* config/tc-rx.c (elf_flags): Initialize for non-linux targets."
    },
    {
      "sha": "69955fea5bfb5cf0f21b0460cc8f0e154722eb3d",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -1983,11 +1983,16 @@ out_dir_and_file_list (void)\n   /* Output the Directory Table.  */\n   if (DWARF2_LINE_VERSION >= 5)\n     {\n+      /* We only have one column in the directory table.  */\n       out_byte (1);\n+\n+      /* Describe the purpose and format of the column.  */\n       out_uleb128 (DW_LNCT_path);\n       /* FIXME: it would be better to store these strings in\n \t the .debug_line_str section and reference them here.  */\n       out_uleb128 (DW_FORM_string);\n+\n+      /* Now state how many rows there are in the table.  */\n       out_uleb128 (dirs_in_use);\n     }\n       "
    },
    {
      "sha": "ce031e7186033f8ce8850079cd4dc87f225235c3",
      "filename": "gas/testsuite/gas/elf/pr25917.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/gas/testsuite/gas/elf/pr25917.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/546cb2d85eddba4f56dfbcb0288db68243e3a0fd/gas/testsuite/gas/elf/pr25917.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/pr25917.d?ref=546cb2d85eddba4f56dfbcb0288db68243e3a0fd",
      "patch": "@@ -1,9 +1,9 @@\n #as: --gdwarf-5\n-#name: DWARF5: no files or directories\n+#name: DWARF5: no files or directories (PR 25917)\n #readelf: -wl\n \n #...\n  The Directory Table is empty.\n \n- No Line Number Statements.\n+ The File Name Table is empty.\n #pass"
    }
  ]
}