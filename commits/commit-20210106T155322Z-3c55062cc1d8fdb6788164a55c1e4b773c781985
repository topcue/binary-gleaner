{
  "sha": "3c55062cc1d8fdb6788164a55c1e4b773c781985",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2M1NTA2MmNjMWQ4ZmRiNjc4ODE2NGE1NWMxZTRiNzczYzc4MTk4NQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-06T15:53:22Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-06T15:53:22Z"
    },
    "message": "gdb/testsuite: fix race in gdb.threads/signal-while-stepping-over-bp-other-thread.exp\n\nCommit 3ec3145c5dd6 (\"gdb: introduce scoped debug prints\") updated some\ntests using \"set debug infrun\" to handle the fact that a debug print is\nnow shown after the prompt, after an inferior stop.  The same issue\nhappens in gdb.threads/signal-while-stepping-over-bp-other-thread.exp.\nIf I run it in a loop, it eventually fails like these other tests.\n\nThe problem is that the testsuite expects to see $gdb_prompt followed by\nthe end of the buffer.  It happens that expect reads $gdb_prompt and the\ndebug print at the same time, in which case the regexp never matches and\nwe get a timeout.\n\nThe fix is the same as was done in 3ec3145c5dd6, make the testsuite\nbelieve that the prompt is the standard GDB prompt followed by that\ndebug print.\n\nSince that test uses gdb_test_sequence, and the expected prompt is in\ngdb_test_sequence, add a -prompt switch to gdb_test_sequence to override\nthe prompt used for that call.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (gdb_test_sequence): Accept -prompt switch.\n\t* gdb.threads/signal-while-stepping-over-bp-other-thread.exp:\n\tPass prompt containing debug print to gdb_test_sequence.\n\nChange-Id: I33161c53ddab45cdfeadfd50b964f8dc3caa9729",
    "tree": {
      "sha": "495de5c3152a76bc38cc44a018c86e0c4cf8e4d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/495de5c3152a76bc38cc44a018c86e0c4cf8e4d7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c55062cc1d8fdb6788164a55c1e4b773c781985",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c55062cc1d8fdb6788164a55c1e4b773c781985",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c55062cc1d8fdb6788164a55c1e4b773c781985",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c55062cc1d8fdb6788164a55c1e4b773c781985/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4b186f88b816851dca198fc523eba4b53d4c1e5e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b186f88b816851dca198fc523eba4b53d4c1e5e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4b186f88b816851dca198fc523eba4b53d4c1e5e"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 28,
    "deletions": 3
  },
  "files": [
    {
      "sha": "d3c6e952132a036f00ec48f25240dd2a1d2adc68",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c55062cc1d8fdb6788164a55c1e4b773c781985/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c55062cc1d8fdb6788164a55c1e4b773c781985/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3c55062cc1d8fdb6788164a55c1e4b773c781985",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-06  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* lib/gdb.exp (gdb_test_sequence): Accept -prompt switch.\n+\t* gdb.threads/signal-while-stepping-over-bp-other-thread.exp:\n+\tPass prompt containing debug print to gdb_test_sequence.\n+\n 2021-01-04  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.dwarf2/dw2-out-of-range-end-of-seq.exp: New file."
    },
    {
      "sha": "28074854479a962c166220e7a9aa1af47dc22ae6",
      "filename": "gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c55062cc1d8fdb6788164a55c1e4b773c781985/gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c55062cc1d8fdb6788164a55c1e4b773c781985/gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp?ref=3c55062cc1d8fdb6788164a55c1e4b773c781985",
      "patch": "@@ -102,7 +102,7 @@ gdb_test \"set scheduler-locking off\"\n gdb_test \"set debug infrun 1\"\n \n set test \"step\"\n-gdb_test_sequence $test $test {\n+gdb_test_sequence $test $test -prompt \"$gdb_prompt \\\\\\[infrun\\\\\\] fetch_inferior_event: exit\\r\\n$\"  {\n     \"need to step-over\"\n     \"resume_1: step=1,\"\n     \"signal arrived while stepping over breakpoint\""
    },
    {
      "sha": "140e3960a32d9db3cec8d05f8994a141b72853a4",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 2,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c55062cc1d8fdb6788164a55c1e4b773c781985/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c55062cc1d8fdb6788164a55c1e4b773c781985/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=3c55062cc1d8fdb6788164a55c1e4b773c781985",
      "patch": "@@ -1401,6 +1401,9 @@ proc gdb_test_no_output { args } {\n # EXPECTED_OUTPUT_LIST is a list of regexps of expected output, which are\n # processed in order, and all must be present in the output.\n #\n+# The -prompt switch can be used to override the prompt expected at the end of\n+# the output sequence.\n+#\n # It is unnecessary to specify \".*\" at the beginning or end of any regexp,\n # there is an implicit \".*\" between each element of EXPECTED_OUTPUT_LIST.\n # There is also an implicit \".*\" between the last regexp and the gdb prompt.\n@@ -1413,16 +1416,32 @@ proc gdb_test_no_output { args } {\n #    0 if the test passes,\n #   -1 if there was an internal error.\n \n-proc gdb_test_sequence { command test_name expected_output_list } {\n+proc gdb_test_sequence { args } {\n     global gdb_prompt\n+\n+    parse_args {{prompt \"\"}}\n+\n+    if { $prompt == \"\" } {\n+\tset prompt \"$gdb_prompt $\"\n+    }\n+\n+    if { [llength $args] != 3 } {\n+\terror \"Unexpected # of arguments, expecting: COMMAND TEST_NAME EXPECTED_OUTPUT_LIST\"\n+    }\n+\n+    lassign $args command test_name expected_output_list\n+\n     if { $test_name == \"\" } {\n \tset test_name $command\n     }\n+\n     lappend expected_output_list \"\"; # implicit \".*\" before gdb prompt\n+\n     if { $command != \"\" } {\n \tsend_gdb \"$command\\n\"\n     }\n-    return [gdb_expect_list $test_name \"$gdb_prompt $\" $expected_output_list]\n+\n+    return [gdb_expect_list $test_name $prompt $expected_output_list]\n }\n \n \f"
    }
  ]
}