{
  "sha": "5b4846283c3d49138a58a3bb4d61ed3e2dfffff4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWI0ODQ2MjgzYzNkNDkxMzhhNThhM2JiNGQ2MWVkM2UyZGZmZmZmNA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-09-20T02:00:41Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-09-20T02:08:55Z"
    },
    "message": "Re: PR28149, debug info with wrong file association\n\nFixes segfaults when building aarch64-linux kernel, due to only doing\npart of the work necessary when allocating file numbers late.  I'd\nmissed looping over subsegments, which resulted in some u.filename\nentries left around and later interpreted as u.view.\n\n\tPR 28149\n\t* dwarf2dbg.c (purge_generated_debug): Iterate over subsegs too.\n\t(dwarf2_finish): Call do_allocate_filenum for all subsegs too,\n\tin a separate loop before subsegs are chained.",
    "tree": {
      "sha": "9a3a322a37e0ed2a648a3ce4eecb349beb741f4d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9a3a322a37e0ed2a648a3ce4eecb349beb741f4d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5b4846283c3d49138a58a3bb4d61ed3e2dfffff4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b4846283c3d49138a58a3bb4d61ed3e2dfffff4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5b4846283c3d49138a58a3bb4d61ed3e2dfffff4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b4846283c3d49138a58a3bb4d61ed3e2dfffff4/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8ac439689f4b0e7d0d03805426ae75fafdb47ad5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ac439689f4b0e7d0d03805426ae75fafdb47ad5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8ac439689f4b0e7d0d03805426ae75fafdb47ad5"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 23,
    "deletions": 13
  },
  "files": [
    {
      "sha": "e2abe19c88a48e484287b326f6ea3ff26f6924fb",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 23,
      "deletions": 13,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b4846283c3d49138a58a3bb4d61ed3e2dfffff4/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b4846283c3d49138a58a3bb4d61ed3e2dfffff4/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=5b4846283c3d49138a58a3bb4d61ed3e2dfffff4",
      "patch": "@@ -792,19 +792,23 @@ purge_generated_debug (void)\n \n   for (s = all_segs; s; s = s->next)\n     {\n-      struct line_subseg *lss = s->head;\n-      struct line_entry *e, *next;\n+      struct line_subseg *lss;\n \n-      for (e = lss->head; e; e = next)\n+      for (lss = s->head; lss; lss = lss->next)\n \t{\n-\t  know (e->loc.filenum == -1u);\n-\t  next = e->next;\n-\t  free (e);\n-\t}\n+\t  struct line_entry *e, *next;\n+\n+\t  for (e = lss->head; e; e = next)\n+\t    {\n+\t      know (e->loc.filenum == -1u);\n+\t      next = e->next;\n+\t      free (e);\n+\t    }\n \n-      lss->head = NULL;\n-      lss->ptail = &lss->head;\n-      lss->pmove_tail = &lss->head;\n+\t  lss->head = NULL;\n+\t  lss->ptail = &lss->head;\n+\t  lss->pmove_tail = &lss->head;\n+\t}\n     }\n }\n \n@@ -2887,15 +2891,21 @@ dwarf2_finish (void)\n \t\t\t     SEC_READONLY | SEC_DEBUGGING | SEC_OCTETS);\n     }\n \n+  for (s = all_segs; s; s = s->next)\n+    {\n+      struct line_subseg *lss;\n+\n+      for (lss = s->head; lss; lss = lss->next)\n+\tif (lss->head)\n+\t  do_allocate_filenum (lss->head);\n+    }\n+\n   /* For each subsection, chain the debug entries together.  */\n   for (s = all_segs; s; s = s->next)\n     {\n       struct line_subseg *lss = s->head;\n       struct line_entry **ptail = lss->ptail;\n \n-      if (lss->head && SEG_NORMAL (s->seg))\n-\tdo_allocate_filenum (lss->head);\n-\n       /* Reset the initial view of the first subsection of the\n \t section.  */\n       if (lss->head && lss->head->loc.u.view)"
    }
  ]
}