{
  "sha": "a1d217e844d89d85fcaeb0ca346acb8771c4d2f3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTFkMjE3ZTg0NGQ4OWQ4NWZjYWViMGNhMzQ2YWNiODc3MWM0ZDJmMw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-10-05T16:21:14Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-10-05T16:22:39Z"
    },
    "message": "gdb: TYPE_VECTOR -> type::is_vector in amd64-windows-tdep.c\n\nI get this build failure:\n\n      CXX    amd64-windows-tdep.o\n    cc1plus: warning: command-line option '-Wmissing-prototypes' is valid for C/ObjC but not for C++\n    /home/smarchi/src/binutils-gdb/gdb/amd64-windows-tdep.c: In function 'return_value_convention amd64_windows_return_value(gdbarch*, value*, type*, regcache*, gdb_byte*, const gdb_byte*)':\n    /home/smarchi/src/binutils-gdb/gdb/amd64-windows-tdep.c:374:6: error: 'TYPE_VECTOR' was not declared in this scope\n      374 |  if (TYPE_VECTOR (type) && len == 16)\n          |      ^~~~~~~~~~~\n\nTYPE_VECTOR was removed in favor of the type::is_vector method.\n\ngdb/ChangeLog:\n\n\t* amd64-windows-tdep.c (amd64_windows_return_value): Use\n\ttype::is_vector instead of TYPE_VECTOR.\n\nChange-Id: I0ce26c3f7a33625761a8dba351c3158464f21b01",
    "tree": {
      "sha": "d63aaae5a6c8cbbb313f65a37db00f02f8711372",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d63aaae5a6c8cbbb313f65a37db00f02f8711372"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1f1845d435fd0886f5c5561df8922268d2dfaefc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f1845d435fd0886f5c5561df8922268d2dfaefc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1f1845d435fd0886f5c5561df8922268d2dfaefc"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "183b92970341bf412047cfd4a59063c04e4bbea9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a1d217e844d89d85fcaeb0ca346acb8771c4d2f3",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-05  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* amd64-windows-tdep.c (amd64_windows_return_value): Use\n+\ttype::is_vector instead of TYPE_VECTOR.\n+\n 2020-10-05  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* auto-load.c (auto_load_objfile_script_1): Don't use"
    },
    {
      "sha": "48cd009553858ecd4a57368193b969afe6f0331f",
      "filename": "gdb/amd64-windows-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3/gdb/amd64-windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1d217e844d89d85fcaeb0ca346acb8771c4d2f3/gdb/amd64-windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-windows-tdep.c?ref=a1d217e844d89d85fcaeb0ca346acb8771c4d2f3",
      "patch": "@@ -371,7 +371,7 @@ amd64_windows_return_value (struct gdbarch *gdbarch, struct value *function,\n         break;\n       case TYPE_CODE_ARRAY:\n \t/* __m128, __m128i and __m128d are returned via XMM0.  */\n-\tif (TYPE_VECTOR (type) && len == 16)\n+\tif (type->is_vector () && len == 16)\n \t  {\n \t    enum type_code code = TYPE_TARGET_TYPE (type)->code ();\n \t    if (code == TYPE_CODE_INT || code == TYPE_CODE_FLT)"
    }
  ]
}