{
  "sha": "06210ce428ad74c28fd94f7ea3800b79791cdefa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDYyMTBjZTQyOGFkNzRjMjhmZDk0ZjdlYTM4MDBiNzk3OTFjZGVmYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-24T02:39:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:18:51Z"
    },
    "message": "Introduce can_scroll method\n\nThis introduces a \"can_scroll\" method, removing a spot that explicitly\nchecks a window's type.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-data.h (struct tui_win_info) <can_scroll>: New method.\n\t(struct tui_cmd_window) <can_scroll>: New method.\n\t* tui/tui-command.c (tui_dispatch_ctrl_char): Use can_scroll\n\tmethod.",
    "tree": {
      "sha": "feb0e94f60bb2db4caf20296412cb0e9bf3eaee8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/feb0e94f60bb2db4caf20296412cb0e9bf3eaee8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/06210ce428ad74c28fd94f7ea3800b79791cdefa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06210ce428ad74c28fd94f7ea3800b79791cdefa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/06210ce428ad74c28fd94f7ea3800b79791cdefa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06210ce428ad74c28fd94f7ea3800b79791cdefa/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "381befeedf9316991d47f4213850545a96593d23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/381befeedf9316991d47f4213850545a96593d23",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/381befeedf9316991d47f4213850545a96593d23"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 21,
    "deletions": 4
  },
  "files": [
    {
      "sha": "28b0b5334c0adb32970e3130c37d88d98fb3b99f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06210ce428ad74c28fd94f7ea3800b79791cdefa/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06210ce428ad74c28fd94f7ea3800b79791cdefa/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=06210ce428ad74c28fd94f7ea3800b79791cdefa",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-data.h (struct tui_win_info) <can_scroll>: New method.\n+\t(struct tui_cmd_window) <can_scroll>: New method.\n+\t* tui/tui-command.c (tui_dispatch_ctrl_char): Use can_scroll\n+\tmethod.\n+\n 2019-07-17  Tom Tromey  <tromey@adacore.com>\n \n \t* ui-out.h (class ui_out) <field_signed, field_fmt_signed,"
    },
    {
      "sha": "bd16f801d26d6542ed1e6756f8a3d78c3ab7a254",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06210ce428ad74c28fd94f7ea3800b79791cdefa/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06210ce428ad74c28fd94f7ea3800b79791cdefa/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=06210ce428ad74c28fd94f7ea3800b79791cdefa",
      "patch": "@@ -48,10 +48,9 @@ tui_dispatch_ctrl_char (unsigned int ch)\n   if (ch == '\\f')\n     tui_refresh_all_win ();\n \n-  /* If the command window has the logical focus, or no-one does\n-     assume it is the command window; in this case, pass the character\n-     on through and do nothing here.  */\n-  if (win_info == NULL || win_info == TUI_CMD_WIN)\n+  /* If no window has the focus, or if the focus window can't scroll,\n+     just pass the character through.  */\n+  if (win_info == NULL || !win_info->can_scroll ())\n     return ch;\n \n   switch (ch)"
    },
    {
      "sha": "6a243c3d2f97ffd476604a846d0838b187d4818e",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06210ce428ad74c28fd94f7ea3800b79791cdefa/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06210ce428ad74c28fd94f7ea3800b79791cdefa/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=06210ce428ad74c28fd94f7ea3800b79791cdefa",
      "patch": "@@ -352,6 +352,12 @@ struct tui_win_info : public tui_gen_win_info\n   void left_scroll (int num_to_scroll);\n   void right_scroll (int num_to_scroll);\n \n+  /* Return true if this window can be scrolled, false otherwise.  */\n+  virtual bool can_scroll () const\n+  {\n+    return true;\n+  }\n+\n   /* Can this window ever be highlighted?  */\n   bool can_highlight = true;\n \n@@ -524,6 +530,11 @@ struct tui_cmd_window : public tui_win_info\n     return CMD_NAME;\n   }\n \n+  bool can_scroll () const override\n+  {\n+    return false;\n+  }\n+\n   int start_line = 0;\n \n protected:"
    }
  ]
}