{
  "sha": "4b0e74fd1813aeb302cd97024d9e82a29282fb8d",
  "node_id": "C_kwDOANOeidoAKDRiMGU3NGZkMTgxM2FlYjMwMmNkOTcwMjRkOWU4MmEyOTI4MmZiOGQ",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@axis.com",
      "date": "2022-02-14T22:53:13Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2022-02-14T22:53:13Z"
    },
    "message": "sim/testsuite/cris: Remove faulty use of basename in C tests\n\nCalls to basename were added here as part of commit\ne1e1ae6e9b5e \"sim: testsuite: fix objdir handling\", but that\ncommit missed adding \"#include <libgen.h>\" or the equivalent\nGNU extension, see basename(3).  Fixing that shows a logical\nerror in the change to openpf1.c; the non-/-prefixed\ncode-path was changed instead of the \"/\"-prefixed code-path,\nwhich is the one executed after that commit.\n\nFor \"newlib\" these tests failed linking after that commit.\nRecent newlib has the (asm-renamed) GNU-extension-variant of\nbasename, but we're better off not using it at all.\n\nUnfortunately, compilation failures for C tests run by the\nmachinery in c.exp are currently just marked \"unresolved\",\nin contrast to C and assembler tests run by calling\nrun_sim_test.\n\nThe interaction of calling with the full program-path vs.\nuse of --sysroot exposes a consistency problem: when\n--sysroot is used, argv[0] isn't the path by which the\nprogram can find itself.  It's undecided whether argv[0] for\nthe program running in the simulator should be edited\n(related to the naked argument to the simulator before\npassing on to the simulated program) to remove a leading\n--sysroot.  Either way, such a change would be out of scope\nfor this commit.\n\n\t* c/stat3.c (mybasename): New macro.  Use it instead of basename.\n\t* c/openpf1.c: Correct basename-related change and update related\n\tcomment.",
    "tree": {
      "sha": "7b42bba72a72338976af1fb7e122768e2499cfb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7b42bba72a72338976af1fb7e122768e2499cfb7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4b0e74fd1813aeb302cd97024d9e82a29282fb8d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b0e74fd1813aeb302cd97024d9e82a29282fb8d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4b0e74fd1813aeb302cd97024d9e82a29282fb8d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b0e74fd1813aeb302cd97024d9e82a29282fb8d/comments",
  "author": {
    "login": "hpataxisdotcom",
    "id": 80339731,
    "node_id": "MDQ6VXNlcjgwMzM5NzMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hpataxisdotcom",
    "html_url": "https://github.com/hpataxisdotcom",
    "followers_url": "https://api.github.com/users/hpataxisdotcom/followers",
    "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}",
    "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions",
    "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs",
    "repos_url": "https://api.github.com/users/hpataxisdotcom/repos",
    "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "81011383d94b2f630cd8fdad989f2e24d4889c1e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81011383d94b2f630cd8fdad989f2e24d4889c1e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/81011383d94b2f630cd8fdad989f2e24d4889c1e"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 7,
    "deletions": 4
  },
  "files": [
    {
      "sha": "37940d709fbbac797de010a29d6c9a79e4382005",
      "filename": "sim/testsuite/cris/c/openpf1.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b0e74fd1813aeb302cd97024d9e82a29282fb8d/sim/testsuite/cris/c/openpf1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b0e74fd1813aeb302cd97024d9e82a29282fb8d/sim/testsuite/cris/c/openpf1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cris/c/openpf1.c?ref=4b0e74fd1813aeb302cd97024d9e82a29282fb8d",
      "patch": "@@ -3,8 +3,8 @@\n \n    We assume, with EXE being the name of the executable:\n    - The simulator executes with cwd the same directory where the executable\n-     is located (so argv[0] contains a plain filename without directory\n-     components).\n+     is located (also argv[0] contains a plain filename without directory\n+     components -or- argv[0] contains the full non-sysroot path to EXE).\n    - There's no /EXE on the host file system.  */\n \n #include <stdio.h>\n@@ -21,8 +21,10 @@ int main (int argc, char *argv[])\n       if (fnam == NULL)\n \tabort ();\n       strcpy (fnam, \"/\");\n-      strcat (fnam, basename (argv[0]));\n+      strcat (fnam, argv[0]);\n     }\n+  else\n+    fnam = strrchr (argv[0], '/');\n \n   f = fopen (fnam, \"rb\");\n   if (f == NULL)"
    },
    {
      "sha": "f7c96045832c143ddf89aee5ed4ad180fd653f57",
      "filename": "sim/testsuite/cris/c/stat3.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b0e74fd1813aeb302cd97024d9e82a29282fb8d/sim/testsuite/cris/c/stat3.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b0e74fd1813aeb302cd97024d9e82a29282fb8d/sim/testsuite/cris/c/stat3.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cris/c/stat3.c?ref=4b0e74fd1813aeb302cd97024d9e82a29282fb8d",
      "patch": "@@ -7,13 +7,14 @@\n #include <stdio.h>\n #include <string.h>\n #include <stdlib.h>\n+#define mybasename(x) ({ const char *x_ = (x), *y_ = strrchr (x_, '/'); y_ != NULL ? y_ + 1 : x_; })\n \n int main (int argc, char *argv[])\n {\n   char path[1024] = \"/\";\n   struct stat buf;\n \n-  strcat (path, basename (argv[0]));\n+  strcat (path, mybasename(argv[0]));\n   if (stat (\".\", &buf) != 0\n       || !S_ISDIR (buf.st_mode))\n     abort ();"
    }
  ]
}