{
  "sha": "86e57d1b233e15f7d72b39dbd381a7e5a9d1b026",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODZlNTdkMWIyMzNlMTVmN2Q3MmIzOWRiZDM4MWE3ZTVhOWQxYjAyNg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T20:28:31Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T22:14:15Z"
    },
    "message": "Don't write to inferior_ptid in btrace_fetch\n\ngdb/ChangeLog:\n2020-06-18  Pedro Alves  <palves@redhat.com>\n\n\t* btrace.c (btrace_fetch): Use switch_to_thread instead of writing\n\tto inferior_ptid.",
    "tree": {
      "sha": "0094629c8282029d0f9d36f30820abb4212858ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0094629c8282029d0f9d36f30820abb4212858ad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f2e1c129f8f0985ec80e6cf775cf3e4afbced6fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f2e1c129f8f0985ec80e6cf775cf3e4afbced6fa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f2e1c129f8f0985ec80e6cf775cf3e4afbced6fa"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 11,
    "deletions": 5
  },
  "files": [
    {
      "sha": "2f3c1e5887488866dee543dacc5b808e24f02d0c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=86e57d1b233e15f7d72b39dbd381a7e5a9d1b026",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-18  Pedro Alves  <palves@redhat.com>\n+\n+\t* btrace.c (btrace_fetch): Use switch_to_thread instead of writing\n+\tto inferior_ptid.\n+\n 2020-06-18  Pedro Alves  <palves@redhat.com>\n \n \t* bsd-kvm.c (bsd_kvm_target::close): Use switch_to_no_thread"
    },
    {
      "sha": "2a0c61de766a53ecb370149f9b6c340a7e86d2d3",
      "filename": "gdb/btrace.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026/gdb/btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86e57d1b233e15f7d72b39dbd381a7e5a9d1b026/gdb/btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/btrace.c?ref=86e57d1b233e15f7d72b39dbd381a7e5a9d1b026",
      "patch": "@@ -1910,11 +1910,12 @@ btrace_fetch (struct thread_info *tp, const struct btrace_cpu *cpu)\n   if (btinfo->replay != NULL)\n     return;\n \n-  /* With CLI usage, TP->PTID always equals INFERIOR_PTID here.  Now that we\n-     can store a gdb.Record object in Python referring to a different thread\n-     than the current one, temporarily set INFERIOR_PTID.  */\n-  scoped_restore save_inferior_ptid = make_scoped_restore (&inferior_ptid);\n-  inferior_ptid = tp->ptid;\n+  /* With CLI usage, TP is always the current thread when we get here.\n+     However, since we can also store a gdb.Record object in Python\n+     referring to a different thread than the current one, we need to\n+     temporarily set the current thread.  */\n+  scoped_restore_current_thread restore_thread;\n+  switch_to_thread (tp);\n \n   /* We should not be called on running or exited threads.  */\n   gdb_assert (can_access_registers_thread (tp));"
    }
  ]
}