{
  "sha": "06507dab6172582d3924a3d7dc92a9e7d4ab60ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDY1MDdkYWI2MTcyNTgyZDM5MjRhM2Q3ZGM5MmE5ZTdkNGFiNjBmZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-16T01:13:25Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-16T06:09:48Z"
    },
    "message": "PowerPC64 GOT reloc optimisation\n\nWhen the symbol referenced by a GOT reloc is an ifunc, we can't\noptimise away the GOT indirection.  Well, we can, but only if a global\nentry stub is created with the ifunc symbol redefined to the stub.\nBut that results in slower code and an indirection via the PLT so\nthere isn't much to like about that solution.\n\n\t* elf64-ppc.c (ppc64_elf_edit_toc): Exclude ifunc from GOT\n\toptimisation.\n\t(ppc64_elf_relocate_section): Likewise.",
    "tree": {
      "sha": "688850722876dc681d649a397d610eed8dc07ada",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/688850722876dc681d649a397d610eed8dc07ada"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/06507dab6172582d3924a3d7dc92a9e7d4ab60ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06507dab6172582d3924a3d7dc92a9e7d4ab60ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/06507dab6172582d3924a3d7dc92a9e7d4ab60ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06507dab6172582d3924a3d7dc92a9e7d4ab60ff/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "937f6614685b83c67574d6549cea431b2069dfd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/937f6614685b83c67574d6549cea431b2069dfd8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/937f6614685b83c67574d6549cea431b2069dfd8"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 9,
    "deletions": 0
  },
  "files": [
    {
      "sha": "25a3e468a733cc12407f2adb29008fed6ab1c569",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06507dab6172582d3924a3d7dc92a9e7d4ab60ff/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06507dab6172582d3924a3d7dc92a9e7d4ab60ff/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=06507dab6172582d3924a3d7dc92a9e7d4ab60ff",
      "patch": "@@ -9371,6 +9371,9 @@ ppc64_elf_edit_toc (struct bfd_link_info *info)\n \t\t  || discarded_section (sym_sec))\n \t\tcontinue;\n \n+\t      if ((h ? h->type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC)\n+\t\tcontinue;\n+\n \t      if (!SYMBOL_REFERENCES_LOCAL (info, h))\n \t\tcontinue;\n \n@@ -15886,6 +15889,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t  break;\n \n \tcase R_PPC64_GOT16_DS:\n+\t  if ((h ? h->elf.type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC)\n+\t    break;\n \t  from = TOCstart + htab->sec_info[input_section->id].toc_off;\n \t  if (relocation + addend - from + 0x8000 < 0x10000\n \t      && SYMBOL_REFERENCES_LOCAL (info, &h->elf))\n@@ -15903,6 +15908,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \n \tcase R_PPC64_GOT16_LO_DS:\n \tcase R_PPC64_GOT16_HA:\n+\t  if ((h ? h->elf.type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC)\n+\t    break;\n \t  from = TOCstart + htab->sec_info[input_section->id].toc_off;\n \t  if (relocation + addend - from + 0x80008000ULL < 0x100000000ULL\n \t      && SYMBOL_REFERENCES_LOCAL (info, &h->elf))\n@@ -15924,6 +15931,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t  break;\n \n \tcase R_PPC64_GOT_PCREL34:\n+\t  if ((h ? h->elf.type : ELF_ST_TYPE (sym->st_info)) == STT_GNU_IFUNC)\n+\t    break;\n \t  from = (rel->r_offset\n \t\t  + input_section->output_section->vma\n \t\t  + input_section->output_offset);"
    }
  ]
}