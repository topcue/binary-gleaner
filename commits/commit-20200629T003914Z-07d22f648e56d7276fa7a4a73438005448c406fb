{
  "sha": "07d22f648e56d7276fa7a4a73438005448c406fb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDdkMjJmNjQ4ZTU2ZDcyNzZmYTdhNGE3MzQzODAwNTQ0OGM0MDZmYg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-29T00:21:07Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-29T00:39:14Z"
    },
    "message": "asan: _bfd_pei_slurp_codeview_record use of uninit value\n\nFixes some seriously careless code.  bfd_bread return value is\n(bfd_size_type)-1 on error.  \"if (bfd_bread (...) < 4)\" does not check\nfor an error since bfd_size_type is unsigned.  In any case, I think we\nshould be reading and checking the requested length.\n\n\t* peXXigen.c (_bfd_XXi_slurp_codeview_record): Properly check\n\treturn value of bfd_bread.  Don't read more than requested length.\n\tSanity check length.  Properly terminate file name.",
    "tree": {
      "sha": "ed775472361aa5b8a78aec9e7a3a642e81480b6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ed775472361aa5b8a78aec9e7a3a642e81480b6f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/07d22f648e56d7276fa7a4a73438005448c406fb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/07d22f648e56d7276fa7a4a73438005448c406fb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/07d22f648e56d7276fa7a4a73438005448c406fb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/07d22f648e56d7276fa7a4a73438005448c406fb/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "279edac53db8fa6482ee3e305c9627f788fd2699",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/279edac53db8fa6482ee3e305c9627f788fd2699",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/279edac53db8fa6482ee3e305c9627f788fd2699"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 14,
    "deletions": 2
  },
  "files": [
    {
      "sha": "1bf65c294d69607270a17dc2149bb2e7e3656895",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/07d22f648e56d7276fa7a4a73438005448c406fb/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/07d22f648e56d7276fa7a4a73438005448c406fb/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=07d22f648e56d7276fa7a4a73438005448c406fb",
      "patch": "@@ -1,3 +1,9 @@\n+2020-06-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* peXXigen.c (_bfd_XXi_slurp_codeview_record): Properly check\n+\treturn value of bfd_bread.  Don't read more than requested length.\n+\tSanity check length.  Properly terminate file name.\n+\n 2020-06-29  Alan Modra  <amodra@gmail.com>\n \n \t* arc-got.h: Use C style comments."
    },
    {
      "sha": "5149ef582bf6dea0ad176e441b0041ae4234248a",
      "filename": "bfd/peXXigen.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/07d22f648e56d7276fa7a4a73438005448c406fb/bfd/peXXigen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/07d22f648e56d7276fa7a4a73438005448c406fb/bfd/peXXigen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peXXigen.c?ref=07d22f648e56d7276fa7a4a73438005448c406fb",
      "patch": "@@ -1147,15 +1147,21 @@ CODEVIEW_INFO *\n _bfd_XXi_slurp_codeview_record (bfd * abfd, file_ptr where, unsigned long length, CODEVIEW_INFO *cvinfo)\n {\n   char buffer[256+1];\n+  bfd_size_type nread;\n \n   if (bfd_seek (abfd, where, SEEK_SET) != 0)\n     return NULL;\n \n-  if (bfd_bread (buffer, 256, abfd) < 4)\n+  if (length <= sizeof (CV_INFO_PDB70) && length <= sizeof (CV_INFO_PDB20))\n+    return NULL;\n+  if (length > 256)\n+    length = 256;\n+  nread = bfd_bread (buffer, length, abfd);\n+  if (length != nread)\n     return NULL;\n \n   /* Ensure null termination of filename.  */\n-  buffer[256] = '\\0';\n+  memset (buffer + nread, 0, sizeof (buffer) - nread);\n \n   cvinfo->CVSignature = H_GET_32 (abfd, buffer);\n   cvinfo->Age = 0;"
    }
  ]
}