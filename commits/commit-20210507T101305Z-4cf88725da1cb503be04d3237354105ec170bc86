{
  "sha": "4cf88725da1cb503be04d3237354105ec170bc86",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGNmODg3MjVkYTFjYjUwM2JlMDRkMzIzNzM1NDEwNWVjMTcwYmM4Ng==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-05-07T10:13:05Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-05-07T10:13:05Z"
    },
    "message": "[gdb/symtab] Fix infinite recursion in dwarf2_cu::get_builder()\n\nWith the test-case attached in PR26327, gdb aborts:\n...\n$ gdb -q -batch 447.dealII -ex \"b main\"\nAborted (core dumped)\n...\nwhen running out of stack due to infinite recursion:\n...\n #8  0x00000000006aaba6 in dwarf2_cu::get_builder (this=0x35e4b40)\n     at src/gdb/dwarf2/read.c:700\n #9  0x00000000006aaba6 in dwarf2_cu::get_builder (this=0x22ee2c0)\n     at src/gdb/dwarf2/read.c:700\n #10 0x00000000006aaba6 in dwarf2_cu::get_builder (this=0x35e4b40)\n     at src/gdb/dwarf2/read.c:700\n #11 0x00000000006aaba6 in dwarf2_cu::get_builder (this=0x22ee2c0)\n     at src/gdb/dwarf2/read.c:700\n...\n\nWe're recursing in this code in dwarf2_cu::get_builder():\n...\n     /* Otherwise, search ancestors for a valid builder.  */\n     if (ancestor != nullptr)\n       return ancestor->get_builder ();\n...\ndue to the fact that the ancestor chain is a cycle.\n\nHigher up in the call stack, we find some code that is responsible for\ntriggering this, in new_symbol:\n...\n       case DW_TAG_formal_parameter:\n         {\n           /* If we are inside a function, mark this as an argument.  If\n              not, we might be looking at an argument to an inlined function\n              when we do not have enough information to show inlined frames;\n              pretend it's a local variable in that case so that the user can\n              still see it.  */\n           struct context_stack *curr\n             = cu->get_builder ()->get_current_context_stack ();\n           if (curr != nullptr && curr->name != nullptr)\n             SYMBOL_IS_ARGUMENT (sym) = 1;\n...\n\nThis is code that was added to support pre-4.1 gcc, to be able to show\narguments of inlined functions as locals, in the absense of sufficiently\ncorrect debug information.\n\nRemoving this code (that is, doing SYMBOL_IS_ARGUMENT (sym) = 1\nunconditially), fixes the crash.  The ancestor variable also seems to have\nbeen added specifically to deal with fallout from this code, so remove that as\nwell.\n\nTested on x86_64-linux:\n- openSUSE Leap 15.2 with gcc 7.5.0, and\n- openSUSE Tumbleweed with gcc 10.3.0.\n\ngdb/ChangeLog:\n\n2021-05-07  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26327\n\t* dwarf2/read.c (struct dwarf2_cu): Remove ancestor.\n\t(dwarf2_cu::get_builder): Remove ancestor-related code.\n\t(new_symbol): Remove code supporting pre-4.1 gcc that show arguments\n\tof inlined functions as locals.\n\t(follow_die_offset, follow_die_sig_1): Remove setting of ancestor.\n\ngdb/doc/ChangeLog:\n\n2021-05-07  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26327\n\t* gdb.texinfo (Inline Functions): Update.",
    "tree": {
      "sha": "dc0560cfccc7c5ef5f1f0f65e758e735eb6e992e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dc0560cfccc7c5ef5f1f0f65e758e735eb6e992e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4cf88725da1cb503be04d3237354105ec170bc86",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4cf88725da1cb503be04d3237354105ec170bc86",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4cf88725da1cb503be04d3237354105ec170bc86",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4cf88725da1cb503be04d3237354105ec170bc86/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "17c6c3b99156fe82c1e637e1a5fd9f163ac788c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17c6c3b99156fe82c1e637e1a5fd9f163ac788c8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/17c6c3b99156fe82c1e637e1a5fd9f163ac788c8"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 18,
    "deletions": 25
  },
  "files": [
    {
      "sha": "70d4972cd524c7631dcb7ff3e1282f9f7157595a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cf88725da1cb503be04d3237354105ec170bc86/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cf88725da1cb503be04d3237354105ec170bc86/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4cf88725da1cb503be04d3237354105ec170bc86",
      "patch": "@@ -1,3 +1,12 @@\n+2021-05-07  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26327\n+\t* dwarf2/read.c (struct dwarf2_cu): Remove ancestor.\n+\t(dwarf2_cu::get_builder): Remove ancestor-related code.\n+\t(new_symbol): Remove code supporting pre-4.1 gcc that show arguments\n+\tof inlined functions as locals.\n+\t(follow_die_offset, follow_die_sig_1): Remove setting of ancestor.\n+\n 2021-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* guile/guile-internal.h (gdbscm_safe_source_script): Change"
    },
    {
      "sha": "a56735896c567ea4d1c06fe95edbf4cd23d1be0e",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cf88725da1cb503be04d3237354105ec170bc86/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cf88725da1cb503be04d3237354105ec170bc86/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=4cf88725da1cb503be04d3237354105ec170bc86",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-07  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26327\n+\t* gdb.texinfo (Inline Functions): Update.\n+\n 2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.texinfo (GDB/MI Breakpoint Commands): Mention the"
    },
    {
      "sha": "f4d7085da584107242ce23d360bdebf42e18061c",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cf88725da1cb503be04d3237354105ec170bc86/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cf88725da1cb503be04d3237354105ec170bc86/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=4cf88725da1cb503be04d3237354105ec170bc86",
      "patch": "@@ -13842,8 +13842,8 @@ when using @sc{dwarf 2}.  Versions of @value{NGCC} before 4.1\n do not emit two required attributes (@samp{DW_AT_call_file} and\n @samp{DW_AT_call_line}); @value{GDBN} does not display inlined\n function calls with earlier versions of @value{NGCC}.  It instead\n-displays the arguments and local variables of inlined functions as\n-local variables in the caller.\n+displays local variables of inlined functions as local variables in\n+the caller.\n \n The body of an inlined function is directly included at its call site;\n unlike a non-inlined function, there are no instructions devoted to"
    },
    {
      "sha": "b2f48f1f395608d13b859ad76c92e736221e248a",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 23,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4cf88725da1cb503be04d3237354105ec170bc86/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4cf88725da1cb503be04d3237354105ec170bc86/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=4cf88725da1cb503be04d3237354105ec170bc86",
      "patch": "@@ -684,21 +684,13 @@ struct dwarf2_cu\n \n   struct partial_die_info *find_partial_die (sect_offset sect_off);\n \n-  /* If this CU was inherited by another CU (via specification,\n-     abstract_origin, etc), this is the ancestor CU.  */\n-  dwarf2_cu *ancestor;\n-\n   /* Get the buildsym_compunit for this CU.  */\n   buildsym_compunit *get_builder ()\n   {\n     /* If this CU has a builder associated with it, use that.  */\n     if (m_builder != nullptr)\n       return m_builder.get ();\n \n-    /* Otherwise, search ancestors for a valid builder.  */\n-    if (ancestor != nullptr)\n-      return ancestor->get_builder ();\n-\n     return nullptr;\n   }\n };\n@@ -22045,15 +22037,7 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \t  break;\n \tcase DW_TAG_formal_parameter:\n \t  {\n-\t    /* If we are inside a function, mark this as an argument.  If\n-\t       not, we might be looking at an argument to an inlined function\n-\t       when we do not have enough information to show inlined frames;\n-\t       pretend it's a local variable in that case so that the user can\n-\t       still see it.  */\n-\t    struct context_stack *curr\n-\t      = cu->get_builder ()->get_current_context_stack ();\n-\t    if (curr != nullptr && curr->name != nullptr)\n-\t      SYMBOL_IS_ARGUMENT (sym) = 1;\n+\t    SYMBOL_IS_ARGUMENT (sym) = 1;\n \t    attr = dwarf2_attr (die, DW_AT_location, cu);\n \t    if (attr != nullptr)\n \t      {\n@@ -23389,9 +23373,6 @@ follow_die_offset (sect_offset sect_off, int offset_in_dwz,\n   *ref_cu = target_cu;\n   temp_die.sect_off = sect_off;\n \n-  if (target_cu != cu)\n-    target_cu->ancestor = cu;\n-\n   return (struct die_info *) htab_find_with_hash (target_cu->die_hash,\n \t\t\t\t\t\t  &temp_die,\n \t\t\t\t\t\t  to_underlying (sect_off));\n@@ -23741,7 +23722,7 @@ follow_die_sig_1 (struct die_info *src_die, struct signatured_type *sig_type,\n \t\t  struct dwarf2_cu **ref_cu)\n {\n   struct die_info temp_die;\n-  struct dwarf2_cu *sig_cu, *cu = *ref_cu;\n+  struct dwarf2_cu *sig_cu;\n   struct die_info *die;\n   dwarf2_per_objfile *per_objfile = (*ref_cu)->per_objfile;\n \n@@ -23777,8 +23758,6 @@ follow_die_sig_1 (struct die_info *src_die, struct signatured_type *sig_type,\n \t}\n \n       *ref_cu = sig_cu;\n-      if (sig_cu != cu)\n-\tsig_cu->ancestor = cu;\n \n       return die;\n     }"
    }
  ]
}