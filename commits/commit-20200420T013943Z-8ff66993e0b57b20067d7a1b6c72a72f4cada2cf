{
  "sha": "8ff66993e0b57b20067d7a1b6c72a72f4cada2cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGZmNjY5OTNlMGI1N2IyMDA2N2Q3YTFiNmM3MmE3MmY0Y2FkYTJjZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-20T00:24:46Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-04-20T01:39:43Z"
    },
    "message": "readelf: segfaults fuzzing multiple object files\n\nThis patch is aimed at fixing a number of oss-fuzz segfaults that\ndon't reproduce reliably with their current infrastructure, the\nproblem being that one invocation of readelf is effectively being run\non multiple object files.  I believe that these segfaults could be\nreliably reproduced with just two fuzzed objects being presented to\nreadelf, but those inputs are currently not identified by oss-fuzz.\nSo there is some guesswork involved in this patch.  The idea here is\nto clear stashed data such as symtab_shndx_list that is processed\nusing section header info, at the same time that header info is\ncleared.\n\n\t* readelf.c (process_section_headers): Free dynamic symbols etc.\n\tearlier.",
    "tree": {
      "sha": "5009a15d97f28daa49f1eabc21645167c7308531",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5009a15d97f28daa49f1eabc21645167c7308531"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "58ee9a8a46b632ada94ae057acc23ba3928afa66",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58ee9a8a46b632ada94ae057acc23ba3928afa66",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/58ee9a8a46b632ada94ae057acc23ba3928afa66"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 19,
    "deletions": 15
  },
  "files": [
    {
      "sha": "86eb57814004580e3d9d6290c6972d03f4be8ec3",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=8ff66993e0b57b20067d7a1b6c72a72f4cada2cf",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_section_headers): Free dynamic symbols etc.\n+\tearlier.\n+\n 2020-04-20  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (get_num_dynamic_syms): Formatting.  Don't return"
    },
    {
      "sha": "d9c9b7ea0c1f9eba459e1a7f22489da90b9b1763",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 14,
      "deletions": 15,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ff66993e0b57b20067d7a1b6c72a72f4cada2cf/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=8ff66993e0b57b20067d7a1b6c72a72f4cada2cf",
      "patch": "@@ -6132,6 +6132,20 @@ process_section_headers (Filedata * filedata)\n \n   free (filedata->section_headers);\n   filedata->section_headers = NULL;\n+  free (dynamic_symbols);\n+  dynamic_symbols = NULL;\n+  num_dynamic_syms = 0;\n+  free (dynamic_strings);\n+  dynamic_strings = NULL;\n+  dynamic_strings_length = 0;\n+  free (dynamic_syminfo);\n+  dynamic_syminfo = NULL;\n+  while (symtab_shndx_list != NULL)\n+    {\n+      elf_section_list *next = symtab_shndx_list->next;\n+      free (symtab_shndx_list);\n+      symtab_shndx_list = next;\n+    }\n \n   if (filedata->file_header.e_shnum == 0)\n     {\n@@ -6186,21 +6200,6 @@ process_section_headers (Filedata * filedata)\n \n   /* Scan the sections for the dynamic symbol table\n      and dynamic string table and debug sections.  */\n-  free (dynamic_symbols);\n-  dynamic_symbols = NULL;\n-  num_dynamic_syms = 0;\n-  free (dynamic_strings);\n-  dynamic_strings = NULL;\n-  dynamic_strings_length = 0;\n-  free (dynamic_syminfo);\n-  dynamic_syminfo = NULL;\n-  while (symtab_shndx_list != NULL)\n-    {\n-      elf_section_list *next = symtab_shndx_list->next;\n-      free (symtab_shndx_list);\n-      symtab_shndx_list = next;\n-    }\n-\n   eh_addr_size = is_32bit_elf ? 4 : 8;\n   switch (filedata->file_header.e_machine)\n     {"
    }
  ]
}