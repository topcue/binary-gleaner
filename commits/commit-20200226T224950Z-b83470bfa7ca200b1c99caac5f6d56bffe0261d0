{
  "sha": "b83470bfa7ca200b1c99caac5f6d56bffe0261d0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjgzNDcwYmZhN2NhMjAwYjFjOTljYWFjNWY2ZDU2YmZmZTAyNjFkMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-26T22:41:07Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-26T22:49:50Z"
    },
    "message": "Specialize partial_symtab for DWARF include files\n\nInclude files are represented by a partial symtab, but don't expand to\nanything.  From dwarf2_psymtab::expand_psymtab:\n\n  if (per_cu == NULL)\n    {\n      /* It's an include file, no symbols to read for it.\n         Everything is in the parent symtab.  */\n      readin = true;\n      return;\n    }\n\nThis patch introduces a new specialization of partial_symtab to handle\nthis case.  In addition to being slightly smaller, I believe an\ninclude file is the only situation where a DWARF psymtab can result in\na null compunit_symtab.  This adds an assert to that effect as well.\nThis change will simplify one of the psymtab sharing patches.\n\ngdb/ChangeLog\n2020-02-26  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (struct dwarf2_include_psymtab): New.\n\t(dwarf2_create_include_psymtab): Use dwarf2_include_psymtab.\n\t(dwarf2_psymtab::expand_psymtab, dwarf2_psymtab::readin_p)\n\t(dwarf2_psymtab::get_compunit_symtab): Remove null checks for\n\tper_cu_data.",
    "tree": {
      "sha": "9fed46954796dca3bd59b98c97c7da205010cbe1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9fed46954796dca3bd59b98c97c7da205010cbe1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b83470bfa7ca200b1c99caac5f6d56bffe0261d0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b83470bfa7ca200b1c99caac5f6d56bffe0261d0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b83470bfa7ca200b1c99caac5f6d56bffe0261d0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b83470bfa7ca200b1c99caac5f6d56bffe0261d0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "edfe0a0c6561cf838f3f885c22940025a826d900",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edfe0a0c6561cf838f3f885c22940025a826d900",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/edfe0a0c6561cf838f3f885c22940025a826d900"
    }
  ],
  "stats": {
    "total": 68,
    "additions": 49,
    "deletions": 19
  },
  "files": [
    {
      "sha": "2f92b0a7cd54d040cdd64f1bed5c022b38821297",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b83470bfa7ca200b1c99caac5f6d56bffe0261d0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b83470bfa7ca200b1c99caac5f6d56bffe0261d0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b83470bfa7ca200b1c99caac5f6d56bffe0261d0",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (struct dwarf2_include_psymtab): New.\n+\t(dwarf2_create_include_psymtab): Use dwarf2_include_psymtab.\n+\t(dwarf2_psymtab::expand_psymtab, dwarf2_psymtab::readin_p)\n+\t(dwarf2_psymtab::get_compunit_symtab): Remove null checks for\n+\tper_cu_data.\n+\n 2020-02-26  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/index-write.c (psym_index_map): Change type."
    },
    {
      "sha": "c5f0ffa0d9d804e418d449fd10529c066721883c",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 41,
      "deletions": 19,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b83470bfa7ca200b1c99caac5f6d56bffe0261d0/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b83470bfa7ca200b1c99caac5f6d56bffe0261d0/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=b83470bfa7ca200b1c99caac5f6d56bffe0261d0",
      "patch": "@@ -5918,14 +5918,52 @@ read_abbrev_offset (struct dwarf2_per_objfile *dwarf2_per_objfile,\n   return (sect_offset) read_offset (abfd, info_ptr, offset_size);\n }\n \n+/* A partial symtab that is used only for include files.  */\n+struct dwarf2_include_psymtab : public partial_symtab\n+{\n+  dwarf2_include_psymtab (const char *filename, struct objfile *objfile)\n+    : partial_symtab (filename, objfile)\n+  {\n+  }\n+\n+  void read_symtab (struct objfile *objfile) override\n+  {\n+    expand_psymtab (objfile);\n+  }\n+\n+  void expand_psymtab (struct objfile *objfile) override\n+  {\n+    if (m_readin)\n+      return;\n+    /* It's an include file, no symbols to read for it.\n+       Everything is in the parent symtab.  */\n+    read_dependencies (objfile);\n+    m_readin = true;\n+  }\n+\n+  bool readin_p () const override\n+  {\n+    return m_readin;\n+  }\n+\n+  struct compunit_symtab *get_compunit_symtab () const override\n+  {\n+    return nullptr;\n+  }\n+\n+private:\n+\n+  bool m_readin = false;\n+};\n+\n /* Allocate a new partial symtab for file named NAME and mark this new\n    partial symtab as being an include of PST.  */\n \n static void\n dwarf2_create_include_psymtab (const char *name, dwarf2_psymtab *pst,\n                                struct objfile *objfile)\n {\n-  dwarf2_psymtab *subpst = new dwarf2_psymtab (name, objfile);\n+  dwarf2_include_psymtab *subpst = new dwarf2_include_psymtab (name, objfile);\n \n   if (!IS_ABSOLUTE_PATH (subpst->filename))\n     {\n@@ -5936,11 +5974,6 @@ dwarf2_create_include_psymtab (const char *name, dwarf2_psymtab *pst,\n   subpst->dependencies = objfile->partial_symtabs->allocate_dependencies (1);\n   subpst->dependencies[0] = pst;\n   subpst->number_of_dependencies = 1;\n-\n-  /* No private part is necessary for include psymtabs.  This property\n-     can be used to differentiate between such include psymtabs and\n-     the regular ones.  */\n-  subpst->per_cu_data = nullptr;\n }\n \n /* Read the Line Number Program data and extract the list of files\n@@ -8851,24 +8884,13 @@ process_queue (struct dwarf2_per_objfile *dwarf2_per_objfile)\n void\n dwarf2_psymtab::expand_psymtab (struct objfile *objfile)\n {\n-  struct dwarf2_per_cu_data *per_cu;\n-\n   if (readin)\n     return;\n \n   read_dependencies (objfile);\n \n-  per_cu = per_cu_data;\n-\n-  if (per_cu == NULL)\n-    {\n-      /* It's an include file, no symbols to read for it.\n-         Everything is in the parent symtab.  */\n-      readin = true;\n-      return;\n-    }\n-\n-  dw2_do_instantiate_symtab (per_cu, false);\n+  dw2_do_instantiate_symtab (per_cu_data, false);\n+  gdb_assert (get_compunit_symtab () != nullptr);\n }\n \n /* Trivial hash function for die_info: the hash value of a DIE"
    }
  ]
}