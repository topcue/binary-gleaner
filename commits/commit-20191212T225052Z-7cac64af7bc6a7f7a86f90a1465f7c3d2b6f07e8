{
  "sha": "7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2NhYzY0YWY3YmM2YTdmN2E4NmY5MGExNDY1ZjdjM2QyYjZmMDdlOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-01T22:31:28Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-12T22:50:52Z"
    },
    "message": "Introduce program_space::add_objfile\n\nThis introduces a new method, program_space::add_objfile, that adds an\nobjfile to the program space's list of objfiles.  It also changes the\nobfile's constructor so that linking an objfile into this list is not\ndone here.\n\nThe former is an improvement because it makes more sense to treat the\nprogram space as a container holding objfiles -- so manipulation of\nthe list belongs there.\n\nThe latter is not strictly needed, but seemed better both because it\nis removing a global side effect from a constructor, and for symmetry\nreasons, as a subsequent patch will remove unlinking from the\ndestructor.\n\ngdb/ChangeLog\n2019-12-12  Tom Tromey  <tom@tromey.com>\n\n\t* progspace.h (struct program_space) <add_objfile>: Declare\n\tmethod.\n\t* progspace.c (program_space::add_objfile): New method.\n\t* objfiles.c (~objfile): Don't unlink objfile.\n\t(put_objfile_before): Remove.\n\t(add_separate_debug_objfile): Don't call put_objfile_before.\n\t(objfile::make): Call add_objfile.  Set new_objfiles_available on\n\tthe per-program-space data.\n\nChange-Id: I93e8525dda631cb89dcc2046a5c51c7c9f34ccfd",
    "tree": {
      "sha": "0ecbee9d6d1b2c03b4a49bc551ae11ade6b1c1b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ecbee9d6d1b2c03b4a49bc551ae11ade6b1c1b0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "268e4f09144c48e02f01d82ab3aab359457df214",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/268e4f09144c48e02f01d82ab3aab359457df214",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/268e4f09144c48e02f01d82ab3aab359457df214"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 45,
    "deletions": 45
  },
  "files": [
    {
      "sha": "01636119d99f6e7980c379ecb88585dd3bbadaca",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
      "patch": "@@ -1,3 +1,14 @@\n+2019-12-12  Tom Tromey  <tom@tromey.com>\n+\n+\t* progspace.h (struct program_space) <add_objfile>: Declare\n+\tmethod.\n+\t* progspace.c (program_space::add_objfile): New method.\n+\t* objfiles.c (~objfile): Don't unlink objfile.\n+\t(put_objfile_before): Remove.\n+\t(add_separate_debug_objfile): Don't call put_objfile_before.\n+\t(objfile::make): Call add_objfile.  Set new_objfiles_available on\n+\tthe per-program-space data.\n+\n 2019-12-12  Tom Tromey  <tom@tromey.com>\n \n \t* symfile.c (syms_from_objfile_1): Use objfile_up."
    },
    {
      "sha": "b4fb6f2d18c4ec49ddfe6d0018e0d1905fb8ba34",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 6,
      "deletions": 45,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
      "patch": "@@ -371,23 +371,6 @@ objfile::objfile (bfd *abfd, const char *name, objfile_flags flags_)\n     }\n \n   per_bfd = get_objfile_bfd_data (this, abfd);\n-\n-  /* Add this file onto the tail of the linked list of other such files.  */\n-\n-  if (object_files == NULL)\n-    object_files = this;\n-  else\n-    {\n-      struct objfile *last_one;\n-\n-      for (last_one = object_files;\n-\t   last_one->next;\n-\t   last_one = last_one->next);\n-      last_one->next = this;\n-    }\n-\n-  /* Rebuild section map next time we need it.  */\n-  get_objfile_pspace_data (pspace)->new_objfiles_available = 1;\n }\n \n /* Retrieve the gdbarch associated with OBJFILE.  */\n@@ -494,30 +477,6 @@ unlink_objfile (struct objfile *objfile)\n \t\t  _(\"unlink_objfile: objfile already unlinked\"));\n }\n \n-/* Put one object file before a specified on in the global list.\n-   This can be used to make sure an object file is destroyed before\n-   another when using objfiles_safe to free all objfiles.  */\n-static void\n-put_objfile_before (struct objfile *objfile, struct objfile *before_this)\n-{\n-  struct objfile **objp;\n-\n-  unlink_objfile (objfile);\n-  \n-  for (objp = &object_files; *objp != NULL; objp = &((*objp)->next))\n-    {\n-      if (*objp == before_this)\n-\t{\n-\t  objfile->next = *objp;\n-\t  *objp = objfile;\n-\t  return;\n-\t}\n-    }\n-  \n-  internal_error (__FILE__, __LINE__,\n-\t\t  _(\"put_objfile_before: before objfile not in list\"));\n-}\n-\n /* Add OBJFILE as a separate debug objfile of PARENT.  */\n \n static void\n@@ -535,10 +494,6 @@ add_separate_debug_objfile (struct objfile *objfile, struct objfile *parent)\n   objfile->separate_debug_objfile_backlink = parent;\n   objfile->separate_debug_objfile_link = parent->separate_debug_objfile;\n   parent->separate_debug_objfile = objfile;\n-\n-  /* Put the separate debug object before the normal one, this is so that\n-     usage of objfiles_safe will stay safe.  */\n-  put_objfile_before (objfile, parent);\n }\n \n /* See objfiles.h.  */\n@@ -550,6 +505,12 @@ objfile::make (bfd *bfd_, const char *name_, objfile_flags flags_,\n   objfile *result = new objfile (bfd_, name_, flags_);\n   if (parent != nullptr)\n     add_separate_debug_objfile (result, parent);\n+\n+  current_program_space->add_objfile (result, parent);\n+\n+  /* Rebuild section map next time we need it.  */\n+  get_objfile_pspace_data (current_program_space)->new_objfiles_available = 1;\n+\n   return result;\n }\n "
    },
    {
      "sha": "5aa7a3d177e488a24c218e8ba617dbf78b84df62",
      "filename": "gdb/progspace.c",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/progspace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/progspace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.c?ref=7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
      "patch": "@@ -153,6 +153,28 @@ program_space::~program_space ()\n   program_space_free_data (this);\n }\n \n+/* See progspace.h.  */\n+\n+void\n+program_space::add_objfile (struct objfile *objfile, struct objfile *before)\n+{\n+  for (struct objfile **objp = &objfiles_head;\n+       *objp != NULL;\n+       objp = &((*objp)->next))\n+    {\n+      if (*objp == before)\n+\t{\n+\t  objfile->next = *objp;\n+\t  *objp = objfile;\n+\t  return;\n+\t}\n+    }\n+\n+  internal_error (__FILE__, __LINE__,\n+\t\t  _(\"put_objfile_before: before objfile not in list\"));\n+\n+}\n+\n /* Copies program space SRC to DEST.  Copies the main executable file,\n    and the main symbol file.  Returns DEST.  */\n "
    },
    {
      "sha": "bb10c4bbd26c74dd001258ddea5804642e0f60cf",
      "filename": "gdb/progspace.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/progspace.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8/gdb/progspace.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.h?ref=7cac64af7bc6a7f7a86f90a1465f7c3d2b6f07e8",
      "patch": "@@ -165,6 +165,12 @@ struct program_space\n     return objfiles_safe_range (objfiles_head);\n   }\n \n+  /* Add OBJFILE to the list of objfiles, putting it just before\n+     BEFORE.  If BEFORE is nullptr, it will go at the end of the\n+     list.  */\n+  void add_objfile (struct objfile *objfile, struct objfile *before);\n+\n+\n   /* Pointer to next in linked list.  */\n   struct program_space *next = NULL;\n "
    }
  ]
}