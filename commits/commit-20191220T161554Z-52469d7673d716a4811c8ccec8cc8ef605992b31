{
  "sha": "52469d7673d716a4811c8ccec8cc8ef605992b31",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTI0NjlkNzY3M2Q3MTZhNDgxMWM4Y2NlYzhjYzhlZjYwNTk5MmIzMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-13T01:20:32Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-20T16:15:54Z"
    },
    "message": "Reimplement tui_get_begin_asm_address\n\ntui_get_begin_asm_address looks for the inferior's \"main\" to display\nit.  I think this is incorrect in two ways.\n\nFirst, it should probably instead use the user's most recent source\ncontext, if one has been set.\n\nSecond, it uses a hard-coded list of \"main\" names, but gdb already has\na better approach to handling this.\n\nThis patch fixes both of these problems.\n\ngdb/ChangeLog\n2019-12-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-disasm.c (tui_get_begin_asm_address): Use\n\tget_current_source_symtab_and_line, and main_name.\n\nChange-Id: I77dc13d49148e8dec5aa3eeb357ce3968a68d0bd",
    "tree": {
      "sha": "584e7f9fe47088989ab3ff1145e1206ae1268856",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/584e7f9fe47088989ab3ff1145e1206ae1268856"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/52469d7673d716a4811c8ccec8cc8ef605992b31",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52469d7673d716a4811c8ccec8cc8ef605992b31",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/52469d7673d716a4811c8ccec8cc8ef605992b31",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52469d7673d716a4811c8ccec8cc8ef605992b31/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5d49bf1b698124fe21017105f84b18e29221b262",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d49bf1b698124fe21017105f84b18e29221b262",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5d49bf1b698124fe21017105f84b18e29221b262"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 22,
    "deletions": 14
  },
  "files": [
    {
      "sha": "e4715362c061b5e6ba07e3f7795e3b3aab61cd9f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52469d7673d716a4811c8ccec8cc8ef605992b31/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52469d7673d716a4811c8ccec8cc8ef605992b31/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=52469d7673d716a4811c8ccec8cc8ef605992b31",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-disasm.c (tui_get_begin_asm_address): Use\n+\tget_current_source_symtab_and_line, and main_name.\n+\n 2019-12-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui.c (tui_show_source): Update."
    },
    {
      "sha": "d8f2d386892b3e01cf7b85993aab479f5e9fb1a2",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 17,
      "deletions": 14,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52469d7673d716a4811c8ccec8cc8ef605992b31/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52469d7673d716a4811c8ccec8cc8ef605992b31/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=52469d7673d716a4811c8ccec8cc8ef605992b31",
      "patch": "@@ -258,25 +258,28 @@ tui_get_begin_asm_address (struct gdbarch **gdbarch_p, CORE_ADDR *addr_p)\n {\n   struct tui_locator_window *locator;\n   struct gdbarch *gdbarch = get_current_arch ();\n-  CORE_ADDR addr;\n+  CORE_ADDR addr = 0;\n \n   locator = tui_locator_win_info_ptr ();\n \n   if (locator->addr == 0)\n     {\n-      struct bound_minimal_symbol main_symbol;\n-\n-      /* Find address of the start of program.\n-         Note: this should be language specific.  */\n-      main_symbol = lookup_minimal_symbol (\"main\", NULL, NULL);\n-      if (main_symbol.minsym == 0)\n-        main_symbol = lookup_minimal_symbol (\"MAIN\", NULL, NULL);\n-      if (main_symbol.minsym == 0)\n-        main_symbol = lookup_minimal_symbol (\"_start\", NULL, NULL);\n-      if (main_symbol.minsym)\n-        addr = BMSYMBOL_VALUE_ADDRESS (main_symbol);\n-      else\n-        addr = 0;\n+      if (have_full_symbols () || have_partial_symbols ())\n+\t{\n+\t  set_default_source_symtab_and_line ();\n+\t  struct symtab_and_line sal = get_current_source_symtab_and_line ();\n+\n+\t  if (sal.symtab != nullptr)\n+\t    find_line_pc (sal.symtab, sal.line, &addr);\n+\t}\n+\n+      if (addr == 0)\n+\t{\n+\t  struct bound_minimal_symbol main_symbol\n+\t    = lookup_minimal_symbol (main_name (), nullptr, nullptr);\n+\t  if (main_symbol.minsym != nullptr)\n+\t    addr = BMSYMBOL_VALUE_ADDRESS (main_symbol);\n+\t}\n     }\n   else\t\t\t\t/* The target is executing.  */\n     {"
    }
  ]
}