{
  "sha": "1207375d768ae2b901c3bea6543b610c461160dd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTIwNzM3NWQ3NjhhZTJiOTAxYzNiZWE2NTQzYjYxMGM0NjExNjBkZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-30T00:35:35Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-30T00:35:35Z"
    },
    "message": "gdb: fix shellcheck warnings SC2154 (referenced but not assigned) in gdbarch.sh\n\nFix all instances of this kind of warning:\n\n    In gdbarch.sh line 96:\n                    m ) staticdefault=\"${predefault}\" ;;\n                                       ^-----------^ SC2154: predefault is referenced but not assigned.\n\nThese warnings appear because we are doing something a bit funky when reading\nthe gdbarch fields.  These variables are not assigned explicitly, but\nusing some `eval` commands.\n\nI don't think there is so much we can fix about those warnings.  To\nsilence them, I've changed `${foo}` to `${foo:-}`.  This tells the shell\nto substitute with an empty string if `foo` is not defined.  This\nretains the current behavior, but the warnings go away.\n\ngdb/ChangeLog:\n\n\t* gdbarch.sh: Use ${foo:-} where shellcheck would report a\n\t\"referenced but not assigned\" warning.",
    "tree": {
      "sha": "991dfa144424ce31efa350615e048929478f1f65",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/991dfa144424ce31efa350615e048929478f1f65"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1207375d768ae2b901c3bea6543b610c461160dd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1207375d768ae2b901c3bea6543b610c461160dd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1207375d768ae2b901c3bea6543b610c461160dd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1207375d768ae2b901c3bea6543b610c461160dd/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9fdb2916fec2833fd5c359c35916d2e632a06c23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9fdb2916fec2833fd5c359c35916d2e632a06c23",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9fdb2916fec2833fd5c359c35916d2e632a06c23"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 12,
    "deletions": 7
  },
  "files": [
    {
      "sha": "eb6841640b9a7dbdb9da36f24c8fb5ca1e68b6d1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1207375d768ae2b901c3bea6543b610c461160dd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1207375d768ae2b901c3bea6543b610c461160dd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1207375d768ae2b901c3bea6543b610c461160dd",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbarch.sh: Use ${foo:-} where shellcheck would report a\n+\t\"referenced but not assigned\" warning.\n+\n 2020-04-29  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbarch.sh: Remove code that sets fallbackdefault."
    },
    {
      "sha": "24f8cdfe90b043f0af4ff1add850856e62dce22f",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1207375d768ae2b901c3bea6543b610c461160dd/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1207375d768ae2b901c3bea6543b610c461160dd/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=1207375d768ae2b901c3bea6543b610c461160dd",
      "patch": "@@ -75,7 +75,7 @@ ${line}\n EOF\n \t    IFS=\"${OFS}\"\n \n-\t    if test -n \"${garbage_at_eol}\"\n+\t    if test -n \"${garbage_at_eol:-}\"\n \t    then\n \t\techo \"Garbage at end-of-line in ${line}\" 1>&2\n \t\tkill $$\n@@ -93,19 +93,19 @@ EOF\n \t    done\n \n \t    case \"${class}\" in\n-\t\tm ) staticdefault=\"${predefault}\" ;;\n+\t\tm ) staticdefault=\"${predefault:-}\" ;;\n \t\tM ) staticdefault=\"0\" ;;\n \t\t* ) test \"${staticdefault}\" || staticdefault=0 ;;\n \t    esac\n \n \t    case \"${class}\" in\n \t    F | V | M )\n-\t\tcase \"${invalid_p}\" in\n+\t\tcase \"${invalid_p:-}\" in\n \t\t\"\" )\n \t\t    if test -n \"${predefault}\"\n \t\t    then\n \t\t\t#invalid_p=\"gdbarch->${function} == ${predefault}\"\n-\t\t\tpredicate=\"gdbarch->${function} != ${predefault}\"\n+\t\t\tpredicate=\"gdbarch->${function:-} != ${predefault}\"\n \t\t    elif class_is_variable_p\n \t\t    then\n \t\t\tpredicate=\"gdbarch->${function} != 0\"\n@@ -139,7 +139,7 @@ EOF\n \n fallback_default_p ()\n {\n-    { [ -n \"${postdefault}\" ] && [ \"x${invalid_p}\" != \"x0\" ]; } \\\n+    { [ -n \"${postdefault:-}\" ] && [ \"x${invalid_p}\" != \"x0\" ]; } \\\n \t|| { [ -n \"${predefault}\" ] && [ \"x${invalid_p}\" = \"x0\" ]; }\n }\n \n@@ -1206,7 +1206,7 @@ exec > new-gdbarch.log\n function_list | while do_read\n do\n     cat <<EOF\n-${class} ${returntype} ${function} ($formal)\n+${class} ${returntype:-} ${function} (${formal:-})\n EOF\n     for r in ${read}\n     do\n@@ -2119,7 +2119,7 @@ do\n \tfi\n \tprintf \"  if (gdbarch_debug >= 2)\\n\"\n \tprintf \"    fprintf_unfiltered (gdb_stdlog, \\\"gdbarch_%s called\\\\\\\\n\\\");\\n\" \"$function\"\n-\tif [ \"x${actual}\" = \"x-\" ] || [ \"x${actual}\" = \"x\" ]\n+\tif [ \"x${actual:-}\" = \"x-\" ] || [ \"x${actual:-}\" = \"x\" ]\n \tthen\n \t    if class_is_multiarch_p\n \t    then"
    }
  ]
}