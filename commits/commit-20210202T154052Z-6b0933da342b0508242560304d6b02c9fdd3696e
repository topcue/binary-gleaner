{
  "sha": "6b0933da342b0508242560304d6b02c9fdd3696e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmIwOTMzZGEzNDJiMDUwODI0MjU2MDMwNGQ2YjAyYzlmZGQzNjk2ZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-02-02T15:40:52Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-02T15:40:52Z"
    },
    "message": "gdb/testsuite: DWARF assembler: add context parameters to _location\n\nThe _location proc is used to assemble a location description.  It needs\nto know some contextual information:\n\n- size of an address\n- size of an offset (into another DWARF section)\n- DWARF version\n\nIt currently get all this directly from global variables holding the\ncompilation unit information.  This is fine because as of now, all\nlocation descriptions are generated in the context of creating a\ncompilation unit.  However, a subsequent patch will generate location\ndescriptions while generating a .debug_loclists section.  _location\nshould therefore no longer rely on the current compilation unit's\nproperties.\n\nChange it to accept these values as parameters instead of accessing the\nvalues for the CU.\n\nNo functional changes intended.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/dwarf.exp (_location): Add parameters.\n\t(_handle_DW_FORM): Adjust.\n\nChange-Id: Ib94981979c83ffbebac838081d645ad71c221637",
    "tree": {
      "sha": "63307a180927d50600ec394d0203e6e698b27c39",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/63307a180927d50600ec394d0203e6e698b27c39"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6b0933da342b0508242560304d6b02c9fdd3696e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b0933da342b0508242560304d6b02c9fdd3696e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6b0933da342b0508242560304d6b02c9fdd3696e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b0933da342b0508242560304d6b02c9fdd3696e/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "962effa79018f57766d9aee21493f616801778dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/962effa79018f57766d9aee21493f616801778dc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/962effa79018f57766d9aee21493f616801778dc"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 32,
    "deletions": 13
  },
  "files": [
    {
      "sha": "e3166adcc7ca346f2b2ceb1bd9204cbc2eb74afb",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b0933da342b0508242560304d6b02c9fdd3696e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b0933da342b0508242560304d6b02c9fdd3696e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6b0933da342b0508242560304d6b02c9fdd3696e",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* lib/dwarf.exp (_location): Add parameters.\n+\t(_handle_DW_FORM): Adjust.\n+\n 2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n \n \tPR gdb/26813"
    },
    {
      "sha": "f4f1cab05e6825cc55927c158b65dc6eb5fda548",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 27,
      "deletions": 13,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b0933da342b0508242560304d6b02c9fdd3696e/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b0933da342b0508242560304d6b02c9fdd3696e/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=6b0933da342b0508242560304d6b02c9fdd3696e",
      "patch": "@@ -515,11 +515,15 @@ namespace eval Dwarf {\n \t    }\n \n \t    SPECIAL_expr {\n+\t\tvariable _cu_version\n+\t\tvariable _cu_addr_size\n+\t\tvariable _cu_offset_size\n+\n \t\tset l1 [new_label \"expr_start\"]\n \t\tset l2 [new_label \"expr_end\"]\n \t\t_op .uleb128 \"$l2 - $l1\" \"expression\"\n \t\tdefine_label $l1\n-\t\t_location $value\n+\t\t_location $value $_cu_version $_cu_addr_size $_cu_offset_size\n \t\tdefine_label $l2\n \t    }\n \n@@ -889,18 +893,28 @@ namespace eval Dwarf {\n     # This is a miniature assembler for location expressions.  It is\n     # suitable for use in the attributes to a DIE.  Its output is\n     # prefixed with \"=\" to make it automatically use DW_FORM_block.\n+    #\n     # BODY is split by lines, and each line is taken to be a list.\n+    #\n+    # DWARF_VERSION is the DWARF version for the section where the location\n+    # description is found.\n+    #\n+    # ADDR_SIZE is the length in bytes (4 or 8) of an address on the target\n+    # machine (typically found in the header of the section where the location\n+    # description is found).\n+    #\n+    # OFFSET_SIZE is the length in bytes (4 or 8) of an offset into a DWARF\n+    # section.  This typically depends on whether 32-bit or 64-bit DWARF is\n+    # used, as indicated in the header of the section where the location\n+    # description is found.\n+    #\n     # (FIXME should use 'info complete' here.)\n     # Each list's first element is the opcode, either short or long\n     # forms are accepted.\n     # FIXME argument handling\n     # FIXME move docs\n-    proc _location {body} {\n+    proc _location { body dwarf_version addr_size offset_size } {\n \tvariable _constants\n-\tvariable _cu_label\n-\tvariable _cu_version\n-\tvariable _cu_addr_size\n-\tvariable _cu_offset_size\n \n \tforeach line [split $body \\n] {\n \t    # Ignore blank lines, and allow embedded comments.\n@@ -912,7 +926,7 @@ namespace eval Dwarf {\n \n \t    switch -exact -- $opcode {\n \t\tDW_OP_addr {\n-\t\t    _op .${_cu_addr_size}byte [lindex $line 1]\n+\t\t    _op .${addr_size}byte [lindex $line 1]\n \t\t}\n \n \t\tDW_OP_regx {\n@@ -992,10 +1006,10 @@ namespace eval Dwarf {\n \n \t\t    # Here label is a section offset.\n \t\t    set label [lindex $line 1]\n-\t\t    if { $_cu_version == 2 } {\n-\t\t\t_op .${_cu_addr_size}byte $label\n+\t\t    if { $dwarf_version == 2 } {\n+\t\t\t_op .${addr_size}byte $label\n \t\t    } else {\n-\t\t\t_op .${_cu_offset_size}byte $label\n+\t\t\t_op .${offset_size}byte $label\n \t\t    }\n \t\t    _op .sleb128 [lindex $line 2]\n \t\t}\n@@ -1007,10 +1021,10 @@ namespace eval Dwarf {\n \n \t\t    # Here label is a section offset.\n \t\t    set label [lindex $line 1]\n-\t\t    if { $_cu_version == 2 } {\n-\t\t\t_op .${_cu_addr_size}byte $label\n+\t\t    if { $dwarf_version == 2 } {\n+\t\t\t_op .${addr_size}byte $label\n \t\t    } else {\n-\t\t\t_op .${_cu_offset_size}byte $label\n+\t\t\t_op .${offset_size}byte $label\n \t\t    }\n \t\t}\n "
    }
  ]
}