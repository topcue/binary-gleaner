{
  "sha": "40f3ce189e3c16398f2e56442e6d8db5573587ee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDBmM2NlMTg5ZTNjMTYzOThmMmU1NjQ0MmU2ZDhkYjU1NzM1ODdlZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:41Z"
    },
    "message": "Fix generic_val_print_enum for value-based printing\n\nThis removes a call to val_print_scalar_formatted from\ngeneric_val_print_enum, preferring to do the work in the callers.\nThis lets generic_value_print use the value-based API.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* valprint.c (generic_val_print): Update.\n\t(generic_value_print): Update.\n\t* valprint.c (generic_val_print_enum): Don't call\n\tval_print_scalar_formatted.",
    "tree": {
      "sha": "e07611d04348489594254787c7592199cf43c9ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e07611d04348489594254787c7592199cf43c9ea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/40f3ce189e3c16398f2e56442e6d8db5573587ee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40f3ce189e3c16398f2e56442e6d8db5573587ee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/40f3ce189e3c16398f2e56442e6d8db5573587ee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40f3ce189e3c16398f2e56442e6d8db5573587ee/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2a5b130bcb6f376b6a28d8378172ed3f9b92e9d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a5b130bcb6f376b6a28d8378172ed3f9b92e9d9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2a5b130bcb6f376b6a28d8378172ed3f9b92e9d9"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 22,
    "deletions": 15
  },
  "files": [
    {
      "sha": "f812cd75339dd1e18d334c53b74d645797db0dbf",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/40f3ce189e3c16398f2e56442e6d8db5573587ee/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/40f3ce189e3c16398f2e56442e6d8db5573587ee/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=40f3ce189e3c16398f2e56442e6d8db5573587ee",
      "patch": "@@ -1,3 +1,10 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* valprint.c (generic_val_print): Update.\n+\t(generic_value_print): Update.\n+\t* valprint.c (generic_val_print_enum): Don't call\n+\tval_print_scalar_formatted.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (generic_value_print): Call generic_value_print_ptr."
    },
    {
      "sha": "9362bdab2b2e5f613016daa50e148a88a54897fc",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/40f3ce189e3c16398f2e56442e6d8db5573587ee/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/40f3ce189e3c16398f2e56442e6d8db5573587ee/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=40f3ce189e3c16398f2e56442e6d8db5573587ee",
      "patch": "@@ -721,19 +721,13 @@ generic_val_print_enum (struct type *type,\n   struct gdbarch *gdbarch = get_type_arch (type);\n   int unit_size = gdbarch_addressable_memory_unit_size (gdbarch);\n \n-  if (options->format)\n-    {\n-      val_print_scalar_formatted (type, embedded_offset,\n-\t\t\t\t  original_value, options, 0, stream);\n-    }\n-  else\n-    {\n-      const gdb_byte *valaddr = value_contents_for_printing (original_value);\n+  gdb_assert (!options->format);\n \n-      val = unpack_long (type, valaddr + embedded_offset * unit_size);\n+  const gdb_byte *valaddr = value_contents_for_printing (original_value);\n \n-      generic_val_print_enum_1 (type, val, stream);\n-    }\n+  val = unpack_long (type, valaddr + embedded_offset * unit_size);\n+\n+  generic_val_print_enum_1 (type, val, stream);\n }\n \n /* generic_val_print helper for TYPE_CODE_FLAGS.  */\n@@ -977,8 +971,12 @@ generic_val_print (struct type *type,\n       break;\n \n     case TYPE_CODE_ENUM:\n-      generic_val_print_enum (type, embedded_offset, stream,\n-\t\t\t      original_value, options);\n+      if (options->format)\n+\tval_print_scalar_formatted (type, embedded_offset,\n+\t\t\t\t    original_value, options, 0, stream);\n+      else\n+\tgeneric_val_print_enum (type, embedded_offset, stream,\n+\t\t\t\toriginal_value, options);\n       break;\n \n     case TYPE_CODE_FLAGS:\n@@ -1086,8 +1084,10 @@ generic_value_print (struct value *val, struct ui_file *stream, int recurse,\n       break;\n \n     case TYPE_CODE_ENUM:\n-      generic_val_print_enum (type, 0, stream,\n-\t\t\t      val, options);\n+      if (options->format)\n+\tvalue_print_scalar_formatted (val, options, 0, stream);\n+      else\n+\tgeneric_val_print_enum (type, 0, stream, val, options);\n       break;\n \n     case TYPE_CODE_FLAGS:"
    }
  ]
}