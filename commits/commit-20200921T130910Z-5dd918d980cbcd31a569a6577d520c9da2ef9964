{
  "sha": "5dd918d980cbcd31a569a6577d520c9da2ef9964",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWRkOTE4ZDk4MGNiY2QzMWE1NjlhNjU3N2Q1MjBjOWRhMmVmOTk2NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-21T13:09:10Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-21T13:09:10Z"
    },
    "message": "Fix sparc prologue skipping\n\nsparc can fail at inline prologue skipping.  Andrew Burgess tracked\nthis down to sparc32_skip_prologue, which should use\nskip_prologue_using_sal rather than its hand-rolled variant.\n\nI don't have a good way to test this with the gdb test suite (is there\na board file for using qemu?  That would help), but it fixes a\nregression in the internal AdaCore test suite.  We've had this patch\ninternally at AdaCore for a while, but I just now finally got around\nto making sure that backing it out reintroduces the problem.\n\ngdb/ChangeLog\n2020-09-21  Tom Tromey  <tromey@adacore.com>\n\n\t* sparc-tdep.c (sparc32_skip_prologue): Use\n\tskip_prologue_using_sal.",
    "tree": {
      "sha": "7eab1ecf9aa748bdc44b169eb2fab6396022d346",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7eab1ecf9aa748bdc44b169eb2fab6396022d346"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5dd918d980cbcd31a569a6577d520c9da2ef9964",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5dd918d980cbcd31a569a6577d520c9da2ef9964",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5dd918d980cbcd31a569a6577d520c9da2ef9964",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5dd918d980cbcd31a569a6577d520c9da2ef9964/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c73eac969a8e14ebc5e3a1671951368728d01066",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c73eac969a8e14ebc5e3a1671951368728d01066",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c73eac969a8e14ebc5e3a1671951368728d01066"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 12,
    "deletions": 6
  },
  "files": [
    {
      "sha": "ce9cef5f516976b778823ee1f1426743b64cb5ee",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dd918d980cbcd31a569a6577d520c9da2ef9964/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dd918d980cbcd31a569a6577d520c9da2ef9964/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5dd918d980cbcd31a569a6577d520c9da2ef9964",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-21  Tom Tromey  <tromey@adacore.com>\n+\n+\t* sparc-tdep.c (sparc32_skip_prologue): Use\n+\tskip_prologue_using_sal.\n+\n 2020-09-19  Tom Tromey  <tom@tromey.com>\n \n \t* symfile.c (add_section_size_callback): Remove."
    },
    {
      "sha": "8417a47855fa6c05d2b9ba3af6562c7a885d84d7",
      "filename": "gdb/sparc-tdep.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dd918d980cbcd31a569a6577d520c9da2ef9964/gdb/sparc-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dd918d980cbcd31a569a6577d520c9da2ef9964/gdb/sparc-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc-tdep.c?ref=5dd918d980cbcd31a569a6577d520c9da2ef9964",
      "patch": "@@ -1127,18 +1127,19 @@ static CORE_ADDR\n sparc32_skip_prologue (struct gdbarch *gdbarch, CORE_ADDR start_pc)\n {\n   struct symtab_and_line sal;\n-  CORE_ADDR func_start, func_end;\n+  CORE_ADDR func_addr;\n   struct sparc_frame_cache cache;\n \n   /* This is the preferred method, find the end of the prologue by\n      using the debugging information.  */\n-  if (find_pc_partial_function (start_pc, NULL, &func_start, &func_end))\n+\n+  if (find_pc_partial_function (start_pc, NULL, &func_addr, NULL))\n     {\n-      sal = find_pc_line (func_start, 0);\n+      CORE_ADDR post_prologue_pc\n+\t= skip_prologue_using_sal (gdbarch, func_addr);\n \n-      if (sal.end < func_end\n-\t  && start_pc <= sal.end)\n-\treturn sal.end;\n+      if (post_prologue_pc != 0)\n+\treturn std::max (start_pc, post_prologue_pc);\n     }\n \n   start_pc = sparc_analyze_prologue (gdbarch, start_pc, 0xffffffffUL, &cache);"
    }
  ]
}