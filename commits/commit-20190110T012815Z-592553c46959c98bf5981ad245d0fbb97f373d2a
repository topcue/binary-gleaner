{
  "sha": "592553c46959c98bf5981ad245d0fbb97f373d2a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTkyNTUzYzQ2OTU5Yzk4YmY1OTgxYWQyNDVkMGZiYjk3ZjM3M2QyYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2018-11-24T16:00:42Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-10T01:28:15Z"
    },
    "message": "Remove ALL_OBJFILE_COMPUNITS\n\nThis removes ALL_OBJFILE_COMPUNITS, replacing its uses with ranged for\nloops.  Because ALL_COMPUNITS is also updated, in some places a\ndeclaration must be deleted to avoid shadowing.\n\ngdb/ChangeLog\n2019-01-09  Tom Tromey  <tom@tromey.com>\n\n\t* source.c (select_source_symtab)\n\t(forget_cached_source_info_for_objfile): Remove declaration.\n\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove\n\tdeclaration.\n\t* maint.c (count_symtabs_and_blocks): Remove declaration.\n\t* cp-support.c (add_symbol_overload_list_qualified): Remove\n\tdeclaration.\n\t* coffread.c (coff_symtab_read): Remove declaration.\n\t* symtab.c (lookup_symbol_in_objfile_symtabs)\n\t(basic_lookup_transparent_type_1): Use objfile_compunits.\n\t(lookup_objfile_from_block, find_pc_sect_compunit_symtab)\n\t(info_sources_command, search_symbols)\n\t(default_collect_symbol_completion_matches_break_on)\n\t(make_source_files_completion_list): Remove declaration.\n\t* ada-lang.c (add_nonlocal_symbols): Use objfile_compunits.\n\t(ada_collect_symbol_completion_matches)\n\t(ada_add_global_exceptions): Remove declaration.\n\t* linespec.c (iterate_over_all_matching_symtabs): Use\n\tobjfile_compunits.\n\t* objfiles.h (ALL_OBJFILE_COMPUNITS): Remove.\n\t(class objfile_compunits): New.\n\t(ALL_COMPUNITS): Use objfile_compunits.\n\t* symmisc.c (print_objfile_statistics, maintenance_info_symtabs)\n\t(maintenance_check_symtabs, maintenance_info_line_tables): Use\n\tobjfile_compunits.\n\t* objfiles.c (objfile_relocate1): Use objfile_compunits.",
    "tree": {
      "sha": "066ee980d8f02f73abcaea2a55d62d8a493de575",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/066ee980d8f02f73abcaea2a55d62d8a493de575"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/592553c46959c98bf5981ad245d0fbb97f373d2a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/592553c46959c98bf5981ad245d0fbb97f373d2a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/592553c46959c98bf5981ad245d0fbb97f373d2a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/592553c46959c98bf5981ad245d0fbb97f373d2a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5325b9bf1ee283c40f076334eb3ea66e1f0a6ade",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5325b9bf1ee283c40f076334eb3ea66e1f0a6ade",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5325b9bf1ee283c40f076334eb3ea66e1f0a6ade"
    }
  ],
  "stats": {
    "total": 163,
    "additions": 86,
    "deletions": 77
  },
  "files": [
    {
      "sha": "13dca51d0bd011fd497a8e73b8b8f2fd1cb1c102",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -1,3 +1,32 @@\n+2019-01-09  Tom Tromey  <tom@tromey.com>\n+\n+\t* source.c (select_source_symtab)\n+\t(forget_cached_source_info_for_objfile): Remove declaration.\n+\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove\n+\tdeclaration.\n+\t* maint.c (count_symtabs_and_blocks): Remove declaration.\n+\t* cp-support.c (add_symbol_overload_list_qualified): Remove\n+\tdeclaration.\n+\t* coffread.c (coff_symtab_read): Remove declaration.\n+\t* symtab.c (lookup_symbol_in_objfile_symtabs)\n+\t(basic_lookup_transparent_type_1): Use objfile_compunits.\n+\t(lookup_objfile_from_block, find_pc_sect_compunit_symtab)\n+\t(info_sources_command, search_symbols)\n+\t(default_collect_symbol_completion_matches_break_on)\n+\t(make_source_files_completion_list): Remove declaration.\n+\t* ada-lang.c (add_nonlocal_symbols): Use objfile_compunits.\n+\t(ada_collect_symbol_completion_matches)\n+\t(ada_add_global_exceptions): Remove declaration.\n+\t* linespec.c (iterate_over_all_matching_symtabs): Use\n+\tobjfile_compunits.\n+\t* objfiles.h (ALL_OBJFILE_COMPUNITS): Remove.\n+\t(class objfile_compunits): New.\n+\t(ALL_COMPUNITS): Use objfile_compunits.\n+\t* symmisc.c (print_objfile_statistics, maintenance_info_symtabs)\n+\t(maintenance_check_symtabs, maintenance_info_line_tables): Use\n+\tobjfile_compunits.\n+\t* objfiles.c (objfile_relocate1): Use objfile_compunits.\n+\n 2019-01-09  Tom Tromey  <tom@tromey.com>\n \n \t* symtab.c (search_symbols)"
    },
    {
      "sha": "69c368a48b43455754d7df0a08bef9c82775bcb4",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -5605,7 +5605,6 @@ add_nonlocal_symbols (struct obstack *obstackp,\n \t\t      const lookup_name_info &lookup_name,\n \t\t      domain_enum domain, int global)\n {\n-  struct compunit_symtab *cu;\n   struct match_data data;\n \n   memset (&data, 0, sizeof data);\n@@ -5630,7 +5629,7 @@ add_nonlocal_symbols (struct obstack *obstackp,\n \t\t\t\t\t       symbol_name_match_type::FULL,\n \t\t\t\t\t       compare_names);\n \n-      ALL_OBJFILE_COMPUNITS (objfile, cu)\n+      for (compunit_symtab *cu : objfile_compunits (objfile))\n \t{\n \t  const struct block *global_block\n \t    = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cu), GLOBAL_BLOCK);\n@@ -6391,7 +6390,6 @@ ada_collect_symbol_completion_matches (completion_tracker &tracker,\n \t\t\t\t       enum type_code code)\n {\n   struct symbol *sym;\n-  struct compunit_symtab *s;\n   const struct block *b, *surrounding_static_block = 0;\n   struct block_iterator iter;\n \n@@ -13551,7 +13549,6 @@ ada_add_global_exceptions (compiled_regex *preg,\n \t\t\t   std::vector<ada_exc_info> *exceptions)\n {\n   struct objfile *objfile;\n-  struct compunit_symtab *s;\n \n   /* In Ada, the symbol \"search name\" is a linkage name, whereas the\n      regular expression used to do the matching refers to the natural"
    },
    {
      "sha": "2a864892ed1323e31796bd96bcd08c3fcf60d8cc",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -1203,7 +1203,6 @@ coff_symtab_read (minimal_symbol_reader &reader,\n   /* Patch up any opaque types (references to types that are not defined\n      in the file where they are referenced, e.g. \"struct foo *bar\").  */\n   {\n-    struct compunit_symtab *cu;\n     struct symtab *s;\n \n     ALL_OBJFILE_FILETABS (objfile, cu, s)"
    },
    {
      "sha": "790670256b7f158d8aae5a2fa627ec5ff9880e66",
      "filename": "gdb/cp-support.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/cp-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/cp-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-support.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -1373,7 +1373,6 @@ static void\n add_symbol_overload_list_qualified (const char *func_name,\n \t\t\t\t    std::vector<symbol *> *overload_list)\n {\n-  struct compunit_symtab *cust;\n   const struct block *b, *surrounding_static_block = 0;\n \n   /* Look through the partial symtabs for all symbols which begin by"
    },
    {
      "sha": "964697b7bcbd3f6be276bd500916f1bf06ed0cad",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -1143,16 +1143,14 @@ iterate_over_all_matching_symtabs\n \n     for (objfile *objfile : all_objfiles (current_program_space))\n       {\n-\tstruct compunit_symtab *cu;\n-\n \tif (objfile->sf)\n \t  objfile->sf->qf->expand_symtabs_matching (objfile,\n \t\t\t\t\t\t    NULL,\n \t\t\t\t\t\t    lookup_name,\n \t\t\t\t\t\t    NULL, NULL,\n \t\t\t\t\t\t    search_domain);\n \n-\tALL_OBJFILE_COMPUNITS (objfile, cu)\n+\tfor (compunit_symtab *cu : objfile_compunits (objfile))\n \t  {\n \t    struct symtab *symtab = COMPUNIT_FILETABS (cu);\n "
    },
    {
      "sha": "a4241cdca5370447d526168249f17c357625b85f",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -763,7 +763,6 @@ count_symtabs_and_blocks (int *nr_symtabs_ptr, int *nr_compunit_symtabs_ptr,\n \t\t\t  int *nr_blocks_ptr)\n {\n   struct objfile *o;\n-  struct compunit_symtab *cu;\n   struct symtab *s;\n   int nr_symtabs = 0;\n   int nr_compunit_symtabs = 0;"
    },
    {
      "sha": "dbd535b1767e5a0987c579d8cb4f5ca6f346b516",
      "filename": "gdb/mi/mi-cmd-file.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/mi/mi-cmd-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/mi/mi-cmd-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-file.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -84,7 +84,6 @@ void\n mi_cmd_file_list_exec_source_files (const char *command, char **argv, int argc)\n {\n   struct ui_out *uiout = current_uiout;\n-  struct compunit_symtab *cu;\n   struct symtab *s;\n   struct objfile *objfile;\n "
    },
    {
      "sha": "dc94322baf8f36776f8121d3b17a3501ac228ec1",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 34,
      "deletions": 34,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -788,7 +788,6 @@ objfile_relocate1 (struct objfile *objfile,\n \n   /* OK, get all the symtabs.  */\n   {\n-    struct compunit_symtab *cust;\n     struct symtab *s;\n \n     ALL_OBJFILE_FILETABS (objfile, cust, s)\n@@ -806,41 +805,42 @@ objfile_relocate1 (struct objfile *objfile,\n \t}\n     }\n \n-    ALL_OBJFILE_COMPUNITS (objfile, cust)\n-    {\n-      const struct blockvector *bv = COMPUNIT_BLOCKVECTOR (cust);\n-      int block_line_section = COMPUNIT_BLOCK_LINE_SECTION (cust);\n-\n-      if (BLOCKVECTOR_MAP (bv))\n-\taddrmap_relocate (BLOCKVECTOR_MAP (bv),\n-\t\t\t  ANOFFSET (delta, block_line_section));\n-\n-      for (int i = 0; i < BLOCKVECTOR_NBLOCKS (bv); ++i)\n-\t{\n-\t  struct block *b;\n-\t  struct symbol *sym;\n-\t  struct dict_iterator iter;\n-\n-\t  b = BLOCKVECTOR_BLOCK (bv, i);\n-\t  BLOCK_START (b) += ANOFFSET (delta, block_line_section);\n-\t  BLOCK_END (b) += ANOFFSET (delta, block_line_section);\n-\n-\t  if (BLOCK_RANGES (b) != nullptr)\n-\t    for (int j = 0; j < BLOCK_NRANGES (b); j++)\n+    for (compunit_symtab *cust : objfile_compunits (objfile))\n+      {\n+\tconst struct blockvector *bv = COMPUNIT_BLOCKVECTOR (cust);\n+\tint block_line_section = COMPUNIT_BLOCK_LINE_SECTION (cust);\n+\n+\tif (BLOCKVECTOR_MAP (bv))\n+\t  addrmap_relocate (BLOCKVECTOR_MAP (bv),\n+\t\t\t    ANOFFSET (delta, block_line_section));\n+\n+\tfor (int i = 0; i < BLOCKVECTOR_NBLOCKS (bv); ++i)\n+\t  {\n+\t    struct block *b;\n+\t    struct symbol *sym;\n+\t    struct dict_iterator iter;\n+\n+\t    b = BLOCKVECTOR_BLOCK (bv, i);\n+\t    BLOCK_START (b) += ANOFFSET (delta, block_line_section);\n+\t    BLOCK_END (b) += ANOFFSET (delta, block_line_section);\n+\n+\t    if (BLOCK_RANGES (b) != nullptr)\n+\t      for (int j = 0; j < BLOCK_NRANGES (b); j++)\n+\t\t{\n+\t\t  BLOCK_RANGE_START (b, j)\n+\t\t    += ANOFFSET (delta, block_line_section);\n+\t\t  BLOCK_RANGE_END (b, j) += ANOFFSET (delta,\n+\t\t\t\t\t\t      block_line_section);\n+\t\t}\n+\n+\t    /* We only want to iterate over the local symbols, not any\n+\t       symbols in included symtabs.  */\n+\t    ALL_DICT_SYMBOLS (BLOCK_DICT (b), iter, sym)\n \t      {\n-\t\tBLOCK_RANGE_START (b, j)\n-\t\t  += ANOFFSET (delta, block_line_section);\n-\t\tBLOCK_RANGE_END (b, j) += ANOFFSET (delta, block_line_section);\n+\t\trelocate_one_symbol (sym, objfile, delta);\n \t      }\n-\n-\t  /* We only want to iterate over the local symbols, not any\n-\t     symbols in included symtabs.  */\n-\t  ALL_DICT_SYMBOLS (BLOCK_DICT (b), iter, sym)\n-\t    {\n-\t      relocate_one_symbol (sym, objfile, delta);\n-\t    }\n-\t}\n-    }\n+\t  }\n+      }\n   }\n \n   /* This stores relocated addresses and so must be cleared.  This"
    },
    {
      "sha": "ba6be2dcdd5cd838da061ce3018081bc30e219f3",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -615,13 +615,21 @@ class all_objfiles_safe\n /* Traverse all symtabs in one objfile.  */\n \n #define ALL_OBJFILE_FILETABS(objfile, cu, s) \\\n-  ALL_OBJFILE_COMPUNITS (objfile, cu) \\\n+  for (compunit_symtab *cu : objfile_compunits (objfile)) \\\n     ALL_COMPUNIT_FILETABS (cu, s)\n \n-/* Traverse all compunits in one objfile.  */\n+/* A range adapter that makes it possible to iterate over all\n+   compunits in one objfile.  */\n+\n+class objfile_compunits : public next_adapter<struct compunit_symtab>\n+{\n+public:\n \n-#define ALL_OBJFILE_COMPUNITS(objfile, cu) \\\n-  for ((cu) = (objfile) -> compunit_symtabs; (cu) != NULL; (cu) = (cu) -> next)\n+  explicit objfile_compunits (struct objfile *objfile)\n+    : next_adapter<struct compunit_symtab> (objfile->compunit_symtabs)\n+  {\n+  }\n+};\n \n /* A range adapter that makes it possible to iterate over all\n    minimal symbols of an objfile.  */\n@@ -714,7 +722,7 @@ class objfile_msymbols\n \n #define ALL_COMPUNITS(objfile, cu)\t\\\n   ALL_OBJFILES (objfile)\t\t\\\n-    ALL_OBJFILE_COMPUNITS (objfile, cu)\n+    for (compunit_symtab *cu : objfile_compunits (objfile))\n \n #define ALL_OBJFILE_OSECTIONS(objfile, osect)\t\\\n   for (osect = objfile->sections; osect < objfile->sections_end; osect++) \\"
    },
    {
      "sha": "3fc4ad5d2b622a006c95bd8d5247dac2545acd2a",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -239,7 +239,6 @@ void\n select_source_symtab (struct symtab *s)\n {\n   struct objfile *ofp;\n-  struct compunit_symtab *cu;\n \n   if (s)\n     {\n@@ -350,7 +349,6 @@ show_directories_command (struct ui_file *file, int from_tty,\n void\n forget_cached_source_info_for_objfile (struct objfile *objfile)\n {\n-  struct compunit_symtab *cu;\n   struct symtab *s;\n \n   ALL_OBJFILE_FILETABS (objfile, cu, s)"
    },
    {
      "sha": "afe9d0457366293da7c82a42967827ee95e51b72",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 6,
      "deletions": 13,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -82,7 +82,6 @@ void\n print_objfile_statistics (void)\n {\n   struct program_space *pspace;\n-  struct compunit_symtab *cu;\n   struct symtab *s;\n   int i, linetables, blockvectors;\n \n@@ -108,15 +107,15 @@ print_objfile_statistics (void)\n \t\t\t OBJSTAT (objfile, n_types));\n       if (objfile->sf)\n \tobjfile->sf->qf->print_stats (objfile);\n-      i = linetables = blockvectors = 0;\n+      i = linetables = 0;\n       ALL_OBJFILE_FILETABS (objfile, cu, s)\n \t{\n \t  i++;\n \t  if (SYMTAB_LINETABLE (s) != NULL)\n \t    linetables++;\n \t}\n-      ALL_OBJFILE_COMPUNITS (objfile, cu)\n-\tblockvectors++;\n+      blockvectors = std::distance (objfile_compunits (objfile).begin (),\n+\t\t\t\t    objfile_compunits (objfile).end ());\n       printf_filtered (_(\"  Number of symbol tables: %d\\n\"), i);\n       printf_filtered (_(\"  Number of symbol tables with line tables: %d\\n\"),\n \t\t       linetables);\n@@ -145,7 +144,6 @@ print_objfile_statistics (void)\n static void\n dump_objfile (struct objfile *objfile)\n {\n-  struct compunit_symtab *cust;\n   struct symtab *symtab;\n \n   printf_filtered (\"\\nObject file %s:  \", objfile_name (objfile));\n@@ -469,7 +467,6 @@ maintenance_print_symbols (const char *args, int from_tty)\n     }\n   else\n     {\n-      struct compunit_symtab *cu;\n       struct symtab *s;\n       int found = 0;\n \n@@ -775,14 +772,13 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n   ALL_PSPACES (pspace)\n     for (objfile *objfile : all_objfiles (pspace))\n       {\n-\tstruct compunit_symtab *cust;\n \tstruct symtab *symtab;\n \n \t/* We don't want to print anything for this objfile until we\n \t   actually find a symtab whose name matches.  */\n \tint printed_objfile_start = 0;\n \n-\tALL_OBJFILE_COMPUNITS (objfile, cust)\n+\tfor (compunit_symtab *cust : objfile_compunits (objfile))\n \t  {\n \t    int printed_compunit_symtab_start = 0;\n \n@@ -863,13 +859,11 @@ maintenance_check_symtabs (const char *ignore, int from_tty)\n   ALL_PSPACES (pspace)\n     for (objfile *objfile : all_objfiles (pspace))\n       {\n-\tstruct compunit_symtab *cust;\n-\n \t/* We don't want to print anything for this objfile until we\n \t   actually find something worth printing.  */\n \tint printed_objfile_start = 0;\n \n-\tALL_OBJFILE_COMPUNITS (objfile, cust)\n+\tfor (compunit_symtab *cust : objfile_compunits (objfile))\n \t  {\n \t    int found_something = 0;\n \t    struct symtab *symtab = compunit_primary_filetab (cust);\n@@ -1032,10 +1026,9 @@ maintenance_info_line_tables (const char *regexp, int from_tty)\n   ALL_PSPACES (pspace)\n     for (objfile *objfile : all_objfiles (pspace))\n       {\n-\tstruct compunit_symtab *cust;\n \tstruct symtab *symtab;\n \n-\tALL_OBJFILE_COMPUNITS (objfile, cust)\n+\tfor (compunit_symtab *cust : objfile_compunits (objfile))\n \t  {\n \t    ALL_COMPUNIT_FILETABS (cust, symtab)\n \t      {"
    },
    {
      "sha": "0cd51192f814b4a1d13aa910dda4afb43adf3bda",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 12,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/592553c46959c98bf5981ad245d0fbb97f373d2a/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=592553c46959c98bf5981ad245d0fbb97f373d2a",
      "patch": "@@ -2167,7 +2167,6 @@ struct objfile *\n lookup_objfile_from_block (const struct block *block)\n {\n   struct objfile *obj;\n-  struct compunit_symtab *cust;\n \n   if (block == NULL)\n     return NULL;\n@@ -2255,8 +2254,6 @@ static struct block_symbol\n lookup_symbol_in_objfile_symtabs (struct objfile *objfile, int block_index,\n \t\t\t\t  const char *name, const domain_enum domain)\n {\n-  struct compunit_symtab *cust;\n-\n   gdb_assert (block_index == GLOBAL_BLOCK || block_index == STATIC_BLOCK);\n \n   if (symbol_lookup_debug > 1)\n@@ -2269,7 +2266,7 @@ lookup_symbol_in_objfile_symtabs (struct objfile *objfile, int block_index,\n \t\t\t  name, domain_name (domain));\n     }\n \n-  ALL_OBJFILE_COMPUNITS (objfile, cust)\n+  for (compunit_symtab *cust : objfile_compunits (objfile))\n     {\n       const struct blockvector *bv;\n       const struct block *block;\n@@ -2763,12 +2760,11 @@ static struct type *\n basic_lookup_transparent_type_1 (struct objfile *objfile, int block_index,\n \t\t\t\t const char *name)\n {\n-  const struct compunit_symtab *cust;\n   const struct blockvector *bv;\n   const struct block *block;\n   const struct symbol *sym;\n \n-  ALL_OBJFILE_COMPUNITS (objfile, cust)\n+  for (compunit_symtab *cust : objfile_compunits (objfile))\n     {\n       bv = COMPUNIT_BLOCKVECTOR (cust);\n       block = BLOCKVECTOR_BLOCK (bv, block_index);\n@@ -2874,7 +2870,6 @@ iterate_over_symbols (const struct block *block,\n struct compunit_symtab *\n find_pc_sect_compunit_symtab (CORE_ADDR pc, struct obj_section *section)\n {\n-  struct compunit_symtab *cust;\n   struct compunit_symtab *best_cust = NULL;\n   struct objfile *obj_file;\n   CORE_ADDR distance = 0;\n@@ -3349,7 +3344,6 @@ find_line_symtab (struct symtab *symtab, int line,\n          BEST_INDEX and BEST_LINETABLE identify the item for it.  */\n       int best;\n \n-      struct compunit_symtab *cu;\n       struct symtab *s;\n \n       if (best_index >= 0)\n@@ -4185,7 +4179,6 @@ output_partial_symbol_filename (const char *filename, const char *fullname,\n static void\n info_sources_command (const char *ignore, int from_tty)\n {\n-  struct compunit_symtab *cu;\n   struct symtab *s;\n   struct objfile *objfile;\n   struct output_source_filename_data data;\n@@ -4338,7 +4331,6 @@ search_symbols (const char *regexp, enum search_domain kind,\n \t\tconst char *t_regexp,\n \t\tint nfiles, const char *files[])\n {\n-  struct compunit_symtab *cust;\n   const struct blockvector *bv;\n   struct block *b;\n   int i = 0;\n@@ -5202,7 +5194,6 @@ default_collect_symbol_completion_matches_break_on\n      won't be that many.  */\n \n   struct symbol *sym;\n-  struct compunit_symtab *cust;\n   const struct block *b;\n   const struct block *surrounding_static_block, *surrounding_global_block;\n   struct block_iterator iter;\n@@ -5588,7 +5579,6 @@ maybe_add_partial_symtab_filename (const char *filename, const char *fullname,\n completion_list\n make_source_files_completion_list (const char *text, const char *word)\n {\n-  struct compunit_symtab *cu;\n   struct symtab *s;\n   struct objfile *objfile;\n   size_t text_len = strlen (text);"
    }
  ]
}