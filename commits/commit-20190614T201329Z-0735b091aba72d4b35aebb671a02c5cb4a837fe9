{
  "sha": "0735b091aba72d4b35aebb671a02c5cb4a837fe9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDczNWIwOTFhYmE3MmQ0YjM1YWViYjY3MWEwMmM1Y2I0YTgzN2ZlOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-30T17:17:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-14T20:13:29Z"
    },
    "message": "Do not emit style escape sequences to log file\n\nPR gdb/24502 requests that the \"set logging\" log file not contain\nstyle escape sequences emitted by gdb.\n\nThis seemed like a reasonable request to me, so this patch implements\nfiltering for the log file.\n\nThis also updates a comment in ui-style.h that I noticed while writing\nthe patch.\n\nTested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-06-14  Tom Tromey  <tromey@adacore.com>\n\n\tPR gdb/24502:\n\t* ui-style.h (skip_ansi_escape): Update comment.\n\t* ui-file.h (class no_terminal_escape_file): New class.\n\t* ui-file.c (no_terminal_escape_file::write)\n\t(no_terminal_escape_file::puts): New methods.\n\t* cli/cli-logging.c (handle_redirections): Use\n\tno_terminal_escape_file.\n\ngdb/testsuite/ChangeLog\n2019-06-14  Tom Tromey  <tromey@adacore.com>\n\n\tPR gdb/24502:\n\t* gdb.base/style-logging.exp: New file.",
    "tree": {
      "sha": "c261406309225cb02197ba53b895a8030f0fc442",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c261406309225cb02197ba53b895a8030f0fc442"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0735b091aba72d4b35aebb671a02c5cb4a837fe9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0735b091aba72d4b35aebb671a02c5cb4a837fe9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0735b091aba72d4b35aebb671a02c5cb4a837fe9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0735b091aba72d4b35aebb671a02c5cb4a837fe9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "52ce35e2894e55cea94011dda6443be51e154f37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52ce35e2894e55cea94011dda6443be51e154f37",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/52ce35e2894e55cea94011dda6443be51e154f37"
    }
  ],
  "stats": {
    "total": 139,
    "additions": 136,
    "deletions": 3
  },
  "files": [
    {
      "sha": "702aa7fea4a40a70575cef9602ce92e105a605e6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0735b091aba72d4b35aebb671a02c5cb4a837fe9",
      "patch": "@@ -1,3 +1,13 @@\n+2019-06-14  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR gdb/24502:\n+\t* ui-style.h (skip_ansi_escape): Update comment.\n+\t* ui-file.h (class no_terminal_escape_file): New class.\n+\t* ui-file.c (no_terminal_escape_file::write)\n+\t(no_terminal_escape_file::puts): New methods.\n+\t* cli/cli-logging.c (handle_redirections): Use\n+\tno_terminal_escape_file.\n+\n 2019-06-14  Tom Tromey  <tromey@adacore.com>\n \n \t* NEWS: Move convenience variable news above Python news."
    },
    {
      "sha": "a8b9955c570783cf95b91afb9184f45743cf862b",
      "filename": "gdb/cli/cli-logging.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/cli/cli-logging.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/cli/cli-logging.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-logging.c?ref=0735b091aba72d4b35aebb671a02c5cb4a837fe9",
      "patch": "@@ -100,7 +100,7 @@ handle_redirections (int from_tty)\n       return;\n     }\n \n-  stdio_file_up log (new stdio_file ());\n+  stdio_file_up log (new no_terminal_escape_file ());\n   if (!log->open (logging_filename, logging_overwrite ? \"w\" : \"a\"))\n     perror_with_name (_(\"set logging\"));\n "
    },
    {
      "sha": "0eb3db75fcbd6b5fec360dbb9ad310ce67154b9e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=0735b091aba72d4b35aebb671a02c5cb4a837fe9",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-14  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR gdb/24502:\n+\t* gdb.base/style-logging.exp: New file.\n+\n 2019-06-14  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.base/symfile-warn.exp: New file."
    },
    {
      "sha": "1d7c3052c38f7d5c9460889174e1043d838ce5a6",
      "filename": "gdb/testsuite/gdb.base/style-logging.exp",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/testsuite/gdb.base/style-logging.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/testsuite/gdb.base/style-logging.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style-logging.exp?ref=0735b091aba72d4b35aebb671a02c5cb4a837fe9",
      "patch": "@@ -0,0 +1,70 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that logging does not style.\n+\n+# Do not run if gdb debug is enabled as it will interfere with log redirect.\n+if {[gdb_debug_enabled]} {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n+if {[is_remote host]} {\n+    untested \"does not work on remote host\"\n+    return 0\n+}\n+\n+standard_testfile style.c\n+\n+save_vars { env(TERM) } {\n+    # We need an ANSI-capable terminal to get the output.\n+    setenv TERM ansi\n+\n+    if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {\n+\treturn -1\n+    }\n+\n+    if {![runto_main]} {\n+\tfail \"style tests failed\"\n+\treturn\n+    }\n+\n+    gdb_test_no_output \"set style enabled on\"\n+\n+    set log_name [standard_output_file log.txt]\n+    gdb_test_no_output \"set logging file $log_name\"\n+    gdb_test_no_output \"set logging overwrite on\"\n+    gdb_test \"set logging on\" \"Copying output to .*\"\n+\n+    set main_expr [style main function]\n+    set base_file_expr [style \".*style\\\\.c\" file]\n+    set file_expr \"$base_file_expr:\\[0-9\\]\"\n+    set arg_expr [style \"arg.\" variable]\n+    gdb_test \"frame\" \\\n+\t\"$main_expr.*$arg_expr.*$arg_expr.*$file_expr.*\"\n+\n+    gdb_test \"set logging off\" \"Done logging to .*\"\n+\n+    set fd [open $log_name]\n+    set data [read -nonewline $fd]\n+    close $fd\n+\n+    set testname \"log is escape-free\"\n+    if {[regexp \"\\033\" $data]} {\n+\tfail $testname\n+    } else {\n+\tpass $testname\n+    }\n+}"
    },
    {
      "sha": "05d411aa3929f8fe8bca7582440cf7e5a2797203",
      "filename": "gdb/ui-file.c",
      "status": "modified",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ui-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ui-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.c?ref=0735b091aba72d4b35aebb671a02c5cb4a837fe9",
      "patch": "@@ -396,3 +396,35 @@ tee_file::can_emit_style_escape ()\n \t  && m_one->term_out ()\n \t  && term_cli_styling ());\n }\n+\n+/* See ui-file.h.  */\n+\n+void\n+no_terminal_escape_file::write (const char *buf, long length_buf)\n+{\n+  std::string copy (buf, length_buf);\n+  this->puts (copy.c_str ());\n+}\n+\n+/* See ui-file.h.  */\n+\n+void\n+no_terminal_escape_file::puts (const char *buf)\n+{\n+  while (*buf != '\\0')\n+    {\n+      const char *esc = strchr (buf, '\\033');\n+      if (esc == nullptr)\n+\tbreak;\n+\n+      int n_read = 0;\n+      if (!skip_ansi_escape (esc, &n_read))\n+\t++esc;\n+\n+      this->stdio_file::write (buf, esc - buf);\n+      buf = esc + n_read;\n+    }\n+\n+  if (*buf != '\\0')\n+    this->stdio_file::write (buf, strlen (buf));\n+}"
    },
    {
      "sha": "3f6f38a68fba05f9c4bb91eec075a622f3ba4792",
      "filename": "gdb/ui-file.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ui-file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ui-file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.h?ref=0735b091aba72d4b35aebb671a02c5cb4a837fe9",
      "patch": "@@ -287,4 +287,20 @@ class tee_file : public ui_file\n   ui_file_up m_two;\n };\n \n+/* A ui_file implementation that filters out terminal escape\n+   sequences.  */\n+\n+class no_terminal_escape_file : public stdio_file\n+{\n+public:\n+  no_terminal_escape_file ()\n+  {\n+  }\n+\n+  /* Like the stdio_file methods, but these filter out terminal escape\n+     sequences.  */\n+  void write (const char *buf, long length_buf) override;\n+  void puts (const char *linebuffer) override;\n+};\n+\n #endif"
    },
    {
      "sha": "24b4b59ed9f55477a5b151c9a88552efe787e200",
      "filename": "gdb/ui-style.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ui-style.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0735b091aba72d4b35aebb671a02c5cb4a837fe9/gdb/ui-style.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-style.h?ref=0735b091aba72d4b35aebb671a02c5cb4a837fe9",
      "patch": "@@ -233,8 +233,8 @@ struct ui_file_style\n \n /* Skip an ANSI escape sequence in BUF.  BUF must begin with an ESC\n    character.  Return true if an escape sequence was successfully\n-   skipped; false otherwise.  In either case, N_READ is updated to\n-   reflect the number of chars read from BUF.  */\n+   skipped; false otherwise.  If an escape sequence was skipped,\n+   N_READ is updated to reflect the number of chars read from BUF.  */\n \n extern bool skip_ansi_escape (const char *buf, int *n_read);\n "
    }
  ]
}