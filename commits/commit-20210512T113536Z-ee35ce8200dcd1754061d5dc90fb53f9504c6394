{
  "sha": "ee35ce8200dcd1754061d5dc90fb53f9504c6394",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWUzNWNlODIwMGRjZDE3NTQwNjFkNWRjOTBmYjUzZjk1MDRjNjM5NA==",
  "commit": {
    "author": {
      "name": "George Barrett",
      "email": "bob@bob131.so",
      "date": "2021-04-28T17:32:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-12T11:35:36Z"
    },
    "message": "Guile: add value-const-value\n\nThe Guile API doesn't currently have an equivalent to the Python API's\ngdb.Value.const_value(). This commit adds a procedure with equivalent\nsemantics to the Guile API.\n\ngdb/ChangeLog:\n\n\t* NEWS (Guile API): Note the addition of the new procedure.\n\t* guile/scm-value.c (gdbscm_value_const_value): Add\n\timplementation of value-const-value procedure.\n\t(value_functions): Add value-const-value procedure.\n\ngdb/doc/ChangeLog:\n\n\t* guile.texi (Values From Inferior In Guile): Add documentation\n\tfor value-const-value.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.guile/scm-value.exp (test_value_in_inferior): Add test for\n\tvalue-const-value.",
    "tree": {
      "sha": "436b3d555f9ce56c920fee03627b5badbd7d5a84",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/436b3d555f9ce56c920fee03627b5badbd7d5a84"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ee35ce8200dcd1754061d5dc90fb53f9504c6394",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee35ce8200dcd1754061d5dc90fb53f9504c6394",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ee35ce8200dcd1754061d5dc90fb53f9504c6394",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee35ce8200dcd1754061d5dc90fb53f9504c6394/comments",
  "author": {
    "login": "Bob131",
    "id": 4337852,
    "node_id": "MDQ6VXNlcjQzMzc4NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4337852?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Bob131",
    "html_url": "https://github.com/Bob131",
    "followers_url": "https://api.github.com/users/Bob131/followers",
    "following_url": "https://api.github.com/users/Bob131/following{/other_user}",
    "gists_url": "https://api.github.com/users/Bob131/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Bob131/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Bob131/subscriptions",
    "organizations_url": "https://api.github.com/users/Bob131/orgs",
    "repos_url": "https://api.github.com/users/Bob131/repos",
    "events_url": "https://api.github.com/users/Bob131/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Bob131/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9d4fc61d41a0aef2d199e2b18d238603a8e4be98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d4fc61d41a0aef2d199e2b18d238603a8e4be98",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9d4fc61d41a0aef2d199e2b18d238603a8e4be98"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 51,
    "deletions": 2
  },
  "files": [
    {
      "sha": "8ef5eb6c833b73e6618891e8a4acb2127a7c56fd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ee35ce8200dcd1754061d5dc90fb53f9504c6394",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-12  George Barrett  <bob@bob131.so>\n+\n+\t* NEWS (Guile API): Note the addition of the new procedure.\n+\t* guile/scm-value.c (gdbscm_value_const_value): Add\n+\timplementation of value-const-value procedure.\n+\t(value_functions): Add value-const-value procedure.\n+\n 2021-05-12  George Barrett  <bob@bob131.so>\n \n \t* NEWS (Guile API): Note the addition of new procedures."
    },
    {
      "sha": "6e147cb031826336da6451f614833f39b4e68613",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=ee35ce8200dcd1754061d5dc90fb53f9504c6394",
      "patch": "@@ -207,8 +207,9 @@ QMemTags\n      value-referenced-value procedure now handles rvalue reference\n      values.\n \n-  ** New procedures for obtaining reference values:\n-     value-reference-value and value-rvalue-reference-value.\n+  ** New procedures for obtaining value variants:\n+     value-reference-value, value-rvalue-reference-value and\n+     value-const-value.\n \n *** Changes in GDB 10\n "
    },
    {
      "sha": "290ad485521a09142e46e8a8c83a8d5b830efe2c",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=ee35ce8200dcd1754061d5dc90fb53f9504c6394",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-12  George Barrett  <bob@bob131.so>\n+\n+\t* guile.texi (Values From Inferior In Guile): Add documentation\n+\tfor value-const-value.\n+\n 2021-05-12  George Barrett  <bob@bob131.so>\n \n \t* guile.texi (Values From Inferior In Guile): Add documentation"
    },
    {
      "sha": "c7e43c8d63a9f80b5d467c7de36474faf4237d7c",
      "filename": "gdb/doc/guile.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/doc/guile.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/doc/guile.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/guile.texi?ref=ee35ce8200dcd1754061d5dc90fb53f9504c6394",
      "patch": "@@ -811,6 +811,11 @@ Return a new @code{<gdb:value>} object which is an rvalue reference to\n the value encapsulated by @code{<gdb:value>} object @var{value}.\n @end deffn\n \n+@deffn {Scheme Procedure} value-const-value value\n+Return a new @code{<gdb:value>} object which is a @samp{const} version\n+of @code{<gdb:value>} object @var{value}.\n+@end deffn\n+\n @deffn {Scheme Procedure} value-field value field-name\n Return field @var{field-name} from @code{<gdb:value>} object @var{value}.\n @end deffn"
    },
    {
      "sha": "24bb55479570fa0ed86369f1c53ad8d467fcbe72",
      "filename": "gdb/guile/scm-value.c",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/guile/scm-value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/guile/scm-value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-value.c?ref=ee35ce8200dcd1754061d5dc90fb53f9504c6394",
      "patch": "@@ -520,6 +520,24 @@ gdbscm_value_rvalue_reference_value (SCM self)\n   return gdbscm_reference_value (self, TYPE_CODE_RVALUE_REF);\n }\n \n+/* (value-const-value <gdb:value>) -> <gdb:value> */\n+\n+static SCM\n+gdbscm_value_const_value (SCM self)\n+{\n+  value_smob *v_smob\n+    = vlscm_get_value_smob_arg_unsafe (self, SCM_ARG1, FUNC_NAME);\n+  struct value *value = v_smob->value;\n+\n+  return gdbscm_wrap ([=]\n+    {\n+      scoped_value_mark free_values;\n+\n+      struct value *res_val = make_cv_value (1, 0, value);\n+      return vlscm_scm_from_value (res_val);\n+    });\n+}\n+\n /* (value-type <gdb:value>) -> <gdb:type> */\n \n static SCM\n@@ -1394,6 +1412,11 @@ Return a <gdb:value> object which is a reference to the given value.\" },\n     \"\\\n Return a <gdb:value> object which is an rvalue reference to the given value.\" },\n \n+  { \"value-const-value\", 1, 0, 0,\n+    as_a_scm_t_subr (gdbscm_value_const_value),\n+    \"\\\n+Return a <gdb:value> object which is a 'const' version of the given value.\" },\n+\n   { \"value-field\", 2, 0, 0, as_a_scm_t_subr (gdbscm_value_field),\n     \"\\\n Return the specified field of the value.\\n\\"
    },
    {
      "sha": "e0f64965d9421ce0b4d0fa35b5ca4d79f977158e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ee35ce8200dcd1754061d5dc90fb53f9504c6394",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-12  George Barrett  <bob@bob131.so>\n+\n+\t* gdb.guile/scm-value.exp (test_value_in_inferior): Add test for\n+\tvalue-const-value.\n+\n 2021-05-12  George Barrett  <bob@bob131.so>\n \n \t* gdb.guile/scm-value.exp (test_value_in_inferior): Add test for"
    },
    {
      "sha": "982b9bf17b95da1c4a0e6a8ec621b04a2aa95286",
      "filename": "gdb/testsuite/gdb.guile/scm-value.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/testsuite/gdb.guile/scm-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee35ce8200dcd1754061d5dc90fb53f9504c6394/gdb/testsuite/gdb.guile/scm-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-value.exp?ref=ee35ce8200dcd1754061d5dc90fb53f9504c6394",
      "patch": "@@ -183,6 +183,9 @@ proc test_value_in_inferior {} {\n \t\"test value-rvalue-reference-value\"\n     gdb_test \"gu (equal? argv (value-referenced-value argv-rref))\" \"#t\"\n     gdb_test \"gu (eqv? (type-code (value-type argv-rref)) TYPE_CODE_RVALUE_REF)\" \"#t\"\n+\n+    gdb_test \"gu (equal? (value-type (value-const-value argv)) (type-const (value-type argv)))\" \\\n+\t\"#t\"\n }\n \n proc test_strings {} {"
    }
  ]
}