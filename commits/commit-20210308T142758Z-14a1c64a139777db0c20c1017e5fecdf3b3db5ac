{
  "sha": "14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTRhMWM2NGExMzk3NzdkYjBjMjBjMTAxN2U1ZmVjZGYzYjNkYjVhYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:58Z"
    },
    "message": "Split out eval_op_string\n\nThis splits OP_STRING into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_string): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "d03c364f02d11e6737c7aab7f921b4600d91bd97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d03c364f02d11e6737c7aab7f921b4600d91bd97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14a1c64a139777db0c20c1017e5fecdf3b3db5ac/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ffff730bf6a939490b5e93a323ba2e4026d27818",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ffff730bf6a939490b5e93a323ba2e4026d27818",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ffff730bf6a939490b5e93a323ba2e4026d27818"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 20,
    "deletions": 4
  },
  "files": [
    {
      "sha": "d2ee9d47956e30df18bb9c623658c855dc59a2f7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14a1c64a139777db0c20c1017e5fecdf3b3db5ac/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14a1c64a139777db0c20c1017e5fecdf3b3db5ac/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_string): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_register): New function."
    },
    {
      "sha": "1fe254104c7a61a95a2f438bbff01ddb31b652c0",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 15,
      "deletions": 4,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14a1c64a139777db0c20c1017e5fecdf3b3db5ac/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14a1c64a139777db0c20c1017e5fecdf3b3db5ac/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
      "patch": "@@ -1281,6 +1281,19 @@ eval_op_register (struct type *expect_type, struct expression *exp,\n     return val;\n }\n \n+/* Helper function that implements the body of OP_STRING.  */\n+\n+static struct value *\n+eval_op_string (struct type *expect_type, struct expression *exp,\n+\t\tenum noside noside, int len, const char *string)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  struct type *type = language_string_char_type (exp->language_defn,\n+\t\t\t\t\t\t exp->gdbarch);\n+  return value_string (string, len, type);\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -1395,10 +1408,8 @@ evaluate_subexp_standard (struct type *expect_type,\n     case OP_STRING:\n       tem = longest_to_int (exp->elts[pc + 1].longconst);\n       (*pos) += 3 + BYTES_TO_EXP_ELEM (tem + 1);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      type = language_string_char_type (exp->language_defn, exp->gdbarch);\n-      return value_string (&exp->elts[pc + 2].string, tem, type);\n+      return eval_op_string (expect_type, exp, noside, tem,\n+\t\t\t     &exp->elts[pc + 2].string);\n \n     case OP_OBJC_NSSTRING:\t\t/* Objective C Foundation Class\n \t\t\t\t\t   NSString constant.  */"
    }
  ]
}