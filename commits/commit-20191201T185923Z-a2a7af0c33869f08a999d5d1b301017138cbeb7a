{
  "sha": "a2a7af0c33869f08a999d5d1b301017138cbeb7a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTJhN2FmMGMzMzg2OWYwOGE5OTlkNWQxYjMwMTAxNzEzOGNiZWI3YQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-09T21:13:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-01T18:59:23Z"
    },
    "message": "Add TUI border colors\n\nThis adds the ability to change the color of the TUI borders, both\nordinary and active.  Unlike other styling options, this doesn't allow\nsetting the intensity, because that is already done by the TUI in a\ndifferent way.\n\ngdb/ChangeLog\n2019-12-01  Tom Tromey  <tom@tromey.com>\n\n\t* NEWS: Document new settings.\n\t* tui/tui-wingeneral.c (box_win): Apply appropriate border style.\n\t* tui/tui-win.c (_initialize_tui_win): Add border style\n\tobservers.\n\t* tui/tui-io.h (tui_apply_style): Declare.\n\t* tui/tui-io.c (tui_apply_style): Rename from apply_style.  No\n\tlonger static.\n\t(apply_ansi_escape, tui_set_reverse_mode): Update.\n\t* cli/cli-style.h (class cli_style_option) <add_setshow_commands>:\n\tAdd \"skip_intensity\" parameter.\n\t<changed>: New member.\n\t<do_set_value>: Declare.\n\t(tui_border_style, tui_active_border_style): Declare.\n\t* cli/cli-style.c (tui_border_style, tui_active_border_style): New\n\tglobals.\n\t(cli_style_option): Initialize \"changed\".\n\t(cli_style_option::do_set_value): New function.\n\t(cli_style_option::add_setshow_commands): Add \"skip_intensity\"\n\tparameter.  Update.\n\t(STYLE_ADD_SETSHOW_COMMANDS): Add \"SKIP\" parameter.\n\t(_initialize_cli_style): Update.  Create TUI border style\n\tcommands.\n\ngdb/doc/ChangeLog\n2019-12-01  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.texinfo (TUI Configuration): Mention TUI border styles.\n\t(Output Styling): Document new settings.\n\nChange-Id: Id13e2af0af2a0bde61282752f2c379db3220c9fc",
    "tree": {
      "sha": "abf38fc4ea8f60ce1ac2d72fc368cb2801322721",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/abf38fc4ea8f60ce1ac2d72fc368cb2801322721"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a2a7af0c33869f08a999d5d1b301017138cbeb7a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2a7af0c33869f08a999d5d1b301017138cbeb7a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a2a7af0c33869f08a999d5d1b301017138cbeb7a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2a7af0c33869f08a999d5d1b301017138cbeb7a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d1da6b01608841c846aa75209248e276f49e1587",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1da6b01608841c846aa75209248e276f49e1587",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d1da6b01608841c846aa75209248e276f49e1587"
    }
  ],
  "stats": {
    "total": 173,
    "additions": 146,
    "deletions": 27
  },
  "files": [
    {
      "sha": "86fa84065bbdc3097a89c009f2dd807be65ad998",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -1,3 +1,28 @@\n+2019-12-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* NEWS: Document new settings.\n+\t* tui/tui-wingeneral.c (box_win): Apply appropriate border style.\n+\t* tui/tui-win.c (_initialize_tui_win): Add border style\n+\tobservers.\n+\t* tui/tui-io.h (tui_apply_style): Declare.\n+\t* tui/tui-io.c (tui_apply_style): Rename from apply_style.  No\n+\tlonger static.\n+\t(apply_ansi_escape, tui_set_reverse_mode): Update.\n+\t* cli/cli-style.h (class cli_style_option) <add_setshow_commands>:\n+\tAdd \"skip_intensity\" parameter.\n+\t<changed>: New member.\n+\t<do_set_value>: Declare.\n+\t(tui_border_style, tui_active_border_style): Declare.\n+\t* cli/cli-style.c (tui_border_style, tui_active_border_style): New\n+\tglobals.\n+\t(cli_style_option): Initialize \"changed\".\n+\t(cli_style_option::do_set_value): New function.\n+\t(cli_style_option::add_setshow_commands): Add \"skip_intensity\"\n+\tparameter.  Update.\n+\t(STYLE_ADD_SETSHOW_COMMANDS): Add \"SKIP\" parameter.\n+\t(_initialize_cli_style): Update.  Create TUI border style\n+\tcommands.\n+\n 2019-12-01  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (tui_copy_source_line): Add \"ndigits\""
    },
    {
      "sha": "0a04146894b6c56c36799801cb9828922a1c012d",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -169,6 +169,14 @@ maint show worker-threads\n   reasonable.  Currently worker threads are only used when demangling\n   the names of linker symbols.\n \n+set style tui-border foreground COLOR\n+set style tui-border background COLOR\n+  Control the styling of TUI borders.\n+\n+set style tui-active-border foreground COLOR\n+set style tui-active-border background COLOR\n+  Control the styling of the active TUI border.\n+\n maint set test-settings KIND\n maint show test-settings KIND\n   A set of commands used by the testsuite for exercising the settings"
    },
    {
      "sha": "5955d93392501a9693d7b6c4a5dd50f0b35f806d",
      "filename": "gdb/cli/cli-style.c",
      "status": "modified",
      "additions": 59,
      "deletions": 22,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/cli/cli-style.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/cli/cli-style.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-style.c?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -85,13 +85,23 @@ cli_style_option title_style (\"title\", ui_file_style::BOLD);\n \n /* See cli-style.h.  */\n \n+cli_style_option tui_border_style (\"tui-border\", ui_file_style::CYAN);\n+\n+/* See cli-style.h.  */\n+\n+cli_style_option tui_active_border_style (\"tui-active-border\",\n+\t\t\t\t\t  ui_file_style::CYAN);\n+\n+/* See cli-style.h.  */\n+\n cli_style_option metadata_style (\"metadata\", ui_file_style::DIM);\n \n /* See cli-style.h.  */\n \n cli_style_option::cli_style_option (const char *name,\n \t\t\t\t    ui_file_style::basic_color fg)\n-  : m_name (name),\n+  : changed (name),\n+    m_name (name),\n     m_foreground (cli_colors[fg - ui_file_style::NONE]),\n     m_background (cli_colors[0]),\n     m_intensity (cli_intensities[ui_file_style::NORMAL])\n@@ -102,7 +112,8 @@ cli_style_option::cli_style_option (const char *name,\n \n cli_style_option::cli_style_option (const char *name,\n \t\t\t\t    ui_file_style::intensity i)\n-  : m_name (name),\n+  : changed (name),\n+    m_name (name),\n     m_foreground (cli_colors[0]),\n     m_background (cli_colors[0]),\n     m_intensity (cli_intensities[i])\n@@ -143,6 +154,16 @@ cli_style_option::style () const\n   return ui_file_style (fg, bg, intensity);\n }\n \n+/* See cli-style.h.  */\n+\n+void\n+cli_style_option::do_set_value (const char *ignore, int from_tty,\n+\t\t\t\tstruct cmd_list_element *cmd)\n+{\n+  cli_style_option *cso = (cli_style_option *) get_cmd_context (cmd);\n+  cso->changed.notify ();\n+}\n+\n /* Implements the cli_style_option::do_show_* functions.\n    WHAT and VALUE are the property and value to show.\n    The style for which WHAT is shown is retrieved from CMD context.  */\n@@ -198,7 +219,8 @@ cli_style_option::add_setshow_commands (enum command_class theclass,\n \t\t\t\t\t\t\tint from_tty),\n \t\t\t\t\tstruct cmd_list_element **show_list,\n \t\t\t\t\tvoid (*do_show) (const char *args,\n-\t\t\t\t\t\t\t int from_tty))\n+\t\t\t\t\t\t\t int from_tty),\n+\t\t\t\t\tbool skip_intensity)\n {\n   m_set_prefix = std::string (\"set style \") + m_name + \" \";\n   m_show_prefix = std::string (\"show style \") + m_name + \" \";\n@@ -213,25 +235,26 @@ cli_style_option::add_setshow_commands (enum command_class theclass,\n \t\t\t_(\"Set the foreground color for this property.\"),\n \t\t\t_(\"Show the foreground color for this property.\"),\n \t\t\tnullptr,\n-\t\t\tnullptr,\n+\t\t\tdo_set_value,\n \t\t\tdo_show_foreground,\n \t\t\t&m_set_list, &m_show_list, (void *) this);\n   add_setshow_enum_cmd (\"background\", theclass, cli_colors,\n \t\t\t&m_background,\n \t\t\t_(\"Set the background color for this property.\"),\n \t\t\t_(\"Show the background color for this property.\"),\n \t\t\tnullptr,\n-\t\t\tnullptr,\n+\t\t\tdo_set_value,\n \t\t\tdo_show_background,\n \t\t\t&m_set_list, &m_show_list, (void *) this);\n-  add_setshow_enum_cmd (\"intensity\", theclass, cli_intensities,\n-\t\t\t&m_intensity,\n-\t\t\t_(\"Set the display intensity for this property.\"),\n-\t\t\t_(\"Show the display intensity for this property.\"),\n-\t\t\tnullptr,\n-\t\t\tnullptr,\n-\t\t\tdo_show_intensity,\n-\t\t\t&m_set_list, &m_show_list, (void *) this);\n+  if (!skip_intensity)\n+    add_setshow_enum_cmd (\"intensity\", theclass, cli_intensities,\n+\t\t\t  &m_intensity,\n+\t\t\t  _(\"Set the display intensity for this property.\"),\n+\t\t\t  _(\"Show the display intensity for this property.\"),\n+\t\t\t  nullptr,\n+\t\t\t  do_set_value,\n+\t\t\t  do_show_intensity,\n+\t\t\t  &m_set_list, &m_show_list, (void *) this);\n }\n \n static cmd_list_element *style_set_list;\n@@ -323,7 +346,7 @@ it was not linked against GNU Source Highlight.\"\n \t\t\t   ), set_style_enabled, show_style_sources,\n \t\t\t   &style_set_list, &style_show_list);\n \n-#define STYLE_ADD_SETSHOW_COMMANDS(STYLE, PREFIX_DOC)\t  \\\n+#define STYLE_ADD_SETSHOW_COMMANDS(STYLE, PREFIX_DOC, SKIP)\t\t\\\n   STYLE.add_setshow_commands (no_class, PREFIX_DOC,\t\t\\\n \t\t\t      &style_set_list,\t\t\t\t\\\n \t\t\t      [] (const char *args, int from_tty)\t\\\n@@ -341,46 +364,60 @@ it was not linked against GNU Source Highlight.\"\n \t\t\t\t  (STYLE.show_list (),\t\t\t\\\n \t\t\t\t   from_tty,\t\t\t\t\\\n \t\t\t\t   \"\");\t\t\t\t\t\\\n-\t\t\t      })\n+\t\t\t      }, SKIP)\n \n   STYLE_ADD_SETSHOW_COMMANDS (file_name_style,\n \t\t\t      _(\"\\\n Filename display styling.\\n\\\n-Configure filename colors and display intensity.\"));\n+Configure filename colors and display intensity.\"), false);\n \n   STYLE_ADD_SETSHOW_COMMANDS (function_name_style,\n \t\t\t      _(\"\\\n Function name display styling.\\n\\\n-Configure function name colors and display intensity\"));\n+Configure function name colors and display intensity\"), false);\n \n   STYLE_ADD_SETSHOW_COMMANDS (variable_name_style,\n \t\t\t      _(\"\\\n Variable name display styling.\\n\\\n-Configure variable name colors and display intensity\"));\n+Configure variable name colors and display intensity\"), false);\n \n   STYLE_ADD_SETSHOW_COMMANDS (address_style,\n \t\t\t      _(\"\\\n Address display styling.\\n\\\n-Configure address colors and display intensity\"));\n+Configure address colors and display intensity\"), false);\n \n   STYLE_ADD_SETSHOW_COMMANDS (title_style,\n \t\t\t      _(\"\\\n Title display styling.\\n\\\n Configure title colors and display intensity\\n\\\n Some commands (such as \\\"apropos -v REGEXP\\\") use the title style to improve\\n\\\n-readability.\"));\n+readability.\"), false);\n \n   STYLE_ADD_SETSHOW_COMMANDS (highlight_style,\n \t\t\t      _(\"\\\n Highlight display styling.\\n\\\n Configure highlight colors and display intensity\\n\\\n Some commands use the highlight style to draw the attention to a part\\n\\\n-of their output.\"));\n+of their output.\"), false);\n \n   STYLE_ADD_SETSHOW_COMMANDS (metadata_style,\n \t\t\t      _(\"\\\n Metadata display styling.\\n\\\n Configure metadata colors and display intensity\\n\\\n The \\\"metadata\\\" style is used when GDB displays information about\\n\\\n-your data, for example \\\"<unavailable>\\\"\"));\n+your data, for example \\\"<unavailable>\\\"\"), false);\n+\n+  STYLE_ADD_SETSHOW_COMMANDS (tui_border_style,\n+\t\t\t      _(\"\\\n+TUI border display styling.\\n\\\n+Configure TUI border colors\\n\\\n+The \\\"tui-border\\\" style is used when GDB displays the border of a\\n\\\n+TUI window that does not have the focus.\"), true);\n+\n+  STYLE_ADD_SETSHOW_COMMANDS (tui_active_border_style,\n+\t\t\t      _(\"\\\n+TUI active border display styling.\\n\\\n+Configure TUI active border colors\\n\\\n+The \\\"tui-active-border\\\" style is used when GDB displays the border of a\\n\\\n+TUI window that does have the focus.\"), true);\n }"
    },
    {
      "sha": "12140bc73a05bc9f36091b8b9f2ed8e6b3ab2088",
      "filename": "gdb/cli/cli-style.h",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/cli/cli-style.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/cli/cli-style.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-style.h?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -22,6 +22,7 @@\n \n #include \"ui-file.h\"\n #include \"command.h\"\n+#include \"gdbsupport/observable.h\"\n \n /* A single CLI style option.  */\n class cli_style_option\n@@ -47,7 +48,8 @@ class cli_style_option\n \t\t\t     struct cmd_list_element **set_list,\n \t\t\t     void (*do_set) (const char *args, int from_tty),\n \t\t\t     struct cmd_list_element **show_list,\n-\t\t\t     void (*do_show) (const char *args, int from_tty));\n+\t\t\t     void (*do_show) (const char *args, int from_tty),\n+\t\t\t     bool skip_intensity);\n \n   /* Return the 'set style NAME' command list, that can be used\n      to build a lambda DO_SET to call add_setshow_commands.  */\n@@ -56,6 +58,9 @@ class cli_style_option\n   /* Same as SET_LIST but for the show command list.  */\n   struct cmd_list_element *show_list () { return m_show_list; };\n \n+  /* This style can be observed for any changes.  */\n+  gdb::observers::observable<> changed;\n+\n private:\n \n   /* The style name.  */\n@@ -76,6 +81,10 @@ class cli_style_option\n   struct cmd_list_element *m_set_list = nullptr;\n   struct cmd_list_element *m_show_list = nullptr;\n \n+  /* Callback to notify the observable.  */\n+  static void do_set_value (const char *ignore, int from_tty,\n+\t\t\t    struct cmd_list_element *cmd);\n+\n   /* Callback to show the foreground.  */\n   static void do_show_foreground (struct ui_file *file, int from_tty,\n \t\t\t\t  struct cmd_list_element *cmd,\n@@ -111,6 +120,12 @@ extern cli_style_option title_style;\n /* The metadata style.  */\n extern cli_style_option metadata_style;\n \n+/* The border style of a TUI window that does not have the focus.  */\n+extern cli_style_option tui_border_style;\n+\n+/* The border style of a TUI window that does have the focus.  */\n+extern cli_style_option tui_active_border_style;\n+\n /* True if source styling is enabled.  */\n extern bool source_styling;\n "
    },
    {
      "sha": "6b6f28ea56ee76c0a9cced91aebbceaea68876a2",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.texinfo (TUI Configuration): Mention TUI border styles.\n+\t(Output Styling): Document new settings.\n+\n 2019-12-01  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.texinfo (TUI Configuration): Document new setting."
    },
    {
      "sha": "198862a55ec81fddd8644efdd4523e3a8732e37c",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -25449,6 +25449,17 @@ the user attention to some specific parts of their output.  For example,\n the command @command{apropos -v REGEXP} uses the highlight style to\n mark the documentation parts matching @var{regexp}.\n \n+@item tui-border\n+Control the styling of the TUI border.  Note that, unlike other\n+styling options, only the color of the border can be controlled via\n+@code{set style}.  This was done for compatibility reasons, as TUI\n+controls to set the border's intensity predated the addition of\n+general styling to @value{GDBN}.  @xref{TUI Configuration}.\n+\n+@item tui-active-border\n+Control the styling of the active TUI border; that is, the TUI window\n+that has the focus.\n+\n @end table\n \n @node Numbers\n@@ -28027,6 +28038,9 @@ much space as is needed for the line numbers in the current file, and\n only a single space to separate the line numbers from the source.\n @end table\n \n+Note that the colors of the TUI borders can be controlled using the\n+appropriate @code{set style} commands.  @xref{Output Styling}.\n+\n @node Emacs\n @chapter Using @value{GDBN} under @sc{gnu} Emacs\n "
    },
    {
      "sha": "2eef288bdbce8d4f598f1d3397b4c7bb5732ab06",
      "filename": "gdb/tui/tui-io.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-io.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-io.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.c?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -306,8 +306,8 @@ get_color_pair (int fg, int bg)\n \n /* Apply STYLE to W.  */\n \n-static void\n-apply_style (WINDOW *w, ui_file_style style)\n+void\n+tui_apply_style (WINDOW *w, ui_file_style style)\n {\n   /* Reset.  */\n   wattron (w, A_NORMAL);\n@@ -413,7 +413,7 @@ apply_ansi_escape (WINDOW *w, const char *buf)\n       style.set_reverse (true);\n     }\n \n-  apply_style (w, style);\n+  tui_apply_style (w, style);\n   return n_read;\n }\n \n@@ -438,7 +438,7 @@ tui_set_reverse_mode (WINDOW *w, bool reverse)\n       style.set_fg (reverse_save_fg);\n     }\n \n-  apply_style (w, style);\n+  tui_apply_style (w, style);\n }\n \n /* Print LENGTH characters from the buffer pointed to by BUF to the"
    },
    {
      "sha": "01bfe45bbd3b090bf7f9aa88952240128d94293b",
      "filename": "gdb/tui/tui-io.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-io.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-io.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.h?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -51,6 +51,9 @@ extern gdb::unique_xmalloc_ptr<char> tui_expand_tabs (const char *);\n /* Enter/leave reverse video mode.  */\n extern void tui_set_reverse_mode (WINDOW *w, bool reverse);\n \n+/* Apply STYLE to the window.  */\n+extern void tui_apply_style (WINDOW *w, ui_file_style style);\n+\n extern struct ui_out *tui_out;\n extern cli_ui_out *tui_old_uiout;\n "
    },
    {
      "sha": "b6204beb216836ef7b136a83efcf9d48c6a58cfb",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -30,6 +30,7 @@\n #include \"breakpoint.h\"\n #include \"frame.h\"\n #include \"cli/cli-cmds.h\"\n+#include \"cli/cli-style.h\"\n #include \"top.h\"\n #include \"source.h\"\n #include \"event-loop.h\"\n@@ -1517,4 +1518,7 @@ in a compact form.  The compact form puts the source closer to\\n\\\n the line numbers and uses less horizontal space.\"),\n \t\t\t   tui_set_compact_source, tui_show_compact_source,\n \t\t\t   &tui_setlist, &tui_showlist);\n+\n+  tui_border_style.changed.attach (tui_rehighlight_all);\n+  tui_active_border_style.changed.attach (tui_rehighlight_all);\n }"
    },
    {
      "sha": "b92f203b3b2f73e8c7e7320783d08075e23be224",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2a7af0c33869f08a999d5d1b301017138cbeb7a/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=a2a7af0c33869f08a999d5d1b301017138cbeb7a",
      "patch": "@@ -22,9 +22,11 @@\n #include \"defs.h\"\n #include \"tui/tui.h\"\n #include \"tui/tui-data.h\"\n+#include \"tui/tui-io.h\"\n #include \"tui/tui-wingeneral.h\"\n #include \"tui/tui-win.h\"\n #include \"tui/tui-stack.h\"\n+#include \"cli/cli-style.h\"\n \n #include \"gdb_curses.h\"\n \n@@ -51,6 +53,11 @@ box_win (struct tui_win_info *win_info,\n   else\n     attrs = tui_border_attrs;\n \n+  /* tui_apply_style resets the style entirely, so be sure to call it\n+     before applying ATTRS.  */\n+  tui_apply_style (win, (highlight_flag\n+\t\t\t ? tui_active_border_style.style ()\n+\t\t\t : tui_border_style.style ()));\n   wattron (win, attrs);\n #ifdef HAVE_WBORDER\n   wborder (win, tui_border_vline, tui_border_vline,\n@@ -77,6 +84,7 @@ box_win (struct tui_win_info *win_info,\n \t}\n     }\n   wattroff (win, attrs);\n+  tui_apply_style (win, ui_file_style ());\n }\n \n "
    }
  ]
}