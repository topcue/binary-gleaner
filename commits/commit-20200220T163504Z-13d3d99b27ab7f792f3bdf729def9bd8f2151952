{
  "sha": "13d3d99b27ab7f792f3bdf729def9bd8f2151952",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTNkM2Q5OWIyN2FiN2Y3OTJmM2JkZjcyOWRlZjliZDhmMjE1MTk1Mg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:52Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:04Z"
    },
    "message": "gdbserver: turn target op 'thread_alive' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's thread_alive op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.\n\t(mythread_alive): Update the macro.\n\n\tUpdate the derived classes and callers below.\n\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_thread_alive): Turn into ...\n\t(linux_process_target::thread_alive): ... this.\n\t(wait_for_sigstop): Update.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t(lynx_thread_alive): Turn into ...\n\t(lynx_process_target::thread_alive): ... this.\n\t* lynx-low.h (class lynx_process_target): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t(nto_thread_alive): Turn into ...\n\t(nto_process_target::thread_alive): ... this.\n\t* nto-low.h (class nto_process_target): Update.\n\t* win32-low.cc (win32_target_ops): Update.\n\t(win32_thread_alive): Turn into ...\n\t(win32_process_target::thread_alive): ... this.\n\t* win32-low.h (class win32_process_target): Update.",
    "tree": {
      "sha": "e4465334781bd5d7078201df6116fb3949b21241",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e4465334781bd5d7078201df6116fb3949b21241"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/13d3d99b27ab7f792f3bdf729def9bd8f2151952",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13d3d99b27ab7f792f3bdf729def9bd8f2151952",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/13d3d99b27ab7f792f3bdf729def9bd8f2151952",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13d3d99b27ab7f792f3bdf729def9bd8f2151952/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "95a49a3939127a22c2c5e0401d97e00995593bc4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95a49a3939127a22c2c5e0401d97e00995593bc4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/95a49a3939127a22c2c5e0401d97e00995593bc4"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 54,
    "deletions": 21
  },
  "files": [
    {
      "sha": "818a53c9b5cf25eefb364cb3695dadb8ecf3f259",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -1,3 +1,32 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's thread_alive op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.\n+\t(mythread_alive): Update the macro.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_thread_alive): Turn into ...\n+\t(linux_process_target::thread_alive): ... this.\n+\t(wait_for_sigstop): Update.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t(lynx_thread_alive): Turn into ...\n+\t(lynx_process_target::thread_alive): ... this.\n+\t* lynx-low.h (class lynx_process_target): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t(nto_thread_alive): Turn into ...\n+\t(nto_process_target::thread_alive): ... this.\n+\t* nto-low.h (class nto_process_target): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\t(win32_thread_alive): Turn into ...\n+\t(win32_process_target::thread_alive): ... this.\n+\t* win32-low.h (class win32_process_target): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's join op into a method of"
    },
    {
      "sha": "f7b1fc095fd9e9b5e16e8a7205ced4e8639a5f50",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -1681,9 +1681,10 @@ linux_process_target::join (int pid)\n   } while (ret != -1 || errno != ECHILD);\n }\n \n-/* Return nonzero if the given thread is still alive.  */\n-static int\n-linux_thread_alive (ptid_t ptid)\n+/* Return true if the given thread is still alive.  */\n+\n+bool\n+linux_process_target::thread_alive (ptid_t ptid)\n {\n   struct lwp_info *lwp = find_lwp_pid (ptid);\n \n@@ -4004,7 +4005,7 @@ wait_for_sigstop (void)\n \t\t\t\t       &wstat, __WALL);\n   gdb_assert (ret == -1);\n \n-  if (saved_thread == NULL || linux_thread_alive (saved_tid))\n+  if (saved_thread == NULL || mythread_alive (saved_tid))\n     current_thread = saved_thread;\n   else\n     {\n@@ -7358,7 +7359,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_thread_alive,\n   linux_resume,\n   linux_wait,\n   linux_fetch_registers,"
    },
    {
      "sha": "a11964d61ef535c21cd6cbdb50c23d349b7488af",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -284,6 +284,8 @@ class linux_process_target : public process_target\n   void mourn (process_info *proc) override;\n \n   void join (int pid) override;\n+\n+  bool thread_alive (ptid_t pid) override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "24908786fad5b3299cc5cfa02a173921f136d49c",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -570,8 +570,8 @@ lynx_process_target::join (int pid)\n \n /* Implement the thread_alive target_ops method.  */\n \n-static int\n-lynx_thread_alive (ptid_t ptid)\n+bool\n+lynx_process_target::thread_alive (ptid_t ptid)\n {\n   /* The list of threads is updated at the end of each wait, so it\n      should be up to date.  No need to re-fetch it.  */\n@@ -726,7 +726,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  lynx_thread_alive,\n   lynx_resume,\n   lynx_wait,\n   lynx_fetch_registers,"
    },
    {
      "sha": "b12e6cd27212dcd4e93dd92e648b56f85791d279",
      "filename": "gdbserver/lynx-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/lynx-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/lynx-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.h?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -70,6 +70,8 @@ class lynx_process_target : public process_target\n   void mourn (process_info *proc) override;\n \n   void join (int pid) override;\n+\n+  bool thread_alive (ptid_t pid) override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "4153a4adde3a5e8fa24998e7297e8d99acb95dd3",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -431,10 +431,10 @@ nto_process_target::join (int pid)\n \n /* Check if the given thread is alive.  \n \n-   Return 1 if alive, 0 otherwise.  */\n+   Return true if alive, false otherwise.  */\n \n-static int\n-nto_thread_alive (ptid_t ptid)\n+bool\n+nto_process_target::thread_alive (ptid_t ptid)\n {\n   int res;\n \n@@ -941,7 +941,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  nto_thread_alive,\n   nto_resume,\n   nto_wait,\n   nto_fetch_registers,"
    },
    {
      "sha": "e861b5e885cff85b1b3f5389b6d494ce4589d34b",
      "filename": "gdbserver/nto-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/nto-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/nto-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.h?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -60,6 +60,8 @@ class nto_process_target : public process_target\n   void mourn (process_info *proc) override;\n \n   void join (int pid) override;\n+\n+  bool thread_alive (ptid_t pid) override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "923c92c7cb8d4085b6f365904dc8afe342fdd4b5",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -70,10 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Return 1 iff the thread with process ID PID is alive.  */\n-\n-  int (*thread_alive) (ptid_t pid);\n-\n   /* Resume the inferior process.  */\n \n   void (*resume) (struct thread_resume *resume_info, size_t n);\n@@ -484,6 +480,9 @@ class process_target\n \n   /* Wait for process PID to exit.  */\n   virtual void join (int pid) = 0;\n+\n+  /* Return true iff the thread with process ID PID is alive.  */\n+  virtual bool thread_alive (ptid_t pid) = 0;\n };\n \n extern process_stratum_target *the_target;\n@@ -524,7 +523,7 @@ int kill_inferior (process_info *proc);\n   the_target->pt->detach (proc)\n \n #define mythread_alive(pid) \\\n-  (*the_target->thread_alive) (pid)\n+  the_target->pt->thread_alive (pid)\n \n #define fetch_inferior_registers(regcache, regno)\t\\\n   (*the_target->fetch_registers) (regcache, regno)"
    },
    {
      "sha": "46f0ddd58b811b0499f0fcb6dfee82b61b6abda8",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -897,9 +897,9 @@ win32_process_target::join (int pid)\n     }\n }\n \n-/* Return 1 iff the thread with thread ID TID is alive.  */\n-static int\n-win32_thread_alive (ptid_t ptid)\n+/* Return true iff the thread with thread ID TID is alive.  */\n+bool\n+win32_process_target::thread_alive (ptid_t ptid)\n {\n   /* Our thread list is reliable; don't bother to poll target\n      threads.  */\n@@ -1839,7 +1839,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  win32_thread_alive,\n   win32_resume,\n   win32_wait,\n   win32_fetch_inferior_registers,"
    },
    {
      "sha": "b222fd3b57dbacd6420c857818d50faa7ba117e6",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13d3d99b27ab7f792f3bdf729def9bd8f2151952/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=13d3d99b27ab7f792f3bdf729def9bd8f2151952",
      "patch": "@@ -119,6 +119,8 @@ class win32_process_target : public process_target\n   void mourn (process_info *proc) override;\n \n   void join (int pid) override;\n+\n+  bool thread_alive (ptid_t pid) override;\n };\n \n /* Retrieve the context for this thread, if not already retrieved.  */"
    }
  ]
}