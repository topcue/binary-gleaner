{
  "sha": "cc4c4f40a2b46e355684e450f59154cece591c39",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2M0YzRmNDBhMmI0NmUzNTU2ODRlNDUwZjU5MTU0Y2VjZTU5MWMzOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-26T04:44:48Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-26T04:51:33Z"
    },
    "message": "Re: vms buffer overflows and large memory allocation\n\ngit commit c893ce360a changed buffer management, in the process\nintroducing a bug on an error return path.\n\n\t* vms-lib.c (vms_lib_read_index): Release correct buffer.",
    "tree": {
      "sha": "ee6840b779fe93301515e25dccebeee163a484bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ee6840b779fe93301515e25dccebeee163a484bf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc4c4f40a2b46e355684e450f59154cece591c39",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc4c4f40a2b46e355684e450f59154cece591c39",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc4c4f40a2b46e355684e450f59154cece591c39",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc4c4f40a2b46e355684e450f59154cece591c39/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "450a1bfc7f60d4b37615a7d78aac83ca73cae159",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/450a1bfc7f60d4b37615a7d78aac83ca73cae159",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/450a1bfc7f60d4b37615a7d78aac83ca73cae159"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 8,
    "deletions": 4
  },
  "files": [
    {
      "sha": "0847dd5be71c0cd591d6886bd6cd280a33b5c399",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc4c4f40a2b46e355684e450f59154cece591c39/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc4c4f40a2b46e355684e450f59154cece591c39/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=cc4c4f40a2b46e355684e450f59154cece591c39",
      "patch": "@@ -1,3 +1,7 @@\n+2020-02-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* vms-lib.c (vms_lib_read_index): Release correct buffer.\n+\n 2020-02-26  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-rx.c (rx_elf_relocate_section): Use bfd_malloc rather than"
    },
    {
      "sha": "29e213f8c39fd6bbb05c6f8be0a583ea79d3e5be",
      "filename": "bfd/vms-lib.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc4c4f40a2b46e355684e450f59154cece591c39/bfd/vms-lib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc4c4f40a2b46e355684e450f59154cece591c39/bfd/vms-lib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-lib.c?ref=cc4c4f40a2b46e355684e450f59154cece591c39",
      "patch": "@@ -416,6 +416,7 @@ vms_lib_read_index (bfd *abfd, int idx, unsigned int *nbrel)\n   unsigned int vbn;\n   ufile_ptr filesize;\n   size_t amt;\n+  struct carsym *csbuf;\n   struct carsym_mem csm;\n \n   /* Read index desription.  */\n@@ -447,28 +448,27 @@ vms_lib_read_index (bfd *abfd, int idx, unsigned int *nbrel)\n     csm.max = csm.limit;\n   if (_bfd_mul_overflow (csm.max, sizeof (struct carsym), &amt))\n     return NULL;\n-  csm.idx = bfd_alloc (abfd, amt);\n+  csm.idx = csbuf = bfd_alloc (abfd, amt);\n   if (csm.idx == NULL)\n     return NULL;\n \n   /* Note: if the index is empty, there is no block to traverse.  */\n   vbn = bfd_getl32 (idd.vbn);\n   if (vbn != 0 && !vms_traverse_index (abfd, vbn, &csm))\n     {\n-      if (csm.realloced && csm.idx != NULL)\n+      if (csm.realloced)\n \tfree (csm.idx);\n \n       /* Note: in case of error, we can free what was allocated on the\n \t BFD's objalloc.  */\n-      bfd_release (abfd, csm.idx);\n+      bfd_release (abfd, csbuf);\n       return NULL;\n     }\n \n   if (csm.realloced)\n     {\n       /* There are more entries than the first estimate.  Allocate on\n \t the BFD's objalloc.  */\n-      struct carsym *csbuf;\n       csbuf = bfd_alloc (abfd, csm.nbr * sizeof (struct carsym));\n       if (csbuf == NULL)\n \treturn NULL;"
    }
  ]
}