{
  "sha": "b93a3ed0a8561cb8f9541eca975e8c76f728d86c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjkzYTNlZDBhODU2MWNiOGY5NTQxZWNhOTc1ZThjNzZmNzI4ZDg2Yw==",
  "commit": {
    "author": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2020-12-21T07:34:25Z"
    },
    "committer": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2021-03-03T08:07:49Z"
    },
    "message": "testsuite: extend nopie handling to add -fno-pie to compiler flags\n\nSome older GCC, e.g. 7.5.0 on Ubuntu 18.04 need -fno-pie to be passed to\nthe compiler in addition to -no-pie to be passed to the linker for non-pie\ncode generation.\n\nThe gdb,nopie_flag is already documented as getting passed to the\ncompiler, not the linker.  Use that for the new -fno-pie compiler flag and\nadd a new gdb,nopie_ldflag for the existing -no-pie linker flag.\n\nCAUTION: this might break existing board files that specify\n         gdb,nopie_flag.  Affected board files need to rename\n         gdb,nopie_flag into gdb,nopie_ldflag.",
    "tree": {
      "sha": "79c01f555f1aaa11ad3c86e574d092d05bcab09a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/79c01f555f1aaa11ad3c86e574d092d05bcab09a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b93a3ed0a8561cb8f9541eca975e8c76f728d86c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b93a3ed0a8561cb8f9541eca975e8c76f728d86c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b93a3ed0a8561cb8f9541eca975e8c76f728d86c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b93a3ed0a8561cb8f9541eca975e8c76f728d86c/comments",
  "author": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fd5c076a06d88dc53e56a17d43ea4ad5e27515a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd5c076a06d88dc53e56a17d43ea4ad5e27515a0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fd5c076a06d88dc53e56a17d43ea4ad5e27515a0"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 21,
    "deletions": 4
  },
  "files": [
    {
      "sha": "9bc6995aa87ac29aa8a153ea1d5b5ce73a42a4a0",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b93a3ed0a8561cb8f9541eca975e8c76f728d86c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b93a3ed0a8561cb8f9541eca975e8c76f728d86c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b93a3ed0a8561cb8f9541eca975e8c76f728d86c",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-03  Markus Metzger  <markus.t.metzger@intel.com>\n+\n+\t* README (Note): Add nopie_ldflag.\n+\t* lib/gdb.exp (gdb_compile): Extend nopie handling.\n+\n 2021-03-02  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/fixed_points.exp: Remove most special cases for minimal"
    },
    {
      "sha": "0036753eff03f1cf16d40b9f249ed32d7f93bdb0",
      "filename": "gdb/testsuite/README",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b93a3ed0a8561cb8f9541eca975e8c76f728d86c/gdb/testsuite/README",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b93a3ed0a8561cb8f9541eca975e8c76f728d86c/gdb/testsuite/README",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/README?ref=b93a3ed0a8561cb8f9541eca975e8c76f728d86c",
      "patch": "@@ -528,6 +528,11 @@ gdb,nopie_flag\n   The flag required to force the compiler to produce non-position-independent\n   executables.\n \n+gdb,nopie_ldflag\n+\n+  The flag required to force the linker to produce non-position-independent\n+  executables.\n+\n gdb,debug\n \n   When set gdb debug is sent to the file gdb.debug in the test output"
    },
    {
      "sha": "0496ca2afe1c41d464e5882316de29455b763884",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b93a3ed0a8561cb8f9541eca975e8c76f728d86c/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b93a3ed0a8561cb8f9541eca975e8c76f728d86c/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=b93a3ed0a8561cb8f9541eca975e8c76f728d86c",
      "patch": "@@ -4210,16 +4210,23 @@ proc gdb_compile {source dest type options} {\n \tlappend options \"$flag\"\n     }\n \n-    # Replace the \"nopie\" option with the appropriate linker flag to disable\n-    # PIE executables.  There are no compiler flags for this option.\n+    # Replace the \"nopie\" option with the appropriate compiler and linker\n+    # flags to disable PIE executables.\n     set nopie [lsearch -exact $options nopie]\n     if {$nopie != -1} {\n \tif [target_info exists gdb,nopie_flag] {\n-\t    set flag \"ldflags=[target_info gdb,nopie_flag]\"\n+\t    set flag \"additional_flags=[target_info gdb,nopie_flag]\"\n \t} else {\n-\t    set flag \"ldflags=-no-pie\"\n+\t    set flag \"additional_flags=-fno-pie\"\n \t}\n \tset options [lreplace $options $nopie $nopie $flag]\n+\n+\tif [target_info exists gdb,nopie_ldflag] {\n+\t    set flag \"ldflags=[target_info gdb,nopie_ldflag]\"\n+\t} else {\n+\t    set flag \"ldflags=-no-pie\"\n+\t}\n+\tlappend options \"$flag\"\n     }\n \n     if { $type == \"executable\" } {"
    }
  ]
}