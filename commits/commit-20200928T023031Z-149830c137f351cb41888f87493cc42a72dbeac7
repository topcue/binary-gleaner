{
  "sha": "149830c137f351cb41888f87493cc42a72dbeac7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTQ5ODMwYzEzN2YzNTFjYjQxODg4Zjg3NDkzY2M0MmE3MmRiZWFjNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-28T02:30:30Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-28T02:30:31Z"
    },
    "message": "Use an inner window in tui_py_window\n\nThis changes tui_py_window to create an inner curses window.  This\ngreatly simplifies tui_py_window::output, beacuse it no longer needs\nto be careful to avoid overwriting the window's border.  This patch\nalso makes it a bit easier for a later patch to rewrite\ntui_copy_source_line.\n\ngdb/ChangeLog\n2020-09-27  Tom Tromey  <tom@tromey.com>\n\n\t* python/py-tui.c (class tui_py_window) <refresh_window>: New\n\tmethod.\n\t<erase>: Update.\n\t<cursor_x, cursor_y>: Remove.\n\t<m_inner_window>: New member.\n\t(tui_py_window::rerender): Create inner window.\n\t(tui_py_window::output): Write to inner window.",
    "tree": {
      "sha": "af25aff2c3a27b1a9b38fbee4bfa73387d2f3f69",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/af25aff2c3a27b1a9b38fbee4bfa73387d2f3f69"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/149830c137f351cb41888f87493cc42a72dbeac7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/149830c137f351cb41888f87493cc42a72dbeac7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/149830c137f351cb41888f87493cc42a72dbeac7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/149830c137f351cb41888f87493cc42a72dbeac7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5f278258ccae6a666c72de709a3171975fbaeb05",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f278258ccae6a666c72de709a3171975fbaeb05",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5f278258ccae6a666c72de709a3171975fbaeb05"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 42,
    "deletions": 27
  },
  "files": [
    {
      "sha": "f2d04c261112c92a86a575173346e0b71d255b61",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/149830c137f351cb41888f87493cc42a72dbeac7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/149830c137f351cb41888f87493cc42a72dbeac7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=149830c137f351cb41888f87493cc42a72dbeac7",
      "patch": "@@ -1,3 +1,13 @@\n+2020-09-27  Tom Tromey  <tom@tromey.com>\n+\n+\t* python/py-tui.c (class tui_py_window) <refresh_window>: New\n+\tmethod.\n+\t<erase>: Update.\n+\t<cursor_x, cursor_y>: Remove.\n+\t<m_inner_window>: New member.\n+\t(tui_py_window::rerender): Create inner window.\n+\t(tui_py_window::output): Write to inner window.\n+\n 2020-09-26  Gareth Rees <grees@undo.io>  (tiny change)\n \n \tPR python/26586"
    },
    {
      "sha": "58f9c5e8548aa508856d0177221f322f2f73ab47",
      "filename": "gdb/python/py-tui.c",
      "status": "modified",
      "additions": 32,
      "deletions": 27,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/149830c137f351cb41888f87493cc42a72dbeac7/gdb/python/py-tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/149830c137f351cb41888f87493cc42a72dbeac7/gdb/python/py-tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-tui.c?ref=149830c137f351cb41888f87493cc42a72dbeac7",
      "patch": "@@ -86,15 +86,23 @@ class tui_py_window : public tui_win_info\n   void do_scroll_vertical (int num_to_scroll) override;\n   void do_scroll_horizontal (int num_to_scroll) override;\n \n+  void refresh_window () override\n+  {\n+    tui_win_info::refresh_window ();\n+    if (m_inner_window != nullptr)\n+      {\n+\ttouchwin (m_inner_window.get ());\n+\ttui_wrefresh (m_inner_window.get ());\n+      }\n+  }\n+\n   /* Erase and re-box the window.  */\n   void erase ()\n   {\n-    if (is_visible ())\n+    if (is_visible () && m_inner_window != nullptr)\n       {\n-\twerase (handle.get ());\n+\twerase (m_inner_window.get ());\n \tcheck_and_display_highlight_if_needed ();\n-\tcursor_x = 0;\n-\tcursor_y = 0;\n       }\n   }\n \n@@ -115,13 +123,13 @@ class tui_py_window : public tui_win_info\n \n private:\n \n-  /* Location of the cursor.  */\n-  int cursor_x = 0;\n-  int cursor_y = 0;\n-\n   /* The name of this window.  */\n   std::string m_name;\n \n+  /* We make our own inner window, so that it is easy to print without\n+     overwriting the border.  */\n+  std::unique_ptr<WINDOW, curses_deleter> m_inner_window;\n+\n   /* The underlying Python window object.  */\n   gdbpy_ref<> m_window;\n \n@@ -155,8 +163,21 @@ tui_py_window::~tui_py_window ()\n void\n tui_py_window::rerender ()\n {\n+  tui_win_info::rerender ();\n+\n   gdbpy_enter enter_py (get_current_arch (), current_language);\n \n+  int h = viewport_height ();\n+  int w = viewport_width ();\n+  if (h == 0 || w == 0)\n+    {\n+      /* The window would be too small, so just remove the\n+\t contents.  */\n+      m_inner_window.reset (nullptr);\n+      return;\n+    }\n+  m_inner_window.reset (newwin (h, w, y + 1, x + 1));\n+\n   if (PyObject_HasAttrString (m_window.get (), \"render\"))\n     {\n       gdbpy_ref<> result (PyObject_CallMethod (m_window.get (), \"render\",\n@@ -197,27 +218,11 @@ tui_py_window::do_scroll_vertical (int num_to_scroll)\n void\n tui_py_window::output (const char *text)\n {\n-  int vwidth = viewport_width ();\n-\n-  while (cursor_y < viewport_height () && *text != '\\0')\n+  if (m_inner_window != nullptr)\n     {\n-      wmove (handle.get (), cursor_y + 1, cursor_x + 1);\n-\n-      std::string line = tui_copy_source_line (&text, 0, 0,\n-\t\t\t\t\t       vwidth - cursor_x, 0);\n-      tui_puts (line.c_str (), handle.get ());\n-\n-      if (*text == '\\n')\n-\t{\n-\t  ++text;\n-\t  ++cursor_y;\n-\t  cursor_x = 0;\n-\t}\n-      else\n-\tcursor_x = getcurx (handle.get ()) - 1;\n+      tui_puts (text, m_inner_window.get ());\n+      tui_wrefresh (m_inner_window.get ());\n     }\n-\n-  wrefresh (handle.get ());\n }\n \n \f"
    }
  ]
}