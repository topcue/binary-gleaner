{
  "sha": "327301a4604da40da264c554daa8c1e97aa2fbe2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzI3MzAxYTQ2MDRkYTQwZGEyNjRjNTU0ZGFhOGMxZTk3YWEyZmJlMg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-30T14:23:59Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-31T00:17:46Z"
    },
    "message": "OOM in setup_group\n\nWe alloc, seek and read using section sizes in object files.  Fuzzed\nobjects can have silly sizes, but that's OK if the system supports\nmemory over-commit.  The read fails because we hit EOF and that\nusually results in a graceful exit.\n\nBut if we memset before the read then the invalid size results in\nattempting to write to a huge number of memory pages, and an eventual\nOut Of Memory after probably swapping like crazy.  So don't memset.\nThere really isn't a need to clear the section contents anyway.  All\nbytes are written with a good object file by the read and following\nloop converting section index in target order to ELF section header\npointer, and the only untidy bytes are the 4 bytes past the group\nflags when pointers are 8 bytes.  Those don't matter but the patch\nclears them for anyone poking around in a debugger.  On error paths\nit's as good to free section contents as it is to clear them.\n\nNoticed when looking at PR4110 fourth test case.\n\n\tPR 4110\n\t* elf.c (setup_group): Don't clear entire section contents,\n\tjust the padding after group flags.  Release alloc'd memory\n\tafter a seek or read failure.",
    "tree": {
      "sha": "d9d457d95ef8aa4b6feae4e79d8bc088167e5b5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d9d457d95ef8aa4b6feae4e79d8bc088167e5b5c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/327301a4604da40da264c554daa8c1e97aa2fbe2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/327301a4604da40da264c554daa8c1e97aa2fbe2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/327301a4604da40da264c554daa8c1e97aa2fbe2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/327301a4604da40da264c554daa8c1e97aa2fbe2/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "de08f22743d4a2d4175f785cbf291f16ecd58dc8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de08f22743d4a2d4175f785cbf291f16ecd58dc8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/de08f22743d4a2d4175f785cbf291f16ecd58dc8"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 10,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0061b6f355705aff11ffe31c67ed95d27e6ff2b4",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/327301a4604da40da264c554daa8c1e97aa2fbe2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/327301a4604da40da264c554daa8c1e97aa2fbe2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=327301a4604da40da264c554daa8c1e97aa2fbe2",
      "patch": "@@ -1,3 +1,10 @@\n+2020-01-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 4110\n+\t* elf.c (setup_group): Don't clear entire section contents,\n+\tjust the padding after group flags.  Release alloc'd memory\n+\tafter a seek or read failure.\n+\n 2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>\n \n \t* peXXigen.c (pe_is_repro): New function."
    },
    {
      "sha": "5e6b9a0f4160c15f5e503d5d5c5e905e32b0e11b",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/327301a4604da40da264c554daa8c1e97aa2fbe2/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/327301a4604da40da264c554daa8c1e97aa2fbe2/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=327301a4604da40da264c554daa8c1e97aa2fbe2",
      "patch": "@@ -676,8 +676,6 @@ setup_group (bfd *abfd, Elf_Internal_Shdr *hdr, asection *newsect)\n \t\t      continue;\n \t\t    }\n \n-\t\t  memset (shdr->contents, 0, amt);\n-\n \t\t  if (bfd_seek (abfd, shdr->sh_offset, SEEK_SET) != 0\n \t\t      || (bfd_bread (shdr->contents, shdr->sh_size, abfd)\n \t\t\t  != shdr->sh_size))\n@@ -692,7 +690,8 @@ setup_group (bfd *abfd, Elf_Internal_Shdr *hdr, asection *newsect)\n \t\t      /* PR 17510: If the group contents are even\n \t\t\t partially corrupt, do not allow any of the\n \t\t\t contents to be used.  */\n-\t\t      memset (shdr->contents, 0, amt);\n+\t\t      bfd_release (abfd, shdr->contents);\n+\t\t      shdr->contents = NULL;\n \t\t      continue;\n \t\t    }\n \n@@ -712,6 +711,7 @@ setup_group (bfd *abfd, Elf_Internal_Shdr *hdr, asection *newsect)\n \t\t      idx = H_GET_32 (abfd, src);\n \t\t      if (src == shdr->contents)\n \t\t\t{\n+\t\t\t  dest->shdr = NULL;\n \t\t\t  dest->flags = idx;\n \t\t\t  if (shdr->bfd_section != NULL && (idx & GRP_COMDAT))\n \t\t\t    shdr->bfd_section->flags"
    }
  ]
}