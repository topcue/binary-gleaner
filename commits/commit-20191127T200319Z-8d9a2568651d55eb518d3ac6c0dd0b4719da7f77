{
  "sha": "8d9a2568651d55eb518d3ac6c0dd0b4719da7f77",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGQ5YTI1Njg2NTFkNTVlYjUxOGQzYWM2YzBkZDBiNDcxOWRhN2Y3Nw==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-10-12T21:35:56Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-11-27T20:03:19Z"
    },
    "message": "Fix BZ 25065 - Ensure that physnames are computed for inherited DIEs\n\nThis is a fix for BZ 25065.\n\nGDB segfaults when running either gdb.cp/subtypes.exp or\ngdb.cp/local.exp in conjunction with using the -flto compiler/linker\nflag.\n\nA much simpler program, which was used to help create the test for\nthis fix, is:\n\n-- doit.cc --\nint main()\n{\n  class Foo {\n  public:\n    int doit ()\n    {\n      return 0;\n    }\n  };\n\n  Foo foo;\n\n  return foo.doit ();\n}\n-- end doit.cc --\n\ngcc -o doit -flto -g doit.cc\ngdb -q doit\nReading symbols from doit...\n(gdb) ptype main::Foo\ntype = class Foo {\nSegmentation fault (core dumped)\n\nThe segfault occurs due to a NULL physname in\nc_type_print_base_struct_union in c-typeprint.c.  Specifically,\ncalling is_constructor_name() eventually causes the SIGSEGV is this\ncode in c-typeprint.c:\n\n\t      const char *physname = TYPE_FN_FIELD_PHYSNAME (f, j);\n\t      int is_full_physname_constructor =\n\t\tTYPE_FN_FIELD_CONSTRUCTOR (f, j)\n\t\t|| is_constructor_name (physname)\n\t\t|| is_destructor_name (physname)\n\t\t|| method_name[0] == '~';\n\nHowever, looking at compute_delayed_physnames(), we see that\nthe TYPE_FN_FIELD_PHYSNAME field should never be NULL.  This\nfield will be set to \"\" for NULL physnames:\n\n      physname = dwarf2_physname (mi.name, mi.die, cu);\n      TYPE_FN_FIELD_PHYSNAME (fn_flp->fn_fields, mi.index)\n\t= physname ? physname : \"\";\n\nFor this particular case, it turns out that compute_delayed_physnames\nwasn't being called, which left TYPE_FN_FIELD_PHYSNAME set to the NULL\nvalue that it started with when that data structure was allocated.\n\nThe place to fix it, I think, is towards the end of\ninherit_abstract_dies().\n\nMy first attempt at fix caused the origin CU's method_list (which is\nsimply the list of methods whose physnames still need to be computed)\nto be added to the CU which is doing the inheriting.  One drawback\nwith this approach is that compute_delayed_physnames is (eventually)\ncalled with a CU that's different than the CU in which the methods\nwere found.  It's not clear whether this will cause problems or not.\n\nA safer approach, which is what I ultimately settled on, is to call\ncompute_delayed_physnames() from inherit_abstract_dies().  One\npotential drawback is that all needed types might not be known at that\npoint.  However, in my testing, I haven't seen a problem along these\nlines.\n\ngdb/ChangeLog:\n\n\t* dwarf2read.c (inherit_abstract_dies): Ensure that delayed\n\tphysnames are computed for inherited DIEs.\n\nChange-Id: I6c6ffe96b301a9daab9f653956b89e3a33fa9445",
    "tree": {
      "sha": "8834bc16ce5a5f14e6bb14c3b371ca329bdceded",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8834bc16ce5a5f14e6bb14c3b371ca329bdceded"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fad03f6e5b7cf88d86e41734b1c44c31daf2fc2b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fad03f6e5b7cf88d86e41734b1c44c31daf2fc2b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fad03f6e5b7cf88d86e41734b1c44c31daf2fc2b"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 8,
    "deletions": 0
  },
  "files": [
    {
      "sha": "0816e73381b249de88b30c7407ea632d9b45455b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8d9a2568651d55eb518d3ac6c0dd0b4719da7f77",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-27  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* dwarf2read.c (inherit_abstract_dies): Ensure that delayed\n+\tphysnames are computed for inherited DIEs.\n+\n 2019-11-27  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2read.h (struct dwarf2_per_objfile): Remove unnecessary"
    },
    {
      "sha": "40626a1562f0ca96106dfa78b727b0cb712e704f",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8d9a2568651d55eb518d3ac6c0dd0b4719da7f77/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=8d9a2568651d55eb518d3ac6c0dd0b4719da7f77",
      "patch": "@@ -13697,6 +13697,9 @@ inherit_abstract_dies (struct die_info *die, struct dwarf2_cu *cu)\n       origin_child_die = sibling_die (origin_child_die);\n     }\n   origin_cu->list_in_scope = origin_previous_list_in_scope;\n+\n+  if (cu != origin_cu)\n+    compute_delayed_physnames (origin_cu);\n }\n \n static void"
    }
  ]
}