{
  "sha": "b858499daf0a824a518bac8bc13495ad856ab10d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yjg1ODQ5OWRhZjBhODI0YTUxOGJhYzhiYzEzNDk1YWQ4NTZhYjEwZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-12-05T18:44:30Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-12-05T18:44:30Z"
    },
    "message": "Remove gdbarch parameter of lookup_typename\n\nI noticed that the gdbarch parameter of lookup_typename was unused, so I\nremoved it (as well as from lookup_signed_typename and\nlookup_unsigned_typename) and updated all callers.\n\nTested by rebuilding.\n\ngdb/ChangeLog:\n\n\t* c-exp.y: Update calls to lookup_typename,\n\tlookup_signed_typename and lookup_unsigned_typename.\n\t* c-lang.c (evaluate_subexp_c): Likewise.\n\t* cp-namespace.c (cp_lookup_symbol_imports_or_template):\n\tLikewise.\n\t* eval.c (binop_promote): Likewise.\n\t* gdbtypes.c (lookup_typename): Remove gdbarch parameter.\n\t(lookup_unsigned_typename): Likewise.\n\t(lookup_signed_typename): Likewise.\n\t* gdbtypes.h (lookup_unsigned_typename): Likewise.\n\t(lookup_signed_typename): Likewise.\n\t(lookup_typename): Likewise.\n\t* guile/scm-type.c (tyscm_lookup_typename): Update calls to\n\tlookup_typename, lookup_signed_typename,\n\tlookup_unsigned_typename.\n\t* m2-exp.y: Likewise.\n\t* printcmd.c (printf_wide_c_string): Likewise.\n\t(ui_printf): Likewise.\n\t* python/py-type.c (typy_lookup_typename): Likewise.\n\t* python/py-xmethods.c (python_xmethod_worker::invoke):\n\tLikewise.\n\t* rust-exp.y: Likewise.",
    "tree": {
      "sha": "18d112d989c93d8598786c13d7a19a8b9a624240",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/18d112d989c93d8598786c13d7a19a8b9a624240"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b858499daf0a824a518bac8bc13495ad856ab10d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b858499daf0a824a518bac8bc13495ad856ab10d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b858499daf0a824a518bac8bc13495ad856ab10d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b858499daf0a824a518bac8bc13495ad856ab10d/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a23e9ba17f6ab8bef1f2cc02686e8567bdc728ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a23e9ba17f6ab8bef1f2cc02686e8567bdc728ca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a23e9ba17f6ab8bef1f2cc02686e8567bdc728ca"
    }
  ],
  "stats": {
    "total": 120,
    "additions": 51,
    "deletions": 69
  },
  "files": [
    {
      "sha": "c6f7909777b65938ddfa0b0836be39637f3ae64d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -1,3 +1,28 @@\n+2019-12-05  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* c-exp.y: Update calls to lookup_typename,\n+\tlookup_signed_typename and lookup_unsigned_typename.\n+\t* c-lang.c (evaluate_subexp_c): Likewise.\n+\t* cp-namespace.c (cp_lookup_symbol_imports_or_template):\n+\tLikewise.\n+\t* eval.c (binop_promote): Likewise.\n+\t* gdbtypes.c (lookup_typename): Remove gdbarch parameter.\n+\t(lookup_unsigned_typename): Likewise.\n+\t(lookup_signed_typename): Likewise.\n+\t* gdbtypes.h (lookup_unsigned_typename): Likewise.\n+\t(lookup_signed_typename): Likewise.\n+\t(lookup_typename): Likewise.\n+\t* guile/scm-type.c (tyscm_lookup_typename): Update calls to\n+\tlookup_typename, lookup_signed_typename,\n+\tlookup_unsigned_typename.\n+\t* m2-exp.y: Likewise.\n+\t* printcmd.c (printf_wide_c_string): Likewise.\n+\t(ui_printf): Likewise.\n+\t* python/py-type.c (typy_lookup_typename): Likewise.\n+\t* python/py-xmethods.c (python_xmethod_worker::invoke):\n+\tLikewise.\n+\t* rust-exp.y: Likewise.\n+\n 2019-12-04  Christian Biesinger  <cbiesinger@google.com>\n \n \t* configure.nat (obsd64): Add missing files x86-nat.o and"
    },
    {
      "sha": "fb806a80bebc605c7c32d0f5a66ebd940715598b",
      "filename": "gdb/c-exp.y",
      "status": "modified",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/c-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/c-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-exp.y?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -824,7 +824,6 @@ exp\t:\tSIZEOF '(' type ')'\t%prec UNARY\n \t\t\t  write_exp_elt_opcode (pstate, OP_LONG);\n \t\t\t  write_exp_elt_type (pstate, lookup_signed_typename\n \t\t\t\t\t      (pstate->language (),\n-\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t       \"int\"));\n \t\t\t  type = check_typedef (type);\n \n@@ -1301,117 +1300,89 @@ typebase\n \t\t\t{ $$ = $1.type; }\n \t|\tINT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"int\"); }\n \t|\tLONG\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long\"); }\n \t|\tSHORT\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"short\"); }\n \t|\tLONG INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long\"); }\n \t|\tLONG SIGNED_KEYWORD INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long\"); }\n \t|\tLONG SIGNED_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long\"); }\n \t|\tSIGNED_KEYWORD LONG INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long\"); }\n \t|\tUNSIGNED LONG INT_KEYWORD\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"long\"); }\n \t|\tLONG UNSIGNED INT_KEYWORD\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"long\"); }\n \t|\tLONG UNSIGNED\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"long\"); }\n \t|\tLONG LONG\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long long\"); }\n \t|\tLONG LONG INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long long\"); }\n \t|\tLONG LONG SIGNED_KEYWORD INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long long\"); }\n \t|\tLONG LONG SIGNED_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long long\"); }\n \t|\tSIGNED_KEYWORD LONG LONG\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long long\"); }\n \t|\tSIGNED_KEYWORD LONG LONG INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"long long\"); }\n \t|\tUNSIGNED LONG LONG\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"long long\"); }\n \t|\tUNSIGNED LONG LONG INT_KEYWORD\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"long long\"); }\n \t|\tLONG LONG UNSIGNED\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"long long\"); }\n \t|\tLONG LONG UNSIGNED INT_KEYWORD\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"long long\"); }\n \t|\tSHORT INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"short\"); }\n \t|\tSHORT SIGNED_KEYWORD INT_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"short\"); }\n \t|\tSHORT SIGNED_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"short\"); }\n \t|\tUNSIGNED SHORT INT_KEYWORD\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"short\"); }\n \t|\tSHORT UNSIGNED\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"short\"); }\n \t|\tSHORT UNSIGNED INT_KEYWORD\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"short\"); }\n \t|\tDOUBLE_KEYWORD\n \t\t\t{ $$ = lookup_typename (pstate->language (),\n-\t\t\t\t\t\tpstate->gdbarch (),\n \t\t\t\t\t\t\"double\",\n \t\t\t\t\t\tNULL,\n \t\t\t\t\t\t0); }\n \t|\tLONG DOUBLE_KEYWORD\n \t\t\t{ $$ = lookup_typename (pstate->language (),\n-\t\t\t\t\t\tpstate->gdbarch (),\n \t\t\t\t\t\t\"long double\",\n \t\t\t\t\t\tNULL,\n \t\t\t\t\t\t0); }\n@@ -1483,19 +1454,15 @@ typebase\n \t\t\t}\n \t|\tUNSIGNED type_name\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t TYPE_NAME($2.type)); }\n \t|\tUNSIGNED\n \t\t\t{ $$ = lookup_unsigned_typename (pstate->language (),\n-\t\t\t\t\t\t\t pstate->gdbarch (),\n \t\t\t\t\t\t\t \"int\"); }\n \t|\tSIGNED_KEYWORD type_name\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       TYPE_NAME($2.type)); }\n \t|\tSIGNED_KEYWORD\n \t\t\t{ $$ = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t\t       \"int\"); }\n                 /* It appears that this rule for templates is never\n                    reduced; template recognition happens by lookahead\n@@ -1517,23 +1484,20 @@ type_name:\tTYPENAME\n \t\t  $$.stoken.ptr = \"int\";\n \t\t  $$.stoken.length = 3;\n \t\t  $$.type = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t    pstate->gdbarch (),\n \t\t\t\t\t\t    \"int\");\n \t\t}\n \t|\tLONG\n \t\t{\n \t\t  $$.stoken.ptr = \"long\";\n \t\t  $$.stoken.length = 4;\n \t\t  $$.type = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t    pstate->gdbarch (),\n \t\t\t\t\t\t    \"long\");\n \t\t}\n \t|\tSHORT\n \t\t{\n \t\t  $$.stoken.ptr = \"short\";\n \t\t  $$.stoken.length = 5;\n \t\t  $$.type = lookup_signed_typename (pstate->language (),\n-\t\t\t\t\t\t    pstate->gdbarch (),\n \t\t\t\t\t\t    \"short\");\n \t\t}\n \t;"
    },
    {
      "sha": "846970af7b923600c25eeead6f98b6cf6e6f55e5",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -611,16 +611,13 @@ evaluate_subexp_c (struct type *expect_type, struct expression *exp,\n \t\t\t\t\t      exp->gdbarch);\n \t    break;\n \t  case C_WIDE_STRING:\n-\t    type = lookup_typename (exp->language_defn, exp->gdbarch,\n-\t\t\t\t    \"wchar_t\", NULL, 0);\n+\t    type = lookup_typename (exp->language_defn, \"wchar_t\", NULL, 0);\n \t    break;\n \t  case C_STRING_16:\n-\t    type = lookup_typename (exp->language_defn, exp->gdbarch,\n-\t\t\t\t    \"char16_t\", NULL, 0);\n+\t    type = lookup_typename (exp->language_defn, \"char16_t\", NULL, 0);\n \t    break;\n \t  case C_STRING_32:\n-\t    type = lookup_typename (exp->language_defn, exp->gdbarch,\n-\t\t\t\t    \"char32_t\", NULL, 0);\n+\t    type = lookup_typename (exp->language_defn, \"char32_t\", NULL, 0);\n \t    break;\n \t  default:\n \t    internal_error (__FILE__, __LINE__, _(\"unhandled c_string_type\"));"
    },
    {
      "sha": "d813d050733ce5537ed34da4549d62a62cf488ba",
      "filename": "gdb/cp-namespace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/cp-namespace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/cp-namespace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-namespace.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -547,7 +547,6 @@ cp_lookup_symbol_imports_or_template (const char *scope,\n \t  struct type *context;\n \t  std::string name_copy (function->natural_name ());\n \t  const struct language_defn *lang = language_def (language_cplus);\n-\t  struct gdbarch *arch = symbol_arch (function);\n \t  const struct block *parent = BLOCK_SUPERBLOCK (block);\n \t  struct symbol *sym;\n \n@@ -561,7 +560,7 @@ cp_lookup_symbol_imports_or_template (const char *scope,\n \t      else\n \t\t{\n \t\t  name_copy.erase (prefix_len);\n-\t\t  context = lookup_typename (lang, arch,\n+\t\t  context = lookup_typename (lang,\n \t\t\t\t\t     name_copy.c_str (),\n \t\t\t\t\t     parent, 1);\n \t\t}"
    },
    {
      "sha": "8c93c7a0b103af1aacb0950c80cf37b4ede65b0c",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -562,20 +562,20 @@ binop_promote (const struct language_defn *language, struct gdbarch *gdbarch,\n \t  break;\n \tcase language_opencl:\n \t  if (result_len <= TYPE_LENGTH (lookup_signed_typename\n-\t\t\t\t\t (language, gdbarch, \"int\")))\n+\t\t\t\t\t (language, \"int\")))\n \t    {\n \t      promoted_type =\n \t\t(unsigned_operation\n-\t\t ? lookup_unsigned_typename (language, gdbarch, \"int\")\n-\t\t : lookup_signed_typename (language, gdbarch, \"int\"));\n+\t\t ? lookup_unsigned_typename (language, \"int\")\n+\t\t : lookup_signed_typename (language, \"int\"));\n \t    }\n \t  else if (result_len <= TYPE_LENGTH (lookup_signed_typename\n-\t\t\t\t\t      (language, gdbarch, \"long\")))\n+\t\t\t\t\t      (language, \"long\")))\n \t    {\n \t      promoted_type =\n \t\t(unsigned_operation\n-\t\t ? lookup_unsigned_typename (language, gdbarch, \"long\")\n-\t\t : lookup_signed_typename (language, gdbarch,\"long\"));\n+\t\t ? lookup_unsigned_typename (language, \"long\")\n+\t\t : lookup_signed_typename (language,\"long\"));\n \t    }\n \t  break;\n \tdefault:"
    },
    {
      "sha": "4854f49e4842b06002e7b0ca3512783f8a105646",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -1555,7 +1555,7 @@ type_name_or_error (struct type *type)\n \n struct type *\n lookup_typename (const struct language_defn *language,\n-\t\t struct gdbarch *gdbarch, const char *name,\n+\t\t const char *name,\n \t\t const struct block *block, int noerr)\n {\n   struct symbol *sym;\n@@ -1572,29 +1572,28 @@ lookup_typename (const struct language_defn *language,\n \n struct type *\n lookup_unsigned_typename (const struct language_defn *language,\n-\t\t\t  struct gdbarch *gdbarch, const char *name)\n+\t\t\t  const char *name)\n {\n   char *uns = (char *) alloca (strlen (name) + 10);\n \n   strcpy (uns, \"unsigned \");\n   strcpy (uns + 9, name);\n-  return lookup_typename (language, gdbarch, uns, NULL, 0);\n+  return lookup_typename (language, uns, NULL, 0);\n }\n \n struct type *\n-lookup_signed_typename (const struct language_defn *language,\n-\t\t\tstruct gdbarch *gdbarch, const char *name)\n+lookup_signed_typename (const struct language_defn *language, const char *name)\n {\n   struct type *t;\n   char *uns = (char *) alloca (strlen (name) + 8);\n \n   strcpy (uns, \"signed \");\n   strcpy (uns + 7, name);\n-  t = lookup_typename (language, gdbarch, uns, NULL, 1);\n+  t = lookup_typename (language, uns, NULL, 1);\n   /* If we don't find \"signed FOO\" just try again with plain \"FOO\".  */\n   if (t != NULL)\n     return t;\n-  return lookup_typename (language, gdbarch, name, NULL, 0);\n+  return lookup_typename (language, name, NULL, 0);\n }\n \n /* Lookup a structure type named \"struct NAME\","
    },
    {
      "sha": "0dd7333371b642794cb5ceaac04923771d356a1a",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -2005,10 +2005,10 @@ extern struct type *lookup_string_range_type (struct type *, LONGEST, LONGEST);\n extern struct type *create_set_type (struct type *, struct type *);\n \n extern struct type *lookup_unsigned_typename (const struct language_defn *,\n-\t\t\t\t\t      struct gdbarch *, const char *);\n+\t\t\t\t\t      const char *);\n \n extern struct type *lookup_signed_typename (const struct language_defn *,\n-\t\t\t\t\t    struct gdbarch *, const char *);\n+\t\t\t\t\t    const char *);\n \n extern void get_unsigned_type_max (struct type *, ULONGEST *);\n \n@@ -2048,8 +2048,7 @@ extern void check_stub_method_group (struct type *, int);\n extern char *gdb_mangle_name (struct type *, int, int);\n \n extern struct type *lookup_typename (const struct language_defn *,\n-\t\t\t\t     struct gdbarch *, const char *,\n-\t\t\t\t     const struct block *, int);\n+\t\t\t\t     const char *, const struct block *, int);\n \n extern struct type *lookup_template_type (const char *, struct type *,\n \t\t\t\t\t  const struct block *);"
    },
    {
      "sha": "d5b289d11c2930c3221b5933b2bf1a7ffe82ae74",
      "filename": "gdb/guile/scm-type.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/guile/scm-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/guile/scm-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-type.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -1245,7 +1245,7 @@ tyscm_lookup_typename (const char *type_name, const struct block *block)\n       else if (startswith (type_name, \"enum \"))\n \ttype = lookup_enum (type_name + 5, NULL);\n       else\n-\ttype = lookup_typename (current_language, get_current_arch (),\n+\ttype = lookup_typename (current_language,\n \t\t\t\ttype_name, block, 0);\n     }\n   catch (const gdb_exception &except)"
    },
    {
      "sha": "243f3023d3220466fc4b8dfd0e0cad4ebdb00345",
      "filename": "gdb/m2-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/m2-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/m2-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-exp.y?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -599,7 +599,6 @@ type\n \t:\tTYPENAME\n \t\t\t{ $$\n \t\t\t    = lookup_typename (pstate->language (),\n-\t\t\t\t\t       pstate->gdbarch (),\n \t\t\t\t\t       copy_name ($1).c_str (),\n \t\t\t\t\t       pstate->expression_context_block,\n \t\t\t\t\t       0);\n@@ -974,7 +973,7 @@ yylex (void)\n \t\t\t VAR_DOMAIN, 0).symbol;\n     if (sym && SYMBOL_CLASS (sym) == LOC_BLOCK)\n       return BLOCKNAME;\n-    if (lookup_typename (pstate->language (), pstate->gdbarch (),\n+    if (lookup_typename (pstate->language (),\n \t\t\t tmp.c_str (), pstate->expression_context_block, 1))\n       return TYPENAME;\n "
    },
    {
      "sha": "f7674cf1d0107389c1fb35d0d091dc169e769358",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -2326,7 +2326,7 @@ printf_wide_c_string (struct ui_file *stream, const char *format,\n   const gdb_byte *str;\n   size_t len;\n   struct gdbarch *gdbarch = get_type_arch (value_type (value));\n-  struct type *wctype = lookup_typename (current_language, gdbarch,\n+  struct type *wctype = lookup_typename (current_language,\n \t\t\t\t\t \"wchar_t\", NULL, 0);\n   int wcwidth = TYPE_LENGTH (wctype);\n \n@@ -2601,7 +2601,7 @@ ui_printf (const char *arg, struct ui_file *stream)\n \t    {\n \t      struct gdbarch *gdbarch\n \t\t= get_type_arch (value_type (val_args[i]));\n-\t      struct type *wctype = lookup_typename (current_language, gdbarch,\n+\t      struct type *wctype = lookup_typename (current_language,\n \t\t\t\t\t\t     \"wchar_t\", NULL, 0);\n \t      struct type *valtype;\n \t      const gdb_byte *bytes;"
    },
    {
      "sha": "5a6c2691f023c13f3134fefa69d13c3e25a9e751",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -758,7 +758,7 @@ typy_lookup_typename (const char *type_name, const struct block *block)\n       else if (startswith (type_name, \"enum \"))\n \ttype = lookup_enum (type_name + 5, NULL);\n       else\n-\ttype = lookup_typename (python_language, python_gdbarch,\n+\ttype = lookup_typename (python_language,\n \t\t\t\ttype_name, block, 0);\n     }\n   catch (const gdb_exception &except)"
    },
    {
      "sha": "650666eda2bb2fbd0107d721a4bbccc07923224b",
      "filename": "gdb/python/py-xmethods.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/python/py-xmethods.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/python/py-xmethods.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-xmethods.c?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -580,7 +580,7 @@ python_xmethod_worker::invoke (struct value *obj,\n     }\n   else\n     {\n-      res = allocate_value (lookup_typename (python_language, python_gdbarch,\n+      res = allocate_value (lookup_typename (python_language,\n \t\t\t\t\t     \"void\", NULL, 0));\n     }\n "
    },
    {
      "sha": "5587ebf5d7fcec52d080c6519807513955269d65",
      "filename": "gdb/rust-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/rust-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b858499daf0a824a518bac8bc13495ad856ab10d/gdb/rust-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.y?ref=b858499daf0a824a518bac8bc13495ad856ab10d",
      "patch": "@@ -2024,7 +2024,7 @@ rust_parser::rust_lookup_type (const char *name, const struct block *block)\n       return SYMBOL_TYPE (result.symbol);\n     }\n \n-  type = lookup_typename (language (), arch (), name, NULL, 1);\n+  type = lookup_typename (language (), name, NULL, 1);\n   if (type != NULL)\n     return type;\n "
    }
  ]
}