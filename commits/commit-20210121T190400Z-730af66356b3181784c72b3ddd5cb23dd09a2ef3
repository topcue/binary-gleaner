{
  "sha": "730af66356b3181784c72b3ddd5cb23dd09a2ef3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzMwYWY2NjM1NmIzMTgxNzg0YzcyYjNkZGQ1Y2IyM2RkMDlhMmVmMw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T19:03:51Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T19:04:00Z"
    },
    "message": "gdb/testsuite: improve logging in lib/tuiterm.exp\n\nHere's a bonus patch that applies on top of the other two.\n\nWhile debugging TUI test cases, it's hard to know what exactly is\nhappening in the little mind of the terminal emulator.  Add some logging\nfor all input processing.  Right now I'm interested in seeing what\nhappens to the cursor position, so made it so all operations log the\n\"before\" and \"after\" cursor position.  It should help see if any\noperation is not behaving as expected, w.r.t. the cursor position.\n\nHere are some examples of the logging found in gdb.log with this patch\napplied:\n\n    +++ Inserting string '+|'\n    +++   Inserted char '+', cursor: (0, 79) -> (1, 0)\n    +++   Inserted char '|', cursor: (1, 0) -> (1, 1)\n    +++ Inserted string '+|', cursor: (0, 79) -> (1, 1)\n    +++ Cursor Horizontal Absolute (80), cursor: (1, 1) -> (1, 79)\n\nIn the last line, note that the argument is 80 and we move to 79, that's\nbecause the position in the argument to the control sequence is 1-based,\nwhile our indexing is 0-based.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/tuiterm.exp (_log, _log_cur): New, use throughout.\n\nChange-Id: Ibf570d4b2867729ce65bea8c193343a8a846170d",
    "tree": {
      "sha": "96cd9c22de31dfb1253f24d5cb0ec4f6583df73f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/96cd9c22de31dfb1253f24d5cb0ec4f6583df73f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/730af66356b3181784c72b3ddd5cb23dd09a2ef3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/730af66356b3181784c72b3ddd5cb23dd09a2ef3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/730af66356b3181784c72b3ddd5cb23dd09a2ef3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/730af66356b3181784c72b3ddd5cb23dd09a2ef3/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a72d0f3d69896b5fcdc916e0547fe774dcb58614",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a72d0f3d69896b5fcdc916e0547fe774dcb58614",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a72d0f3d69896b5fcdc916e0547fe774dcb58614"
    }
  ],
  "stats": {
    "total": 452,
    "additions": 281,
    "deletions": 171
  },
  "files": [
    {
      "sha": "c2d96c4ff3860d85295654e06dcf234ae500de31",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/730af66356b3181784c72b3ddd5cb23dd09a2ef3/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/730af66356b3181784c72b3ddd5cb23dd09a2ef3/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=730af66356b3181784c72b3ddd5cb23dd09a2ef3",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-21  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* lib/tuiterm.exp (_log, _log_cur): New, use throughout.\n+\n 2021-01-21  Hannes Domani  <ssbssa@yahoo.de>\n \n \tPR python/19151"
    },
    {
      "sha": "4160586b615cf0e35ecb383e4c0b169240ad6fdd",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 277,
      "deletions": 171,
      "changes": 448,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/730af66356b3181784c72b3ddd5cb23dd09a2ef3/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/730af66356b3181784c72b3ddd5cb23dd09a2ef3/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=730af66356b3181784c72b3ddd5cb23dd09a2ef3",
      "patch": "@@ -63,6 +63,23 @@ namespace eval Term {\n \n     variable _resize_count\n \n+    proc _log { what } {\n+\tverbose -log \"+++ $what\"\n+    }\n+\n+    # Call BODY, then log WHAT along with the original and new cursor position.\n+    proc _log_cur { what body } {\n+\tvariable _cur_row\n+\tvariable _cur_col\n+\n+\tset orig_cur_row $_cur_row\n+\tset orig_cur_col $_cur_col\n+\n+\tuplevel $body\n+\n+\t_log \"$what, cursor: ($orig_cur_row, $orig_cur_col) -> ($_cur_row, $_cur_col)\"\n+    }\n+\n     # If ARG is empty, return DEF: otherwise ARG.  This is useful for\n     # defaulting arguments in CSIs.\n     proc _default {arg def} {\n@@ -98,222 +115,290 @@ namespace eval Term {\n \n     # Backspace.\n     proc _ctl_0x08 {} {\n-\tvariable _cur_col\n-\tincr _cur_col -1\n-\tif {$_cur_col < 0} {\n-\t    variable _cur_row\n-\t    variable _cols\n-\t    set _cur_col [expr {$_cols - 1}]\n-\t    incr _cur_row -1\n-\t    if {$_cur_row < 0} {\n-\t\tset _cur_row 0\n+\t_log_cur \"Backspace\" {\n+\t    variable _cur_col\n+\n+\t    incr _cur_col -1\n+\t    if {$_cur_col < 0} {\n+\t\tvariable _cur_row\n+\t\tvariable _cols\n+\n+\t\tset _cur_col [expr {$_cols - 1}]\n+\t\tincr _cur_row -1\n+\t\tif {$_cur_row < 0} {\n+\t\t    set _cur_row 0\n+\t\t}\n \t    }\n \t}\n     }\n \n     # Linefeed.\n     proc _ctl_0x0a {} {\n-\tvariable _cur_row\n-\tvariable _rows\n-\tincr _cur_row 1\n-\tif {$_cur_row >= $_rows} {\n-\t    error \"FIXME scroll\"\n+\t_log_cur \"Line feed\" {\n+\t    variable _cur_row\n+\t    variable _rows\n+\n+\t    incr _cur_row 1\n+\t    if {$_cur_row >= $_rows} {\n+\t\terror \"FIXME scroll\"\n+\t    }\n \t}\n     }\n \n     # Carriage return.\n     proc _ctl_0x0d {} {\n-\tvariable _cur_col\n-\tset _cur_col 0\n+\t_log_cur \"Carriage return\" {\n+\t    variable _cur_col\n+\n+\t    set _cur_col 0\n+\t}\n     }\n \n     # Insert Character.\n     #\n     # https://vt100.net/docs/vt510-rm/ICH.html\n     proc _csi_@ {args} {\n \tset n [_default [lindex $args 0] 1]\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tvariable _chars\n-\tset in_x $_cur_col\n-\tset out_x [expr {$_cur_col + $n}]\n-\tfor {set i 0} {$i < $n} {incr i} {\n-\t    set _chars($out_x,$_cur_row) $_chars($in_x,$_cur_row)\n-\t    incr in_x\n-\t    incr out_x\n+\n+\t_log_cur \"Insert Character ($n)\" {\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\t    variable _chars\n+\n+\t    set in_x $_cur_col\n+\t    set out_x [expr {$_cur_col + $n}]\n+\t    for {set i 0} {$i < $n} {incr i} {\n+\t\tset _chars($out_x,$_cur_row) $_chars($in_x,$_cur_row)\n+\t\tincr in_x\n+\t\tincr out_x\n+\t    }\n \t}\n     }\n \n     # Cursor Up.\n     #\n     # https://vt100.net/docs/vt510-rm/CUU.html\n     proc _csi_A {args} {\n-\tvariable _cur_row\n \tset arg [_default [lindex $args 0] 1]\n-\tset _cur_row [expr {max ($_cur_row - $arg, 0)}]\n+\n+\t_log_cur \"Cursor Up ($arg)\" {\n+\t    variable _cur_row\n+\n+\t    set _cur_row [expr {max ($_cur_row - $arg, 0)}]\n+\t}\n     }\n \n     # Cursor Down.\n     #\n     # https://vt100.net/docs/vt510-rm/CUD.html\n     proc _csi_B {args} {\n-\tvariable _cur_row\n-\tvariable _rows\n \tset arg [_default [lindex $args 0] 1]\n-\tset _cur_row [expr {min ($_cur_row + $arg, $_rows)}]\n+\n+\t_log_cur \"Cursor Down ($arg)\" {\n+\t    variable _cur_row\n+\t    variable _rows\n+\n+\t    set _cur_row [expr {min ($_cur_row + $arg, $_rows)}]\n+\t}\n     }\n \n     # Cursor Forward.\n     #\n     # https://vt100.net/docs/vt510-rm/CUF.html\n     proc _csi_C {args} {\n-\tvariable _cur_col\n-\tvariable _cols\n \tset arg [_default [lindex $args 0] 1]\n-\tset _cur_col [expr {min ($_cur_col + $arg, $_cols)}]\n+\n+\t_log_cur \"Cursor Forward ($arg)\" {\n+\t    variable _cur_col\n+\t    variable _cols\n+\n+\t    set _cur_col [expr {min ($_cur_col + $arg, $_cols)}]\n+\t}\n     }\n \n     # Cursor Backward.\n     #\n     # https://vt100.net/docs/vt510-rm/CUB.html\n     proc _csi_D {args} {\n-\tvariable _cur_col\n \tset arg [_default [lindex $args 0] 1]\n-\tset _cur_col [expr {max ($_cur_col - $arg, 0)}]\n+\n+\t_log_cur \"Cursor Backward ($arg)\" {\n+\t    variable _cur_col\n+\n+\t    set _cur_col [expr {max ($_cur_col - $arg, 0)}]\n+\t}\n     }\n \n     # Cursor Next Line.\n     #\n     # https://vt100.net/docs/vt510-rm/CNL.html\n     proc _csi_E {args} {\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tvariable _rows\n \tset arg [_default [lindex $args 0] 1]\n-\tset _cur_col 0\n-\tset _cur_row [expr {min ($_cur_row + $arg, $_rows)}]\n+\n+\t_log_cur \"Cursor Next Line ($arg)\" {\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\t    variable _rows\n+\n+\t    set _cur_col 0\n+\t    set _cur_row [expr {min ($_cur_row + $arg, $_rows)}]\n+\t}\n     }\n \n     # Cursor Previous Line.\n     #\n     # https://vt100.net/docs/vt510-rm/CPL.html\n     proc _csi_F {args} {\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tvariable _rows\n \tset arg [_default [lindex $args 0] 1]\n-\tset _cur_col 0\n-\tset _cur_row [expr {max ($_cur_row - $arg, 0)}]\n+\n+\t_log_cur \"Cursor Previous Line ($arg)\" {\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\t    variable _rows\n+\n+\t    set _cur_col 0\n+\t    set _cur_row [expr {max ($_cur_row - $arg, 0)}]\n+\t}\n     }\n \n     # Cursor Horizontal Absolute.\n     #\n     # https://vt100.net/docs/vt510-rm/CHA.html\n     proc _csi_G {args} {\n-\tvariable _cur_col\n-\tvariable _cols\n \tset arg [_default [lindex $args 0] 1]\n-\tset _cur_col [expr {min ($arg - 1, $_cols)}]\n+\n+\t_log_cur \"Cursor Horizontal Absolute ($arg)\" {\n+\t    variable _cur_col\n+\t    variable _cols\n+\n+\t    set _cur_col [expr {min ($arg - 1, $_cols)}]\n+\t}\n     }\n \n     # Cursor Position.\n     #\n     # https://vt100.net/docs/vt510-rm/CUP.html\n     proc _csi_H {args} {\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tset _cur_row [expr {[_default [lindex $args 0] 1] - 1}]\n-\tset _cur_col [expr {[_default [lindex $args 1] 1] - 1}]\n+\tset row [_default [lindex $args 0] 1]\n+\tset col [_default [lindex $args 1] 1]\n+\n+\t_log_cur \"Cursor Position ($row, $col)\" {\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\n+\t    set _cur_row [expr {$row - 1}]\n+\t    set _cur_col [expr {$col - 1}]\n+\t}\n     }\n \n     # Cursor Horizontal Forward Tabulation.\n     #\n     # https://vt100.net/docs/vt510-rm/CHT.html\n     proc _csi_I {args} {\n \tset n [_default [lindex $args 0] 1]\n-\tvariable _cur_col\n-\tvariable _cols\n-\tincr _cur_col [expr {$n * 8 - $_cur_col % 8}]\n-\tif {$_cur_col >= $_cols} {\n-\t    set _cur_col [expr {$_cols - 1}]\n+\n+\t_log_cur \"Cursor Horizontal Forward Tabulation ($n)\" {\n+\t    variable _cur_col\n+\t    variable _cols\n+\n+\t    incr _cur_col [expr {$n * 8 - $_cur_col % 8}]\n+\t    if {$_cur_col >= $_cols} {\n+\t\tset _cur_col [expr {$_cols - 1}]\n+\t    }\n \t}\n     }\n \n     # Erase in Display.\n     #\n     # https://vt100.net/docs/vt510-rm/ED.html\n     proc _csi_J {args} {\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tvariable _rows\n-\tvariable _cols\n \tset arg [_default [lindex $args 0] 0]\n-\tif {$arg == 0} {\n-\t    _clear_in_line $_cur_col $_cols $_cur_row\n-\t    _clear_lines [expr {$_cur_row + 1}] $_rows\n-\t} elseif {$arg == 1} {\n-\t    _clear_lines 0 [expr {$_cur_row - 1}]\n-\t    _clear_in_line 0 $_cur_col $_cur_row\n-\t} elseif {$arg == 2} {\n-\t    _clear_lines 0 $_rows\n+\n+\t_log_cur \"Erase in Display ($arg)\" {\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\t    variable _rows\n+\t    variable _cols\n+\n+\t    if {$arg == 0} {\n+\t\t_clear_in_line $_cur_col $_cols $_cur_row\n+\t\t_clear_lines [expr {$_cur_row + 1}] $_rows\n+\t    } elseif {$arg == 1} {\n+\t\t_clear_lines 0 [expr {$_cur_row - 1}]\n+\t\t_clear_in_line 0 $_cur_col $_cur_row\n+\t    } elseif {$arg == 2} {\n+\t\t_clear_lines 0 $_rows\n+\t    }\n \t}\n     }\n \n     # Erase in Line.\n     #\n     # https://vt100.net/docs/vt510-rm/EL.html\n     proc _csi_K {args} {\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tvariable _cols\n \tset arg [_default [lindex $args 0] 0]\n-\tif {$arg == 0} {\n-\t    # From cursor to end.\n-\t    _clear_in_line $_cur_col $_cols $_cur_row\n-\t} elseif {$arg == 1} {\n-\t    _clear_in_line 0 $_cur_col $_cur_row\n-\t} elseif {$arg == 2} {\n-\t    _clear_in_line 0 $_cols $_cur_row\n+\n+\t_log_cur \"Erase in Line ($arg)\" {\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\t    variable _cols\n+\n+\t    if {$arg == 0} {\n+\t\t# From cursor to end.\n+\t\t_clear_in_line $_cur_col $_cols $_cur_row\n+\t    } elseif {$arg == 1} {\n+\t\t_clear_in_line 0 $_cur_col $_cur_row\n+\t    } elseif {$arg == 2} {\n+\t\t_clear_in_line 0 $_cols $_cur_row\n+\t    }\n \t}\n     }\n \n     # Delete line.\n     #\n     # https://vt100.net/docs/vt510-rm/DL.html\n     proc _csi_M {args} {\n-\tvariable _cur_row\n-\tvariable _rows\n-\tvariable _cols\n-\tvariable _chars\n \tset count [_default [lindex $args 0] 1]\n-\tset y $_cur_row\n-\tset next_y [expr {$y + 1}]\n-\twhile {$count > 0 && $next_y < $_rows} {\n-\t    for {set x 0} {$x < $_cols} {incr x} {\n-\t\tset _chars($x,$y) $_chars($x,$next_y)\n+\n+\t_log_cur \"Delete line ($count)\" {\n+\t    variable _cur_row\n+\t    variable _rows\n+\t    variable _cols\n+\t    variable _chars\n+\n+\t    set y $_cur_row\n+\t    set next_y [expr {$y + 1}]\n+\t    while {$count > 0 && $next_y < $_rows} {\n+\t\tfor {set x 0} {$x < $_cols} {incr x} {\n+\t\t    set _chars($x,$y) $_chars($x,$next_y)\n+\t\t}\n+\t\tincr y\n+\t\tincr next_y\n+\t\tincr count -1\n \t    }\n-\t    incr y\n-\t    incr next_y\n-\t    incr count -1\n+\t    _clear_lines $next_y $_rows\n \t}\n-\t_clear_lines $next_y $_rows\n     }\n \n     # Erase chars.\n     #\n     # https://vt100.net/docs/vt510-rm/ECH.html\n     proc _csi_X {args} {\n \tset n [_default [lindex $args 0] 1]\n-\t# Erase characters but don't move cursor.\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tvariable _attrs\n-\tvariable _chars\n-\tset lattr [array get _attrs]\n-\tset x $_cur_col\n-\tfor {set i 0} {$i < $n} {incr i} {\n-\t    set _chars($x,$_cur_row) [list \" \" $lattr]\n-\t    incr x\n+\n+\t_log_cur \"Erase chars ($n)\" {\n+\t    # Erase characters but don't move cursor.\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\t    variable _attrs\n+\t    variable _chars\n+\n+\t    set lattr [array get _attrs]\n+\t    set x $_cur_col\n+\t    for {set i 0} {$i < $n} {incr i} {\n+\t\tset _chars($x,$_cur_row) [list \" \" $lattr]\n+\t\tincr x\n+\t    }\n \t}\n     }\n \n@@ -322,96 +407,117 @@ namespace eval Term {\n     # https://vt100.net/docs/vt510-rm/CBT.html\n     proc _csi_Z {args} {\n \tset n [_default [lindex $args 0] 1]\n-\tvariable _cur_col\n-\tset _cur_col [expr {max (int (($_cur_col - 1) / 8) * 8 - ($n - 1) * 8, 0)}]\n+\n+\t_log_cur \"Cursor Backward Tabulation ($n)\" {\n+\t    variable _cur_col\n+\n+\t    set _cur_col [expr {max (int (($_cur_col - 1) / 8) * 8 - ($n - 1) * 8, 0)}]\n+\t}\n     }\n \n     # Repeat.\n     #\n     # https://www.xfree86.org/current/ctlseqs.html (See `(REP)`)\n     proc _csi_b {args} {\n-\tvariable _last_char\n \tset n [_default [lindex $args 0] 1]\n-\t_insert [string repeat $_last_char $n]\n+\n+\t_log_cur \"Repeat ($n)\" {\n+\t    variable _last_char\n+\n+\t    _insert [string repeat $_last_char $n]\n+\t}\n     }\n \n     # Vertical Line Position Absolute.\n     #\n     # https://vt100.net/docs/vt510-rm/VPA.html\n     proc _csi_d {args} {\n-\tvariable _cur_row\n-\tset _cur_row [expr {[_default [lindex $args 0] 1] - 1}]\n+\tset row [_default [lindex $args 0] 1]\n+\n+\t_log_cur \"Vertical Line Position Absolute ($row)\" {\n+\t    variable _cur_row\n+\n+\t    set _cur_row [expr {$row - 1}]\n+\t}\n     }\n \n     # Select Graphic Rendition.\n     #\n     # https://vt100.net/docs/vt510-rm/SGR.html\n     proc _csi_m {args} {\n-\tvariable _attrs\n-\tforeach item $args {\n-\t    switch -exact -- $item {\n-\t\t\"\" - 0 {\n-\t\t    set _attrs(intensity) normal\n-\t\t    set _attrs(fg) default\n-\t\t    set _attrs(bg) default\n-\t\t    set _attrs(underline) 0\n-\t\t    set _attrs(reverse) 0\n-\t\t}\n-\t\t1 {\n-\t\t    set _attrs(intensity) bold\n-\t\t}\n-\t\t2 {\n-\t\t    set _attrs(intensity) dim\n-\t\t}\n-\t\t4 {\n-\t\t    set _attrs(underline) 1\n-\t\t}\n-\t\t7 {\n-\t\t    set _attrs(reverse) 1\n-\t\t}\n-\t\t22 {\n-\t\t    set _attrs(intensity) normal\n-\t\t}\n-\t\t24 {\n-\t\t    set _attrs(underline) 0\n-\t\t}\n-\t\t27 {\n-\t\t    set _attrs(reverse) 1\n-\t\t}\n-\t\t30 - 31 - 32 - 33 - 34 - 35 - 36 - 37 {\n-\t\t    set _attrs(fg) $item\n-\t\t}\n-\t\t39 {\n-\t\t    set _attrs(fg) default\n-\t\t}\n-\t\t40 - 41 - 42 - 43 - 44 - 45 - 46 - 47 {\n-\t\t    set _attrs(bg) $item\n-\t\t}\n-\t\t49 {\n-\t\t    set _attrs(bg) default\n-\t\t}\n-\t    }\n+\t_log_cur \"Select Graphic Rendition ([join $args {, }])\" {\n+\t  variable _attrs\n+\n+\t  foreach item $args {\n+\t      switch -exact -- $item {\n+\t\t  \"\" - 0 {\n+\t\t      set _attrs(intensity) normal\n+\t\t      set _attrs(fg) default\n+\t\t      set _attrs(bg) default\n+\t\t      set _attrs(underline) 0\n+\t\t      set _attrs(reverse) 0\n+\t\t  }\n+\t\t  1 {\n+\t\t      set _attrs(intensity) bold\n+\t\t  }\n+\t\t  2 {\n+\t\t      set _attrs(intensity) dim\n+\t\t  }\n+\t\t  4 {\n+\t\t      set _attrs(underline) 1\n+\t\t  }\n+\t\t  7 {\n+\t\t      set _attrs(reverse) 1\n+\t\t  }\n+\t\t  22 {\n+\t\t      set _attrs(intensity) normal\n+\t\t  }\n+\t\t  24 {\n+\t\t      set _attrs(underline) 0\n+\t\t  }\n+\t\t  27 {\n+\t\t      set _attrs(reverse) 1\n+\t\t  }\n+\t\t  30 - 31 - 32 - 33 - 34 - 35 - 36 - 37 {\n+\t\t      set _attrs(fg) $item\n+\t\t  }\n+\t\t  39 {\n+\t\t      set _attrs(fg) default\n+\t\t  }\n+\t\t  40 - 41 - 42 - 43 - 44 - 45 - 46 - 47 {\n+\t\t      set _attrs(bg) $item\n+\t\t  }\n+\t\t  49 {\n+\t\t      set _attrs(bg) default\n+\t\t  }\n+\t      }\n+\t  }\n \t}\n     }\n \n     # Insert string at the cursor location.\n     proc _insert {str} {\n-\tverbose \"INSERT <<$str>>\"\n-\tvariable _cur_col\n-\tvariable _cur_row\n-\tvariable _rows\n-\tvariable _cols\n-\tvariable _attrs\n-\tvariable _chars\n-\tset lattr [array get _attrs]\n-\tforeach char [split $str {}] {\n-\t    set _chars($_cur_col,$_cur_row) [list $char $lattr]\n-\t    incr _cur_col\n-\t    if {$_cur_col >= $_cols} {\n-\t\tset _cur_col 0\n-\t\tincr _cur_row\n-\t\tif {$_cur_row >= $_rows} {\n-\t\t    error \"FIXME scroll\"\n+\t_log_cur \"Inserted string '$str'\" {\n+\t    _log \"Inserting string '$str'\"\n+\n+\t    variable _cur_col\n+\t    variable _cur_row\n+\t    variable _rows\n+\t    variable _cols\n+\t    variable _attrs\n+\t    variable _chars\n+\t    set lattr [array get _attrs]\n+\t    foreach char [split $str {}] {\n+\t\t  _log_cur \"  Inserted char '$char'\" {\n+\t\t    set _chars($_cur_col,$_cur_row) [list $char $lattr]\n+\t\t    incr _cur_col\n+\t\t    if {$_cur_col >= $_cols} {\n+\t\t\tset _cur_col 0\n+\t\t\tincr _cur_row\n+\t\t\tif {$_cur_row >= $_rows} {\n+\t\t\t    error \"FIXME scroll\"\n+\t\t\t}\n+\t\t    }\n \t\t}\n \t    }\n \t}\n@@ -461,17 +567,17 @@ namespace eval Term {\n \t\t-re \"^\\[\\x07\\x08\\x0a\\x0d\\]\" {\n \t\t    scan $expect_out(0,string) %c val\n \t\t    set hexval [format \"%02x\" $val]\n-\t\t    verbose \"+++ _ctl_0x${hexval}\"\n+\t\t    _log \"wait_for: _ctl_0x${hexval}\"\n \t\t    _ctl_0x${hexval}\n \t\t}\n \t\t-re \"^\\x1b(\\[0-9a-zA-Z\\])\" {\n-\t\t    verbose \"+++ unsupported escape\"\n+\t\t    _log \"wait_for: unsupported escape\"\n \t\t    error \"unsupported escape\"\n \t\t}\n \t\t-re \"^\\x1b\\\\\\[(\\[0-9;\\]*)(\\[a-zA-Z@\\])\" {\n \t\t    set cmd $expect_out(2,string)\n \t\t    set params [split $expect_out(1,string) \";\"]\n-\t\t    verbose \"+++ _csi_$cmd <<<$expect_out(1,string)>>>\"\n+\t\t    _log \"wait_for: _csi_$cmd <<<$expect_out(1,string)>>>\"\n \t\t    eval _csi_$cmd $params\n \t\t}\n \t\t-re \"^\\[^\\x07\\x08\\x0a\\x0d\\x1b\\]+\" {"
    }
  ]
}