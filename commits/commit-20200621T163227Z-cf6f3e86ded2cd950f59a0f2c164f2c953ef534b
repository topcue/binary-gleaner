{
  "sha": "cf6f3e86ded2cd950f59a0f2c164f2c953ef534b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Y2ZjNlODZkZWQyY2Q5NTBmNTlhMGYyYzE2NGYyYzk1M2VmNTM0Yg==",
  "commit": {
    "author": {
      "name": "Rainer Orth",
      "email": "ro@CeBiTec.Uni-Bielefeld.DE",
      "date": "2020-06-21T16:32:27Z"
    },
    "committer": {
      "name": "Rainer Orth",
      "email": "ro@CeBiTec.Uni-Bielefeld.DE",
      "date": "2020-06-21T16:32:27Z"
    },
    "message": "[PR gdb/25939] Move push_target call earlier in procfs.c\n\nSince the multi-target patch, the run command fails on Solaris with an\nassertion failure even for a trivial program:\n\n$ ./gdb -D ./data-directory ./hello\nGNU gdb (GDB) 10.0.50.20200106-git\n[...]\nReading symbols from ./hello...\n(gdb) run\nStarting program: /vol/obj/gnu/gdb/gdb/reghunt/no-resync/122448/gdb/hello\n/vol/src/gnu/gdb/hg/master/reghunt/gdb/thread.c:336: internal-error:\nthread_info::thread_info(inferior*, ptid_t): Assertion `inf_ != NULL'\nfailed.\n\nHere's the start of the corresponding stack trace:\n\n#0  internal_error (\n    file=file@entry=0x966150\n\"/vol/src/gnu/gdb/hg/master/reghunt/gdb/thread.c\", line=line@entry=336,\nfmt=0x9ddb94 \"%s: Assertion `%s' failed.\")\n    at /vol/src/gnu/gdb/hg/master/reghunt/gdb/gdbsupport/errors.c:51\n#1  0x0000000000ef81f4 in thread_info::thread_info (this=0x1212020,\n    inf_=<optimized out>, ptid_=...)\n    at /vol/src/gnu/gdb/hg/master/reghunt/gdb/thread.c:344\n#2  0x0000000000ef82cd in new_thread (inf=inf@entry=0x0, ptid=...)\n    at /vol/src/gnu/gdb/hg/master/reghunt/gdb/thread.c:239\n#3  0x0000000000efac3c in add_thread_silent (\n    targ=targ@entry=0x11b0940 <the_procfs_target>, ptid=...)\n    at /vol/src/gnu/gdb/hg/master/reghunt/gdb/thread.c:304\n#4  0x0000000000d90692 in procfs_target::create_inferior (\n    this=0x11b0940 <the_procfs_target>,\n    exec_file=0x13dbef0\n\"/vol/obj/gnu/gdb/gdb/reghunt/no-resync/122448/gdb/hello\", allargs=\"\",\nenv=0x13c48f0, from_tty=<optimized out>)\n    at /vol/src/gnu/gdb/hg/master/reghunt/gdb/gdbsupport/ptid.h:47\n#5  0x0000000000c84e64 in run_command_1 (args=<optimized out>, from_tty=1,\n    run_how=run_how@entry=RUN_NORMAL)\n    at /vol/gcc-9/include/c++/9.1.0/bits/basic_string.h:263\n#6  0x0000000000c85007 in run_command (args=<optimized out>,\n    from_tty=<optimized out>)\n    at /vol/src/gnu/gdb/hg/master/reghunt/gdb/infcmd.c:687\n\nLooking closer, I found that in add_thread_silent as called from\nprocfs.c (procfs_target::create_inferior) find_inferior_ptid returns\nNULL.  The all_inferiors (targ) iterator comes up empty.\n\nGoing from there, I see that in add_thread_silent\n\nm_target_stack = {m_top = file_stratum, m_stack = {0x20190e0\n<the_dummy_target>, 0x200b8c0 <exec_ops>, 0x0, 0x0, 0x0, 0x0, 0x0}}}\n\ni.e. the_procfs_target is missing compared to the_amd64_linux_nat_target\non Linux/x86_64.\n\nMoving the push_target call earlier allows debugging to get over the\ninitial assertion failure.  I run instead into\n\nprocfs: couldn't find pid 0 in procinfo list.\n\nwhich is fixed by\n\n\thttps://sourceware.org/pipermail/gdb-patches/2020-June/169674.html\n\nBoth patches tested together on amd64-pc-solaris2.11.\n\n\tPR gdb/25939\n\t* procfs.c (procfs_target::procfs_init_inferior): Move push_target\n\tcall ...\n\t(procfs_target::create_inferior): ... here.",
    "tree": {
      "sha": "d3d92bf8b8911a689cdf14f9288cf2d2936210fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d3d92bf8b8911a689cdf14f9288cf2d2936210fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b/comments",
  "author": {
    "login": "rorth",
    "id": 3930951,
    "node_id": "MDQ6VXNlcjM5MzA5NTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rorth",
    "html_url": "https://github.com/rorth",
    "followers_url": "https://api.github.com/users/rorth/followers",
    "following_url": "https://api.github.com/users/rorth/following{/other_user}",
    "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rorth/subscriptions",
    "organizations_url": "https://api.github.com/users/rorth/orgs",
    "repos_url": "https://api.github.com/users/rorth/repos",
    "events_url": "https://api.github.com/users/rorth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rorth/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "rorth",
    "id": 3930951,
    "node_id": "MDQ6VXNlcjM5MzA5NTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rorth",
    "html_url": "https://github.com/rorth",
    "followers_url": "https://api.github.com/users/rorth/followers",
    "following_url": "https://api.github.com/users/rorth/following{/other_user}",
    "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rorth/subscriptions",
    "organizations_url": "https://api.github.com/users/rorth/orgs",
    "repos_url": "https://api.github.com/users/rorth/repos",
    "events_url": "https://api.github.com/users/rorth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rorth/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1e92785005ce880a5fac9d022f05cdcff91c3091",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e92785005ce880a5fac9d022f05cdcff91c3091",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1e92785005ce880a5fac9d022f05cdcff91c3091"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 10,
    "deletions": 5
  },
  "files": [
    {
      "sha": "1f614d5a42cd4f1fdfe8d0a80eb7129dcc374a67",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cf6f3e86ded2cd950f59a0f2c164f2c953ef534b",
      "patch": "@@ -1,3 +1,10 @@\n+2020-06-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR gdb/25939\n+\t* procfs.c (procfs_target::procfs_init_inferior): Move push_target\n+\tcall ...\n+\t(procfs_target::create_inferior): ... here.\n+\n 2020-06-21  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* exec.c (validate_exec_file): Ensure the build-id is up to"
    },
    {
      "sha": "7abd6b97d061c55ac06971e011cf2d3fe77d18bf",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf6f3e86ded2cd950f59a0f2c164f2c953ef534b/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=cf6f3e86ded2cd950f59a0f2c164f2c953ef534b",
      "patch": "@@ -2781,11 +2781,6 @@ procfs_target::procfs_init_inferior (int pid)\n   int fail;\n   int lwpid;\n \n-  /* This routine called on the parent side (GDB side)\n-     after GDB forks the inferior.  */\n-  if (!target_is_pushed (this))\n-    push_target (this);\n-\n   pi = create_procinfo (pid, 0);\n   if (pi == NULL)\n     perror (_(\"procfs: out of memory in 'init_inferior'\"));\n@@ -3006,6 +3001,9 @@ procfs_target::create_inferior (const char *exec_file,\n       shell_file = tryname;\n     }\n \n+  if (!target_is_pushed (this))\n+    push_target (this);\n+\n   pid = fork_inferior (exec_file, allargs, env, procfs_set_exec_trap,\n \t\t       NULL, NULL, shell_file, NULL);\n "
    }
  ]
}