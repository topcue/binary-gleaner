{
  "sha": "9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWFlZDQ4MGMzYTcyNWQzNjUxZDkwMzVjYmEwNWMyZGFhZWI1ZDdkMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-29T01:38:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-29T01:52:21Z"
    },
    "message": "Turn target_have_steppable_watchpoint into function\n\nThis changes the object-like macro target_have_steppable_watchpoint\ninto an inline function.\n\ngdb/ChangeLog\n2020-09-28  Tom Tromey  <tom@tromey.com>\n\n\t* infrun.c (displaced_step_fixup, thread_still_needs_step_over)\n\t(handle_signal_stop): Update.\n\t* procfs.c (procfs_target::insert_watchpoint): Update.\n\t* target.h (target_have_steppable_watchpoint): Now a function.",
    "tree": {
      "sha": "62bc845a9f1d020027cf69b875ae4823aceb2610",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/62bc845a9f1d020027cf69b875ae4823aceb2610"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8a3ecb79b031d578cbdbac5e70784c157ff6387d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a3ecb79b031d578cbdbac5e70784c157ff6387d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8a3ecb79b031d578cbdbac5e70784c157ff6387d"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 16,
    "deletions": 6
  },
  "files": [
    {
      "sha": "fcfa751fd7f8a869480dde6f909424d5241e9618",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-28  Tom Tromey  <tom@tromey.com>\n+\n+\t* infrun.c (displaced_step_fixup, thread_still_needs_step_over)\n+\t(handle_signal_stop): Update.\n+\t* procfs.c (procfs_target::insert_watchpoint): Update.\n+\t* target.h (target_have_steppable_watchpoint): Now a function.\n+\n 2020-09-28  Tom Tromey  <tom@tromey.com>\n \n \t* infrun.c (set_schedlock_func): Update."
    },
    {
      "sha": "daf10417842fecde9f066a4c767f34ab452745ea",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
      "patch": "@@ -1889,7 +1889,7 @@ displaced_step_fixup (thread_info *event_thread, enum gdb_signal signal)\n   if (signal == GDB_SIGNAL_TRAP\n       && !(target_stopped_by_watchpoint ()\n \t   && (gdbarch_have_nonsteppable_watchpoint (displaced->step_gdbarch)\n-\t       || target_have_steppable_watchpoint)))\n+\t       || target_have_steppable_watchpoint ())))\n     {\n       /* Fix up the resulting state.  */\n       gdbarch_displaced_step_fixup (displaced->step_gdbarch,\n@@ -2811,7 +2811,7 @@ thread_still_needs_step_over (struct thread_info *tp)\n     what |= STEP_OVER_BREAKPOINT;\n \n   if (tp->stepping_over_watchpoint\n-      && !target_have_steppable_watchpoint)\n+      && !target_have_steppable_watchpoint ())\n     what |= STEP_OVER_WATCHPOINT;\n \n   return what;\n@@ -5933,7 +5933,7 @@ handle_signal_stop (struct execution_control_state *ecs)\n   /* If necessary, step over this watchpoint.  We'll be back to display\n      it in a moment.  */\n   if (stopped_by_watchpoint\n-      && (target_have_steppable_watchpoint\n+      && (target_have_steppable_watchpoint ()\n \t  || gdbarch_have_nonsteppable_watchpoint (gdbarch)))\n     {\n       /* At this point, we are stopped at an instruction which has"
    },
    {
      "sha": "c017f4a15517869f0fd3ec955831e05020ac691d",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
      "patch": "@@ -3085,7 +3085,7 @@ procfs_target::insert_watchpoint (CORE_ADDR addr, int len,\n \t\t\t\t  enum target_hw_bp_type type,\n \t\t\t\t  struct expression *cond)\n {\n-  if (!target_have_steppable_watchpoint\n+  if (!target_have_steppable_watchpoint ()\n       && !gdbarch_have_nonsteppable_watchpoint (target_gdbarch ()))\n     /* When a hardware watchpoint fires off the PC will be left at\n        the instruction following the one which caused the"
    },
    {
      "sha": "695f1b2b7f6497185b40c28fed7698f7d9424534",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9aed480c3a725d3651d9035cba05c2daaeb5d7d0/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
      "patch": "@@ -2009,8 +2009,11 @@ extern gdb::byte_vector target_thread_info_to_thread_handle\n \n /* Non-zero if we have steppable watchpoints  */\n \n-#define target_have_steppable_watchpoint \\\n-  (current_top_target ()->have_steppable_watchpoint ())\n+static inline bool\n+target_have_steppable_watchpoint ()\n+{\n+  return current_top_target ()->have_steppable_watchpoint ();\n+}\n \n /* Provide defaults for hardware watchpoint functions.  */\n "
    }
  ]
}