{
  "sha": "db3ad2f031d4da70db35977abbcede0399d81d6b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGIzYWQyZjAzMWQ0ZGE3MGRiMzU5NzdhYmJjZWRlMDM5OWQ4MWQ2Yg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-19T16:41:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-12-12T18:47:40Z"
    },
    "message": "Ravenscar port for RISC-V\n\nThis adds Ravenscar support to gdb for RISC-V targets.\n\nThis was tested internally using AdaCore's test suite and qemu.\n\ngdb/ChangeLog\n2019-12-12  Tom Tromey  <tromey@adacore.com>\n\n\t* Makefile.in (ALL_TARGET_OBS): Add riscv-ravenscar-thread.o.\n\t(HFILES_NO_SRCDIR): Add riscv-ravenscar-thread.h.\n\t(ALLDEPFILES): Add riscv-ravenscar-thread.c.\n\t* configure.tgt (riscv-*-*): Add riscv-ravenscar-thread.o.\n\t* riscv-ravenscar-thread.c: New file.\n\t* riscv-ravenscar-thread.h: New file.\n\t* riscv-tdep.c (riscv_gdbarch_init): Call\n\tregister_riscv_ravenscar_ops.\n\nChange-Id: Ic47a3b3cfbbe80c2c82a5f48d2e0481845cac8b0",
    "tree": {
      "sha": "d1f99732683aad6b7ff3c45a573668215d7f86c6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1f99732683aad6b7ff3c45a573668215d7f86c6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/db3ad2f031d4da70db35977abbcede0399d81d6b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db3ad2f031d4da70db35977abbcede0399d81d6b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/db3ad2f031d4da70db35977abbcede0399d81d6b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db3ad2f031d4da70db35977abbcede0399d81d6b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2ffe5b9c792fe78dbbcbe31b6fea751285df8876",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ffe5b9c792fe78dbbcbe31b6fea751285df8876",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2ffe5b9c792fe78dbbcbe31b6fea751285df8876"
    }
  ],
  "stats": {
    "total": 187,
    "additions": 186,
    "deletions": 1
  },
  "files": [
    {
      "sha": "766cff499e3666c604d3ed3ab334400f670e29a9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=db3ad2f031d4da70db35977abbcede0399d81d6b",
      "patch": "@@ -1,3 +1,14 @@\n+2019-12-12  Tom Tromey  <tromey@adacore.com>\n+\n+\t* Makefile.in (ALL_TARGET_OBS): Add riscv-ravenscar-thread.o.\n+\t(HFILES_NO_SRCDIR): Add riscv-ravenscar-thread.h.\n+\t(ALLDEPFILES): Add riscv-ravenscar-thread.c.\n+\t* configure.tgt (riscv-*-*): Add riscv-ravenscar-thread.o.\n+\t* riscv-ravenscar-thread.c: New file.\n+\t* riscv-ravenscar-thread.h: New file.\n+\t* riscv-tdep.c (riscv_gdbarch_init): Call\n+\tregister_riscv_ravenscar_ops.\n+\n 2019-12-12  Tom Tromey  <tromey@adacore.com>\n \n \t* gdbsupport/thread-pool.c (set_thread_name): Use"
    },
    {
      "sha": "fa5c820b918e892cc1f9a190a73f4ebc979c03b3",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=db3ad2f031d4da70db35977abbcede0399d81d6b",
      "patch": "@@ -777,6 +777,7 @@ ALL_TARGET_OBS = \\\n \travenscar-thread.o \\\n \triscv-fbsd-tdep.o \\\n \triscv-linux-tdep.o \\\n+\triscv-ravenscar-thread.o \\\n \triscv-tdep.o \\\n \trl78-tdep.o \\\n \trs6000-aix-tdep.o \\\n@@ -1380,6 +1381,7 @@ HFILES_NO_SRCDIR = \\\n \tremote-fileio.h \\\n \tremote-notif.h \\\n \triscv-fbsd-tdep.h \\\n+\triscv-ravenscar-thread.h \\\n \triscv-tdep.h \\\n \trs6000-aix-tdep.h \\\n \trs6000-tdep.h \\\n@@ -2299,6 +2301,7 @@ ALLDEPFILES = \\\n \triscv-fbsd-tdep.c \\\n \triscv-linux-nat.c \\\n \triscv-linux-tdep.c \\\n+\triscv-ravenscar-thread.c \\\n \triscv-tdep.c \\\n \trl78-tdep.c \\\n \trs6000-lynx178-tdep.c \\"
    },
    {
      "sha": "b3717c7a80cff31780b2773956ef408f6744e92a",
      "filename": "gdb/configure.tgt",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.tgt?ref=db3ad2f031d4da70db35977abbcede0399d81d6b",
      "patch": "@@ -85,7 +85,8 @@ ia64*-*-*)\n \t;;\n \n riscv*-*-*)\n-\tcpu_obs=\"riscv-tdep.o arch/riscv.o\";;\n+\tcpu_obs=\"riscv-tdep.o arch/riscv.o \\\n+\t         ravenscar-thread.o riscv-ravenscar-thread.o\";;\n \n x86_64-*-*)\n \tcpu_obs=\"${i386_tobjs} ${amd64_tobjs}\";;"
    },
    {
      "sha": "d6b34e5b8cb8e8fba287167d3353c0ac93cc7462",
      "filename": "gdb/riscv-ravenscar-thread.c",
      "status": "added",
      "additions": 140,
      "deletions": 0,
      "changes": 140,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/riscv-ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/riscv-ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-ravenscar-thread.c?ref=db3ad2f031d4da70db35977abbcede0399d81d6b",
      "patch": "@@ -0,0 +1,140 @@\n+/* Ravenscar RISC-V target support.\n+\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"defs.h\"\n+#include \"gdbarch.h\"\n+#include \"gdbcore.h\"\n+#include \"regcache.h\"\n+#include \"riscv-tdep.h\"\n+#include \"inferior.h\"\n+#include \"ravenscar-thread.h\"\n+#include \"riscv-ravenscar-thread.h\"\n+\n+struct riscv_ravenscar_ops : public ravenscar_arch_ops\n+{\n+  void fetch_registers (struct regcache *regcache, int regnum) override;\n+  void store_registers (struct regcache *regcache, int regnum) override;\n+\n+private:\n+\n+  /* Return the offset of the register in the context buffer.  */\n+  int register_offset (struct gdbarch *arch, int regnum);\n+};\n+\n+int\n+riscv_ravenscar_ops::register_offset (struct gdbarch *arch, int regnum)\n+{\n+  int offset;\n+  if (regnum == RISCV_RA_REGNUM || regnum == RISCV_PC_REGNUM)\n+    offset = 0;\n+  else if (regnum == RISCV_SP_REGNUM)\n+    offset = 1;\n+  else if (regnum == RISCV_ZERO_REGNUM + 8) /* S0 */\n+    offset = 2;\n+  else if (regnum == RISCV_ZERO_REGNUM + 9) /* S1 */\n+    offset = 3;\n+  else if (regnum >= RISCV_ZERO_REGNUM + 19\n+\t   && regnum <= RISCV_ZERO_REGNUM + 27) /* S2..S11 */\n+    offset = regnum - (RISCV_ZERO_REGNUM + 19) + 4;\n+  else if (regnum >= RISCV_FIRST_FP_REGNUM\n+\t   && regnum <= RISCV_FIRST_FP_REGNUM + 11)\n+    offset = regnum - RISCV_FIRST_FP_REGNUM + 14; /* FS0..FS11 */\n+  else\n+    {\n+      /* Not saved.  */\n+      return -1;\n+    }\n+\n+  int size = register_size (arch, regnum);\n+  return offset * size;\n+}\n+\n+/* Supply register REGNUM, which has been saved on REGISTER_ADDR, to the\n+   regcache.  */\n+\n+static void\n+supply_register_at_address (struct regcache *regcache, int regnum,\n+                            CORE_ADDR register_addr)\n+{\n+  struct gdbarch *gdbarch = regcache->arch ();\n+  int buf_size = register_size (gdbarch, regnum);\n+  gdb_byte *buf;\n+\n+  buf = (gdb_byte *) alloca (buf_size);\n+  read_memory (register_addr, buf, buf_size);\n+  regcache->raw_supply (regnum, buf);\n+}\n+\n+void\n+riscv_ravenscar_ops::fetch_registers (struct regcache *regcache, int regnum)\n+{\n+  struct gdbarch *gdbarch = regcache->arch ();\n+  const int num_regs = gdbarch_num_regs (gdbarch);\n+  int current_regnum;\n+  CORE_ADDR current_address;\n+  CORE_ADDR thread_descriptor_address;\n+\n+  /* The tid is the thread_id field, which is a pointer to the thread.  */\n+  thread_descriptor_address = (CORE_ADDR) inferior_ptid.tid ();\n+\n+  /* Read registers.  */\n+  for (current_regnum = 0; current_regnum < num_regs; current_regnum++)\n+    {\n+      int offset = register_offset (gdbarch, current_regnum);\n+\n+      if (offset != -1)\n+        {\n+          current_address = thread_descriptor_address + offset;\n+          supply_register_at_address (regcache, current_regnum,\n+                                      current_address);\n+        }\n+    }\n+}\n+\n+void\n+riscv_ravenscar_ops::store_registers (struct regcache *regcache, int regnum)\n+{\n+  struct gdbarch *gdbarch = regcache->arch ();\n+  int buf_size = register_size (gdbarch, regnum);\n+  gdb_byte buf[buf_size];\n+  CORE_ADDR register_address;\n+\n+  int offset = register_offset (gdbarch, regnum);\n+  if (offset != -1)\n+    {\n+      register_address = inferior_ptid.tid () + offset;\n+\n+      regcache->raw_collect (regnum, buf);\n+      write_memory (register_address,\n+\t\t    buf,\n+\t\t    buf_size);\n+    }\n+}\n+\n+/* The ravenscar_arch_ops vector for most RISC-V targets.  */\n+\n+static struct riscv_ravenscar_ops riscv_ravenscar_ops;\n+\n+/* Register riscv_ravenscar_ops in GDBARCH.  */\n+\n+void\n+register_riscv_ravenscar_ops (struct gdbarch *gdbarch)\n+{\n+  set_gdbarch_ravenscar_ops (gdbarch, &riscv_ravenscar_ops);\n+}"
    },
    {
      "sha": "d360ad7417afbab2ef8ee6ac174c6c3fc70cbd0c",
      "filename": "gdb/riscv-ravenscar-thread.h",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/riscv-ravenscar-thread.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/riscv-ravenscar-thread.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-ravenscar-thread.h?ref=db3ad2f031d4da70db35977abbcede0399d81d6b",
      "patch": "@@ -0,0 +1,27 @@\n+/* Ravenscar RISC-V target support.\n+\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef RISCV_RAVENSCAR_THREAD_H\n+#define RISCV_RAVENSCAR_THREAD_H\n+\n+struct gdbarch;\n+\n+extern void register_riscv_ravenscar_ops (struct gdbarch *gdbarch);\n+\n+#endif"
    },
    {
      "sha": "a8b057f622befe1c39c00dcd8858580e48aa792c",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3ad2f031d4da70db35977abbcede0399d81d6b/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=db3ad2f031d4da70db35977abbcede0399d81d6b",
      "patch": "@@ -56,6 +56,7 @@\n #include \"observable.h\"\n #include \"prologue-value.h\"\n #include \"arch/riscv.h\"\n+#include \"riscv-ravenscar-thread.h\"\n \n /* The stack must be 16-byte aligned.  */\n #define SP_ALIGNMENT 16\n@@ -3358,6 +3359,8 @@ riscv_gdbarch_init (struct gdbarch_info info,\n   /* Hook in OS ABI-specific overrides, if they have been registered.  */\n   gdbarch_init_osabi (info, gdbarch);\n \n+  register_riscv_ravenscar_ops (gdbarch);\n+\n   return gdbarch;\n }\n "
    }
  ]
}