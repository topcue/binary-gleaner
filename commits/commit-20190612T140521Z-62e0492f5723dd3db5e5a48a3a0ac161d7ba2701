{
  "sha": "62e0492f5723dd3db5e5a48a3a0ac161d7ba2701",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjJlMDQ5MmY1NzIzZGQzZGI1ZTVhNDhhM2EwYWMxNjFkN2JhMjcwMQ==",
  "commit": {
    "author": {
      "name": "Adam Lackorzymski",
      "email": "adam@os.inf.tu-dresden.de",
      "date": "2019-06-12T14:05:21Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-12T14:05:21Z"
    },
    "message": "Prevent a seg-fault from objdup when disassembling binaries which do not contain a symbol table.\n\n\tPR 24643\n\t* elf32-arm.c (arm_elf_find_function): Fail if the symol table is\n\tabsent, or the bfd is not in the ELF formart.\n\t* elfnn-aarch64.c (aarch64_elf_find_function): Likewise.",
    "tree": {
      "sha": "e988843b52c1d20e27e2978ca254fff57c2a73ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e988843b52c1d20e27e2978ca254fff57c2a73ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9abca70219e8e15991b9a4d3034672c9f720234f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9abca70219e8e15991b9a4d3034672c9f720234f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9abca70219e8e15991b9a4d3034672c9f720234f"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 28,
    "deletions": 9
  },
  "files": [
    {
      "sha": "b31e798bbb42ca9522a6c0e164f9f77c063cd54b",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=62e0492f5723dd3db5e5a48a3a0ac161d7ba2701",
      "patch": "@@ -1,3 +1,10 @@\n+2019-06-12  Adam Lackorzymski  <adam@os.inf.tu-dresden.de>\n+\n+\tPR 24643\n+\t* elf32-arm.c (arm_elf_find_function): Fail if the symol table is\n+\tabsent, or the bfd is not in the ELF formart.\n+\t* elfnn-aarch64.c (aarch64_elf_find_function): Likewise.\n+\n 2019-06-10  Christos Zoulas  <christos@zoulas.com>\n \n \tPR 24650"
    },
    {
      "sha": "52fd48f6ec98f8c104498b2a461d2a622d6a909f",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=62e0492f5723dd3db5e5a48a3a0ac161d7ba2701",
      "patch": "@@ -15983,12 +15983,12 @@ elf32_arm_is_target_special_symbol (bfd * abfd ATTRIBUTE_UNUSED, asymbol * sym)\n \t\t\t\t\t BFD_ARM_SPECIAL_SYM_TYPE_ANY);\n }\n \n-/* This is a copy of elf_find_function() from elf.c except that\n+/* This is a version of _bfd_elf_find_function() from dwarf2.c except that\n    ARM mapping symbols are ignored when looking for function names\n    and STT_ARM_TFUNC is considered to a function type.  */\n \n static bfd_boolean\n-arm_elf_find_function (bfd *\t     abfd ATTRIBUTE_UNUSED,\n+arm_elf_find_function (bfd *\t     abfd,\n \t\t       asymbol **    symbols,\n \t\t       asection *    section,\n \t\t       bfd_vma\t     offset,\n@@ -16000,6 +16000,12 @@ arm_elf_find_function (bfd *\t     abfd ATTRIBUTE_UNUSED,\n   bfd_vma low_func = 0;\n   asymbol ** p;\n \n+  if (symbols == NULL)\n+    return FALSE;\n+\n+  if (bfd_get_flavour (abfd) != bfd_target_elf_flavour)\n+    return FALSE;\n+\n   for (p = symbols; *p != NULL; p++)\n     {\n       elf_symbol_type *q;"
    },
    {
      "sha": "e33a5c6207f8c8510aba7816fcea2092f043ce9f",
      "filename": "bfd/elfnn-aarch64.c",
      "status": "modified",
      "additions": 13,
      "deletions": 7,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701/bfd/elfnn-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e0492f5723dd3db5e5a48a3a0ac161d7ba2701/bfd/elfnn-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-aarch64.c?ref=62e0492f5723dd3db5e5a48a3a0ac161d7ba2701",
      "patch": "@@ -7956,22 +7956,28 @@ elfNN_aarch64_is_target_special_symbol (bfd *abfd ATTRIBUTE_UNUSED,\n \t\t\t\t\t     BFD_AARCH64_SPECIAL_SYM_TYPE_ANY);\n }\n \n-/* This is a copy of elf_find_function () from elf.c except that\n+/* This is a version of _bfd_elf_find_function() from dwarf2.c except that\n    AArch64 mapping symbols are ignored when looking for function names.  */\n \n static bfd_boolean\n-aarch64_elf_find_function (bfd *abfd ATTRIBUTE_UNUSED,\n-\t\t\t   asymbol **symbols,\n-\t\t\t   asection *section,\n-\t\t\t   bfd_vma offset,\n-\t\t\t   const char **filename_ptr,\n-\t\t\t   const char **functionname_ptr)\n+aarch64_elf_find_function (bfd *          abfd,\n+\t\t\t   asymbol **     symbols,\n+\t\t\t   asection *     section,\n+\t\t\t   bfd_vma        offset,\n+\t\t\t   const char **  filename_ptr,\n+\t\t\t   const char **  functionname_ptr)\n {\n   const char *filename = NULL;\n   asymbol *func = NULL;\n   bfd_vma low_func = 0;\n   asymbol **p;\n \n+  if (symbols == NULL)\n+    return FALSE;\n+\n+  if (bfd_get_flavour (abfd) != bfd_target_elf_flavour)\n+    return FALSE;\n+\n   for (p = symbols; *p != NULL; p++)\n     {\n       elf_symbol_type *q;"
    }
  ]
}