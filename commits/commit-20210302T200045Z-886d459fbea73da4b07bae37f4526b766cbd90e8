{
  "sha": "886d459fbea73da4b07bae37f4526b766cbd90e8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODg2ZDQ1OWZiZWE3M2RhNGIwN2JhZTM3ZjQ1MjZiNzY2Y2JkOTBlOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-02T20:00:45Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-02T20:00:45Z"
    },
    "message": "Simplify resolve_subexp by using C++ algorithms\n\nThis changes resolve_subexp to use any_of and the erase-remove idiom\nto simplify the code somewhat.  This simplifies the next patch a bit.\n\ngdb/ChangeLog\n2021-03-02  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (resolve_subexp): Use any_of and erase-remove idiom.",
    "tree": {
      "sha": "a72eacd92ad227823cade0255da0fbc1eda22a9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a72eacd92ad227823cade0255da0fbc1eda22a9c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/886d459fbea73da4b07bae37f4526b766cbd90e8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/886d459fbea73da4b07bae37f4526b766cbd90e8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/886d459fbea73da4b07bae37f4526b766cbd90e8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/886d459fbea73da4b07bae37f4526b766cbd90e8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bdcccc56393c26b86265f94d4fcf55c20c938ab7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bdcccc56393c26b86265f94d4fcf55c20c938ab7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bdcccc56393c26b86265f94d4fcf55c20c938ab7"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 32,
    "deletions": 29
  },
  "files": [
    {
      "sha": "282df4cab437a5834b4d3176848dedffd90db797",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/886d459fbea73da4b07bae37f4526b766cbd90e8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/886d459fbea73da4b07bae37f4526b766cbd90e8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=886d459fbea73da4b07bae37f4526b766cbd90e8",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-02  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (resolve_subexp): Use any_of and erase-remove idiom.\n+\n 2021-03-02  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (struct ada_symbol_cache) <cache_space>: Now an"
    },
    {
      "sha": "c3e562c0bc90fb4debd3c37ec415d37aea863e5e",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 28,
      "deletions": 29,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/886d459fbea73da4b07bae37f4526b766cbd90e8/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/886d459fbea73da4b07bae37f4526b766cbd90e8/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=886d459fbea73da4b07bae37f4526b766cbd90e8",
      "patch": "@@ -3660,41 +3660,40 @@ resolve_subexp (expression_up *expp, int *pos, int deprocedure_p,\n \t    ada_lookup_symbol_list (exp->elts[pc + 2].symbol->linkage_name (),\n \t\t\t\t    exp->elts[pc + 1].block, VAR_DOMAIN,\n \t\t\t\t    &candidates);\n+\t  /* Paranoia.  */\n+\t  candidates.resize (n_candidates);\n \n-\t  if (n_candidates > 1)\n+\t  if (std::any_of (candidates.begin (),\n+\t\t\t   candidates.end (),\n+\t\t\t   [] (block_symbol &sym)\n+\t\t\t   {\n+\t\t\t     switch (SYMBOL_CLASS (sym.symbol))\n+\t\t\t       {\n+\t\t\t       case LOC_REGISTER:\n+\t\t\t       case LOC_ARG:\n+\t\t\t       case LOC_REF_ARG:\n+\t\t\t       case LOC_REGPARM_ADDR:\n+\t\t\t       case LOC_LOCAL:\n+\t\t\t       case LOC_COMPUTED:\n+\t\t\t\t return true;\n+\t\t\t       default:\n+\t\t\t\t return false;\n+\t\t\t       }\n+\t\t\t   }))\n \t    {\n \t      /* Types tend to get re-introduced locally, so if there\n \t\t are any local symbols that are not types, first filter\n \t\t out all types.  */\n-\t      int j;\n-\t      for (j = 0; j < n_candidates; j += 1)\n-\t\tswitch (SYMBOL_CLASS (candidates[j].symbol))\n+\t      candidates.erase\n+\t\t(std::remove_if\n+\t\t (candidates.begin (),\n+\t\t  candidates.end (),\n+\t\t  [] (block_symbol &sym)\n \t\t  {\n-\t\t  case LOC_REGISTER:\n-\t\t  case LOC_ARG:\n-\t\t  case LOC_REF_ARG:\n-\t\t  case LOC_REGPARM_ADDR:\n-\t\t  case LOC_LOCAL:\n-\t\t  case LOC_COMPUTED:\n-\t\t    goto FoundNonType;\n-\t\t  default:\n-\t\t    break;\n-\t\t  }\n-\t    FoundNonType:\n-\t      if (j < n_candidates)\n-\t\t{\n-\t\t  j = 0;\n-\t\t  while (j < n_candidates)\n-\t\t    {\n-\t\t      if (SYMBOL_CLASS (candidates[j].symbol) == LOC_TYPEDEF)\n-\t\t\t{\n-\t\t\t  candidates[j] = candidates[n_candidates - 1];\n-\t\t\t  n_candidates -= 1;\n-\t\t\t}\n-\t\t      else\n-\t\t\tj += 1;\n-\t\t    }\n-\t\t}\n+\t\t    return SYMBOL_CLASS (sym.symbol) == LOC_TYPEDEF;\n+\t\t  }),\n+\t\t candidates.end ());\n+\t      n_candidates = candidates.size ();\n \t    }\n \n \t  if (n_candidates == 0)"
    }
  ]
}