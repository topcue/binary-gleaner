{
  "sha": "bea571ebd78ee29cb94adf648fbcda1e109e1be6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmVhNTcxZWJkNzhlZTI5Y2I5NGFkZjY0OGZiY2RhMWUxMDllMWJlNg==",
  "commit": {
    "author": {
      "name": "Michael Weghorn",
      "email": "m.weghorn@posteo.de",
      "date": "2020-05-25T15:39:43Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-05-25T15:40:00Z"
    },
    "message": "Use construct_inferior_arguments which handles special chars\n\nUse the construct_inferior_arguments function instead of\nstringify_argv to construct a string from the program\narguments in those places where that one is then passed\nto fork_inferior (linux-low, lyn-low), since\nconstruct_inferior_arguments properly takes care of\nspecial characters, while stringify_argv does not.\nUsing construct_inferior_arguments seems \"natural\", since its\ndocumentation also mentions that it \"does the\nsame shell processing as fork_inferior\".\n\nSince construct_inferior_args has been extended to do\nproper quoting for Windows shells in commit\n5d60742e2dd3c9b475dce54b56043a358751bbb8\n(\"Fix quoting of special characters for the MinGW build.\",\n2012-06-12), use it for the Windows case as well.\n(I could not test that case myself, though.)\n\nAdapt handling of empty args in function 'handle_v_run'\nin gdbserver/server.cc to just insert an empty string\nfor an empty arg, since that one is now properly handled\nin 'construct_inferior_arguments' already (and inserting\na \"''\" string in 'handle_v_run' would otherwise\ncause that one to be treated as a string literally\ncontaining two quote characters, which\n'construct_inferior_args' would preserve by adding\nextra escaping).\n\nThis makes gdbserver properly handle program args containing special\ncharacters (like spaces), e.g. (example from PR25893)\n\n  $ gdbserver localhost:50505 myprogram \"hello world\"\n\nnow properly handles \"hello world\" as a single arg, not two separate\nones (\"hello\", \"world\").\n\ngdbserver/ChangeLog:\n\n\tPR gdbserver/25893\n\t* linux-low.cc (linux_process_target::create_inferior),\n\tlynx-low.cc (lynx_process_target::create_inferior),\n\twin32-low.cc (win32_process_target::create_inferior): Use\n\tconstruct_inferior_arguments instead of stringify_argv\n\tto get string representation which properly escapes\n\tspecial characters.\n\t* server.cc (handle_v_run): Just pass empty program arg\n\tas such, since any further processing is now handled via\n\tconstruct_inferior_arguments.\n\nChange-Id: Ibf963fcd51415c948840fb463289516b3479b0c3",
    "tree": {
      "sha": "dd4c33208f6f4aec10b9519e971f7f59f227dc43",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dd4c33208f6f4aec10b9519e971f7f59f227dc43"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bea571ebd78ee29cb94adf648fbcda1e109e1be6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bea571ebd78ee29cb94adf648fbcda1e109e1be6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bea571ebd78ee29cb94adf648fbcda1e109e1be6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bea571ebd78ee29cb94adf648fbcda1e109e1be6/comments",
  "author": {
    "login": "michaelweghorn",
    "id": 6560939,
    "node_id": "MDQ6VXNlcjY1NjA5Mzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6560939?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/michaelweghorn",
    "html_url": "https://github.com/michaelweghorn",
    "followers_url": "https://api.github.com/users/michaelweghorn/followers",
    "following_url": "https://api.github.com/users/michaelweghorn/following{/other_user}",
    "gists_url": "https://api.github.com/users/michaelweghorn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/michaelweghorn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/michaelweghorn/subscriptions",
    "organizations_url": "https://api.github.com/users/michaelweghorn/orgs",
    "repos_url": "https://api.github.com/users/michaelweghorn/repos",
    "events_url": "https://api.github.com/users/michaelweghorn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/michaelweghorn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ace6b9195e34cafa68964fb898d887ed15003fca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ace6b9195e34cafa68964fb898d887ed15003fca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ace6b9195e34cafa68964fb898d887ed15003fca"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 17,
    "deletions": 4
  },
  "files": [
    {
      "sha": "2b7fbb7c570d593065091c6711445be0eaf92931",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=bea571ebd78ee29cb94adf648fbcda1e109e1be6",
      "patch": "@@ -1,3 +1,16 @@\n+2020-05-25  Michael Weghorn  <m.weghorn@posteo.de>\n+\n+\tPR gdbserver/25893\n+\t* linux-low.cc (linux_process_target::create_inferior),\n+\tlynx-low.cc (lynx_process_target::create_inferior),\n+\twin32-low.cc (win32_process_target::create_inferior): Use\n+\tconstruct_inferior_arguments instead of stringify_argv\n+\tto get string representation which properly escapes\n+\tspecial characters.\n+\t* server.cc (handle_v_run): Just pass empty program arg\n+\tas such, since any further processing is now handled via\n+\tconstruct_inferior_arguments.\n+\n 2020-05-25  Michael Weghorn  <m.weghorn@posteo.de>\n \n \t* nto-low.cc (nto_process_target::create_inferior): Pass"
    },
    {
      "sha": "8ba39252c0fceb44be912d024055c87eb078776e",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=bea571ebd78ee29cb94adf648fbcda1e109e1be6",
      "patch": "@@ -984,7 +984,7 @@ linux_process_target::create_inferior (const char *program,\n   {\n     maybe_disable_address_space_randomization restore_personality\n       (cs.disable_randomization);\n-    std::string str_program_args = stringify_argv (program_args);\n+    std::string str_program_args = construct_inferior_arguments (program_args);\n \n     pid = fork_inferior (program,\n \t\t\t str_program_args.c_str (),"
    },
    {
      "sha": "a8e4e6079bd0717d46cd390d450d35888002654b",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=bea571ebd78ee29cb94adf648fbcda1e109e1be6",
      "patch": "@@ -253,7 +253,7 @@ lynx_process_target::create_inferior (const char *program,\n \t\t\t\t      const std::vector<char *> &program_args)\n {\n   int pid;\n-  std::string str_program_args = stringify_argv (program_args);\n+  std::string str_program_args = construct_inferior_arguments (program_args);\n \n   lynx_debug (\"create_inferior ()\");\n "
    },
    {
      "sha": "0313d18bb24720c2f8c07046715f19a988540f8e",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=bea571ebd78ee29cb94adf648fbcda1e109e1be6",
      "patch": "@@ -2957,7 +2957,7 @@ handle_v_run (char *own_buf)\n       else if (p == next_p)\n \t{\n \t  /* Empty argument.  */\n-\t  new_argv.push_back (xstrdup (\"''\"));\n+\t  new_argv.push_back (xstrdup (\"\"));\n \t}\n       else\n \t{"
    },
    {
      "sha": "d5555a78fd2a6be84d806deb8816cdbf73e2b917",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea571ebd78ee29cb94adf648fbcda1e109e1be6/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=bea571ebd78ee29cb94adf648fbcda1e109e1be6",
      "patch": "@@ -693,7 +693,7 @@ win32_process_target::create_inferior (const char *program,\n   DWORD flags;\n   PROCESS_INFORMATION pi;\n   DWORD err;\n-  std::string str_program_args = stringify_argv (program_args);\n+  std::string str_program_args = construct_inferior_arguments (program_args);\n   char *args = (char *) str_program_args.c_str ();\n \n   /* win32_wait needs to know we're not attaching.  */"
    }
  ]
}