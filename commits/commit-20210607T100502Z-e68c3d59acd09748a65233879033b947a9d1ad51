{
  "sha": "e68c3d59acd09748a65233879033b947a9d1ad51",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTY4YzNkNTlhY2QwOTc0OGE2NTIzMzg3OTAzM2I5NDdhOWQxYWQ1MQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-07T10:05:02Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-07T10:05:02Z"
    },
    "message": "x86: better respect quotes in parse_operands()\n\nWhen d02603dc201f (\"Allow symbol and label names to be enclosed in\ndouble quotes\") added the check for a double quote to the loop body\nthere, it didn't go quite far enough: Parentheses inside quotes\nshouldn't be counted, and character restrictions also shouldn't apply\ninside quoted regions.\n\nIn i386_att_operand(), which needs adjustment to remain in sync, besides\nrespecting double quotes now, also change the logic such that we don't\ncount parentheses anymore: Finding any opening or closing parenthesis or\nany double quote means we're done, because the subsequent parsing code\nwouldn't accept (extra) instances of these anyway.\n\nNote that in parse_operands() this mimics get_symbol_name()'s\nquestionable behavior of treating \\ specially only when ahead of \". (The\nbehavior is suspicious because the meaning of \\\\ then is ambiguous. It\nis in particular impossible to have a (quoted) symbol name end in a\nsingle \\.) I would have used get_symbol_name() here, if that didn't\nrequire fiddling with input_line_pointer.",
    "tree": {
      "sha": "8adbe25bd88ac510dff521a6619a90b0678805ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8adbe25bd88ac510dff521a6619a90b0678805ea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e68c3d59acd09748a65233879033b947a9d1ad51",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e68c3d59acd09748a65233879033b947a9d1ad51",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e68c3d59acd09748a65233879033b947a9d1ad51",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e68c3d59acd09748a65233879033b947a9d1ad51/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "014fbcda4c662c275532eb0e0e7ef57f46bd7321",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/014fbcda4c662c275532eb0e0e7ef57f46bd7321",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/014fbcda4c662c275532eb0e0e7ef57f46bd7321"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 40,
    "deletions": 14
  },
  "files": [
    {
      "sha": "f490eeff4b209d7150e56d7ab75089728e797a04",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e68c3d59acd09748a65233879033b947a9d1ad51/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e68c3d59acd09748a65233879033b947a9d1ad51/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e68c3d59acd09748a65233879033b947a9d1ad51",
      "patch": "@@ -1,3 +1,13 @@\n+2021-06-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (parse_operands): Reduce scope of\n+\tparen_not_balanced, to match the new in_quotes. Skip over quoted\n+\tregions of operands.\n+\t(i386_att_operand): Remove (mis-named) parens_balanced. Respect\n+\tdouble quote.\n+\t* testsuite/gas/i386/unary.s: Add more cases.\n+\t* testsuite/gas/i386/unary.d: Adjust expectations.\n+\n 2021-06-07  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (digit_chars, is_digit_char): Delete."
    },
    {
      "sha": "c838823e088ebabd8b89d5ca5ce7fb05eef1ff71",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 23,
      "deletions": 14,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e68c3d59acd09748a65233879033b947a9d1ad51/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e68c3d59acd09748a65233879033b947a9d1ad51/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=e68c3d59acd09748a65233879033b947a9d1ad51",
      "patch": "@@ -5523,11 +5523,13 @@ parse_operands (char *l, const char *mnemonic)\n   /* 1 if operand is pending after ','.  */\n   unsigned int expecting_operand = 0;\n \n-  /* Non-zero if operand parens not balanced.  */\n-  unsigned int paren_not_balanced;\n-\n   while (*l != END_OF_INSN)\n     {\n+      /* Non-zero if operand parens not balanced.  */\n+      unsigned int paren_not_balanced = 0;\n+      /* True if inside double quotes.  */\n+      bool in_quotes = false;\n+\n       /* Skip optional white space before operand.  */\n       if (is_space_char (*l))\n \t++l;\n@@ -5539,11 +5541,16 @@ parse_operands (char *l, const char *mnemonic)\n \t  return NULL;\n \t}\n       token_start = l;\t/* After white space.  */\n-      paren_not_balanced = 0;\n-      while (paren_not_balanced || *l != ',')\n+      while (in_quotes || paren_not_balanced || *l != ',')\n \t{\n \t  if (*l == END_OF_INSN)\n \t    {\n+\t      if (in_quotes)\n+\t\t{\n+\t\t  as_bad (_(\"unbalanced double quotes in operand %d.\"),\n+\t\t\t  i.operands + 1);\n+\t\t  return NULL;\n+\t\t}\n \t      if (paren_not_balanced)\n \t\t{\n \t\t  know (!intel_syntax);\n@@ -5554,14 +5561,18 @@ parse_operands (char *l, const char *mnemonic)\n \t      else\n \t\tbreak;\t/* we are done */\n \t    }\n-\t  else if (!is_operand_char (*l) && !is_space_char (*l) && *l != '\"')\n+\t  else if (*l == '\\\\' && l[1] == '\"')\n+\t    ++l;\n+\t  else if (*l == '\"')\n+\t    in_quotes = !in_quotes;\n+\t  else if (!in_quotes && !is_operand_char (*l) && !is_space_char (*l))\n \t    {\n \t      as_bad (_(\"invalid character %s in operand %d\"),\n \t\t      output_invalid (*l),\n \t\t      i.operands + 1);\n \t      return NULL;\n \t    }\n-\t  if (!intel_syntax)\n+\t  if (!intel_syntax && !in_quotes)\n \t    {\n \t      if (*l == '(')\n \t\t++paren_not_balanced;\n@@ -11517,23 +11528,21 @@ i386_att_operand (char *operand_string)\n       if (*base_string == ')')\n \t{\n \t  char *temp_string;\n-\t  unsigned int parens_balanced = 1;\n+\n \t  /* We've already checked that the number of left & right ()'s are\n \t     equal, so this loop will not be infinite.  */\n \t  do\n \t    {\n \t      base_string--;\n-\t      if (*base_string == ')')\n-\t\tparens_balanced++;\n-\t      if (*base_string == '(')\n-\t\tparens_balanced--;\n \t    }\n-\t  while (parens_balanced);\n+\t  while (*base_string != '(' && *base_string != ')'\n+\t\t && *base_string != '\"');\n \n \t  temp_string = base_string;\n \n \t  /* Skip past '(' and whitespace.  */\n-\t  ++base_string;\n+\t  if (*base_string == '(')\n+\t    ++base_string;\n \t  if (is_space_char (*base_string))\n \t    ++base_string;\n "
    },
    {
      "sha": "11b28c03fc3828fb56002e3bc6e6a8f2dc9e51d8",
      "filename": "gas/testsuite/gas/i386/quoted.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e68c3d59acd09748a65233879033b947a9d1ad51/gas/testsuite/gas/i386/quoted.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e68c3d59acd09748a65233879033b947a9d1ad51/gas/testsuite/gas/i386/quoted.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/quoted.d?ref=e68c3d59acd09748a65233879033b947a9d1ad51",
      "patch": "@@ -10,6 +10,9 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:[ \t]*8b 80 00 00 00 00[\t ]+mov    0x0\\(%eax\\),%eax\t[a-f0-9]+: (R_386_|dir)32\tx\\(y\\)\n [ \t]*[a-f0-9]+:[ \t]*26 a1 00 00 00 00[\t ]+mov    %es:0x0,%eax\t[a-f0-9]+: (R_386_|dir)32\tx\\(y\\)\n [ \t]*[a-f0-9]+:[ \t]*26 8b 80 00 00 00 00[\t ]+mov    %es:0x0\\(%eax\\),%eax\t[a-f0-9]+: (R_386_|dir)32\tx\\(y\\)\n+[ \t]*[a-f0-9]+:[ \t]*a1 00 00 00 00[\t ]+mov    0x0,%eax\t[a-f0-9]+: (R_386_|dir)32\tx\\(y\n+[ \t]*[a-f0-9]+:[ \t]*a1 00 00 00 00[\t ]+mov    0x0,%eax\t[a-f0-9]+: (R_386_|dir)32\tx\\)y\n+[ \t]*[a-f0-9]+:[ \t]*a1 00 00 00 00[\t ]+mov    0x0,%eax\t[a-f0-9]+: (R_386_|dir)32\tx\\?y\n [ \t]*[a-f0-9]+:[ \t]*ff 15 00 00 00 00[\t ]+call   \\*0x0\t[a-f0-9]+: (R_386_|dir)32\tx\\(y\\)\n [ \t]*[a-f0-9]+:[ \t]*26 ff 15 00 00 00 00[\t ]+call   \\*%es:0x0\t[a-f0-9]+: (R_386_|dir)32\tx\\(y\\)\n [ \t]*[a-f0-9]+:[ \t]*26 ff 15 00 00 00 00[\t ]+call   \\*%es:0x0\t[a-f0-9]+: (R_386_|dir)32\tx\\(y\\)"
    },
    {
      "sha": "1e57c86007f232a0bd0ade22025ceb029cb45fbd",
      "filename": "gas/testsuite/gas/i386/quoted.s",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e68c3d59acd09748a65233879033b947a9d1ad51/gas/testsuite/gas/i386/quoted.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e68c3d59acd09748a65233879033b947a9d1ad51/gas/testsuite/gas/i386/quoted.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/quoted.s?ref=e68c3d59acd09748a65233879033b947a9d1ad51",
      "patch": "@@ -5,6 +5,10 @@ quoted:\n \tmov\t%es:\"x(y)\", %eax\n \tmov\t%es:\"x(y)\"(%eax), %eax\n \n+\tmov\t\"x(y\", %eax\n+\tmov\t\"x)y\", %eax\n+\tmov\t\"x?y\", %eax\n+\n \tcall\t*\"x(y)\"\n \tcall\t*%es:\"x(y)\"\n \tcall\t%es:*\"x(y)\""
    }
  ]
}