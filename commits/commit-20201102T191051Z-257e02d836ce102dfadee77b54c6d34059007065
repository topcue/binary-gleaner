{
  "sha": "257e02d836ce102dfadee77b54c6d34059007065",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjU3ZTAyZDgzNmNlMTAyZGZhZGVlNzdiNTRjNmQzNDA1OTAwNzA2NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-10-29T14:47:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-02T19:10:51Z"
    },
    "message": "Add x86_64 ravenscar support\n\nSupport for x86_64 ravenscar was recently added to the Ada runtime.\nThis patch updates gdb to follow.\n\nAs this is Ada-specific, and was reviewed internally by Joel, I am\nchecking it in.\n\n2020-11-02  Tom Tromey  <tromey@adacore.com>\n\n\t* Makefile.in (ALL_64_TARGET_OBS): Add amd64-ravenscar-thread.o.\n\t(ALLDEPFILES): Add amd64-ravenscar-thread.c.\n\t(HFILES_NO_SRCDIR): Add amd64-ravenscar-thread.h.\n\t* amd64-ravenscar-thread.c: New file.\n\t* amd64-ravenscar-thread.h: New file.\n\t* amd64-tdep.c (amd64_init_abi): Register ravenscar ops.\n\t* configure.tgt (amd64_tobjs): Add ravenscar objects.",
    "tree": {
      "sha": "e81ee0e58d1e107e643b91726bd7100ef0cc48a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e81ee0e58d1e107e643b91726bd7100ef0cc48a0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/257e02d836ce102dfadee77b54c6d34059007065",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/257e02d836ce102dfadee77b54c6d34059007065",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/257e02d836ce102dfadee77b54c6d34059007065",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/257e02d836ce102dfadee77b54c6d34059007065/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "74d877e5221f3459aa9f4f9354194b714d306e18",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74d877e5221f3459aa9f4f9354194b714d306e18",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/74d877e5221f3459aa9f4f9354194b714d306e18"
    }
  ],
  "stats": {
    "total": 196,
    "additions": 195,
    "deletions": 1
  },
  "files": [
    {
      "sha": "373e1527fc7a64bc5452720a210816253b3f7591",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/257e02d836ce102dfadee77b54c6d34059007065/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/257e02d836ce102dfadee77b54c6d34059007065/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=257e02d836ce102dfadee77b54c6d34059007065",
      "patch": "@@ -1,3 +1,13 @@\n+2020-11-02  Tom Tromey  <tromey@adacore.com>\n+\n+\t* Makefile.in (ALL_64_TARGET_OBS): Add amd64-ravenscar-thread.o.\n+\t(ALLDEPFILES): Add amd64-ravenscar-thread.c.\n+\t(HFILES_NO_SRCDIR): Add amd64-ravenscar-thread.h.\n+\t* amd64-ravenscar-thread.c: New file.\n+\t* amd64-ravenscar-thread.h: New file.\n+\t* amd64-tdep.c (amd64_init_abi): Register ravenscar ops.\n+\t* configure.tgt (amd64_tobjs): Add ravenscar objects.\n+\n 2020-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* main.c (execute_cmdargs): New function."
    },
    {
      "sha": "c46935efafad9b422c98d27bc4f34af532b307ca",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/257e02d836ce102dfadee77b54c6d34059007065/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/257e02d836ce102dfadee77b54c6d34059007065/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=257e02d836ce102dfadee77b54c6d34059007065",
      "patch": "@@ -687,6 +687,7 @@ ALL_64_TARGET_OBS = \\\n \tamd64-linux-tdep.o \\\n \tamd64-netbsd-tdep.o \\\n \tamd64-obsd-tdep.o \\\n+\tamd64-ravenscar-thread.o \\\n \tamd64-sol2-tdep.o \\\n \tamd64-tdep.o \\\n \tamd64-windows-tdep.o \\\n@@ -1219,6 +1220,7 @@ HFILES_NO_SRCDIR = \\\n \tamd64-darwin-tdep.h \\\n \tamd64-linux-tdep.h \\\n \tamd64-nat.h \\\n+\tamd64-ravenscar-thread.h \\\n \tamd64-tdep.h \\\n \tannotate.h \\\n \tarc-tdep.h \\\n@@ -2139,6 +2141,7 @@ ALLDEPFILES = \\\n \tamd64-netbsd-tdep.c \\\n \tamd64-obsd-nat.c \\\n \tamd64-obsd-tdep.c \\\n+\tamd64-ravenscar-thread.c \\\n \tamd64-sol2-tdep.c \\\n \tamd64-tdep.c \\\n \tarc-tdep.c \\"
    },
    {
      "sha": "656f4c41691901a790fcb7e4bdcea1696b938b24",
      "filename": "gdb/amd64-ravenscar-thread.c",
      "status": "added",
      "additions": 150,
      "deletions": 0,
      "changes": 150,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/257e02d836ce102dfadee77b54c6d34059007065/gdb/amd64-ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/257e02d836ce102dfadee77b54c6d34059007065/gdb/amd64-ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-ravenscar-thread.c?ref=257e02d836ce102dfadee77b54c6d34059007065",
      "patch": "@@ -0,0 +1,150 @@\n+/* Ravenscar x86-64 target support.\n+\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"defs.h\"\n+#include \"gdbarch.h\"\n+#include \"gdbcore.h\"\n+#include \"regcache.h\"\n+#include \"amd64-tdep.h\"\n+#include \"inferior.h\"\n+#include \"ravenscar-thread.h\"\n+#include \"amd64-ravenscar-thread.h\"\n+\n+struct amd64_ravenscar_ops : public ravenscar_arch_ops\n+{\n+  void fetch_registers (struct regcache *regcache, int regnum) override;\n+  void store_registers (struct regcache *regcache, int regnum) override;\n+\n+private:\n+\n+  /* Return the offset of the register in the context buffer.  */\n+  int register_offset (struct gdbarch *arch, int regnum);\n+};\n+\n+/* x86-64 Ravenscar stores registers as:\n+\n+   type Context_Buffer is record\n+      RIP    : System.Address;\n+      RFLAGS : EFLAGS;\n+      RSP    : System.Address;\n+\n+      RBX    : System.Address;\n+      RBP    : System.Address;\n+      R12    : System.Address;\n+      R13    : System.Address;\n+      R14    : System.Address;\n+      R15    : System.Address;\n+   end record;\n+*/\n+static const int register_layout[] =\n+{\n+  AMD64_RIP_REGNUM,\n+  AMD64_EFLAGS_REGNUM,\n+  AMD64_RSP_REGNUM,\n+  AMD64_RBX_REGNUM,\n+  AMD64_RBP_REGNUM,\n+  AMD64_R12_REGNUM,\n+  AMD64_R13_REGNUM,\n+  AMD64_R14_REGNUM,\n+  AMD64_R15_REGNUM,\n+};\n+\n+int\n+amd64_ravenscar_ops::register_offset (struct gdbarch *arch, int regnum)\n+{\n+  for (int i = 0; i < ARRAY_SIZE (register_layout); ++i)\n+    if (register_layout[i] == regnum)\n+      return i * 8;\n+  /* Not saved.  */\n+  return -1;\n+}\n+\n+/* Supply register REGNUM, which has been saved at REGISTER_ADDR, to\n+   the regcache.  */\n+\n+static void\n+supply_register_at_address (struct regcache *regcache, int regnum,\n+                            CORE_ADDR register_addr)\n+{\n+  struct gdbarch *gdbarch = regcache->arch ();\n+  int buf_size = register_size (gdbarch, regnum);\n+  gdb_byte *buf;\n+\n+  buf = (gdb_byte *) alloca (buf_size);\n+  read_memory (register_addr, buf, buf_size);\n+  regcache->raw_supply (regnum, buf);\n+}\n+\n+void\n+amd64_ravenscar_ops::fetch_registers (struct regcache *regcache, int regnum)\n+{\n+  struct gdbarch *gdbarch = regcache->arch ();\n+  const int num_regs = gdbarch_num_regs (gdbarch);\n+  int current_regnum;\n+  CORE_ADDR current_address;\n+  CORE_ADDR thread_descriptor_address;\n+\n+  /* The tid is the thread_id field, which is a pointer to the thread.  */\n+  thread_descriptor_address = (CORE_ADDR) inferior_ptid.tid ();\n+\n+  /* Read registers.  */\n+  for (current_regnum = 0; current_regnum < num_regs; current_regnum++)\n+    {\n+      int offset = register_offset (gdbarch, current_regnum);\n+\n+      if (offset != -1)\n+        {\n+          current_address = thread_descriptor_address + offset;\n+          supply_register_at_address (regcache, current_regnum,\n+                                      current_address);\n+        }\n+    }\n+}\n+\n+void\n+amd64_ravenscar_ops::store_registers (struct regcache *regcache, int regnum)\n+{\n+  struct gdbarch *gdbarch = regcache->arch ();\n+  int buf_size = register_size (gdbarch, regnum);\n+  gdb_byte buf[buf_size];\n+  CORE_ADDR register_address;\n+\n+  int offset = register_offset (gdbarch, regnum);\n+  if (offset != -1)\n+    {\n+      register_address = inferior_ptid.tid () + offset;\n+\n+      regcache->raw_collect (regnum, buf);\n+      write_memory (register_address,\n+\t\t    buf,\n+\t\t    buf_size);\n+    }\n+}\n+\n+/* The ravenscar_arch_ops vector for AMD64 targets.  */\n+\n+static struct amd64_ravenscar_ops amd64_ravenscar_ops;\n+\n+/* Register amd64_ravenscar_ops in GDBARCH.  */\n+\n+void\n+register_amd64_ravenscar_ops (struct gdbarch *gdbarch)\n+{\n+  set_gdbarch_ravenscar_ops (gdbarch, &amd64_ravenscar_ops);\n+}"
    },
    {
      "sha": "e1edcd76b682833b4cbf5af1786beaeea8630b41",
      "filename": "gdb/amd64-ravenscar-thread.h",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/257e02d836ce102dfadee77b54c6d34059007065/gdb/amd64-ravenscar-thread.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/257e02d836ce102dfadee77b54c6d34059007065/gdb/amd64-ravenscar-thread.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-ravenscar-thread.h?ref=257e02d836ce102dfadee77b54c6d34059007065",
      "patch": "@@ -0,0 +1,27 @@\n+/* Ravenscar x86-64 target support.\n+\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef AMD64_RAVENSCAR_THREAD_H\n+#define AMD64_RAVENSCAR_THREAD_H\n+\n+struct gdbarch;\n+\n+extern void register_amd64_ravenscar_ops (struct gdbarch *gdbarch);\n+\n+#endif /* AMD64_RAVENSCAR_THREAD_H */"
    },
    {
      "sha": "31d4d3460ef2ffc28708725b8b01b4409589d201",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/257e02d836ce102dfadee77b54c6d34059007065/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/257e02d836ce102dfadee77b54c6d34059007065/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=257e02d836ce102dfadee77b54c6d34059007065",
      "patch": "@@ -49,6 +49,7 @@\n #include \"gdbsupport/byte-vector.h\"\n #include \"osabi.h\"\n #include \"x86-tdep.h\"\n+#include \"amd64-ravenscar-thread.h\"\n \n /* Note that the AMD64 architecture was previously known as x86-64.\n    The latter is (forever) engraved into the canonical system name as\n@@ -3256,6 +3257,8 @@ amd64_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch,\n \n   set_gdbarch_in_indirect_branch_thunk (gdbarch,\n \t\t\t\t\tamd64_in_indirect_branch_thunk);\n+\n+  register_amd64_ravenscar_ops (gdbarch);\n }\n \n /* Initialize ARCH for x86-64, no osabi.  */"
    },
    {
      "sha": "6e039838748228b2d2e5ea3141cea573e09da917",
      "filename": "gdb/configure.tgt",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/257e02d836ce102dfadee77b54c6d34059007065/gdb/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/257e02d836ce102dfadee77b54c6d34059007065/gdb/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.tgt?ref=257e02d836ce102dfadee77b54c6d34059007065",
      "patch": "@@ -39,7 +39,8 @@ esac\n \n x86_tobjs=\"x86-tdep.o\"\n i386_tobjs=\"i386-tdep.o arch/i386.o i387-tdep.o ${x86_tobjs}\"\n-amd64_tobjs=\"amd64-tdep.o arch/amd64.o ${x86_tobjs}\"\n+amd64_tobjs=\"ravenscar-thread.o amd64-ravenscar-thread.o \\\n+    amd64-tdep.o arch/amd64.o ${x86_tobjs}\"\n \n # Here are three sections to get a list of target specific object\n # files according to target triplet $TARG."
    }
  ]
}