{
  "sha": "3ea16160a66e0e3bc59842e27e41890411729a86",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2VhMTYxNjBhNjZlMGUzYmM1OTg0MmUyN2U0MTg5MDQxMTcyOWE4Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-15T23:56:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-26T21:20:30Z"
    },
    "message": "Let commands free \"name\"\n\nThis adds a \"name_allocated\" field to cmd_list_element, so that\ncommands can own their \"name\" when necessary.  Then, this changes a\nfew spots in gdb that currently free the name by hand to instead use\nthis facility.\n\ngdb/ChangeLog\n2019-11-26  Tom Tromey  <tom@tromey.com>\n\n\t* python/py-function.c (fnpy_init): Update.\n\t* value.h (add_internal_function): Adjust declaration.\n\t* value.c (function_destroyer): Remove.\n\t(do_add_internal_function): Don't set destroyer or copy name.\n\t(add_internal_function): Take unique_xmalloc_ptr<char> for name.\n\tSet name_allocated.\n\t* python/py-cmd.c (cmdpy_destroyer): Don't free \"name\".\n\t(cmdpy_init): Set name_allocated.\n\t* cli/cli-decode.h (struct cmd_list_element) <name_allocated>: New\n\tmember.\n\t(~cmd_list_element): Free \"name\" if needed.\n\nChange-Id: Ie1435cea5bbf4bd92056125f112917c607cbb761",
    "tree": {
      "sha": "ff0b73e9b147676969cefb85ba6fe24c88374473",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ff0b73e9b147676969cefb85ba6fe24c88374473"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3ea16160a66e0e3bc59842e27e41890411729a86",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ea16160a66e0e3bc59842e27e41890411729a86",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3ea16160a66e0e3bc59842e27e41890411729a86",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ea16160a66e0e3bc59842e27e41890411729a86/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1a6d41c6433a0980f302c480b1d1db71234b49e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a6d41c6433a0980f302c480b1d1db71234b49e4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1a6d41c6433a0980f302c480b1d1db71234b49e4"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 32,
    "deletions": 20
  },
  "files": [
    {
      "sha": "d2e9adf34305bc81ba6a3d305de95db42f913f19",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3ea16160a66e0e3bc59842e27e41890411729a86",
      "patch": "@@ -1,3 +1,17 @@\n+2019-11-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* python/py-function.c (fnpy_init): Update.\n+\t* value.h (add_internal_function): Adjust declaration.\n+\t* value.c (function_destroyer): Remove.\n+\t(do_add_internal_function): Don't set destroyer or copy name.\n+\t(add_internal_function): Take unique_xmalloc_ptr<char> for name.\n+\tSet name_allocated.\n+\t* python/py-cmd.c (cmdpy_destroyer): Don't free \"name\".\n+\t(cmdpy_init): Set name_allocated.\n+\t* cli/cli-decode.h (struct cmd_list_element) <name_allocated>: New\n+\tmember.\n+\t(~cmd_list_element): Free \"name\" if needed.\n+\n 2019-11-26  Tom Tromey  <tom@tromey.com>\n \n \t* value.h (add_internal_function): Add new overload.  Move"
    },
    {
      "sha": "8ea40597b0795830f8021947a7625a8ceedda33b",
      "filename": "gdb/cli/cli-decode.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/cli/cli-decode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/cli/cli-decode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.h?ref=3ea16160a66e0e3bc59842e27e41890411729a86",
      "patch": "@@ -55,6 +55,7 @@ struct cmd_list_element\n \tdeprecated_warn_user (0),\n \tmalloced_replacement (0),\n \tdoc_allocated (0),\n+\tname_allocated (0),\n \thook_in (0),\n \tallow_unknown (0),\n \tabbrev_flag (0),\n@@ -69,6 +70,8 @@ struct cmd_list_element\n     {\n       if (doc && doc_allocated)\n \txfree ((char *) doc);\n+      if (name_allocated)\n+\txfree ((char *) name);\n     }\n \n     DISABLE_COPY_AND_ASSIGN (cmd_list_element);\n@@ -109,6 +112,10 @@ struct cmd_list_element\n \n     unsigned int doc_allocated : 1;\n \n+    /* Set if the name field should be xfree'd.  */\n+\n+    unsigned int name_allocated : 1;\n+\n     /* Flag that specifies if this command is already running its hook.  */\n     /* Prevents the possibility of hook recursion.  */\n     unsigned int hook_in : 1;"
    },
    {
      "sha": "38973401a8fc0de1ceb7275e9e02f02fed098129",
      "filename": "gdb/python/py-cmd.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/python/py-cmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/python/py-cmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-cmd.c?ref=3ea16160a66e0e3bc59842e27e41890411729a86",
      "patch": "@@ -98,8 +98,7 @@ cmdpy_destroyer (struct cmd_list_element *self, void *context)\n   gdbpy_ref<cmdpy_object> cmd ((cmdpy_object *) context);\n   cmd->command = NULL;\n \n-  /* We allocated the name and perhaps the prefix name.  */\n-  xfree ((char *) self->name);\n+  /* We may have allocated the prefix name.  */\n   xfree ((char *) self->prefixname);\n }\n \n@@ -562,6 +561,7 @@ cmdpy_init (PyObject *self, PyObject *args, PyObject *kw)\n       cmd->func = cmdpy_function;\n       cmd->destroyer = cmdpy_destroyer;\n       cmd->doc_allocated = 1;\n+      cmd->name_allocated = 1;\n \n       obj->command = cmd;\n       set_cmd_context (cmd, self_ref.release ());"
    },
    {
      "sha": "d94610573ef6ef2720da8c9850ca41ee51eb1693",
      "filename": "gdb/python/py-function.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/python/py-function.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/python/py-function.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-function.c?ref=3ea16160a66e0e3bc59842e27e41890411729a86",
      "patch": "@@ -127,8 +127,8 @@ fnpy_init (PyObject *self, PyObject *args, PyObject *kwds)\n   if (! docstring)\n     docstring.reset (xstrdup (_(\"This function is not documented.\")));\n \n-  add_internal_function (name, std::move (docstring), fnpy_call,\n-\t\t\t self_ref.release ());\n+  add_internal_function (make_unique_xstrdup (name), std::move (docstring),\n+\t\t\t fnpy_call, self_ref.release ());\n   return 0;\n }\n "
    },
    {
      "sha": "57e62b9175f4addbc3596b7ddfe92c5f7de745b1",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 6,
      "deletions": 15,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=3ea16160a66e0e3bc59842e27e41890411729a86",
      "patch": "@@ -2421,31 +2421,19 @@ function_command (const char *command, int from_tty)\n   /* Do nothing.  */\n }\n \n-/* Clean up if an internal function's command is destroyed.  */\n-static void\n-function_destroyer (struct cmd_list_element *self, void *ignore)\n-{\n-  xfree ((char *) self->name);\n-}\n-\n /* Helper function that does the work for add_internal_function.  */\n \n static struct cmd_list_element *\n do_add_internal_function (const char *name, const char *doc,\n \t\t\t  internal_function_fn handler, void *cookie)\n {\n-  struct cmd_list_element *cmd;\n   struct internal_function *ifn;\n   struct internalvar *var = lookup_internalvar (name);\n \n   ifn = create_internal_function (name, handler, cookie);\n   set_internalvar_function (var, ifn);\n \n-  cmd = add_cmd (xstrdup (name), no_class, function_command, (char *) doc,\n-\t\t &functionlist);\n-  cmd->destroyer = function_destroyer;\n-\n-  return cmd;\n+  return add_cmd (name, no_class, function_command, doc, &functionlist);\n }\n \n /* See value.h.  */\n@@ -2460,13 +2448,16 @@ add_internal_function (const char *name, const char *doc,\n /* See value.h.  */\n \n void\n-add_internal_function (const char *name, gdb::unique_xmalloc_ptr<char> &&doc,\n+add_internal_function (gdb::unique_xmalloc_ptr<char> &&name,\n+\t\t       gdb::unique_xmalloc_ptr<char> &&doc,\n \t\t       internal_function_fn handler, void *cookie)\n {\n   struct cmd_list_element *cmd\n-    = do_add_internal_function (name, doc.get (), handler, cookie);\n+    = do_add_internal_function (name.get (), doc.get (), handler, cookie);\n   doc.release ();\n   cmd->doc_allocated = 1;\n+  name.release ();\n+  cmd->name_allocated = 1;\n }\n \n /* Update VALUE before discarding OBJFILE.  COPIED_TYPES is used to"
    },
    {
      "sha": "96c9c216e93ca0c42c353fb402a33986de440bb7",
      "filename": "gdb/value.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/value.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ea16160a66e0e3bc59842e27e41890411729a86/gdb/value.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.h?ref=3ea16160a66e0e3bc59842e27e41890411729a86",
      "patch": "@@ -1177,7 +1177,7 @@ extern void add_internal_function (const char *name, const char *doc,\n \n /* This overload takes an allocated documentation string.  */\n \n-extern void add_internal_function (const char *name,\n+extern void add_internal_function (gdb::unique_xmalloc_ptr<char> &&name,\n \t\t\t\t   gdb::unique_xmalloc_ptr<char> &&doc,\n \t\t\t\t   internal_function_fn handler,\n \t\t\t\t   void *cookie);"
    }
  ]
}