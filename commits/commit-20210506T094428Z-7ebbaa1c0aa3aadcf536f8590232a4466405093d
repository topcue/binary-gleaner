{
  "sha": "7ebbaa1c0aa3aadcf536f8590232a4466405093d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2ViYmFhMWMwYWEzYWFkY2Y1MzZmODU5MDIzMmE0NDY2NDA1MDkzZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-05T17:57:47Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-06T09:44:28Z"
    },
    "message": "gdb/testsuite: resolve duplicate test names in gdb.guile/scm-breakpoint.exp\n\nExtend some test names to avoid duplicates.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.guile/scm-breakpoint.exp (test_bkpt_basic): Extend test\n\tnames to avoid duplicates.\n\t(test_bkpt_cond_and_cmds): Likewise.\n\t(test_bkpt_eval_funcs): Likewise.",
    "tree": {
      "sha": "0f84edd186f20c07d0534462e8af9936dd77ff62",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f84edd186f20c07d0534462e8af9936dd77ff62"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7ebbaa1c0aa3aadcf536f8590232a4466405093d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ebbaa1c0aa3aadcf536f8590232a4466405093d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7ebbaa1c0aa3aadcf536f8590232a4466405093d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ebbaa1c0aa3aadcf536f8590232a4466405093d/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "79aabb7308cd572fff21da5c93952a1bb0dc5b26",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79aabb7308cd572fff21da5c93952a1bb0dc5b26",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/79aabb7308cd572fff21da5c93952a1bb0dc5b26"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 19,
    "deletions": 10
  },
  "files": [
    {
      "sha": "f327795615e88d6df22b0fc5c4fe9622c1932820",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ebbaa1c0aa3aadcf536f8590232a4466405093d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ebbaa1c0aa3aadcf536f8590232a4466405093d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7ebbaa1c0aa3aadcf536f8590232a4466405093d",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.guile/scm-breakpoint.exp (test_bkpt_basic): Extend test\n+\tnames to avoid duplicates.\n+\t(test_bkpt_cond_and_cmds): Likewise.\n+\t(test_bkpt_eval_funcs): Likewise.\n+\n 2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.mi/mi-break.exp (test_forced_conditions): Add a test"
    },
    {
      "sha": "1fc34dd341275e0a01613366d8d96fa198817ff1",
      "filename": "gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 10,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ebbaa1c0aa3aadcf536f8590232a4466405093d/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ebbaa1c0aa3aadcf536f8590232a4466405093d/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-breakpoint.exp?ref=7ebbaa1c0aa3aadcf536f8590232a4466405093d",
      "patch": "@@ -50,7 +50,7 @@ proc test_bkpt_basic { } {\n \n \tset mult_line [gdb_get_line_number \"Break at multiply.\"]\n \tgdb_breakpoint ${mult_line}\n-\tgdb_continue_to_breakpoint \"Break at multiply.\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, first time\"\n \n \t# Check that the Guile breakpoint code noted the addition of a\n \t# breakpoint \"behind the scenes\".\n@@ -72,23 +72,23 @@ proc test_bkpt_basic { } {\n \t    \"= 1\" \"check multiply breakpoint hit count\"\n \tgdb_scm_test_silent_cmd \"guile (set-breakpoint-ignore-count! mult-bkpt 4)\" \\\n \t    \"set multiply breakpoint ignore count\"\n-\tgdb_continue_to_breakpoint \"Break at multiply.\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, second time\"\n \tgdb_test \"guile (print (breakpoint-hit-count mult-bkpt))\" \\\n \t    \"= 6\" \"check multiply breakpoint hit count 2\"\n \tgdb_test \"print result\" \\\n \t    \" = 545\" \"check expected variable result after 6 iterations\"\n \n \t# Test breakpoint is enabled and disabled correctly.\n \tgdb_breakpoint [gdb_get_line_number \"Break at add.\"]\n-\tgdb_continue_to_breakpoint \"Break at add.\"\n+\tgdb_continue_to_breakpoint \"Break at add, first time\"\n \tgdb_test \"guile (print (breakpoint-enabled? mult-bkpt))\" \\\n \t    \"= #t\" \"check multiply breakpoint enabled\"\n \tgdb_scm_test_silent_cmd  \"guile (set-breakpoint-enabled! mult-bkpt #f)\" \\\n \t    \"set multiply breakpoint disabled\"\n-\tgdb_continue_to_breakpoint \"Break at add.\"\n+\tgdb_continue_to_breakpoint \"Break at add, second time\"\n \tgdb_scm_test_silent_cmd  \"guile (set-breakpoint-enabled! mult-bkpt #t)\" \\\n \t    \"set multiply breakpoint enabled\"\n-\tgdb_continue_to_breakpoint \"Break at multiply.\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, third time\"\n \n \t# Test other getters and setters.\n \tgdb_scm_test_silent_cmd \"guile (define blist (breakpoints))\" \\\n@@ -157,19 +157,19 @@ proc test_bkpt_cond_and_cmds { } {\n \t    \"create multiply breakpoint\"\n \tgdb_scm_test_silent_cmd \"guile (register-breakpoint! bp1)\" \\\n \t    \"register bp1\"\n-\tgdb_continue_to_breakpoint \"Break at multiply.\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, first time\"\n \tgdb_scm_test_silent_cmd  \"guile (set-breakpoint-condition! bp1 \\\"i == 5\\\")\" \\\n \t    \"set condition\"\n \tgdb_test \"guile (print (breakpoint-condition bp1))\" \\\n \t    \"= i == 5\" \"test condition has been set\"\n-\tgdb_continue_to_breakpoint \"Break at multiply.\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, second time\"\n \tgdb_test \"print i\" \\\n \t    \"5\" \"test conditional breakpoint stopped after five iterations\"\n \tgdb_scm_test_silent_cmd  \"guile (set-breakpoint-condition! bp1 #f)\" \\\n \t    \"clear condition\"\n \tgdb_test \"guile (print (breakpoint-condition bp1))\" \\\n \t    \"= #f\" \"test condition has been removed\"\n-\tgdb_continue_to_breakpoint \"Break at multiply.\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, third time\"\n \tgdb_test \"print i\" \"6\" \"test breakpoint stopped after six iterations\"\n \n \t# Test commands.\n@@ -372,7 +372,8 @@ proc test_bkpt_eval_funcs { } {\n \t    \"create also-eval-bp1 breakpoint\"\n \tgdb_scm_test_silent_cmd  \"guile (define never-eval-bp1 (make-bp-also-eval \\\"$end_location\\\"))\" \\\n \t    \"create never-eval-bp1 breakpoint\"\n-\tgdb_continue_to_breakpoint \"Break at multiply.\" \".*$srcfile:$bp_location2.*\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, first time\" \\\n+\t    \".*$srcfile:$bp_location2.*\"\n \tgdb_test \"print i\" \"3\" \"check inferior value matches guile accounting\"\n \tgdb_test \"guile (print (bp-eval-inf-i eval-bp1))\" \\\n \t    \"= 3\" \"check guile accounting matches inferior\"\n@@ -414,7 +415,8 @@ proc test_bkpt_eval_funcs { } {\n \tgdb_test \"guile (print (bp-eval-count check-eval))\" \\\n \t    \"= 0\" \\\n \t    \"test that evaluate function has not been yet executed (ie count = 0)\"\n-\tgdb_continue_to_breakpoint \"Break at multiply.\" \".*$srcfile:$bp_location2.*\"\n+\tgdb_continue_to_breakpoint \"Break at multiply, second time\" \\\n+\t    \".*$srcfile:$bp_location2.*\"\n \tgdb_test \"guile (print (bp-eval-count check-eval))\" \\\n \t    \"= 1\" \\\n \t    \"test that evaluate function is run when location also has normal bp\""
    }
  ]
}