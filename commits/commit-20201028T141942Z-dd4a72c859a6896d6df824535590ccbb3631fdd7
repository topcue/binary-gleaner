{
  "sha": "dd4a72c859a6896d6df824535590ccbb3631fdd7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGQ0YTcyYzg1OWE2ODk2ZDZkZjgyNDUzNTU5MGNjYmIzNjMxZmRkNw==",
  "commit": {
    "author": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-10-28T14:16:39Z"
    },
    "committer": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-10-28T14:19:42Z"
    },
    "message": "aarch64: Add CSR PDEC instruction\n\nThis patch adds:\n+ New feature +csre to -march command line.\n+ New instruction CSR PDEC associated with CSRE feature.\n\nPlease note that CSRE system registers were already upstreamed. This patch\nshould finalize CSRE feature implementation.\n\nCSRE feature adds CSR PDEC (Decrements Call stack pointer by the size of\na Call stack record) instruction. Although this instruction has operand\n(PDEC) it's instruction's only operand. PDEC forces instruction field Rt\nto be set to 0b1111. This results in fixed opcode of the instruction.\n\ngas/ChangeLog:\n\n2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* NEWS: Update docs.\n\t* config/tc-aarch64.c (parse_csr_operand): New operand parser.\n\t(parse_operands): Call to CSR operand parser.\n\t* testsuite/gas/aarch64/csre_csr-invalid.d: New test.\n\t* testsuite/gas/aarch64/csre_csr-invalid.l: New test.\n\t* testsuite/gas/aarch64/csre_csr-invalid.s: New test.\n\t* testsuite/gas/aarch64/csre_csr.d: New test.\n\t* testsuite/gas/aarch64/csre_csr.s: New test.\n\ninclude/ChangeLog:\n\n2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* opcode/aarch64.h (AARCH64_FEATURE_CSRE): New -march feature.\n\t(enum aarch64_opnd): New CSR instruction field AARCH64_OPND_CSRE_CSR.\n\nopcodes/ChangeLog:\n\n2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* aarch64-opc.c (aarch64_print_operand): CSR PDEC operand print-out.\n\t* aarch64-tbl.h (CSRE): New CSRE feature handler.\n\t(_CSRE_INSN): New CSRE instruction type.\n\t(struct aarch64_opcode): New 'csre' entry for a CSRE CLI feature.\n\t* aarch64-asm-2.c: Regenerated.\n\t* aarch64-dis-2.c: Regenerated.\n\t* aarch64-opc-2.c: Regenerated.",
    "tree": {
      "sha": "7999561fc2abf2203654a950546803413b3930b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7999561fc2abf2203654a950546803413b3930b8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dd4a72c859a6896d6df824535590ccbb3631fdd7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd4a72c859a6896d6df824535590ccbb3631fdd7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dd4a72c859a6896d6df824535590ccbb3631fdd7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd4a72c859a6896d6df824535590ccbb3631fdd7/comments",
  "author": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "82503ca7ed8301dc076919d5010bf981e35b1314",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82503ca7ed8301dc076919d5010bf981e35b1314",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82503ca7ed8301dc076919d5010bf981e35b1314"
    }
  ],
  "stats": {
    "total": 2906,
    "additions": 1489,
    "deletions": 1417
  },
  "files": [
    {
      "sha": "41cc668e6116f6c48e8e8ccfef3e1c7c95c8b5a6",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -24,6 +24,9 @@\n * Add support for DSB memory nXS barrier and WFET instruction for Armv8.7\n   AArch64.\n \n+* Add support for +csre feature for -march. Add CSR PDEC instruction for CSRE\n+  feature.\n+\n * Add support for Intel TDX instructions.\n \n * Add support for Intel Key Locker instructions."
    },
    {
      "sha": "a8ee74aacbb48697fa9e1ab4214171f42483fb3d",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -4036,6 +4036,29 @@ parse_barrier_psb (char **str,\n   return 0;\n }\n \n+/* Parse an operand for CSR (CSRE instruction).  */\n+\n+static int\n+parse_csr_operand (char **str)\n+{\n+  char *p, *q;\n+\n+  p = q = *str;\n+  while (ISALPHA (*q))\n+    q++;\n+\n+  /* Instruction has only one operand PDEC which encodes Rt field of the\n+     operation to 0b11111.  */\n+  if (strcasecmp(p, \"pdec\"))\n+  {\n+    set_syntax_error (_(\"CSR instruction accepts only PDEC\"));\n+    return PARSE_FAIL;\n+  }\n+\n+  *str = q;\n+  return 0;\n+}\n+\n /* Parse an operand for BTI.  Set *HINT_OPT to the hint-option record\n    return 0 if successful.  Otherwise return PARSE_FAIL.  */\n \n@@ -6749,6 +6772,12 @@ parse_operands (char *str, const aarch64_opcode *opcode)\n \t    goto failure;\n \t  break;\n \n+\tcase AARCH64_OPND_CSRE_CSR:\n+\t  val = parse_csr_operand (&str);\n+\t  if (val == PARSE_FAIL)\n+\t    goto failure;\n+\t  break;\n+\n \tdefault:\n \t  as_fatal (_(\"unhandled operand code %d\"), operands[i]);\n \t}\n@@ -9171,6 +9200,8 @@ static const struct aarch64_option_cpu_value_table aarch64_features[] = {\n \t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE, 0)},\n   {\"f64mm\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_F64MM, 0),\n \t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE, 0)},\n+  {\"csre\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_CSRE, 0),\n+\t\t\tAARCH64_ARCH_NONE},\n   {NULL,\t\tAARCH64_ARCH_NONE, AARCH64_ARCH_NONE},\n };\n "
    },
    {
      "sha": "bec71c8871dda9d6d7409c0dc3a73b655843aa7c",
      "filename": "gas/testsuite/gas/aarch64/csre_csr-invalid.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr-invalid.d?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -0,0 +1,3 @@\n+#name: CSR PDEC instruction\n+#source: csre_csr-invalid.s\n+#error_output: csre_csr-invalid.l"
    },
    {
      "sha": "dec38ab2d7ba149328d1391375aac49b3d3ac458",
      "filename": "gas/testsuite/gas/aarch64/csre_csr-invalid.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr-invalid.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr-invalid.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr-invalid.l?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -0,0 +1,2 @@\n+.*: Assembler messages:\n+.*: Error: selected processor does not support `csr pdec'"
    },
    {
      "sha": "e8520badc3f3f7b166fed8c40dfff89d134feff8",
      "filename": "gas/testsuite/gas/aarch64/csre_csr-invalid.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr-invalid.s?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -0,0 +1,4 @@\n+/* CSR PDEC requires +csre for -march= command line option.   */\n+.arch armv8-a\n+\n+    csr pdec"
    },
    {
      "sha": "c242f0ac42d0eb1560fe270e40250f71b8f40fb7",
      "filename": "gas/testsuite/gas/aarch64/csre_csr.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr.d?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -0,0 +1,10 @@\n+#name: CSRE extension CSR PDEC instruction\n+#objdump: -dr\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+0+ <.*>:\n+.*:\td50b721f \tcsr\tpdec\n+.*:\td50b721f \tcsr\tpdec"
    },
    {
      "sha": "d0ac90fd7e4a6f9840f21c62303c194adc747644",
      "filename": "gas/testsuite/gas/aarch64/csre_csr.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/gas/testsuite/gas/aarch64/csre_csr.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr.s?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -0,0 +1,4 @@\n+.arch armv8-a+csre\n+\n+    csr pdec\n+    CSR PDEC"
    },
    {
      "sha": "7d484adc9b5c30ba8da26d5fceb52c724abf59a1",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -51,6 +51,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_V8_4\t     (1ULL << 11) /* ARMv8.4 processors.  */\n #define AARCH64_FEATURE_V8_R\t     (1ULL << 12) /* Armv8-R processors.  */\n #define AARCH64_FEATURE_V8_7\t     (1ULL << 13) /* Armv8.7 processors.  */\n+#define AARCH64_FEATURE_CSRE\t     (1ULL << 14) /* CSRE feature.  */\n #define AARCH64_FEATURE_FP\t     (1ULL << 17) /* FP instructions.  */\n #define AARCH64_FEATURE_SIMD\t     (1ULL << 18) /* SIMD instructions.  */\n #define AARCH64_FEATURE_CRC\t     (1ULL << 19) /* CRC instructions.  */\n@@ -432,6 +433,7 @@ enum aarch64_opnd\n   AARCH64_OPND_SVE_ZtxN,\t/* SVE vector register list in Zt.  */\n   AARCH64_OPND_TME_UIMM16,\t/* TME unsigned 16-bit immediate.  */\n   AARCH64_OPND_SM3_IMM2,\t/* SM3 encodes lane in bits [13, 14].  */\n+  AARCH64_OPND_CSRE_CSR,\t/* CSRE CSR instruction Rt field.  */\n };\n \n /* Qualifier constrains an operand.  It either specifies a variant of an"
    },
    {
      "sha": "931739b1c8aae4d52127fa7cd8e3418ee12fc982",
      "filename": "opcodes/aarch64-asm-2.c",
      "status": "modified",
      "additions": 122,
      "deletions": 122,
      "changes": 244,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-asm-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-asm-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-asm-2.c?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -426,174 +426,174 @@ aarch64_find_real_opcode (const aarch64_opcode *opcode)\n     case 1184:\t/* movz */\n       value = 1184;\t/* --> movz.  */\n       break;\n-    case 1241:\t/* autibsp */\n-    case 1240:\t/* autibz */\n-    case 1239:\t/* autiasp */\n-    case 1238:\t/* autiaz */\n-    case 1237:\t/* pacibsp */\n-    case 1236:\t/* pacibz */\n-    case 1235:\t/* paciasp */\n-    case 1234:\t/* paciaz */\n-    case 1211:\t/* tsb */\n-    case 1210:\t/* psb */\n-    case 1209:\t/* esb */\n-    case 1208:\t/* autib1716 */\n-    case 1207:\t/* autia1716 */\n-    case 1206:\t/* pacib1716 */\n-    case 1205:\t/* pacia1716 */\n-    case 1204:\t/* xpaclri */\n-    case 1202:\t/* sevl */\n-    case 1201:\t/* sev */\n-    case 1200:\t/* wfi */\n-    case 1199:\t/* wfe */\n-    case 1198:\t/* yield */\n-    case 1197:\t/* bti */\n-    case 1196:\t/* csdb */\n-    case 1195:\t/* nop */\n-    case 1194:\t/* hint */\n-      value = 1194;\t/* --> hint.  */\n-      break;\n-    case 1217:\t/* pssbb */\n-    case 1216:\t/* ssbb */\n-    case 1215:\t/* dfb */\n-    case 1213:\t/* dsb */\n-      value = 1213;\t/* --> dsb.  */\n-      break;\n+    case 1242:\t/* autibsp */\n+    case 1241:\t/* autibz */\n+    case 1240:\t/* autiasp */\n+    case 1239:\t/* autiaz */\n+    case 1238:\t/* pacibsp */\n+    case 1237:\t/* pacibz */\n+    case 1236:\t/* paciasp */\n+    case 1235:\t/* paciaz */\n+    case 1212:\t/* tsb */\n+    case 1211:\t/* psb */\n+    case 1210:\t/* esb */\n+    case 1209:\t/* autib1716 */\n+    case 1208:\t/* autia1716 */\n+    case 1207:\t/* pacib1716 */\n+    case 1206:\t/* pacia1716 */\n+    case 1205:\t/* xpaclri */\n+    case 1203:\t/* sevl */\n+    case 1202:\t/* sev */\n+    case 1201:\t/* wfi */\n+    case 1200:\t/* wfe */\n+    case 1199:\t/* yield */\n+    case 1198:\t/* bti */\n+    case 1197:\t/* csdb */\n+    case 1196:\t/* nop */\n+    case 1195:\t/* hint */\n+      value = 1195;\t/* --> hint.  */\n+      break;\n+    case 1218:\t/* pssbb */\n+    case 1217:\t/* ssbb */\n+    case 1216:\t/* dfb */\n     case 1214:\t/* dsb */\n       value = 1214;\t/* --> dsb.  */\n       break;\n-    case 1229:\t/* cpp */\n-    case 1228:\t/* dvp */\n-    case 1227:\t/* cfp */\n-    case 1225:\t/* tlbi */\n-    case 1224:\t/* ic */\n-    case 1223:\t/* dc */\n-    case 1222:\t/* at */\n-    case 1221:\t/* sys */\n-      value = 1221;\t/* --> sys.  */\n+    case 1215:\t/* dsb */\n+      value = 1215;\t/* --> dsb.  */\n       break;\n-    case 1226:\t/* wfet */\n-      value = 1226;\t/* --> wfet.  */\n+    case 1230:\t/* cpp */\n+    case 1229:\t/* dvp */\n+    case 1228:\t/* cfp */\n+    case 1226:\t/* tlbi */\n+    case 1225:\t/* ic */\n+    case 1224:\t/* dc */\n+    case 1223:\t/* at */\n+    case 1222:\t/* sys */\n+      value = 1222;\t/* --> sys.  */\n       break;\n-    case 2039:\t/* bic */\n-    case 1289:\t/* and */\n-      value = 1289;\t/* --> and.  */\n+    case 1227:\t/* wfet */\n+      value = 1227;\t/* --> wfet.  */\n       break;\n-    case 1272:\t/* mov */\n-    case 1291:\t/* and */\n-      value = 1291;\t/* --> and.  */\n+    case 2040:\t/* bic */\n+    case 1290:\t/* and */\n+      value = 1290;\t/* --> and.  */\n       break;\n-    case 1276:\t/* movs */\n-    case 1292:\t/* ands */\n-      value = 1292;\t/* --> ands.  */\n+    case 1273:\t/* mov */\n+    case 1292:\t/* and */\n+      value = 1292;\t/* --> and.  */\n       break;\n-    case 2040:\t/* cmple */\n-    case 1327:\t/* cmpge */\n-      value = 1327;\t/* --> cmpge.  */\n+    case 1277:\t/* movs */\n+    case 1293:\t/* ands */\n+      value = 1293;\t/* --> ands.  */\n       break;\n-    case 2043:\t/* cmplt */\n-    case 1330:\t/* cmpgt */\n-      value = 1330;\t/* --> cmpgt.  */\n+    case 2041:\t/* cmple */\n+    case 1328:\t/* cmpge */\n+      value = 1328;\t/* --> cmpge.  */\n       break;\n-    case 2041:\t/* cmplo */\n-    case 1332:\t/* cmphi */\n-      value = 1332;\t/* --> cmphi.  */\n+    case 2044:\t/* cmplt */\n+    case 1331:\t/* cmpgt */\n+      value = 1331;\t/* --> cmpgt.  */\n       break;\n-    case 2042:\t/* cmpls */\n-    case 1335:\t/* cmphs */\n-      value = 1335;\t/* --> cmphs.  */\n+    case 2042:\t/* cmplo */\n+    case 1333:\t/* cmphi */\n+      value = 1333;\t/* --> cmphi.  */\n       break;\n-    case 1269:\t/* mov */\n-    case 1357:\t/* cpy */\n-      value = 1357;\t/* --> cpy.  */\n+    case 2043:\t/* cmpls */\n+    case 1336:\t/* cmphs */\n+      value = 1336;\t/* --> cmphs.  */\n       break;\n-    case 1271:\t/* mov */\n+    case 1270:\t/* mov */\n     case 1358:\t/* cpy */\n       value = 1358;\t/* --> cpy.  */\n       break;\n-    case 2050:\t/* fmov */\n-    case 1274:\t/* mov */\n+    case 1272:\t/* mov */\n     case 1359:\t/* cpy */\n       value = 1359;\t/* --> cpy.  */\n       break;\n-    case 1264:\t/* mov */\n-    case 1371:\t/* dup */\n-      value = 1371;\t/* --> dup.  */\n+    case 2051:\t/* fmov */\n+    case 1275:\t/* mov */\n+    case 1360:\t/* cpy */\n+      value = 1360;\t/* --> cpy.  */\n       break;\n-    case 1266:\t/* mov */\n-    case 1263:\t/* mov */\n+    case 1265:\t/* mov */\n     case 1372:\t/* dup */\n       value = 1372;\t/* --> dup.  */\n       break;\n-    case 2049:\t/* fmov */\n-    case 1268:\t/* mov */\n+    case 1267:\t/* mov */\n+    case 1264:\t/* mov */\n     case 1373:\t/* dup */\n       value = 1373;\t/* --> dup.  */\n       break;\n-    case 1267:\t/* mov */\n-    case 1374:\t/* dupm */\n-      value = 1374;\t/* --> dupm.  */\n+    case 2050:\t/* fmov */\n+    case 1269:\t/* mov */\n+    case 1374:\t/* dup */\n+      value = 1374;\t/* --> dup.  */\n       break;\n-    case 2044:\t/* eon */\n-    case 1376:\t/* eor */\n-      value = 1376;\t/* --> eor.  */\n+    case 1268:\t/* mov */\n+    case 1375:\t/* dupm */\n+      value = 1375;\t/* --> dupm.  */\n       break;\n-    case 1277:\t/* not */\n-    case 1378:\t/* eor */\n-      value = 1378;\t/* --> eor.  */\n+    case 2045:\t/* eon */\n+    case 1377:\t/* eor */\n+      value = 1377;\t/* --> eor.  */\n       break;\n-    case 1278:\t/* nots */\n-    case 1379:\t/* eors */\n-      value = 1379;\t/* --> eors.  */\n+    case 1278:\t/* not */\n+    case 1379:\t/* eor */\n+      value = 1379;\t/* --> eor.  */\n       break;\n-    case 2045:\t/* facle */\n-    case 1384:\t/* facge */\n-      value = 1384;\t/* --> facge.  */\n+    case 1279:\t/* nots */\n+    case 1380:\t/* eors */\n+      value = 1380;\t/* --> eors.  */\n       break;\n-    case 2046:\t/* faclt */\n-    case 1385:\t/* facgt */\n-      value = 1385;\t/* --> facgt.  */\n+    case 2046:\t/* facle */\n+    case 1385:\t/* facge */\n+      value = 1385;\t/* --> facge.  */\n       break;\n-    case 2047:\t/* fcmle */\n-    case 1398:\t/* fcmge */\n-      value = 1398;\t/* --> fcmge.  */\n+    case 2047:\t/* faclt */\n+    case 1386:\t/* facgt */\n+      value = 1386;\t/* --> facgt.  */\n       break;\n-    case 2048:\t/* fcmlt */\n-    case 1400:\t/* fcmgt */\n-      value = 1400;\t/* --> fcmgt.  */\n+    case 2048:\t/* fcmle */\n+    case 1399:\t/* fcmge */\n+      value = 1399;\t/* --> fcmge.  */\n       break;\n-    case 1261:\t/* fmov */\n-    case 1406:\t/* fcpy */\n-      value = 1406;\t/* --> fcpy.  */\n+    case 2049:\t/* fcmlt */\n+    case 1401:\t/* fcmgt */\n+      value = 1401;\t/* --> fcmgt.  */\n       break;\n-    case 1260:\t/* fmov */\n-    case 1429:\t/* fdup */\n-      value = 1429;\t/* --> fdup.  */\n+    case 1262:\t/* fmov */\n+    case 1407:\t/* fcpy */\n+      value = 1407;\t/* --> fcpy.  */\n       break;\n-    case 1262:\t/* mov */\n-    case 1760:\t/* orr */\n-      value = 1760;\t/* --> orr.  */\n+    case 1261:\t/* fmov */\n+    case 1430:\t/* fdup */\n+      value = 1430;\t/* --> fdup.  */\n       break;\n-    case 2051:\t/* orn */\n+    case 1263:\t/* mov */\n     case 1761:\t/* orr */\n       value = 1761;\t/* --> orr.  */\n       break;\n-    case 1265:\t/* mov */\n-    case 1763:\t/* orr */\n-      value = 1763;\t/* --> orr.  */\n+    case 2052:\t/* orn */\n+    case 1762:\t/* orr */\n+      value = 1762;\t/* --> orr.  */\n       break;\n-    case 1275:\t/* movs */\n-    case 1764:\t/* orrs */\n-      value = 1764;\t/* --> orrs.  */\n+    case 1266:\t/* mov */\n+    case 1764:\t/* orr */\n+      value = 1764;\t/* --> orr.  */\n       break;\n-    case 1270:\t/* mov */\n-    case 1826:\t/* sel */\n-      value = 1826;\t/* --> sel.  */\n+    case 1276:\t/* movs */\n+    case 1765:\t/* orrs */\n+      value = 1765;\t/* --> orrs.  */\n       break;\n-    case 1273:\t/* mov */\n+    case 1271:\t/* mov */\n     case 1827:\t/* sel */\n       value = 1827;\t/* --> sel.  */\n       break;\n+    case 1274:\t/* mov */\n+    case 1828:\t/* sel */\n+      value = 1828;\t/* --> sel.  */\n+      break;\n     default: return NULL;\n     }\n "
    },
    {
      "sha": "558eabe123caa2682ee4ba0ddef2d5b4182db222",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 1288,
      "deletions": 1287,
      "changes": 2575,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7"
    },
    {
      "sha": "6ec3ebf6a71c5999bd69dd33d5c8afa63c7e7d34",
      "filename": "opcodes/aarch64-opc-2.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-opc-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-opc-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc-2.c?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -311,17 +311,17 @@ static const unsigned op_enum_table [] =\n   391,\n   413,\n   415,\n-  1265,\n-  1270,\n-  1263,\n-  1262,\n   1266,\n-  1273,\n-  1275,\n+  1271,\n+  1264,\n+  1263,\n+  1267,\n+  1274,\n   1276,\n-  1272,\n-  1278,\n   1277,\n+  1273,\n+  1279,\n+  1278,\n   131,\n };\n "
    },
    {
      "sha": "290a438e5aa21c84cf98a488b980105f1c37de82",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -3787,6 +3787,10 @@ aarch64_print_operand (char *buf, size_t size, bfd_vma pc,\n \tsnprintf (buf, size, \"%s\", opnd->hint_option->name);\n       break;\n \n+    case AARCH64_OPND_CSRE_CSR:\n+      snprintf (buf, size, \"pdec\");\n+      break;\n+\n     default:\n       assert (0);\n     }"
    },
    {
      "sha": "3ec18ca17a2df5545f11a62016376d9f832dc3ed",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd4a72c859a6896d6df824535590ccbb3631fdd7/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=dd4a72c859a6896d6df824535590ccbb3631fdd7",
      "patch": "@@ -2410,6 +2410,8 @@ static const aarch64_feature_set aarch64_feature_f64mm_sve =\n        | AARCH64_FEATURE_SVE, 0);\n static const aarch64_feature_set aarch64_feature_v8_r =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_R, 0);\n+static const aarch64_feature_set aarch64_feature_csre =\n+  AARCH64_FEATURE (AARCH64_FEATURE_CSRE, 0);\n \n \n #define CORE\t\t&aarch64_feature_v8\n@@ -2456,6 +2458,7 @@ static const aarch64_feature_set aarch64_feature_v8_r =\n #define I8MM      &aarch64_feature_i8mm\n #define ARMV8_R\t  &aarch64_feature_v8_r\n #define ARMV8_7\t  &aarch64_feature_v8_7\n+#define CSRE\t  &aarch64_feature_csre\n \n #define CORE_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, OP, CORE, OPS, QUALS, FLAGS, 0, 0, NULL }\n@@ -2563,6 +2566,9 @@ static const aarch64_feature_set aarch64_feature_v8_r =\n   { NAME, OPCODE, MASK, CLASS, 0, ARMV8_R, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define V8_7_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, ARMV8_7, OPS, QUALS, FLAGS, 0, 0, NULL }\n+#define _CSRE_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n+  { NAME, OPCODE, MASK, CLASS, 0, CSRE, OPS, QUALS, FLAGS, 0, 0, NULL }\n+\n \n struct aarch64_opcode aarch64_opcode_table[] =\n {\n@@ -3833,6 +3839,8 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   _TME_INSN (\"tcommit\", 0xd503307f, 0xffffffff, 0, 0, OP0 (), {}, 0),\n   _TME_INSN (\"ttest\", 0xd5233160, 0xffffffe0, 0, 0, OP1 (Rd), QL_I1X, 0),\n   _TME_INSN (\"tcancel\", 0xd4600000, 0xffe0001f, 0, 0, OP1 (TME_UIMM16), QL_IMM_NIL, 0),\n+  /* CSRE Instructions.  */\n+  _CSRE_INSN (\"csr\", 0xd50b721f, 0xffffffff, 0, OP1 (CSRE_CSR), {}, 0),\n   /* System.  */\n   CORE_INSN (\"msr\", 0xd500401f, 0xfff8f01f, ic_system, 0, OP2 (PSTATEFIELD, UIMM4), {}, F_SYS_WRITE),\n   CORE_INSN (\"hint\",0xd503201f, 0xfffff01f, ic_system, 0, OP1 (UIMM7), {}, F_HAS_ALIAS),"
    }
  ]
}