{
  "sha": "c7d7aea2f5fadff84eee78aaa0b1830016d26319",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzdkN2FlYTJmNWZhZGZmODRlZWU3OGFhYTBiMTgzMDAxNmQyNjMxOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-11T00:06:11Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-11T11:38:37Z"
    },
    "message": "Power10 128-bit binary integer operations\n\nopcodes/\n\t* ppc-opc.c (powerpc_opcodes): Add vrlq, vdivuq, vmsumcud, vrlqmi,\n\tvmuloud, vcmpuq, vslq, vdivsq, vcmpsq, vrlqnm, vcmpequq, vmulosd,\n\tvsrq, vdiveuq, vcmpgtuq, vmuleud, vsraq, vdivesq, vcmpgtsq, vmulesd,\n\tvcmpequq., vextsd2q, vmoduq, vcmpgtuq., vmodsq, vcmpgtsq., xscvqpuqz,\n\txscvuqqp, xscvqpsqz, xscvsqqp, dcffixqq, dctfixqq.\ngas/\n\t* testsuite/gas/ppc/int128.d,\n\t* testsuite/gas/ppc/int128.s: New test.\n\t* testsuite/gas/ppc/ppc.exp: Run it.",
    "tree": {
      "sha": "b6950d5f8a6f244a3bac8183889a841bdbe997c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b6950d5f8a6f244a3bac8183889a841bdbe997c1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7d7aea2f5fadff84eee78aaa0b1830016d26319",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7d7aea2f5fadff84eee78aaa0b1830016d26319",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7d7aea2f5fadff84eee78aaa0b1830016d26319",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7d7aea2f5fadff84eee78aaa0b1830016d26319/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "94ba9882d5acfdc38267a8a822a8b0b8eb3e44ef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94ba9882d5acfdc38267a8a822a8b0b8eb3e44ef",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/94ba9882d5acfdc38267a8a822a8b0b8eb3e44ef"
    }
  ],
  "stats": {
    "total": 127,
    "additions": 127,
    "deletions": 0
  },
  "files": [
    {
      "sha": "763e44748ce46515762e26eee4e3b768f1c0a8d2",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c7d7aea2f5fadff84eee78aaa0b1830016d26319",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/gas/ppc/int128.d,\n+\t* testsuite/gas/ppc/int128.s: New test.\n+\t* testsuite/gas/ppc/ppc.exp: Run it.\n+\n 2020-05-11  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/gas/ppc/vsx_32byte.d,"
    },
    {
      "sha": "c9f14d3360d93e2470c9434c4947e5376afaad50",
      "filename": "gas/testsuite/gas/ppc/int128.d",
      "status": "added",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/testsuite/gas/ppc/int128.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/testsuite/gas/ppc/int128.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/int128.d?ref=c7d7aea2f5fadff84eee78aaa0b1830016d26319",
      "patch": "@@ -0,0 +1,42 @@\n+#as: -mpower10\n+#objdump: -dr -Mpower10\n+#name: 128-bit binary integer ops\n+\n+.*\n+\n+\n+Disassembly of section \\.text:\n+\n+0+0 <_start>:\n+.*:\t(10 22 1a c8|c8 1a 22 10) \tvmuleud v1,v2,v3\n+.*:\t(10 85 30 c8|c8 30 85 10) \tvmuloud v4,v5,v6\n+.*:\t(10 e8 4b c8|c8 4b e8 10) \tvmulesd v7,v8,v9\n+.*:\t(11 4b 61 c8|c8 61 4b 11) \tvmulosd v10,v11,v12\n+.*:\t(11 ae 7c 17|17 7c ae 11) \tvmsumcud v13,v14,v15,v16\n+.*:\t(12 32 99 0b|0b 99 32 12) \tvdivsq  v17,v18,v19\n+.*:\t(12 95 a8 0b|0b a8 95 12) \tvdivuq  v20,v21,v21\n+.*:\t(12 d7 c3 0b|0b c3 d7 12) \tvdivesq v22,v23,v24\n+.*:\t(13 3a da 0b|0b da 3a 13) \tvdiveuq v25,v26,v27\n+.*:\t(13 9d f7 0b|0b f7 9d 13) \tvmodsq  v28,v29,v30\n+.*:\t(13 e0 0e 0b|0b 0e e0 13) \tvmoduq  v31,v0,v1\n+.*:\t(10 5b 1e 02|02 1e 5b 10) \tvextsd2q v2,v3\n+.*:\t(10 04 29 01|01 29 04 10) \tvcmpuq  v4,v5\n+.*:\t(10 86 39 41|41 39 86 10) \tvcmpsq  cr1,v6,v7\n+.*:\t(11 09 51 c7|c7 51 09 11) \tvcmpequq v8,v9,v10\n+.*:\t(11 6c 6d c7|c7 6d 6c 11) \tvcmpequq. v11,v12,v13\n+.*:\t(11 cf 83 87|87 83 cf 11) \tvcmpgtsq v14,v15,v16\n+.*:\t(12 32 9f 87|87 9f 32 12) \tvcmpgtsq. v17,v18,v19\n+.*:\t(12 95 b2 87|87 b2 95 12) \tvcmpgtuq v20,v21,v22\n+.*:\t(12 f8 ce 87|87 ce f8 12) \tvcmpgtuq. v23,v24,v25\n+.*:\t(13 5b e0 05|05 e0 5b 13) \tvrlq    v26,v27,v28\n+.*:\t(13 be f9 45|45 f9 be 13) \tvrlqnm  v29,v30,v31\n+.*:\t(10 01 10 45|45 10 01 10) \tvrlqmi  v0,v1,v2\n+.*:\t(10 64 29 05|05 29 64 10) \tvslq    v3,v4,v5\n+.*:\t(10 c7 42 05|05 42 c7 10) \tvsrq    v6,v7,v8\n+.*:\t(11 2a 5b 05|05 5b 2a 11) \tvsraq   v9,v10,v11\n+.*:\t(fd 80 6e 88|88 6e 80 fd) \txscvqpuqz v12,v13\n+.*:\t(fd c8 7e 88|88 7e c8 fd) \txscvqpsqz v14,v15\n+.*:\t(fe 03 8e 88|88 8e 03 fe) \txscvuqqp v16,v17\n+.*:\t(fe 4b 9e 88|88 9e 4b fe) \txscvsqqp v18,v19\n+.*:\t(fe 80 af c4|c4 af 80 fe) \tdcffixqq f20,v21\n+.*:\t(fe e1 b7 c4|c4 b7 e1 fe) \tdctfixqq v23,f22"
    },
    {
      "sha": "4dce648c36f85f5100a2122350306fafd63c2aaf",
      "filename": "gas/testsuite/gas/ppc/int128.s",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/testsuite/gas/ppc/int128.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/testsuite/gas/ppc/int128.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/int128.s?ref=c7d7aea2f5fadff84eee78aaa0b1830016d26319",
      "patch": "@@ -0,0 +1,34 @@\n+\t.text\n+_start:\n+\tvmuleud\t1,2,3\n+\tvmuloud\t4,5,6\n+\tvmulesd\t7,8,9\n+\tvmulosd\t10,11,12\n+\tvmsumcud 13,14,15,16\n+\tvdivsq\t17,18,19\n+\tvdivuq\t20,21,21\n+\tvdivesq\t22,23,24\n+\tvdiveuq\t25,26,27\n+\tvmodsq\t28,29,30\n+\tvmoduq\t31,0,1\n+\tvextsd2q 2,3\n+\tvcmpuq\t4,5\n+\tvcmpsq\t1,6,7\n+\tvcmpequq 8,9,10\n+\tvcmpequq. 11,12,13\n+\tvcmpgtsq 14,15,16\n+\tvcmpgtsq. 17,18,19\n+\tvcmpgtuq 20,21,22\n+\tvcmpgtuq. 23,24,25\n+\tvrlq\t26,27,28\n+\tvrlqnm\t29,30,31\n+\tvrlqmi\t0,1,2\n+\tvslq\t3,4,5\n+\tvsrq\t6,7,8\n+\tvsraq\t9,10,11\n+\txscvqpuqz 12,13\n+\txscvqpsqz 14,15\n+\txscvuqqp 16,17\n+\txscvsqqp 18,19\n+\tdcffixqq 20,21\n+\tdctfixqq 23,22"
    },
    {
      "sha": "6732b90993e7e5886fa6cb5e9adbac4788454db5",
      "filename": "gas/testsuite/gas/ppc/ppc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/testsuite/gas/ppc/ppc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7d7aea2f5fadff84eee78aaa0b1830016d26319/gas/testsuite/gas/ppc/ppc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/ppc.exp?ref=c7d7aea2f5fadff84eee78aaa0b1830016d26319",
      "patch": "@@ -134,3 +134,4 @@ if { [supports_ppc64] } then {\n run_dump_test \"byte_rev\"\n run_dump_test \"vec_mul\"\n run_dump_test \"vsx_32byte\"\n+run_dump_test \"int128\""
    },
    {
      "sha": "710504954c32a40898fcc7850cf9c5f4bcf82125",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7d7aea2f5fadff84eee78aaa0b1830016d26319/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7d7aea2f5fadff84eee78aaa0b1830016d26319/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=c7d7aea2f5fadff84eee78aaa0b1830016d26319",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (powerpc_opcodes): Add vrlq, vdivuq, vmsumcud, vrlqmi,\n+\tvmuloud, vcmpuq, vslq, vdivsq, vcmpsq, vrlqnm, vcmpequq, vmulosd,\n+\tvsrq, vdiveuq, vcmpgtuq, vmuleud, vsraq, vdivesq, vcmpgtsq, vmulesd,\n+\tvcmpequq., vextsd2q, vmoduq, vcmpgtuq., vmodsq, vcmpgtsq., xscvqpuqz,\n+\txscvuqqp, xscvqpsqz, xscvsqqp, dcffixqq, dctfixqq.\n+\n 2020-05-11  Alan Modra  <amodra@gmail.com>\n \n \t* ppc-opc.c (insert_xtp, extract_xtp): New functions."
    },
    {
      "sha": "5e73880d92d74307f279b93ad3cfc07360f5cc5f",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7d7aea2f5fadff84eee78aaa0b1830016d26319/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7d7aea2f5fadff84eee78aaa0b1830016d26319/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=c7d7aea2f5fadff84eee78aaa0b1830016d26319",
      "patch": "@@ -3313,6 +3313,9 @@ const unsigned int num_powerpc_operands = (sizeof (powerpc_operands)\n /* A VX_MASK with the VA field fixed with a PS field.  */\n #define VXVAPS_MASK ((VX_MASK | (0x1f << 16)) & ~(0x1 << 9))\n \n+/* A VX_MASK for instructions using a BF field.  */\n+#define VXBF_MASK (VX_MASK | (3 << 21))\n+\n /* A VA form instruction.  */\n #define VXA(op, xop) (OP (op) | (((uint64_t)(xop)) & 0x03f))\n \n@@ -3910,10 +3913,12 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vmul10cuq\",\tVX (4,\t 1),\tVXVB_MASK,   PPCVEC3,\t0,\t\t{VD, VA}},\n {\"vmaxub\",\tVX (4,\t 2),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vrlb\",\tVX (4,\t 4),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vrlq\",\tVX (4,\t 5),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vcmpequb\",\tVXR(4,\t 6,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpneb\",\tVXR(4,\t 7,0),\tVXR_MASK,    PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vmuloub\",\tVX (4,\t 8),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vaddfp\",\tVX (4,\t10),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vdivuq\",\tVX (4,  11),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"psq_lx\",\tXW (4,\t 6,0),\tXW_MASK,     PPCPS,\t0,\t\t{FRT,RA,RB,PSWM,PSQM}},\n {\"vmrghb\",\tVX (4,\t12),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"psq_stx\",\tXW (4,\t 7,0),\tXW_MASK,     PPCPS,\t0,\t\t{FRS,RA,RB,PSWM,PSQM}},\n@@ -3939,6 +3944,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vmladduhm\",\tVXA(4,\t34),\tVXA_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB, VC}},\n {\"vmsumudm\",\tVXA(4,\t35),\tVXA_MASK,    PPCVEC3,\t0,\t\t{VD, VA, VB, VC}},\n {\"ps_div\",\tA  (4,\t18,0),\tAFRC_MASK,   PPCPS,\t0,\t\t{FRT, FRA, FRB}},\n+{\"vmsumcud\",\tVXA(4,  23),\tVXA_MASK,    POWER10,\t0,\t\t{VD, VA, VB, VC}},\n {\"vmsumubm\",\tVXA(4,\t36),\tVXA_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB, VC}},\n {\"ps_div.\",\tA  (4,\t18,1),\tAFRC_MASK,   PPCPS,\t0,\t\t{FRT, FRA, FRB}},\n {\"vmsummbm\",\tVXA(4,\t37),\tVXA_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB, VC}},\n@@ -3985,6 +3991,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vmul10ecuq\",\tVX (4,\t65),\tVX_MASK,     PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vmaxuh\",\tVX (4,\t66),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vrlh\",\tVX (4,\t68),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vrlqmi\",\tVX (4,\t69),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vcmpequh\",\tVXR(4,\t70,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpneh\",\tVXR(4,\t71,0),\tVXR_MASK,    PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vmulouh\",\tVX (4,\t72),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n@@ -4024,18 +4031,22 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vrldmi\",\tVX (4, 197),\tVX_MASK,     PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vcmpeqfp\",\tVXR(4, 198,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpequd\",\tVXR(4, 199,0),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vmuloud\",\tVX (4, 200),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vdivud\",\tVX (4, 203),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vpkuwus\",\tVX (4, 206),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"machhws\",\tXO (4, 108,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"machhws.\",\tXO (4, 108,0,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"nmachhws\",\tXO (4, 110,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"nmachhws.\",\tXO (4, 110,0,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"vadduqm\",\tVX (4, 256),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vcmpuq\",\tVX (4, 257),\tVXBF_MASK,   POWER10,\t0,\t\t{OBF, VA, VB}},\n {\"vmaxsb\",\tVX (4, 258),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vslb\",\tVX (4, 260),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vslq\",\tVX (4, 261),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vcmpnezb\",\tVXR(4, 263,0),\tVXR_MASK,    PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vmulosb\",\tVX (4, 264),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vrefp\",\tVX (4, 266),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n+{\"vdivsq\",\tVX (4, 267),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmrglb\",\tVX (4, 268),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vpkshus\",\tVX (4, 270),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"ps_nabs\",\tXRC(4, 136,0),\tXRA_MASK,    PPCPS,\t0,\t\t{FRT, FRB}},\n@@ -4045,8 +4056,10 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"macchwu\",\tXO (4, 140,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"macchwu.\",\tXO (4, 140,0,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"vaddcuq\",\tVX (4, 320),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vcmpsq\",\tVX (4, 321),\tVXBF_MASK,   POWER10,\t0,\t\t{OBF, VA, VB}},\n {\"vmaxsh\",\tVX (4, 322),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vslh\",\tVX (4, 324),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vrlqnm\",\tVX (4, 325),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vcmpnezh\",\tVXR(4, 327,0),\tVXR_MASK,    PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vmulosh\",\tVX (4, 328),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vrsqrtefp\",\tVX (4, 330),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n@@ -4074,6 +4087,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vsl\",\t\tVX (4, 452),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vrldnm\",\tVX (4, 453),\tVX_MASK,     PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgefp\",\tVXR(4, 454,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vcmpequq\",\tVXR(4, 455,0),\tVXR_MASK,    POWER10,\t0,\t\t{VD, VA, VB}},\n+{\"vmulosd\",\tVX (4, 456),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmulld\",\tVX (4, 457),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vlogefp\",\tVX (4, 458),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n {\"vdivsd\",\tVX (4, 459),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n@@ -4090,6 +4105,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evsubfw\",\tVX (4, 516),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"evsubw\",\tVX (4, 516),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RB, RA}},\n {\"vsrb\",\tVX (4, 516),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vsrq\",\tVX (4, 517),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evsubifw\",\tVX (4, 518),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, UIMM, RB}},\n {\"evsubiw\",\tVX (4, 518),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RB, UIMM}},\n {\"vcmpgtub\",\tVXR(4, 518,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n@@ -4098,6 +4114,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evneg\",\tVX (4, 521),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"evextsb\",\tVX (4, 522),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"vrfin\",\tVX (4, 522),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n+{\"vdiveuq\",\tVX (4, 523),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evextsh\",\tVX (4, 523),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"evrndw\",\tVX (4, 524),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"vspltb\",\tVX (4, 524),   VXUIMM4_MASK, PPCVEC,\t0,\t\t{VD, VB, UIMM4}},\n@@ -4163,6 +4180,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evfsnabs\",\tVX (4, 645),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"evfsneg\",\tVX (4, 646),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"vcmpgtuw\",\tVXR(4, 646,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vcmpgtuq\",\tVXR(4, 647,0),\tVXR_MASK,    POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evfssqrt\",\tVX_RB_CONST(4, 647, 0),  VX_RB_CONST_MASK,\tPPCEFS2,\t0,\t\t{RD, RA}},\n {\"vmuleuw\",\tVX (4, 648),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"evfsmul\",\tVX (4, 648),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n@@ -4226,6 +4244,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vcmpgtfp\",\tVXR(4, 710,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"efssqrt\",\tVX_RB_CONST(4, 711, 0), VX_RB_CONST_MASK,PPCEFS2, 0,\t{RD, RA}},\n {\"vcmpgtud\",\tVXR(4, 711,0),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vmuleud\",\tVX (4, 712),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"efsmul\",\tVX (4, 712),\tVX_MASK,     PPCEFS,\t0,\t\t{RS, RA, RB}},\n {\"vmulhud\",\tVX (4, 713),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"efsdiv\",\tVX (4, 713),\tVX_MASK,     PPCEFS,\t0,\t\t{RS, RA, RB}},\n@@ -4303,13 +4322,15 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evldw\",\tVX (4, 771),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, EVUIMM_8, RA}},\n {\"evldhx\",\tVX (4, 772),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"vsrab\",\tVX (4, 772),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vsraq\",\tVX (4, 773),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evldh\",\tVX (4, 773),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, EVUIMM_8, RA}},\n {\"vcmpgtsb\",\tVXR(4, 774,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"evlhhesplatx\",VX (4, 776),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"vmulesb\",\tVX (4, 776),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"evlhhesplat\",\tVX (4, 777),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, EVUIMM_2, RA}},\n {\"vcfux\",\tVX (4, 778),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n {\"vcuxwfp\",\tVX (4, 778),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n+{\"vdivesq\",\tVX (4, 779),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evlhhousplatx\",VX(4, 780),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"vspltisb\",\tVX (4, 780),\tVXVB_MASK,   PPCVEC,\t0,\t\t{VD, SIMM}},\n {\"vinsertb\",\tVX (4, 781),   VXUIMM4_MASK, PPCVEC3,\t0,\t\t{VD, VB, UIMM4}},\n@@ -4366,6 +4387,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vminsw\",\tVX (4, 898),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vsraw\",\tVX (4, 900),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgtsw\",\tVXR(4, 902,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vcmpgtsq\",\tVXR(4, 903,0),\tVXR_MASK,    POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmulesw\",\tVX (4, 904),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vmulhsw\",\tVX (4, 905),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vctuxs\",\tVX (4, 906),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n@@ -4379,6 +4401,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vsrad\",\tVX (4, 964),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vcmpbfp\",\tVXR(4, 966,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgtsd\",\tVXR(4, 967,0),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vmulesd\",\tVX (4, 968),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmulhsd\",\tVX (4, 969),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vctsxs\",\tVX (4, 970),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n {\"vcfpsxws\",\tVX (4, 970),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n@@ -4612,6 +4635,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vcmpgefp.\",\tVXR(4, 454,1),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"udi7fcm.\",\tAPU(4, 739,0),\tAPU_MASK, PPC405|PPC440, 0,\t\t{URT, URA, URB}},\n {\"udi7fcm\",\tAPU(4, 739,1),\tAPU_MASK, PPC405|PPC440, 0,\t\t{URT, URA, URB}},\n+{\"vcmpequq.\",\tVXR(4, 455,1),\tVXR_MASK,    POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evmwhssfan\",\tVX (4,1479),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n {\"vsbox\",\tVX (4,1480),\tVXVB_MASK,   PPCVEC2,\t0,\t\t{VD, VA}},\n {\"evmwlumianw\",\tVX (4,1480),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n@@ -4647,6 +4671,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vextsb2d\",\tVXVA(4,1538,24), VXVA_MASK,  PPCVEC3,\t0,\t\t{VD, VB}},\n {\"vextsh2d\",\tVXVA(4,1538,25), VXVA_MASK,  PPCVEC3,\t0,\t\t{VD, VB}},\n {\"vextsw2d\",\tVXVA(4,1538,26), VXVA_MASK,  PPCVEC3,\t0,\t\t{VD, VB}},\n+{\"vextsd2q\",\tVXVA(4,1538,27), VXVA_MASK,  POWER10,\t0,\t\t{VD, VB}},\n {\"vctzb\",\tVXVA(4,1538,28), VXVA_MASK,  PPCVEC3,\t0,\t\t{VD, VB}},\n {\"vctzh\",\tVXVA(4,1538,29), VXVA_MASK,  PPCVEC3,\t0,\t\t{VD, VB}},\n {\"vctzw\",\tVXVA(4,1538,30), VXVA_MASK,  PPCVEC3,\t0,\t\t{VD, VB}},\n@@ -4656,6 +4681,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"udi8fcm.\",\tAPU(4, 771,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"udi8fcm\",\tAPU(4, 771,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vsum4ubs\",\tVX (4,1544),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vmoduq\",\tVX (4,1547),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vextublx\",\tVX (4,1549),\tVX_MASK,     PPCVEC3,\t0,\t\t{RT, RA, VB}},\n {\"vsubuhs\",\tVX (4,1600),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"mtvscr\",\tVX (4,1604),\tVXVDVA_MASK, PPCVEC,\t0,\t\t{VB}},\n@@ -4670,6 +4696,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"veqv\",\tVX (4,1668),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgtuw.\",\tVXR(4, 646,1),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"udi10fcm.\",\tAPU(4, 835,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n+{\"vcmpgtuq.\",\tVXR(4, 647,1),\tVXR_MASK,    POWER10,\t0,\t\t{VD, VA, VB}},\n {\"udi10fcm\",\tAPU(4, 835,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vsum2sws\",\tVX (4,1672),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vmoduw\",\tVX (4,1675),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n@@ -4691,6 +4718,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"udi12fcm.\",\tAPU(4, 899,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"udi12fcm\",\tAPU(4, 899,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vsum4sbs\",\tVX (4,1800),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vmodsq\",\tVX (4,1803),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vextubrx\",\tVX (4,1805),\tVX_MASK,     PPCVEC3,\t0,\t\t{RT, RA, VB}},\n {\"maclhwuo\",\tXO (4, 396,1,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"maclhwuo.\",\tXO (4, 396,1,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4711,6 +4739,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vpopcntw\",\tVX (4,1923),\tVXVA_MASK,   PPCVEC2,\t0,\t\t{VD, VB}},\n {\"vcmpgtsw.\",\tVXR(4, 902,1),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"udi14fcm.\",\tAPU(4, 963,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n+{\"vcmpgtsq.\",\tVXR(4, 903,1),\tVXR_MASK,    POWER10,\t0,\t\t{VD, VA, VB}},\n {\"udi14fcm\",\tAPU(4, 963,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vsumsws\",\tVX (4,1928),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vmodsw\",\tVX (4,1931),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n@@ -8012,10 +8041,14 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"denbcdq\",\tXRC(63,834,0), X_MASK|Q_MASK, POWER6,\tPPCVLE,\t\t{S, FRTp, FRBp}},\n {\"denbcdq.\",\tXRC(63,834,1), X_MASK|Q_MASK, POWER6,\tPPCVLE,\t\t{S, FRTp, FRBp}},\n \n+{\"xscvqpuqz\",\tXVA(63,836,0),\tXVA_MASK,    POWER10,\tPPCVLE,\t\t{VD, VB}},\n {\"xscvqpuwz\",\tXVA(63,836,1),\tXVA_MASK,    PPCVSX3,\tPPCVLE,\t\t{VD, VB}},\n {\"xscvudqp\",\tXVA(63,836,2),\tXVA_MASK,    PPCVSX3,\tPPCVLE,\t\t{VD, VB}},\n+{\"xscvuqqp\",\tXVA(63,836,3),\tXVA_MASK,    POWER10,\tPPCVLE,\t\t{VD, VB}},\n+{\"xscvqpsqz\",\tXVA(63,836,8),\tXVA_MASK,    POWER10,\tPPCVLE,\t\t{VD, VB}},\n {\"xscvqpswz\",\tXVA(63,836,9),\tXVA_MASK,    PPCVSX3,\tPPCVLE,\t\t{VD, VB}},\n {\"xscvsdqp\",\tXVA(63,836,10),\tXVA_MASK,    PPCVSX3,\tPPCVLE,\t\t{VD, VB}},\n+{\"xscvsqqp\",\tXVA(63,836,11),\tXVA_MASK,    POWER10,\tPPCVLE,\t\t{VD, VB}},\n {\"xscvqpudz\",\tXVA(63,836,17),\tXVA_MASK,    PPCVSX3,\tPPCVLE,\t\t{VD, VB}},\n {\"xscvqpdp\",\tXVARC(63,836,20,0), XVA_MASK, PPCVSX3,\tPPCVLE,\t\t{VD, VB}},\n {\"xscvqpdpo\",\tXVARC(63,836,20,1), XVA_MASK, PPCVSX3,\tPPCVLE,\t\t{VD, VB}},\n@@ -8044,6 +8077,9 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n \n {\"fcfidu\",\tXRC(63,974,0),\tXRA_MASK, POWER7|PPCA2,\tPPCVLE,\t\t{FRT, FRB}},\n {\"fcfidu.\",\tXRC(63,974,1),\tXRA_MASK, POWER7|PPCA2,\tPPCVLE,\t\t{FRT, FRB}},\n+\n+{\"dcffixqq\",\tXVA(63,994,0),\tXVA_MASK,    POWER10,\tPPCVLE,\t\t{FRTp, VB}},\n+{\"dctfixqq\",\tXVA(63,994,1),\tXVA_MASK,    POWER10,\tPPCVLE,\t\t{VD, FRBp}},\n };\n \n const unsigned int powerpc_num_opcodes ="
    }
  ]
}