{
  "sha": "6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmZhOTgzMWY4OWEzYzc4OGY0ZWExYWI2ZDFlMjU0M2RhYmZjMGY4ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:07Z"
    },
    "message": "Split out eval_op_rust_complement\n\nThis splits UNOP_COMPLEMENT into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (eval_op_rust_complement): New function.\n\t(rust_evaluate_subexp): Use it.",
    "tree": {
      "sha": "fa687113914d5070dd7a5b8c37a2cc3bb64c7dc6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fa687113914d5070dd7a5b8c37a2cc3bb64c7dc6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d123f9e4a3936aeff524322e052ce1fd9ff1f19f"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 23,
    "deletions": 10
  },
  "files": [
    {
      "sha": "797349276d0803e5d7fc6ecfe2d95ac7c554e3e0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (eval_op_rust_complement): New function.\n+\t(rust_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (eval_op_rust_ind): New function."
    },
    {
      "sha": "449f14c80f8451b11c6abb4e6b41a7912c90acbe",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=6fa9831f89a3c788f4ea1ab6d1e2543dabfc0f8e",
      "patch": "@@ -1337,6 +1337,23 @@ eval_op_rust_ind (struct type *expect_type, struct expression *exp,\n   return value_ind (value);\n }\n \n+/* A helper function for UNOP_COMPLEMENT.  */\n+\n+static struct value *\n+eval_op_rust_complement (struct type *expect_type, struct expression *exp,\n+\t\t\t enum noside noside,\n+\t\t\t struct value *value)\n+{\n+  if (noside == EVAL_SKIP)\n+    {\n+      /* Preserving the type is enough.  */\n+      return value;\n+    }\n+  if (value_type (value)->code () == TYPE_CODE_BOOL)\n+    return value_from_longest (value_type (value), value_logical_not (value));\n+  return value_complement (value);\n+}\n+\n /* evaluate_exp implementation for Rust.  */\n \n static struct value *\n@@ -1367,16 +1384,7 @@ rust_evaluate_subexp (struct type *expect_type, struct expression *exp,\n \n \t++*pos;\n \tvalue = evaluate_subexp (nullptr, exp, pos, noside);\n-\tif (noside == EVAL_SKIP)\n-\t  {\n-\t    /* Preserving the type is enough.  */\n-\t    return value;\n-\t  }\n-\tif (value_type (value)->code () == TYPE_CODE_BOOL)\n-\t  result = value_from_longest (value_type (value),\n-\t\t\t\t       value_logical_not (value));\n-\telse\n-\t  result = value_complement (value);\n+\tresult = eval_op_rust_complement (expect_type, exp, noside, value);\n       }\n       break;\n "
    }
  ]
}