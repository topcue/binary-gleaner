{
  "sha": "1dd588507782591478882a891f64945af9e2b86c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWRkNTg4NTA3NzgyNTkxNDc4ODgyYTg5MWY2NDk0NWFmOWUyYjg2Yw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-01T15:34:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-10-02T15:53:17Z"
    },
    "message": "Make current_source_* per-program-space\n\nThis changes current_source_symtab and current_source_line to be\nper-program-space.  This ensures that switching inferiors will\npreserve the current \"list\" location for that inferior, and also\nensures that the default expression evaluation context always comes\nwith the current inferior.\n\nNo test case, because the latter problem crops up with an existing\ngdb.multi test case once this entire series has been applied.\n\ngdb/ChangeLog\n2019-10-02  Tom Tromey  <tromey@adacore.com>\n\n\t* source.c (struct current_source_location): New.\n\t(current_source_key): New global.\n\t(current_source_symtab, current_source_line)\n\t(current_source_pspace): Remove.\n\t(get_source_location): New function.\n\t(get_current_source_symtab_and_line)\n\t(set_default_source_symtab_and_line)\n\t(set_current_source_symtab_and_line)\n\t(clear_current_source_symtab_and_line, select_source_symtab)\n\t(info_source_command, print_source_lines_base)\n\t(info_line_command, search_command_helper, _initialize_source):\n\tUpdate.",
    "tree": {
      "sha": "ecd664c126fdab1a950c0bba67e35c3e2e5bccad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ecd664c126fdab1a950c0bba67e35c3e2e5bccad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1dd588507782591478882a891f64945af9e2b86c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dd588507782591478882a891f64945af9e2b86c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1dd588507782591478882a891f64945af9e2b86c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dd588507782591478882a891f64945af9e2b86c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5c281dbb2458be9d58355e865f527e96b40bcd8c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c281dbb2458be9d58355e865f527e96b40bcd8c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5c281dbb2458be9d58355e865f527e96b40bcd8c"
    }
  ],
  "stats": {
    "total": 139,
    "additions": 91,
    "deletions": 48
  },
  "files": [
    {
      "sha": "bf2811a0867b506a4d4eb65a243309e3fdf9011b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd588507782591478882a891f64945af9e2b86c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd588507782591478882a891f64945af9e2b86c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1dd588507782591478882a891f64945af9e2b86c",
      "patch": "@@ -1,3 +1,18 @@\n+2019-10-02  Tom Tromey  <tromey@adacore.com>\n+\n+\t* source.c (struct current_source_location): New.\n+\t(current_source_key): New global.\n+\t(current_source_symtab, current_source_line)\n+\t(current_source_pspace): Remove.\n+\t(get_source_location): New function.\n+\t(get_current_source_symtab_and_line)\n+\t(set_default_source_symtab_and_line)\n+\t(set_current_source_symtab_and_line)\n+\t(clear_current_source_symtab_and_line, select_source_symtab)\n+\t(info_source_command, print_source_lines_base)\n+\t(info_line_command, search_command_helper, _initialize_source):\n+\tUpdate.\n+\n 2019-10-02  Tom Tromey  <tromey@adacore.com>\n \n \t* source.c (select_source_symtab): Don't call"
    },
    {
      "sha": "74797525aa1a082b6ecda4292f125d1a76c60ceb",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 76,
      "deletions": 48,
      "changes": 124,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd588507782591478882a891f64945af9e2b86c/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd588507782591478882a891f64945af9e2b86c/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=1dd588507782591478882a891f64945af9e2b86c",
      "patch": "@@ -67,15 +67,20 @@ struct substitute_path_rule\n \n static struct substitute_path_rule *substitute_path_rules = NULL;\n \n-/* Symtab of default file for listing lines of.  */\n+/* An instance of this is attached to each program space.  */\n \n-static struct symtab *current_source_symtab;\n+struct current_source_location\n+{\n+  /* Symtab of default file for listing lines of.  */\n+\n+  struct symtab *symtab = nullptr;\n \n-/* Default next line to list.  */\n+  /* Default next line to list.  */\n \n-static int current_source_line;\n+  int line = 0;\n+};\n \n-static struct program_space *current_source_pspace;\n+static program_space_key<current_source_location> current_source_key;\n \n /* Default number of lines to print with commands like \"list\".\n    This is based on guessing how many long (i.e. more than chars_per_line\n@@ -163,17 +168,31 @@ get_lines_to_list (void)\n   return lines_to_list;\n }\n \n+/* A helper to return the current source location object for PSPACE,\n+   creating it if it does not exist.  */\n+\n+static current_source_location *\n+get_source_location (program_space *pspace)\n+{\n+  current_source_location *loc\n+    = current_source_key.get (pspace);\n+  if (loc == nullptr)\n+    loc = current_source_key.emplace (pspace);\n+  return loc;\n+}\n+\n /* Return the current source file for listing and next line to list.\n    NOTE: The returned sal pc and end fields are not valid.  */\n    \n struct symtab_and_line\n get_current_source_symtab_and_line (void)\n {\n   symtab_and_line cursal;\n+  current_source_location *loc = get_source_location (current_program_space);\n \n-  cursal.pspace = current_source_pspace;\n-  cursal.symtab = current_source_symtab;\n-  cursal.line = current_source_line;\n+  cursal.pspace = current_program_space;\n+  cursal.symtab = loc->symtab;\n+  cursal.line = loc->line;\n   cursal.pc = 0;\n   cursal.end = 0;\n   \n@@ -195,7 +214,8 @@ set_default_source_symtab_and_line (void)\n     error (_(\"No symbol table is loaded.  Use the \\\"file\\\" command.\"));\n \n   /* Pull in a current source symtab if necessary.  */\n-  if (current_source_symtab == 0)\n+  current_source_location *loc = get_source_location (current_program_space);\n+  if (loc->symtab == nullptr)\n     select_source_symtab (0);\n }\n \n@@ -209,15 +229,16 @@ set_current_source_symtab_and_line (const symtab_and_line &sal)\n {\n   symtab_and_line cursal;\n \n-  cursal.pspace = current_source_pspace;\n-  cursal.symtab = current_source_symtab;\n-  cursal.line = current_source_line;\n+  current_source_location *loc = get_source_location (sal.pspace);\n+\n+  cursal.pspace = sal.pspace;\n+  cursal.symtab = loc->symtab;\n+  cursal.line = loc->line;\n   cursal.pc = 0;\n   cursal.end = 0;\n \n-  current_source_pspace = sal.pspace;\n-  current_source_symtab = sal.symtab;\n-  current_source_line = sal.line;\n+  loc->symtab = sal.symtab;\n+  loc->line = sal.line;\n \n   /* Force the next \"list\" to center around the current line.  */\n   clear_lines_listed_range ();\n@@ -230,8 +251,9 @@ set_current_source_symtab_and_line (const symtab_and_line &sal)\n void\n clear_current_source_symtab_and_line (void)\n {\n-  current_source_symtab = 0;\n-  current_source_line = 0;\n+  current_source_location *loc = get_source_location (current_program_space);\n+  loc->symtab = nullptr;\n+  loc->line = 0;\n }\n \n /* See source.h.  */\n@@ -241,13 +263,15 @@ select_source_symtab (struct symtab *s)\n {\n   if (s)\n     {\n-      current_source_symtab = s;\n-      current_source_line = 1;\n-      current_source_pspace = SYMTAB_PSPACE (s);\n+      current_source_location *loc\n+\t= get_source_location (SYMTAB_PSPACE (s));\n+      loc->symtab = s;\n+      loc->line = 1;\n       return;\n     }\n \n-  if (current_source_symtab)\n+  current_source_location *loc = get_source_location (current_program_space);\n+  if (loc->symtab != nullptr)\n     return;\n \n   /* Make the default place to list be the function `main'\n@@ -256,16 +280,15 @@ select_source_symtab (struct symtab *s)\n   if (bsym.symbol != nullptr && SYMBOL_CLASS (bsym.symbol) == LOC_BLOCK)\n     {\n       symtab_and_line sal = find_function_start_sal (bsym.symbol, true);\n-      current_source_pspace = sal.pspace;\n-      current_source_symtab = sal.symtab;\n-      current_source_line = std::max (sal.line - (lines_to_list - 1), 1);\n+      loc->symtab = sal.symtab;\n+      loc->line = std::max (sal.line - (lines_to_list - 1), 1);\n       return;\n     }\n \n   /* Alright; find the last file in the symtab list (ignoring .h's\n      and namespace symtabs).  */\n \n-  current_source_line = 1;\n+  loc->line = 1;\n \n   for (objfile *ofp : current_program_space->objfiles ())\n     {\n@@ -278,25 +301,22 @@ select_source_symtab (struct symtab *s)\n \n \t      if (!(len > 2 && (strcmp (&name[len - 2], \".h\") == 0\n \t\t\t\t|| strcmp (name, \"<<C++-namespaces>>\") == 0)))\n-\t\t{\n-\t\t  current_source_pspace = current_program_space;\n-\t\t  current_source_symtab = symtab;\n-\t\t}\n+\t\tloc->symtab = symtab;\n \t    }\n \t}\n     }\n \n-  if (current_source_symtab)\n+  if (loc->symtab != nullptr)\n     return;\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n       if (objfile->sf)\n \ts = objfile->sf->qf->find_last_source_symtab (objfile);\n       if (s)\n-\tcurrent_source_symtab = s;\n+\tloc->symtab = s;\n     }\n-  if (current_source_symtab)\n+  if (loc->symtab != nullptr)\n     return;\n \n   error (_(\"Can't find a default source file\"));\n@@ -620,7 +640,9 @@ add_path (const char *dirname, char **which_path, int parse_separators)\n static void\n info_source_command (const char *ignore, int from_tty)\n {\n-  struct symtab *s = current_source_symtab;\n+  current_source_location *loc\n+    = get_source_location (current_program_space);\n+  struct symtab *s = loc->symtab;\n   struct compunit_symtab *cust;\n \n   if (!s)\n@@ -1179,8 +1201,11 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n   struct ui_out *uiout = current_uiout;\n \n   /* Regardless of whether we can open the file, set current_source_symtab.  */\n-  current_source_symtab = s;\n-  current_source_line = line;\n+  current_source_location *loc\n+    = get_source_location (current_program_space);\n+\n+  loc->symtab = s;\n+  loc->line = line;\n   first_line_listed = line;\n \n   /* If printing of source lines is disabled, just print file and line\n@@ -1274,13 +1299,13 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n     {\n       char buf[20];\n \n-      last_line_listed = current_source_line;\n+      last_line_listed = loc->line;\n       if (flags & PRINT_SOURCE_LINES_FILENAME)\n         {\n           uiout->text (symtab_to_filename_for_display (s));\n           uiout->text (\":\");\n         }\n-      xsnprintf (buf, sizeof (buf), \"%d\\t\", current_source_line++);\n+      xsnprintf (buf, sizeof (buf), \"%d\\t\", loc->line++);\n       uiout->text (buf);\n \n       while (*iter != '\\0')\n@@ -1372,12 +1397,14 @@ info_line_command (const char *arg, int from_tty)\n \n   if (arg == 0)\n     {\n-      curr_sal.symtab = current_source_symtab;\n+      current_source_location *loc\n+\t= get_source_location (current_program_space);\n+      curr_sal.symtab = loc->symtab;\n       curr_sal.pspace = current_program_space;\n       if (last_line_listed != 0)\n \tcurr_sal.line = last_line_listed;\n       else\n-\tcurr_sal.line = current_source_line;\n+\tcurr_sal.line = loc->line;\n \n       sals = curr_sal;\n     }\n@@ -1479,25 +1506,27 @@ search_command_helper (const char *regex, int from_tty, bool forward)\n   if (msg)\n     error ((\"%s\"), msg);\n \n-  if (current_source_symtab == 0)\n+  current_source_location *loc\n+    = get_source_location (current_program_space);\n+  if (loc->symtab == nullptr)\n     select_source_symtab (0);\n \n-  scoped_fd desc (open_source_file (current_source_symtab));\n+  scoped_fd desc (open_source_file (loc->symtab));\n   if (desc.get () < 0)\n-    perror_with_name (symtab_to_filename_for_display (current_source_symtab));\n+    perror_with_name (symtab_to_filename_for_display (loc->symtab));\n \n   int line = (forward\n \t      ? last_line_listed + 1\n \t      : last_line_listed - 1);\n \n   const std::vector<off_t> *offsets;\n   if (line < 1\n-      || !g_source_cache.get_line_charpos (current_source_symtab, &offsets)\n+      || !g_source_cache.get_line_charpos (loc->symtab, &offsets)\n       || line > offsets->size ())\n     error (_(\"Expression not found\"));\n \n   if (lseek (desc.get (), (*offsets)[line - 1], 0) < 0)\n-    perror_with_name (symtab_to_filename_for_display (current_source_symtab));\n+    perror_with_name (symtab_to_filename_for_display (loc->symtab));\n \n   gdb_file_up stream = desc.to_file (FDOPEN_MODE);\n   clearerr (stream.get ());\n@@ -1532,9 +1561,9 @@ search_command_helper (const char *regex, int from_tty, bool forward)\n       if (re_exec (buf.data ()) > 0)\n \t{\n \t  /* Match!  */\n-\t  print_source_lines (current_source_symtab, line, line + 1, 0);\n+\t  print_source_lines (loc->symtab, line, line + 1, 0);\n \t  set_internalvar_integer (lookup_internalvar (\"_\"), line);\n-\t  current_source_line = std::max (line - lines_to_list / 2, 1);\n+\t  loc->line = std::max (line - lines_to_list / 2, 1);\n \t  return;\n \t}\n \n@@ -1548,7 +1577,7 @@ search_command_helper (const char *regex, int from_tty, bool forward)\n \t  if (fseek (stream.get (), (*offsets)[line - 1], 0) < 0)\n \t    {\n \t      const char *filename\n-\t\t= symtab_to_filename_for_display (current_source_symtab);\n+\t\t= symtab_to_filename_for_display (loc->symtab);\n \t      perror_with_name (filename);\n \t    }\n \t}\n@@ -1812,7 +1841,6 @@ _initialize_source (void)\n {\n   struct cmd_list_element *c;\n \n-  current_source_symtab = 0;\n   init_source_path ();\n \n   /* The intention is to use POSIX Basic Regular Expressions."
    }
  ]
}