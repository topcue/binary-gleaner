{
  "sha": "956ea65cd707707c0f725930214cbc781367a831",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTU2ZWE2NWNkNzA3NzA3YzBmNzI1OTMwMjE0Y2JjNzgxMzY3YTgzMQ==",
  "commit": {
    "author": {
      "name": "Michael Matz",
      "email": "matz@suse.de",
      "date": "2021-06-07T13:52:31Z"
    },
    "committer": {
      "name": "Michael Matz",
      "email": "matz@suse.de",
      "date": "2021-06-08T14:30:07Z"
    },
    "message": "bfd/elf: Don't read non-existing secondary relocs\n\nWithout this we unconditionally try to slurp in secondary\nrelocs for each input section, leading to quadratic behaviour\neven for strip(1).  On write-out we already used a flag to avoid\nthis.\n\nSo track existence of secondary relocs on read-in as well and\nonly slurp in when needed.  This still doesn't implement a proper\nlist of secondary reloc sections, and still would exhibit quadratic\nbehaviour if most input sections have a secondary reloc section.\nBut at least on normal input this avoids any slowdown from trying\nto handle secondary relocation sections.\n\nbfd/\n\t* elf.c (bfd_section_from_shdr): Set has_secondary_relocs flag.\n\t(_bfd_elf_slurp_secondary_reloc_section): Use it for early-out.",
    "tree": {
      "sha": "b0eca2c74bd5a25875183a4b569b9d0524cc6ad1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b0eca2c74bd5a25875183a4b569b9d0524cc6ad1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/956ea65cd707707c0f725930214cbc781367a831",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/956ea65cd707707c0f725930214cbc781367a831",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/956ea65cd707707c0f725930214cbc781367a831",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/956ea65cd707707c0f725930214cbc781367a831/comments",
  "author": {
    "login": "susematz",
    "id": 4117296,
    "node_id": "MDQ6VXNlcjQxMTcyOTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/susematz",
    "html_url": "https://github.com/susematz",
    "followers_url": "https://api.github.com/users/susematz/followers",
    "following_url": "https://api.github.com/users/susematz/following{/other_user}",
    "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/susematz/subscriptions",
    "organizations_url": "https://api.github.com/users/susematz/orgs",
    "repos_url": "https://api.github.com/users/susematz/repos",
    "events_url": "https://api.github.com/users/susematz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/susematz/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "susematz",
    "id": 4117296,
    "node_id": "MDQ6VXNlcjQxMTcyOTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/susematz",
    "html_url": "https://github.com/susematz",
    "followers_url": "https://api.github.com/users/susematz/followers",
    "following_url": "https://api.github.com/users/susematz/following{/other_user}",
    "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/susematz/subscriptions",
    "organizations_url": "https://api.github.com/users/susematz/orgs",
    "repos_url": "https://api.github.com/users/susematz/repos",
    "events_url": "https://api.github.com/users/susematz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/susematz/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c3cfd9eb5ba7b58fae227b539e3a683e76208921",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3cfd9eb5ba7b58fae227b539e3a683e76208921",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c3cfd9eb5ba7b58fae227b539e3a683e76208921"
    }
  ],
  "stats": {
    "total": 5,
    "additions": 5,
    "deletions": 0
  },
  "files": [
    {
      "sha": "de5abafabf0b888c31a6f1eeeda529c921de467e",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/956ea65cd707707c0f725930214cbc781367a831/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/956ea65cd707707c0f725930214cbc781367a831/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=956ea65cd707707c0f725930214cbc781367a831",
      "patch": "@@ -2467,6 +2467,8 @@ bfd_section_from_shdr (bfd *abfd, unsigned int shindex)\n \t\t     \"for section %pA found - ignoring\"),\n \t\t   abfd, name, target_sect);\n \t      }\n+\t    else\n+\t      esdt->has_secondary_relocs = true;\n \t    goto success;\n \t  }\n \n@@ -12739,6 +12741,9 @@ _bfd_elf_slurp_secondary_reloc_section (bfd *       abfd,\n #endif\n     r_sym = elf32_r_sym;\n   \n+  if (!elf_section_data (sec)->has_secondary_relocs)\n+    return true;\n+\n   /* Discover if there are any secondary reloc sections\n      associated with SEC.  */\n   for (relsec = abfd->sections; relsec != NULL; relsec = relsec->next)"
    }
  ]
}