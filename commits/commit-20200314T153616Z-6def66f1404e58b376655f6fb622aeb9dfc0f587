{
  "sha": "6def66f1404e58b376655f6fb622aeb9dfc0f587",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmRlZjY2ZjE0MDRlNThiMzc2NjU1ZjZmYjYyMmFlYjlkZmMwZjU4Nw==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T15:36:16Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T15:36:16Z"
    },
    "message": "Add support for NetBSD threads in alpha-bsd-nat.c\n\nNetBSD ptrace(2) accepts thread id (LWP) as the 4th argument for threads.\n\ngdb/ChangeLog:\n\n\t* alpha-bsd-nat.c (fetch_registers): New variable lwp and pass\n\tit to the ptrace call.\n\t* alpha-bsd-nat.c (store_registers): Likewise.",
    "tree": {
      "sha": "ee219da32e9c9316de73325e1b89c4bcd4684d17",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ee219da32e9c9316de73325e1b89c4bcd4684d17"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6def66f1404e58b376655f6fb622aeb9dfc0f587",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6def66f1404e58b376655f6fb622aeb9dfc0f587",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6def66f1404e58b376655f6fb622aeb9dfc0f587",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6def66f1404e58b376655f6fb622aeb9dfc0f587/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "66eaca97ebd0f1b456ffe158fce73bafcce561bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66eaca97ebd0f1b456ffe158fce73bafcce561bb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/66eaca97ebd0f1b456ffe158fce73bafcce561bb"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 16,
    "deletions": 6
  },
  "files": [
    {
      "sha": "e4b4e68197750e1a4ddcc73ce059e50eed42f4e7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6def66f1404e58b376655f6fb622aeb9dfc0f587/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6def66f1404e58b376655f6fb622aeb9dfc0f587/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6def66f1404e58b376655f6fb622aeb9dfc0f587",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* alpha-bsd-nat.c (fetch_registers): New variable lwp and pass\n+\tit to the ptrace call.\n+\t* alpha-bsd-nat.c (store_registers): Likewise.\n+\n 2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n \n \t* alpha-bsd-nat.c: Remove <sys/procfs.h> and \"gregset.h\" from"
    },
    {
      "sha": "8a8273934c4eb31d925ad51ead9c9bd9daf8dc4d",
      "filename": "gdb/alpha-bsd-nat.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6def66f1404e58b376655f6fb622aeb9dfc0f587/gdb/alpha-bsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6def66f1404e58b376655f6fb622aeb9dfc0f587/gdb/alpha-bsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/alpha-bsd-nat.c?ref=6def66f1404e58b376655f6fb622aeb9dfc0f587",
      "patch": "@@ -55,12 +55,14 @@ getregs_supplies (int regno)\n void\n alpha_bsd_nat_target::fetch_registers (struct regcache *regcache, int regno)\n {\n+  int lwp = regcache->ptid ().lwp ();\n+\n   if (regno == -1 || getregs_supplies (regno))\n     {\n       struct reg gregs;\n \n       if (ptrace (PT_GETREGS, regcache->ptid ().pid (),\n-\t\t  (PTRACE_TYPE_ARG3) &gregs, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &gregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get registers\"));\n \n       alphabsd_supply_reg (regcache, (char *) &gregs, regno);\n@@ -74,7 +76,7 @@ alpha_bsd_nat_target::fetch_registers (struct regcache *regcache, int regno)\n       struct fpreg fpregs;\n \n       if (ptrace (PT_GETFPREGS, regcache->ptid ().pid (),\n-\t\t  (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get floating point status\"));\n \n       alphabsd_supply_fpreg (regcache, (char *) &fpregs, regno);\n@@ -87,17 +89,19 @@ alpha_bsd_nat_target::fetch_registers (struct regcache *regcache, int regno)\n void\n alpha_bsd_nat_target::store_registers (struct regcache *regcache, int regno)\n {\n+  int lwp = regcache->ptid ().lwp ();\n+\n   if (regno == -1 || getregs_supplies (regno))\n     {\n       struct reg gregs;\n       if (ptrace (PT_GETREGS, regcache->ptid ().pid (),\n-                  (PTRACE_TYPE_ARG3) &gregs, 0) == -1)\n+                  (PTRACE_TYPE_ARG3) &gregs, lwp) == -1)\n         perror_with_name (_(\"Couldn't get registers\"));\n \n       alphabsd_fill_reg (regcache, (char *) &gregs, regno);\n \n       if (ptrace (PT_SETREGS, regcache->ptid ().pid (),\n-                  (PTRACE_TYPE_ARG3) &gregs, 0) == -1)\n+                  (PTRACE_TYPE_ARG3) &gregs, lwp) == -1)\n         perror_with_name (_(\"Couldn't write registers\"));\n \n       if (regno != -1)\n@@ -110,13 +114,13 @@ alpha_bsd_nat_target::store_registers (struct regcache *regcache, int regno)\n       struct fpreg fpregs;\n \n       if (ptrace (PT_GETFPREGS, regcache->ptid ().pid (),\n-\t\t  (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get floating point status\"));\n \n       alphabsd_fill_fpreg (regcache, (char *) &fpregs, regno);\n \n       if (ptrace (PT_SETFPREGS, regcache->ptid ().pid (),\n-\t\t  (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't write floating point status\"));\n     }\n }"
    }
  ]
}