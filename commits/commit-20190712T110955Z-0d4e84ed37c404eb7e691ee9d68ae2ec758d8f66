{
  "sha": "0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGQ0ZTg0ZWQzN2M0MDRlYjdlNjkxZWU5ZDY4YWUyZWM3NThkOGY2Ng==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-03-01T11:06:23Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-07-12T11:09:55Z"
    },
    "message": "gdb: Better support for dynamic properties with negative values\n\nWhen the type of a property is smaller than the CORE_ADDR in which the\nproperty value has been placed, and if the property is signed, then\nsign extend the property value from its actual type up to the size of\nCORE_ADDR.\n\ngdb/ChangeLog:\n\n\t* dwarf2loc.c (dwarf2_evaluate_property): Sign extend property\n\tvalue if its desired type is smaller than a CORE_ADDR and signed.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/vla-ptype.exp: Print array with negative bounds.\n\t* gdb.fortran/vla-sizeof.exp: Print the size of an array with\n\tnegative bounds.\n\t* gdb.fortran/vla-value.exp: Print elements of an array with\n\tnegative bounds.\n\t* gdb.fortran/vla.f90: Setup an array with negative bounds for\n\ttesting.",
    "tree": {
      "sha": "8ac7687c3d05c9b0fcbfbcee2b87617ee21eb42f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8ac7687c3d05c9b0fcbfbcee2b87617ee21eb42f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9a49df9d4bfc7ff03fed751e12b1bc32fbee4fb2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a49df9d4bfc7ff03fed751e12b1bc32fbee4fb2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9a49df9d4bfc7ff03fed751e12b1bc32fbee4fb2"
    }
  ],
  "stats": {
    "total": 103,
    "additions": 103,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d79d89f9389cfb10777f8431afb0cd963ef9aaf7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf2loc.c (dwarf2_evaluate_property): Sign extend property\n+\tvalue if its desired type is smaller than a CORE_ADDR and signed.\n+\n 2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* dwarf2loc.c (dwarf2_evaluate_property): Update to take account"
    },
    {
      "sha": "63643cb45d54a8abc4a0bc8a2d3b6c3d1fd51c70",
      "filename": "gdb/dwarf2loc.c",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/dwarf2loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/dwarf2loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2loc.c?ref=0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
      "patch": "@@ -2454,6 +2454,29 @@ dwarf2_evaluate_property (const struct dynamic_prop *prop,\n \t\tstruct value *val = value_at (baton->property_type, *value);\n \t\t*value = value_as_address (val);\n \t      }\n+\t    else\n+\t      {\n+\t\tgdb_assert (baton->property_type != NULL);\n+\n+\t\tstruct type *type = check_typedef (baton->property_type);\n+\t\tif (TYPE_LENGTH (type) < sizeof (CORE_ADDR)\n+\t\t    && !TYPE_UNSIGNED (type))\n+\t\t  {\n+\t\t    /* If we have a valid return candidate and it's value\n+\t\t       is signed, we have to sign-extend the value because\n+\t\t       CORE_ADDR on 64bit machine has 8 bytes but address\n+\t\t       size of an 32bit application is bytes.  */\n+\t\t    const int addr_size\n+\t\t      = (dwarf2_per_cu_addr_size (baton->locexpr.per_cu)\n+\t\t\t * TARGET_CHAR_BIT);\n+\t\t    const CORE_ADDR neg_mask\n+\t\t      = (~((CORE_ADDR) 0) <<  (addr_size - 1));\n+\n+\t\t    /* Check if signed bit is set and sign-extend values.  */\n+\t\t    if (*value & neg_mask)\n+\t\t      *value |= neg_mask;\n+\t\t  }\n+\t      }\n \t    return true;\n \t  }\n       }"
    },
    {
      "sha": "91b90d88e3a722771e67a3032757f8f8d070292f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
      "patch": "@@ -1,3 +1,14 @@\n+2019-07-12  Bernhard Heckel  <bernhard.heckel@intel.com>\n+\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/vla-ptype.exp: Print array with negative bounds.\n+\t* gdb.fortran/vla-sizeof.exp: Print the size of an array with\n+\tnegative bounds.\n+\t* gdb.fortran/vla-value.exp: Print elements of an array with\n+\tnegative bounds.\n+\t* gdb.fortran/vla.f90: Setup an array with negative bounds for\n+\ttesting.\n+\n 2019-07-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/options.exp (expect_string): Dequote strings in"
    },
    {
      "sha": "7f8268bd335b329858f4ca21e3d689bd30d9af22",
      "filename": "gdb/testsuite/gdb.fortran/vla-ptype.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla-ptype.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla-ptype.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-ptype.exp?ref=0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
      "patch": "@@ -98,3 +98,15 @@ gdb_test \"ptype vla2\" \"type = $real, allocatable \\\\(:,:,:\\\\)\" \"ptype vla2 not al\n gdb_test \"ptype vla2(5, 45, 20)\" \\\n   \"no such vector element \\\\\\(vector not allocated\\\\\\)\" \\\n   \"ptype vla2(5, 45, 20) not allocated\"\n+\n+gdb_breakpoint [gdb_get_line_number \"vla1-neg-bounds-v1\"]\n+gdb_continue_to_breakpoint \"vla1-neg-bounds-v1\"\n+gdb_test \"ptype vla1\" \\\n+    \"type = $real, allocatable \\\\(-2:-1,-5:-2,-3:-1\\\\)\" \\\n+    \"ptype vla1 negative bounds\"\n+\n+gdb_breakpoint [gdb_get_line_number \"vla1-neg-bounds-v2\"]\n+gdb_continue_to_breakpoint \"vla1-neg-bounds-v2\"\n+gdb_test \"ptype vla1\" \\\n+    \"type = $real, allocatable \\\\(-2:1,-5:2,-3:1\\\\)\" \\\n+    \"ptype vla1 negative lower bounds, positive upper bounds\""
    },
    {
      "sha": "4aece0b61d01b6984fa6a03450a37d64fc37db87",
      "filename": "gdb/testsuite/gdb.fortran/vla-sizeof.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla-sizeof.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla-sizeof.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-sizeof.exp?ref=0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
      "patch": "@@ -59,3 +59,13 @@ gdb_test \"print sizeof(pvla)\" \" = 4000\" \"print sizeof associated pvla\"\n gdb_test \"print sizeof(pvla(3,2,1))\" \"4\" \\\n     \"print sizeof element from associated pvla\"\n gdb_test \"print sizeof(pvla(3:4,2,1))\" \"800\" \"print sizeof sliced pvla\"\n+\n+gdb_breakpoint [gdb_get_line_number \"vla1-neg-bounds-v1\"]\n+gdb_continue_to_breakpoint \"vla1-neg-bounds-v1\"\n+gdb_test \"print sizeof(vla1)\" \" = 96\" \\\n+    \"print sizeof vla1 negative bounds\"\n+\n+gdb_breakpoint [gdb_get_line_number \"vla1-neg-bounds-v2\"]\n+gdb_continue_to_breakpoint \"vla1-neg-bounds-v2\"\n+gdb_test \"print sizeof(vla1)\" \" = 640\" \\\n+    \"print sizeof vla1 negative lower bounds, positive upper bounds\""
    },
    {
      "sha": "ed0cace9f48846e48f434234a742ce09abfe305f",
      "filename": "gdb/testsuite/gdb.fortran/vla-value.exp",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-value.exp?ref=0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
      "patch": "@@ -161,3 +161,30 @@ gdb_breakpoint [gdb_get_line_number \"pvla-deassociated\"]\n gdb_continue_to_breakpoint \"pvla-deassociated, second time\"\n gdb_test \"print \\$mypvar(1,3,8)\" \" = 1001\" \\\n   \"print \\$mypvar(1,3,8) after deallocated\"\n+\n+gdb_breakpoint [gdb_get_line_number \"vla1-neg-bounds-v1\"]\n+gdb_continue_to_breakpoint \"vla1-neg-bounds-v1\"\n+with_test_prefix \"negative bounds\" {\n+    gdb_test \"print vla1(-2,-5,-3)\" \" = 1\"\n+    gdb_test \"print vla1(-2,-3,-1)\" \" = -231\"\n+    gdb_test \"print vla1(-3,-5,-3)\" \"no such vector element\"\n+    gdb_test \"print vla1(-2,-6,-3)\" \"no such vector element\"\n+    gdb_test \"print vla1(-2,-5,-4)\" \"no such vector element\"\n+    gdb_test \"print vla1(0,-2,-1)\" \"no such vector element\"\n+    gdb_test \"print vla1(-1,-1,-1)\" \"no such vector element\"\n+    gdb_test \"print vla1(-1,-2,0)\" \"no such vector element\"\n+}\n+\n+gdb_breakpoint [gdb_get_line_number \"vla1-neg-bounds-v2\"]\n+gdb_continue_to_breakpoint \"vla1-neg-bounds-v2\"\n+with_test_prefix \"negative lower bounds, positive upper bounds\" {\n+    gdb_test \"print vla1(-2,-5,-3)\" \" = 2\"\n+    gdb_test \"print vla1(-2,-3,-1)\" \" = 2\"\n+    gdb_test \"print vla1(-2,-4,-2)\" \" = -242\"\n+    gdb_test \"print vla1(-3,-5,-3)\" \"no such vector element\"\n+    gdb_test \"print vla1(-2,-6,-3)\" \"no such vector element\"\n+    gdb_test \"print vla1(-2,-5,-4)\" \"no such vector element\"\n+    gdb_test \"print vla1(2,2,1)\" \"no such vector element\"\n+    gdb_test \"print vla1(1,3,1)\" \"no such vector element\"\n+    gdb_test \"print vla1(1,2,2)\" \"no such vector element\"\n+}"
    },
    {
      "sha": "0ccb5c90d93176cbbc392a3aa2080758b0af8fe8",
      "filename": "gdb/testsuite/gdb.fortran/vla.f90",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla.f90",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66/gdb/testsuite/gdb.fortran/vla.f90",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla.f90?ref=0d4e84ed37c404eb7e691ee9d68ae2ec758d8f66",
      "patch": "@@ -54,4 +54,19 @@ program vla\n \n   allocate (vla3 (2,2))               ! vla2-deallocated\n   vla3(:,:) = 13\n+\n+  allocate (vla1 (-2:-1, -5:-2, -3:-1))\n+  vla1(:, :, :) = 1\n+  vla1(-2, -3, -1) = -231\n+\n+  deallocate (vla1)                   ! vla1-neg-bounds-v1\n+  l = allocated(vla1)\n+\n+  allocate (vla1 (-2:1, -5:2, -3:1))\n+  vla1(:, :, :) = 2\n+  vla1(-2, -4, -2) = -242\n+\n+  deallocate (vla1)                   ! vla1-neg-bounds-v2\n+  l = allocated(vla1)\n+\n end program vla"
    }
  ]
}