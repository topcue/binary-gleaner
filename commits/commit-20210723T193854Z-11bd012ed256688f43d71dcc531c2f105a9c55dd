{
  "sha": "11bd012ed256688f43d71dcc531c2f105a9c55dd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTFiZDAxMmVkMjU2Njg4ZjQzZDcxZGNjNTMxYzJmMTA1YTljNTVkZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-06-25T22:07:54Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-23T19:38:54Z"
    },
    "message": "gdb: make inferior::m_cwd an std::string\n\nSame idea as the previous patch, but for m_cwd.\n\nTo keep things consistent across the board, change get_inferior_cwd as\nwell, which is shared with GDBserver.  So update the related GDBserver\ncode too.\n\nChange-Id: Ia2c047fda738d45f3d18bc999eb67ceb8400ce4e",
    "tree": {
      "sha": "eeff398be94163b59fc0f261615449bd9dbeaeb1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eeff398be94163b59fc0f261615449bd9dbeaeb1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/11bd012ed256688f43d71dcc531c2f105a9c55dd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11bd012ed256688f43d71dcc531c2f105a9c55dd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/11bd012ed256688f43d71dcc531c2f105a9c55dd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11bd012ed256688f43d71dcc531c2f105a9c55dd/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fd2dec2a45a73154d9824071ebb8664a39a69174",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd2dec2a45a73154d9824071ebb8664a39a69174",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fd2dec2a45a73154d9824071ebb8664a39a69174"
    }
  ],
  "stats": {
    "total": 89,
    "additions": 41,
    "deletions": 48
  },
  "files": [
    {
      "sha": "c0271763164340dbb7a601d226ba5323fad25cee",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -156,7 +156,7 @@ show_args_command (struct ui_file *file, int from_tty,\n \n /* See gdbsupport/common-inferior.h.  */\n \n-const char *\n+const std::string &\n get_inferior_cwd ()\n {\n   return current_inferior ()->cwd ();\n@@ -167,10 +167,7 @@ get_inferior_cwd ()\n static void\n set_cwd_command (const char *args, int from_tty, struct cmd_list_element *c)\n {\n-  if (*inferior_cwd_scratch == '\\0')\n-    current_inferior ()->set_cwd (nullptr);\n-  else\n-    current_inferior ()->set_cwd (inferior_cwd_scratch);\n+  current_inferior ()->set_cwd (inferior_cwd_scratch);\n }\n \n /* Handle the 'show cwd' command.  */\n@@ -179,9 +176,9 @@ static void\n show_cwd_command (struct ui_file *file, int from_tty,\n \t\t  struct cmd_list_element *c, const char *value)\n {\n-  const char *cwd = current_inferior ()->cwd ();\n+  const std::string &cwd = current_inferior ()->cwd ();\n \n-  if (cwd == NULL)\n+  if (cwd.empty ())\n     fprintf_filtered (gdb_stdout,\n \t\t      _(\"\\\n You have not set the inferior's current working directory.\\n\\\n@@ -190,7 +187,8 @@ server's cwd if remote debugging.\\n\"));\n   else\n     fprintf_filtered (gdb_stdout,\n \t\t      _(\"Current working directory that will be used \"\n-\t\t\t\"when starting the inferior is \\\"%s\\\".\\n\"), cwd);\n+\t\t\t\"when starting the inferior is \\\"%s\\\".\\n\"),\n+\t\t      cwd.c_str ());\n }\n \n "
    },
    {
      "sha": "5cd36f4df3d7fe657f58ed798362556242dba3cb",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -460,21 +460,19 @@ class inferior : public refcounted_object,\n \n   /* Set the inferior current working directory.\n \n-     If CWD is NULL, unset the directory.  */\n-  void set_cwd (const char *cwd)\n+     If CWD is empty, unset the directory.  */\n+  void set_cwd (std::string cwd)\n   {\n-    if (cwd == NULL)\n-      m_cwd.reset ();\n-    else\n-      m_cwd.reset (xstrdup (cwd));\n+    m_cwd = std::move (cwd);\n   }\n \n   /* Get the inferior current working directory.\n \n-     Return nullptr if the current working directory is not specified.  */\n-  const char *cwd () const\n+     Return an empty string if the current working directory is not\n+     specified.  */\n+  const std::string &cwd () const\n   {\n-    return m_cwd.get ();\n+    return m_cwd;\n   }\n \n   /* Convenient handle (GDB inferior id).  Unique across all\n@@ -599,7 +597,7 @@ class inferior : public refcounted_object,\n \n   /* The current working directory that will be used when starting\n      this inferior.  */\n-  gdb::unique_xmalloc_ptr<char> m_cwd;\n+  std::string m_cwd;\n };\n \n /* Keep a registry of per-inferior data-pointers required by other GDB"
    },
    {
      "sha": "c88cf4cf7165490a60b93e163f111bb37cfb20b4",
      "filename": "gdb/nat/fork-inferior.c",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/nat/fork-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/nat/fork-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/fork-inferior.c?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -281,8 +281,6 @@ fork_inferior (const char *exec_file_arg, const std::string &allargs,\n   char **save_our_env;\n   int i;\n   int save_errno;\n-  const char *inferior_cwd;\n-  std::string expanded_inferior_cwd;\n \n   /* If no exec file handed to us, get it from the exec-file command\n      -- with a good, common error message if none is specified.  */\n@@ -326,14 +324,13 @@ fork_inferior (const char *exec_file_arg, const std::string &allargs,\n \n   /* Check if the user wants to set a different working directory for\n      the inferior.  */\n-  inferior_cwd = get_inferior_cwd ();\n+  std::string inferior_cwd = get_inferior_cwd ();\n \n-  if (inferior_cwd != NULL)\n+  if (!inferior_cwd.empty ())\n     {\n       /* Expand before forking because between fork and exec, the child\n \t process may only execute async-signal-safe operations.  */\n-      expanded_inferior_cwd = gdb_tilde_expand (inferior_cwd);\n-      inferior_cwd = expanded_inferior_cwd.c_str ();\n+      inferior_cwd = gdb_tilde_expand (inferior_cwd.c_str ());\n     }\n \n   /* If there's any initialization of the target layers that must\n@@ -373,10 +370,10 @@ fork_inferior (const char *exec_file_arg, const std::string &allargs,\n \n       /* Change to the requested working directory if the user\n \t requested it.  */\n-      if (inferior_cwd != NULL)\n+      if (!inferior_cwd.empty ())\n \t{\n-\t  if (chdir (inferior_cwd) < 0)\n-\t    trace_start_error_with_name (inferior_cwd);\n+\t  if (chdir (inferior_cwd.c_str ()) < 0)\n+\t    trace_start_error_with_name (inferior_cwd.c_str ());\n \t}\n \n       if (debug_fork)"
    },
    {
      "sha": "552481fc551b624355caab9f4ba81f1953d6de8e",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -10391,13 +10391,14 @@ remote_target::extended_remote_set_inferior_cwd ()\n {\n   if (packet_support (PACKET_QSetWorkingDir) != PACKET_DISABLE)\n     {\n-      const char *inferior_cwd = current_inferior ()->cwd ();\n+      const std::string &inferior_cwd = current_inferior ()->cwd ();\n       remote_state *rs = get_remote_state ();\n \n-      if (inferior_cwd != NULL)\n+      if (!inferior_cwd.empty ())\n \t{\n-\t  std::string hexpath = bin2hex ((const gdb_byte *) inferior_cwd,\n-\t\t\t\t\t strlen (inferior_cwd));\n+\t  std::string hexpath\n+\t    = bin2hex ((const gdb_byte *) inferior_cwd.data (),\n+\t\t       inferior_cwd.size ());\n \n \t  xsnprintf (rs->buf.data (), get_remote_packet_size (),\n \t\t     \"QSetWorkingDir:%s\", hexpath.c_str ());"
    },
    {
      "sha": "32f847812e604857b189752303ba826047e95d57",
      "filename": "gdbserver/inferiors.cc",
      "status": "modified",
      "additions": 7,
      "deletions": 9,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbserver/inferiors.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbserver/inferiors.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/inferiors.cc?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -28,8 +28,10 @@ std::list<thread_info *> all_threads;\n \n struct thread_info *current_thread;\n \n-/* The current working directory used to start the inferior.  */\n-static const char *current_inferior_cwd = NULL;\n+/* The current working directory used to start the inferior.\n+\n+   Empty if not specified.  */\n+static std::string current_inferior_cwd;\n \n struct thread_info *\n add_thread (ptid_t thread_id, void *target_data)\n@@ -235,7 +237,7 @@ switch_to_process (process_info *proc)\n \n /* See gdbsupport/common-inferior.h.  */\n \n-const char *\n+const std::string &\n get_inferior_cwd ()\n {\n   return current_inferior_cwd;\n@@ -244,11 +246,7 @@ get_inferior_cwd ()\n /* See inferiors.h.  */\n \n void\n-set_inferior_cwd (const char *cwd)\n+set_inferior_cwd (std::string cwd)\n {\n-  xfree ((void *) current_inferior_cwd);\n-  if (cwd != NULL)\n-    current_inferior_cwd = xstrdup (cwd);\n-  else\n-    current_inferior_cwd = NULL;\n+  current_inferior_cwd = std::move (cwd);\n }"
    },
    {
      "sha": "1e0fe67033cb94ed4adf0abfb22d50cf131923d7",
      "filename": "gdbserver/inferiors.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbserver/inferiors.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbserver/inferiors.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/inferiors.h?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -154,8 +154,8 @@ void *thread_target_data (struct thread_info *);\n struct regcache *thread_regcache_data (struct thread_info *);\n void set_thread_regcache_data (struct thread_info *, struct regcache *);\n \n-/* Set the inferior current working directory.  If CWD is NULL, unset\n+/* Set the inferior current working directory.  If CWD is empty, unset\n    the directory.  */\n-void set_inferior_cwd (const char *cwd);\n+void set_inferior_cwd (std::string cwd);\n \n #endif /* GDBSERVER_INFERIORS_H */"
    },
    {
      "sha": "193c3d9d7d177f2e924e0e61b53a61ba8f5757c1",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -949,17 +949,17 @@ handle_general_set (char *own_buf)\n \t{\n \t  std::string path = hex2str (p);\n \n-\t  set_inferior_cwd (path.c_str ());\n-\n \t  if (remote_debug)\n \t    debug_printf (_(\"[Set the inferior's current directory to %s]\\n\"),\n \t\t\t  path.c_str ());\n+\n+\t  set_inferior_cwd (std::move (path));\n \t}\n       else\n \t{\n \t  /* An empty argument means that we should clear out any\n \t     previously set cwd for the inferior.  */\n-\t  set_inferior_cwd (NULL);\n+\t  set_inferior_cwd (\"\");\n \n \t  if (remote_debug)\n \t    debug_printf (_(\"\\"
    },
    {
      "sha": "92c880e121238020a4188cfeea789746b7bc9da5",
      "filename": "gdbsupport/common-inferior.h",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbsupport/common-inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11bd012ed256688f43d71dcc531c2f105a9c55dd/gdbsupport/common-inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common-inferior.h?ref=11bd012ed256688f43d71dcc531c2f105a9c55dd",
      "patch": "@@ -32,9 +32,10 @@ extern const char *get_exec_wrapper ();\n    otherwise return 0 in that case.  */\n extern const char *get_exec_file (int err);\n \n-/* Return the inferior's current working directory.  If nothing has\n-   been set, then return NULL.  */\n-extern const char *get_inferior_cwd ();\n+/* Return the inferior's current working directory.\n+\n+   If it is not set, the string is empty.  */\n+extern const std::string &get_inferior_cwd ();\n \n /* Whether to start up the debuggee under a shell.\n "
    }
  ]
}