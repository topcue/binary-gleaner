{
  "sha": "fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmNhYWFjMGEwZDNkNDZlM2M1OWY4N2MxNDQ1ODUyYWM3N2I2YzExOA==",
  "commit": {
    "author": {
      "name": "Sergey Belyashov",
      "email": "sergey.belyashov@gmail.com",
      "date": "2020-02-19T17:46:10Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-02-19T17:46:10Z"
    },
    "message": "Various fixes for the Z80 support.\n\n\tPR 25537\nld\t* emultempl/z80.em: Remove machine compatability checking.\n\n\tPR 25517\n\t* testsuite/ld-z80/arch_ez80_adl.d: Update command line.\n\t* testsuite/ld-z80/arch_ez80_z80.d: Likewise.\n\t* testsuite/ld-z80/arch_r800.d: Likewise.\n\t* testsuite/ld-z80/arch_z180.d: Likewise.\n\t* testsuite/ld-z80/arch_z80n.d: Likewise.\n\t* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.\n\t* testsuite/ld-z80/comb_arch_z180_z80.d: Likewise.\n\t* testsuite/ld-z80/comb_arch_z80_ez80.d: Likewise.\n\t* testsuite/ld-z80/comb_arch_z80_z180.d: Likewise.\n\t* testsuite/ld-z80/comb_arch_z80_z80n.d: Likewise.\n\t* testsuite/ld-z80/relocs_b_ez80.d: Likewise.\n\t* testsuite/ld-z80/relocs_b_z80.d: Likewise.\n\t* testsuite/ld-z80/relocs_f_ez80.d: Likewise.\n\t* testsuite/ld-z80/relocs_f_z80.d: Likewise.\n\t* testsuite/ld-z80/relocs_f_z80n.d: Likewise.\n\nbfd\n\t* cpu-z80.c: Add machine type compatibility checking.\n\ngas\n\t* config/tc-z80.c (md_parse_option): Do not use an underscore\n\tprefix for local labels in SDCC compatability mode.\n\t(z80_start_line_hook): Remove SDCC dollar label support.\n\t* testsuite/gas/z80/sdcc.d: Update expected disassembly.\n\t* testsuite/gas/z80/sdcc.s: Likewise.\n\n\t* config/tc-z80.c: Add -march option.\n\t* doc/as.texi: Update Z80 documentation.\n\t* doc/c-z80.texi: Likewise.\n\t* testsuite/gas/z80/ez80_adl_all.d: Update command line.\n\t* testsuite/gas/z80/ez80_adl_suf.d: Likewise.\n\t* testsuite/gas/z80/ez80_pref_dis.d: Likewise.\n\t* testsuite/gas/z80/ez80_z80_all.d: Likewise.\n\t* testsuite/gas/z80/ez80_z80_suf.d: Likewise.\n\t* testsuite/gas/z80/gbz80_all.d: Likewise.\n\t* testsuite/gas/z80/r800_extra.d: Likewise.\n\t* testsuite/gas/z80/r800_ii8.d: Likewise.\n\t* testsuite/gas/z80/r800_z80_doc.d: Likewise.\n\t* testsuite/gas/z80/sdcc.d: Likewise.\n\t* testsuite/gas/z80/z180.d: Likewise.\n\t* testsuite/gas/z80/z180_z80_doc.d: Likewise.\n\t* testsuite/gas/z80/z80_doc.d: Likewise.\n\t* testsuite/gas/z80/z80_ii8.d: Likewise.\n\t* testsuite/gas/z80/z80_in_f_c.d: Likewise.\n\t* testsuite/gas/z80/z80_op_ii_ld.d: Likewise.\n\t* testsuite/gas/z80/z80_out_c_0.d: Likewise.\n\t* testsuite/gas/z80/z80_sli.d: Likewise.\n\t* testsuite/gas/z80/z80n_all.d: Likewise.\n\t* testsuite/gas/z80/z80n_reloc.d: Likewise.",
    "tree": {
      "sha": "9d63c6fc90566b5e2110d4e3bef593c1f91f205e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9d63c6fc90566b5e2110d4e3bef593c1f91f205e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/comments",
  "author": {
    "login": "b-s-a",
    "id": 2833802,
    "node_id": "MDQ6VXNlcjI4MzM4MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2833802?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/b-s-a",
    "html_url": "https://github.com/b-s-a",
    "followers_url": "https://api.github.com/users/b-s-a/followers",
    "following_url": "https://api.github.com/users/b-s-a/following{/other_user}",
    "gists_url": "https://api.github.com/users/b-s-a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/b-s-a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/b-s-a/subscriptions",
    "organizations_url": "https://api.github.com/users/b-s-a/orgs",
    "repos_url": "https://api.github.com/users/b-s-a/repos",
    "events_url": "https://api.github.com/users/b-s-a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/b-s-a/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d3c22fa82e2f9098ad5a0158a73f07db12426fff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3c22fa82e2f9098ad5a0158a73f07db12426fff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d3c22fa82e2f9098ad5a0158a73f07db12426fff"
    }
  ],
  "stats": {
    "total": 724,
    "additions": 354,
    "deletions": 370
  },
  "files": [
    {
      "sha": "6c1c1316af83305db0c5f2d765a2c75de7f58a94",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25537\n+\t* cpu-z80.c: Add machine type compatibility checking.\n+\n 2020-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR binutils/25355"
    },
    {
      "sha": "6bab53af01dc3f515b6c339da35d7b3888e13b60",
      "filename": "bfd/cpu-z80.c",
      "status": "modified",
      "additions": 63,
      "deletions": 5,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/bfd/cpu-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/bfd/cpu-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-z80.c?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -31,13 +31,71 @@ const bfd_arch_info_type bfd_z80_arch;\n static const bfd_arch_info_type *\n compatible (const bfd_arch_info_type *a, const bfd_arch_info_type *b)\n {\n-  if (a->arch != b->arch)\n+  if (a->arch != b->arch || a->arch != bfd_arch_z80)\n     return NULL;\n \n   if (a->mach == b->mach)\n     return a;\n+  switch (a->mach)\n+    {\n+    case bfd_mach_z80:\n+    case bfd_mach_z80full:\n+    case bfd_mach_z80strict:\n+      switch (b->mach)\n+\t{\n+\tcase bfd_mach_z80:\n+\tcase bfd_mach_z80full:\n+\tcase bfd_mach_z80strict:\n+\t  return & bfd_z80_arch;\n+\tcase bfd_mach_z180:\n+\tcase bfd_mach_ez80_z80:\n+\tcase bfd_mach_ez80_adl:\n+\tcase bfd_mach_z80n:\n+\tcase bfd_mach_r800:\n+\t  return b;\n+\t}\n+      break;\n+    case bfd_mach_z80n:\n+    case bfd_mach_r800:\n+      switch (b->mach)\n+\t{\n+\tcase bfd_mach_z80:\n+\tcase bfd_mach_z80full:\n+\tcase bfd_mach_z80strict:\n+\t  return a;\n+\t}\n+      break;\n+    case bfd_mach_z180:\n+      switch (b->mach)\n+\t{\n+\tcase bfd_mach_z80:\n+\tcase bfd_mach_z80full:\n+\tcase bfd_mach_z80strict:\n+\t  return a;\n+\tcase bfd_mach_ez80_z80:\n+\tcase bfd_mach_ez80_adl:\n+\t  return b;\n+\t}\n+      break;\n+    case bfd_mach_ez80_z80:\n+    case bfd_mach_ez80_adl:\n+      switch (b->mach)\n+\t{\n+\tcase bfd_mach_z80:\n+\tcase bfd_mach_z80full:\n+\tcase bfd_mach_z80strict:\n+\tcase bfd_mach_z180:\n+\tcase bfd_mach_ez80_z80:\n+\t  return a;\n+\tcase bfd_mach_ez80_adl:\n+\t  return b;\n+\t}\n+      break;\n+    case bfd_mach_gbz80:\n+       return NULL;\n+    }\n \n-  return (a->arch == bfd_arch_z80) ? & bfd_z80_arch : NULL;\n+  return NULL;\n }\n \n #define N(name,print,bits,default,next)  \\\n@@ -48,9 +106,9 @@ compatible (const bfd_arch_info_type *a, const bfd_arch_info_type *b)\n \n static const bfd_arch_info_type arch_info_struct[] =\n {\n-  N (bfd_mach_z80full,\t \"z80-full\",   16, FALSE, M(1)),\n+  N (bfd_mach_z80,\t \"z80\",        16, TRUE,  M(1)),\n   N (bfd_mach_z80strict, \"z80-strict\", 16, FALSE, M(2)),\n-  N (bfd_mach_z80,\t \"z80\",\t       16, FALSE, M(3)),\n+  N (bfd_mach_z80full,\t \"z80-full\",   16, FALSE, M(3)),\n   N (bfd_mach_r800,\t \"r800\",       16, FALSE, M(4)),\n   N (bfd_mach_gbz80,\t \"gbz80\",      16, FALSE, M(5)),\n   N (bfd_mach_z180,\t \"z180\",       16, FALSE, M(6)),\n@@ -60,4 +118,4 @@ static const bfd_arch_info_type arch_info_struct[] =\n };\n \n const bfd_arch_info_type bfd_z80_arch =\n-  N (bfd_mach_z80full,   \"z80-full\",   16, TRUE,  M(1));\n+  N (bfd_mach_z80,   \"z80\",   16, TRUE,  M(1));"
    },
    {
      "sha": "e722633f6f86e01217dbe734a3efd78d7277f017",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,3 +1,39 @@\n+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25576\n+\t* config/tc-z80.c (md_parse_option): Do not use an underscore\n+\tprefix for local labels in SDCC compatability mode.\n+\t(z80_start_line_hook): Remove SDCC dollar label support.\n+\t* testsuite/gas/z80/sdcc.d: Update expected disassembly.\n+\t* testsuite/gas/z80/sdcc.s: Likewise.\n+\n+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25517\n+\t* config/tc-z80.c: Add -march option.\n+\t* doc/as.texi: Update Z80 documentation.\n+\t* doc/c-z80.texi: Likewise.\n+\t* testsuite/gas/z80/ez80_adl_all.d: Update command line.\n+\t* testsuite/gas/z80/ez80_adl_suf.d: Likewise.\n+\t* testsuite/gas/z80/ez80_pref_dis.d: Likewise.\n+\t* testsuite/gas/z80/ez80_z80_all.d: Likewise.\n+\t* testsuite/gas/z80/ez80_z80_suf.d: Likewise.\n+\t* testsuite/gas/z80/gbz80_all.d: Likewise.\n+\t* testsuite/gas/z80/r800_extra.d: Likewise.\n+\t* testsuite/gas/z80/r800_ii8.d: Likewise.\n+\t* testsuite/gas/z80/r800_z80_doc.d: Likewise.\n+\t* testsuite/gas/z80/sdcc.d: Likewise.\n+\t* testsuite/gas/z80/z180.d: Likewise.\n+\t* testsuite/gas/z80/z180_z80_doc.d: Likewise.\n+\t* testsuite/gas/z80/z80_doc.d: Likewise.\n+\t* testsuite/gas/z80/z80_ii8.d: Likewise.\n+\t* testsuite/gas/z80/z80_in_f_c.d: Likewise.\n+\t* testsuite/gas/z80/z80_op_ii_ld.d: Likewise.\n+\t* testsuite/gas/z80/z80_out_c_0.d: Likewise.\n+\t* testsuite/gas/z80/z80_sli.d: Likewise.\n+\t* testsuite/gas/z80/z80n_all.d: Likewise.\n+\t* testsuite/gas/z80/z80n_reloc.d: Likewise.\n+\n 2020-02-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/tc-i386.c (output_insn): Mark cvtpi2ps and cvtpi2pd"
    },
    {
      "sha": "0ed43cbd827b5819efafec25dd626b61c7ff8102",
      "filename": "gas/config/tc-z80.c",
      "status": "modified",
      "additions": 115,
      "deletions": 108,
      "changes": 223,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/config/tc-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/config/tc-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.c?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -38,13 +38,12 @@ const char * md_shortopts = \"\"; /* None yet.  */\n \n enum options\n {\n-  OPTION_MACH_Z80 = OPTION_MD_BASE,\n+  OPTION_MARCH = OPTION_MD_BASE,\n+  OPTION_MACH_Z80,\n   OPTION_MACH_R800,\n   OPTION_MACH_Z180,\n   OPTION_MACH_EZ80_Z80,\n   OPTION_MACH_EZ80_ADL,\n-  OPTION_MACH_GBZ80,\n-  OPTION_MACH_Z80N,\n   OPTION_MACH_INST,\n   OPTION_MACH_NO_INST,\n   OPTION_MACH_IUD,\n@@ -83,13 +82,12 @@ enum options\n \n struct option md_longopts[] =\n {\n+  { \"march\",     required_argument, NULL, OPTION_MARCH},\n   { \"z80\",       no_argument, NULL, OPTION_MACH_Z80},\n   { \"r800\",      no_argument, NULL, OPTION_MACH_R800},\n   { \"z180\",      no_argument, NULL, OPTION_MACH_Z180},\n   { \"ez80\",      no_argument, NULL, OPTION_MACH_EZ80_Z80},\n   { \"ez80-adl\",  no_argument, NULL, OPTION_MACH_EZ80_ADL},\n-  { \"gbz80\",     no_argument, NULL, OPTION_MACH_GBZ80},\n-  { \"z80n\",      no_argument, NULL, OPTION_MACH_Z80N},\n   { \"fp-s\",      required_argument, NULL, OPTION_FP_SINGLE_FORMAT},\n   { \"fp-d\",      required_argument, NULL, OPTION_FP_DOUBLE_FORMAT},\n   { \"strict\",    no_argument, NULL, OPTION_MACH_FUD},\n@@ -145,6 +143,83 @@ static str_to_float_t str_to_double;\n #define INST_MODE_FORCED 4 /* CPU mode changed by instruction suffix*/\n static char inst_mode;\n \n+struct match_info\n+{\n+  const char *name;\n+  int ins_ok;\n+  int ins_err;\n+  int cpu_mode;\n+  const char *comment;\n+};\n+\n+static const struct match_info\n+match_cpu_table [] =\n+{\n+  {\"z80\",     INS_Z80, 0, 0, \"Zilog Z80 (+infc+xyhl)\" },\n+  {\"ez80\",    INS_EZ80, 0, 0, \"Zilog eZ80\" },\n+  {\"gbz80\",   INS_GBZ80, INS_UNDOC|INS_UNPORT, 0, \"GameBoy Z80\" },\n+  {\"r800\",    INS_R800, INS_UNPORT, 0, \"Ascii R800\" },\n+  {\"z180\",    INS_Z180, INS_UNDOC|INS_UNPORT, 0, \"Zilog Z180\" },\n+  {\"z80n\",    INS_Z80N, 0, 0, \"Z80 Next\" }\n+};\n+\n+static const struct match_info\n+match_ext_table [] =\n+{\n+  {\"full\",    INS_UNDOC|INS_UNPORT, 0, 0, \"assemble all known instructions\" },\n+  {\"adl\",     0, 0, 1, \"eZ80 ADL mode by default\" },\n+  {\"xyhl\",    INS_IDX_HALF, 0, 0, \"instructions with halves of index registers\" },\n+  {\"infc\",    INS_IN_F_C, 0, 0, \"instruction IN F,(C)\" },\n+  {\"outc0\",   INS_OUT_C_0, 0, 0, \"instruction OUT (C),0\" },\n+  {\"sli\",     INS_SLI, 0, 0, \"instruction known as SLI, SLL, or SL1\" },\n+  {\"xdcb\",    INS_ROT_II_LD, 0, 0, \"instructions like RL (IX+d),R (DD/FD CB dd oo)\" }\n+};\n+\n+static void\n+setup_march (const char *name, int *ok, int *err, int *mode)\n+{\n+  unsigned i;\n+  size_t len = strcspn (name, \"+-\");\n+  for (i = 0; i < ARRAY_SIZE (match_cpu_table); ++i)\n+    if (!strncasecmp (name, match_cpu_table[i].name, len)\n+\t&& strlen (match_cpu_table[i].name) == len)\n+      {\n+\t*ok = match_cpu_table[i].ins_ok;\n+\t*err = match_cpu_table[i].ins_err;\n+\t*mode = match_cpu_table[i].cpu_mode;\n+\tbreak;\n+      }\n+\n+  if (i >= ARRAY_SIZE (match_cpu_table))\n+    as_fatal (_(\"Invalid CPU is specified: %s\"), name);\n+\n+  while (name[len])\n+    {\n+      name = &name[len + 1];\n+      len = strcspn (name, \"+-\");\n+      for (i = 0; i < ARRAY_SIZE (match_ext_table); ++i)\n+\tif (!strncasecmp (name, match_ext_table[i].name, len)\n+\t    && strlen (match_ext_table[i].name) == len)\n+\t  {\n+\t    if (name[-1] == '+')\n+\t      {\n+\t\t*ok |= match_ext_table[i].ins_ok;\n+\t\t*err &= ~match_ext_table[i].ins_ok;\n+\t\t*mode |= match_ext_table[i].cpu_mode;\n+\t      }\n+\t    else\n+\t      {\n+\t\t*ok &= ~match_ext_table[i].ins_ok;\n+\t\t*err |= match_ext_table[i].ins_ok;\n+\t\t*mode &= ~match_ext_table[i].cpu_mode;\n+\t      }\n+\t    break;\n+\t  }\n+      if (i >= ARRAY_SIZE (match_ext_table))\n+\tas_fatal (_(\"Invalid EXTENTION is specified: %s\"), name);\n+    }\n+}\n+\n static int\n setup_instruction (const char *inst, int *add, int *sub)\n {\n@@ -243,35 +318,23 @@ md_parse_option (int c, const char* arg)\n     {\n     default:\n       return 0;\n+    case OPTION_MARCH:\n+      setup_march (arg, & ins_ok, & ins_err, & cpu_mode);\n+      break;\n     case OPTION_MACH_Z80:\n-      ins_ok = (ins_ok & INS_TUNE_MASK) | INS_Z80;\n-      ins_err = (ins_err & INS_MARCH_MASK) | (~INS_Z80 & INS_MARCH_MASK);\n+      setup_march (\"z80\", & ins_ok, & ins_err, & cpu_mode);\n       break;\n     case OPTION_MACH_R800:\n-      ins_ok = INS_R800 | INS_IDX_HALF | INS_IN_F_C;\n-      ins_err = INS_UNPORT;\n+      setup_march (\"r800\", & ins_ok, & ins_err, & cpu_mode);\n       break;\n     case OPTION_MACH_Z180:\n-      ins_ok = INS_Z180;\n-      ins_err = INS_UNDOC | INS_UNPORT;\n+      setup_march (\"z180\", & ins_ok, & ins_err, & cpu_mode);\n       break;\n     case OPTION_MACH_EZ80_Z80:\n-      ins_ok = INS_EZ80 | INS_IDX_HALF;\n-      ins_err = (INS_UNDOC | INS_UNPORT) & ~INS_IDX_HALF;\n-      cpu_mode = 0;\n+      setup_march (\"ez80\", & ins_ok, & ins_err, & cpu_mode);\n       break;\n     case OPTION_MACH_EZ80_ADL:\n-      ins_ok = INS_EZ80 | INS_IDX_HALF;\n-      ins_err = (INS_UNDOC | INS_UNPORT) & ~INS_IDX_HALF;\n-      cpu_mode = 1;\n-      break;\n-    case OPTION_MACH_GBZ80:\n-      ins_ok = INS_GBZ80;\n-      ins_err = INS_UNDOC | INS_UNPORT;\n-      break;\n-    case OPTION_MACH_Z80N:\n-      ins_ok = INS_Z80N | INS_UNPORT | INS_UNDOC;\n-      ins_err = 0;\n+      setup_march (\"ez80+adl\", & ins_ok, & ins_err, & cpu_mode);\n       break;\n     case OPTION_FP_SINGLE_FORMAT:\n       str_to_float = get_str_to_float (arg);\n@@ -319,7 +382,6 @@ md_parse_option (int c, const char* arg)\n       break;\n     case OPTION_COMPAT_SDCC:\n       sdcc_compat = 1;\n-      local_label_prefix = \"_\";\n       break;\n     case OPTION_COMPAT_COLONLESS:\n       colonless_labels = 1;\n@@ -332,59 +394,32 @@ md_parse_option (int c, const char* arg)\n void\n md_show_usage (FILE * f)\n {\n-  fprintf (f, \"\\n\\\n+  unsigned i;\n+  fprintf (f, _(\"\\n\\\n CPU model options:\\n\\\n-  -z80\\t\\t\\t  assemble for Zilog Z80\\n\\\n-  -r800\\t\\t\\t  assemble for Ascii R800\\n\\\n-  -z180\\t\\t\\t  assemble for Zilog Z180\\n\\\n-  -ez80\\t\\t\\t  assemble for Zilog eZ80 in Z80 mode by default\\n\\\n-  -ez80-adl\\t\\t  assemble for Zilog eZ80 in ADL mode by default\\n\\\n-  -gbz80\\t\\t  assemble for GameBoy Z80\\n\\\n-  -z80n\\t\\t\\t  assemble for Z80N\\n\\\n-\\n\\\n+  -march=CPU[+EXT...][-EXT...]\\n\\\n+\\t\\t\\t  generate code for CPU, where CPU is one of:\\n\"));\n+  for (i = 0; i < ARRAY_SIZE(match_cpu_table); ++i)\n+    fprintf (f, \"  %-8s\\t\\t  %s\\n\", match_cpu_table[i].name, match_cpu_table[i].comment);\n+  fprintf (f, _(\"And EXT is combination (+EXT - add, -EXT - remove) of:\\n\"));\n+  for (i = 0; i < ARRAY_SIZE(match_ext_table); ++i)\n+    fprintf (f, \"  %-8s\\t\\t  %s\\n\", match_ext_table[i].name, match_ext_table[i].comment);\n+  fprintf (f, _(\"\\n\\\n Compatibility options:\\n\\\n   -local-prefix=TEXT\\t  treat labels prefixed by TEXT as local\\n\\\n   -colonless\\t\\t  permit colonless labels\\n\\\n   -sdcc\\t\\t\\t  accept SDCC specific instruction syntax\\n\\\n   -fp-s=FORMAT\\t\\t  set single precission FP numbers format\\n\\\n   -fp-d=FORMAT\\t\\t  set double precission FP numbers format\\n\\\n Where FORMAT one of:\\n\\\n-  ieee754\\t\\t  IEEE754 compatible\\n\\\n+  ieee754\\t\\t  IEEE754 compatible (depends on directive)\\n\\\n   half\\t\\t\\t  IEEE754 half precision (16 bit)\\n\\\n   single\\t\\t  IEEE754 single precision (32 bit)\\n\\\n   double\\t\\t  IEEE754 double precision (64 bit)\\n\\\n   zeda32\\t\\t  Zeda z80float library 32 bit format\\n\\\n   math48\\t\\t  48 bit format from Math48 library\\n\\\n \\n\\\n-Support for known undocumented instructions:\\n\\\n-  -strict\\t\\t  assemble only documented instructions\\n\\\n-  -full\\t\\t\\t  assemble all undocumented instructions\\n\\\n-  -with-inst=INST[,...]\\n\\\n-  -Wnins INST[,...]\\t  assemble specified instruction(s)\\n\\\n-  -without-inst=INST[,...]\\n\\\n-  -Fins INST[,...]\\t  do not assemble specified instruction(s)\\n\\\n-Where INST is one of:\\n\\\n-  idx-reg-halves\\t  instructions with halves of index registers\\n\\\n-  sli\\t\\t\\t  instruction SLI/SLL\\n\\\n-  op-ii-ld\\t\\t  instructions like SLA (II+dd),R (opcodes DD/FD CB dd xx)\\n\\\n-  in-f-c\\t\\t  instruction IN F,(C)\\n\\\n-  out-c-0\\t\\t  instruction OUT (C),0\\n\\\n-\\n\\\n-Obsolete options:\\n\\\n-  -ignore-undocumented-instructions\\n\\\n-  -Wnud\\t\\t\\t  silently assemble undocumented Z80-instructions that work on R800\\n\\\n-  -ignore-unportable-instructions\\n\\\n-  -Wnup\\t\\t\\t  silently assemble all undocumented Z80-instructions\\n\\\n-  -warn-undocumented-instructions\\n\\\n-  -Wud\\t\\t\\t  issue warnings for undocumented Z80-instructions that work on R800\\n\\\n-  -warn-unportable-instructions\\n\\\n-  -Wup\\t\\t\\t  issue warnings for other undocumented Z80-instructions\\n\\\n-  -forbid-undocumented-instructions\\n\\\n-  -Fud\\t\\t\\t  treat all undocumented Z80-instructions as errors\\n\\\n-  -forbid-unportable-instructions\\n\\\n-  -Fup\\t\\t\\t  treat undocumented Z80-instructions that do not work on R800 as errors\\n\\\n-\\n\\\n-Default: -z80 -ignore-undocumented-instructions -warn-unportable-instructions.\\n\");\n+Default: -march=z80+xyhl+infc\\n\"));\n }\n \n static symbolS * zero;\n@@ -499,12 +534,7 @@ z80_md_end (void)\n   switch (ins_ok & INS_MARCH_MASK)\n     {\n     case INS_Z80:\n-      if (ins_ok & INS_UNPORT)\n-        mach_type = bfd_mach_z80full;\n-      else if (ins_ok & INS_UNDOC)\n-        mach_type = bfd_mach_z80;\n-      else\n-        mach_type = bfd_mach_z80strict;\n+      mach_type = bfd_mach_z80;\n       break;\n     case INS_R800:\n       mach_type = bfd_mach_r800;\n@@ -524,40 +554,17 @@ z80_md_end (void)\n     default:\n       mach_type = 0;\n     }\n-\n   bfd_set_arch_mach (stdoutput, TARGET_ARCH, mach_type);\n }\n \n #if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)\n void\n z80_elf_final_processing (void)\n-{\n+{/* nothing to do, all is done by BFD itself */\n+/*\n   unsigned elf_flags;\n-  switch (ins_ok & INS_MARCH_MASK)\n-    {\n-    case INS_Z80:\n-      elf_flags = EF_Z80_MACH_Z80;\n-      break;\n-    case INS_R800:\n-      elf_flags = EF_Z80_MACH_R800;\n-      break;\n-    case INS_Z180:\n-      elf_flags = EF_Z80_MACH_Z180;\n-      break;\n-    case INS_GBZ80:\n-      elf_flags = EF_Z80_MACH_GBZ80;\n-      break;\n-    case INS_EZ80:\n-      elf_flags = cpu_mode ? EF_Z80_MACH_EZ80_ADL : EF_Z80_MACH_EZ80_Z80;\n-      break;\n-    case INS_Z80N:\n-      elf_flags = EF_Z80_MACH_Z80N;\n-      break;\n-    default:\n-      elf_flags = 0;\n-    }\n-\n   elf_elfheader (stdoutput)->e_flags = elf_flags;\n+*/\n }\n #endif\n \n@@ -631,8 +638,6 @@ z80_start_line_hook (void)\n             }\n           c = ':';\n         }\n-      if (c == ':' && sdcc_compat && rest[-2] != '$')\n-        dollar_label_clear ();\n       if (*rest == ':')\n         {\n           /* remove second colon if SDCC compatibility enabled */\n@@ -1222,7 +1227,7 @@ emit_mx (char prefix, char opcode, int shift, expressionS * arg)\n \t  if ((prefix == 0) && (rnum & R_INDEX))\n \t    {\n \t      prefix = (rnum & R_IX) ? 0xDD : 0xFD;\n-              if (!(ins_ok & INS_EZ80))\n+\t      if (!(ins_ok & (INS_EZ80|INS_R800|INS_Z80N)))\n                 check_mach (INS_IDX_HALF);\n \t      rnum &= ~R_INDEX;\n \t    }\n@@ -1312,7 +1317,8 @@ emit_mr (char prefix, char opcode, const char *args)\n \t      ill_op ();\n \t      break;\n \t    }\n-\t  check_mach (INS_ROT_II_LD);\n+\t  if (!(ins_ok & INS_Z80N))\n+\t    check_mach (INS_ROT_II_LD);\n \t}\n       /* Fall through.  */\n     case O_register:\n@@ -1926,7 +1932,7 @@ emit_in (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n \t    {\n               if (port.X_add_number == REG_BC && !(ins_ok & INS_EZ80))\n                 ill_op ();\n-              else if (reg.X_add_number == REG_F && !(ins_ok & INS_R800))\n+\t      else if (reg.X_add_number == REG_F && !(ins_ok & (INS_R800|INS_Z80N)))\n                 check_mach (INS_IN_F_C);\n           q = frag_more (2);\n           *q++ = 0xED;\n@@ -1994,7 +2000,8 @@ emit_out (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n   /* Allow \"out (c), 0\" as unportable instruction.  */\n   if (reg.X_op == O_constant && reg.X_add_number == 0)\n     {\n-      check_mach (INS_OUT_C_0);\n+      if (!(ins_ok & INS_Z80N))\n+\tcheck_mach (INS_OUT_C_0);\n       reg.X_op = O_register;\n       reg.X_add_number = 6;\n     }\n@@ -2368,7 +2375,7 @@ emit_ld_r_n (expressionS *dst, expressionS *src)\n     {\n       if (ins_ok & INS_GBZ80)\n         ill_op ();\n-      else if (!(ins_ok & INS_EZ80))\n+      else if (!(ins_ok & (INS_EZ80|INS_R800|INS_Z80N)))\n         check_mach (INS_IDX_HALF);\n       *q++ = prefix;\n     }\n@@ -2529,7 +2536,7 @@ emit_ld_r_r (expressionS *dst, expressionS *src)\n     }\n   if ((ins_ok & INS_GBZ80) && prefix != 0)\n     ill_op ();\n-  if (ii_halves && !(ins_ok & INS_EZ80))\n+  if (ii_halves && !(ins_ok & (INS_EZ80|INS_R800|INS_Z80N)))\n     check_mach (INS_IDX_HALF);\n   if (prefix == 0 && (ins_ok & INS_EZ80))\n     {\n@@ -3545,10 +3552,10 @@ static table_t instab[] =\n   { \"scf\",  0x00, 0x37, emit_insn, INS_ALL },\n   { \"set\",  0xCB, 0xC0, emit_bit,  INS_ALL },\n   { \"setae\",0xED, 0x95, emit_insn, INS_Z80N },\n-  { \"sl1\",  0xCB, 0x30, emit_mr,   INS_SLI },\n+  { \"sl1\",  0xCB, 0x30, emit_mr,   INS_SLI|INS_Z80N },\n   { \"sla\",  0xCB, 0x20, emit_mr,   INS_ALL },\n-  { \"sli\",  0xCB, 0x30, emit_mr,   INS_SLI },\n-  { \"sll\",  0xCB, 0x30, emit_mr,   INS_SLI },\n+  { \"sli\",  0xCB, 0x30, emit_mr,   INS_SLI|INS_Z80N },\n+  { \"sll\",  0xCB, 0x30, emit_mr,   INS_SLI|INS_Z80N },\n   { \"slp\",  0xED, 0x76, emit_insn, INS_Z180|INS_EZ80 },\n   { \"sra\",  0xCB, 0x28, emit_mr,   INS_ALL },\n   { \"srl\",  0xCB, 0x38, emit_mr,   INS_ALL },"
    },
    {
      "sha": "e97042c680110aef063d48cdef973f83ca667f27",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -630,21 +630,12 @@ gcc(1), ld(1), and the Info entries for @file{binutils} and @file{ld}.\n @ifset Z80\n \n @emph{Target Z80 options:}\n-  [@b{-z80}]|[@b{-z180}]|[@b{-r800}]|[@b{-ez80}]|[@b{-ez80-adl}]\n+  [@b{-march=@var{CPU}@var{[-EXT]}@var{[+EXT]}}]\n   [@b{-local-prefix=}@var{PREFIX}]\n   [@b{-colonless}]\n   [@b{-sdcc}]\n   [@b{-fp-s=}@var{FORMAT}]\n   [@b{-fp-d=}@var{FORMAT}]\n-  [@b{-strict}]|[@b{-full}]\n-  [@b{-with-inst=@var{INST}[,...]}] [@b{-Wnins @var{INST}[,...]}]\n-  [@b{-without-inst=@var{INST}[,...]}] [@b{-Fins @var{INST}[,...]}]\n-  [@b{ -ignore-undocumented-instructions}] [@b{-Wnud}]\n-  [@b{ -ignore-unportable-instructions}] [@b{-Wnup}]\n-  [@b{ -warn-undocumented-instructions}] [@b{-Wud}]\n-  [@b{ -warn-unportable-instructions}] [@b{-Wup}]\n-  [@b{ -forbid-undocumented-instructions}] [@b{-Fud}]\n-  [@b{ -forbid-unportable-instructions}] [@b{-Fup}]\n @end ifset\n @ifset Z8000\n "
    },
    {
      "sha": "d2dbac1edd30be173ab27fba4be068f42bcaf53f",
      "filename": "gas/doc/c-z80.texi",
      "status": "modified",
      "additions": 33,
      "deletions": 88,
      "changes": 121,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/doc/c-z80.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/doc/c-z80.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-z80.texi?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -29,37 +29,35 @@\n @cindex options for Z80\n @c man begin OPTIONS\n @table @gcctabopt\n-@cindex @code{-z80} command-line option, Z80\n-@item -z80\n-Produce code for the Zilog Z80 processor. By default accepted undocumented\n-operations with halves of index registers (@code{IXL}, @code{IXH}, @code{IYL},\n-@code{IYH}) and instuction @code{IN F,(C)}. Other useful undocumented\n-instructions produces warnings. Undocumented instructions may not work on some\n-CPUs, use them on your own risk.\n-\n-@cindex @code{-r800} command-line option, Z80\n-@item -r800\n-Produce code for the Ascii R800 processor.\n-\n-@cindex @code{-z180} command-line option, Z80\n-@item -z180\n-Produce code for the Zilog Z180 processor.\n-\n-@cindex @code{-ez80} command-line option, Z80\n-@item -ez80\n-Produce code for the eZ80 processor in Z80 memory mode by default.\n-\n-@cindex @code{-ez80-adl} command-line option, Z80\n-@item -ez80-adl\n-Produce code for the eZ80 processor in ADL memory mode by default.\n-\n-@cindex @code{-gbz80} command-line option, Z80\n-@item -gbz80\n-Produce code for the GameBoy Z80 processor.\n-\n-@cindex @code{-z80n} command-line option, Z80\n-@item -z80n\n-Produce code for the Z80N processor.\n+\n+@cindex @samp{-march=} option, Z80\n+@item -march=@var{CPU}[-@var{EXT}@dots{}][+@var{EXT}@dots{}]\n+This option specifies the target processor. The assembler will issue\n+an error message if an attempt is made to assemble an instruction which\n+will not execute on the target processor. The following processor names\n+are recognized:\n+@code{z80},\n+@code{z180},\n+@code{ez80},\n+@code{gbz80},\n+@code{z80n},\n+@code{r800}.\n+In addition to the basic instruction set, the assembler can be told to\n+accept some extention mnemonics. For example,\n+@code{-march=z180+sli+infc} extends @var{z180} with @var{SLI} instructions and\n+@var{IN F,(C)}. The following instructions are currently supported:\n+@code{full} (all known instructions),\n+@code{adl} (ADL CPU mode by default),\n+@code{sli} (instruction known as @var{SLI}, @var{SLL} or @var{SL1}),\n+@code{xyhl} (instructions with halves of index registers: @var{IXL}, @var{IXH},\n+@var{IYL}, @var{IYH}),\n+@code{xdcb} (instructions like @var{RotOp (II+d),R} and @var{BitOp n,(II+d),R}),\n+@code{infc} (instruction @var{IN F,(C)} or @var{IN (C)}),\n+@code{outc0} (instruction @var{OUT (C),0}).\n+Note that rather than extending a basic instruction set, the extention\n+mnemonics starting with @code{-} revoke the respective functionality:\n+@code{-march=z80-full+xyhl} first removes all default extentions and adds\n+support for index registers halves only.\n \n @cindex @code{-local-prefix} command-line option, Z80\n @item  -local-prefix=@var{prefix}\n@@ -82,44 +80,6 @@ Single precision floating point numbers format. Default: ieee754 (32 bit).\n @cindex @code{-fp-d} command-line option, Z80\n @item -fp-d=@var{FORMAT}\n Double precision floating point numbers format. Default: ieee754 (64 bit).\n-\n-@cindex @code{-strict} command-line option, Z80\n-@item  -strict\n-Accept documented instructions only.\n-\n-@cindex @code{-full} command-line option, Z80\n-@item  -full\n-Accept all known Z80 instructions.\n-\n-@item  -with-inst=@var{INST}[,...]\n-@itemx -Wnins @var{INST}[,...]\n-Enable specified undocumented instruction(s).\n-\n-@item  -without-inst=@var{INST}[,...]\n-@itemx -Fins @var{INST}[,...]\n-Disable specified undocumented instruction(s).\n-\n-@item  -ignore-undocumented-instructions\n-@itemx -Wnud\n-Silently assemble undocumented Z80-instructions that have been adopted\n-as documented R800-instructions .\n-@item  -ignore-unportable-instructions\n-@itemx -Wnup\n-Silently assemble all undocumented Z80-instructions.\n-@item  -warn-undocumented-instructions\n-@itemx -Wud\n-Issue warnings for undocumented Z80-instructions that work on R800, do\n-not assemble other undocumented instructions without warning.\n-@item  -warn-unportable-instructions\n-@itemx -Wup\n-Issue warnings for other undocumented Z80-instructions, do not treat any\n-undocumented instructions as errors.\n-@item  -forbid-undocumented-instructions\n-@itemx -Fud\n-Treat all undocumented z80-instructions as errors.\n-@item  -forbid-unportable-instructions\n-@itemx -Fup\n-Treat undocumented z80-instructions that do not work on R800 as errors.\n @end table\n @c man end\n \n@@ -144,21 +104,6 @@ Double precision IEEE754 compatible format (64 bits).\n 48 bit floating point format from Math48 package by Anders Hejlsberg.\n @end table\n \n-Known undocumented instructions.\n-@table @option\n-@cindex Known undocumented instructions\n-@item  @code{idx-reg-halves}\n-All operations with halves of index registers (@code{IXL}, @code{IXH}, @code{IYL}, @code{IYH}).\n-@item  @code{sli}\n-@code{SLI} or @code{SLL} instruction. Same as @code{SLA r; INC r}.\n-@item  @code{op-ii-ld}\n-Istructions like @code{<op> (<ii>+<d>),<r>}. For example: @code{RL (IX+5),C}\n-@item @code{in-f-c}\n-Instruction @code{IN F,(C)}.\n-@item @code{out-c-0}\n-Instruction @code{OUT (C),0}\n-@end table\n-\n @cindex Z80 Syntax\n @node Z80 Syntax\n @section Syntax\n@@ -350,7 +295,7 @@ The section is marked as read only.\n @node Z80 Opcodes\n @section Opcodes\n In line with common practice, Z80 mnemonics are used for the Z80,\n-the Z180, eZ80 and the R800.\n+Z80N, Z180, eZ80, Ascii R800 and the GameBoy Z80.\n \n In many instructions it is possible to use one of the half index\n registers (@samp{ixl},@samp{ixh},@samp{iyl},@samp{iyh}) in stead of an\n@@ -376,17 +321,17 @@ This is equivalent to\n \n @example\n ld @var{r}, (ix+@var{d})\n-@var{opc} @var{r}\n+@var{op} @var{r}\n ld (ix+@var{d}), @var{r}\n @end example\n \n-The operation @samp{@var{opc}} may be any of @samp{res @var{b},},\n+The operation @samp{@var{op}} may be any of @samp{res @var{b},},\n @samp{set @var{b},}, @samp{rl}, @samp{rlc}, @samp{rr}, @samp{rrc},\n @samp{sla}, @samp{sli}, @samp{sra} and @samp{srl}, and the register\n @samp{@var{r}} may be any of @samp{a}, @samp{b}, @samp{c}, @samp{d},\n @samp{e}, @samp{h} and @samp{l}.\n \n-@item @var{opc} (iy+@var{d}), @var{r}\n+@item @var{op} (iy+@var{d}), @var{r}\n As above, but with @samp{iy} instead of @samp{ix}.\n @end table\n "
    },
    {
      "sha": "45793ac803720045a374336aee31b7c98057613b",
      "filename": "gas/testsuite/gas/z80/ez80_adl_all.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_adl_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_adl_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_adl_all.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -ez80-adl\n+#as: -march=ez80+adl\n #objdump: -d\n #name: All eZ80 instructions in ADL cpu mode\n "
    },
    {
      "sha": "0e223624d63699df8c5911195f1fe9d92d3c47e5",
      "filename": "gas/testsuite/gas/z80/ez80_adl_suf.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_adl_suf.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_adl_suf.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_adl_suf.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -ez80-adl\n+#as: -march=ez80+adl\n #objdump: -d\n #name: eZ80 instructions with sufficies in ADL cpu mode\n #source: ez80_isuf.s"
    },
    {
      "sha": "517e2c99e19483e1b9e2142d3f9823f51f81903a",
      "filename": "gas/testsuite/gas/z80/ez80_pref_dis.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_pref_dis.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_pref_dis.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_pref_dis.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,5 +1,5 @@\n #name: multiple eZ80 opcode prefixes\n-#as: -ez80\n+#as: -march=ez80\n #objdump: -d\n \n .*:[     ]+file format (coff)|(elf32)\\-z80"
    },
    {
      "sha": "ce69d251357cba1eac7b509dab501f736f18cc47",
      "filename": "gas/testsuite/gas/z80/ez80_z80_all.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_z80_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_z80_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_z80_all.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -ez80\n+#as: -march=ez80\n #objdump: -d\n #name: All eZ80 instructions in Z80 cpu mode\n "
    },
    {
      "sha": "4fa7cd9c15368b1602a634c23c54e133dd2e82a4",
      "filename": "gas/testsuite/gas/z80/ez80_z80_suf.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_z80_suf.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/ez80_z80_suf.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_z80_suf.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -ez80\n+#as: -march=ez80\n #objdump: -d\n #name: eZ80 instructions with sufficies in Z80 cpu mode\n #source: ez80_isuf.s"
    },
    {
      "sha": "cfd416b411b34f48e4f5aab1a765194b041584c3",
      "filename": "gas/testsuite/gas/z80/gbz80_all.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/gbz80_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/gbz80_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/gbz80_all.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -gbz80\n+#as: -march=gbz80\n #objdump: -d\n #name: GBZ80 instruction set\n "
    },
    {
      "sha": "03a6401fd9169003e33db5c7ce59b63b1e5c5c1d",
      "filename": "gas/testsuite/gas/z80/r800_extra.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/r800_extra.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/r800_extra.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_extra.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -r800\n+#as: -march=r800\n #objdump: -d\n #name: R800 specific instructions\n "
    },
    {
      "sha": "e607e343800406b1b93a6c139e94f64eb6e56e97",
      "filename": "gas/testsuite/gas/z80/r800_ii8.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/r800_ii8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/r800_ii8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_ii8.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -r800\n+#as: -march=r800\n #objdump: -d\n #name: halves of index register for R800\n #source: z80_ii8.s"
    },
    {
      "sha": "b5a0844f106c2ec4bd7efd808d9c88465215ea3e",
      "filename": "gas/testsuite/gas/z80/r800_z80_doc.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/r800_z80_doc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/r800_z80_doc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_z80_doc.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -r800\n+#as: -march=r800\n #objdump: -d\n #name: All Z80 documented instructions for R800\n #source: z80_doc.s"
    },
    {
      "sha": "340454db30a3d88098ae418a223c90e5504b5304",
      "filename": "gas/testsuite/gas/z80/sdcc.d",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/sdcc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/sdcc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/sdcc.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,12 +1,12 @@\n #name: SDCC compatibility mode\n-#source: sdcc.s -z80 -sdcc\n+#as: -sdcc\n #objdump: -d -j _CODE\n \n .*:[     ]+file format (coff)|(elf32)\\-z80\n \n Disassembly of section _CODE:\n \n-00000000 <_start>:\n+0+0 <_start>:\n [   ]+0:[ \t]+21 04 00[    \t]+ld hl,0x0004\n [   ]+3:[ \t]+8f[          \t]+adc a,a\n [   ]+4:[ \t]+88[          \t]+adc a,b\n@@ -135,13 +135,14 @@ Disassembly of section _CODE:\n [  ]+cf:[ \t]+c3 7b 00[    \t]+jp 0x007b\n [  ]+d2:[ \t]+c3 93 00[    \t]+jp 0x0093\n [  ]+d5:[ \t]+c3 ab 00[    \t]+jp 0x00ab\n+0+d8 <_func>:\n [  ]+d8:[ \t]+21 00 00[    \t]+ld hl,0x0000\n [  ]+db:[ \t]+36 00[       \t]+ld \\(hl\\),0x00\n [  ]+dd:[ \t]+23[          \t]+inc hl\n [  ]+de:[ \t]+36 00[       \t]+ld \\(hl\\),0x00\n [  ]+e0:[ \t]+18 fb[       \t]+jr 0x00dd\n \n-000000e2 <_finish>:\n+0+e2 <_finish>:\n [  ]+e2:[ \t]+fd 7e 02[    \t]+ld a,\\(iy\\+2\\)\n [  ]+e5:[ \t]+dd 77 ff[    \t]+ld \\(ix\\-1\\),a\n [  ]+e8:[ \t]+3a 34 12[    \t]+ld a,\\(0x1234\\)"
    },
    {
      "sha": "5fe9288c220ac842e2201848c27659fcc2ac290a",
      "filename": "gas/testsuite/gas/z80/sdcc.s",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/sdcc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/sdcc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/sdcc.s?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -149,7 +149,7 @@ _start::\n \tjp\t500$\n \tjp\t600$\n \tjp\t700$\n-.L_func:\n+_func:\n \tld\thl,0\n \tld\t(hl),#<function\n 00100$:"
    },
    {
      "sha": "0f08b0e1cf9a3ca5190b1f340249a3ad2d125c1c",
      "filename": "gas/testsuite/gas/z80/z180.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z180.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z180.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z180.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -z180\n+#as: -march=z180\n #objdump: -d\n #name: Z180 specific instructions\n "
    },
    {
      "sha": "c7791ac041b5cb5d633b25521e84ce5c8d247616",
      "filename": "gas/testsuite/gas/z80/z180_z80_doc.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z180_z80_doc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z180_z80_doc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z180_z80_doc.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -z180\n+#as: -march=z180\n #objdump: -d\n #name: All Z80 documented instructions for Z180\n #source: z80_doc.s"
    },
    {
      "sha": "c179ab843d6ad750ff42ba4aa16b25be4a14482f",
      "filename": "gas/testsuite/gas/z80/z80_doc.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_doc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_doc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_doc.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -z80 -without-inst=sli,op-ii-ld,idx-reg-halves,in-f-c,out-c-0\n+#as: -march=z80-full\n #objdump: -d\n #name: All Z80 documented instructions\n "
    },
    {
      "sha": "96386df600e0eade8ab3996c13d4cbd5112b57cb",
      "filename": "gas/testsuite/gas/z80/z80_ii8.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_ii8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_ii8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_ii8.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: --with-inst=idx-reg-halves\n+#as: -march=z80-full+xyhl\n #objdump: -d\n #name: halves of index register\n "
    },
    {
      "sha": "6de0284a671e8026543d24f9d775b5ec72e7fdab",
      "filename": "gas/testsuite/gas/z80/z80_in_f_c.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_in_f_c.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_in_f_c.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_in_f_c.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: --with-inst=in-f-c\n+#as: -march=z80-full+infc\n #objdump: -d\n #name: Z80 undocumented instruction IN F,(C)\n "
    },
    {
      "sha": "55a5fc6cc6695fcda32b90b83e55faab2229bce2",
      "filename": "gas/testsuite/gas/z80/z80_op_ii_ld.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_op_ii_ld.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_op_ii_ld.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_op_ii_ld.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -z80 -with-inst=sli,op-ii-ld\n+#as: -march=z80-full+sli+xdcb\n #objdump: -d\n #name: Z80 undocumented instructions DD/FD CB dis op\n "
    },
    {
      "sha": "07bbc3c0c6e3d3e6df87419ca1f06a5110c31792",
      "filename": "gas/testsuite/gas/z80/z80_out_c_0.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_out_c_0.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_out_c_0.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_out_c_0.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: --with-inst=out-c-0\n+#as: -march=z80-full+outc0\n #objdump: -d\n #name: Z80 undocumented instruction OUT (C),0\n "
    },
    {
      "sha": "2c0512a6481c1993dfd8e0bdf37cb5e416ccd427",
      "filename": "gas/testsuite/gas/z80/z80_sli.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_sli.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80_sli.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_sli.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: --with-inst=sli\n+#as: -march=z80-full+sli\n #objdump: -d\n #name: Z80 instruction SLI/SLL\n "
    },
    {
      "sha": "c5cb52634cf3dea1bdb375f0eb3b70bd7310b5ec",
      "filename": "gas/testsuite/gas/z80/z80n_all.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80n_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80n_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80n_all.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -z80n\n+#as: -march=z80n\n #objdump: -d\n \n .*:[     ]+file format (coff|elf32)\\-z80"
    },
    {
      "sha": "699a18690aff1146c573ca36fc83e2daad8e4908",
      "filename": "gas/testsuite/gas/z80/z80n_reloc.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80n_reloc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/gas/testsuite/gas/z80/z80n_reloc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80n_reloc.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -z80n\n+#as: -march=z80n\n #source: z80n_all.s\n #objdump: -r\n #name: Z80N big-endian relocation"
    },
    {
      "sha": "29348f186b9d65f91179ff26608afa3549c51848",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,3 +1,27 @@\n+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25537\n+\t* emultempl/z80.em: Remove machine compatability checking.\n+\n+2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25517\n+\t* testsuite/ld-z80/arch_ez80_adl.d: Update command line.\n+\t* testsuite/ld-z80/arch_ez80_z80.d: Likewise.\n+\t* testsuite/ld-z80/arch_r800.d: Likewise.\n+\t* testsuite/ld-z80/arch_z180.d: Likewise.\n+\t* testsuite/ld-z80/arch_z80n.d: Likewise.\n+\t* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.\n+\t* testsuite/ld-z80/comb_arch_z180_z80.d: Likewise.\n+\t* testsuite/ld-z80/comb_arch_z80_ez80.d: Likewise.\n+\t* testsuite/ld-z80/comb_arch_z80_z180.d: Likewise.\n+\t* testsuite/ld-z80/comb_arch_z80_z80n.d: Likewise.\n+\t* testsuite/ld-z80/relocs_b_ez80.d: Likewise.\n+\t* testsuite/ld-z80/relocs_b_z80.d: Likewise.\n+\t* testsuite/ld-z80/relocs_f_ez80.d: Likewise.\n+\t* testsuite/ld-z80/relocs_f_z80.d: Likewise.\n+\t* testsuite/ld-z80/relocs_f_z80n.d: Likewise.\n+\n 2020-02-19  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-plugin/pr25355.d: Allow alpha-linux nm result."
    },
    {
      "sha": "8894ffe0b0003a85cc98d160f9f36c8d6fce64de",
      "filename": "ld/emultempl/z80.em",
      "status": "modified",
      "additions": 16,
      "deletions": 106,
      "changes": 122,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/emultempl/z80.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/emultempl/z80.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/z80.em?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -19,135 +19,45 @@\n # Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n # MA 02110-1301, USA.\n \n-fragment <<EOF\n-/* --- \\begin{z80.em} */\n-\n+if [ x\"${EMULATION_NAME}\" = x\"elf32z80\" ]; then\n+  fragment <<EOF\n #include \"elf/z80.h\"\n-\n+EOF\n+else\n+  fragment <<EOF\n static void\n-gld${EMULATION_NAME}_after_open (void);\n-\n-static int result_mach_type;\n-\n-struct z80_mach_info\n-{\n-  unsigned eflags;\n-  unsigned bfd_mach;\n-  const int *compat; /* back compatible machines */\n-};\n-\n-static const int\n-back_compat_z80[] = {bfd_mach_z80, -1};\n-\n-static const int\n-back_compat_z180[] = {bfd_mach_z180, bfd_mach_z80, -1};\n-\n-static const int\n-back_compat_ez80[] = {bfd_mach_ez80_z80, bfd_mach_z180, bfd_mach_z80, -1};\n-\n-static const struct z80_mach_info\n-z80_mach_info[] =\n-{\n-  { EF_Z80_MACH_Z80,      bfd_mach_z80,       NULL },\n-  { EF_Z80_MACH_Z80,      bfd_mach_z80strict, back_compat_z80 },\n-  { EF_Z80_MACH_Z80,      bfd_mach_z80full,   back_compat_z80 },\n-  { EF_Z80_MACH_Z180,     bfd_mach_z180,      back_compat_z80 },\n-  { EF_Z80_MACH_EZ80_Z80, bfd_mach_ez80_z80,  back_compat_z180 },\n-  { EF_Z80_MACH_EZ80_ADL, bfd_mach_ez80_adl,  back_compat_ez80 },\n-  { EF_Z80_MACH_Z80N,     bfd_mach_z80n,      back_compat_z80 },\n-  { EF_Z80_MACH_GBZ80,    bfd_mach_gbz80,     NULL },\n-  { EF_Z80_MACH_R800,     bfd_mach_r800,      back_compat_z80 }\n-};\n-/*\n-static const struct z80_mach_info *\n-z80_mach_info_by_eflags (unsigned int eflags)\n-{\n-  const struct z80_mach_info *p;\n-  const struct z80_mach_info *e;\n-\n-  eflags &= EF_Z80_MACH_MSK;\n-  p = &z80_mach_info[0];\n-  e = &z80_mach_info[sizeof(z80_mach_info)/sizeof(*z80_mach_info)];\n-  for (; p != e; ++p)\n-    if (eflags == p->eflags)\n-      return p;\n-  return NULL;\n-}*/\n-\n-static const struct z80_mach_info *\n-z80_mach_info_by_mach (unsigned int bfd_mach)\n+gld${EMULATION_NAME}_after_open (void)\n {\n-  const struct z80_mach_info *p;\n-  const struct z80_mach_info *e;\n-\n-  p = &z80_mach_info[0];\n-  e = &z80_mach_info[sizeof(z80_mach_info)/sizeof(*z80_mach_info)];\n-  for (; p != e; ++p)\n-    if (bfd_mach == p->bfd_mach)\n-      return p;\n-  return NULL;\n }\n+EOF\n+fi\n \n-static const struct z80_mach_info *\n-z80_combine_mach (const struct z80_mach_info *m1,\n-\t\t  const struct z80_mach_info *m2)\n-{\n-  int i;\n-  int mach;\n-  if (m1->compat != NULL)\n-    for (i = 0; (mach = m1->compat[i]) >= 0; ++i)\n-      if ((unsigned)mach == m2->bfd_mach)\n-\treturn m1;\n-  if (m2->compat != NULL)\n-    for (i = 0; (mach = m2->compat[i]) >= 0; ++i)\n-      if ((unsigned)mach == m1->bfd_mach)\n-\treturn m2;\n-  /* incompatible mach */\n-  return NULL;\n-}\n+fragment <<EOF\n+/* --- \\begin{z80.em} */\n \n-/* Set the machine type of the output file based on result_mach_type.  */\n+/* Set the machine type of the output file based on types of inputs.  */\n static void\n z80_after_open (void)\n {\n-  const struct z80_mach_info *mach = NULL;\n   bfd *abfd;\n \n   /* For now, make sure all object files are of the same architecture.\n      We may try to merge object files with different architecture together.  */\n   for (abfd = link_info.input_bfds; abfd != NULL; abfd = abfd->link.next)\n     {\n-      const struct z80_mach_info *new_mach;\n-      /*new_mach = z80_mach_info_by_eflags (elf_elfheader (abfd)->e_flags);*/\n-      new_mach = z80_mach_info_by_mach(bfd_get_mach (abfd));\n-      if (mach == NULL)\n-\tmach = new_mach;\n-      else if (mach != new_mach)\n-\tmach = z80_combine_mach (mach, new_mach);\n-      if (mach == NULL)\n+      const bfd_arch_info_type *info;\n+      info = bfd_arch_get_compatible (link_info.output_bfd, abfd, FALSE);\n+      if (info == NULL)\n \teinfo (_(\"%F%P: %pB: Instruction sets of object files incompatible\\n\"),\n \t       abfd);\n+      else\n+        bfd_set_arch_info (link_info.output_bfd, info);\n     }\n-  if (mach != NULL)\n-    {\n-      bfd_set_arch_mach (link_info.output_bfd, bfd_arch_z80, mach->bfd_mach);\n-      result_mach_type = mach->bfd_mach;\n-    }\n-  else\n-    einfo (_(\"%F%P: %pB: Unknown machine type\\n\"),\n-\t   abfd);\n \n   /* Call the standard elf routine.  */\n   gld${EMULATION_NAME}_after_open ();\n }\n \n-#ifndef TARGET_IS_elf32z80\n-static void\n-gld${EMULATION_NAME}_after_open (void)\n-{\n-}\n-#endif\n-\n /* --- \\end{z80.em} */\n EOF\n "
    },
    {
      "sha": "8a057856acc3d4aca8658fee7d7785efec3bcfad",
      "filename": "ld/testsuite/ld-z80/arch_ez80_adl.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_ez80_adl.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_ez80_adl.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_ez80_adl.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,7 @@\n #name: eZ80 ADL mode arch test\n-#source: dummy1.s -ez80-adl\n-#source: dummy2.s -ez80-adl\n+#source: dummy1.s\n+#source: dummy2.s\n+#as: -march=ez80+adl\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "e7e865ba3be0b121c5c95d6efd43562c422b7209",
      "filename": "ld/testsuite/ld-z80/arch_ez80_z80.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_ez80_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_ez80_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_ez80_z80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,7 @@\n #name: eZ80 Z80 mode arch test\n-#source: dummy1.s -ez80\n-#source: dummy2.s -ez80\n+#source: dummy1.s\n+#source: dummy2.s\n+#as: -march=ez80\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "7af25238d7960ecc3669312fe8bdc0bf0ac0adf9",
      "filename": "ld/testsuite/ld-z80/arch_r800.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_r800.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_r800.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_r800.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,7 @@\n #name: R800 arch test\n-#source: dummy1.s -r800\n-#source: dummy2.s -r800\n+#source: dummy1.s\n+#source: dummy2.s\n+#as: -march=r800\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "171d891cb78be37e2c5d378fa01c2fe6e3923e73",
      "filename": "ld/testsuite/ld-z80/arch_z180.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_z180.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_z180.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_z180.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,7 @@\n #name: Z180 arch test\n-#source: dummy1.s -z180\n-#source: dummy2.s -z180\n+#source: dummy1.s\n+#source: dummy2.s\n+#as: -march=z180\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "7f43c1ca6aab303c30749bdaec50e52e86ed3326",
      "filename": "ld/testsuite/ld-z80/arch_z80n.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_z80n.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/arch_z80n.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_z80n.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,7 @@\n #name: Z80N arch test\n-#source: dummy1.s -z80n\n-#source: dummy2.s -z80n\n+#source: dummy1.s\n+#source: dummy2.s\n+#as: -march=z80n\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "a91bd805d4a9f709ddd3c0fac51375917576ef3a",
      "filename": "ld/testsuite/ld-z80/comb_arch_ez80_z80.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_ez80_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_ez80_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_ez80_z80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,6 @@\n #name: eZ80/Z80 arch combination test\n-#source: dummy1.s -ez80\n-#source: dummy2.s -z80\n+#source: dummy1.s -march=ez80\n+#source: dummy2.s -march=z80\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "acaac6e7537e8da255fdcce2e1636616009b51cf",
      "filename": "ld/testsuite/ld-z80/comb_arch_z180_z80.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z180_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z180_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z180_z80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,6 @@\n #name: Z180/Z80 arch combination test \n-#source: dummy1.s -z180\n-#source: dummy2.s -z80\n+#source: dummy1.s -march=z180\n+#source: dummy2.s -march=z80\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "aea784b0d3a799fb01c50e9859ceaf1bc57ad1d3",
      "filename": "ld/testsuite/ld-z80/comb_arch_z80_ez80.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z80_ez80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z80_ez80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z80_ez80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,6 @@\n #name: Z80/eZ80 arch combination test\n-#source: dummy1.s -z80\n-#source: dummy2.s -ez80\n+#source: dummy1.s -march=z80\n+#source: dummy2.s -march=ez80\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "a5f9b830cb4dabd7288ea751d04e436a41370550",
      "filename": "ld/testsuite/ld-z80/comb_arch_z80_z180.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z80_z180.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z80_z180.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z80_z180.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,6 @@\n #name: Z80/Z180 arch combination test\n-#source: dummy1.s -z80\n-#source: dummy2.s -z180\n+#source: dummy1.s -march=z80\n+#source: dummy2.s -march=z180\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "8ad64321f4a0419d7af72af08a6676e80bed961b",
      "filename": "ld/testsuite/ld-z80/comb_arch_z80_z80n.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z80_z80n.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/comb_arch_z80_z80n.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z80_z80n.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,6 @@\n #name: Z80/Z80N arch combination test\n-#source: dummy1.s -z80\n-#source: dummy2.s -z80n\n+#source: dummy1.s -march=z80\n+#source: dummy2.s -march=z80n\n #ld: -e 0\n #objdump: -f\n "
    },
    {
      "sha": "9975b773980ea7a81cdd332037c187aa545c3718",
      "filename": "ld/testsuite/ld-z80/relocs_b_ez80.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_b_ez80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_b_ez80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_b_ez80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,7 @@\n #name: eZ80 backward relocation in ADL mode\n-#source: labels.s -ez80-adl\n-#source: relocs.s -ez80-adl --defsym ADLMODE=1\n+#source: labels.s\n+#source: relocs.s --defsym ADLMODE=1\n+#as: -march=ez80+adl\n #ld: -e 0 -Ttext 0x100 -Tdata 0x200 -s\n #objdump: -d\n "
    },
    {
      "sha": "d003057ff4108a5eaca448451f4e5b702c3c1dca",
      "filename": "ld/testsuite/ld-z80/relocs_b_z80.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_b_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_b_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_b_z80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,6 @@\n #name: Z80 backward relocation\n-#source: labels.s -z80\n-#source: relocs.s -z80\n+#source: labels.s\n+#source: relocs.s\n #ld: -e 0 -Ttext 0x100 -Tdata 0x200 -s\n #objdump: -d\n "
    },
    {
      "sha": "cbc1c1894b0c8a18f809492047a6fc5d6ec32c14",
      "filename": "ld/testsuite/ld-z80/relocs_f_ez80.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_f_ez80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_f_ez80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_f_ez80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,7 @@\n #name: eZ80 forward relocation in ADL mode\n-#source: relocs.s -ez80-adl --defsym ADLMODE=1\n-#source: labels.s -ez80-adl\n+#source: relocs.s --defsym ADLMODE=1\n+#source: labels.s\n+#as: -march=ez80+adl\n #ld: -e 0 -Ttext 0x100 -Tdata 0x200\n #objdump: -d\n "
    },
    {
      "sha": "addfde46cf8c7c1a58bc842776b4d396ea727e62",
      "filename": "ld/testsuite/ld-z80/relocs_f_z80.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_f_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_f_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_f_z80.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,6 +1,6 @@\n-#name: Z80 forward relocation\n-#source: relocs.s -z80\n-#source: labels.s -z80\n+#name: Forward relocation\n+#source: relocs.s\n+#source: labels.s\n #ld: -e 0 -Ttext 0x100 -Tdata 0x200\n #objdump: -d\n "
    },
    {
      "sha": "83ec3578f3d2296f2e428a62bb9b2ab318651212",
      "filename": "ld/testsuite/ld-z80/relocs_f_z80n.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_f_z80n.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fcaaac0a0d3d46e3c59f87c1445852ac77b6c118/ld/testsuite/ld-z80/relocs_f_z80n.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_f_z80n.d?ref=fcaaac0a0d3d46e3c59f87c1445852ac77b6c118",
      "patch": "@@ -1,5 +1,5 @@\n #name: Z80N forward relocation\n-#as: -z80n --defsym Z80N=1\n+#as: -march=z80n --defsym Z80N=1\n #source: relocs.s\n #source: labels.s\n #ld: -e 0 -Ttext 0x100 -Tdata 0x200"
    }
  ]
}