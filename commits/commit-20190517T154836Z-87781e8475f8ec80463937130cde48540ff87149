{
  "sha": "87781e8475f8ec80463937130cde48540ff87149",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODc3ODFlODQ3NWY4ZWM4MDQ2MzkzNzEzMGNkZTQ4NTQwZmY4NzE0OQ==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T15:48:36Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T15:48:36Z"
    },
    "message": "testsuite: Remove TRANSCRIPT support\n\nTRANSCRIPT is superseeded by the .in, .cmd and .debug files, and\ncan be removed.\n\ngdb/testsuite/ChangeLog\n\n\t* README (Running the Testsuite): Change example.\n\t(Testsuite Parameters): Remove TRANSCRIPT.\n\t* lib/gdb.exp: Remove TRANSCRIPT check.",
    "tree": {
      "sha": "f430bbd058747dad3c96cf36c3768b19109dddf2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f430bbd058747dad3c96cf36c3768b19109dddf2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/87781e8475f8ec80463937130cde48540ff87149",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87781e8475f8ec80463937130cde48540ff87149",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/87781e8475f8ec80463937130cde48540ff87149",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87781e8475f8ec80463937130cde48540ff87149/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b420b89e4b321ff31f2e76cac499b908f042069b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b420b89e4b321ff31f2e76cac499b908f042069b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b420b89e4b321ff31f2e76cac499b908f042069b"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 8,
    "deletions": 68
  },
  "files": [
    {
      "sha": "186b13e3d6afc0ec3d50da1312196846a43e1746",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87781e8475f8ec80463937130cde48540ff87149/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87781e8475f8ec80463937130cde48540ff87149/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=87781e8475f8ec80463937130cde48540ff87149",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* README (Running the Testsuite): Change example.\n+\t(Testsuite Parameters): Remove TRANSCRIPT.\n+\t* lib/gdb.exp: Remove TRANSCRIPT check.\n+\n 2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n \n \t* README (Testsuite Parameters): Add replay logging to"
    },
    {
      "sha": "b6487cf8c4e09ecb8799b0dee2bf4819c50dc908",
      "filename": "gdb/testsuite/README",
      "status": "modified",
      "additions": 2,
      "deletions": 21,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87781e8475f8ec80463937130cde48540ff87149/gdb/testsuite/README",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87781e8475f8ec80463937130cde48540ff87149/gdb/testsuite/README",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/README?ref=87781e8475f8ec80463937130cde48540ff87149",
      "patch": "@@ -13,14 +13,14 @@ There are two ways to run the testsuite and pass additional parameters\n to DejaGnu.  The first is to do `make check' in the main build\n directory and specifying the makefile variable `RUNTESTFLAGS':\n \n-\t make check RUNTESTFLAGS='TRANSCRIPT=y gdb.base/a2-run.exp'\n+\t make check RUNTESTFLAGS='GDB=/usr/bin/gdb gdb.base/a2-run.exp'\n \n The second is to cd to the testsuite directory and invoke the DejaGnu\n `runtest' command directly.\n \n \tcd testsuite\n \tmake site.exp\n-\truntest TRANSCRIPT=y\n+\truntest GDB=/usr/bin/gdb\n \n (The `site.exp' file contains a handful of useful variables like host\n and target triplets, and pathnames.)\n@@ -124,25 +124,6 @@ Testsuite Parameters\n The following parameters are DejaGNU variables that you can set to\n affect the testsuite run globally.\n \n-TRANSCRIPT\n-\n-You may find it useful to have a transcript of the commands that the\n-testsuite sends to GDB, for instance if GDB crashes during the run,\n-and you want to reconstruct the sequence of commands.\n-\n-If the DejaGNU variable TRANSCRIPT is set (to any value), each\n-invocation of GDB during the test run will get a transcript file\n-written into the DejaGNU output directory.  The file will have the\n-name transcript.<n>, where <n> is an integer.  The first line of the\n-file shows the invocation command with all the options passed to it,\n-while subsequent lines are the GDB commands.  A `make check' might\n-look like this:\n-\n-      make check RUNTESTFLAGS=TRANSCRIPT=y\n-\n-The transcript may not be complete, as for instance tests of command\n-completion may show only partial command lines.\n-\n GDB\n \n By default, the testsuite exercises the GDB in the build directory,"
    },
    {
      "sha": "c703a7e63385f2247e84febdcd11cba92a7443f2",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87781e8475f8ec80463937130cde48540ff87149/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87781e8475f8ec80463937130cde48540ff87149/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=87781e8475f8ec80463937130cde48540ff87149",
      "patch": "@@ -5953,53 +5953,6 @@ proc relative_filename {root full} {\n     return [eval file join [lrange $full_split $len end]]\n }\n \n-# Log gdb command line and script if requested.\n-if {[info exists TRANSCRIPT]} {\n-  rename send_gdb real_send_gdb\n-  rename remote_spawn real_remote_spawn\n-  rename remote_close real_remote_close\n-\n-  global gdb_transcript\n-  set gdb_transcript \"\"\n-\n-  global gdb_trans_count\n-  set gdb_trans_count 1\n-\n-  proc remote_spawn {args} {\n-    global gdb_transcript gdb_trans_count outdir\n-\n-    if {$gdb_transcript != \"\"} {\n-      close $gdb_transcript\n-    }\n-    set gdb_transcript [open [file join $outdir transcript.$gdb_trans_count] w]\n-    puts $gdb_transcript [lindex $args 1]\n-    incr gdb_trans_count\n-\n-    return [uplevel real_remote_spawn $args]\n-  }\n-\n-  proc remote_close {args} {\n-    global gdb_transcript\n-\n-    if {$gdb_transcript != \"\"} {\n-      close $gdb_transcript\n-      set gdb_transcript \"\"\n-    }\n-\n-    return [uplevel real_remote_close $args]\n-  }\n-\n-  proc send_gdb {args} {\n-    global gdb_transcript\n-\n-    if {$gdb_transcript != \"\"} {\n-      puts -nonewline $gdb_transcript [lindex $args 0]\n-    }\n-\n-    return [uplevel real_send_gdb $args]\n-  }\n-}\n-\n # If GDB_PARALLEL exists, then set up the parallel-mode directories.\n if {[info exists GDB_PARALLEL]} {\n     if {[is_remote host]} {"
    }
  ]
}