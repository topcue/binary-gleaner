{
  "sha": "fe134c656991cda74ab7bad80947930f666f8907",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmUxMzRjNjU2OTkxY2RhNzRhYjdiYWQ4MDk0NzkzMGY2NjZmODkwNw==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-04-26T08:37:30Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-04-26T08:37:30Z"
    },
    "message": "x86: optimize LEA\n\nOver the years I've seen a number of instances where people used\n\n    lea     (%reg1), %reg2\n\nor\n\n    lea     symbol, %reg\n\ndespite the same thing being expressable via MOV. Since additionally\nLEA often has restrictions towards the ports it can be issued to, while\nMOV typically gets dealt with simply by register renaming, transform to\nMOV when possible (without growing opcode size and without altering\ninvolved relocation types).\n\nNote that for Mach-O the new 64-bit testcases would fail (for\nBFD_RELOC_X86_64_32S not having a representation), and hence get skipped\nthere.",
    "tree": {
      "sha": "eca41b24b1d7416e13375c9dc9685b1ebf5b5a4e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eca41b24b1d7416e13375c9dc9685b1ebf5b5a4e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fe134c656991cda74ab7bad80947930f666f8907",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe134c656991cda74ab7bad80947930f666f8907",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fe134c656991cda74ab7bad80947930f666f8907",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe134c656991cda74ab7bad80947930f666f8907/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b818855549013ba43e730e07f790e5cbfd16a757",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b818855549013ba43e730e07f790e5cbfd16a757",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b818855549013ba43e730e07f790e5cbfd16a757"
    }
  ],
  "stats": {
    "total": 586,
    "additions": 576,
    "deletions": 10
  },
  "files": [
    {
      "sha": "1e056f7f8ff503ae4050503057e718e0d5e6f53e",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -1,3 +1,16 @@\n+2021-04-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (want_disp32): Also check for SIZE32.\n+\t(optimize_encoding): Handle LEA.\n+\t* testsuite/gas/i386/lea.s, testsuite/gas/i386/lea.d,\n+\ttestsuite/gas/i386/lea.e, testsuite/gas/i386/lea-optimize.d:\n+\tAdd many more forms.\n+\t* testsuite/gas/i386/lea16.s, testsuite/gas/i386/lea16-optimize.d,\n+\ttestsuite/gas/i386/lea64.s, testsuite/gas/i386/lea64.d,\n+\ttestsuite/gas/i386/lea64.e, testsuite/gas/i386/lea64-optimize.d:\n+\tNew.\n+\t* testsuite/gas/i386/i386.exp: Run new tests.\n+\n 2021-04-26  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (md_apply_fix): Mark BFD_RELOC_X86_64_32S as"
    },
    {
      "sha": "116b9db518fd9d8d259693ef64763cab38fe323f",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 141,
      "deletions": 1,
      "changes": 142,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -3562,7 +3562,8 @@ want_disp32 (const insn_template *t)\n \t || i.prefix[ADDR_PREFIX]\n \t || (t->base_opcode == 0x8d\n \t     && t->opcode_modifier.opcodespace == SPACE_BASE\n-\t     && !i.types[1].bitfield.qword);\n+\t     && (!i.types[1].bitfield.qword\n+\t\t|| t->opcode_modifier.size == SIZE32));\n }\n \n static int\n@@ -4069,6 +4070,145 @@ optimize_encoding (void)\n {\n   unsigned int j;\n \n+  if (i.tm.opcode_modifier.opcodespace == SPACE_BASE\n+      && i.tm.base_opcode == 0x8d)\n+    {\n+      /* Optimize: -O:\n+\t   lea symbol, %rN    -> mov $symbol, %rN\n+\t   lea (%rM), %rN     -> mov %rM, %rN\n+\t   lea (,%rM,1), %rN  -> mov %rM, %rN\n+\n+\t   and in 32-bit mode for 16-bit addressing\n+\n+\t   lea (%rM), %rN     -> movzx %rM, %rN\n+\n+\t   and in 64-bit mode zap 32-bit addressing in favor of using a\n+\t   32-bit (or less) destination.\n+       */\n+      if (flag_code == CODE_64BIT && i.prefix[ADDR_PREFIX])\n+\t{\n+\t  if (!i.op[1].regs->reg_type.bitfield.word)\n+\t    i.tm.opcode_modifier.size = SIZE32;\n+\t  i.prefix[ADDR_PREFIX] = 0;\n+\t}\n+\n+      if (!i.index_reg && !i.base_reg)\n+\t{\n+\t  /* Handle:\n+\t       lea symbol, %rN    -> mov $symbol, %rN\n+\t   */\n+\t  if (flag_code == CODE_64BIT)\n+\t    {\n+\t      /* Don't transform a relocation to a 16-bit one.  */\n+\t      if (i.op[0].disps\n+\t\t  && i.op[0].disps->X_op != O_constant\n+\t\t  && i.op[1].regs->reg_type.bitfield.word)\n+\t\treturn;\n+\n+\t      if (!i.op[1].regs->reg_type.bitfield.qword\n+\t\t  || i.tm.opcode_modifier.size == SIZE32)\n+\t\t{\n+\t\t  i.tm.base_opcode = 0xb8;\n+\t\t  i.tm.opcode_modifier.modrm = 0;\n+\t\t  if (!i.op[1].regs->reg_type.bitfield.word)\n+\t\t    i.types[0].bitfield.imm32 = 1;\n+\t\t  else\n+\t\t    {\n+\t\t      i.tm.opcode_modifier.size = SIZE16;\n+\t\t      i.types[0].bitfield.imm16 = 1;\n+\t\t    }\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* Subject to further optimization below.  */\n+\t\t  i.tm.base_opcode = 0xc7;\n+\t\t  i.tm.extension_opcode = 0;\n+\t\t  i.types[0].bitfield.imm32s = 1;\n+\t\t  i.types[0].bitfield.baseindex = 0;\n+\t\t}\n+\t    }\n+\t  /* Outside of 64-bit mode address and operand sizes have to match if\n+\t     a relocation is involved, as otherwise we wouldn't (currently) or\n+\t     even couldn't express the relocation correctly.  */\n+\t  else if (i.op[0].disps\n+\t\t   && i.op[0].disps->X_op != O_constant\n+\t\t   && ((!i.prefix[ADDR_PREFIX])\n+\t\t       != (flag_code == CODE_32BIT\n+\t\t\t   ? i.op[1].regs->reg_type.bitfield.dword\n+\t\t\t   : i.op[1].regs->reg_type.bitfield.word)))\n+\t    return;\n+\t  else\n+\t    {\n+\t      i.tm.base_opcode = 0xb8;\n+\t      i.tm.opcode_modifier.modrm = 0;\n+\t      if (i.op[1].regs->reg_type.bitfield.dword)\n+\t\ti.types[0].bitfield.imm32 = 1;\n+\t      else\n+\t\ti.types[0].bitfield.imm16 = 1;\n+\n+\t      if (i.op[0].disps\n+\t\t  && i.op[0].disps->X_op == O_constant\n+\t\t  && i.op[1].regs->reg_type.bitfield.dword\n+\t\t  && !i.prefix[ADDR_PREFIX] != (flag_code == CODE_32BIT))\n+\t\ti.op[0].disps->X_add_number &= 0xffff;\n+\t    }\n+\n+\t  i.tm.operand_types[0] = i.types[0];\n+\t  i.imm_operands = 1;\n+\t  if (!i.op[0].imms)\n+\t    {\n+\t      i.op[0].imms = &im_expressions[0];\n+\t      i.op[0].imms->X_op = O_absent;\n+\t    }\n+\t}\n+      else if (i.op[0].disps\n+\t\t  && (i.op[0].disps->X_op != O_constant\n+\t\t      || i.op[0].disps->X_add_number))\n+\treturn;\n+      else\n+\t{\n+\t  /* Handle:\n+\t       lea (%rM), %rN     -> mov %rM, %rN\n+\t       lea (,%rM,1), %rN  -> mov %rM, %rN\n+\t       lea (%rM), %rN     -> movzx %rM, %rN\n+\t   */\n+\t  const reg_entry *addr_reg;\n+\n+\t  if (!i.index_reg && i.base_reg->reg_num != RegIP)\n+\t    addr_reg = i.base_reg;\n+\t  else if (!i.base_reg\n+\t\t   && i.index_reg->reg_num != RegIZ\n+\t\t   && !i.log2_scale_factor)\n+\t    addr_reg = i.index_reg;\n+\t  else\n+\t    return;\n+\n+\t  if (addr_reg->reg_type.bitfield.word\n+\t      && i.op[1].regs->reg_type.bitfield.dword)\n+\t    {\n+\t      if (flag_code != CODE_32BIT)\n+\t\treturn;\n+\t      i.tm.opcode_modifier.opcodespace = SPACE_0F;\n+\t      i.tm.base_opcode = 0xb7;\n+\t    }\n+\t  else\n+\t    i.tm.base_opcode = 0x8b;\n+\n+\t  if (addr_reg->reg_type.bitfield.dword\n+\t      && i.op[1].regs->reg_type.bitfield.qword)\n+\t    i.tm.opcode_modifier.size = SIZE32;\n+\n+\t  i.op[0].regs = addr_reg;\n+\t  i.reg_operands = 2;\n+\t}\n+\n+      i.mem_operands = 0;\n+      i.disp_operands = 0;\n+      i.prefix[ADDR_PREFIX] = 0;\n+      i.prefix[SEG_PREFIX] = 0;\n+      i.seg[0] = NULL;\n+    }\n+\n   if (optimize_for_space\n       && i.tm.opcode_modifier.opcodespace == SPACE_BASE\n       && i.reg_operands == 1"
    },
    {
      "sha": "00866458726d075713ca75727589a4fbc6aac303",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -538,6 +538,7 @@ if [gas_32_check] then {\n     run_dump_test \"optimize-6b\"\n     run_list_test \"optimize-7\" \"-I${srcdir}/$subdir -march=+noavx2 -al\"\n     run_dump_test \"lea-optimize\"\n+    run_dump_test \"lea16-optimize\"\n     run_dump_test \"align-branch-1a\"\n     run_dump_test \"align-branch-1b\"\n     run_dump_test \"align-branch-1c\"\n@@ -1194,6 +1195,8 @@ if [gas_64_check] then {\n \trun_dump_test \"x86-64-align-branch-2a\"\n \trun_dump_test \"x86-64-align-branch-2b\"\n \trun_dump_test \"x86-64-align-branch-2c\"\n+\trun_dump_test \"lea64\"\n+\trun_dump_test \"lea64-optimize\"\n     }\n     run_dump_test \"x86-64-align-branch-4a\"\n     run_dump_test \"x86-64-align-branch-4b\""
    },
    {
      "sha": "283b994bbfcc2899225f61620473214c54833cb3",
      "filename": "gas/testsuite/gas/i386/lea-optimize.d",
      "status": "modified",
      "additions": 38,
      "deletions": 3,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea-optimize.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea-optimize.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea-optimize.d?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -1,13 +1,48 @@\n #as: -O -q\n #objdump: -dw\n-#name: i386 LEA-like segment overrride dropping\n+#name: i386 LEA optimizations\n #source: lea.s\n \n .*: +file format .*\n \n Disassembly of section .text:\n \n 0+ <start>:\n-[ \t]*[0-9a-f]+:[ \t]+8d 00[ \t]+lea[ \t]+\\(%eax\\),%eax\n-[ \t]*[0-9a-f]+:[ \t]+8d 00[ \t]+lea[ \t]+\\(%eax\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 08[ \t]+lea[ \t]+\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 08[ \t]+lea[ \t]+\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 48 01[ \t]+lea[ \t]+0x1\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 88 00 00 00 00[ \t]+lea[ \t]+0x0\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 0c 25 00 00 00 00[ \t]+lea[ \t]+0x0\\(,(%eiz)?(,1)?\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 00[ \t]+lea[ \t]+\\(%eax,%eax(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 45 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%eax,2\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0\\(,(%eiz)?(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 00[ \t]+lea[ \t]+\\(%bx,%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b c0[ \t]+mov[ \t]+%eax,%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+0f b7 c6[ \t]+movzwl[ \t]+%si,%eax\n+[ \t]*[0-9a-f]+:[ \t]+0f b7 f6[ \t]+movzwl[ \t]+%si,%esi\n+[ \t]*[0-9a-f]+:[ \t]+0f b7 c6[ \t]+movzwl[ \t]+%si,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c0[ \t]+mov[ \t]+%ax,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%ax,%cx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%ax,%cx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c6[ \t]+mov[ \t]+%si,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b f6[ \t]+mov[ \t]+%si,%si\n+[ \t]*[0-9a-f]+:[ \t]+8b c9[ \t]+mov[ \t]+%ecx,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c1[ \t]+mov[ \t]+%ecx,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 ff ff ff ff[ \t]+mov[ \t]+\\$0xffffffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 fe ff[ \t]+mov[ \t]+\\$0xfffe,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 ff ff 00 00[ \t]+mov[ \t]+\\$0xffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 fe ff[ \t]+mov[ \t]+\\$0xfffe,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 05 00 00 00 00[ \t]+lea[ \t]+0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 06 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n #pass"
    },
    {
      "sha": "bfc9c13559a288ecbc8106acbde7ca12bc92dfc4",
      "filename": "gas/testsuite/gas/i386/lea.d",
      "status": "modified",
      "additions": 37,
      "deletions": 2,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea.d?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -7,6 +7,41 @@\n Disassembly of section .text:\n \n 0+ <start>:\n-[ \t]*[0-9a-f]+:[ \t]+36 8d 00[ \t]+lea[ \t]+%ss:\\(%eax\\),%eax\n-[ \t]*[0-9a-f]+:[ \t]+36 8d 00[ \t]+lea[ \t]+%ss:\\(%eax\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+36 8d 04 08[ \t]+lea[ \t]+%ss:\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+36 8d 04 08[ \t]+lea[ \t]+%ss:\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 48 01[ \t]+lea[ \t]+0x1\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 88 00 00 00 00[ \t]+lea[ \t]+0x0\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 0c 25 00 00 00 00[ \t]+lea[ \t]+0x0\\(,(%eiz)?(,1)?\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 00[ \t]+lea[ \t]+\\(%eax,%eax(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 45 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%eax,2\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0\\(,(%eiz)?(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 00[ \t]+lea[ \t]+\\(%bx,%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 00[ \t]+lea[ \t]+\\(%eax\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 08[ \t]+lea[ \t]+\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 08[ \t]+lea[ \t]+\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+65 8d 08[ \t]+lea[ \t]+%gs:\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 04[ \t]+lea[ \t]+\\(%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 34[ \t]+lea[ \t]+\\(%si\\),%esi\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 04[ \t]+lea[ \t]+\\(%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 00[ \t]+lea[ \t]+\\(%eax\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 08[ \t]+lea[ \t]+\\(%eax\\),%cx\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 08[ \t]+lea[ \t]+\\(%eax\\),%cx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04[ \t]+lea[ \t]+\\(%si\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 34[ \t]+lea[ \t]+\\(%si\\),%si\n+[ \t]*[0-9a-f]+:[ \t]+8d 0c 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 05 01 00 00 00[ \t]+lea[ \t]+0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 05 02 00 00 00[ \t]+lea[ \t]+0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8d 05 ff ff ff ff[ \t]+lea[ \t]+0xffffffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 05 fe ff ff ff[ \t]+lea[ \t]+0xfffffffe,%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 06 01 00[ \t]+lea[ \t]+0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 06 02 00[ \t]+lea[ \t]+0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 06 ff ff[ \t]+lea[ \t]+-0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 06 fe ff[ \t]+lea[ \t]+-0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8d 05 00 00 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 05 00 00 00 00[ \t]+lea[ \t]+0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 06 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 06 00 00[ \t]+lea[ \t]+0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8d 05 00 00 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 05 00 00 00 00[ \t]+lea[ \t]+0x0,%ax\n #pass"
    },
    {
      "sha": "d0d47aeb3ebb9672c953f810fb0b03dd5e5542ca",
      "filename": "gas/testsuite/gas/i386/lea.e",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea.e",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea.e",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea.e?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -1,3 +1,4 @@\n .*: Assembler messages:\n .*:3: Warning: .* `lea' .*\n .*:4: Warning: .* `lea' .*\n+.*:19: Warning: .* `lea' .*"
    },
    {
      "sha": "1fb6aa850034fd9e5bc319a263b2efc4e07e6471",
      "filename": "gas/testsuite/gas/i386/lea.s",
      "status": "modified",
      "additions": 52,
      "deletions": 2,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea.s?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -1,4 +1,54 @@\n \t.text\n start:\n-\tlea\t%ss:(%eax), %eax\n-\tss lea\t(%eax), %eax\n+\tlea\t%ss:(%eax,%ecx), %eax\n+\tss lea\t(%eax,%ecx), %eax\n+\n+\t.allow_index_reg\n+\tlea\t1(%eax), %ecx\n+\tlea\tsym(%eax), %ecx\n+\tlea\tsym(,%eiz), %ecx\n+\n+\tlea\t(%eax,%eax), %eax\n+\tlea\t(,%eax,2), %eax\n+\tlea\t(,%eiz), %eax\n+\tlea\t(%bx,%si), %eax\n+\n+\tlea\t(%eax), %eax\n+\tlea\t(%eax), %ecx\n+\tlea\t1-1(%eax), %ecx\n+\tlea\t%gs:(%eax), %ecx\n+\n+\tlea\t(%si), %eax\n+\tlea\t(%si), %esi\n+\tleal\t(%si), %eax\n+\n+\tlea\t(%eax), %ax\n+\tlea\t(%eax), %cx\n+\tleaw\t(%eax), %cx\n+\n+\tlea\t(%si), %ax\n+\tlea\t(%si), %si\n+\n+\tlea\t(,%ecx,1), %ecx\n+\tlea\t(,%ecx,1), %eax\n+\n+\tlea\t1, %eax\n+\tlea\t2, %ax\n+\n+\tlea\t-1, %eax\n+\tlea\t-2, %ax\n+\n+\taddr16 lea 1, %eax\n+\taddr16 lea 2, %ax\n+\n+\taddr16 lea -1, %eax\n+\taddr16 lea -2, %ax\n+\n+\tlea\tsym, %eax\n+\tlea\tsym, %ax\n+\n+\taddr16 lea sym, %eax\n+\taddr16 lea sym, %ax\n+\n+\tlea\t(,1), %eax\n+\tlea\t(,1), %ax"
    },
    {
      "sha": "e45b73772071e6766a6a1934e45d4d6a52180efa",
      "filename": "gas/testsuite/gas/i386/lea16-optimize.d",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea16-optimize.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea16-optimize.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea16-optimize.d?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -0,0 +1,48 @@\n+#as: -O -q -I${srcdir}/$subdir\n+#objdump: -dw -Mi8086\n+#name: i386 16-bit LEA optimizations\n+#source: lea16.s\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <start>:\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 08[ \t]+lea[ \t]+\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 08[ \t]+lea[ \t]+\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 48 01[ \t]+lea[ \t]+0x1\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 88 00 00 00 00[ \t]+lea[ \t]+0x0\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 0c 25 00 00 00 00[ \t]+addr32 lea[ \t]+0x0,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 00[ \t]+lea[ \t]+\\(%eax,%eax(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 45 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%eax,2\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 25 00 00 00 00[ \t]+addr32 lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 00[ \t]+lea[ \t]+\\(%bx,%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c0[ \t]+mov[ \t]+%eax,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04[ \t]+lea[ \t]+\\(%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 34[ \t]+lea[ \t]+\\(%si\\),%esi\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04[ \t]+lea[ \t]+\\(%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b c0[ \t]+mov[ \t]+%ax,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%ax,%cx\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%ax,%cx\n+[ \t]*[0-9a-f]+:[ \t]+8b c6[ \t]+mov[ \t]+%si,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8b f6[ \t]+mov[ \t]+%si,%si\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c9[ \t]+mov[ \t]+%ecx,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c1[ \t]+mov[ \t]+%ecx,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 ff ff 00 00[ \t]+mov[ \t]+\\$0xffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 fe ff[ \t]+mov[ \t]+\\$0xfffe,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 ff ff ff ff[ \t]+mov[ \t]+\\$0xffffffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 fe ff[ \t]+mov[ \t]+\\$0xfffe,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 06 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 05 00 00 00 00[ \t]+addr32 lea[ \t]+0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n+#pass"
    },
    {
      "sha": "024a4e9c457f2e6eb2e547880da32ac6f47c966b",
      "filename": "gas/testsuite/gas/i386/lea16.s",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea16.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea16.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea16.s?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -0,0 +1,7 @@\n+\t.code16\n+\n+\t.macro addr16 mnem:req opnds:vararg\n+\taddr32 \\mnem \\opnds\n+\t.endm\n+\n+\t.include \"lea.s\""
    },
    {
      "sha": "301805a53e667d29a1175eb8c8a3874daddfce76",
      "filename": "gas/testsuite/gas/i386/lea64-optimize.d",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64-optimize.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64-optimize.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea64-optimize.d?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -0,0 +1,71 @@\n+#as: -O -q\n+#objdump: -drw\n+#name: x86-64 LEA optimizations\n+#source: lea64.s\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <start>:\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 08[ \t]+lea[ \t]+\\(%rax,%rcx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 08[ \t]+lea[ \t]+\\(%rax,%rcx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 48 01[ \t]+lea[ \t]+0x1\\(%rax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 88 00 00 00 00[ \t]+lea[ \t]+0x0\\(%rax\\),%ecx[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+8d 0c 25 00 00 00 00[ \t]+lea[ \t]+0x0,%ecx[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 00[ \t]+lea[ \t]+\\(%rax,%rax(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 45 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rax,2\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 05 00 00 00 00[ \t]+lea[ \t]+0x0\\(%rip\\),%eax($| *#.*)\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+48 8b c0[ \t]+mov[ \t]+%rax,%rax\n+[ \t]*[0-9a-f]+:[ \t]+48 8b c8[ \t]+mov[ \t]+%rax,%rcx\n+[ \t]*[0-9a-f]+:[ \t]+48 8b c8[ \t]+mov[ \t]+%rax,%rcx\n+[ \t]*[0-9a-f]+:[ \t]+48 8b c8[ \t]+mov[ \t]+%rax,%rcx\n+[ \t]*[0-9a-f]+:[ \t]+8b c6[ \t]+mov[ \t]+%esi,%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b f6[ \t]+mov[ \t]+%esi,%esi\n+[ \t]*[0-9a-f]+:[ \t]+8b c6[ \t]+mov[ \t]+%esi,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c6[ \t]+mov[ \t]+%si,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b f6[ \t]+mov[ \t]+%si,%si\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c6[ \t]+mov[ \t]+%si,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8b c0[ \t]+mov[ \t]+%eax,%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c0[ \t]+mov[ \t]+%eax,%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c6[ \t]+mov[ \t]+%si,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b f6[ \t]+mov[ \t]+%si,%si\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c6[ \t]+mov[ \t]+%si,%ax\n+[ \t]*[0-9a-f]+:[ \t]+48 8b c9[ \t]+mov[ \t]+%rcx,%rcx\n+[ \t]*[0-9a-f]+:[ \t]+48 8b c1[ \t]+mov[ \t]+%rcx,%rax\n+[ \t]*[0-9a-f]+:[ \t]+8b c9[ \t]+mov[ \t]+%ecx,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c1[ \t]+mov[ \t]+%ecx,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c9[ \t]+mov[ \t]+%cx,%cx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c1[ \t]+mov[ \t]+%cx,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8b c9[ \t]+mov[ \t]+%ecx,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c1[ \t]+mov[ \t]+%ecx,%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b c9[ \t]+mov[ \t]+%ecx,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8b c1[ \t]+mov[ \t]+%ecx,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c9[ \t]+mov[ \t]+%cx,%cx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c1[ \t]+mov[ \t]+%cx,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 02 00 00 00[ \t]+mov[ \t]+\\$0x2,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 03 00[ \t]+mov[ \t]+\\$0x3,%ax\n+[ \t]*[0-9a-f]+:[ \t]+48 c7 c0 ff ff ff ff[ \t]+mov[ \t]+\\$0xffffffffffffffff,%rax\n+[ \t]*[0-9a-f]+:[ \t]+b8 fe ff ff ff[ \t]+mov[ \t]+\\$0xfffffffe,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 fd ff[ \t]+mov[ \t]+\\$0xfffd,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 02 00 00 00[ \t]+mov[ \t]+\\$0x2,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 03 00[ \t]+mov[ \t]+\\$0x3,%ax\n+[ \t]*[0-9a-f]+:[ \t]+b8 ff ff ff ff[ \t]+mov[ \t]+\\$0xffffffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 fe ff ff ff[ \t]+mov[ \t]+\\$0xfffffffe,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 fd ff[ \t]+mov[ \t]+\\$0xfffd,%ax\n+[ \t]*[0-9a-f]+:[ \t]+48 c7 c0 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%rax[ \t]+[0-9a-f]+: R_X86_64_32S[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%ax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%ax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+48 c7 c0 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%rax\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n+#pass"
    },
    {
      "sha": "80136ffe6e381ef1861f0077b96014966783a670",
      "filename": "gas/testsuite/gas/i386/lea64.d",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea64.d?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -0,0 +1,70 @@\n+#objdump: -drw\n+#name: x86-64 LEA\n+#warning_output: lea64.e\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <start>:\n+[ \t]*[0-9a-f]+:[ \t]+64 8d 04 08[ \t]+lea[ \t]+%fs:\\(%rax,%rcx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+65 8d 04 08[ \t]+lea[ \t]+%gs:\\(%rax,%rcx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 48 01[ \t]+lea[ \t]+0x1\\(%rax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 88 00 00 00 00[ \t]+lea[ \t]+0x0\\(%rax\\),%ecx[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+8d 0c 25 00 00 00 00[ \t]+lea[ \t]+0x0,%ecx[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 00[ \t]+lea[ \t]+\\(%rax,%rax(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 45 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rax,2\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 05 00 00 00 00[ \t]+lea[ \t]+0x0\\(%rip\\),%eax($| *#.*)\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 00[ \t]+lea[ \t]+\\(%rax\\),%rax\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 08[ \t]+lea[ \t]+\\(%rax\\),%rcx\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 08[ \t]+lea[ \t]+\\(%rax\\),%rcx\n+[ \t]*[0-9a-f]+:[ \t]+65 48 8d 08[ \t]+lea[ \t]+%gs:\\(%rax\\),%rcx\n+[ \t]*[0-9a-f]+:[ \t]+8d 06[ \t]+lea[ \t]+\\(%rsi\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8d 36[ \t]+lea[ \t]+\\(%rsi\\),%esi\n+[ \t]*[0-9a-f]+:[ \t]+8d 06[ \t]+lea[ \t]+\\(%rsi\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 06[ \t]+lea[ \t]+\\(%rsi\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 36[ \t]+lea[ \t]+\\(%rsi\\),%si\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 06[ \t]+lea[ \t]+\\(%rsi\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 00[ \t]+lea[ \t]+\\(%eax\\),%rax\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 08[ \t]+lea[ \t]+\\(%eax\\),%rcx\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 08[ \t]+lea[ \t]+\\(%eax\\),%rcx\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 00[ \t]+lea[ \t]+\\(%eax\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 08[ \t]+lea[ \t]+\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 06[ \t]+lea[ \t]+\\(%esi\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 36[ \t]+lea[ \t]+\\(%esi\\),%si\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 06[ \t]+lea[ \t]+\\(%esi\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 0c 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rcx(,1)?\\),%rcx\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 04 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rcx(,1)?\\),%rax\n+[ \t]*[0-9a-f]+:[ \t]+8d 0c 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rcx(,1)?\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rcx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 0c 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rcx(,1)?\\),%cx\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%rcx(,1)?\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 0c 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%rcx\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 04 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%rax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 0c 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 04 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 0c 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%cx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 0d 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%ecx(,1)?\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 04 25 01 00 00 00[ \t]+lea[ \t]+0x1,%rax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 02 00 00 00[ \t]+lea[ \t]+0x2,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04 25 03 00 00 00[ \t]+lea[ \t]+0x3,%ax\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 04 25 ff ff ff ff[ \t]+lea[ \t]+0xffffffffffffffff,%rax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 fe ff ff ff[ \t]+lea[ \t]+0xfffffffffffffffe,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04 25 fd ff ff ff[ \t]+lea[ \t]+0xfffffffffffffffd,%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 04 25 01 00 00 00[ \t]+lea[ \t]+0x1\\(,%eiz,1\\),%rax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 04 25 02 00 00 00[ \t]+lea[ \t]+0x2\\(,%eiz,1\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 25 03 00 00 00[ \t]+lea[ \t]+0x3\\(,%eiz,1\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 04 25 ff ff ff ff[ \t]+lea[ \t]+0xffffffff\\(,%eiz,1\\),%rax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 04 25 fe ff ff ff[ \t]+lea[ \t]+0xfffffffe\\(,%eiz,1\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 25 fd ff ff ff[ \t]+lea[ \t]+0xfffffffd\\(,%eiz,1\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%rax[ \t]+[0-9a-f]+: R_X86_64_32S[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%eax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%ax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+67 48 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%eiz,1\\),%rax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%eiz,1\\),%eax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%eiz,1\\),%ax[ \t]+[0-9a-f]+: R_X86_64_32[ \t]+sym\n+[ \t]*[0-9a-f]+:[ \t]+48 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%rax\n+[ \t]*[0-9a-f]+:[ \t]+8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04 25 00 00 00 00[ \t]+lea[ \t]+0x0,%ax\n+#pass"
    },
    {
      "sha": "d0d47aeb3ebb9672c953f810fb0b03dd5e5542ca",
      "filename": "gas/testsuite/gas/i386/lea64.e",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64.e",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64.e",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea64.e?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -0,0 +1,4 @@\n+.*: Assembler messages:\n+.*:3: Warning: .* `lea' .*\n+.*:4: Warning: .* `lea' .*\n+.*:19: Warning: .* `lea' .*"
    },
    {
      "sha": "1778adc4851b5acbec8734082e620aeba384cfca",
      "filename": "gas/testsuite/gas/i386/lea64.s",
      "status": "added",
      "additions": 84,
      "deletions": 0,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/gas/testsuite/gas/i386/lea64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea64.s?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -0,0 +1,84 @@\n+\t.text\n+start:\n+\tlea\t%fs:(%rax,%rcx), %eax\n+\tgs lea\t(%rax,%rcx), %eax\n+\n+\t.allow_index_reg\n+\tlea\t1(%rax), %ecx\n+\tlea\tsym(%rax), %ecx\n+\tlea\tsym(,%riz), %ecx\n+\n+\tlea\t(%rax,%rax), %eax\n+\tlea\t(,%rax,2), %eax\n+\tlea\t(%rip), %eax\n+\tlea\t(,%riz), %eax\n+\n+\tlea\t(%rax), %rax\n+\tlea\t(%rax), %rcx\n+\tlea\t1-1(%rax), %rcx\n+\tlea\t%gs:(%rax), %rcx\n+\n+\tlea\t(%rsi), %eax\n+\tlea\t(%rsi), %esi\n+\tleal\t(%rsi), %eax\n+\n+\tlea\t(%rsi), %ax\n+\tlea\t(%rsi), %si\n+\tleaw\t(%rsi), %ax\n+\n+\tlea\t(%eax), %rax\n+\tlea\t(%eax), %rcx\n+\tleaq\t(%eax), %rcx\n+\n+\tlea\t(%eax), %eax\n+\tlea\t(%eax), %ecx\n+\n+\tlea\t(%esi), %ax\n+\tlea\t(%esi), %si\n+\tleaw\t(%esi), %ax\n+\n+\tlea\t(,%rcx,1), %rcx\n+\tlea\t(,%rcx,1), %rax\n+\n+\tlea\t(,%rcx,1), %ecx\n+\tlea\t(,%rcx,1), %eax\n+\n+\tlea\t(,%rcx,1), %cx\n+\tlea\t(,%rcx,1), %ax\n+\n+\tlea\t(,%ecx,1), %rcx\n+\tlea\t(,%ecx,1), %rax\n+\n+\tlea\t(,%ecx,1), %ecx\n+\tlea\t(,%ecx,1), %eax\n+\n+\tlea\t(,%ecx,1), %cx\n+\tlea\t(,%ecx,1), %ax\n+\n+\tlea\t1, %rax\n+\tlea\t2, %eax\n+\tlea\t3, %ax\n+\n+\tlea\t-1, %rax\n+\tlea\t-2, %eax\n+\tlea\t-3, %ax\n+\n+\taddr32 lea 1, %rax\n+\taddr32 lea 2, %eax\n+\taddr32 lea 3, %ax\n+\n+\taddr32 lea -1, %rax\n+\taddr32 lea -2, %eax\n+\taddr32 lea -3, %ax\n+\n+\tlea\tsym, %rax\n+\tlea\tsym, %eax\n+\tlea\tsym, %ax\n+\n+\taddr32 lea sym, %rax\n+\taddr32 lea sym, %eax\n+\taddr32 lea sym, %ax\n+\n+\tlea\t(,1), %rax\n+\tlea\t(,1), %eax\n+\tlea\t(,1), %ax"
    },
    {
      "sha": "f0840e34d9dca8d5b16010647670057611d7aa37",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (lea): Add Optimize.\n+\t* opcodes/i386-tbl.h: Re-generate.\n+\n 2020-04-23  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* xtensa-dis.c (print_xtensa_operand): For PC-relative operand"
    },
    {
      "sha": "b0530e5fb82f4f4cd85d67f7ebf6ce6ebf9b45b5",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -228,7 +228,7 @@ out, 0xe6, None, 0, W|No_sSuf|No_qSuf|No_ldSuf, { Imm8 }\n out, 0xee, None, 0, W|No_sSuf|No_qSuf|No_ldSuf, { InOutPortReg }\n \n // Load effective address.\n-lea, 0x8d, None, 0, Modrm|Anysize|No_bSuf|No_sSuf|No_ldSuf, { BaseIndex, Reg16|Reg32|Reg64 }\n+lea, 0x8d, None, 0, Modrm|Anysize|No_bSuf|No_sSuf|No_ldSuf|Optimize, { BaseIndex, Reg16|Reg32|Reg64 }\n \n // Load segment registers from memory.\n lds, 0xc5, None, CpuNo64, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Unspecified|BaseIndex, Reg16|Reg32 }"
    },
    {
      "sha": "df139ba61218a307f9011741fe0c87559c71e627",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe134c656991cda74ab7bad80947930f666f8907/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe134c656991cda74ab7bad80947930f666f8907/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=fe134c656991cda74ab7bad80947930f666f8907",
      "patch": "@@ -1121,7 +1121,7 @@ const insn_template i386_optab[] =\n   { \"lea\", 0x8d, None, 2,\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
    }
  ]
}