{
  "sha": "0bc2e38dd71e24676e180b6b37e0a2cd1186994d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGJjMmUzOGRkNzFlMjQ2NzZlMTgwYjZiMzdlMGEyY2QxMTg2OTk0ZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-12-03T20:47:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-12-03T20:47:56Z"
    },
    "message": "gdb: fix logic of find_comp_unit and set_comp_unit\n\nThe logic in find_comp_unit and set_comp_unit is reversed.  When the BFD\nrequires relocation, we want to put the comp_unit structure in the\nmap where the comp_unit objects are not shared, that is the one indexed\nby objfile.  If the BFD does not require relocation, then, we can share\na single comp_unit structure for all users of that BFD, so we want to\nput it in the BFD-indexed map.  The comments on top of\ndwarf2_frame_bfd_data and dwarf2_frame_objfile_data make that clear.\n\nFix it by swapping the two in find_comp_unit and set_comp_unit.\n\nI don't have a test for this, because I don't see how to write one in a\nreasonable amount of time.\n\ngdb/ChangeLog:\n\n\tPR gdb/26876\n\t* dwarf2/frame.c (find_comp_unit, set_comp_unit): Reverse use of\n\tdwarf2_frame_bfd_data and dwarf2_frame_objfile_data.\n\nChange-Id: I80c1ee7ad8425fa4947de65b170973d05f5a52ec",
    "tree": {
      "sha": "0ac8a90a0b8dce04798ab3af48fef2bd910520fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ac8a90a0b8dce04798ab3af48fef2bd910520fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0bc2e38dd71e24676e180b6b37e0a2cd1186994d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bc2e38dd71e24676e180b6b37e0a2cd1186994d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0bc2e38dd71e24676e180b6b37e0a2cd1186994d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bc2e38dd71e24676e180b6b37e0a2cd1186994d/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b10b530a4566888492ac693773e1e35f66c4b7c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b10b530a4566888492ac693773e1e35f66c4b7c4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b10b530a4566888492ac693773e1e35f66c4b7c4"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 12,
    "deletions": 4
  },
  "files": [
    {
      "sha": "75d7422559d09832ca9814cca60303cc7fb0097c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bc2e38dd71e24676e180b6b37e0a2cd1186994d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bc2e38dd71e24676e180b6b37e0a2cd1186994d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0bc2e38dd71e24676e180b6b37e0a2cd1186994d",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-03  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\tPR gdb/26876\n+\t* dwarf2/frame.c (find_comp_unit, set_comp_unit): Reverse use of\n+\tdwarf2_frame_bfd_data and dwarf2_frame_objfile_data.\n+\n 2020-12-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* arch/riscv.c: Include 'rv32e-xregs.c'."
    },
    {
      "sha": "7df3ccfe46a7b624f12c1cf41f5e10440a7916c2",
      "filename": "gdb/dwarf2/frame.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bc2e38dd71e24676e180b6b37e0a2cd1186994d/gdb/dwarf2/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bc2e38dd71e24676e180b6b37e0a2cd1186994d/gdb/dwarf2/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/frame.c?ref=0bc2e38dd71e24676e180b6b37e0a2cd1186994d",
      "patch": "@@ -1640,8 +1640,9 @@ find_comp_unit (struct objfile *objfile)\n {\n   bfd *abfd = objfile->obfd;\n   if (gdb_bfd_requires_relocations (abfd))\n-    return dwarf2_frame_bfd_data.get (abfd);\n-  return dwarf2_frame_objfile_data.get (objfile);\n+    return dwarf2_frame_objfile_data.get (objfile);\n+\n+  return dwarf2_frame_bfd_data.get (abfd);\n }\n \n /* Store the comp_unit on OBJFILE, or the corresponding BFD, as\n@@ -1652,8 +1653,9 @@ set_comp_unit (struct objfile *objfile, struct comp_unit *unit)\n {\n   bfd *abfd = objfile->obfd;\n   if (gdb_bfd_requires_relocations (abfd))\n-    return dwarf2_frame_bfd_data.set (abfd, unit);\n-  return dwarf2_frame_objfile_data.set (objfile, unit);\n+    return dwarf2_frame_objfile_data.set (objfile, unit);\n+\n+  return dwarf2_frame_bfd_data.set (abfd, unit);\n }\n \n /* Find the FDE for *PC.  Return a pointer to the FDE, and store the"
    }
  ]
}