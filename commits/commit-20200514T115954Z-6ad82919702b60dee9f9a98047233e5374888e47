{
  "sha": "6ad82919702b60dee9f9a98047233e5374888e47",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmFkODI5MTk3MDJiNjBkZWU5ZjlhOTgwNDcyMzNlNTM3NDg4OGU0Nw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-05-14T11:59:54Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-05-14T11:59:54Z"
    },
    "message": "gdb/infrun: enable/disable thread events of all targets in stop_all_threads\n\nIn stop_all_threads, the thread events of the current top target are\nenabled at the beginning of the function and then disabled at the end\n(at scope exit time).  Because there may be multiple targets whose\nthread lists will be updated and whose threads are stopped,\nenable/disable thread events for all targets.\n\nThis update caused a change in the annotations.  In particular, a\n\"frames-invalid\" annotation is printed one more time due to switching\nthe current inferior.  Hence, gdb.base/annota1.exp and\ngdb.cp/annota2.exp tests are also updated.\n\nRegression-tested on X86_64 Linux using the default board file and the\nnative-extended-gdbserver board file.\n\ngdb/ChangeLog:\n2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* infrun.c (stop_all_threads): Enable/disable thread events of all\n\ttargets.  Move a debug message denoting the end of the function\n\tinto the SCOPED_EXIT block.\n\ngdb/testsuite/ChangeLog:\n2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.base/annota1.exp: Update the expected output.\n\t* gdb.cp/annota2.exp: Ditto.",
    "tree": {
      "sha": "44dbe0c465f757d9bd60cfbf49c9f1ab4b3b1197",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/44dbe0c465f757d9bd60cfbf49c9f1ab4b3b1197"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6ad82919702b60dee9f9a98047233e5374888e47",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ad82919702b60dee9f9a98047233e5374888e47",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6ad82919702b60dee9f9a98047233e5374888e47",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ad82919702b60dee9f9a98047233e5374888e47/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d890404b63b8a0b6c28212388f21421d029f6ad2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d890404b63b8a0b6c28212388f21421d029f6ad2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d890404b63b8a0b6c28212388f21421d029f6ad2"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 32,
    "deletions": 7
  },
  "files": [
    {
      "sha": "6d56c04bc37d12c663a5abb534a26d85a12ff2ff",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad82919702b60dee9f9a98047233e5374888e47/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad82919702b60dee9f9a98047233e5374888e47/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6ad82919702b60dee9f9a98047233e5374888e47",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* infrun.c (stop_all_threads): Enable/disable thread events of all\n+\ttargets.  Move a debug message denoting the end of the function\n+\tinto the SCOPED_EXIT block.\n+\n 2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* process-stratum-target.h: Include <set>."
    },
    {
      "sha": "2a8e73c1111ced78f9dd74a80d83af45a0ad05b6",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 19,
      "deletions": 5,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad82919702b60dee9f9a98047233e5374888e47/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad82919702b60dee9f9a98047233e5374888e47/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=6ad82919702b60dee9f9a98047233e5374888e47",
      "patch": "@@ -4769,8 +4769,25 @@ stop_all_threads (void)\n \n   scoped_restore_current_thread restore_thread;\n \n-  target_thread_events (1);\n-  SCOPE_EXIT { target_thread_events (0); };\n+  /* Enable thread events of all targets.  */\n+  for (auto *target : all_non_exited_process_targets ())\n+    {\n+      switch_to_target_no_thread (target);\n+      target_thread_events (true);\n+    }\n+\n+  SCOPE_EXIT\n+    {\n+      /* Disable thread events of all targets.  */\n+      for (auto *target : all_non_exited_process_targets ())\n+\t{\n+\t  switch_to_target_no_thread (target);\n+\t  target_thread_events (false);\n+\t}\n+\n+      if (debug_infrun)\n+\tfprintf_unfiltered (gdb_stdlog, \"infrun: stop_all_threads done\\n\");\n+    };\n \n   /* Request threads to stop, and then wait for the stops.  Because\n      threads we already know about can spawn more threads while we're\n@@ -4961,9 +4978,6 @@ stop_all_threads (void)\n \t    }\n \t}\n     }\n-\n-  if (debug_infrun)\n-    fprintf_unfiltered (gdb_stdlog, \"infrun: stop_all_threads done\\n\");\n }\n \n /* Handle a TARGET_WAITKIND_NO_RESUMED event.  */"
    },
    {
      "sha": "3ce59bc1c56c790e0617e8c5882621ba9f6d29e7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad82919702b60dee9f9a98047233e5374888e47/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad82919702b60dee9f9a98047233e5374888e47/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6ad82919702b60dee9f9a98047233e5374888e47",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.base/annota1.exp: Update the expected output.\n+\t* gdb.cp/annota2.exp: Ditto.\n+\n 2020-05-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* lib/check-test-names.exp: Disable when testing is being run in"
    },
    {
      "sha": "829d144cc207afbf18c614a38e0a2390462d8e66",
      "filename": "gdb/testsuite/gdb.base/annota1.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad82919702b60dee9f9a98047233e5374888e47/gdb/testsuite/gdb.base/annota1.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad82919702b60dee9f9a98047233e5374888e47/gdb/testsuite/gdb.base/annota1.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/annota1.exp?ref=6ad82919702b60dee9f9a98047233e5374888e47",
      "patch": "@@ -223,7 +223,7 @@ gdb_test_multiple \"break printf\" \"break printf\" {\n #\n # get to printf\n #\n-set pat_begin \"\\r\\n\\032\\032post-prompt\\r\\nContinuing.\\r\\n\\r\\n\\032\\032starting\\r\\n\\r\\n\\032\\032frames-invalid\\r\\n${breakpoints_invalid}\"\n+set pat_begin \"\\r\\n\\032\\032post-prompt\\r\\nContinuing.\\r\\n\\r\\n\\032\\032starting\\r\\n\\r\\n\\032\\032frames-invalid\\r\\n${breakpoints_invalid}\\r\\n\\032\\032frames-invalid\\r\\n\"\n set pat_adjust \"warning: Breakpoint 3 address previously adjusted from $hex to $hex.\\r\\n\"\n set pat_end \"\\r\\n\\032\\032breakpoint 3\\r\\n\\r\\nBreakpoint 3, \\r\\n\\032\\032frame-begin 0 $hex\\r\\n\\r\\n(\\032\\032frame-address\\r\\n$hex\\r\\n\\032\\032frame-address-end\\r\\n in \\r\\n)*.*\\032\\032frame-function-name\\r\\n.*printf(@.*)?\\r\\n\\032\\032frame-args\\r\\n.*\\032\\032frame-end\\r\\n\\r\\n\\032\\032stopped\\r\\n$gdb_prompt$\"\n "
    },
    {
      "sha": "1b4f04bb44570e04b27668105f6efe2fb279b38b",
      "filename": "gdb/testsuite/gdb.cp/annota2.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ad82919702b60dee9f9a98047233e5374888e47/gdb/testsuite/gdb.cp/annota2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ad82919702b60dee9f9a98047233e5374888e47/gdb/testsuite/gdb.cp/annota2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/annota2.exp?ref=6ad82919702b60dee9f9a98047233e5374888e47",
      "patch": "@@ -218,7 +218,7 @@ set pat [multi_line \"\" \\\n \t     \"\\032\\032post-prompt\" \\\n \t     \"\" \\\n \t     \"\\032\\032starting\" \\\n-\t     \"\\(${frames_invalid}\\)*${breakpoints_invalid}\" \\\n+\t     \"\\(${frames_invalid}\\)*${breakpoints_invalid}\\(${frames_invalid}\\)*\" \\\n \t     \"\\032\\032watchpoint 3\" \\\n \t     \".*atchpoint 3: a.x\" \\\n \t     \"\" \\"
    }
  ]
}