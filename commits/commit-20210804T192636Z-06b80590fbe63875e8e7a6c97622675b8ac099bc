{
  "sha": "06b80590fbe63875e8e7a6c97622675b8ac099bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDZiODA1OTBmYmU2Mzg3NWU4ZTdhNmM5NzYyMjY3NWI4YWMwOTliYw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-03T15:31:14Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-04T19:26:36Z"
    },
    "message": "gdb/testsuite: fix gdb.base/info-macros.exp with clang\n\nThe test gdb.base/info-macros.exp says that it doesn't pass the \"debug\"\noption to prepare_for_testing because that would cause -g to appear\nafter -g3 on the command line, and that would cause some gcc versions to\nnot include macro info.  I don't know what gcc versions this refers to.\nI tested with gcc 4.8, and that works fine with -g after -g3.\n\nThe current state is problematic when testing with CC_FOR_TARGET=clang,\nbecause then only -fdebug-macro is included.  No -g switch if included,\nmeaning we get a binary without any debug info, and the test fails.\n\nOne way to fix it would be to add \"debug\" to the options when the\ncompiler is clang.\n\nHowever, the solution I chose was to specify \"debug\" in any case, even\nfor gcc.  Other macro tests such as gdb.base/macscp.exp do perfectly\nfine with it.  Also, this lets the test use the debug flag specified by\nthe board file.  For example, we can test with GCC and DWARF 5, with:\n\n    $ make check RUNTESTFLAGS=\"--target_board unix/gdb:debug_flags=-gdwarf-5\" TESTS=\"gdb.base/info-macros.exp\"\n\nWith the hard-coded -g3, this wouldn't actually test with DWARF 5.\n\nChange-Id: I33fa92ee545007d3ae9c52c4bb2d5be6b5b698f1",
    "tree": {
      "sha": "e4dc4693533e4189e1aa052a140a757ce3eab970",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e4dc4693533e4189e1aa052a140a757ce3eab970"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/06b80590fbe63875e8e7a6c97622675b8ac099bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06b80590fbe63875e8e7a6c97622675b8ac099bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/06b80590fbe63875e8e7a6c97622675b8ac099bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06b80590fbe63875e8e7a6c97622675b8ac099bc/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f6c4a82abddd59a33ca38813a5721fac99b08f34",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6c4a82abddd59a33ca38813a5721fac99b08f34",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f6c4a82abddd59a33ca38813a5721fac99b08f34"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 4,
    "deletions": 4
  },
  "files": [
    {
      "sha": "f1d912a75cfab76d699a0738259141567a61aa4e",
      "filename": "gdb/testsuite/gdb.base/info-macros.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06b80590fbe63875e8e7a6c97622675b8ac099bc/gdb/testsuite/gdb.base/info-macros.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06b80590fbe63875e8e7a6c97622675b8ac099bc/gdb/testsuite/gdb.base/info-macros.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-macros.exp?ref=06b80590fbe63875e8e7a6c97622675b8ac099bc",
      "patch": "@@ -21,13 +21,13 @@ if [using_fission] {\n     return -1\n }\n \n+set options {debug}\n+\n get_compiler_info\n if { [test_compiler_info gcc*] } {\n-    # Don't use \"debug\" here.  Otherwise \"-g\" would be appended to the gcc\n-    # command line, possibly overriding \"-g3\" (depending on gcc version).\n-    set options \"additional_flags=-g3\"\n+    lappend options \"additional_flags=-g3\"\n } elseif { [test_compiler_info clang*] } {\n-    set options \"additional_flags=-fdebug-macro\"\n+    lappend options \"additional_flags=-fdebug-macro\"\n } else {\n     untested \"no compiler info\"\n     return -1"
    }
  ]
}