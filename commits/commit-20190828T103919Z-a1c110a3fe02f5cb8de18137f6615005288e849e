{
  "sha": "a1c110a3fe02f5cb8de18137f6615005288e849e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTFjMTEwYTNmZTAyZjVjYjhkZTE4MTM3ZjY2MTUwMDUyODhlODQ5ZQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-08-28T10:39:19Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-08-28T10:39:19Z"
    },
    "message": "Add a --source-comment=<text> option to objdump which provides a prefix to dipslayed source code lines.\n\n\tPR 24931\n\t* objdump.c (source_comment): New static variable.\n\t(option_values): Add OPTION_SOURCE_COMMENT.\n\t(long_opions): Add --source-comment.\n\t(print_line): If source comment is set, use it as a prefix to the\n\tsource code line.\n\t(main): Handle OPTION_SOURCE_COMMENT.\n\t* doc/binutils.texi: Document the new option.\n\t* NEWS: Mention the new feature.\n\t* testsuite/binutils-all/objdump.exp (test_objdump_S): Add tests\n\tof the -S and --source-comment options.",
    "tree": {
      "sha": "7a2209dfa1f841214890f58efffd960bd2ce9dee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7a2209dfa1f841214890f58efffd960bd2ce9dee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a1c110a3fe02f5cb8de18137f6615005288e849e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1c110a3fe02f5cb8de18137f6615005288e849e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a1c110a3fe02f5cb8de18137f6615005288e849e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1c110a3fe02f5cb8de18137f6615005288e849e/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "72dd1784ef6c5157af03c50975aee603e9b6078e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72dd1784ef6c5157af03c50975aee603e9b6078e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/72dd1784ef6c5157af03c50975aee603e9b6078e"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 83,
    "deletions": 1
  },
  "files": [
    {
      "sha": "6ddf000c05bef67011072a4b69583f2702ecd02c",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=a1c110a3fe02f5cb8de18137f6615005288e849e",
      "patch": "@@ -1,3 +1,17 @@\n+2019-08-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24931\n+\t* objdump.c (source_comment): New static variable.\n+\t(option_values): Add OPTION_SOURCE_COMMENT.\n+\t(long_opions): Add --source-comment.\n+\t(print_line): If source comment is set, use it as a prefix to the\n+\tsource code line.\n+\t(main): Handle OPTION_SOURCE_COMMENT.\n+\t* doc/binutils.texi: Document the new option.\n+\t* NEWS: Mention the new feature.\n+\t* testsuite/binutils-all/objdump.exp (test_objdump_S): Add tests\n+\tof the -S and --source-comment options.\n+\n 2019-08-27  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24510"
    },
    {
      "sha": "c6c4e29602945c892333c2c760ae1733080f1d81",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=a1c110a3fe02f5cb8de18137f6615005288e849e",
      "patch": "@@ -1,4 +1,6 @@\n -*- text -*-\n+* Add --source-comment[=<txt>] option to objdump which if present,\n+  provides a prefix to source code lines displayed in a disassembly.\n \n * Add --verilog-data-width option to objcopy for verilog targets to control\n   width of data elements in verilog hex format."
    },
    {
      "sha": "f6cdbdb5a7f58b096b536cce345731b1beec7c1c",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=a1c110a3fe02f5cb8de18137f6615005288e849e",
      "patch": "@@ -2104,6 +2104,7 @@ objdump [@option{-a}|@option{--archive-headers}]\n         [@option{-j} @var{section}|@option{--section=}@var{section}]\n         [@option{-l}|@option{--line-numbers}]\n         [@option{-S}|@option{--source}]\n+        [@option{--source-comment}[=@var{text}]]\n         [@option{-m} @var{machine}|@option{--architecture=}@var{machine}]\n         [@option{-M} @var{options}|@option{--disassembler-options=}@var{options}]\n         [@option{-p}|@option{--private-headers}]\n@@ -2613,6 +2614,15 @@ non-empty sections are displayed.\n Display source code intermixed with disassembly, if possible.  Implies\n @option{-d}.\n \n+@item --source-comment[=@var{txt}]\n+@cindex source disassembly\n+@cindex disassembly, with source\n+Like the @option{-S} option, but all source code lines are displayed\n+with a prefix of @var{txt}.  Typically @var{txt} will be a comment\n+string which can be used to distinguish the assembler code from the\n+source code.  If @var{txt} is not provided then a default string of\n+@var{``# ``} (hash followed by a space), will be used.\n+\n @item --prefix=@var{prefix}\n @cindex Add prefix to absolute paths\n Specify @var{prefix} to add to the absolute paths when used with"
    },
    {
      "sha": "33d5d72d3d55d496b8f866a818d8004e68869c0e",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 17,
      "deletions": 1,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=a1c110a3fe02f5cb8de18137f6615005288e849e",
      "patch": "@@ -123,6 +123,7 @@ static int prefix_strip;\t\t/* --prefix-strip */\n static size_t prefix_length;\n static bfd_boolean unwind_inlines;\t/* --inlines.  */\n static const char * disasm_sym;\t\t/* Disassembly start symbol.  */\n+static const char * source_comment;     /* --source_comment.  */\n \n static int demangle_flags = DMGL_ANSI | DMGL_PARAMS;\n \n@@ -217,6 +218,7 @@ usage (FILE *stream, int status)\n   -D, --disassemble-all    Display assembler contents of all sections\\n\\\n       --disassemble=<sym>  Display assembler contents from <sym>\\n\\\n   -S, --source             Intermix source code with disassembly\\n\\\n+      --source-comment[=<txt>] Prefix lines of source code with <txt>\\n\\\n   -s, --full-contents      Display the full contents of all sections requested\\n\\\n   -g, --debugging          Display debug information in object file\\n\\\n   -e, --debugging-tags     Display debug information using ctags style\\n\\\n@@ -313,6 +315,7 @@ enum option_values\n     OPTION_RECURSE_LIMIT,\n     OPTION_NO_RECURSE_LIMIT,\n     OPTION_INLINES,\n+    OPTION_SOURCE_COMMENT,\n     OPTION_CTF,\n     OPTION_CTF_PARENT\n   };\n@@ -354,6 +357,7 @@ static struct option long_options[]=\n   {\"section-headers\", no_argument, NULL, 'h'},\n   {\"show-raw-insn\", no_argument, &show_raw_insn, 1},\n   {\"source\", no_argument, NULL, 'S'},\n+  {\"source-comment\", optional_argument, NULL, OPTION_SOURCE_COMMENT},\n   {\"special-syms\", no_argument, &dump_special_syms, 1},\n   {\"include\", required_argument, NULL, 'I'},\n   {\"dwarf\", optional_argument, NULL, OPTION_DWARF},\n@@ -1594,8 +1598,10 @@ print_line (struct print_file_list *p, unsigned int linenum)\n   if (linenum >= p->maxline)\n     return;\n   l = p->linemap [linenum];\n-  /* Test fwrite return value to quiet glibc warning.  */\n+  if (source_comment != NULL && strlen (l) > 0)\n+    printf (\"%s\", source_comment);\n   len = strcspn (l, \"\\n\\r\");\n+  /* Test fwrite return value to quiet glibc warning.  */\n   if (len == 0 || fwrite (l, len, 1, stdout) == 1)\n     putchar ('\\n');\n }\n@@ -4455,6 +4461,15 @@ main (int argc, char **argv)\n \t  with_source_code = TRUE;\n \t  seenflag = TRUE;\n \t  break;\n+\tcase OPTION_SOURCE_COMMENT:\n+\t  disassemble = TRUE;\n+\t  with_source_code = TRUE;\n+\t  seenflag = TRUE;\n+\t  if (optarg)\n+\t    source_comment = xstrdup (sanitize_string (optarg));\n+\t  else\n+\t    source_comment = xstrdup (\"# \");\n+\t  break;\n \tcase 'g':\n \t  dump_debugging = 1;\n \t  seenflag = TRUE;\n@@ -4566,6 +4581,7 @@ main (int argc, char **argv)\n   free_only_list ();\n   free (dump_ctf_section_name);\n   free (dump_ctf_parent_name);\n+  free ((void *) source_comment);\n \n   END_PROGRESS (program_name);\n "
    },
    {
      "sha": "9630bacb9053a750cedfdfaf0ded8bd6c424299e",
      "filename": "binutils/testsuite/binutils-all/objdump.exp",
      "status": "modified",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/testsuite/binutils-all/objdump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1c110a3fe02f5cb8de18137f6615005288e849e/binutils/testsuite/binutils-all/objdump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objdump.exp?ref=a1c110a3fe02f5cb8de18137f6615005288e849e",
      "patch": "@@ -803,6 +803,46 @@ proc test_objdump_dotnet_assemblies {} {\n \n test_objdump_dotnet_assemblies\n \n+# Test objdump -S\n+\n+proc test_objdump_S { } {\n+    global srcdir\n+    global subdir\n+    global OBJDUMP\n+    global OBJDUMPFLAGS\n+    \n+    set test \"objdump -S\"\n+\n+    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog executable debug] != \"\" } {\n+\tunsupported \"$test (build)\"\n+\treturn\n+    }\n+\n+    set got [binutils_run $OBJDUMP \"$OBJDUMPFLAGS -S tmpdir/testprog\"]\n+\n+    set want \"static int local = 2\"\n+\n+    if [regexp $want $got] then {\n+\tpass $test\n+    } else {\n+\tfail $test\n+    }\n+\n+    set test \"objdump --source-comment\"\n+\n+    set got [binutils_run $OBJDUMP \"$OBJDUMPFLAGS --source-comment=// tmpdir/testprog\"]\n+\n+    set want \"//static int local = 2\"\n+\n+    if [regexp $want $got] then {\n+\tpass $test\n+    } else {\n+\tfail $test\n+    }\n+}\n+\n+test_objdump_S\n+\n # Options which are not tested: -a -D -R -T -x -l --stabs\n # I don't see any generic way to test any of these other than -a.\n # Tests could be written for specific targets, and that should be done"
    }
  ]
}