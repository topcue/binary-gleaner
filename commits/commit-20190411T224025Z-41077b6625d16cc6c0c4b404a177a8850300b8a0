{
  "sha": "41077b6625d16cc6c0c4b404a177a8850300b8a0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDEwNzdiNjYyNWQxNmNjNmMwYzRiNDA0YTE3N2E4ODUwMzAwYjhhMA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-06T10:02:04Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-11T22:40:25Z"
    },
    "message": "gdb: Fix alignment computation for structs with only static fields\n\nThe current code in gdbtypes.c:type_align incorrectly returns 0 as the\nalignment for a structure containing only static fields.  After this\npatch the correct value of 1 is returned.  The gdb.base/align.exp test\nis extended to cover this case.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.c (type_align): A struct with no non-static fields also\n\thas alignment of 1.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/align.exp: Extend test to cover structures containing\n\tonly static fields.",
    "tree": {
      "sha": "e640c63cbf1e3d28841c1139c5b412782a8fb5a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e640c63cbf1e3d28841c1139c5b412782a8fb5a7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/41077b6625d16cc6c0c4b404a177a8850300b8a0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41077b6625d16cc6c0c4b404a177a8850300b8a0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/41077b6625d16cc6c0c4b404a177a8850300b8a0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41077b6625d16cc6c0c4b404a177a8850300b8a0/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9f0272f8548164b024ff9fd151686b2b904a5d59",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f0272f8548164b024ff9fd151686b2b904a5d59",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9f0272f8548164b024ff9fd151686b2b904a5d59"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 34,
    "deletions": 12
  },
  "files": [
    {
      "sha": "d50a03478edd1be11adc329e51cef4c7e26279cd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=41077b6625d16cc6c0c4b404a177a8850300b8a0",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdbtypes.c (type_align): A struct with no non-static fields also\n+\thas alignment of 1.\n+\n 2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* riscv-tdep.c (riscv_call_arg_complex_float): Fix offset of first"
    },
    {
      "sha": "683238d03d27a457dd097e0317018d9c3154a259",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=41077b6625d16cc6c0c4b404a177a8850300b8a0",
      "patch": "@@ -3014,16 +3014,12 @@ type_align (struct type *type)\n     case TYPE_CODE_STRUCT:\n     case TYPE_CODE_UNION:\n       {\n-\tif (TYPE_NFIELDS (type) == 0)\n-\t  {\n-\t    /* An empty struct has alignment 1.  */\n-\t    align = 1;\n-\t    break;\n-\t  }\n+\tint number_of_non_static_fields = 0;\n \tfor (unsigned i = 0; i < TYPE_NFIELDS (type); ++i)\n \t  {\n \t    if (!field_is_static (&TYPE_FIELD (type, i)))\n \t      {\n+\t\tnumber_of_non_static_fields++;\n \t\tULONGEST f_align = type_align (TYPE_FIELD_TYPE (type, i));\n \t\tif (f_align == 0)\n \t\t  {\n@@ -3035,6 +3031,10 @@ type_align (struct type *type)\n \t\t  align = f_align;\n \t      }\n \t  }\n+\t/* A struct with no fields, or with only static fields has an\n+\t   alignment of 1.  */\n+\tif (number_of_non_static_fields == 0)\n+\t  align = 1;\n       }\n       break;\n "
    },
    {
      "sha": "3b952b8d2fea7310ec5c23113d9aafd14f8cf821",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=41077b6625d16cc6c0c4b404a177a8850300b8a0",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/align.exp: Extend test to cover structures containing\n+\tonly static fields.\n+\n 2019-04-11  Tom de Vries  <tdevries@suse.de>\n \n \t* boards/cc-with-dwz-m.exp: New file."
    },
    {
      "sha": "e3ca0470e9461fc5934f66a9506ea5014ed01d6c",
      "filename": "gdb/testsuite/gdb.base/align.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 6,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/testsuite/gdb.base/align.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41077b6625d16cc6c0c4b404a177a8850300b8a0/gdb/testsuite/gdb.base/align.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/align.exp?ref=41077b6625d16cc6c0c4b404a177a8850300b8a0",
      "patch": "@@ -67,8 +67,10 @@ proc prepare_test_source_file { lang } {\n     puts -nonewline $outfile \"#define DEF(T,U) struct align_pair_ ## T ## _x_ ## U \"\n     puts $outfile \"{ T one; U two; }\"\n     if { $lang == \"c++\" } {\n-\tputs -nonewline $outfile \"#define DEF_WITH_STATIC(T,U) struct align_pair_static_ ## T ## _x_ ## U \"\n+\tputs -nonewline $outfile \"#define DEF_WITH_1_STATIC(T,U) struct align_pair_static_ ## T ## _x_ ## U \"\n \tputs $outfile \"{ static T one; U two; }\"\n+\tputs -nonewline $outfile \"#define DEF_WITH_2_STATIC(T,U) struct align_pair_static_ ## T ## _x_static_ ## U \"\n+\tputs $outfile \"{ static T one; static U two; }\"\n     }\n     if { $lang == \"c\" } {\n \tputs $outfile \"unsigned a_void = ${align_func} (void);\"\n@@ -99,11 +101,17 @@ proc prepare_test_source_file { lang } {\n \t    puts $outfile \"  = ${align_func} (struct align_pair_${joined});\"\n \n \t    if { $lang == \"c++\" } {\n-\t\tputs $outfile \"DEF_WITH_STATIC ($utype, $uinner);\"\n-\t\tset joined \"${utype}_x_${uinner}\"\n-\t\tputs $outfile \"struct align_pair_static_$joined item_static_${joined};\"\n-\t\tputs $outfile \"unsigned a_static_${joined}\"\n-\t\tputs $outfile \"  = ${align_func} (struct align_pair_static_${joined});\"\n+\t\tputs $outfile \"DEF_WITH_1_STATIC ($utype, $uinner);\"\n+\t\tset joined \"static_${utype}_x_${uinner}\"\n+\t\tputs $outfile \"struct align_pair_$joined item_${joined};\"\n+\t\tputs $outfile \"unsigned a_${joined}\"\n+\t\tputs $outfile \"  = ${align_func} (struct align_pair_${joined});\"\n+\n+\t\tputs $outfile \"DEF_WITH_2_STATIC ($utype, $uinner);\"\n+\t\tset joined \"static_${utype}_x_static_${uinner}\"\n+\t\tputs $outfile \"struct align_pair_$joined item_${joined};\"\n+\t\tputs $outfile \"unsigned a_${joined}\"\n+\t\tputs $outfile \"  = ${align_func} (struct align_pair_${joined});\"\n \t    }\n \t}\n     }\n@@ -160,6 +168,10 @@ proc run_alignment_test { lang } {\n \t\tset expected [get_integer_valueof a_static_${utype}_x_${uinner} 0]\n \t\tgdb_test \"print ${align_func}(struct align_pair_static_${utype}_x_${uinner})\" \\\n \t\t    \" = $expected\"\n+\n+\t\tset expected [get_integer_valueof a_static_${utype}_x_static_${uinner} 0]\n+\t\tgdb_test \"print ${align_func}(struct align_pair_static_${utype}_x_static_${uinner})\" \\\n+\t\t    \" = $expected\"\n \t    }\n \t}\n     }"
    }
  ]
}