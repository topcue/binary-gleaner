{
  "sha": "59c35742fb785b1e454f45c2ace663000bf34f4c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTljMzU3NDJmYjc4NWIxZTQ1NGY0NWMyYWNlNjYzMDAwYmYzNGY0Yw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-07-09T20:38:59Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-31T23:02:59Z"
    },
    "message": "gdb/fortran: Add new 'info modules' command\n\nAdd a new command 'info modules' that lists all of the modules GDB\nknows about from the debug information.\n\nA module is a debugging entity in the DWARF defined with\nDW_TAG_module, currently Fortran is known to use this tag for its\nmodules.  I'm not aware of any other language that currently makes use\nof DW_TAG_module.\n\nThe output style is similar to the 'info type' output:\n\n    (gdb) info modules\n    All defined modules:\n\n    File info-types.f90:\n    16:     mod1\n    24:     mod2\n    (gdb)\n\nWhere the user is told the file the module is defined in and, on the\nleft hand side, the line number at which the module is defined along\nwith the name of the module.\n\nThis patch is a new implementation of an idea originally worked on by\nMark O'Connor, Chris January, David Lecomber, and Xavier Oro from ARM.\n\ngdb/ChangeLog:\n\n\t* dwarf2read.c (dw2_symtab_iter_next): Handle MODULE_DOMAIN.\n\t(dw2_expand_marked_cus): Handle MODULES_DOMAIN.\n\t(dw2_debug_names_iterator::next): Handle MODULE_DOMAIN and\n\tMODULES_DOMAIN.\n\t(scan_partial_symbols): Only create partial module symbols for non\n\tdeclarations.\n\t* psymtab.c (recursively_search_psymtabs): Handle MODULE_DOMAIN\n\tand MODULES_DOMAIN.\n\t* symtab.c (search_domain_name): Likewise.\n\t(search_symbols): Likewise.\n\t(print_symbol_info): Likewise.\n\t(symtab_symbol_info): Likewise.\n\t(info_modules_command): New function.\n\t(_initialize_symtab): Register 'info modules' command.\n\t* symtab.h (enum search_domain): Add MODULES_DOMAIN.\n\t* NEWS: Mention new 'info modules' command.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Symbols): Document new 'info modules' command.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/info-modules.exp: New file.\n\t* gdb.fortran/info-types.exp: Build with new file.\n\t* gdb.fortran/info-types.f90: Include and use new module.\n\t* gdb.fortran/info-types-2.f90: New file.\n\nChange-Id: I2b781dd5a06bcad04620ccdc45f01a0f711adfad",
    "tree": {
      "sha": "572be0b410f0065fd9bf704b320e0bd7388b6a87",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/572be0b410f0065fd9bf704b320e0bd7388b6a87"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/59c35742fb785b1e454f45c2ace663000bf34f4c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/59c35742fb785b1e454f45c2ace663000bf34f4c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/59c35742fb785b1e454f45c2ace663000bf34f4c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/59c35742fb785b1e454f45c2ace663000bf34f4c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aed61d02fb112ac2b94f67df3ed24ed29dcf911e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aed61d02fb112ac2b94f67df3ed24ed29dcf911e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/aed61d02fb112ac2b94f67df3ed24ed29dcf911e"
    }
  ],
  "stats": {
    "total": 210,
    "additions": 201,
    "deletions": 9
  },
  "files": [
    {
      "sha": "6dca96555ad3cdcb3a9c29c264420469fe440de8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -1,3 +1,22 @@\n+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf2read.c (dw2_symtab_iter_next): Handle MODULE_DOMAIN.\n+\t(dw2_expand_marked_cus): Handle MODULES_DOMAIN.\n+\t(dw2_debug_names_iterator::next): Handle MODULE_DOMAIN and\n+\tMODULES_DOMAIN.\n+\t(scan_partial_symbols): Only create partial module symbols for non\n+\tdeclarations.\n+\t* psymtab.c (recursively_search_psymtabs): Handle MODULE_DOMAIN\n+\tand MODULES_DOMAIN.\n+\t* symtab.c (search_domain_name): Likewise.\n+\t(search_symbols): Likewise.\n+\t(print_symbol_info): Likewise.\n+\t(symtab_symbol_info): Likewise.\n+\t(info_modules_command): New function.\n+\t(_initialize_symtab): Register 'info modules' command.\n+\t* symtab.h (enum search_domain): Add MODULES_DOMAIN.\n+\t* NEWS: Mention new 'info modules' command.\n+\n 2019-10-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* NEWS: Mention $_gdb_setting, $_gdb_setting_str, $_gdb_maint_setting"
    },
    {
      "sha": "d46f7094d406729654a37e300ee82232d41d66b4",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -159,6 +159,10 @@ show print frame-info\n   'frame', 'stepi'.  The python frame filtering also respect this setting.\n   The 'backtrace' '-frame-info' option can override this global setting.\n \n+info modules [-q] [REGEXP]\n+  Return a list of Fortran modules matching REGEXP, or all modules if\n+  no REGEXP is given.\n+\n * Changed commands\n \n help"
    },
    {
      "sha": "52497a17725f6c8beff74449a68d0e3d104ac208",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -1,3 +1,7 @@\n+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.texinfo (Symbols): Document new 'info modules' command.\n+\n 2019-10-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.texinfo (Convenience Funs): Document the new"
    },
    {
      "sha": "ee06df2bb2c7b45966086888756b92af93d42c1f",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -18886,6 +18886,16 @@ If both @var{regexp} and @var{type_regexp} are provided, an argument\n is printed only if its name matches @var{regexp} and its type matches\n @var{type_regexp}.\n \n+@kindex info modules\n+@cindex modules\n+@item info modules @r{[}-q@r{]} @r{[}@var{regexp}@r{]}\n+List all Fortran modules in the program, or all modules matching the\n+optional regular expression @var{regexp}.\n+\n+The optional flag @samp{-q}, which stands for @samp{quiet}, disables\n+printing header information and messages explaining why no modules\n+have been printed.\n+\n @kindex info classes\n @cindex Objective-C, classes and selectors\n @item info classes"
    },
    {
      "sha": "0a7a0334202429c70328763b83ef9323f4c45ea9",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 27,
      "deletions": 1,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -4042,6 +4042,10 @@ dw2_symtab_iter_next (struct dw2_symtab_iterator *iter)\n \t      if (symbol_kind != GDB_INDEX_SYMBOL_KIND_OTHER)\n \t\tcontinue;\n \t      break;\n+\t    case MODULE_DOMAIN:\n+\t      if (symbol_kind != GDB_INDEX_SYMBOL_KIND_OTHER)\n+\t\tcontinue;\n+\t      break;\n \t    default:\n \t      break;\n \t    }\n@@ -5064,6 +5068,10 @@ dw2_expand_marked_cus\n \t      if (symbol_kind != GDB_INDEX_SYMBOL_KIND_TYPE)\n \t\tcontinue;\n \t      break;\n+\t    case MODULES_DOMAIN:\n+\t      if (symbol_kind != GDB_INDEX_SYMBOL_KIND_OTHER)\n+\t\tcontinue;\n+\t      break;\n \t    default:\n \t      break;\n \t    }\n@@ -5970,6 +5978,15 @@ dw2_debug_names_iterator::next ()\n \t  goto again;\n \t}\n       break;\n+    case MODULE_DOMAIN:\n+      switch (indexval.dwarf_tag)\n+\t{\n+\tcase DW_TAG_module:\n+\t  break;\n+\tdefault:\n+\t  goto again;\n+\t}\n+      break;\n     default:\n       break;\n     }\n@@ -6006,6 +6023,14 @@ dw2_debug_names_iterator::next ()\n \t  goto again;\n \t}\n       break;\n+    case MODULES_DOMAIN:\n+      switch (indexval.dwarf_tag)\n+\t{\n+\tcase DW_TAG_module:\n+\t  break;\n+\tdefault:\n+\t  goto again;\n+\t}\n     default:\n       break;\n     }\n@@ -8733,7 +8758,8 @@ scan_partial_symbols (struct partial_die_info *first_die, CORE_ADDR *lowpc,\n \t      add_partial_namespace (pdi, lowpc, highpc, set_addrmap, cu);\n \t      break;\n \t    case DW_TAG_module:\n-\t      add_partial_module (pdi, lowpc, highpc, set_addrmap, cu);\n+\t      if (!pdi->is_declaration)\n+\t\tadd_partial_module (pdi, lowpc, highpc, set_addrmap, cu);\n \t      break;\n \t    case DW_TAG_imported_unit:\n \t      {"
    },
    {
      "sha": "df10a756fd180b56278b8cf10af726d90635215f",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -1272,6 +1272,8 @@ recursively_search_psymtabs\n \t  QUIT;\n \n \t  if ((domain == ALL_DOMAIN\n+\t       || (domain == MODULES_DOMAIN\n+\t\t   && (*psym)->domain == MODULE_DOMAIN)\n \t       || (domain == VARIABLES_DOMAIN\n \t\t   && (*psym)->aclass != LOC_TYPEDEF\n \t\t   && (*psym)->aclass != LOC_BLOCK)"
    },
    {
      "sha": "4c14edae177668c41a159a97dbd1629136774214",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 33,
      "deletions": 4,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -299,6 +299,7 @@ search_domain_name (enum search_domain e)\n     case VARIABLES_DOMAIN: return \"VARIABLES_DOMAIN\";\n     case FUNCTIONS_DOMAIN: return \"FUNCTIONS_DOMAIN\";\n     case TYPES_DOMAIN: return \"TYPES_DOMAIN\";\n+    case MODULES_DOMAIN: return \"MODULES_DOMAIN\";\n     case ALL_DOMAIN: return \"ALL_DOMAIN\";\n     default: gdb_assert_not_reached (\"bad search_domain\");\n     }\n@@ -4482,7 +4483,7 @@ search_symbols (const char *regexp, enum search_domain kind,\n   gdb::optional<compiled_regex> preg;\n   gdb::optional<compiled_regex> treg;\n \n-  gdb_assert (kind <= TYPES_DOMAIN);\n+  gdb_assert (kind != ALL_DOMAIN);\n \n   ourtype = types[kind];\n   ourtype2 = types2[kind];\n@@ -4656,7 +4657,10 @@ search_symbols (const char *regexp, enum search_domain kind,\n \t\t\t\t\t\t\t\t     sym)))\n \t\t\t      || (kind == TYPES_DOMAIN\n \t\t\t\t  && SYMBOL_CLASS (sym) == LOC_TYPEDEF\n-\t\t\t\t  && SYMBOL_DOMAIN (sym) != MODULE_DOMAIN))))\n+\t\t\t\t  && SYMBOL_DOMAIN (sym) != MODULE_DOMAIN)\n+\t\t\t      || (kind == MODULES_DOMAIN\n+\t\t\t\t  && SYMBOL_DOMAIN (sym) == MODULE_DOMAIN\n+\t\t\t\t  && SYMBOL_LINE (sym) != 0))))\n \t\t    {\n \t\t      /* match */\n \t\t      result.emplace_back (i, sym);\n@@ -4787,6 +4791,11 @@ print_symbol_info (enum search_domain kind,\n \n       printf_filtered (\";\\n\");\n     }\n+  /* Printing of modules is currently done here, maybe at some future\n+     point we might want a language specific method to print the module\n+     symbol so that we can customise the output more.  */\n+  else if (kind == MODULES_DOMAIN)\n+    printf_filtered (\"%s\\n\", SYMBOL_PRINT_NAME (sym));\n }\n \n /* This help function for symtab_symbol_info() prints information\n@@ -4827,11 +4836,11 @@ symtab_symbol_info (bool quiet, bool exclude_minsyms,\n \t\t    const char *t_regexp, int from_tty)\n {\n   static const char * const classnames[] =\n-    {\"variable\", \"function\", \"type\"};\n+    {\"variable\", \"function\", \"type\", \"module\"};\n   const char *last_filename = \"\";\n   int first = 1;\n \n-  gdb_assert (kind <= TYPES_DOMAIN);\n+  gdb_assert (kind != ALL_DOMAIN);\n \n   if (regexp != nullptr && *regexp == '\\0')\n     regexp = nullptr;\n@@ -5050,6 +5059,22 @@ info_types_command_completer (struct cmd_list_element *ignore,\n   symbol_completer (ignore, tracker, text, word);\n }\n \n+/* Implement the 'info modules' command.  */\n+\n+static void\n+info_modules_command (const char *args, int from_tty)\n+{\n+  info_types_options opts;\n+\n+  auto grp = make_info_types_options_def_group (&opts);\n+  gdb::option::process_options\n+    (&args, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_OPERAND, grp);\n+  if (args != nullptr && *args == '\\0')\n+    args = nullptr;\n+  symtab_symbol_info (opts.quiet, true, args, MODULES_DOMAIN, NULL,\n+\t\t      from_tty);\n+}\n+\n /* Breakpoint all functions matching regular expression.  */\n \n void\n@@ -6373,6 +6398,10 @@ Options:\\n\\\n   c = add_info (\"sources\", info_sources_command, info_sources_help.c_str ());\n   set_cmd_completer_handle_brkchars (c, info_sources_command_completer);\n \n+  c = add_info (\"modules\", info_modules_command,\n+\t\t_(\"All module names, or those matching REGEXP.\"));\n+  set_cmd_completer_handle_brkchars (c, info_types_command_completer);\n+\n   add_com (\"rbreak\", class_breakpoint, rbreak_command,\n \t   _(\"Set a breakpoint for all functions matching REGEXP.\"));\n "
    },
    {
      "sha": "72d1c7ff84854b3ae3486a3626bc1259b810dd09",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -831,8 +831,11 @@ enum search_domain\n   /* All defined types */\n   TYPES_DOMAIN = 2,\n \n+  /* All modules.  */\n+  MODULES_DOMAIN = 3,\n+\n   /* Any type.  */\n-  ALL_DOMAIN = 3\n+  ALL_DOMAIN = 4\n };\n \n extern const char *search_domain_name (enum search_domain);"
    },
    {
      "sha": "6514c0764dc85f534b48c9f73fb9623d757e6157",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -1,3 +1,10 @@\n+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/info-modules.exp: New file.\n+\t* gdb.fortran/info-types.exp: Build with new file.\n+\t* gdb.fortran/info-types.f90: Include and use new module.\n+\t* gdb.fortran/info-types-2.f90: New file.\n+\n 2019-10-31  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.base/setshow.exp: Test $_gdb_setting and $_gdb_setting_str."
    },
    {
      "sha": "f961d28b000e4e3b8a0af64dfd49170ac3678483",
      "filename": "gdb/testsuite/gdb.fortran/info-modules.exp",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-modules.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-modules.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/info-modules.exp?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -0,0 +1,66 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This file tests 'info modules'.\n+\n+load_lib \"fortran.exp\"\n+\n+if { [skip_fortran_tests] } { continue }\n+\n+standard_testfile info-types.f90 info-types-2.f90\n+\n+if { [prepare_for_testing \"failed to prepare\" $testfile \\\n+\t  [list $srcfile $srcfile2] {debug f90}] } {\n+    return -1\n+}\n+\n+if { ![runto MAIN__] } {\n+    perror \"Could not run to breakpoint `MAIN__'.\"\n+    continue\n+}\n+\n+gdb_test \"info modules\" \\\n+    [multi_line \\\n+\t \"All defined modules:\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile2}:\" \\\n+\t \"18:\\[\\t \\]+mod2\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile}:\" \\\n+\t \"16:\\[\\t \\]+mod1\" ]\n+\n+gdb_test \"info modules 1\" \\\n+    [multi_line \\\n+\t \"All modules matching regular expression \\\"1\\\":\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile}:\" \\\n+\t \"16:\\[\\t \\]+mod1\" ]\n+\n+gdb_test \"info modules 2\" \\\n+    [multi_line \\\n+\t \"All modules matching regular expression \\\"2\\\":\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile2}:\" \\\n+\t \"18:\\[\\t \\]+mod2\" ]\n+\n+gdb_test \"info modules mod\" \\\n+    [multi_line \\\n+\t \"All modules matching regular expression \\\"mod\\\":\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile2}:\" \\\n+\t \"18:\\[\\t \\]+mod2\" \\\n+\t \"\" \\\n+\t \"File .*${srcfile}:\" \\\n+\t \"16:\\[\\t \\]+mod1\" ]"
    },
    {
      "sha": "a4044184233ce346b7ab15d6c7eee759dbdcd594",
      "filename": "gdb/testsuite/gdb.fortran/info-types-2.f90",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-types-2.f90",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-types-2.f90",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/info-types-2.f90?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -0,0 +1,20 @@\n+! Copyright 2019 Free Software Foundation, Inc.\n+!\n+! This program is free software; you can redistribute it and/or modify\n+! it under the terms of the GNU General Public License as published by\n+! the Free Software Foundation; either version 2 of the License, or\n+! (at your option) any later version.\n+!\n+! This program is distributed in the hope that it will be useful,\n+! but WITHOUT ANY WARRANTY; without even the implied warranty of\n+! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+! GNU General Public License for more details.\n+!\n+! You should have received a copy of the GNU General Public License\n+! along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+! Comment just to change the line number on which\n+! mod2 is defined.\n+module mod2\n+  integer :: mod2_var_1 = 123\n+end module mod2"
    },
    {
      "sha": "954e083e4069efaaf8293d7269cc999880c4f982",
      "filename": "gdb/testsuite/gdb.fortran/info-types.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-types.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-types.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/info-types.exp?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -19,9 +19,10 @@ load_lib \"fortran.exp\"\n \n if { [skip_fortran_tests] } { continue }\n \n-standard_testfile .f90\n+standard_testfile info-types.f90 info-types-2.f90\n \n-if { [prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug f90}] } {\n+if { [prepare_for_testing \"failed to prepare\" $testfile \\\n+\t  [list $srcfile2 $srcfile] {debug f90}] } {\n     return -1\n }\n "
    },
    {
      "sha": "ec52ef98efc9973ff3d03b60390bc9e355587200",
      "filename": "gdb/testsuite/gdb.fortran/info-types.f90",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-types.f90",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/59c35742fb785b1e454f45c2ace663000bf34f4c/gdb/testsuite/gdb.fortran/info-types.f90",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/info-types.f90?ref=59c35742fb785b1e454f45c2ace663000bf34f4c",
      "patch": "@@ -21,6 +21,7 @@ end module mod1\n \n program info_types_test\n   use mod1\n+  use mod2\n \n   type :: s1\n      integer :: a\n@@ -30,7 +31,7 @@ program info_types_test\n   type (s1) :: var_a\n   type (m1t1) :: var_b\n \n-  var_a%a = 1\n+  var_a%a = 1 + mod2_var_1\n   var_b%b = 2\n   l = .FALSE.\n end program info_types_test"
    }
  ]
}