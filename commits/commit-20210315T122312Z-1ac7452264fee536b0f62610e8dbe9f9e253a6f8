{
  "sha": "1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWFjNzQ1MjI2NGZlZTUzNmIwZjYyNjEwZThkYmU5ZjllMjUzYTZmOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T12:23:12Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T12:23:12Z"
    },
    "message": "Fix Ada assignment resolution\n\nThe expression rewrite missed an Ada resolution case.  GDB previously\nknew how to disambiguate the right hand side of an assignment, but now\nit does not.\n\nThis patch fixes the problem and adds the missing test case.\n\ngdb/ChangeLog\n2021-03-15  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-exp.y (exp1): Handle resolution of the right hand side of an\n\tassignment.\n\ngdb/testsuite/ChangeLog\n2021-03-15  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/enums_overload/enums_overload_main.adb: New file.\n\t* gdb.ada/enums_overload/enums_overload.ads: New file.\n\t* gdb.ada/enums_overload/enums_overload.adb: New file.\n\t* gdb.ada/enums_overload.exp: New file.",
    "tree": {
      "sha": "c300360bc3df87f909e9c5148e7bf41999406a52",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c300360bc3df87f909e9c5148e7bf41999406a52"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "207582c0758738447d2df8f778aeebf126c73b31",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/207582c0758738447d2df8f778aeebf126c73b31",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/207582c0758738447d2df8f778aeebf126c73b31"
    }
  ],
  "stats": {
    "total": 143,
    "additions": 142,
    "deletions": 1
  },
  "files": [
    {
      "sha": "ed4da7aae9314d92c7392ac3bfed432c66ae9a65",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-exp.y (exp1): Handle resolution of the right hand side of an\n+\tassignment.\n+\n 2021-03-15  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (ada_aggregate_operation::assign_aggregate): Return"
    },
    {
      "sha": "4300907685c91f970818a581892e710590ae5d92",
      "filename": "gdb/ada-exp.y",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/ada-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/ada-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.y?ref=1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
      "patch": "@@ -413,7 +413,17 @@ exp1\t:\texp\n \t|\texp1 ';' exp\n \t\t\t{ ada_wrap2<comma_operation> (); }\n \t| \tprimary ASSIGN exp   /* Extension for convenience */\n-\t\t\t{ ada_wrap2<ada_assign_operation> (); }\n+\t\t\t{\n+\t\t\t  operation_up rhs = pstate->pop ();\n+\t\t\t  operation_up lhs = ada_pop ();\n+\t\t\t  value *lhs_val\n+\t\t\t    = lhs->evaluate (nullptr, pstate->expout.get (),\n+\t\t\t\t\t     EVAL_AVOID_SIDE_EFFECTS);\n+\t\t\t  rhs = resolve (std::move (rhs), true,\n+\t\t\t\t\t value_type (lhs_val));\n+\t\t\t  pstate->push_new<ada_assign_operation>\n+\t\t\t    (std::move (lhs), std::move (rhs));\n+\t\t\t}\n \t;\n \n /* Expressions, not including the sequencing operator.  */"
    },
    {
      "sha": "7df84af72fcbb2d6ee23d582a2f9c6398ba39767",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/enums_overload/enums_overload_main.adb: New file.\n+\t* gdb.ada/enums_overload/enums_overload.ads: New file.\n+\t* gdb.ada/enums_overload/enums_overload.adb: New file.\n+\t* gdb.ada/enums_overload.exp: New file.\n+\n 2021-03-15  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/assign_arr/target_wrapper.ads (IArray, Put, Do_Nothing):"
    },
    {
      "sha": "165ee1e11478e36f6c737e8e217f874cf499cf78",
      "filename": "gdb/testsuite/gdb.ada/enums_overload.exp",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enums_overload.exp?ref=1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
      "patch": "@@ -0,0 +1,37 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+if { [skip_ada_tests] } { return -1 }\n+\n+standard_ada_testfile enums_overload_main\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug]] != \"\" } {\n+  return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+set bp_location [gdb_get_line_number \"STOP\" ${testdir}/enums_overload.adb]\n+runto \"enums_overload.adb:$bp_location\"\n+\n+gdb_test \"ptype x\" \"type = range red \\\\.\\\\. yellow\"\n+gdb_test \"print x := red\" \" = red\"\n+gdb_test \"print x\" \" = red\"\n+gdb_test \"print enums_overload.reddish'(red)\" \" = red\" \\\n+    \"function call disambiguates enum\"\n+gdb_test \"print y := red\" \" = red\"\n+gdb_test \"print y\" \" = red\""
    },
    {
      "sha": "a245d58b24da7f2d4e8b4c3876fc6f912d1b5524",
      "filename": "gdb/testsuite/gdb.ada/enums_overload/enums_overload.adb",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload/enums_overload.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload/enums_overload.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enums_overload/enums_overload.adb?ref=1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
      "patch": "@@ -0,0 +1,38 @@\n+--  Copyright 2021 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package body Enums_Overload is\n+\n+   subtype Reddish is Color range Red .. Yellow;\n+\n+   procedure Test_Enums_Overload is\n+      X: Reddish := Orange;\n+      Y: Traffic_Signal := Yellow;\n+   begin\n+      --gdb: next\n+      X := Orange;\n+      --gdb: next\n+      Y := Yellow;\n+      --gdb: ptype x range red .. yellow\n+      --gdb: set x := red\n+      --gdb: print x red\n+      --gdb: print enums_overload.reddish'(red) red\n+      --gdb: set y := red\n+      --gdb: print y red\n+      --gdb: cont\n+      null; -- STOP\n+   end Test_Enums_Overload;\n+\n+end Enums_Overload;"
    },
    {
      "sha": "f3158fa15092d3dafeab7f0c8a95dbd02c321d31",
      "filename": "gdb/testsuite/gdb.ada/enums_overload/enums_overload.ads",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload/enums_overload.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload/enums_overload.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enums_overload/enums_overload.ads?ref=1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
      "patch": "@@ -0,0 +1,24 @@\n+--  Copyright 2021 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package Enums_Overload is\n+\n+   type Color is (Red, Orange, Yellow, Green, Blue, Violet, Indigo);\n+\n+   type Traffic_Signal is (Green, Yellow, Red);\n+\n+   procedure Test_Enums_Overload;\n+\n+end Enums_Overload;"
    },
    {
      "sha": "954243337ec33a07cb302dc42dae3bdfb8a4d4be",
      "filename": "gdb/testsuite/gdb.ada/enums_overload/enums_overload_main.adb",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload/enums_overload_main.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ac7452264fee536b0f62610e8dbe9f9e253a6f8/gdb/testsuite/gdb.ada/enums_overload/enums_overload_main.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/enums_overload/enums_overload_main.adb?ref=1ac7452264fee536b0f62610e8dbe9f9e253a6f8",
      "patch": "@@ -0,0 +1,20 @@\n+--  Copyright 2021 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with Enums_Overload;\n+procedure Enums_Overload_Main is\n+begin\n+   Enums_Overload.Test_Enums_Overload;\n+end Enums_Overload_Main;"
    }
  ]
}