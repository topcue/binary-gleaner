{
  "sha": "f6480e70001df1c8151362cd4621578bcb293224",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjY0ODBlNzAwMDFkZjFjODE1MTM2MmNkNDYyMTU3OGJjYjI5MzIyNA==",
  "commit": {
    "author": {
      "name": "Maciej W. Rozycki",
      "email": "macro@wdc.com",
      "date": "2020-02-05T17:21:12Z"
    },
    "committer": {
      "name": "Maciej W. Rozycki",
      "email": "macro@wdc.com",
      "date": "2020-02-05T17:21:12Z"
    },
    "message": "RISC-V/Linux/native: Factor out target description determination\n\nIn preparation for RISC-V/Linux `gdbserver' support factor out parts of\nnative target description determination code that can be shared between\nthe programs.\n\n\tgdb/\n\t* nat/riscv-linux-tdesc.h: New file.\n\t* nat/riscv-linux-tdesc.c: New file, taking code from...\n\t* riscv-linux-nat.c (riscv_linux_nat_target::read_description):\n\t... here.\n\t* configure.nat <linux> <riscv*>: Add nat/riscv-linux-tdesc.o to\n\tNATDEPFILES.",
    "tree": {
      "sha": "00ede00c1e84b7f816bad6097978bfe407debff7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/00ede00c1e84b7f816bad6097978bfe407debff7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f6480e70001df1c8151362cd4621578bcb293224",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6480e70001df1c8151362cd4621578bcb293224",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f6480e70001df1c8151362cd4621578bcb293224",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6480e70001df1c8151362cd4621578bcb293224/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "af0ac53c4508aa1adf85d32191105f727144db1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af0ac53c4508aa1adf85d32191105f727144db1c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af0ac53c4508aa1adf85d32191105f727144db1c"
    }
  ],
  "stats": {
    "total": 173,
    "additions": 124,
    "deletions": 49
  },
  "files": [
    {
      "sha": "8ea4ea55f7ca87111ed051c9d3f81ad12470c57b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6480e70001df1c8151362cd4621578bcb293224/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6480e70001df1c8151362cd4621578bcb293224/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f6480e70001df1c8151362cd4621578bcb293224",
      "patch": "@@ -1,3 +1,12 @@\n+2020-02-05  Maciej W. Rozycki  <macro@wdc.com>\n+\n+\t* nat/riscv-linux-tdesc.h: New file.\n+\t* nat/riscv-linux-tdesc.c: New file, taking code from...\n+\t* riscv-linux-nat.c (riscv_linux_nat_target::read_description):\n+\t... here.\n+\t* configure.nat <linux> <riscv*>: Add nat/riscv-linux-tdesc.o to\n+\tNATDEPFILES.\n+\n 2020-02-04  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* remote-sim.c (sim_inferior_data::sim_inferior_data): Assert that"
    },
    {
      "sha": "3fc6f5cb4a2525e29879070e7aebbd365b48b356",
      "filename": "gdb/configure.nat",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6480e70001df1c8151362cd4621578bcb293224/gdb/configure.nat",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6480e70001df1c8151362cd4621578bcb293224/gdb/configure.nat",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.nat?ref=f6480e70001df1c8151362cd4621578bcb293224",
      "patch": "@@ -276,7 +276,8 @@ case ${gdb_host} in\n \t\t;;\n \t    riscv*)\n \t\t# Host: RISC-V, running Linux\n-\t\tNATDEPFILES=\"${NATDEPFILES} riscv-linux-nat.o\"\n+\t\tNATDEPFILES=\"${NATDEPFILES} riscv-linux-nat.o \\\n+\t\tnat/riscv-linux-tdesc.o\"\n \t\t;;\n \t    s390)\n \t\t# Host: S390, running Linux"
    },
    {
      "sha": "1b625cf38fc467032290b9462fb23225a0e73a23",
      "filename": "gdb/nat/riscv-linux-tdesc.c",
      "status": "added",
      "additions": 83,
      "deletions": 0,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6480e70001df1c8151362cd4621578bcb293224/gdb/nat/riscv-linux-tdesc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6480e70001df1c8151362cd4621578bcb293224/gdb/nat/riscv-linux-tdesc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/riscv-linux-tdesc.c?ref=f6480e70001df1c8151362cd4621578bcb293224",
      "patch": "@@ -0,0 +1,83 @@\n+/* GNU/Linux/RISC-V native target description support for GDB.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"gdbsupport/common-defs.h\"\n+\n+#include \"gdb_proc_service.h\"\n+#include \"arch/riscv.h\"\n+#include \"elf/common.h\"\n+#include \"nat/gdb_ptrace.h\"\n+#include \"nat/riscv-linux-tdesc.h\"\n+\n+#include <sys/uio.h>\n+\n+/* Work around glibc header breakage causing ELF_NFPREG not to be usable.  */\n+#ifndef NFPREG\n+# define NFPREG 33\n+#endif\n+\n+/* Determine XLEN and FLEN and return a corresponding target description.  */\n+\n+const struct target_desc *\n+riscv_linux_read_description (int tid)\n+{\n+  struct riscv_gdbarch_features features;\n+  elf_fpregset_t regs;\n+  int flen;\n+\n+  /* Figuring out xlen is easy.  */\n+  features.xlen = sizeof (elf_greg_t);\n+\n+  /* Start with no f-registers.  */\n+  features.flen = 0;\n+\n+  /* How much worth of f-registers can we fetch if any?  */\n+  for (flen = sizeof (regs.__f.__f[0]); ; flen *= 2)\n+    {\n+      size_t regset_size;\n+      struct iovec iov;\n+\n+      /* Regsets have a uniform slot size, so we count FSCR like\n+\t an FP data register.  */\n+      regset_size = ELF_NFPREG * flen;\n+      if (regset_size > sizeof (regs))\n+\tbreak;\n+\n+      iov.iov_base = &regs;\n+      iov.iov_len = regset_size;\n+      if (ptrace (PTRACE_GETREGSET, tid, NT_FPREGSET,\n+\t\t  (PTRACE_TYPE_ARG3) &iov) == -1)\n+\t{\n+\t  switch (errno)\n+\t    {\n+\t    case EINVAL:\n+\t      continue;\n+\t    case EIO:\n+\t      break;\n+\t    default:\n+\t      perror_with_name (_(\"Couldn't get registers\"));\n+\t      break;\n+\t    }\n+\t}\n+      else\n+\tfeatures.flen = flen;\n+      break;\n+    }\n+\n+  return riscv_create_target_description (features);\n+}"
    },
    {
      "sha": "9b57a9e99d5f2311f46c8ba1a685a6a5c77f184d",
      "filename": "gdb/nat/riscv-linux-tdesc.h",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6480e70001df1c8151362cd4621578bcb293224/gdb/nat/riscv-linux-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6480e70001df1c8151362cd4621578bcb293224/gdb/nat/riscv-linux-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/riscv-linux-tdesc.h?ref=f6480e70001df1c8151362cd4621578bcb293224",
      "patch": "@@ -0,0 +1,27 @@\n+/* GNU/Linux/RISC-V native target description support for GDB.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef NAT_RISCV_LINUX_TDESC_H\n+#define NAT_RISCV_LINUX_TDESC_H\n+\n+struct target_desc;\n+\n+/* Return a target description for the LWP identified by TID.  */\n+const struct target_desc *riscv_linux_read_description (int tid);\n+\n+#endif /* NAT_RISCV_LINUX_TDESC_H */"
    },
    {
      "sha": "2622f1b4399576c54b88da2ad79b693f662d5569",
      "filename": "gdb/riscv-linux-nat.c",
      "status": "modified",
      "additions": 3,
      "deletions": 48,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6480e70001df1c8151362cd4621578bcb293224/gdb/riscv-linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6480e70001df1c8151362cd4621578bcb293224/gdb/riscv-linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-linux-nat.c?ref=f6480e70001df1c8151362cd4621578bcb293224",
      "patch": "@@ -22,10 +22,11 @@\n #include \"linux-nat.h\"\n #include \"riscv-tdep.h\"\n #include \"inferior.h\"\n-#include \"target-descriptions.h\"\n \n #include \"elf/common.h\"\n \n+#include \"nat/riscv-linux-tdesc.h\"\n+\n #include <sys/ptrace.h>\n \n /* Work around glibc header breakage causing ELF_NFPREG not to be usable.  */\n@@ -200,53 +201,7 @@ fill_fpregset (const struct regcache *regcache, prfpregset_t *fpregs,\n const struct target_desc *\n riscv_linux_nat_target::read_description ()\n {\n-  struct riscv_gdbarch_features features;\n-  elf_fpregset_t regs;\n-  int flen;\n-  int tid;\n-\n-  /* Figuring out xlen is easy.  */\n-  features.xlen = sizeof (elf_greg_t);\n-\n-  tid = inferior_ptid.lwp ();\n-\n-  /* Start with no f-registers.  */\n-  features.flen = 0;\n-\n-  /* How much worth of f-registers can we fetch if any?  */\n-  for (flen = sizeof (regs.__f.__f[0]); ; flen *= 2)\n-    {\n-      size_t regset_size;\n-      struct iovec iov;\n-\n-      /* Regsets have a uniform slot size, so we count FSCR like\n-\t an FP data register.  */\n-      regset_size = ELF_NFPREG * flen;\n-      if (regset_size > sizeof (regs))\n-\tbreak;\n-\n-      iov.iov_base = &regs;\n-      iov.iov_len = regset_size;\n-      if (ptrace (PTRACE_GETREGSET, tid, NT_FPREGSET,\n-\t\t  (PTRACE_TYPE_ARG3) &iov) == -1)\n-\t{\n-\t  switch (errno)\n-\t    {\n-\t    case EINVAL:\n-\t      continue;\n-\t    case EIO:\n-\t      break;\n-\t    default:\n-\t      perror_with_name (_(\"Couldn't get registers\"));\n-\t      break;\n-\t    }\n-\t}\n-      else\n-\tfeatures.flen = flen;\n-      break;\n-    }\n-\n-  return riscv_create_target_description (features);\n+  return riscv_linux_read_description (inferior_ptid.lwp ());\n }\n \n /* Fetch REGNUM (or all registers if REGNUM == -1) from the target"
    }
  ]
}