{
  "sha": "eb53f10555eb56c43212659acbc2014f6d416a32",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWI1M2YxMDU1NWViNTZjNDMyMTI2NTlhY2JjMjAxNGY2ZDQxNmEzMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-17T17:47:50Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-17T17:58:56Z"
    },
    "message": "Use htab_up in target-descriptions.c\n\nThis changes target-descriptions.c to use htab_up rather than explicit\ncalls to htab_delete.\n\ngdb/ChangeLog\n2020-09-17  Tom Tromey  <tom@tromey.com>\n\n\t* target-descriptions.c (tdesc_use_registers): Use htab_up.",
    "tree": {
      "sha": "978642cd24d07fdfd5731959f279455bba904137",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/978642cd24d07fdfd5731959f279455bba904137"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eb53f10555eb56c43212659acbc2014f6d416a32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb53f10555eb56c43212659acbc2014f6d416a32",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eb53f10555eb56c43212659acbc2014f6d416a32",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb53f10555eb56c43212659acbc2014f6d416a32/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7a8a5d47c37832da7203f5c54d41623c2f065b22",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a8a5d47c37832da7203f5c54d41623c2f065b22",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7a8a5d47c37832da7203f5c54d41623c2f065b22"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 11,
    "deletions": 9
  },
  "files": [
    {
      "sha": "1d0c024335d1b0417a9b73c05cc24e1350abd3d3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb53f10555eb56c43212659acbc2014f6d416a32/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb53f10555eb56c43212659acbc2014f6d416a32/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=eb53f10555eb56c43212659acbc2014f6d416a32",
      "patch": "@@ -1,3 +1,7 @@\n+2020-09-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* target-descriptions.c (tdesc_use_registers): Use htab_up.\n+\n 2020-09-17  Tom Tromey  <tom@tromey.com>\n \n \t* linespec.c (class decode_compound_collector)"
    },
    {
      "sha": "91cbeb58b049333105fc2f933a473a63f56ae3d5",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 7,
      "deletions": 9,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb53f10555eb56c43212659acbc2014f6d416a32/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb53f10555eb56c43212659acbc2014f6d416a32/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=eb53f10555eb56c43212659acbc2014f6d416a32",
      "patch": "@@ -1108,7 +1108,6 @@ tdesc_use_registers (struct gdbarch *gdbarch,\n {\n   int num_regs = gdbarch_num_regs (gdbarch);\n   struct tdesc_arch_data *data;\n-  htab_t reg_hash;\n \n   /* We can't use the description for registers if it doesn't describe\n      any.  This function should only be called after validating\n@@ -1123,11 +1122,12 @@ tdesc_use_registers (struct gdbarch *gdbarch,\n   /* Build up a set of all registers, so that we can assign register\n      numbers where needed.  The hash table expands as necessary, so\n      the initial size is arbitrary.  */\n-  reg_hash = htab_create (37, htab_hash_pointer, htab_eq_pointer, NULL);\n+  htab_up reg_hash (htab_create (37, htab_hash_pointer, htab_eq_pointer,\n+\t\t\t\t NULL));\n   for (const tdesc_feature_up &feature : target_desc->features)\n     for (const tdesc_reg_up &reg : feature->registers)\n       {\n-\tvoid **slot = htab_find_slot (reg_hash, reg.get (), INSERT);\n+\tvoid **slot = htab_find_slot (reg_hash.get (), reg.get (), INSERT);\n \n \t*slot = reg.get ();\n \t/* Add reggroup if its new.  */\n@@ -1142,7 +1142,7 @@ tdesc_use_registers (struct gdbarch *gdbarch,\n      architecture.  */\n   for (const tdesc_arch_reg &arch_reg : data->arch_regs)\n     if (arch_reg.reg != NULL)\n-      htab_remove_elt (reg_hash, arch_reg.reg);\n+      htab_remove_elt (reg_hash.get (), arch_reg.reg);\n \n   /* Assign numbers to the remaining registers and add them to the\n      list of registers.  The new numbers are always above gdbarch_num_regs.\n@@ -1160,7 +1160,7 @@ tdesc_use_registers (struct gdbarch *gdbarch,\n     {\n       for (const tdesc_feature_up &feature : target_desc->features)\n \tfor (const tdesc_reg_up &reg : feature->registers)\n-\t  if (htab_find (reg_hash, reg.get ()) != NULL)\n+\t  if (htab_find (reg_hash.get (), reg.get ()) != NULL)\n \t    {\n \t      int regno = unk_reg_cb (gdbarch, feature.get (),\n \t\t\t\t      reg->name.c_str (), num_regs);\n@@ -1171,7 +1171,7 @@ tdesc_use_registers (struct gdbarch *gdbarch,\n \t\t    data->arch_regs.emplace_back (nullptr, nullptr);\n \t\t  data->arch_regs[regno] = tdesc_arch_reg (reg.get (), NULL);\n \t\t  num_regs = regno + 1;\n-\t\t  htab_remove_elt (reg_hash, reg.get ());\n+\t\t  htab_remove_elt (reg_hash.get (), reg.get ());\n \t\t}\n \t    }\n     }\n@@ -1183,14 +1183,12 @@ tdesc_use_registers (struct gdbarch *gdbarch,\n      unnumbered registers.  */\n   for (const tdesc_feature_up &feature : target_desc->features)\n     for (const tdesc_reg_up &reg : feature->registers)\n-      if (htab_find (reg_hash, reg.get ()) != NULL)\n+      if (htab_find (reg_hash.get (), reg.get ()) != NULL)\n \t{\n \t  data->arch_regs.emplace_back (reg.get (), nullptr);\n \t  num_regs++;\n \t}\n \n-  htab_delete (reg_hash);\n-\n   /* Update the architecture.  */\n   set_gdbarch_num_regs (gdbarch, num_regs);\n   set_gdbarch_register_name (gdbarch, tdesc_register_name);"
    }
  ]
}