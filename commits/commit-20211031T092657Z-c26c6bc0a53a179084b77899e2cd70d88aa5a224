{
  "sha": "c26c6bc0a53a179084b77899e2cd70d88aa5a224",
  "node_id": "C_kwDOANOeidoAKGMyNmM2YmMwYTUzYTE3OTA4NGI3Nzg5OWUyY2Q3MGQ4OGFhNWEyMjQ",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-10-31T09:25:22Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-10-31T09:26:57Z"
    },
    "message": "sim: ppc: use silent build rules here too\n\nThe ppc codebase is unique and doesn't leverage common/, so have to\nadd silent rules to it specifically.",
    "tree": {
      "sha": "e2595a4bbee596ea41f6996ead043889d907dafc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e2595a4bbee596ea41f6996ead043889d907dafc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c26c6bc0a53a179084b77899e2cd70d88aa5a224",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c26c6bc0a53a179084b77899e2cd70d88aa5a224",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c26c6bc0a53a179084b77899e2cd70d88aa5a224",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c26c6bc0a53a179084b77899e2cd70d88aa5a224/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5231e3f242247eff7866d344ac10eb66c5a30d56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5231e3f242247eff7866d344ac10eb66c5a30d56",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5231e3f242247eff7866d344ac10eb66c5a30d56"
    }
  ],
  "stats": {
    "total": 100,
    "additions": 50,
    "deletions": 50
  },
  "files": [
    {
      "sha": "8f4cd997d30311fe61be2ba360e324157db91e3b",
      "filename": "sim/ppc/Makefile.in",
      "status": "modified",
      "additions": 46,
      "deletions": 50,
      "changes": 96,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c26c6bc0a53a179084b77899e2cd70d88aa5a224/sim/ppc/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c26c6bc0a53a179084b77899e2cd70d88aa5a224/sim/ppc/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/Makefile.in?ref=c26c6bc0a53a179084b77899e2cd70d88aa5a224",
      "patch": "@@ -141,7 +141,7 @@ TARGETLIB\t= libsim.a\n all:\trun$(EXEEXT) $(TARGETLIB) $(GDB_OBJ)\n \n .c.o:\n-\t$(CC) -c $(STD_CFLAGS) $<\n+\t$(ECHO_CC) $(CC) -c $(STD_CFLAGS) $<\n \n \n # Headers outside sim/ppc.\n@@ -521,16 +521,15 @@ PACKAGE_OBJ = @sim_pk_obj@\n \n \n psim$(EXEEXT): $(TARGETLIB) main.o $(LIBIBERTY_LIB) $(BFD_LIB) $(LIBINTL_DEP)\n-\t$(CC) $(CFLAGS) $(LDFLAGS) -o psim$(EXEEXT) main.o $(TARGETLIB) $(BFD_LIB) $(ZLIB) $(LIBINTL) $(LIBIBERTY_LIB) $(LIBS)\n+\t$(ECHO_CCLD) $(CC) $(CFLAGS) $(LDFLAGS) -o psim$(EXEEXT) main.o $(TARGETLIB) $(BFD_LIB) $(ZLIB) $(LIBINTL) $(LIBIBERTY_LIB) $(LIBS)\n \n run$(EXEEXT): psim$(EXEEXT)\n-\trm -f $@\n-\tln $< $@ 2>/dev/null || $(LN_S) $< $@ 2>/dev/null || cp -p $< $@\n+\t$(SILENCE) rm -f $@\n+\t$(ECHO_GEN) ln $< $@ 2>/dev/null || $(LN_S) $< $@ 2>/dev/null || cp -p $< $@\n \n $(TARGETLIB): tmp-igen tmp-dgen tmp-hw tmp-pk tmp-defines $(LIB_OBJ) $(GDB_OBJ)\n-\trm -f $(TARGETLIB)\n-\t$(AR) $(AR_FLAGS) $(TARGETLIB) $(LIB_OBJ) $(GDB_OBJ)\n-\t$(RANLIB) $(TARGETLIB)\n+\t$(ECHO_AR) $(AR) $(AR_FLAGS) $(TARGETLIB) $(LIB_OBJ) $(GDB_OBJ)\n+\t$(ECHO_RANLIB) $(RANLIB) $(TARGETLIB)\n \n psim.o: psim.c $(CPU_H) $(IDECODE_H) $(OPTIONS_H) $(TREE_H) $(BFD_H)\n \n@@ -598,43 +597,40 @@ mon.o: mon.c $(BASICS_H) $(CPU_H) $(MON_H)\n # GDB after 4.16 expects the default_callback structure to be setup.\n # As a kludge, build the common stuff here for now.\n gentmap: $(srcdir)/../common/gentmap.c Makefile targ-vals.def\n-\t$(LINK_FOR_BUILD) -I. -I../common -I$(srcdir)/../common \\\n+\t$(ECHO_CCLD) $(LINK_FOR_BUILD) -I. -I../common -I$(srcdir)/../common \\\n \t\t$(srcdir)/../common/gentmap.c -DUSE_CONFIG_H\n \n targ-vals.def: $(srcdir)/../common/nltvals.def\n-\trm -f targ-vals.def tmp-def\n-\tcat $(srcdir)/../common/nltvals.def > tmp-vals.def\n+\t$(ECHO_GEN) cat $(srcdir)/../common/nltvals.def > tmp-vals.def\n \t$(SILENCE) $(SHELL) $(srcroot)/move-if-change tmp-vals.def targ-vals.def\n \n targ-vals.h: stamp-vals ; @true\n stamp-vals: Makefile gentmap $(srcroot)/move-if-change\n-\trm -f tmp-vals.h\n-\t./gentmap -h > tmp-vals.h\n+\t$(ECHO_GEN) ./gentmap -h > tmp-vals.h\n \t$(SILENCE) $(SHELL) $(srcroot)/move-if-change tmp-vals.h targ-vals.h\n-\t@echo stamp > stamp-vals\n+\t$(SILENCE) touch $@\n \n targ-map.c: stamp-map; @true\n stamp-map: Makefile gentmap $(srcroot)/move-if-change\n-\trm -f tmp-map.c\n-\t./gentmap -c > tmp-map.c\n+\t$(ECHO_GEN) ./gentmap -c > tmp-map.c\n \t$(SILENCE) $(SHELL) $(srcroot)/move-if-change tmp-map.c targ-map.c\n-\t@echo stamp > stamp-map\n+\t$(SILENCE) touch $@\n \n callback.o: $(srcdir)/../common/callback.c $(TARG_VALS_H) $(CONFIG_H)\n-\t$(CC) -c $(STD_CFLAGS) -DHAVE_CONFIG_H $(srcdir)/../common/callback.c\n+\t$(ECHO_CC) $(CC) -c $(STD_CFLAGS) -DHAVE_CONFIG_H $(srcdir)/../common/callback.c\n \n targ-map.o: targ-map.c $(ANSIDECL_H) $(GDB_CALLBACK_H) $(TARG_VALS_H)\n \n sim-fpu.o: $(srcdir)/../common/sim-fpu.c $(CONFIG_H)\n-\t$(CC) -c $(STD_CFLAGS) -DHAVE_CONFIG_H $(srcdir)/../common/sim-fpu.c \n+\t$(ECHO_CC) $(CC) -c $(STD_CFLAGS) -DHAVE_CONFIG_H $(srcdir)/../common/sim-fpu.c \n \n # Rebuild options whenever something changes so the date/time is up to date.\n options.o: options.c $(CPU_H) $(OPTIONS_H) $(DEFINES_H) $(BASICS_H) $(IDECODE_H) $(INLINE) $(LIB_SRC) $(BUILT_SRC) config.status Makefile\n-\t$(CC) -c $(STD_CFLAGS) '-DOPCODE_RULES=\"@sim_opcode@\"' '-DIGEN_FLAGS=\"$(IGEN_FLAGS)\"' '-DDGEN_FLAGS=\"$(DGEN_FLAGS)\"' $(srcdir)/options.c\n+\t$(ECHO_CC) $(CC) -c $(STD_CFLAGS) '-DOPCODE_RULES=\"@sim_opcode@\"' '-DIGEN_FLAGS=\"$(IGEN_FLAGS)\"' '-DDGEN_FLAGS=\"$(DGEN_FLAGS)\"' $(srcdir)/options.c\n \n defines.h: tmp-defines; @true\n tmp-defines: config.h Makefile\n-\tsed -n -e '/^#define HAVE_/s/ 1$$/\",/' -e '/^#define HAVE_/s//\"HAVE_/p' < config.h > tmp-defines.h\n+\t$(ECHO_GEN) sed -n -e '/^#define HAVE_/s/ 1$$/\",/' -e '/^#define HAVE_/s//\"HAVE_/p' < config.h > tmp-defines.h\n \t$(SILENCE) $(SHELL) $(srcroot)/move-if-change tmp-defines.h defines.h\n \t$(SILENCE) touch $@\n \n@@ -643,7 +639,7 @@ tmp-defines: config.h Makefile\n #\n \n tmp-dgen: dgen ppc-spr-table $(srcroot)/move-if-change\n-\t$(DGEN) $(DGEN_FLAGS) \\\n+\t$(ECHO_GEN) $(DGEN) $(DGEN_FLAGS) \\\n \t\t-r $(srcdir)/ppc-spr-table \\\n \t\t-n spreg.h -hp tmp-spreg.h \\\n \t\t-n spreg.c -p  tmp-spreg.c\n@@ -652,7 +648,7 @@ tmp-dgen: dgen ppc-spr-table $(srcroot)/move-if-change\n \t$(SILENCE) touch $@\n \n tmp-igen: igen $(srcdir)/ppc-instructions $(srcdir)/altivec.igen $(srcdir)/e500.igen $(IGEN_OPCODE_RULES) $(srcroot)/move-if-change tmp-ld-decode tmp-ld-cache tmp-ld-insn tmp-filter\n-\t$(IGEN) $(IGEN_FLAGS) \\\n+\t$(ECHO_GEN) $(IGEN) $(IGEN_FLAGS) \\\n \t\t-o $(srcdir)/$(IGEN_OPCODE_RULES) \\\n \t\t-I $(srcdir) -i $(srcdir)/ppc-instructions \\\n \t\t-n icache.h    -hc tmp-icache.h \\\n@@ -689,77 +685,77 @@ itable.h itable.c icache.h icache.c idecode.h idecode.c semantics.h semantics.c\n spreg.h spreg.c: tmp-dgen\n \n dgen: dgen.o table.o lf.o misc.o filter_host.o\n-\t$(LINK_FOR_BUILD) dgen.o table.o lf.o misc.o filter_host.o\n+\t$(ECHO_CCLD) $(LINK_FOR_BUILD) dgen.o table.o lf.o misc.o filter_host.o\n \n igen: igen.o table.o lf.o misc.o filter_host.o ld-decode.o ld-cache.o filter.o ld-insn.o gen-model.o gen-itable.o gen-icache.o gen-semantics.o gen-idecode.o gen-support.o\n-\t$(LINK_FOR_BUILD) igen.o table.o lf.o misc.o filter_host.o ld-decode.o ld-cache.o filter.o ld-insn.o gen-model.o gen-itable.o gen-icache.o gen-semantics.o gen-idecode.o gen-support.o\n+\t$(ECHO_CCLD) $(LINK_FOR_BUILD) igen.o table.o lf.o misc.o filter_host.o ld-decode.o ld-cache.o filter.o ld-insn.o gen-model.o gen-itable.o gen-icache.o gen-semantics.o gen-idecode.o gen-support.o\n \n filter_host.c: filter_filename.c\n-\tcat $(srcdir)/filter_filename.c > filter_host.c\n+\t$(ECHO_GEN) cat $(srcdir)/filter_filename.c > filter_host.c\n \n filter_host.o: filter_host.c $(CONFIG_H) $(FILTER_FILENAME_H)\n-\t$(COMPILE_FOR_BUILD) -c filter_host.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c filter_host.c\n \n table.o: table.c $(CONFIG_H) $(MISC_H) $(LF_H) $(TABLE_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/table.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/table.c\n \n lf.o: lf.c $(CONFIG_H) $(MISC_H) $(LF_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/lf.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/lf.c\n \n filter.o: filter.c $(CONFIG_H) $(MISC_H) $(FILTER_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/filter.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/filter.c\n tmp-filter: filter.c $(MISC_H) misc.o\n-\t$(LINK_FOR_BUILD) -DMAIN $(srcdir)/filter.c misc.o\n+\t$(ECHO_CCLD) $(LINK_FOR_BUILD) -DMAIN $(srcdir)/filter.c misc.o\n \n ld-decode.o: ld-decode.c $(MISC_H) $(LF_H) $(TABLE_H) $(LD_DECODE_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/ld-decode.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/ld-decode.c\n tmp-ld-decode: ld-decode.c misc.o lf.o table.o filter_host.o \n-\t$(LINK_FOR_BUILD) -DMAIN $(srcdir)/ld-decode.c misc.o lf.o table.o filter_host.o\n+\t$(ECHO_CCLD) $(LINK_FOR_BUILD) -DMAIN $(srcdir)/ld-decode.c misc.o lf.o table.o filter_host.o\n \n ld-cache.o: ld-cache.c $(MISC_H) $(LF_H) $(TABLE_H) $(LD_CACHE_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/ld-cache.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/ld-cache.c\n tmp-ld-cache: ld-cache.c misc.o lf.o table.o filter_host.o \n-\t$(LINK_FOR_BUILD) -DMAIN $(srcdir)/ld-cache.c misc.o lf.o table.o filter_host.o\n+\t$(ECHO_CCLD) $(LINK_FOR_BUILD) -DMAIN $(srcdir)/ld-cache.c misc.o lf.o table.o filter_host.o\n \n ld-insn.o: ld-insn.c $(MISC_H) $(LF_H) $(TABLE_H) $(FILTER_H) $(LD_DECODE_H) $(LD_CACHE_H) $(LD_INSN_H) $(IGEN_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/ld-insn.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/ld-insn.c\n tmp-ld-insn: ld-insn.c ld-cache.o misc.o lf.o table.o ld-decode.o filter_host.o filter.o\n-\t$(LINK_FOR_BUILD) -DMAIN $(srcdir)/ld-insn.c ld-cache.o misc.o lf.o table.o ld-decode.o filter_host.o filter.o\n+\t$(ECHO_CCLD) $(LINK_FOR_BUILD) -DMAIN $(srcdir)/ld-insn.c ld-cache.o misc.o lf.o table.o ld-decode.o filter_host.o filter.o\n \n gen-model.o: gen-model.c $(MISC_H) $(LF_H) $(TABLE_H) $(FILTER_H) $(LD_CACHE_H) $(LD_DECODE_H) $(LD_INSN_H) $(GEN_MODEL_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/gen-model.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/gen-model.c\n \n gen-itable.o: gen-itable.c $(MISC_H) $(LF_H) $(TABLE_H) $(FILTER_H) $(LD_CACHE_H) $(LD_DECODE_H) $(LD_INSN_H) $(IGEN_H) $(GEN_ITABLE_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/gen-itable.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/gen-itable.c\n \n gen-icache.o: gen-icache.c $(MISC_H) $(LF_H) $(TABLE_H) $(FILTER_H) $(LD_DECODE_H) $(LD_CACHE_H) $(LD_INSN_H) $(IGEN_H) $(GEN_SEMANTICS_H) $(GEN_IDECODE_H) $(GEN_ICACHE_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/gen-icache.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/gen-icache.c\n \n gen-semantics.o: gen-semantics.c $(MISC_H) $(LF_H) $(TABLE_H) $(FILTER_H) $(LD_DECODE_H) $(LD_CACHE_H) $(LD_INSN_H) $(IGEN_H) $(GEN_SEMANTICS_H) $(GEN_ICACHE_H) $(GEN_IDECODE_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/gen-semantics.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/gen-semantics.c\n \n gen-idecode.o: gen-idecode.c $(MISC_H) $(LF_H) $(TABLE_H) $(FILTER_H) $(LD_DECODE_H) $(LD_CACHE_H) $(LD_INSN_H) $(IGEN_H) $(GEN_IDECODE_H) $(GEN_ICACHE_H) $(GEN_SEMANTICS_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/gen-idecode.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/gen-idecode.c\n \n gen-support.o: gen-support.c $(MISC_H) $(LF_H) $(TABLE_H) $(FILTER_H) $(LD_DECODE_H) $(LD_CACHE_H) $(LD_INSN_H) $(IGEN_H) $(GEN_SEMANTICS_H) $(GEN_SUPPORT_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/gen-support.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/gen-support.c\n \n dgen.o: dgen.c $(CONFIG_H) $(MISC_H) $(LF_H) $(TABLE_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/dgen.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/dgen.c\n \n igen.o: igen.c $(MISC_H) $(LF_H) $(TABLE_H) $(CONFIG_H) $(FILTER_H) $(LD_CACHE_H) $(LD_DECODE_H) $(LD_INSN_H) $(IGEN_H) $(GEN_MODEL_H) $(GEN_ICACHE_H) $(GEN_ITABLE_H) $(GEN_IDECODE_H) $(GEN_SEMANTICS_H) $(GEN_SUPPORT_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/igen.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/igen.c\n \n misc.o: misc.c $(CONFIG_H) $(MISC_H)\n-\t$(COMPILE_FOR_BUILD) -c $(srcdir)/misc.c\n+\t$(ECHO_CC) $(COMPILE_FOR_BUILD) -c $(srcdir)/misc.c\n \n \n \n # real hardware\n hw.c hw.h: tmp-hw; @true\n tmp-hw: Makefile $(HW_SRC) $(srcroot)/move-if-change\n-\t# The first for loop is to remove duplicates.\n-\tf=\"\"; \\\n+\t$(ECHO_GEN)# The first for loop is to remove duplicates.\n+\t$(SILENCE) f=\"\"; \\\n \tfor i in $(HW_SRC) ; do \\\n \t  case \" $$f \" in \\\n \t    *\" $$i \"*) ;; \\\n@@ -771,7 +767,7 @@ tmp-hw: Makefile $(HW_SRC) $(srcroot)/move-if-change\n \t\t-e 's/^/extern const device_descriptor /' \\\n \t\t-e 's/$$/_device_descriptor\\[\\];/' \\\n \t\t> tmp-hw.h\n-\tf=\"\"; \\\n+\t$(SILENCE) f=\"\"; \\\n \tfor i in $(HW_SRC) ; do \\\n \t  case \" $$f \" in \\\n \t    *\" $$i \"*) ;; \\\n@@ -814,8 +810,8 @@ hw_vm.o: hw_vm.c $(DEVICE_TABLE_H) $(CPU_H)\n # real packages\n pk.h: tmp-pk; @true\n tmp-pk: Makefile $(PACKAGE_SRC) $(srcroot)/move-if-change\n-\t# The first for loop is to remove duplicates.\n-\tf=\"\"; \\\n+\t$(ECHO_GEN)# The first for loop is to remove duplicates.\n+\t$(SILENCE) f=\"\"; \\\n \tfor i in $(PACKAGE_SRC) ; do \\\n \t  case \" $$f \" in \\\n \t    *\" $$i \"*) ;; \\"
    },
    {
      "sha": "a1c1d56e8dc1761d8bdd5ea2567af7890e75dfea",
      "filename": "sim/ppc/dgen.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c26c6bc0a53a179084b77899e2cd70d88aa5a224/sim/ppc/dgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c26c6bc0a53a179084b77899e2cd70d88aa5a224/sim/ppc/dgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/dgen.c?ref=c26c6bc0a53a179084b77899e2cd70d88aa5a224",
      "patch": "@@ -286,7 +286,9 @@ main(int argc,\n \n \n   while ((ch = getopt(argc, argv, \"hLsn:r:p:\")) != -1) {\n+#if 0  /* For debugging.  */\n     fprintf(stderr, \"\\t-%c %s\\n\", ch, ( optarg ? optarg : \"\"));\n+#endif\n     switch(ch) {\n     case 's':\n       spreg_lookup_table = 0;"
    },
    {
      "sha": "6a6dbc30f3190302bf16ee0f274c6886e5cb36f2",
      "filename": "sim/ppc/igen.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c26c6bc0a53a179084b77899e2cd70d88aa5a224/sim/ppc/igen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c26c6bc0a53a179084b77899e2cd70d88aa5a224/sim/ppc/igen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/igen.c?ref=c26c6bc0a53a179084b77899e2cd70d88aa5a224",
      "patch": "@@ -393,7 +393,9 @@ main(int argc,\n   while ((ch = getopt(argc, argv,\n \t\t      \"F:EI:RSLJT:CB:H:N:o:k:i:n:hc:d:m:s:t:f:\"))\n \t != -1) {\n+#if 0  /* For debugging.  */\n     fprintf(stderr, \"\\t-%c %s\\n\", ch, (optarg ? optarg : \"\"));\n+#endif\n     switch(ch) {\n     case 'C':\n       code |= generate_with_icache;"
    }
  ]
}