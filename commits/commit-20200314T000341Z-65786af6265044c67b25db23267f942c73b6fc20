{
  "sha": "65786af6265044c67b25db23267f942c73b6fc20",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjU3ODZhZjYyNjUwNDRjNjdiMjVkYjIzMjY3Zjk0MmM3M2I2ZmMyMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:41Z"
    },
    "message": "Remove generic_val_print_flags\n\nThis remove generic_val_print_flags in favor of using the value-based\nAPI where possible.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* valprint.c (generic_val_print_flags): Remove.\n\t(generic_val_print, generic_value_print): Update.\n\t(val_print_type_code_flags): Add original_value parameter.",
    "tree": {
      "sha": "cc01c383bc9ac793d5e64da74740bc187a891242",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cc01c383bc9ac793d5e64da74740bc187a891242"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/65786af6265044c67b25db23267f942c73b6fc20",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65786af6265044c67b25db23267f942c73b6fc20",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/65786af6265044c67b25db23267f942c73b6fc20",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65786af6265044c67b25db23267f942c73b6fc20/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "40f3ce189e3c16398f2e56442e6d8db5573587ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40f3ce189e3c16398f2e56442e6d8db5573587ee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/40f3ce189e3c16398f2e56442e6d8db5573587ee"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 22,
    "deletions": 27
  },
  "files": [
    {
      "sha": "38e9fb7e4833c58249ef80fca3a9c25a74991b68",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65786af6265044c67b25db23267f942c73b6fc20/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65786af6265044c67b25db23267f942c73b6fc20/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=65786af6265044c67b25db23267f942c73b6fc20",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* valprint.c (generic_val_print_flags): Remove.\n+\t(generic_val_print, generic_value_print): Update.\n+\t(val_print_type_code_flags): Add original_value parameter.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (generic_val_print): Update."
    },
    {
      "sha": "499d03f16dcc6d7d711c0165d7bd38e969bacafd",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 16,
      "deletions": 27,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65786af6265044c67b25db23267f942c73b6fc20/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65786af6265044c67b25db23267f942c73b6fc20/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=65786af6265044c67b25db23267f942c73b6fc20",
      "patch": "@@ -88,7 +88,8 @@ static void set_input_radix_1 (int, unsigned);\n static void set_output_radix_1 (int, unsigned);\n \n static void val_print_type_code_flags (struct type *type,\n-\t\t\t\t       const gdb_byte *valaddr,\n+\t\t\t\t       struct value *original_value,\n+\t\t\t\t       int embedded_offset,\n \t\t\t\t       struct ui_file *stream);\n \n #define PRINT_MAX_DEFAULT 200\t/* Start print_max off at this value.  */\n@@ -730,26 +731,6 @@ generic_val_print_enum (struct type *type,\n   generic_val_print_enum_1 (type, val, stream);\n }\n \n-/* generic_val_print helper for TYPE_CODE_FLAGS.  */\n-\n-static void\n-generic_val_print_flags (struct type *type,\n-\t\t\t int embedded_offset, struct ui_file *stream,\n-\t\t\t struct value *original_value,\n-\t\t\t const struct value_print_options *options)\n-\n-{\n-  if (options->format)\n-    val_print_scalar_formatted (type, embedded_offset, original_value,\n-\t\t\t\toptions, 0, stream);\n-  else\n-    {\n-      const gdb_byte *valaddr = value_contents_for_printing (original_value);\n-\n-      val_print_type_code_flags (type, valaddr + embedded_offset, stream);\n-    }\n-}\n-\n /* generic_val_print helper for TYPE_CODE_FUNC and TYPE_CODE_METHOD.  */\n \n static void\n@@ -980,8 +961,12 @@ generic_val_print (struct type *type,\n       break;\n \n     case TYPE_CODE_FLAGS:\n-      generic_val_print_flags (type, embedded_offset, stream,\n-\t\t\t       original_value, options);\n+      if (options->format)\n+\tval_print_scalar_formatted (type, embedded_offset,\n+\t\t\t\t    original_value, options, 0, stream);\n+      else\n+\tval_print_type_code_flags (type, original_value, embedded_offset,\n+\t\t\t\t   stream);\n       break;\n \n     case TYPE_CODE_FUNC:\n@@ -1091,8 +1076,10 @@ generic_value_print (struct value *val, struct ui_file *stream, int recurse,\n       break;\n \n     case TYPE_CODE_FLAGS:\n-      generic_val_print_flags (type, 0, stream,\n-\t\t\t       val, options);\n+      if (options->format)\n+\tvalue_print_scalar_formatted (val, options, 0, stream);\n+      else\n+\tval_print_type_code_flags (type, val, 0, stream);\n       break;\n \n     case TYPE_CODE_FUNC:\n@@ -1411,9 +1398,11 @@ value_print (struct value *val, struct ui_file *stream,\n }\n \n static void\n-val_print_type_code_flags (struct type *type, const gdb_byte *valaddr,\n-\t\t\t   struct ui_file *stream)\n+val_print_type_code_flags (struct type *type, struct value *original_value,\n+\t\t\t   int embedded_offset, struct ui_file *stream)\n {\n+  const gdb_byte *valaddr = (value_contents_for_printing (original_value)\n+\t\t\t     + embedded_offset);\n   ULONGEST val = unpack_long (type, valaddr);\n   int field, nfields = TYPE_NFIELDS (type);\n   struct gdbarch *gdbarch = get_type_arch (type);"
    }
  ]
}