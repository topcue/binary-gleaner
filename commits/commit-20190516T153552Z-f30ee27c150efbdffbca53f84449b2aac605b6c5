{
  "sha": "f30ee27c150efbdffbca53f84449b2aac605b6c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjMwZWUyN2MxNTBlZmJkZmZiY2E1M2Y4NDQ0OWIyYWFjNjA1YjZjNQ==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-15T17:31:38Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:35:52Z"
    },
    "message": "[PATCH 15/57][Arm][GAS] Add support for MVE instructions: vcls, vclz and vfmas\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_mve_vfmas): New encoding function.\n\t(do_neon_cls): Change to support MVE variants.\n\t(do_neon_clz): Change to support MVE variants.\n\t(insns): Change to support MVE variants and add new.\n\t* testsuite/gas/arm/mve-vcls-bad.d: New test.\n\t* testsuite/gas/arm/mve-vcls-bad.l: New test.\n\t* testsuite/gas/arm/mve-vcls-bad.s: New test.\n\t* testsuite/gas/arm/mve-vclz-bad.d: New test.\n\t* testsuite/gas/arm/mve-vclz-bad.l: New test.\n\t* testsuite/gas/arm/mve-vclz-bad.s: New test.\n\t* testsuite/gas/arm/mve-vfmas-bad.d: New test.\n\t* testsuite/gas/arm/mve-vfmas-bad.l: New test.\n\t* testsuite/gas/arm/mve-vfmas-bad.s: New test.",
    "tree": {
      "sha": "fbb40c41acffa0790b447a61719cf2e6debf2236",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fbb40c41acffa0790b447a61719cf2e6debf2236"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f30ee27c150efbdffbca53f84449b2aac605b6c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f30ee27c150efbdffbca53f84449b2aac605b6c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f30ee27c150efbdffbca53f84449b2aac605b6c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f30ee27c150efbdffbca53f84449b2aac605b6c5/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5d281bf033bbf2018a30183c2009182d947d3dfd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d281bf033bbf2018a30183c2009182d947d3dfd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5d281bf033bbf2018a30183c2009182d947d3dfd"
    }
  ],
  "stats": {
    "total": 195,
    "additions": 191,
    "deletions": 4
  },
  "files": [
    {
      "sha": "1ac53fc189368553765dd80b835b8d49fabe00b7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -1,3 +1,19 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_mve_vfmas): New encoding function.\n+\t(do_neon_cls): Change to support MVE variants.\n+\t(do_neon_clz): Change to support MVE variants.\n+\t(insns): Change to support MVE variants and add new.\n+\t* testsuite/gas/arm/mve-vcls-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vcls-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vcls-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vclz-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vclz-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vclz-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vfmas-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vfmas-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vfmas-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (enum operand_parse_code): New operands."
    },
    {
      "sha": "504fe1d4bd9bf1b363a83664fb9dc9e74e47b368",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 47,
      "deletions": 4,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -15579,6 +15579,32 @@ do_mve_vcmp (void)\n   return;\n }\n \n+static void\n+do_mve_vfmas (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_QQR, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (3, rs, N_F_MVE | N_KEY, N_EQK, N_EQK);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  if (inst.operands[2].reg == REG_SP)\n+    as_tsktsk (MVE_BAD_SP);\n+  else if (inst.operands[2].reg == REG_PC)\n+    as_tsktsk (MVE_BAD_PC);\n+\n+  inst.instruction |= (et.size == 16) << 28;\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= LOW4 (inst.operands[1].reg) << 16;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= HI1 (inst.operands[1].reg) << 7;\n+  inst.instruction |= inst.operands[2].reg;\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vcmul (void)\n {\n@@ -19003,7 +19029,15 @@ do_neon_recip_est (void)\n static void\n do_neon_cls (void)\n {\n-  enum neon_shape rs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n+  if (check_simd_pred_availability (0, NEON_CHECK_ARCH | NEON_CHECK_CC))\n+    return;\n+\n+  enum neon_shape rs;\n+  if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+   rs = neon_select_shape (NS_QQ, NS_NULL);\n+  else\n+   rs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n+\n   struct neon_type_el et = neon_check_type (2, rs,\n     N_EQK, N_S8 | N_S16 | N_S32 | N_KEY);\n   neon_two_same (neon_quad (rs), 1, et.size);\n@@ -19012,7 +19046,15 @@ do_neon_cls (void)\n static void\n do_neon_clz (void)\n {\n-  enum neon_shape rs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n+  if (check_simd_pred_availability (0, NEON_CHECK_ARCH | NEON_CHECK_CC))\n+    return;\n+\n+  enum neon_shape rs;\n+  if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+   rs = neon_select_shape (NS_QQ, NS_NULL);\n+  else\n+   rs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n+\n   struct neon_type_el et = neon_check_type (2, rs,\n     N_EQK, N_I8 | N_I16 | N_I32 | N_KEY);\n   neon_two_same (neon_quad (rs), 1, et.size);\n@@ -23645,10 +23687,8 @@ static const struct asm_opcode insns[] =\n  NUF(vrsqrte,   1b30480, 2, (RNDQ, RNDQ),     neon_recip_est),\n  NUF(vrsqrteq,  1b30480, 2, (RNQ,  RNQ),      neon_recip_est),\n   /* VCLS. Types S8 S16 S32.  */\n- NUF(vcls,      1b00400, 2, (RNDQ, RNDQ),     neon_cls),\n  NUF(vclsq,     1b00400, 2, (RNQ,  RNQ),      neon_cls),\n   /* VCLZ. Types I8 I16 I32.  */\n- NUF(vclz,      1b00480, 2, (RNDQ, RNDQ),     neon_clz),\n  NUF(vclzq,     1b00480, 2, (RNQ,  RNQ),      neon_clz),\n   /* VCNT. Size 8.  */\n  NUF(vcnt,      1b00500, 2, (RNDQ, RNDQ),     neon_cnt),\n@@ -24182,6 +24222,7 @@ static const struct asm_opcode insns[] =\n #undef THUMB_VARIANT\n #define THUMB_VARIANT & mve_fp_ext\n  mToC(\"vcmul\", ee300e00,   4, (RMQ, RMQ, RMQ, EXPi),\t\t  mve_vcmul),\n+ mToC(\"vfmas\", ee311e40,   3, (RMQ, RMQ, RR),\t\t\t  mve_vfmas),\n \n #undef  ARM_VARIANT\n #define ARM_VARIANT  & fpu_vfp_ext_v1\n@@ -24237,6 +24278,8 @@ static const struct asm_opcode insns[] =\n  mnUF(vorr,      _vorr,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ_Ibig), neon_logic),\n  mnUF(vorn,      _vorn,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ_Ibig), neon_logic),\n  mnUF(veor,      _veor,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ),      neon_logic),\n+ MNUF(vcls,      1b00400,\t  2, (RNDQMQ, RNDQMQ),\t\t     neon_cls),\n+ MNUF(vclz,      1b00480,\t  2, (RNDQMQ, RNDQMQ),\t\t     neon_clz),\n \n #undef\tARM_VARIANT\n #define ARM_VARIANT & arm_ext_v8_3"
    },
    {
      "sha": "0cfdabd7a5f8c3152cd704eb1a68dfda40bed56c",
      "filename": "gas/testsuite/gas/arm/mve-vcls-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vcls-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vcls-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcls-bad.d?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VCLS instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vcls-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "c58d34f6cf1a95e6b4f37ff410b647ae095c17c8",
      "filename": "gas/testsuite/gas/arm/mve-vcls-bad.l",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vcls-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vcls-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcls-bad.l?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,17 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vcls.f32 q0,q1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vcls.u32 q0,q1'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vcls.32 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vcls.i32 q0,q1'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vcls.s64 q0,q1'\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Error: syntax error -- `vclseq.s16 q0,q1'\n+[^:]*:18: Error: syntax error -- `vclseq.s16 q0,q1'\n+[^:]*:20: Error: syntax error -- `vclseq.s16 q0,q1'\n+[^:]*:21: Error: vector predicated instruction should be in VPT/VPST block -- `vclst.s16 q0,q1'\n+[^:]*:23: Error: instruction missing MVE vector predication code -- `vcls.s16 q0,q1'"
    },
    {
      "sha": "a3cb1be59d21c3cbd04a462496bd0c425aa97f77",
      "filename": "gas/testsuite/gas/arm/mve-vcls-bad.s",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vcls-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vcls-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vcls-bad.s?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,24 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vcls.s32 q0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vcls.f32 q0, q1\n+vcls.u32 q0, q1\n+vcls.32 q0, q1\n+vcls.i32 q0, q1\n+vcls.s64 q0, q1\n+cond\n+it eq\n+vclseq.s16 q0, q1\n+vclseq.s16 q0, q1\n+vpst\n+vclseq.s16 q0, q1\n+vclst.s16 q0, q1\n+vpst\n+vcls.s16 q0, q1\n+"
    },
    {
      "sha": "72f37da2c9ee0a3dd9c09cd0c45c8156ab98c1d8",
      "filename": "gas/testsuite/gas/arm/mve-vclz-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vclz-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vclz-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vclz-bad.d?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VCLZ instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vclz-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "aa68b0f5f7d8c4f3a409f2c37f1a44fc2a018142",
      "filename": "gas/testsuite/gas/arm/mve-vclz-bad.l",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vclz-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vclz-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vclz-bad.l?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,14 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vclz.f32 q0,q1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vclz.i64 q0,q1'\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Error: syntax error -- `vclzeq.i16 q0,q1'\n+[^:]*:15: Error: syntax error -- `vclzeq.i16 q0,q1'\n+[^:]*:17: Error: syntax error -- `vclzeq.i16 q0,q1'\n+[^:]*:18: Error: vector predicated instruction should be in VPT/VPST block -- `vclzt.i16 q0,q1'\n+[^:]*:20: Error: instruction missing MVE vector predication code -- `vclz.i16 q0,q1'"
    },
    {
      "sha": "088e831afa2ca6c3227e871c7c61f849704fe9cf",
      "filename": "gas/testsuite/gas/arm/mve-vclz-bad.s",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vclz-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vclz-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vclz-bad.s?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,20 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vclz.i32 q0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vclz.f32 q0, q1\n+vclz.i64 q0, q1\n+cond\n+it eq\n+vclzeq.i16 q0, q1\n+vclzeq.i16 q0, q1\n+vpst\n+vclzeq.i16 q0, q1\n+vclzt.i16 q0, q1\n+vpst\n+vclz.i16 q0, q1"
    },
    {
      "sha": "dd3510f87ec10d0db605a4b8f9b93943c4031146",
      "filename": "gas/testsuite/gas/arm/mve-vfmas-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vfmas-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vfmas-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vfmas-bad.d?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE FP VFMAS instructions \n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vfmas-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "6a9b1f4313e611d3f213023bb9d0745492e8ccc9",
      "filename": "gas/testsuite/gas/arm/mve-vfmas-bad.l",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vfmas-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vfmas-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vfmas-bad.l?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,16 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:11: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:12: Error: bad type in SIMD instruction -- `vfmas.i32 q0,q1,r2'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vfmas.f64 q0,q1,r2'\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Error: syntax error -- `vfmaseq.f32 q0,q1,r2'\n+[^:]*:17: Error: syntax error -- `vfmaseq.f32 q0,q1,r2'\n+[^:]*:19: Error: syntax error -- `vfmaseq.f32 q0,q1,r2'\n+[^:]*:20: Error: vector predicated instruction should be in VPT/VPST block -- `vfmast.f32 q0,q1,r2'\n+[^:]*:22: Error: instruction missing MVE vector predication code -- `vfmas.f32 q0,q1,r2'"
    },
    {
      "sha": "15f894a6f65f9473ed5e04efabf6908e6342cb68",
      "filename": "gas/testsuite/gas/arm/mve-vfmas-bad.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vfmas-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f30ee27c150efbdffbca53f84449b2aac605b6c5/gas/testsuite/gas/arm/mve-vfmas-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vfmas-bad.s?ref=f30ee27c150efbdffbca53f84449b2aac605b6c5",
      "patch": "@@ -0,0 +1,22 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vfmas.f32 q0, q1, r2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vfmas.f32 q0, q1, sp\n+vfmas.f32 q0, q1, pc\n+vfmas.i32 q0, q1, r2\n+vfmas.f64 q0, q1, r2\n+cond\n+it eq\n+vfmaseq.f32 q0, q1, r2\n+vfmaseq.f32 q0, q1, r2\n+vpst\n+vfmaseq.f32 q0, q1, r2\n+vfmast.f32 q0, q1, r2\n+vpst\n+vfmas.f32 q0, q1, r2"
    }
  ]
}