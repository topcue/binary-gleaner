{
  "sha": "37989733d8a8fe6ea13a82ec22272255e0702938",
  "node_id": "C_kwDOANOeidoAKDM3OTg5NzMzZDhhOGZlNmVhMTNhODJlYzIyMjcyMjU1ZTA3MDI5Mzg",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-11-11T20:22:50Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-11-15T19:00:01Z"
    },
    "message": "Extend the prologue analyzer to handle the bti instruction\n\nHandle the BTI instruction in the prologue analyzer. The patch handles all\nthe variations of the BTI instruction.",
    "tree": {
      "sha": "8d32012d17f3e3cbfa4b15a88eaa0e2f145716ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8d32012d17f3e3cbfa4b15a88eaa0e2f145716ab"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/37989733d8a8fe6ea13a82ec22272255e0702938",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37989733d8a8fe6ea13a82ec22272255e0702938",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/37989733d8a8fe6ea13a82ec22272255e0702938",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37989733d8a8fe6ea13a82ec22272255e0702938/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "345bd07cce33565f1cd66acabdaf387ca3a7ccb3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/345bd07cce33565f1cd66acabdaf387ca3a7ccb3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/345bd07cce33565f1cd66acabdaf387ca3a7ccb3"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 41,
    "deletions": 0
  },
  "files": [
    {
      "sha": "31d239bc34fb86ec999b5588a50a48cdc82f2dbb",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37989733d8a8fe6ea13a82ec22272255e0702938/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37989733d8a8fe6ea13a82ec22272255e0702938/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=37989733d8a8fe6ea13a82ec22272255e0702938",
      "patch": "@@ -516,6 +516,9 @@ aarch64_analyze_prologue (struct gdbarch *gdbarch,\n \t      /* Return addresses are not mangled.  */\n \t      ra_state_val = 0;\n \t    }\n+\t  else if (IS_BTI (insn))\n+\t    /* We don't need to do anything special for a BTI instruction.  */\n+\t    continue;\n \t  else\n \t    {\n \t      aarch64_debug_printf (\"prologue analysis gave up addr=%s\"\n@@ -870,6 +873,39 @@ aarch64_analyze_prologue_test (void)\n \t  SELF_CHECK (cache.saved_regs[regnum].is_value ());\n \t}\n     }\n+\n+  /* Test a prologue with a BTI instruction.  */\n+    {\n+      static const uint32_t insns[] = {\n+\t0xd503245f, /* bti */\n+\t0xa9bd7bfd, /* stp\tx29, x30, [sp, #-48]! */\n+\t0x910003fd, /* mov\tx29, sp */\n+\t0xf801c3f3, /* str\tx19, [sp, #28] */\n+\t0xb9401fa0, /* ldr\tx19, [x29, #28] */\n+      };\n+      instruction_reader_test reader (insns);\n+\n+      trad_frame_reset_saved_regs (gdbarch, cache.saved_regs);\n+      CORE_ADDR end = aarch64_analyze_prologue (gdbarch, 0, 128, &cache,\n+\t\t\t\t\t\treader);\n+\n+      SELF_CHECK (end == 4 * 4);\n+      SELF_CHECK (cache.framereg == AARCH64_FP_REGNUM);\n+      SELF_CHECK (cache.framesize == 48);\n+\n+      for (int i = 0; i < AARCH64_X_REGISTER_COUNT; i++)\n+\t{\n+\t  if (i == 19)\n+\t    SELF_CHECK (cache.saved_regs[i].addr () == -20);\n+\t  else if (i == AARCH64_FP_REGNUM)\n+\t    SELF_CHECK (cache.saved_regs[i].addr () == -48);\n+\t  else if (i == AARCH64_LR_REGNUM)\n+\t    SELF_CHECK (cache.saved_regs[i].addr () == -40);\n+\t  else\n+\t    SELF_CHECK (cache.saved_regs[i].is_realreg ()\n+\t\t\t&& cache.saved_regs[i].realreg () == i);\n+\t}\n+    }\n }\n } // namespace selftests\n #endif /* GDB_SELF_TEST */"
    },
    {
      "sha": "a05a6077922cd76dc2780c515b3a907fb4c09612",
      "filename": "gdb/arch/aarch64-insn.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37989733d8a8fe6ea13a82ec22272255e0702938/gdb/arch/aarch64-insn.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37989733d8a8fe6ea13a82ec22272255e0702938/gdb/arch/aarch64-insn.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/aarch64-insn.h?ref=37989733d8a8fe6ea13a82ec22272255e0702938",
      "patch": "@@ -42,6 +42,11 @@ extern bool aarch64_debug;\n #define sbits(obj,st,fn) \\\n   ((long) (bits(obj,st,fn) | ((long) bit(obj,fn) * ~ submask (fn - st))))\n \n+/* Prologue analyzer helper macros.  */\n+\n+/* Is the instruction \"bti\"?  */\n+#define IS_BTI(instruction) ((instruction & 0xffffff3f) == 0xd503241f)\n+\n /* List of opcodes that we need for building the jump pad and relocating\n    an instruction.  */\n "
    }
  ]
}