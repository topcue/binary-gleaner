{
  "sha": "c4375dd764b2e28b585048c55014d4d8fbe2e820",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzQzNzVkZDc2NGIyZTI4YjU4NTA0OGM1NTAxNGQ0ZDhmYmUyZTgyMA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-05-13T13:31:09Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-05-13T13:31:09Z"
    },
    "message": "Fix an infinite loop in the DWARF decoder when parsing a corrupt string table.\n\n\tPR 27861\n\t* dwarf.c (display_debug_str_offsets): Warn if the length field is\n\tlarger than the amount of data remaining in the section.",
    "tree": {
      "sha": "ab64600686b12d827b95e7afd58c92fb71399818",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ab64600686b12d827b95e7afd58c92fb71399818"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c4375dd764b2e28b585048c55014d4d8fbe2e820",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4375dd764b2e28b585048c55014d4d8fbe2e820",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c4375dd764b2e28b585048c55014d4d8fbe2e820",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4375dd764b2e28b585048c55014d4d8fbe2e820/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b96a1bcb81078d6443666a59d6a91368ac03767f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b96a1bcb81078d6443666a59d6a91368ac03767f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b96a1bcb81078d6443666a59d6a91368ac03767f"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 14,
    "deletions": 1
  },
  "files": [
    {
      "sha": "42efebf54e2d2dc847ce63d48892fe1d0be782eb",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4375dd764b2e28b585048c55014d4d8fbe2e820/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4375dd764b2e28b585048c55014d4d8fbe2e820/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c4375dd764b2e28b585048c55014d4d8fbe2e820",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 27861\n+\t* dwarf.c (display_debug_str_offsets): Warn if the length field is\n+\tlarger than the amount of data remaining in the section.\n+\n 2021-05-13  Alan Modra  <amodra@gmail.com>\n \n \tPR 27861"
    },
    {
      "sha": "20ffe4b52ccb0967ac8bb91292e4e3b75154d753",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4375dd764b2e28b585048c55014d4d8fbe2e820/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4375dd764b2e28b585048c55014d4d8fbe2e820/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=c4375dd764b2e28b585048c55014d4d8fbe2e820",
      "patch": "@@ -7509,6 +7509,13 @@ display_debug_str_offsets (struct dwarf_section *section,\n \t  printf (_(\"    Length: %#lx\\n\"), (unsigned long) length);\n \t  printf (_(\"    Version: %#lx\\n\"), (unsigned long) version);\n \t  printf (_(\"       Index   Offset [String]\\n\"));\n+\n+\t  if (entries_end > end)\n+\t    {\n+\t      warn (_(\"Length value (0x%s) > data remaining in the section (0x%lx)\\n\"),\n+\t\t    dwarf_vmatoa (\"x\", length), (long)(end - curr));\n+\t      entries_end = end;\n+\t    }\t  \n \t}\n \n       for (idx = 0; curr < entries_end; idx++)\n@@ -7520,7 +7527,7 @@ display_debug_str_offsets (struct dwarf_section *section,\n \t    /* Not enough space to read one entry_length, give up.  */\n \t    return 0;\n \n-\t  SAFE_BYTE_GET_AND_INC (offset, curr, entry_length, end);\n+\t  SAFE_BYTE_GET_AND_INC (offset, curr, entry_length, entries_end);\n \t  if (dwo)\n \t    string = (const unsigned char *)\n \t      fetch_indexed_string (idx, NULL, entry_length, dwo);"
    }
  ]
}