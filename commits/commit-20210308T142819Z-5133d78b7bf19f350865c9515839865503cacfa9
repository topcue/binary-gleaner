{
  "sha": "5133d78b7bf19f350865c9515839865503cacfa9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTEzM2Q3OGI3YmYxOWYzNTA4NjVjOTUxNTgzOTg2NTUwM2NhY2ZhOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:19Z"
    },
    "message": "Introduce sub_operation\n\nThis adds class sub_operation, which implements BINOP_SUB.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expop.h (class sub_operation): New.\n\t* eval.c (eval_op_sub): No longer static.  Remove \"op\" parameter.\n\t(evaluate_subexp_standard): Update.",
    "tree": {
      "sha": "4cf6cef44fb5d2c575f3862e1852bd438f18104d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4cf6cef44fb5d2c575f3862e1852bd438f18104d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5133d78b7bf19f350865c9515839865503cacfa9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5133d78b7bf19f350865c9515839865503cacfa9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5133d78b7bf19f350865c9515839865503cacfa9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5133d78b7bf19f350865c9515839865503cacfa9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a94323b60793e11ca1fc449e44b57dcff76affd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a94323b60793e11ca1fc449e44b57dcff76affd8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a94323b60793e11ca1fc449e44b57dcff76affd8"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 51,
    "deletions": 5
  },
  "files": [
    {
      "sha": "50a933a3a2867daee39f800936df35f1385af498",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5133d78b7bf19f350865c9515839865503cacfa9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5133d78b7bf19f350865c9515839865503cacfa9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5133d78b7bf19f350865c9515839865503cacfa9",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expop.h (class sub_operation): New.\n+\t* eval.c (eval_op_sub): No longer static.  Remove \"op\" parameter.\n+\t(evaluate_subexp_standard): Update.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (class add_operation): New."
    },
    {
      "sha": "87c8b0d69e001853efd9ad82198f93cbd5e8627a",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5133d78b7bf19f350865c9515839865503cacfa9/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5133d78b7bf19f350865c9515839865503cacfa9/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=5133d78b7bf19f350865c9515839865503cacfa9",
      "patch": "@@ -1483,15 +1483,15 @@ eval_op_add (struct type *expect_type, struct expression *exp,\n \n /* A helper function for BINOP_SUB.  */\n \n-static struct value *\n+struct value *\n eval_op_sub (struct type *expect_type, struct expression *exp,\n-\t     enum noside noside, enum exp_opcode op,\n+\t     enum noside noside,\n \t     struct value *arg1, struct value *arg2)\n {\n   if (noside == EVAL_SKIP)\n     return eval_skip_value (exp);\n-  if (binop_user_defined_p (op, arg1, arg2))\n-    return value_x_binop (arg1, arg2, op, OP_NULL, noside);\n+  if (binop_user_defined_p (BINOP_SUB, arg1, arg2))\n+    return value_x_binop (arg1, arg2, BINOP_SUB, OP_NULL, noside);\n   else if (ptrmath_type_p (exp->language_defn, value_type (arg1))\n \t   && ptrmath_type_p (exp->language_defn, value_type (arg2)))\n     {\n@@ -2827,7 +2827,7 @@ evaluate_subexp_standard (struct type *expect_type,\n     case BINOP_SUB:\n       arg1 = evaluate_subexp_with_coercion (exp, pos, noside);\n       arg2 = evaluate_subexp_with_coercion (exp, pos, noside);\n-      return eval_op_sub (expect_type, exp, noside, op, arg1, arg2);\n+      return eval_op_sub (expect_type, exp, noside, arg1, arg2);\n \n     case BINOP_EXP:\n     case BINOP_MUL:"
    },
    {
      "sha": "c996d5208097cfc9d24c658ed9271de8500b82f8",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5133d78b7bf19f350865c9515839865503cacfa9/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5133d78b7bf19f350865c9515839865503cacfa9/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=5133d78b7bf19f350865c9515839865503cacfa9",
      "patch": "@@ -92,6 +92,10 @@ extern struct value *eval_op_add (struct type *expect_type,\n \t\t\t\t  struct expression *exp,\n \t\t\t\t  enum noside noside,\n \t\t\t\t  struct value *arg1, struct value *arg2);\n+extern struct value *eval_op_sub (struct type *expect_type,\n+\t\t\t\t  struct expression *exp,\n+\t\t\t\t  enum noside noside,\n+\t\t\t\t  struct value *arg1, struct value *arg2);\n \n namespace expr\n {\n@@ -1001,6 +1005,42 @@ class add_operation\n   }\n };\n \n+class sub_operation\n+  : public maybe_constant_operation<operation_up, operation_up>\n+{\n+public:\n+\n+  using maybe_constant_operation::maybe_constant_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    value *lhs\n+      = std::get<0> (m_storage)->evaluate_with_coercion (exp, noside);\n+    value *rhs\n+      = std::get<1> (m_storage)->evaluate_with_coercion (exp, noside);\n+    return eval_op_sub (expect_type, exp, noside, lhs, rhs);\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return BINOP_SUB; }\n+\n+protected:\n+\n+  void do_generate_ax (struct expression *exp,\n+\t\t       struct agent_expr *ax,\n+\t\t       struct axs_value *value,\n+\t\t       struct type *cast_type)\n+    override\n+  {\n+    gen_expr_binop (exp, BINOP_SUB,\n+\t\t    std::get<0> (this->m_storage).get (),\n+\t\t    std::get<1> (this->m_storage).get (),\n+\t\t    ax, value);\n+  }\n+};\n+\n } /* namespace expr */\n \n #endif /* EXPOP_H */"
    }
  ]
}