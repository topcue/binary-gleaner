{
  "sha": "b1468492c69335b023e6e4adf15ba0de0263812e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjE0Njg0OTJjNjkzMzViMDIzZTZlNGFkZjE1YmEwZGUwMjYzODEyZQ==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-12-21T13:19:40Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-01-25T10:08:24Z"
    },
    "message": "Test 'set exec-file-mismatch ask|warn|off'.\n\nModify gdb.base/attach.exp to test the behaviour of the option\nexec-file-mismatch.  Note that this test can also be run using/\n  make check RUNTESTFLAGS=\"--target_board=native-extended-gdbserver\" TESTS=gdb.base/attach.exp\n\nto test the behaviour of attaching to running program using a gdb server.\n\nNote: when running the test with a gdbserver, the tests in\ntest_command_line_attach_run fail because the command \"run\" is not supported.\nI tried to extend the condition\n    if ![isnative] then {\n\tunsupported \"commandline attach run test\"\n\treturn 0\n    }\nbut unclear to me how to best do that.  The below trials all failed\nto work properly:\n    if { ![isnative] || [target_is_gdbserver] } then {\n    if { ![isnative] || [use_gdb_stub] } then {\n    if { ![isnative] || [is_remote target] } then {\n  => could never obtain a condition that was true with gdbserver.\n\n2020-01-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/attach.exp: Test 'set exec-file-mismatch'.",
    "tree": {
      "sha": "a4ac8fefbad17a1e3cdd4fd07cbdae71692a003e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a4ac8fefbad17a1e3cdd4fd07cbdae71692a003e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b1468492c69335b023e6e4adf15ba0de0263812e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1468492c69335b023e6e4adf15ba0de0263812e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b1468492c69335b023e6e4adf15ba0de0263812e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1468492c69335b023e6e4adf15ba0de0263812e/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "a2fedca99c622e1b523046d09f573b06de0207a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2fedca99c622e1b523046d09f573b06de0207a6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a2fedca99c622e1b523046d09f573b06de0207a6"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 89,
    "deletions": 1
  },
  "files": [
    {
      "sha": "70cbb75848f6be8938f13c64bc5cf2e6f1e9e267",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b1468492c69335b023e6e4adf15ba0de0263812e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-25  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/attach.exp: Test 'set exec-file-mismatch'.\n+\n 2020-01-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.dwarf2/dw2-inline-many-frames.c: New file."
    },
    {
      "sha": "2e87f9b7104aea4975b4b9d85c91dcbe0b037258",
      "filename": "gdb/testsuite/gdb.base/attach.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/gdb.base/attach.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/gdb.base/attach.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/attach.c?ref=b1468492c69335b023e6e4adf15ba0de0263812e",
      "patch": "@@ -7,6 +7,7 @@\n #include <stdio.h>\n #include <unistd.h>\n \n+int  bidule = 0;\n int  should_exit = 0;\n \n int main ()"
    },
    {
      "sha": "5a1d7a84736d46d74299fe1cf331d2fe5b1b6f6d",
      "filename": "gdb/testsuite/gdb.base/attach.exp",
      "status": "modified",
      "additions": 83,
      "deletions": 1,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/gdb.base/attach.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/gdb.base/attach.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/attach.exp?ref=b1468492c69335b023e6e4adf15ba0de0263812e",
      "patch": "@@ -474,7 +474,12 @@ proc test_command_line_attach_run {} {\n     global gdb_prompt\n     global binfile\n \n-    if ![isnative] then {\n+    # Skip test if we cannot attach on the command line and use the run command.\n+    # ??? Unclear what condition to use to return here when using gdbserver.\n+    # ??? None of the below works.\n+    #    ![isnative] || [target_is_gdbserver]\n+    #    ![isnative] || [use_gdb_stub]\n+    if { ![isnative] || [is_remote target] } then {\n \tunsupported \"commandline attach run test\"\n \treturn 0\n     }\n@@ -513,14 +518,91 @@ proc test_command_line_attach_run {} {\n     }\n }\n \n+\n+# This is a test of 'set exec-file-mismatch' handling.\n+\n+proc_with_prefix do_attach_exec_mismatch_handling_tests {} {\n+    global gdb_prompt\n+    global binfile\n+    global binfile2\n+\n+    clean_restart $binfile\n+\n+    # Start two programs that can be attached to.\n+    # The first program contains a 'int bidule' variable, the second a 'float bidule'.\n+\n+    set test_spawn_id [spawn_wait_for_attach $binfile]\n+    set testpid [spawn_id_get_pid $test_spawn_id]\n+    set test_spawn_id2 [spawn_wait_for_attach $binfile2]\n+    set testpid2 [spawn_id_get_pid $test_spawn_id2]\n+\n+\n+    # Test with the default value of 'set exec-file-mismatch load\".\n+    set test \"mismatch load\"\n+    gdb_test \"attach $testpid\" \"Attaching to program.*\" \"$test attach1\"\n+    # Verify that we can \"see\" the variable \"bidule\" in the\n+    # program, and that it is an integer.\n+    gdb_test \"ptype bidule\" \" = int\" \"$test after attach1, bidule is int\"\n+    # Detach the process.\n+    gdb_test \"detach\" \"Detaching from program: .* detached\\\\\\]\" \"$test detach1\"\n+    gdb_test_multiple \"attach $testpid2\" \"$test attach2\" {\n+\t-re \"Attaching to program.*exec-file-mismatch handling is currently \\\"ask\\\".*Load new symbol table from .*attach2\\\".*\\(y or n\\)\" {\n+\t    pass \"$test attach2\"\n+\t}\n+    }\n+    gdb_test \"y\" \"Reading symbols from .*attach2.*\" \"$test load attach2\"\n+    # Verify that we can \"see\" the variable \"bidule\" in the\n+    # program, and that it is a float.\n+    gdb_test \"ptype bidule\" \" = float\" \"$test after attach2 and load, bidule is float\"\n+    # Detach the process.\n+    gdb_test \"detach\" \"Detaching from program: .* detached\\\\\\]\" \"$test detach attach2\"\n+\n+\n+    # Test with 'set exec-file-mismatch warn\".\n+    set test \"mismatch warn\"\n+    gdb_test_no_output \"set exec-file-mismatch warn\"\n+    gdb_test_multiple \"attach $testpid\" \"$test attach\" {\n+\t-re \"Attaching to program.*exec-file-mismatch handling is currently \\\"warn\\\".*$gdb_prompt\" {\n+\t    pass \"$test attach\"\n+\t}\n+    }\n+    # Verify that we still (wrongly) \"see\" the variable \"bidule\" as a float,\n+    # as we have not loaded the correct exec-file.\n+    gdb_test \"ptype bidule\" \" = float\" \"$test after attach and warn, bidule is float\"\n+    # Detach the process.\n+    gdb_test \"detach\" \"Detaching from program: .* detached\\\\\\]\" \"$test detach attach\"\n+\n+\n+    # Same test but with 'set exec-file-mismatch off\".\n+    set test \"mismatch off\"\n+    gdb_test_no_output \"set exec-file-mismatch off\"\n+    gdb_test_multiple \"attach $testpid\" \"$test attach\" {\n+\t-re \"Attaching to program.*$gdb_prompt\" {\n+\t    pass \"$test attach\"\n+\t}\n+    }\n+    # Verify that we still (wrongly) \"see\" the variable \"bidule\" as a float,\n+    # as we have not warned the user and not loaded the correct exec-file\n+    gdb_test \"ptype bidule\" \" = float\" \"$test after attach and warn, bidule is float\"\n+    # Detach the process.\n+    gdb_test \"detach\" \"Detaching from program: .* detached\\\\\\]\" \"$test detach attach\"\n+\n+\n+    # Don't leave a process around\n+    kill_wait_spawned_process $test_spawn_id\n+    kill_wait_spawned_process $test_spawn_id2\n+}\n+\n do_attach_tests\n do_attach_failure_tests\n do_call_attach_tests\n+do_attach_exec_mismatch_handling_tests\n \n # Test \"gdb --pid\"\n \n do_command_attach_tests\n \n+\n test_command_line_attach_run\n \n return 0"
    },
    {
      "sha": "44d37258fbc8d78647d7290bcb21bbb7e2a3cd00",
      "filename": "gdb/testsuite/gdb.base/attach2.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/gdb.base/attach2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1468492c69335b023e6e4adf15ba0de0263812e/gdb/testsuite/gdb.base/attach2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/attach2.c?ref=b1468492c69335b023e6e4adf15ba0de0263812e",
      "patch": "@@ -8,6 +8,7 @@\n #include <stdlib.h>\n #include <unistd.h>\n \n+float  bidule = 0.0;\n int  should_exit = 0;\n \n int main ()"
    }
  ]
}