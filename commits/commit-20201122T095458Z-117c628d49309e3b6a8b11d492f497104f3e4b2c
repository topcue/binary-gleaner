{
  "sha": "117c628d49309e3b6a8b11d492f497104f3e4b2c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTE3YzYyOGQ0OTMwOWUzYjZhOGIxMWQ0OTJmNDk3MTA0ZjNlNGIyYw==",
  "commit": {
    "author": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-11-22T09:54:58Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-11-22T09:54:58Z"
    },
    "message": "[gdb/testsuite] Add testcase for DW_AT_count referencing a variable\n\nClang describes the upper bounds of variable length arrays using\na DW_AT_count attribute which references the DIE of a synthetic\nvariable whose value is specified using a DW_AT_location.  GDB handles\nthese incorrectly if the corresponding DWARF expression finishes with a\nDW_OP_stack_value (PR26905).  This commit adds a new kfailed test to\ngdb.dwarf2/count.exp with the same DWARF as that generated by Clang for\ngdb.base/vla-optimized-out.exp, one of the failing tests.\n\nChecked on Fedora 32 x86_64, with GCC and Clang.\n\ngdb/testsuite/ChangeLog:\n\n2020-11-22  Gary Benson <gbenson@redhat.com>\n\n\tPR gdb/26905\n\t* gdb.dwarf2/count.exp: Add test for an array whose upper bound\n\tis defined using a DW_AT_count which references another DIE.",
    "tree": {
      "sha": "4194be44158a6297599ed05d2350b87e70ac6ad8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4194be44158a6297599ed05d2350b87e70ac6ad8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/117c628d49309e3b6a8b11d492f497104f3e4b2c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/117c628d49309e3b6a8b11d492f497104f3e4b2c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/117c628d49309e3b6a8b11d492f497104f3e4b2c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/117c628d49309e3b6a8b11d492f497104f3e4b2c/comments",
  "author": null,
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "60b43650988db65e5d4ffc6053d6e37444e3752e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60b43650988db65e5d4ffc6053d6e37444e3752e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/60b43650988db65e5d4ffc6053d6e37444e3752e"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 58,
    "deletions": 1
  },
  "files": [
    {
      "sha": "91fc9e0112faf7106a4cac19e6fb3679f67e0f6b",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/117c628d49309e3b6a8b11d492f497104f3e4b2c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/117c628d49309e3b6a8b11d492f497104f3e4b2c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=117c628d49309e3b6a8b11d492f497104f3e4b2c",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-22  Gary Benson <gbenson@redhat.com>\n+\n+\tPR gdb/26905\n+\t* gdb.dwarf2/count.exp: Add test for an array whose upper bound\n+\tis defined using a DW_AT_count which references another DIE.\n+\n 2020-11-21  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/vla-ptr.exp: Add XFAIL."
    },
    {
      "sha": "6dcccb574098a283091e700c0bad9642231db73a",
      "filename": "gdb/testsuite/gdb.dwarf2/count.exp",
      "status": "modified",
      "additions": 52,
      "deletions": 1,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/117c628d49309e3b6a8b11d492f497104f3e4b2c/gdb/testsuite/gdb.dwarf2/count.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/117c628d49309e3b6a8b11d492f497104f3e4b2c/gdb/testsuite/gdb.dwarf2/count.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/count.exp?ref=117c628d49309e3b6a8b11d492f497104f3e4b2c",
      "patch": "@@ -28,14 +28,29 @@ set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     cu {} {\n \tcompile_unit {{language @DW_LANG_C99}} {\n-\t    declare_labels char_label array_label array_label2 static_array_label\n+\t    declare_labels char_label \\\n+\t\tarray_size_type_label long_unsigned_int_label \\\n+\t\tarray_label array_label2 static_array_label \\\n+\t\tvla_length_label vla_array_label\n \n \t    char_label: base_type {\n \t\t{name char}\n \t\t{encoding @DW_ATE_signed}\n \t\t{byte_size 1 DW_FORM_sdata}\n \t    }\n \n+\t    array_size_type_label: base_type {\n+\t\t{byte_size 8 DW_FORM_sdata}\n+\t\t{encoding @DW_ATE_unsigned}\n+\t\t{name __ARRAY_SIZE_TYPE__}\n+\t    }\n+\n+\t    long_unsigned_int_label: base_type {\n+\t\t{byte_size 8 DW_FORM_sdata}\n+\t\t{encoding @DW_ATE_unsigned}\n+\t\t{name \"long unsigned int\"}\n+\t    }\n+\n \t    array_label: array_type {\n \t\t{type :$char_label}\n \t    } {\n@@ -63,6 +78,27 @@ Dwarf::assemble $asm_file {\n \t\t}\n \t    }\n \n+\t    vla_length_label:\n+\t    DW_TAG_variable {\n+\t\t{location\n+\t\t    {\n+\t\t\tlit6\n+\t\t\tstack_value\n+\t\t    } SPECIAL_expr}\n+\t\t{name \"__vla_array_length\"}\n+\t\t{type :$long_unsigned_int_label}\n+\t\t{artificial 1 DW_FORM_flag_present}\n+\t    }\n+\n+\t    vla_array_label: array_type {\n+\t\t{type :$char_label}\n+\t    } {\n+\t\tsubrange_type {\n+\t\t    {type :$array_size_type_label}\n+\t\t    {count :$vla_length_label}\n+\t\t}\n+\t    }\n+\n \t    DW_TAG_variable {\n \t\t{name array2}\n \t\t{type :$array_label2}\n@@ -80,6 +116,12 @@ Dwarf::assemble $asm_file {\n \t\t{type :$static_array_label}\n \t\t{const_value world DW_FORM_block1}\n \t    }\n+\n+\t    DW_TAG_variable {\n+\t\t{name vla_array}\n+\t\t{type :$vla_array_label}\n+\t\t{const_value saluton DW_FORM_block1}\n+\t    }\n \t}\n     }\n }\n@@ -123,3 +165,12 @@ gdb_test \"ptype static_array\" \"type = char \\\\\\[5\\\\\\]\"\n gdb_test \"whatis static_array\" \"type = char \\\\\\[5\\\\\\]\"\n gdb_test \"print static_array\" \" = \\\"world\\\"\"\n gdb_test \"print sizeof static_array\" \" = 5\"\n+\n+setup_kfail \"gdb/26905\" *-*-*\n+gdb_test \"ptype vla_array\" \"type = char \\\\\\[6\\\\\\]\"\n+setup_kfail \"gdb/26905\" *-*-*\n+gdb_test \"whatis vla_array\" \"type = char \\\\\\[6\\\\\\]\"\n+setup_kfail \"gdb/26905\" *-*-*\n+gdb_test \"print vla_array\" \" = \\\"saluto\\\"\"\n+setup_kfail \"gdb/26905\" *-*-*\n+gdb_test \"print sizeof vla_array\" \" = 6\""
    }
  ]
}