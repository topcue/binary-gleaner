{
  "sha": "a591084285cc16a435258641691aa0a8f5bf42ee",
  "node_id": "C_kwDOANOeidoAKGE1OTEwODQyODVjYzE2YTQzNTI1ODY0MTY5MWFhMGE4ZjViZjQyZWU",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-27T15:12:25Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-02-02T16:27:36Z"
    },
    "message": "gdb: test to check one aspect of the linespec parsing code\n\nWhile working on the fix for PR cli/28665 (see previous couple of\ncommits), I was playing with making a change in the linespec parsing\ncode.  Specifically, I was thinking about whether the spec_string for\nLINESPEC_LOCATION locations should ever be nullptr.\n\nI made a change to prevent the spec_string from ever being nullptr,\ntested gdb, and saw no regressions.\n\nHowever, as part of this work I was reviewing how the breakpoint code\nhandles this case (spec_string being nullptr), and spotted that in\nparse_breakpoint_sals the nullptr case is specifically handled, so\nchanging this should have caused a regression.  But I didn't see one.\n\nSo, this commit adds a comment in location.c mentioning that the\nnullptr case is (a) not an oversight, and (b) is required.  Then I add\na new test to gdb.base/break.exp that ensures a change in this area\nwill cause a regression.\n\nThis test passes on current gdb, but with my modified (and broken)\ngdb, the test would fail.",
    "tree": {
      "sha": "b096fa3b9073303942ef7c20070bef1092648ae5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b096fa3b9073303942ef7c20070bef1092648ae5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a591084285cc16a435258641691aa0a8f5bf42ee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a591084285cc16a435258641691aa0a8f5bf42ee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a591084285cc16a435258641691aa0a8f5bf42ee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a591084285cc16a435258641691aa0a8f5bf42ee/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82d0a72cdc9ca6cd37a8987e2bcd2eb707c51149"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 10,
    "deletions": 0
  },
  "files": [
    {
      "sha": "0459980ab8c072de4716e6fed358eae4341b6cce",
      "filename": "gdb/location.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a591084285cc16a435258641691aa0a8f5bf42ee/gdb/location.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a591084285cc16a435258641691aa0a8f5bf42ee/gdb/location.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/location.c?ref=a591084285cc16a435258641691aa0a8f5bf42ee",
      "patch": "@@ -134,6 +134,11 @@ struct event_location_linespec : public event_location\n \n \tlinespec_lex_to_end (linespec);\n \tp = remove_trailing_whitespace (orig, *linespec);\n+\n+\t/* If there is no valid linespec then this will leave the\n+\t   spec_string as nullptr.  This behaviour is relied on in the\n+\t   breakpoint setting code, where spec_string being nullptr means\n+\t   to use the default breakpoint location.  */\n \tif ((p - orig) > 0)\n \t  linespec_location.spec_string = savestring (orig, p - orig);\n       }"
    },
    {
      "sha": "2c939ada14ac1edf48a22537fe29a01b4f4d4697",
      "filename": "gdb/testsuite/gdb.base/break.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a591084285cc16a435258641691aa0a8f5bf42ee/gdb/testsuite/gdb.base/break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a591084285cc16a435258641691aa0a8f5bf42ee/gdb/testsuite/gdb.base/break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/break.exp?ref=a591084285cc16a435258641691aa0a8f5bf42ee",
      "patch": "@@ -520,6 +520,11 @@ gdb_test \"break\" \\\n     \"Note: breakpoints \\[0-9\\]*, \\[0-9\\]* and \\[0-9\\]* also set at .*Breakpoint \\[0-9\\]*.*\" \\\n     \"break on default location, 4th time\"\n \n+# Check setting a breakpoint at the default location with a condition attached.\n+gdb_test \"break if (1)\" \\\n+    \"Note: breakpoints \\[0-9\\]*, \\[0-9\\]*, \\[0-9\\]* and \\[0-9\\]* also set at .*Breakpoint \\[0-9\\]*.*\" \\\n+    \"break on the default location, 5th time, but with a condition\"\n+\n # Verify that a \"silent\" breakpoint can be set, and that GDB is indeed\n # \"silent\" about its triggering.\n #"
    }
  ]
}