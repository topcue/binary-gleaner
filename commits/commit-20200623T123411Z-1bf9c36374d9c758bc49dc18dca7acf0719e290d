{
  "sha": "1bf9c36374d9c758bc49dc18dca7acf0719e290d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWJmOWMzNjM3NGQ5Yzc1OGJjNDlkYzE4ZGNhN2FjZjA3MTllMjkwZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-02T13:57:40Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-23T12:34:11Z"
    },
    "message": "gdb: Convert language la_post_parser field to a method\n\nThis commit changes the language_data::la_post_parser function pointer\nmember variable into a member function of language_defn.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (resolve): Rename to ada_language::post_parser.\n\t(ada_language_data): Delete la_post_parser initializer.\n\t(ada_language::post_parser): New member function.\n\t* c-lang.c (c_language_data): Delete la_post_parser initializer.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_language_data): Likewise.\n\t* go-lang.c (go_language_data): Likewise.\n\t* language.c (unknown_language_data): Likewise.\n\t(auto_language_data): Likewise.\n\t* language.h (language_data): Delete la_post_parser field.\n\t(language_defn::post_parser): New member function.\n\t* m2-lang.c (m2_language_data): Delete la_post_parser initializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* parse.c (parse_exp_in_context): Update call to post_parser.\n\t(null_post_parser): Delete definition.\n\t* parser-defs.h (null_post_parser): Delete declaration.\n\t* rust-lang.c (rust_language_data): Delete la_post_parser\n\tinitializer.",
    "tree": {
      "sha": "698a8b65ddd1e853e3713a06385e2899b870e28c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/698a8b65ddd1e853e3713a06385e2899b870e28c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1bf9c36374d9c758bc49dc18dca7acf0719e290d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bf9c36374d9c758bc49dc18dca7acf0719e290d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1bf9c36374d9c758bc49dc18dca7acf0719e290d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bf9c36374d9c758bc49dc18dca7acf0719e290d/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "87afa6523b01cd6bdcc3903fe22953966cec7bb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87afa6523b01cd6bdcc3903fe22953966cec7bb7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/87afa6523b01cd6bdcc3903fe22953966cec7bb7"
    }
  ],
  "stats": {
    "total": 126,
    "additions": 65,
    "deletions": 61
  },
  "files": [
    {
      "sha": "098014a42980d927e3689a5e169815b3e46b5fac",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -1,3 +1,29 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (resolve): Rename to ada_language::post_parser.\n+\t(ada_language_data): Delete la_post_parser initializer.\n+\t(ada_language::post_parser): New member function.\n+\t* c-lang.c (c_language_data): Delete la_post_parser initializer.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t* go-lang.c (go_language_data): Likewise.\n+\t* language.c (unknown_language_data): Likewise.\n+\t(auto_language_data): Likewise.\n+\t* language.h (language_data): Delete la_post_parser field.\n+\t(language_defn::post_parser): New member function.\n+\t* m2-lang.c (m2_language_data): Delete la_post_parser initializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* parse.c (parse_exp_in_context): Update call to post_parser.\n+\t(null_post_parser): Delete definition.\n+\t* parser-defs.h (null_post_parser): Delete declaration.\n+\t* rust-lang.c (rust_language_data): Delete la_post_parser\n+\tinitializer.\n+\n 2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (parse): Rename to ada_language::parser."
    },
    {
      "sha": "bb6d011e13eea6e8be048ba65219688c5b94807a",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 23,
      "deletions": 23,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -3360,28 +3360,6 @@ See set/show multiple-symbol.\"));\n   return n_chosen;\n }\n \n-/* Same as evaluate_type (*EXP), but resolves ambiguous symbol\n-   references (marked by OP_VAR_VALUE nodes in which the symbol has an\n-   undefined namespace) and converts operators that are\n-   user-defined into appropriate function calls.  If CONTEXT_TYPE is\n-   non-null, it provides a preferred result type [at the moment, only\n-   type void has any effect---causing procedures to be preferred over\n-   functions in calls].  A null CONTEXT_TYPE indicates that a non-void\n-   return type is preferred.  May change (expand) *EXP.  */\n-\n-static void\n-resolve (expression_up *expp, int void_context_p, int parse_completion,\n-\t innermost_block_tracker *tracker)\n-{\n-  struct type *context_type = NULL;\n-  int pc = 0;\n-\n-  if (void_context_p)\n-    context_type = builtin_type ((*expp)->gdbarch)->builtin_void;\n-\n-  resolve_subexp (expp, &pc, 1, context_type, parse_completion, tracker);\n-}\n-\n /* Resolve the operator of the subexpression beginning at\n    position *POS of *EXPP.  \"Resolving\" consists of replacing\n    the symbols that have undefined namespaces in OP_VAR_VALUE nodes\n@@ -13711,7 +13689,6 @@ extern const struct language_data ada_language_data =\n   macro_expansion_no,\n   ada_extensions,\n   &ada_exp_descriptor,\n-  resolve,\n   ada_printchar,                /* Print a character constant */\n   ada_printstr,                 /* Function to print string constant */\n   emit_char,                    /* Function to print single char (not used) */\n@@ -14116,6 +14093,29 @@ class ada_language : public language_defn\n     return ada_parse (ps);\n   }\n \n+  /* See language.h.\n+\n+     Same as evaluate_type (*EXP), but resolves ambiguous symbol references\n+     (marked by OP_VAR_VALUE nodes in which the symbol has an undefined\n+     namespace) and converts operators that are user-defined into\n+     appropriate function calls.  If CONTEXT_TYPE is non-null, it provides\n+     a preferred result type [at the moment, only type void has any\n+     effect---causing procedures to be preferred over functions in calls].\n+     A null CONTEXT_TYPE indicates that a non-void return type is\n+     preferred.  May change (expand) *EXP.  */\n+\n+  void post_parser (expression_up *expp, int void_context_p, int completing,\n+\t\t    innermost_block_tracker *tracker) const override\n+  {\n+    struct type *context_type = NULL;\n+    int pc = 0;\n+\n+    if (void_context_p)\n+      context_type = builtin_type ((*expp)->gdbarch)->builtin_void;\n+\n+    resolve_subexp (expp, &pc, 1, context_type, completing, tracker);\n+  }\n+\n protected:\n   /* See language.h.  */\n "
    },
    {
      "sha": "363c896b7a931f8d6cf7d6a5f596860eed67a1f1",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -889,7 +889,6 @@ extern const struct language_data c_language_data =\n   macro_expansion_c,\n   c_extensions,\n   &exp_descriptor_c,\n-  null_post_parser,\n   c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_emit_char,\t\t\t/* Print a single char */\n@@ -996,7 +995,6 @@ extern const struct language_data cplus_language_data =\n   macro_expansion_c,\n   cplus_extensions,\n   &exp_descriptor_c,\n-  null_post_parser,\n   c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_emit_char,\t\t\t/* Print a single char */\n@@ -1200,7 +1198,6 @@ extern const struct language_data asm_language_data =\n   macro_expansion_c,\n   asm_extensions,\n   &exp_descriptor_c,\n-  null_post_parser,\n   c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_emit_char,\t\t\t/* Print a single char */\n@@ -1262,7 +1259,6 @@ extern const struct language_data minimal_language_data =\n   macro_expansion_c,\n   NULL,\n   &exp_descriptor_c,\n-  null_post_parser,\n   c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_emit_char,\t\t\t/* Print a single char */"
    },
    {
      "sha": "facc82c2019d9cc815d5bb39a8d6e8af7ad4df23",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -142,7 +142,6 @@ extern const struct language_data d_language_data =\n   macro_expansion_no,\n   d_extensions,\n   &exp_descriptor_c,\n-  null_post_parser,\n   c_printchar,\t\t\t/* Print a character constant.  */\n   c_printstr,\t\t\t/* Function to print string constant.  */\n   c_emit_char,\t\t\t/* Print a single char.  */"
    },
    {
      "sha": "1b545b27b3b9273cb217bdd102189202d731dd88",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -564,7 +564,6 @@ extern const struct language_data f_language_data =\n   macro_expansion_no,\n   f_extensions,\n   &exp_descriptor_f,\n-  null_post_parser,\n   f_printchar,\t\t\t/* Print character constant */\n   f_printstr,\t\t\t/* function to print string constant */\n   f_emit_char,\t\t\t/* Function to print a single character */"
    },
    {
      "sha": "c26dee9a063c79f1d86ecf351e37e4c24933e4c6",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -527,7 +527,6 @@ extern const struct language_data go_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_c,\n-  null_post_parser,\n   c_printchar,\t\t\t/* Print a character constant.  */\n   c_printstr,\t\t\t/* Function to print string constant.  */\n   c_emit_char,\t\t\t/* Print a single char.  */"
    },
    {
      "sha": "72fa1e451343d2644cc7fbbbd65eed566520972c",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -777,7 +777,6 @@ extern const struct language_data unknown_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_standard,\n-  null_post_parser,\n   unk_lang_printchar,\t\t/* Print character constant */\n   unk_lang_printstr,\n   unk_lang_emit_char,\n@@ -868,7 +867,6 @@ extern const struct language_data auto_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_standard,\n-  null_post_parser,\n   unk_lang_printchar,\t\t/* Print character constant */\n   unk_lang_printstr,\n   unk_lang_emit_char,"
    },
    {
      "sha": "d5b106d84e914a681365e822737f2cbc87677ca9",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -225,17 +225,6 @@ struct language_data\n \n     const struct exp_descriptor *la_exp_desc;\n \n-    /* Given an expression *EXPP created by prefixifying the result of\n-       la_parser, perform any remaining processing necessary to complete\n-       its translation.  *EXPP may change; la_post_parser is responsible \n-       for releasing its previous contents, if necessary.  If \n-       VOID_CONTEXT_P, then no value is expected from the expression.\n-       If COMPLETING is non-zero, then the expression has been parsed\n-       for completion, not evaluation.  */\n-\n-    void (*la_post_parser) (expression_up *expp, int void_context_p,\n-\t\t\t    int completing, innermost_block_tracker *tracker);\n-\n     void (*la_printchar) (int ch, struct type *chtype,\n \t\t\t  struct ui_file * stream);\n \n@@ -540,6 +529,21 @@ struct language_defn : language_data\n \n   virtual int parser (struct parser_state *ps) const;\n \n+  /* Given an expression *EXPP created by prefixifying the result of\n+     la_parser, perform any remaining processing necessary to complete its\n+     translation.  *EXPP may change; la_post_parser is responsible for\n+     releasing its previous contents, if necessary.  If VOID_CONTEXT_P,\n+     then no value is expected from the expression.  If COMPLETING is\n+     non-zero, then the expression has been parsed for completion, not\n+     evaluation.  */\n+\n+  virtual void post_parser (expression_up *expp, int void_context_p,\n+\t\t\t    int completing,\n+\t\t\t    innermost_block_tracker *tracker) const\n+  {\n+    /* By default the post-parser does nothing.  */\n+  }\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method."
    },
    {
      "sha": "5aca83349618392522bcb204caf6141188b50717",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -362,7 +362,6 @@ extern const struct language_data m2_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_modula2,\n-  null_post_parser,\n   m2_printchar,\t\t\t/* Print character constant */\n   m2_printstr,\t\t\t/* function to print string constant */\n   m2_emit_char,\t\t\t/* Function to print a single character */"
    },
    {
      "sha": "2ec87774f439b2d525fb2a0ce7daa1516002b29c",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -337,7 +337,6 @@ extern const struct language_data objc_language_data =\n   macro_expansion_c,\n   objc_extensions,\n   &exp_descriptor_standard,\n-  null_post_parser,\n   c_printchar,\t\t       /* Print a character constant */\n   c_printstr,\t\t       /* Function to print string constant */\n   c_emit_char,"
    },
    {
      "sha": "f314eff55f3e480dad7baa499f992538f2c6f556",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -1016,7 +1016,6 @@ extern const struct language_data opencl_language_data =\n   macro_expansion_c,\n   NULL,\n   &exp_descriptor_opencl,\n-  null_post_parser,\n   c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_emit_char,\t\t\t/* Print a single char */"
    },
    {
      "sha": "14ca5d78338ae0661bb1a90abe1ab09f6f23c964",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -393,7 +393,6 @@ extern const struct language_data pascal_language_data =\n   macro_expansion_no,\n   p_extensions,\n   &exp_descriptor_standard,\n-  null_post_parser,\n   pascal_printchar,\t\t/* Print a character constant */\n   pascal_printstr,\t\t/* Function to print string constant */\n   pascal_emit_char,\t\t/* Print a single char */"
    },
    {
      "sha": "2fb474e27f1d2db651afbe876f2c94bdbadc7b1a",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -1146,8 +1146,7 @@ parse_exp_in_context (const char **stringptr, CORE_ADDR pc,\n   if (out_subexp)\n     *out_subexp = subexp;\n \n-  lang->la_post_parser (&result, void_context_p, ps.parse_completion,\n-\t\t\ttracker);\n+  lang->post_parser (&result, void_context_p, ps.parse_completion, tracker);\n \n   if (expressiondebug)\n     dump_prefix_expression (result.get (), gdb_stdlog);\n@@ -1241,14 +1240,6 @@ parse_expression_for_completion (const char *string,\n   return value_type (val);\n }\n \n-/* A post-parser that does nothing.  */\n-\n-void\n-null_post_parser (expression_up *exp, int void_context_p, int completin,\n-\t\t  innermost_block_tracker *tracker)\n-{\n-}\n-\n /* Parse floating point value P of length LEN.\n    Return false if invalid, true if valid.\n    The successfully parsed number is stored in DATA in"
    },
    {
      "sha": "a9b8a12959b29e258d6ed73bbe949e762634f724",
      "filename": "gdb/parser-defs.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/parser-defs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/parser-defs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parser-defs.h?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -350,9 +350,6 @@ extern int operator_check_standard (struct expression *exp, int pos,\n \n extern const char *op_name_standard (enum exp_opcode);\n \n-extern void null_post_parser (expression_up *, int, int,\n-\t\t\t      innermost_block_tracker *);\n-\n extern bool parse_float (const char *p, int len,\n \t\t\t const struct type *type, gdb_byte *data);\n \f"
    },
    {
      "sha": "846fe1fa40a4dd52fc42919ec7f907e4cc24f133",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf9c36374d9c758bc49dc18dca7acf0719e290d/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=1bf9c36374d9c758bc49dc18dca7acf0719e290d",
      "patch": "@@ -1989,7 +1989,6 @@ extern const struct language_data rust_language_data =\n   macro_expansion_no,\n   rust_extensions,\n   &exp_descriptor_rust,\n-  null_post_parser,\n   rust_printchar,\t\t/* Print a character constant */\n   rust_printstr,\t\t/* Function to print string constant */\n   rust_emitchar,\t\t/* Print a single char */"
    }
  ]
}