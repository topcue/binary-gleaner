{
  "sha": "f17727b3497a630b01dffd219cdc372a058be121",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjE3NzI3YjM0OTdhNjMwYjAxZGZmZDIxOWNkYzM3MmEwNThiZTEyMQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-04T12:36:47Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-04T12:36:47Z"
    },
    "message": "[gdb/testsuite] Fix count usage in gdb.reverse/insn-reverse.exp\n\nConsider the test-case gdb.reverse/insn-reverse.exp.\n\nAfter the loop setting count, the valid entries in various arrays range from 0\nto $count - 1 inclusive.\n\nThen $count is decremented:\n...\n       incr count -1\n...\nafter which the valid entries range from 0 to $count inclusive.\n\nThe first subsequent loop handles that properly:\n...\n       for {set i $count} {$i >= 0} {incr i -1} {\n...\nbut the following loop does not, because it treats $count as exclusive bound:\n...\n\tfor {set i 0} {$i < $count} {incr i} {\n...\n\nFix this by removing the incr, and using $count - 1 as starting value in the\nfirst loop.\n\ngdb/testsuite/ChangeLog:\n\n2020-12-04  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.reverse/insn-reverse.exp: Fix count handling.",
    "tree": {
      "sha": "d972f1a0d938b3eb66905b4c489a5f6b7cca2a48",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d972f1a0d938b3eb66905b4c489a5f6b7cca2a48"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f17727b3497a630b01dffd219cdc372a058be121",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f17727b3497a630b01dffd219cdc372a058be121",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f17727b3497a630b01dffd219cdc372a058be121",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f17727b3497a630b01dffd219cdc372a058be121/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a1499830feea0dc134e8b08d7cc5b6a52e370294",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1499830feea0dc134e8b08d7cc5b6a52e370294",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a1499830feea0dc134e8b08d7cc5b6a52e370294"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 5,
    "deletions": 2
  },
  "files": [
    {
      "sha": "a88668d9b4e15824cd010907b734003b55ff5b1d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f17727b3497a630b01dffd219cdc372a058be121/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f17727b3497a630b01dffd219cdc372a058be121/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f17727b3497a630b01dffd219cdc372a058be121",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-04  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.reverse/insn-reverse.exp: Fix count handling.\n+\n 2020-12-04  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.reverse/insn-reverse-x86.c: Guard x86_64 assembly with #ifdef"
    },
    {
      "sha": "583195263caef2f8b8428db56f8b338c52fe8585",
      "filename": "gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f17727b3497a630b01dffd219cdc372a058be121/gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f17727b3497a630b01dffd219cdc372a058be121/gdb/testsuite/gdb.reverse/insn-reverse.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/insn-reverse.exp?ref=f17727b3497a630b01dffd219cdc372a058be121",
      "patch": "@@ -102,9 +102,8 @@ proc test { func testcase_nr } {\n \t    gdb_test \"si\" \"\" \"\"\n \t}\n \n-\tincr count -1\n \t# Registers contents after each backward single step.\n-\tfor {set i $count} {$i >= 0} {incr i -1} {\n+\tfor {set i [expr $count - 1]} {$i >= 0} {incr i -1} {\n \t    gdb_test \"reverse-stepi\" \"\" \"\"\n \t    set post_regs($i) [capture_command_output \"info all-registers\" \"\"]\n \t}"
    }
  ]
}