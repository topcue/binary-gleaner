{
  "sha": "b420b89e4b321ff31f2e76cac499b908f042069b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjQyMGI4OWU0YjMyMWZmMzFmMmU3NmNhYzQ5OWI5MDhmMDQyMDY5Yg==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-04-30T15:00:29Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T15:44:17Z"
    },
    "message": "testsuite: Add replay logging to GDBSERVER_DEBUG\n\nAdd \"replay\" to the list of GDBSERVER_DEBUG options.  This will\ncause a gdbserver.replay file to be written to the test output\ndirectory.\n\nAt the same time switch this to a comma separated list in order\nto easily handle all possible options.\n\nThe replay log is created by GDB, but has been added to\nGDBSERVER_DEBUG as it is only required for gdbserver tests. To\nenable it, the gdb_debug_init is overridden to allow the additional\nchecking, before calling the original function.\n\ngdb/testsuite/ChangeLog:\n\n        * README (Testsuite Parameters): Add replay logging to\n        GDBSERVER_DEBUG.\n        (gdbserver,debug): Refer to GDBSERVER_DEBUG.\n        * lib/gdbserver-support.exp (gdbserver_start): Treat gdbserverdebug\n        as a comma separated list.\n        (gdb_debug_init): Override procedure.",
    "tree": {
      "sha": "c96ab0dac761d97a468a7efdf4d76d1484fe26df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c96ab0dac761d97a468a7efdf4d76d1484fe26df"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b420b89e4b321ff31f2e76cac499b908f042069b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b420b89e4b321ff31f2e76cac499b908f042069b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b420b89e4b321ff31f2e76cac499b908f042069b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b420b89e4b321ff31f2e76cac499b908f042069b/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/408e9b8b9ebeb854baea9aac52fa8df4d41eb53d"
    }
  ],
  "stats": {
    "total": 89,
    "additions": 68,
    "deletions": 21
  },
  "files": [
    {
      "sha": "601aa4a65cc7c0e4296b0e018c2f1d35874ee361",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b420b89e4b321ff31f2e76cac499b908f042069b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b420b89e4b321ff31f2e76cac499b908f042069b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b420b89e4b321ff31f2e76cac499b908f042069b",
      "patch": "@@ -1,3 +1,12 @@\n+2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* README (Testsuite Parameters): Add replay logging to\n+\tGDBSERVER_DEBUG.\n+\t(gdbserver,debug): Refer to GDBSERVER_DEBUG.\n+\t* lib/gdbserver-support.exp (gdbserver_start): Treat gdbserverdebug\n+\tas a comma separated list.\n+\t(gdb_debug_init): Override procedure.\n+\n 2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n \n \t* lib/gdb.exp (default_gdb_spawn): Call gdb_write_cmd_file."
    },
    {
      "sha": "98fc8d1b852ba2f4942d17abac8ba402f2675e1f",
      "filename": "gdb/testsuite/README",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b420b89e4b321ff31f2e76cac499b908f042069b/gdb/testsuite/README",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b420b89e4b321ff31f2e76cac499b908f042069b/gdb/testsuite/README",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/README?ref=b420b89e4b321ff31f2e76cac499b908f042069b",
      "patch": "@@ -304,14 +304,16 @@ For example, to turn on debugging for infrun and target, you can do:\n \n GDBSERVER_DEBUG\n \n-When set gdbserver debug is sent to the file gdbserver.debug in the test\n-output directory.  Valid values are:\n-\tdebug  - turn on gdbserver debug.\n-\tremote - turn on gdbserver remote debug.\n-\tall - turn on all the above debug options.\n-For example, to turn on all gdbserver debugging, you can do:\n+When set gdbserver debug is sent to the a file in the test output directory.\n+It should be set to a comma separated list of the following options:\n+\tdebug  - write gdbserver debug to gdbserver.debug.\n+\tremote - write gdbserver remote debug to gdbserver.debug.\n+\treplay - write a replay log to the file gdbserver.replay for use\n+\t\t with gdbreplay.\n+Alternatively, it can be set to \"all\" to turn on all the above\n+For example, to turn on gdbserver debugging, you can do:\n \n-\tmake check GDBSERVER_DEBUG=all\n+\tmake check GDBSERVER_DEBUG=\"debug,replay\"\n \n Race detection\n **************\n@@ -527,10 +529,7 @@ gdb,debug\n gdbserver,debug\n \n   When set gdbserver debug is sent to the file gdbserver.debug in the test\n-  output directory.  Valid values are:\n-  \"debug\"  - turn on gdbserver debug.\n-  \"remote\" - turn on gdbserver remote debug.\n-  \"all\" - turn on all the above debug options.\n+  output directory.  For valid values see the entry for GDBSERVER_DEBUG.\n \n Testsuite Organization\n **********************"
    },
    {
      "sha": "2ccc717ef608265e1945fc4376febcfb6f302227",
      "filename": "gdb/testsuite/lib/gdbserver-support.exp",
      "status": "modified",
      "additions": 49,
      "deletions": 10,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b420b89e4b321ff31f2e76cac499b908f042069b/gdb/testsuite/lib/gdbserver-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b420b89e4b321ff31f2e76cac499b908f042069b/gdb/testsuite/lib/gdbserver-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdbserver-support.exp?ref=b420b89e4b321ff31f2e76cac499b908f042069b",
      "patch": "@@ -293,13 +293,23 @@ proc gdbserver_start { options arguments } {\n \t# Enable debug if set.\n \tif [gdbserver_debug_enabled] {\n \t    global gdbserverdebug\n-\t    set debugfile [standard_output_file gdbserver.debug]\n-\t    if { $gdbserverdebug == \"debug\" } {\n-\t\tappend gdbserver_command \" --debug --debug-file=$debugfile\"\n-\t    } elseif { $gdbserverdebug == \"remote\" } {\n-\t\tappend gdbserver_command \" --remote-debug --debug-file=$debugfile\"\n-\t    } elseif { $gdbserverdebug == \"all\" } {\n-\t\tappend gdbserver_command \" --debug --remote-debug --debug-file=$debugfile\"\n+\t    set enabled 0\n+\t    foreach entry [split $gdbserverdebug ,] {\n+\t      switch -- $entry {\n+\t\t\"debug\" {\n+\t\t  append gdbserver_command \" --debug\"\n+\t\t  set enabled 1\n+\t\t}\n+\t\t\"remote\" {\n+\t\t  append gdbserver_command \" --remote-debug\"\n+\t\t  set enabled 1\n+\t\t}\n+\t      }\n+\t    }\n+\t    # Ensure debugfile is only added if something has been enabled\n+\t    if { $enabled } {\n+\t      set debugfile [standard_output_file gdbserver.debug]\n+\t      append gdbserver_command \" --debug-file=$debugfile\"\n \t    }\n \t}\n \n@@ -595,9 +605,13 @@ proc gdbserver_debug_enabled { } {\n \t}\n     }\n \n-    # Only return success on valid values.\n-    return [expr { $gdbserverdebug == \"debug\" || $gdbserverdebug == \"remote\"\n-\t\t   || $gdbserverdebug == \"all\" }]\n+    # Expand the all option\n+    if { $gdbserverdebug == \"all\" } {\n+      set gdbserverdebug \"debug,remote,replay\"\n+    }\n+\n+    # Ensure it is not empty.\n+    return [expr { $gdbserverdebug != \"\" }]\n }\n \n # Write the command line used to invocate gdbserver to the cmd file.\n@@ -608,3 +622,28 @@ proc gdbserver_write_cmd_file { cmdline } {\n     puts $cmd_file $cmdline\n     catch \"close $cmd_file\"\n }\n+\n+# Override gdb_debug_init so that we can set replay logging in GDB if required.\n+# Backup the original function so we can call it afterwards\n+\n+rename gdb_debug_init _gdb_debug_init\n+\n+proc gdb_debug_init { } {\n+    global gdbserverdebug\n+    global gdb_prompt\n+\n+    if [gdbserver_debug_enabled] {\n+      foreach entry [split $gdbserverdebug ,] {\n+\tif { $entry == \"replay\" } {\n+\t  set replayfile [standard_output_file_with_gdb_instance gdbserver.replay]\n+          send_gdb \"set remotelogfile $replayfile\\n\" optional\n+\t  gdb_expect 10 {\n+\t    -re \"$gdb_prompt $\" {}\n+\t  }\n+\t}\n+      }\n+    }\n+\n+    # Now call the standard debug init function\n+    _gdb_debug_init\n+}"
    }
  ]
}