{
  "sha": "4981807e06a7d274c22c25f342c3e37b29a2bc0c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDk4MTgwN2UwNmE3ZDI3NGMyMmMyNWYzNDJjM2UzN2IyOWEyYmMwYw==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-14T06:18:07Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-14T06:18:07Z"
    },
    "message": "gas: drop TC_ADDRESS_BYTES conditionals\n\nI've been repeatedly confused by, in particular, the .dc.a potable[]\nentry being conditional. Grepping in gas/config/ reveals only very few\ntargets actually #define-ing it. But as of 7be1c4891a20 the symbol is\nalways defined, so #ifdef-s are pointless (and, as said, potentially\nconfusing).\n\nAlso adjust documentation to reflect this.",
    "tree": {
      "sha": "b947a4bc63cccc402341e20f947c3cfd7a11f62e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b947a4bc63cccc402341e20f947c3cfd7a11f62e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4981807e06a7d274c22c25f342c3e37b29a2bc0c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4981807e06a7d274c22c25f342c3e37b29a2bc0c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4981807e06a7d274c22c25f342c3e37b29a2bc0c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4981807e06a7d274c22c25f342c3e37b29a2bc0c/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "92a3f613632902b6ccb2b285d6f21b89cc9e1f6b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/92a3f613632902b6ccb2b285d6f21b89cc9e1f6b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/92a3f613632902b6ccb2b285d6f21b89cc9e1f6b"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 8,
    "deletions": 5
  },
  "files": [
    {
      "sha": "493fde0e2185e8e174cad564c05b1e786158db76",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4981807e06a7d274c22c25f342c3e37b29a2bc0c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4981807e06a7d274c22c25f342c3e37b29a2bc0c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=4981807e06a7d274c22c25f342c3e37b29a2bc0c",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* doc/internals.texi (TC_ADDRESS_BYTES): Mention generic default.\n+\t* read.c (potable, cons_worker): Drop TC_ADDRESS_BYTES\n+\tconditional.\n+\n 2021-06-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/tc-i386.c (x86_cons): Handle GOT/PLT relocations only"
    },
    {
      "sha": "e47dec491aadf14bf86d16899c124a9484c7ce8d",
      "filename": "gas/doc/internals.texi",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4981807e06a7d274c22c25f342c3e37b29a2bc0c/gas/doc/internals.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4981807e06a7d274c22c25f342c3e37b29a2bc0c/gas/doc/internals.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/internals.texi?ref=4981807e06a7d274c22c25f342c3e37b29a2bc0c",
      "patch": "@@ -1106,7 +1106,8 @@ You may define this macro to generate a fixup for a data allocation pseudo-op.\n @item TC_ADDRESS_BYTES\n @cindex TC_ADDRESS_BYTES\n Define this macro to specify the number of bytes used to store an address.\n-Used to implement @code{dc.a}.  The target must have a reloc for this size.\n+Used to implement @code{dc.a}.  If not defined by the target, a default will\n+be supplied.  Targets are assumed to have a reloc for this size.\n \n @item TC_INIT_FIX_DATA (@var{fixp})\n @cindex TC_INIT_FIX_DATA"
    },
    {
      "sha": "380281dd403a248624d64eb143cc8071e695d329",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4981807e06a7d274c22c25f342c3e37b29a2bc0c/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4981807e06a7d274c22c25f342c3e37b29a2bc0c/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=4981807e06a7d274c22c25f342c3e37b29a2bc0c",
      "patch": "@@ -364,9 +364,7 @@ static const pseudo_typeS potable[] = {\n   {\"common.s\", s_mri_common, 1},\n   {\"data\", s_data, 0},\n   {\"dc\", cons, 2},\n-#ifdef TC_ADDRESS_BYTES\n   {\"dc.a\", cons, 0},\n-#endif\n   {\"dc.b\", cons, 1},\n   {\"dc.d\", float_cons, 'd'},\n   {\"dc.l\", cons, 4},\n@@ -4095,10 +4093,8 @@ cons_worker (int nbytes,\t/* 1=.byte, 2=.word, 4=.long.  */\n       return;\n     }\n \n-#ifdef TC_ADDRESS_BYTES\n   if (nbytes == 0)\n     nbytes = TC_ADDRESS_BYTES ();\n-#endif\n \n #ifdef md_cons_align\n   md_cons_align (nbytes);"
    }
  ]
}