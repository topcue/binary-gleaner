{
  "sha": "8e5cb9a54e156ba24a439aefa7b35e53b4cb0374",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGU1Y2I5YTU0ZTE1NmJhMjRhNDM5YWVmYTdiMzVlNTNiNGNiMDM3NA==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@novell.com",
      "date": "2019-06-25T10:02:23Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-06-25T10:02:23Z"
    },
    "message": "ld/plugins: avoid shadowing a C library symbol\n\nWith my (oldish) gcc/glibc combination I'm seeing\n\n.../ld/plugin.c: In function \u0091get_lto_kind\u0092:\n.../ld/plugin.c:664: error: declaration of \u0091index\u0092 shadows a global declaration\n/usr/include/string.h:487: error: shadowed declaration is here\n.../ld/plugin.c: In function \u0091get_lto_resolution\u0092:\n.../ld/plugin.c:685: error: declaration of \u0091index\u0092 shadows a global declaration\n/usr/include/string.h:487: error: shadowed declaration is here\n.../ld/plugin.c: In function \u0091get_lto_visibility\u0092:\n.../ld/plugin.c:711: error: declaration of \u0091index\u0092 shadows a global declaration\n/usr/include/string.h:487: error: shadowed declaration is here",
    "tree": {
      "sha": "82a1b310fa0a283f99bdd0726b19ce244449e4ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/82a1b310fa0a283f99bdd0726b19ce244449e4ea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374/comments",
  "author": null,
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ab9f654ca3f1222f63533aabfffc223ae1fc69dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab9f654ca3f1222f63533aabfffc223ae1fc69dc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ab9f654ca3f1222f63533aabfffc223ae1fc69dc"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 20,
    "deletions": 15
  },
  "files": [
    {
      "sha": "cb9ae84c63cbb700d42904190ebc74ea28efd12a",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=8e5cb9a54e156ba24a439aefa7b35e53b4cb0374",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* plugin.c (get_lto_kind, get_lto_resolution,\n+\tget_lto_visibility): Rename \"index\" to \"idx\".\n+\n 2019-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/24721"
    },
    {
      "sha": "0344da2df9e10a968f847439a0a10679e369a006",
      "filename": "ld/plugin.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374/ld/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e5cb9a54e156ba24a439aefa7b35e53b4cb0374/ld/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/plugin.c?ref=8e5cb9a54e156ba24a439aefa7b35e53b4cb0374",
      "patch": "@@ -659,9 +659,9 @@ is_visible_from_outside (struct ld_plugin_symbol *lsym,\n   return FALSE;\n }\n \n-/* Return LTO kind string name that corresponds to INDEX enum value.  */\n+/* Return LTO kind string name that corresponds to IDX enum value.  */\n static const char *\n-get_lto_kind (unsigned int index)\n+get_lto_kind (unsigned int idx)\n {\n   static char buffer[64];\n   const char *lto_kind_str[5] =\n@@ -673,16 +673,16 @@ get_lto_kind (unsigned int index)\n     \"COMMON\"\n   };\n \n-  if (index < ARRAY_SIZE (lto_kind_str))\n-    return lto_kind_str [index];\n+  if (idx < ARRAY_SIZE (lto_kind_str))\n+    return lto_kind_str [idx];\n \n-  sprintf (buffer, _(\"unknown LTO kind value %x\"), index);\n+  sprintf (buffer, _(\"unknown LTO kind value %x\"), idx);\n   return buffer;\n }\n \n-/* Return LTO resolution string name that corresponds to INDEX enum value.  */\n+/* Return LTO resolution string name that corresponds to IDX enum value.  */\n static const char *\n-get_lto_resolution (unsigned int index)\n+get_lto_resolution (unsigned int idx)\n {\n   static char buffer[64];\n   static const char *lto_resolution_str[10] =\n@@ -699,16 +699,16 @@ get_lto_resolution (unsigned int index)\n     \"PREVAILING_DEF_IRONLY_EXP\",\n   };\n \n-  if (index < ARRAY_SIZE (lto_resolution_str))\n-    return lto_resolution_str [index];\n+  if (idx < ARRAY_SIZE (lto_resolution_str))\n+    return lto_resolution_str [idx];\n \n-  sprintf (buffer, _(\"unknown LTO resolution value %x\"), index);\n+  sprintf (buffer, _(\"unknown LTO resolution value %x\"), idx);\n   return buffer;\n }\n \n-/* Return LTO visibility string name that corresponds to INDEX enum value.  */\n+/* Return LTO visibility string name that corresponds to IDX enum value.  */\n static const char *\n-get_lto_visibility (unsigned int index)\n+get_lto_visibility (unsigned int idx)\n {\n   static char buffer[64];\n   const char *lto_visibility_str[4] =\n@@ -719,10 +719,10 @@ get_lto_visibility (unsigned int index)\n     \"HIDDEN\"\n   };\n \n-  if (index < ARRAY_SIZE (lto_visibility_str))\n-    return lto_visibility_str [index];\n+  if (idx < ARRAY_SIZE (lto_visibility_str))\n+    return lto_visibility_str [idx];\n \n-  sprintf (buffer, _(\"unknown LTO visibility value %x\"), index);\n+  sprintf (buffer, _(\"unknown LTO visibility value %x\"), idx);\n   return buffer;\n }\n "
    }
  ]
}