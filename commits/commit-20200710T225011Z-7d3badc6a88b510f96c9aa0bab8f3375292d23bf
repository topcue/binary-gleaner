{
  "sha": "7d3badc6a88b510f96c9aa0bab8f3375292d23bf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2QzYmFkYzZhODhiNTEwZjk2YzlhYTBiYWI4ZjMzNzUyOTJkMjNiZg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-07-04T18:26:59Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-07-10T22:50:11Z"
    },
    "message": "Fix handle_no_resumed w/ multiple targets\n\nhandle_no_resumed is currently not considering multiple targets.\n\nSay you have two inferiors 1 and 2, each connected to a different\ntarget, A and B.\n\nNow say you set inferior 2 running, with \"continue &\".\n\nNow you select a thread of inferior 1, say thread 1.2, and continue in\nthe foreground.  All other threads of inferior 1 are left stopped.\nThread 1.2 exits, and thus target A has no other resumed thread, so it\nreports TARGET_WAITKIND_NO_RESUMED.\n\nAt this point, if both inferiors were running in the same target,\nhandle_no_resumed would realize that threads of inferior 2 are still\nexecuting, so the TARGET_WAITKIND_NO_RESUMED event should be ignored.\nBut because handle_no_resumed only walks the threads of the current\ntarget, it misses noticing that threads of inferior 2 are still\nexecuting.  The fix is just to walk over all threads of all targets.\n\nA testcase covering the use case above will be added in a following\npatch.  It can't be added yet because it depends on yet another fix to\nhandle_no_resumed not included here.\n\ngdb/ChangeLog:\n\n\tPR gdb/26199\n\t* infrun.c (handle_no_resumed): Handle multiple targets.",
    "tree": {
      "sha": "2bbeaa4b4c51763ef1139c841f08a9467b7355b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2bbeaa4b4c51763ef1139c841f08a9467b7355b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7d3badc6a88b510f96c9aa0bab8f3375292d23bf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d3badc6a88b510f96c9aa0bab8f3375292d23bf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7d3badc6a88b510f96c9aa0bab8f3375292d23bf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d3badc6a88b510f96c9aa0bab8f3375292d23bf/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "42bd97a6b1e5fa845af116ce52af1a8a3a58be7c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/42bd97a6b1e5fa845af116ce52af1a8a3a58be7c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/42bd97a6b1e5fa845af116ce52af1a8a3a58be7c"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 22,
    "deletions": 5
  },
  "files": [
    {
      "sha": "3fb80abb23ef6c02f39c31414102be470924395c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7d3badc6a88b510f96c9aa0bab8f3375292d23bf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7d3badc6a88b510f96c9aa0bab8f3375292d23bf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7d3badc6a88b510f96c9aa0bab8f3375292d23bf",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-10  Pedro Alves  <pedro@palves.net>\n+\n+\tPR gdb/26199\n+\t* infrun.c (handle_no_resumed): Handle multiple targets.\n+\n 2020-07-10  Pedro Alves  <pedro@palves.net>\n \n \tPR gdb/26199"
    },
    {
      "sha": "0f2f45a4d2d7773fcc2566a2ad537c2d97a3d025",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 17,
      "deletions": 5,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7d3badc6a88b510f96c9aa0bab8f3375292d23bf/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7d3badc6a88b510f96c9aa0bab8f3375292d23bf/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=7d3badc6a88b510f96c9aa0bab8f3375292d23bf",
      "patch": "@@ -5068,16 +5068,28 @@ handle_no_resumed (struct execution_control_state *ecs)\n      have resumed threads _now_.  In the example above, this removes\n      thread 3 from the thread list.  If thread 2 was re-resumed, we\n      ignore this event.  If we find no thread resumed, then we cancel\n-     the synchronous command show \"no unwaited-for \" to the user.  */\n-  update_thread_list ();\n+     the synchronous command and show \"no unwaited-for \" to the\n+     user.  */\n+\n+  {\n+    scoped_restore_current_thread restore_thread;\n+\n+    for (auto *target : all_non_exited_process_targets ())\n+      {\n+\tswitch_to_target_no_thread (target);\n+\tupdate_thread_list ();\n+      }\n+  }\n \n-  for (thread_info *thread : all_non_exited_threads (ecs->target))\n+  for (thread_info *thread : all_non_exited_threads ())\n     {\n       if (thread->executing\n \t  || thread->suspend.waitstatus_pending_p)\n \t{\n-\t  /* There were no unwaited-for children left in the target at\n-\t     some point, but there are now.  Just ignore.  */\n+\t  /* Either there were no unwaited-for children left in the\n+\t     target at some point, but there are now, or some target\n+\t     other than the eventing one has unwaited-for children\n+\t     left.  Just ignore.  */\n \t  if (debug_infrun)\n \t    fprintf_unfiltered (gdb_stdlog,\n \t\t\t\t\"infrun: TARGET_WAITKIND_NO_RESUMED \""
    }
  ]
}