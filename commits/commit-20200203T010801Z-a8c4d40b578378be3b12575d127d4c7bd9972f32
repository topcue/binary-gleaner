{
  "sha": "a8c4d40b578378be3b12575d127d4c7bd9972f32",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YThjNGQ0MGI1NzgzNzhiZTNiMTI1NzVkMTI3ZDRjN2JkOTk3MmYzMg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-02-03T01:07:51Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-02-03T01:08:01Z"
    },
    "message": "ELF: Add support for unique section ID to assembler\n\nClang's integrated assembler supports multiple section with the same\nname:\n\n\t.section .text,\"ax\",@progbits,unique,1\n\tnop\n\t.section .text,\"ax\",@progbits,unique,2\n\tnop\n\n\"unique,N\" assigns the number, N, as the section ID, to a section.  The\nvalid values of the section ID are between 0 and 4294967295.  It can be\nused to distinguish different sections with the same section name.\n\nThis is useful with -fno-unique-section-names -ffunction-sections.\n-ffunction-sections by default generates .text.foo, .text.bar, etc.\nUsing the same string can save lots of space in .strtab.\n\nThis patch adds section_id to bfd_section and reuses the linker\ninternal bit in BFD section flags, SEC_LINKER_CREATED, for assmebler\ninternal use to mark valid section_id.  It also updates objdump to\ncompare section pointers if 2 sections comes from the same file since\n2 different sections can have the same section name.\n\nbfd/\n\n\tPR gas/25380\n\t* bfd-in2.h: Regenerated.\n\t* ecoff.c (bfd_debug_section): Add section_id.\n\t* section.c (bfd_section): Add section_id.\n\t(SEC_ASSEMBLER_SECTION_ID): New.\n\t(BFD_FAKE_SECTION): Add section_id.\n\nbinutils/\n\n\tPR gas/25380\n\t* objdump.c (sym_ok): Return FALSE if 2 sections are in the\n\tsame file with different section pointers.\n\ngas/\n\n\tPR gas/25380\n\t* config/obj-elf.c (section_match): Removed.\n\t(get_section): Also match SEC_ASSEMBLER_SECTION_ID and\n\tsection_id.\n\t(obj_elf_change_section): Replace info and group_name arguments\n\twith match_p.  Also update the section ID and flags from match_p.\n\t(obj_elf_section): Handle \"unique,N\".  Update call to\n\tobj_elf_change_section.\n\t* config/obj-elf.h (elf_section_match): New.\n\t(obj_elf_change_section): Updated.\n\t* config/tc-arm.c (start_unwind_section): Update call to\n\tobj_elf_change_section.\n\t* config/tc-ia64.c (obj_elf_vms_common): Likewise.\n\t* config/tc-microblaze.c (microblaze_s_data): Likewise.\n\t(microblaze_s_sdata): Likewise.\n\t(microblaze_s_rdata): Likewise.\n\t(microblaze_s_bss): Likewise.\n\t* config/tc-mips.c (s_change_section): Likewise.\n\t* config/tc-msp430.c (msp430_profiler): Likewise.\n\t* config/tc-rx.c (parse_rx_section): Likewise.\n\t* config/tc-tic6x.c (tic6x_start_unwind_section): Likewise.\n\t* doc/as.texi: Document \"unique,N\" in .section directive.\n\t* testsuite/gas/elf/elf.exp: Run \"unique,N\" tests.\n\t* testsuite/gas/elf/section15.d: New file.\n\t* testsuite/gas/elf/section15.s: Likewise.\n\t* testsuite/gas/elf/section16.s: Likewise.\n\t* testsuite/gas/elf/section16a.d: Likewise.\n\t* testsuite/gas/elf/section16b.d: Likewise.\n\t* testsuite/gas/elf/section17.d: Likewise.\n\t* testsuite/gas/elf/section17.l: Likewise.\n\t* testsuite/gas/elf/section17.s: Likewise.\n\t* testsuite/gas/i386/unique.d: Likewise.\n\t* testsuite/gas/i386/unique.s: Likewise.\n\t* testsuite/gas/i386/x86-64-unique.d: Likewise.\n\t* testsuite/gas/i386/i386.exp: Run unique and x86-64-unique.\n\nld/\n\n\tPR gas/25380\n\t* testsuite/ld-i386/pr22001-1c.S: Use \"unique,N\" in .section\n\tdirectives.\n\t* testsuite/ld-i386/tls-gd1.S: Likewise.\n\t* testsuite/ld-x86-64/pr21481b.S: Likewise.",
    "tree": {
      "sha": "fa3a722b3b535806f0f535a4c81c30f97da6b7ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fa3a722b3b535806f0f535a4c81c30f97da6b7ba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8c4d40b578378be3b12575d127d4c7bd9972f32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8c4d40b578378be3b12575d127d4c7bd9972f32",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8c4d40b578378be3b12575d127d4c7bd9972f32",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8c4d40b578378be3b12575d127d4c7bd9972f32/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0f8b5e560e43ca0148162d30b83411b2107b27e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f8b5e560e43ca0148162d30b83411b2107b27e5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0f8b5e560e43ca0148162d30b83411b2107b27e5"
    }
  ],
  "stats": {
    "total": 615,
    "additions": 551,
    "deletions": 64
  },
  "files": [
    {
      "sha": "f8e7dfaf94f2fe50fc870070d2388d35ac3dcd5d",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1,3 +1,12 @@\n+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25380\n+\t* bfd-in2.h: Regenerated.\n+\t* ecoff.c (bfd_debug_section): Add section_id.\n+\t* section.c (bfd_section): Add section_id.\n+\t(SEC_ASSEMBLER_SECTION_ID): New.\n+\t(BFD_FAKE_SECTION): Add section_id.\n+\n 2020-02-01  Nick Clifton  <nickc@redhat.com>\n \n \t* config.bfd: Move the c30-aout and tic30-aout targets onto the"
    },
    {
      "sha": "c890520ccb1cfc66a5f140f8d0f2f49cf55b1adb",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -795,6 +795,10 @@ typedef struct bfd_section\n   /* A unique sequence number.  */\n   unsigned int id;\n \n+  /* A unique section number which can be used by assembler to\n+     distinguish different sections with the same section name.  */\n+  unsigned int section_id;\n+\n   /* Which section in the bfd; 0..n-1 as sections are created in a bfd.  */\n   unsigned int index;\n \n@@ -928,6 +932,10 @@ typedef struct bfd_section\n      else up the line will take care of it later.  */\n #define SEC_LINKER_CREATED           0x100000\n \n+  /* This section contains a section ID to distinguish different\n+     sections withe the same section name.  */\n+#define SEC_ASSEMBLER_SECTION_ID     0x100000\n+\n   /* This section should not be subject to garbage collection.\n      Also set to inform the linker that this section should not be\n      listed in the link map as discarded.  */\n@@ -1329,8 +1337,8 @@ discarded_section (const asection *sec)\n }\n \n #define BFD_FAKE_SECTION(SEC, SYM, NAME, IDX, FLAGS)                   \\\n-  /* name, id,  index, next, prev, flags, user_set_vma,            */  \\\n-  {  NAME, IDX, 0,     NULL, NULL, FLAGS, 0,                           \\\n+  /* name, id,  section_id, index, next, prev, flags, user_set_vma, */ \\\n+  {  NAME, IDX, 0,          0,     NULL, NULL, FLAGS, 0,               \\\n                                                                        \\\n   /* linker_mark, linker_has_input, gc_mark, decompress_status,    */  \\\n      0,           0,                1,       0,                        \\"
    },
    {
      "sha": "050fd7b508174f8e50a58e7aec1fdd2d03a4e54d",
      "filename": "bfd/ecoff.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/ecoff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/ecoff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ecoff.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -52,8 +52,10 @@\n /* This stuff is somewhat copied from coffcode.h.  */\n static asection bfd_debug_section =\n {\n-  /* name,\tid,  index, next, prev, flags, user_set_vma,\t   */\n-     \"*DEBUG*\", 0,   0,\t    NULL, NULL, 0,     0,\n+  /* name,\tid,  section_id, index, next, prev, flags,\t  */\n+     \"*DEBUG*\", 0,   0,\t\t 0,\tNULL, NULL, 0,\n+  /* user_set_vma,\t   */\n+     0,\n   /* linker_mark, linker_has_input, gc_mark, compress_status,\t   */\n      0,\t\t  0,\t\t    1,\t     0,\n   /* segment_mark, sec_info_type, use_rela_p,\t\t\t   */"
    },
    {
      "sha": "161ed33edc47d8e96929fb6e00a195b96b2f3010",
      "filename": "bfd/section.c",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/section.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/bfd/section.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/section.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -154,6 +154,10 @@ CODE_FRAGMENT\n .  {* A unique sequence number.  *}\n .  unsigned int id;\n .\n+.  {* A unique section number which can be used by assembler to\n+.     distinguish different sections with the same section name.  *}\n+.  unsigned int section_id;\n+.\n .  {* Which section in the bfd; 0..n-1 as sections are created in a bfd.  *}\n .  unsigned int index;\n .\n@@ -287,6 +291,10 @@ CODE_FRAGMENT\n .     else up the line will take care of it later.  *}\n .#define SEC_LINKER_CREATED           0x100000\n .\n+.  {* This section contains a section ID to distinguish different\n+.     sections withe the same section name.  *}\n+.#define SEC_ASSEMBLER_SECTION_ID     0x100000\n+.\n .  {* This section should not be subject to garbage collection.\n .     Also set to inform the linker that this section should not be\n .     listed in the link map as discarded.  *}\n@@ -688,8 +696,8 @@ CODE_FRAGMENT\n .}\n .\n .#define BFD_FAKE_SECTION(SEC, SYM, NAME, IDX, FLAGS)\t\t\t\\\n-.  {* name, id,  index, next, prev, flags, user_set_vma,            *}\t\\\n-.  {  NAME, IDX, 0,     NULL, NULL, FLAGS, 0,\t\t\t\t\\\n+.  {* name, id,  section_id, index, next, prev, flags, user_set_vma, *}\t\\\n+.  {  NAME, IDX, 0,          0,     NULL, NULL, FLAGS, 0,\t\t\\\n .\t\t\t\t\t\t\t\t\t\\\n .  {* linker_mark, linker_has_input, gc_mark, decompress_status,    *}\t\\\n .     0,           0,                1,       0,\t\t\t\\"
    },
    {
      "sha": "a7fd43176b51dae515564d98aa4267d56a8c65ca",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1,3 +1,9 @@\n+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25380\n+\t* objdump.c (sym_ok): Return FALSE if 2 sections are in the\n+\tsame file with different section pointers.\n+\n 2020-02-01  Nick Clifton  <nickc@redhat.com>\n \n \t* README-how-to-make-a-release: Update with more details on the"
    },
    {
      "sha": "17c0637b3501030c440c8cd71c23e4291872273e",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1065,6 +1065,13 @@ sym_ok (bfd_boolean               want_section,\n {\n   if (want_section)\n     {\n+      /* NB: An object file can have different sections with the same\n+         section name.  Compare compare section pointers if they have\n+\t the same owner.  */\n+      if (sorted_syms[place]->section->owner == sec->owner\n+\t  && sorted_syms[place]->section != sec)\n+\treturn FALSE;\n+\n       /* Note - we cannot just compare section pointers because they could\n \t be different, but the same...  Ie the symbol that we are trying to\n \t find could have come from a separate debug info file.  Under such"
    },
    {
      "sha": "b8c886421e88ece73b9d29c91fe4705c388d3ac4",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1,3 +1,41 @@\n+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25380\n+\t* config/obj-elf.c (section_match): Removed.\n+\t(get_section): Also match SEC_ASSEMBLER_SECTION_ID and\n+\tsection_id.\n+\t(obj_elf_change_section): Replace info and group_name arguments\n+\twith match_p.  Also update the section ID and flags from match_p.\n+\t(obj_elf_section): Handle \"unique,N\".  Update call to\n+\tobj_elf_change_section.\n+\t* config/obj-elf.h (elf_section_match): New.\n+\t(obj_elf_change_section): Updated.\n+\t* config/tc-arm.c (start_unwind_section): Update call to\n+\tobj_elf_change_section.\n+\t* config/tc-ia64.c (obj_elf_vms_common): Likewise.\n+\t* config/tc-microblaze.c (microblaze_s_data): Likewise.\n+\t(microblaze_s_sdata): Likewise.\n+\t(microblaze_s_rdata): Likewise.\n+\t(microblaze_s_bss): Likewise.\n+\t* config/tc-mips.c (s_change_section): Likewise.\n+\t* config/tc-msp430.c (msp430_profiler): Likewise.\n+\t* config/tc-rx.c (parse_rx_section): Likewise.\n+\t* config/tc-tic6x.c (tic6x_start_unwind_section): Likewise.\n+\t* doc/as.texi: Document \"unique,N\" in .section directive.\n+\t* testsuite/gas/elf/elf.exp: Run \"unique,N\" tests.\n+\t* testsuite/gas/elf/section15.d: New file.\n+\t* testsuite/gas/elf/section15.s: Likewise.\n+\t* testsuite/gas/elf/section16.s: Likewise.\n+\t* testsuite/gas/elf/section16a.d: Likewise.\n+\t* testsuite/gas/elf/section16b.d: Likewise.\n+\t* testsuite/gas/elf/section17.d: Likewise.\n+\t* testsuite/gas/elf/section17.l: Likewise.\n+\t* testsuite/gas/elf/section17.s: Likewise.\n+\t* testsuite/gas/i386/unique.d: Likewise.\n+\t* testsuite/gas/i386/unique.s: Likewise.\n+\t* testsuite/gas/i386/x86-64-unique.d: Likewise.\n+\t* testsuite/gas/i386/i386.exp: Run unique and x86-64-unique.\n+\n 2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/gas/elf/section13.s: Replace @nobits with %nobits."
    },
    {
      "sha": "2958490c323bb60b6c8dd04e3b35b6eaac8b744c",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 92,
      "deletions": 29,
      "changes": 121,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -518,22 +518,18 @@ struct section_stack\n \n static struct section_stack *section_stack;\n \n-/* Match both section group name and the sh_info field.  */\n-struct section_match\n-{\n-  const char *group_name;\n-  unsigned int info;\n-};\n-\n static bfd_boolean\n get_section (bfd *abfd ATTRIBUTE_UNUSED, asection *sec, void *inf)\n {\n-  struct section_match *match = (struct section_match *) inf;\n+  struct elf_section_match *match = (struct elf_section_match *) inf;\n   const char *gname = match->group_name;\n   const char *group_name = elf_group_name (sec);\n   unsigned int info = elf_section_data (sec)->this_hdr.sh_info;\n \n   return (info == match->info\n+\t  && ((bfd_section_flags (sec) & SEC_ASSEMBLER_SECTION_ID)\n+\t       == (match->flags & SEC_ASSEMBLER_SECTION_ID))\n+\t  && sec->section_id == match->section_id\n \t  && (group_name == gname\n \t      || (group_name != NULL\n \t\t  && gname != NULL\n@@ -561,10 +557,9 @@ get_section (bfd *abfd ATTRIBUTE_UNUSED, asection *sec, void *inf)\n void\n obj_elf_change_section (const char *name,\n \t\t\tunsigned int type,\n-\t\t\tunsigned int info,\n \t\t\tbfd_vma attr,\n \t\t\tint entsize,\n-\t\t\tconst char *group_name,\n+\t\t\tstruct elf_section_match *match_p,\n \t\t\tint linkonce,\n \t\t\tint push)\n {\n@@ -573,7 +568,12 @@ obj_elf_change_section (const char *name,\n   flagword flags;\n   const struct elf_backend_data *bed;\n   const struct bfd_elf_special_section *ssect;\n-  struct section_match match;\n+\n+  if (match_p == NULL)\n+    {\n+      static struct elf_section_match unused_match;\n+      match_p = &unused_match;\n+    }\n \n #ifdef md_flush_pending_output\n   md_flush_pending_output ();\n@@ -594,10 +594,8 @@ obj_elf_change_section (const char *name,\n   previous_section = now_seg;\n   previous_subsection = now_subseg;\n \n-  match.group_name = group_name;\n-  match.info = info;\n   old_sec = bfd_get_section_by_name_if (stdoutput, name, get_section,\n-\t\t\t\t\t(void *) &match);\n+\t\t\t\t\t(void *) match_p);\n   if (old_sec)\n     {\n       sec = old_sec;\n@@ -696,7 +694,7 @@ obj_elf_change_section (const char *name,\n #endif\n \t  else\n \t    {\n-\t      if (group_name == NULL)\n+\t      if (match_p->group_name == NULL)\n \t\tas_warn (_(\"setting incorrect section attributes for %s\"),\n \t\t\t name);\n \t      override = TRUE;\n@@ -732,16 +730,20 @@ obj_elf_change_section (const char *name,\n \ttype = bfd_elf_get_default_section_type (flags);\n       elf_section_type (sec) = type;\n       elf_section_flags (sec) = attr;\n-      elf_section_data (sec)->this_hdr.sh_info = info;\n+      elf_section_data (sec)->this_hdr.sh_info = match_p->info;\n \n       /* Prevent SEC_HAS_CONTENTS from being inadvertently set.  */\n       if (type == SHT_NOBITS)\n \tseg_info (sec)->bss = 1;\n \n+      /* Set the section ID and flags.  */\n+      sec->section_id = match_p->section_id;\n+      flags |= match_p->flags;\n+\n       bfd_set_section_flags (sec, flags);\n       if (flags & SEC_MERGE)\n \tsec->entsize = entsize;\n-      elf_group_name (sec) = group_name;\n+      elf_group_name (sec) = match_p->group_name;\n \n       /* Add a symbol for this section to the symbol table.  */\n       secsym = symbol_find (name);\n@@ -1006,15 +1008,15 @@ obj_elf_section_name (void)\n void\n obj_elf_section (int push)\n {\n-  const char *name, *group_name;\n+  const char *name;\n   char *beg;\n   int type, dummy;\n   bfd_vma attr;\n   bfd_vma gnu_attr;\n   int entsize;\n   int linkonce;\n   subsegT new_subsection = -1;\n-  unsigned int info = 0;\n+  struct elf_section_match match;\n \n   if (flag_mri)\n     {\n@@ -1040,6 +1042,8 @@ obj_elf_section (int push)\n   if (name == NULL)\n     return;\n \n+  memset (&match, 0, sizeof (match));\n+\n   symbolS * sym;\n   if ((sym = symbol_find (name)) != NULL\n       && ! symbol_section_p (sym)\n@@ -1054,7 +1058,6 @@ obj_elf_section (int push)\n   type = SHT_NULL;\n   attr = 0;\n   gnu_attr = 0;\n-  group_name = NULL;\n   entsize = 0;\n   linkonce = 0;\n \n@@ -1159,8 +1162,8 @@ obj_elf_section (int push)\n \t  if ((attr & SHF_GROUP) != 0 && *input_line_pointer == ',')\n \t    {\n \t      ++input_line_pointer;\n-\t      group_name = obj_elf_section_name ();\n-\t      if (group_name == NULL)\n+\t      match.group_name = obj_elf_section_name ();\n+\t      if (match.group_name == NULL)\n \t\tattr &= ~SHF_GROUP;\n \t      else if (*input_line_pointer == ',')\n \t\t{\n@@ -1186,26 +1189,86 @@ obj_elf_section (int push)\n \t      const char *now_group = elf_group_name (now_seg);\n \t      if (now_group != NULL)\n \t\t{\n-\t\t  group_name = xstrdup (now_group);\n+\t\t  match.group_name = xstrdup (now_group);\n \t\t  linkonce = (now_seg->flags & SEC_LINK_ONCE) != 0;\n \t\t}\n \t    }\n \n \t  if ((gnu_attr & SHF_GNU_MBIND) != 0 && *input_line_pointer == ',')\n \t    {\n+\t      char *save = input_line_pointer;\n \t      ++input_line_pointer;\n \t      SKIP_WHITESPACE ();\n \t      if (ISDIGIT (* input_line_pointer))\n \t\t{\n \t\t  char *t = input_line_pointer;\n-\t\t  info = strtoul (input_line_pointer,\n-\t\t\t\t  &input_line_pointer, 0);\n-\t\t  if (info == (unsigned int) -1)\n+\t\t  match.info = strtoul (input_line_pointer,\n+\t\t\t\t\t&input_line_pointer, 0);\n+\t\t  if (match.info == (unsigned int) -1)\n \t\t    {\n \t\t      as_warn (_(\"unsupported mbind section info: %s\"), t);\n-\t\t      info = 0;\n+\t\t      match.info = 0;\n \t\t    }\n \t\t}\n+\t      else\n+\t\tinput_line_pointer = save;\n+\t    }\n+\n+\t  if (*input_line_pointer == ',')\n+\t    {\n+\t      char *save = input_line_pointer;\n+\t      ++input_line_pointer;\n+\t      SKIP_WHITESPACE ();\n+\t      if (strncmp (input_line_pointer, \"unique\", 6) == 0)\n+\t\t{\n+\t\t  input_line_pointer += 6;\n+\t\t  SKIP_WHITESPACE ();\n+\t\t  if (*input_line_pointer == ',')\n+\t\t    {\n+\t\t      ++input_line_pointer;\n+\t\t      SKIP_WHITESPACE ();\n+\t\t      if (ISDIGIT (* input_line_pointer))\n+\t\t\t{\n+\t\t\t  bfd_vma id;\n+\t\t\t  bfd_boolean overflow;\n+\t\t\t  char *t = input_line_pointer;\n+\t\t\t  if (sizeof (bfd_vma) <= sizeof (unsigned long))\n+\t\t\t    {\n+\t\t\t      errno = 0;\n+\t\t\t      id = strtoul (input_line_pointer,\n+\t\t\t\t\t    &input_line_pointer, 0);\n+\t\t\t      overflow = (id == (unsigned long) -1\n+\t\t\t\t\t  && errno == ERANGE);\n+\t\t\t    }\n+\t\t\t  else\n+\t\t\t    {\n+\t\t\t      id = bfd_scan_vma\n+\t\t\t\t(input_line_pointer,\n+\t\t\t\t (const char **) &input_line_pointer, 0);\n+\t\t\t      overflow = id == ~(bfd_vma) 0;\n+\t\t\t    }\n+\t\t\t  if (overflow || id > (unsigned int) -1)\n+\t\t\t    {\n+\t\t\t      char *linefeed, saved_char = 0;\n+\t\t\t      if ((linefeed = strchr (t, '\\n')) != NULL)\n+\t\t\t\t{\n+\t\t\t\t  saved_char = *linefeed;\n+\t\t\t\t  *linefeed = '\\0';\n+\t\t\t\t}\n+\t\t\t      as_bad (_(\"unsupported section id: %s\"), t);\n+\t\t\t      if (saved_char)\n+\t\t\t\t*linefeed = saved_char;\n+\t\t\t    }\n+\t\t\t  else\n+\t\t\t    {\n+\t\t\t      match.section_id = id;\n+\t\t\t      match.flags |= SEC_ASSEMBLER_SECTION_ID;\n+\t\t\t    }\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\t      else\n+\t\tinput_line_pointer = save;\n \t    }\n \t}\n       else\n@@ -1238,8 +1301,8 @@ obj_elf_section (int push)\n done:\n   demand_empty_rest_of_line ();\n \n-  obj_elf_change_section (name, type, info, attr, entsize, group_name,\n-\t\t\t  linkonce, push);\n+  obj_elf_change_section (name, type, attr, entsize, &match, linkonce,\n+\t\t\t  push);\n \n   if ((gnu_attr & SHF_GNU_MBIND) != 0)\n     {"
    },
    {
      "sha": "7cfcc254823da630a8c36e92827acd1221c000ad",
      "filename": "gas/config/obj-elf.h",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/obj-elf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/obj-elf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.h?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -77,6 +77,16 @@ struct elf_obj_sy\n #endif\n };\n \n+/* Match section group name, the sh_info field and the section_id\n+   field.  */\n+struct elf_section_match\n+{\n+  const char *group_name;\n+  unsigned int info;\n+  unsigned int section_id;\n+  flagword flags;\n+};\n+\n #define OBJ_SYMFIELD_TYPE struct elf_obj_sy\n \n #ifndef FALSE\n@@ -162,7 +172,7 @@ extern void obj_elf_common (int);\n extern void obj_elf_data (int);\n extern void obj_elf_text (int);\n extern void obj_elf_change_section\n-  (const char *, unsigned int, unsigned int, bfd_vma, int, const char *,\n+  (const char *, unsigned int, bfd_vma, int, struct elf_section_match *,\n    int, int);\n extern void obj_elf_vtable_inherit (int);\n extern void obj_elf_vtable_entry (int);"
    },
    {
      "sha": "26a76f3fe1222cc22a3abd03412a3f303f67a112",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -27011,7 +27011,7 @@ start_unwind_section (const segT text_seg, int idx)\n   const char * text_name;\n   const char * prefix;\n   const char * prefix_once;\n-  const char * group_name;\n+  struct elf_section_match match;\n   char * sec_name;\n   int type;\n   int flags;\n@@ -27045,13 +27045,13 @@ start_unwind_section (const segT text_seg, int idx)\n \n   flags = SHF_ALLOC;\n   linkonce = 0;\n-  group_name = 0;\n+  memset (&match, 0, sizeof (match));\n \n   /* Handle COMDAT group.  */\n   if (prefix != prefix_once && (text_seg->flags & SEC_LINK_ONCE) != 0)\n     {\n-      group_name = elf_group_name (text_seg);\n-      if (group_name == NULL)\n+      match.group_name = elf_group_name (text_seg);\n+      if (match.group_name == NULL)\n \t{\n \t  as_bad (_(\"Group section `%s' has no group signature\"),\n \t\t  segment_name (text_seg));\n@@ -27062,7 +27062,7 @@ start_unwind_section (const segT text_seg, int idx)\n       linkonce = 1;\n     }\n \n-  obj_elf_change_section (sec_name, type, 0, flags, 0, group_name,\n+  obj_elf_change_section (sec_name, type, flags, 0, &match,\n \t\t\t  linkonce, 0);\n \n   /* Set the section link for index tables.  */"
    },
    {
      "sha": "f908ba51fa30c893a918780515d5d6eab7180a30",
      "filename": "gas/config/tc-ia64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ia64.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1139,7 +1139,7 @@ obj_elf_vms_common (int ignore ATTRIBUTE_UNUSED)\n   demand_empty_rest_of_line ();\n \n   obj_elf_change_section\n-    (sec_name, SHT_NOBITS, 0,\n+    (sec_name, SHT_NOBITS,\n      SHF_ALLOC | SHF_WRITE | SHF_IA_64_VMS_OVERLAID | SHF_IA_64_VMS_GLOBAL,\n      0, NULL, 1, 0);\n "
    },
    {
      "sha": "24ea35824473c5b059ada7fb8190ca66a12c0adf",
      "filename": "gas/config/tc-microblaze.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-microblaze.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-microblaze.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-microblaze.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -149,7 +149,7 @@ static void\n microblaze_s_data (int ignore ATTRIBUTE_UNUSED)\n {\n #ifdef OBJ_ELF\n-  obj_elf_change_section (\".data\", SHT_PROGBITS, 0, SHF_ALLOC+SHF_WRITE,\n+  obj_elf_change_section (\".data\", SHT_PROGBITS, SHF_ALLOC+SHF_WRITE,\n \t\t\t  0, 0, 0, 0);\n #else\n   s_data (ignore);\n@@ -162,7 +162,7 @@ static void\n microblaze_s_sdata (int ignore ATTRIBUTE_UNUSED)\n {\n #ifdef OBJ_ELF\n-  obj_elf_change_section (\".sdata\", SHT_PROGBITS, 0, SHF_ALLOC+SHF_WRITE,\n+  obj_elf_change_section (\".sdata\", SHT_PROGBITS, SHF_ALLOC+SHF_WRITE,\n \t\t\t  0, 0, 0, 0);\n #else\n   s_data (ignore);\n@@ -281,15 +281,15 @@ microblaze_s_rdata (int localvar)\n   if (localvar == 0)\n     {\n       /* rodata.  */\n-      obj_elf_change_section (\".rodata\", SHT_PROGBITS, 0, SHF_ALLOC,\n+      obj_elf_change_section (\".rodata\", SHT_PROGBITS, SHF_ALLOC,\n \t\t\t      0, 0, 0, 0);\n       if (rodata_segment == 0)\n \trodata_segment = subseg_new (\".rodata\", 0);\n     }\n   else\n     {\n       /* 1 .sdata2.  */\n-      obj_elf_change_section (\".sdata2\", SHT_PROGBITS, 0, SHF_ALLOC,\n+      obj_elf_change_section (\".sdata2\", SHT_PROGBITS, SHF_ALLOC,\n \t\t\t      0, 0, 0, 0);\n     }\n #else\n@@ -302,12 +302,12 @@ microblaze_s_bss (int localvar)\n {\n #ifdef OBJ_ELF\n   if (localvar == 0) /* bss.  */\n-    obj_elf_change_section (\".bss\", SHT_NOBITS, 0, SHF_ALLOC+SHF_WRITE,\n+    obj_elf_change_section (\".bss\", SHT_NOBITS, SHF_ALLOC+SHF_WRITE,\n \t\t\t    0, 0, 0, 0);\n   else if (localvar == 1)\n     {\n       /* sbss.  */\n-      obj_elf_change_section (\".sbss\", SHT_NOBITS, 0, SHF_ALLOC+SHF_WRITE,\n+      obj_elf_change_section (\".sbss\", SHT_NOBITS, SHF_ALLOC+SHF_WRITE,\n \t\t\t      0, 0, 0, 0);\n       if (sbss_segment == 0)\n \tsbss_segment = subseg_new (\".sbss\", 0);"
    },
    {
      "sha": "6244d8ac091c562ddb5fdcf8611095d2790a343b",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -16418,7 +16418,7 @@ s_change_section (int ignore ATTRIBUTE_UNUSED)\n   if (section_type == SHT_MIPS_DWARF)\n     section_type = SHT_PROGBITS;\n \n-  obj_elf_change_section (section_name, section_type, 0, section_flag,\n+  obj_elf_change_section (section_name, section_type, section_flag,\n \t\t\t  section_entry_size, 0, 0, 0);\n \n   if (now_seg->name != section_name)"
    },
    {
      "sha": "840e5137ae72de2becd2ca09f78f991194b7eee8",
      "filename": "gas/config/tc-msp430.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-msp430.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-msp430.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-msp430.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -620,7 +620,7 @@ msp430_profiler (int dummy ATTRIBUTE_UNUSED)\n   subseg = now_subseg;\n \n   /* Now go to .profiler section.  */\n-  obj_elf_change_section (\".profiler\", SHT_PROGBITS, 0, 0, 0, 0, 0, 0);\n+  obj_elf_change_section (\".profiler\", SHT_PROGBITS, 0, 0, 0, 0, 0);\n \n   /* Save flags.  */\n   emit_expr (& exp, 2);"
    },
    {
      "sha": "febdb5ab956cf320615b8f6faa4055fb89a2197c",
      "filename": "gas/config/tc-rx.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-rx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-rx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-rx.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -491,7 +491,7 @@ parse_rx_section (char * name)\n       else\n \ttype = SHT_NOBITS;\n \n-      obj_elf_change_section (name, type, 0, attr, 0, NULL, FALSE, FALSE);\n+      obj_elf_change_section (name, type, attr, 0, NULL, FALSE, FALSE);\n     }\n   else /* Try not to redefine a section, especially B_1.  */\n     {\n@@ -506,7 +506,7 @@ parse_rx_section (char * name)\n \t| ((flags & SEC_STRINGS) ? SHF_STRINGS : 0)\n \t| ((flags & SEC_THREAD_LOCAL) ? SHF_TLS : 0);\n \n-      obj_elf_change_section (name, type, 0, attr, 0, NULL, FALSE, FALSE);\n+      obj_elf_change_section (name, type, attr, 0, NULL, FALSE, FALSE);\n     }\n \n   bfd_set_section_alignment (now_seg, align);"
    },
    {
      "sha": "9f5b24e648d16d3124517e46927fb205afd89bc3",
      "filename": "gas/config/tc-tic6x.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-tic6x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/config/tc-tic6x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic6x.c?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -4606,7 +4606,7 @@ tic6x_start_unwind_section (const segT text_seg, int idx)\n   const char * text_name;\n   const char * prefix;\n   const char * prefix_once;\n-  const char * group_name;\n+  struct elf_section_match match;\n   size_t prefix_len;\n   size_t text_len;\n   char * sec_name;\n@@ -4649,13 +4649,13 @@ tic6x_start_unwind_section (const segT text_seg, int idx)\n \n   flags = SHF_ALLOC;\n   linkonce = 0;\n-  group_name = 0;\n+  memset (&match, 0, sizeof (match));\n \n   /* Handle COMDAT group.  */\n   if (prefix != prefix_once && (text_seg->flags & SEC_LINK_ONCE) != 0)\n     {\n-      group_name = elf_group_name (text_seg);\n-      if (group_name == NULL)\n+      match.group_name = elf_group_name (text_seg);\n+      if (match.group_name == NULL)\n \t{\n \t  as_bad (_(\"group section `%s' has no group signature\"),\n \t\t  segment_name (text_seg));\n@@ -4666,7 +4666,7 @@ tic6x_start_unwind_section (const segT text_seg, int idx)\n       linkonce = 1;\n     }\n \n-  obj_elf_change_section (sec_name, type, 0, flags, 0, group_name,\n+  obj_elf_change_section (sec_name, type, flags, 0, &match,\n \t\t\t  linkonce, 0);\n \n   /* Set the section link for index tables.  */"
    },
    {
      "sha": "152bbfdd009d24440ae3dc4b4384c5f389a4124b",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -6709,6 +6709,18 @@ this directive.  If that section used @code{G}, then the new section will use\n @code{G} with those same @var{GroupName} and @var{linkage} fields implicitly.\n If not, then the @code{?} symbol has no effect.\n \n+The optional @var{unique,@code{<number>}} argument must come last.  It\n+assigns @var{@code{<number>}} as a unique section ID to distinguish\n+different sections with the same section name like these:\n+\n+@smallexample\n+.section @var{name},\"@var{flags}\",@@@var{type},@var{unique,@code{<number>}}\n+.section @var{name},\"@var{flags}\"G,@@@var{type},@var{GroupName},[@var{linkage}],@var{unique,@code{<number>}}\n+.section @var{name},\"@var{flags}\"MG,@@@var{type},@var{entsize},@var{GroupName}[,@var{linkage}],@var{unique,@code{<number>}}\n+@end smallexample\n+\n+The valid values of @var{@code{<number>}} are between 0 and 4294967295.\n+\n If no flags are specified, the default flags depend upon the section name.  If\n the section name is not recognized, the default will be for the section to have\n none of the above flags: it will not be allocated in memory, nor writable, nor"
    },
    {
      "sha": "08c6830e0dbcb17fa843cc7cb5a8ae9e1b6d2aa7",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -245,6 +245,10 @@ if { [is_elf_format] } then {\n     run_dump_test \"section12b\"\n     run_dump_test \"section13\"\n     run_dump_test \"section14\"\n+    run_dump_test \"section15\"\n+    run_dump_test \"section16a\"\n+    run_dump_test \"section16b\"\n+    run_dump_test \"section17\"\n     run_dump_test \"dwarf2-1\" $dump_opts\n     run_dump_test \"dwarf2-2\" $dump_opts\n     run_dump_test \"dwarf2-3\" $dump_opts"
    },
    {
      "sha": "a7cda1394f4d56b27b312e2720057234a9e8d903",
      "filename": "gas/testsuite/gas/elf/section15.d",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section15.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section15.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section15.d?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,24 @@\n+#objdump: -s\n+#name: elf section15\n+# .pushsection always creates the named section, but the\n+# test harness translates \".text\" into \"P\" for the RX...\n+#notarget: rx-*\n+\n+.*: +file format .*\n+\n+# The MIPS includes a 'section .reginfo' and such here.\n+#...\n+Contents of section .bar:\n+ 0000 00000000 00000000 0000 .*\n+Contents of section .bar:\n+ 0000 0102 .*\n+Contents of section .bar:\n+ 0000 0102 .*\n+Contents of section .bar:\n+ 0000 0103 .*\n+Contents of section .bar:\n+ 0000 04 .*\n+Contents of section .text:\n+ 0000 feff .*\n+# Arm includes a .ARM.attributes section here\n+#..."
    },
    {
      "sha": "949cd84f89d60efd1abf206cd8abdbe3c91eee2d",
      "filename": "gas/testsuite/gas/elf/section15.s",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section15.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section15.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section15.s?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,38 @@\n+\t.section .bar,\"a\",unique,0\n+\t.byte 0\n+ .pushsection .bar,2,\"a\",unique,1\n+\t.byte 2\n+ .popsection\n+\t.byte 0\n+ .pushsection .bar,3,\"a\",unique,2\n+\t.byte 2\n+ .popsection\n+\t.byte 0\n+ .pushsection .bar,2,\"a\", %progbits,unique,3\n+\t.byte 3\n+ .popsection\n+\t.byte 0\n+ .pushsection .bar,\"\",unique,4\n+\t.byte 4\n+ .popsection\n+\t.byte 0\n+ .pushsection .text,1,\"axG\",%progbits,foo,comdat,unique,0xffffffff\n+\t.byte -1\n+ .popsection\n+\t.byte 0\n+ .pushsection .text,\"axG\",%progbits,foo,comdat,unique,0xffffffff\n+\t.byte -2\n+ .popsection\n+\t.byte 0\n+ .pushsection .bar,\"a\",unique,1\n+\t.byte 1\n+ .popsection\n+\t.byte 0\n+ .pushsection .bar,\"a\", %progbits,unique,3\n+\t.byte 1\n+ .popsection\n+\t.byte 0\n+ .pushsection .bar,\"a\",unique,2\n+\t.byte 1\n+ .popsection\n+\t.byte 0"
    },
    {
      "sha": "77e20a368f7ed31eeab79bc934aa9171ca865332",
      "filename": "gas/testsuite/gas/elf/section16.s",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section16.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section16.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section16.s?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,33 @@\n+\t.section .mbind.data,\"adw\",%progbits,unique,0\n+\t.byte 1\n+\n+\t.section .mbind.data,\"adw\",%progbits,0x3,unique,1\n+\t.byte 2\n+\n+\t.section .mbind.text,\"adx\",%progbits,unique,2\n+\t.byte 3\n+\n+\t.section .mbind.text,\"adx\",%progbits,0x3,unique,3\n+\t.byte 4\n+\n+\t.section .mbind.bss,\"adw\",%nobits,unique,4\n+\t.zero 5\n+\n+\t.section .mbind.bss,\"adw\",%nobits,0x3,unique,5\n+\t.zero 6\n+\n+\t.section .mbind.rodata,\"adG\",%progbits,.foo_group,comdat,0x2,unique,6\n+\t.byte 7\n+\n+\t.section .mbind.data,\"adGw\",%progbits,.foo_group,comdat,unique,7\n+\t.byte 8\n+\n+\t.section .mbind.data,\"adGw\",%progbits,.foo_group,comdat,0x3,unique,8\n+\t.byte 9\n+\n+\t# Check that .pushsection works as well.\n+\t.pushsection .mbind.text,\"adGx\",%progbits,.foo_group,comdat,0x3,unique,9\n+\t.byte 10\n+\n+\t.popsection\n+\t.byte 11"
    },
    {
      "sha": "d1abf570c61717efdfd6fd1273ba9a65cd8d5623",
      "filename": "gas/testsuite/gas/elf/section16a.d",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section16a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section16a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section16a.d?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,36 @@\n+#source: section16.s\n+#as: --no-pad-sections\n+#readelf: -Sg --wide\n+#name: mbind sections\n+# A number of targets do not support SHF_GNU_MBIND\n+#xfail: arm*-*-netbsdelf* arm*-*-nto* msp430-*-* visium-*-*\n+#xfail: *-*-hpux* *-*-cloudabi\n+\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.data[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+1 00 WAD  0   0  1\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.data[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+1 00 WAD  0   3  1\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.text[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+1 00 AXD  0   0  .\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.text[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+1 00 AXD  0   3  .\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.bss[ \t]+NOBITS[ \t]+0+0 0+[0-9a-f]+ 0+5 00 WAD  0   0  1\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.bss[ \t]+NOBITS[ \t]+0+0 0+[0-9a-f]+ 0+6 00 WAD  0   3  1\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.rodata[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+1 00 AGD  0   2  1\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.data[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+1 00 WAGD  0   0  1\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.data[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+2 00 WAGD  0   3  1\n+#...\n+  \\[[ 0-9]+\\] \\.mbind\\.text[ \t]+PROGBITS[ \t]+0+0 0+[0-9a-f]+ 0+1 00 AXGD  0   3  1\n+#...\n+COMDAT group section \\[    1\\] `\\.group' \\[\\.foo_group\\] contains . sections:\n+[ \t]+\\[Index\\][ \t]+Name\n+[ \t]+\\[[ 0-9]+][ \t]+\\.mbind\\.rodata\n+[ \t]+\\[[ 0-9]+][ \t]+\\.mbind\\.data\n+[ \t]+\\[[ 0-9]+][ \t]+\\.mbind\\.data\n+[ \t]+\\[[ 0-9]+][ \t]+\\.mbind\\.text\n+#pass"
    },
    {
      "sha": "a146c0de7e18186302bc1eea394be194a86e65ca",
      "filename": "gas/testsuite/gas/elf/section16b.d",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section16b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section16b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section16b.d?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,36 @@\n+#source: section16.s\n+#as: --no-pad-sections\n+#objdump: -s\n+#name: mbind section contents\n+# RX annoyingly reorders the sections so that they do not match the sequence\n+# expected below.\n+#xfail: rx-*-*\n+# A number of targets do not support SHF_GNU_MBIND\n+#xfail: arm*-*-netbsdelf* arm*-*-nto* msp430-*-* visium-*-*\n+#xfail: *-*-hpux* *-*-cloudabi\n+\n+#...\n+Contents of section .mbind.data:\n+ 0000 01                                   .               \n+#...\n+Contents of section .mbind.data:\n+ 0000 02                                   .               \n+#...\n+Contents of section .mbind.text:\n+ 0000 03                                   .               \n+#...\n+Contents of section .mbind.text:\n+ 0000 04                                   .               \n+#...\n+Contents of section .mbind.rodata:\n+ 0000 07                                   .               \n+#...\n+Contents of section .mbind.data:\n+ 0000 08                                   .               \n+#...\n+Contents of section .mbind.data:\n+ 0000 090b                                 ..              \n+#...\n+Contents of section .mbind.text:\n+ 0000 0a                                   .               \n+#pass"
    },
    {
      "sha": "3efdc22abfe4bdebbb4bc2ab398bdfc1c66bb7e8",
      "filename": "gas/testsuite/gas/elf/section17.d",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section17.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section17.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section17.d?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,2 @@\n+#name: incorrect section ID\n+#error_output: section17.l"
    },
    {
      "sha": "5b3e2b6d3402206b39dbebb68bf2d72c7b3d65cb",
      "filename": "gas/testsuite/gas/elf/section17.l",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section17.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section17.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section17.l?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,4 @@\n+[^:]*: Assembler messages:\n+[^:]*:1: Error: unsupported section id: 0x100000000\n+[^:]*:3: Error: junk at end of line, first unrecognized character is `f'\n+[^:]*:5: Error: junk at end of line, first unrecognized character is `,'"
    },
    {
      "sha": "43de1d7f2b69728921bfbc4c388948f2b02746af",
      "filename": "gas/testsuite/gas/elf/section17.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section17.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/elf/section17.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section17.s?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,6 @@\n+\t.section .data,\"aw\",%progbits,unique,0x100000000\n+\t.byte 0\n+\t.section .bss,\"aw\",%nobits,unique,foo\n+\t.byte 0\n+\t.section .text,\"ax\",%progbits,unique,1,foo\n+\t.byte 0"
    },
    {
      "sha": "ffeff0c101a687d5a127e28dca7385c71900e78d",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -491,6 +491,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_list_test \"inval-pseudo\" \"-al\"\n     run_dump_test \"nop-1\"\n     run_dump_test \"nop-2\"\n+    run_dump_test \"unique\"\n     run_dump_test \"optimize-1\"\n     run_dump_test \"optimize-1a\"\n     run_dump_test \"optimize-2\"\n@@ -1050,6 +1051,7 @@ if [expr ([istarget \"i*86-*-*\"] || [istarget \"x86_64-*-*\"]) && [gas_64_check]] t\n     run_dump_test \"x86-64-movd-intel\"\n     run_dump_test \"x86-64-nop-1\"\n     run_dump_test \"x86-64-nop-2\"\n+    run_dump_test \"x86-64-unique\"\n     run_dump_test \"x86-64-movsxd\"\n     run_dump_test \"x86-64-movsxd-intel\"\n     run_list_test \"x86-64-movsxd-inval\" \"-al\""
    },
    {
      "sha": "0337733d992fe6aaae3881de68c143828eb38fbb",
      "filename": "gas/testsuite/gas/i386/unique.d",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/unique.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/unique.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/unique.d?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,48 @@\n+#objdump: -dw\n+#name: i386 unique sections\n+\n+.*: +file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+ <foo>:\n+ +[a-f0-9]+:\t89 c3                \tmov    %eax,%ebx\n+ +[a-f0-9]+:\tc3                   \tret    \n+\n+Disassembly of section .text:\n+\n+0+ <bar>:\n+ +[a-f0-9]+:\t31 c3                \txor    %eax,%ebx\n+ +[a-f0-9]+:\tc3                   \tret    \n+\n+Disassembly of section .text:\n+\n+0+ <foo1>:\n+ +[a-f0-9]+:\t89 c3                \tmov    %eax,%ebx\n+ +[a-f0-9]+:\tc3                   \tret    \n+\n+Disassembly of section .text:\n+\n+0+ <bar1>:\n+ +[a-f0-9]+:\t01 c3                \tadd    %eax,%ebx\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\tc3                   \tret    \n+\n+Disassembly of section .text:\n+\n+0+ <bar2>:\n+ +[a-f0-9]+:\t29 c3                \tsub    %eax,%ebx\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\tc3                   \tret    \n+\n+Disassembly of section .text:\n+\n+0+ <foo2>:\n+ +[a-f0-9]+:\t31 c3                \txor    %eax,%ebx\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\tc3                   \tret    \n+#pass"
    },
    {
      "sha": "89b23b0fc66d5579ef88b5143c4911320684a3d5",
      "filename": "gas/testsuite/gas/i386/unique.s",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/unique.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/unique.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/unique.s?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,36 @@\n+\t.section .text,\"ax\",@progbits,unique,1\n+foo:\n+\tmov %eax, %ebx\n+\t.section .text,\"ax\",@progbits,unique,2\n+bar:\n+\txor %eax, %ebx\n+\t.section .text,\"ax\",@progbits,unique,1\n+\tret\n+\t.section .text,\"ax\",@progbits,unique,2\n+\tret\n+\t.section .text,\"axG\",@progbits,foo,comdat,unique,1\n+foo1:\n+\tmov\t%eax, %ebx\n+\t.section .text,\"axG\",@progbits,bar,comdat,unique,1\n+bar1:\n+\tadd\t%eax, %ebx\n+\t.section .text,\"axG\",@progbits,bar,comdat,unique,2\n+bar2:\n+\tsub\t%eax, %ebx\n+\t.section .text,\"axG\",@progbits,foo,comdat,unique,2\n+foo2:\n+\txor\t%eax, %ebx\n+\t.section .text,\"axG\",@progbits,bar,comdat,unique,1\n+\tnop\n+\tret\n+\t.section .text,\"axG\",@progbits,foo,comdat,unique,1\n+\tret\n+\t.section .text,\"axG\",@progbits,bar,comdat,unique,2\n+\tnop\n+\tnop\n+\tnop\n+\tret\n+\t.section .text,\"axG\",@progbits,foo,comdat,unique,2\n+\tnop\n+\tnop\n+\tret"
    },
    {
      "sha": "4cfd30d5e9d02ad737552a7609688a19ec1751d6",
      "filename": "gas/testsuite/gas/i386/x86-64-unique.d",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/x86-64-unique.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/gas/testsuite/gas/i386/x86-64-unique.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-unique.d?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -0,0 +1,48 @@\n+#source: unique.s\n+#objdump: -dw\n+#name: 64bit unique sections\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <foo>:\n+ +[a-f0-9]+:\t89 c3                \tmov    %eax,%ebx\n+ +[a-f0-9]+:\tc3                   \tretq   \n+\n+Disassembly of section .text:\n+\n+0+ <bar>:\n+ +[a-f0-9]+:\t31 c3                \txor    %eax,%ebx\n+ +[a-f0-9]+:\tc3                   \tretq   \n+\n+Disassembly of section .text:\n+\n+0+ <foo1>:\n+ +[a-f0-9]+:\t89 c3                \tmov    %eax,%ebx\n+ +[a-f0-9]+:\tc3                   \tretq   \n+\n+Disassembly of section .text:\n+\n+0+ <bar1>:\n+ +[a-f0-9]+:\t01 c3                \tadd    %eax,%ebx\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\tc3                   \tretq   \n+\n+Disassembly of section .text:\n+\n+0+ <bar2>:\n+ +[a-f0-9]+:\t29 c3                \tsub    %eax,%ebx\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\tc3                   \tretq   \n+\n+Disassembly of section .text:\n+\n+0+ <foo2>:\n+ +[a-f0-9]+:\t31 c3                \txor    %eax,%ebx\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\t90                   \tnop\n+ +[a-f0-9]+:\tc3                   \tretq   \n+#pass"
    },
    {
      "sha": "2b885b5fb3e3608b450a0519780c30d1c02aff2b",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25380\n+\t* testsuite/ld-i386/pr22001-1c.S: Use \"unique,N\" in .section\n+\tdirectives.\n+\t* testsuite/ld-i386/tls-gd1.S: Likewise.\n+\t* testsuite/ld-x86-64/pr21481b.S: Likewise.\n+\n 2020-01-30  Jan Beulich  <jbeulich@suse.com>\n \n \t* ld.texi: Remove space between @option and brace."
    },
    {
      "sha": "51094efce3569132d4fc13133808c115a77d7803",
      "filename": "ld/testsuite/ld-i386/pr22001-1c.S",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/testsuite/ld-i386/pr22001-1c.S",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/testsuite/ld-i386/pr22001-1c.S",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/pr22001-1c.S?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1,7 +1,7 @@\n \t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n .LC0:\n \t.string\t\"PASS\"\n-\t.section\t.text.startup,\"ax\",@progbits\n+\t.section\t.text,\"ax\",@progbits,unique,1\n \t.p2align 4,,15\n \t.globl\tmain\n \t.type\tmain, @function\n@@ -41,7 +41,7 @@ main:\n \taddl\t$16, %esp\n \tjmp\t.L3\n \t.size\tmain, .-main\n-\t.section\t.text.__x86.get_pc_thunk.bx,\"axG\",@progbits,__x86.get_pc_thunk.bx,comdat\n+\t.section .text,\"axG\",@progbits,__x86.get_pc_thunk.bx,comdat,unique,2\n \t.globl\t__x86.get_pc_thunk.bx\n \t.hidden\t__x86.get_pc_thunk.bx\n \t.type\t__x86.get_pc_thunk.bx, @function"
    },
    {
      "sha": "cf5c913560c0fb42394eb6a6e2d05bfe516747d0",
      "filename": "ld/testsuite/ld-i386/tls-gd1.S",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/testsuite/ld-i386/tls-gd1.S",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/testsuite/ld-i386/tls-gd1.S",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/tls-gd1.S?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -47,15 +47,14 @@ test_gd:\n \tmovzbl\t%al, %eax\n \tret\n \t.size\ttest_gd, .-test_gd\n-\t.section\t.text.unlikely\n-\t.section\t.text.__x86.get_pc_thunk.bx,\"axG\",@progbits,__x86.get_pc_thunk.bx,comdat\n+\t.section .text,\"axG\",@progbits,__x86.get_pc_thunk.bx,comdat,unique,1\n \t.globl\t__x86.get_pc_thunk.bx\n \t.hidden\t__x86.get_pc_thunk.bx\n \t.type\t__x86.get_pc_thunk.bx, @function\n __x86.get_pc_thunk.bx:\n \tmovl\t(%esp), %ebx\n \tret\n-\t.section\t.text.__x86.get_pc_thunk.cx,\"axG\",@progbits,__x86.get_pc_thunk.cx,comdat\n+\t.section .text,\"axG\",@progbits,__x86.get_pc_thunk.cx,comdat,unique,2\n \t.globl\t__x86.get_pc_thunk.cx\n \t.hidden\t__x86.get_pc_thunk.cx\n \t.type\t__x86.get_pc_thunk.cx, @function"
    },
    {
      "sha": "d66c86f22861690454c5d4fb357b93eeae73371d",
      "filename": "ld/testsuite/ld-x86-64/pr21481b.S",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/testsuite/ld-x86-64/pr21481b.S",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8c4d40b578378be3b12575d127d4c7bd9972f32/ld/testsuite/ld-x86-64/pr21481b.S",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pr21481b.S?ref=a8c4d40b578378be3b12575d127d4c7bd9972f32",
      "patch": "@@ -1,4 +1,4 @@\n-\t.section\t.rodata.str1.1,\"aMS\",@progbits,1\n+\t.section .rodata.foo,\"aMS\",@progbits,1,unique,1\n .LC0:\n \t.string\t\"PASS\"\n \t.text\n@@ -40,7 +40,7 @@ call_func1:\n \tjmp\t*func1@GOTPCREL(%rip)\n \t.size\tcall_func1, .-call_func1\n \t.globl\tfunc1_p\n-\t.section\t.rodata,\"a\",@progbits\n+\t.section .rodata.foo,\"a\",@progbits,unique,2\n \t.align 8\n \t.size\tfunc1_p, 8\n \t.type\tfunc1_p, @object"
    }
  ]
}