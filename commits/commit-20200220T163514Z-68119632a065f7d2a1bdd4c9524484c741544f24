{
  "sha": "68119632a065f7d2a1bdd4c9524484c741544f24",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjgxMTk2MzJhMDY1ZjdkMmExYmRkNGM5NTI0NDg0Yzc0MTU0NGYyNA==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:59Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:14Z"
    },
    "message": "gdbserver: turn target op 'thread_stopped' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's thread_stopped op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.  Also add\n\t'supports_thread_stopped'.\n\t(target_thread_stopped): Update the macro.\n\t* target.cc (process_target::thread_stopped): Define.\n\t(process_target::supports_thread_stopped): Define.\n\t(prepare_to_access_memory): Update.\n\n\tUpdate the derived classes and callers below.\n\n\t* server.cc (queue_stop_reply_callback): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_process_target::supports_thread_stopped): Define.\n\t(linux_thread_stopped): Turn into ...\n\t(linux_process_target::thread_stopped): ... this.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t* win32-low.cc (win32_target_ops): Update.",
    "tree": {
      "sha": "f2c958ff2d66bde6e50c1a95d0db2f16f649dac5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2c958ff2d66bde6e50c1a95d0db2f16f649dac5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68119632a065f7d2a1bdd4c9524484c741544f24",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68119632a065f7d2a1bdd4c9524484c741544f24",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68119632a065f7d2a1bdd4c9524484c741544f24",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68119632a065f7d2a1bdd4c9524484c741544f24/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "770d8f6a51200bb4bf1228eba928e24e5d7fff86",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/770d8f6a51200bb4bf1228eba928e24e5d7fff86",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/770d8f6a51200bb4bf1228eba928e24e5d7fff86"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 61,
    "deletions": 15
  },
  "files": [
    {
      "sha": "60244e3153f014eda1b514d4139c9390c4e09321",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -1,3 +1,28 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's thread_stopped op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.  Also add\n+\t'supports_thread_stopped'.\n+\t(target_thread_stopped): Update the macro.\n+\t* target.cc (process_target::thread_stopped): Define.\n+\t(process_target::supports_thread_stopped): Define.\n+\t(prepare_to_access_memory): Update.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* server.cc (queue_stop_reply_callback): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_process_target::supports_thread_stopped): Define.\n+\t(linux_thread_stopped): Turn into ...\n+\t(linux_process_target::thread_stopped): ... this.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's read_pc and write_pc ops into"
    },
    {
      "sha": "8d5881f49ffa347e1d57a4b812d23ab366cca608",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -6572,8 +6572,14 @@ linux_process_target::write_pc (regcache *regcache, CORE_ADDR pc)\n   (*the_low_target.set_pc) (regcache, pc);\n }\n \n-static int\n-linux_thread_stopped (struct thread_info *thread)\n+bool\n+linux_process_target::supports_thread_stopped ()\n+{\n+  return true;\n+}\n+\n+bool\n+linux_process_target::thread_stopped (thread_info *thread)\n {\n   return get_thread_lwp (thread)->stopped;\n }\n@@ -7449,7 +7455,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_thread_stopped,\n   NULL,\n   linux_pause_all,\n   linux_unpause_all,"
    },
    {
      "sha": "cbb2f48e135befcf1a21db0411961d8ec55224a9",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -392,6 +392,10 @@ class linux_process_target : public process_target\n   CORE_ADDR read_pc (regcache *regcache) override;\n \n   void write_pc (regcache *regcache, CORE_ADDR pc) override;\n+\n+  bool supports_thread_stopped () override;\n+\n+  bool thread_stopped (thread_info *thread) override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "7cbde7c6e79308344bfbe27869613db027b25773",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -735,7 +735,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* thread_stopped */\n   NULL,  /* get_tib_address */\n   NULL,  /* pause_all */\n   NULL,  /* unpause_all */"
    },
    {
      "sha": "c144d774f0cdd018694b9e8c09c6b3b6b3fda42d",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -947,7 +947,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  NULL, /* thread_stopped */\n   NULL, /* get_tib_address */\n   NULL, /* pause_all */\n   NULL, /* unpause_all */"
    },
    {
      "sha": "f3dca8d3ce0e7c9218711abdb13bf7210085e71a",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -3217,7 +3217,7 @@ queue_stop_reply_callback (thread_info *thread)\n {\n   /* For now, assume targets that don't have this callback also don't\n      manage the thread's last_status field.  */\n-  if (the_target->thread_stopped == NULL)\n+  if (!the_target->pt->supports_thread_stopped ())\n     {\n       struct vstop_notif *new_notif = new struct vstop_notif;\n \n@@ -3229,7 +3229,7 @@ queue_stop_reply_callback (thread_info *thread)\n     }\n   else\n     {\n-      if (thread_stopped (thread))\n+      if (target_thread_stopped (thread))\n \t{\n \t  if (debug_threads)\n \t    {"
    },
    {
      "sha": "b44170a7cddc86f43cc99d8fb6c0d4cb2bb534de",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -66,8 +66,8 @@ prepare_to_access_memory (void)\n     {\n       if (mythread_alive (thread->id))\n \t{\n-\t  if (stopped == NULL && the_target->thread_stopped != NULL\n-\t      && thread_stopped (thread))\n+\t  if (stopped == NULL && the_target->pt->supports_thread_stopped ()\n+\t      && target_thread_stopped (thread))\n \t    stopped = thread;\n \n \t  if (first == NULL)\n@@ -626,3 +626,15 @@ process_target::write_pc (regcache *regcache, CORE_ADDR pc)\n {\n   gdb_assert_not_reached (\"process_target::write_pc: Unable to update PC\");\n }\n+\n+bool\n+process_target::supports_thread_stopped ()\n+{\n+  return false;\n+}\n+\n+bool\n+process_target::thread_stopped (thread_info *thread)\n+{\n+  gdb_assert_not_reached (\"target op thread_stopped not supported\");\n+}"
    },
    {
      "sha": "49d5eca479ed3e039cb4260aba52b2c658cbf982",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -70,9 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Return true if THREAD is known to be stopped now.  */\n-  int (*thread_stopped) (struct thread_info *thread);\n-\n   /* Read Thread Information Block address.  */\n   int (*get_tib_address) (ptid_t ptid, CORE_ADDR *address);\n \n@@ -488,6 +485,12 @@ class process_target\n \n   /* Write PC to REGCACHE.  */\n   virtual void write_pc (regcache *regcache, CORE_ADDR pc);\n+\n+  /* Return true if the thread_stopped op is supported.  */\n+  virtual bool supports_thread_stopped ();\n+\n+  /* Return true if THREAD is known to be stopped now.  */\n+  virtual bool thread_stopped (thread_info *thread);\n };\n \n extern process_stratum_target *the_target;\n@@ -559,8 +562,8 @@ int kill_inferior (process_info *proc);\n   (the_target->get_min_fast_tracepoint_insn_len\t\t\\\n    ? (*the_target->get_min_fast_tracepoint_insn_len) () : 0)\n \n-#define thread_stopped(thread) \\\n-  (*the_target->thread_stopped) (thread)\n+#define target_thread_stopped(thread) \\\n+  the_target->pt->thread_stopped (thread)\n \n #define pause_all(freeze)\t\t\t\\\n   do\t\t\t\t\t\t\\"
    },
    {
      "sha": "712624852d6ace24e8e4f3b44349cefb9adfa023",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68119632a065f7d2a1bdd4c9524484c741544f24/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=68119632a065f7d2a1bdd4c9524484c741544f24",
      "patch": "@@ -1852,7 +1852,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  NULL, /* thread_stopped */\n   win32_get_tib_address,\n   NULL, /* pause_all */\n   NULL, /* unpause_all */"
    }
  ]
}