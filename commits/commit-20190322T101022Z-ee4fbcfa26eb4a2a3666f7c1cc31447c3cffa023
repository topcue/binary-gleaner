{
  "sha": "ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWU0ZmJjZmEyNmViNGEyYTM2NjZmN2MxY2MzMTQ0N2MzY2ZmYTAyMw==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-03-22T10:00:28Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-03-22T10:10:22Z"
    },
    "message": "AArch64: Use HWCAP to detect pauth feature\n\nAdd aarch64_get_hwcap functions for reading the HWCAP.\nFrom this extract the PACA value and use this to enable pauth.\n\ngdb/ChangeLog:\n\n\t* aarch64-linux-nat.c\n\t(aarch64_linux_nat_target::read_description): Read PACA hwcap.\n\t* aarch64-linux-tdep.c\n\t(aarch64_linux_core_read_description): Likewise.\n\t(aarch64_linux_get_hwcap): New function.\n\t* aarch64-linux-tdep.h (AARCH64_HWCAP_PACA): New define.\n\t(aarch64_linux_get_hwcap): New declaration.\n\ngdb/gdbserver/ChangeLog:\n\n\t* linux-aarch64-low.c (AARCH64_HWCAP_PACA): New define.\n\t(aarch64_get_hwcap): New function.\n\t(aarch64_arch_setup): Read APIA hwcap.",
    "tree": {
      "sha": "16ce0420d78dc816de2e8c1017a6b16efa229846",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/16ce0420d78dc816de2e8c1017a6b16efa229846"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6dc0ebde59dfb73eae507ced718bafa54023bf33"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 72,
    "deletions": 8
  },
  "files": [
    {
      "sha": "bd09e4fd73c9e8e90a8b8c32505acc71b50be25a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
      "patch": "@@ -1,3 +1,14 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* aarch64-linux-nat.c\n+\t(aarch64_linux_nat_target::read_description): Read PACA hwcap.\n+\t* aarch64-linux-tdep.c\n+\t(aarch64_linux_core_read_description): Likewise.\n+\t(aarch64_linux_get_hwcap): New function.\n+\t* aarch64-linux-tdep.h (AARCH64_HWCAP_PACA): New define.\n+\t(aarch64_linux_get_hwcap): New declaration.\n+\n 2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "
    },
    {
      "sha": "9572055d9f4cc36fd05cbaa3e88c416c6ebe50b3",
      "filename": "gdb/aarch64-linux-nat.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/aarch64-linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/aarch64-linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-nat.c?ref=ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
      "patch": "@@ -606,8 +606,11 @@ aarch64_linux_nat_target::read_description ()\n   if (ret == 0)\n     return tdesc_arm_with_neon;\n \n-  /* pauth not yet supported.  */\n-  return aarch64_read_description (aarch64_sve_get_vq (tid), false);\n+  CORE_ADDR hwcap = 0;\n+  bool pauth_p = aarch64_linux_get_hwcap (this, &hwcap)\n+\t\t && (hwcap & AARCH64_HWCAP_PACA);\n+\n+  return aarch64_read_description (aarch64_sve_get_vq (tid), pauth_p);\n }\n \n /* Convert a native/host siginfo object, into/from the siginfo in the"
    },
    {
      "sha": "d7db23ef38e9e4e2c59f4a7c1d9ba58ccdc0f7b1",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
      "patch": "@@ -637,12 +637,11 @@ aarch64_linux_core_read_description (struct gdbarch *gdbarch,\n {\n   CORE_ADDR aarch64_hwcap = 0;\n \n-  if (target_auxv_search (target, AT_HWCAP, &aarch64_hwcap) != 1)\n-    return NULL;\n+  if (!aarch64_linux_get_hwcap (target, &aarch64_hwcap))\n+    return nullptr;\n \n-  /* pauth not yet supported.  */\n   return aarch64_read_description (aarch64_linux_core_read_vq (gdbarch, abfd),\n-\t\t\t\t   false);\n+\t\t\t\t   aarch64_hwcap & AARCH64_HWCAP_PACA);\n }\n \n /* Implementation of `gdbarch_stap_is_single_operand', as defined in\n@@ -1420,6 +1419,15 @@ aarch64_linux_gcc_target_options (struct gdbarch *gdbarch)\n   return NULL;\n }\n \n+/* See aarch64-linux-tdep.h.  */\n+\n+bool\n+aarch64_linux_get_hwcap (struct target_ops *target, CORE_ADDR *hwcap)\n+{\n+  *hwcap = 0;\n+  return target_auxv_search (target, AT_HWCAP, hwcap) == 1;\n+}\n+\n static void\n aarch64_linux_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n {"
    },
    {
      "sha": "e9f7c9bccf4885447a61a24a22a02885581c21b9",
      "filename": "gdb/aarch64-linux-tdep.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/aarch64-linux-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/aarch64-linux-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.h?ref=ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
      "patch": "@@ -36,4 +36,10 @@\n extern const struct regset aarch64_linux_gregset;\n extern const struct regset aarch64_linux_fpregset;\n \n+/* Matches HWCAP_PACA in kernel header arch/arm64/include/uapi/asm/hwcap.h.  */\n+#define AARCH64_HWCAP_PACA (1 << 30)\n+\n+/* Fetch the AT_HWCAP entry from the auxv vector for the given TARGET.  */\n+bool aarch64_linux_get_hwcap (struct target_ops *target, CORE_ADDR *hwcap);\n+\n #endif /* AARCH64_LINUX_TDEP_H */"
    },
    {
      "sha": "3b585ca99239ecbeaa2479e7e303f344b46fc9d6",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* linux-aarch64-low.c (AARCH64_HWCAP_PACA): New define.\n+\t(aarch64_get_hwcap): New function.\n+\t(aarch64_arch_setup): Read APIA hwcap.\n+\n 2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "
    },
    {
      "sha": "e2e25f0e27a4143edd81f0378caa322494dbe6c6",
      "filename": "gdb/gdbserver/linux-aarch64-low.c",
      "status": "modified",
      "additions": 31,
      "deletions": 2,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/gdbserver/linux-aarch64-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023/gdb/gdbserver/linux-aarch64-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-low.c?ref=ee4fbcfa26eb4a2a3666f7c1cc31447c3cffa023",
      "patch": "@@ -485,6 +485,33 @@ aarch64_linux_new_fork (struct process_info *parent,\n   *child->priv->arch_private = *parent->priv->arch_private;\n }\n \n+/* Matches HWCAP_PACA in kernel header arch/arm64/include/uapi/asm/hwcap.h.  */\n+#define AARCH64_HWCAP_PACA (1 << 30)\n+\n+/* Fetch the AT_HWCAP entry from the auxv vector.  */\n+\n+static bool\n+aarch64_get_hwcap (unsigned long *valp)\n+{\n+  unsigned char *data = (unsigned char *) alloca (16);\n+  int offset = 0;\n+\n+  while ((*the_target->read_auxv) (offset, data, 16) == 16)\n+    {\n+      unsigned long *data_p = (unsigned long *)data;\n+      if (data_p[0] == AT_HWCAP)\n+\t{\n+\t  *valp = data_p[1];\n+\t  return true;\n+\t}\n+\n+      offset += 16;\n+    }\n+\n+  *valp = 0;\n+  return false;\n+}\n+\n /* Implementation of linux_target_ops method \"arch_setup\".  */\n \n static void\n@@ -501,8 +528,10 @@ aarch64_arch_setup (void)\n   if (is_elf64)\n     {\n       uint64_t vq = aarch64_sve_get_vq (tid);\n-      /* pauth not yet supported.  */\n-      current_process ()->tdesc = aarch64_linux_read_description (vq, false);\n+      unsigned long hwcap = 0;\n+      bool pauth_p = aarch64_get_hwcap (&hwcap) && (hwcap & AARCH64_HWCAP_PACA);\n+\n+      current_process ()->tdesc = aarch64_linux_read_description (vq, pauth_p);\n     }\n   else\n     current_process ()->tdesc = tdesc_arm_with_neon;"
    }
  ]
}