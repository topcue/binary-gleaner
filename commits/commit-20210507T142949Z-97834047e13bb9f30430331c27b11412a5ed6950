{
  "sha": "97834047e13bb9f30430331c27b11412a5ed6950",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTc4MzQwNDdlMTNiYjlmMzA0MzAzMzFjMjdiMTE0MTJhNWVkNjk1MA==",
  "commit": {
    "author": {
      "name": "Cl?ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-05-07T14:29:49Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-05-07T14:29:49Z"
    },
    "message": "Fix .dwsect generation for XCOFF.  Handle .function generated with DWARF on XCOFF.\n\ngas\t* config/tc-ppc.c (ppc_function): Update comment for\n\tfifth argument.\n\t(ppc_frob_symbol): Remove ppc_last_function check.\n\tMake sure coff_last_function is reset.\n\tCorrectly set fsize when not provided in .function.\n\t* testsuite/gas/ppc/aix.exp: New tests.\n\t* testsuite/gas/ppc/xcoff-function-1-32.d: New test.\n\t* testsuite/gas/ppc/xcoff-function-1-64.d: New test.\n\t* testsuite/gas/ppc/xcoff-function-1.s: New test.\n\nbfd\t* coff-rs6000.c (xcoff_dwsect_names): Add new DWARF\n\tsections.\n\t* coffgen.c (coff_pointerize_aux): Handle C_DWARF.\n\t(coff_print_symbol): Likewise.\n\t* libxcoff.h (XCOFF_DWSECT_NBR_NAMES): Update.\n\ngas\t* config/obj-coff.c (coff_frob_symbol): Don't skip C_DWARF.\n\t(coff_adjust_section_syms): Use corrext auxent for C_DWARF.\n\t(coff_frob_section): Likewise.\n\t* config/obj-coff.h (SA_GET_SECT_SCNLEN,\n\tSA_GET_SECT_NRELOC, SA_SET_SECT_SCNLEN,\n\tSA_SET_SECT_NRELOC) New defines.\n\t(SET_SECTION_RELOCS): Adjust for C_DWARF.\n\t* config/tc-ppc.c (ppc_frob_symbol): Don't skip C_DWARF.\n\t(ppc_adjust_symtab): Reorder C_DWARF symbols.\n\t* testsuite/gas/ppc/aix.exp: New tests.\n\t* testsuite/gas/ppc/xcoff-dwsect-2-32.d: New test.\n\t* testsuite/gas/ppc/xcoff-dwsect-2-64.d: New test.\n\t* testsuite/gas/ppc/xcoff-dwsect-2.s: New test.\n\ninclude\t* coff/internal.h (C_DWARF): New define.\n\t* coff/xcoff.h (SSUBTYP_DWLOC, SSUBTYP_DWFRAME,\n\tSSUBTYP_DWMAC): New defines.",
    "tree": {
      "sha": "99f794403e03440f9ed501fed952517bf98a4e9e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/99f794403e03440f9ed501fed952517bf98a4e9e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/97834047e13bb9f30430331c27b11412a5ed6950",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/97834047e13bb9f30430331c27b11412a5ed6950",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/97834047e13bb9f30430331c27b11412a5ed6950",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/97834047e13bb9f30430331c27b11412a5ed6950/comments",
  "author": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3ecc00ec9cbb7a35d6e58bf86fddaa33126a479a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ecc00ec9cbb7a35d6e58bf86fddaa33126a479a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3ecc00ec9cbb7a35d6e58bf86fddaa33126a479a"
    }
  ],
  "stats": {
    "total": 255,
    "additions": 248,
    "deletions": 7
  },
  "files": [
    {
      "sha": "e0a1e2348a0309d958233aa3b2f0bc44a48cda46",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -1,3 +1,11 @@\n+2021-05-07  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* coff-rs6000.c (xcoff_dwsect_names): Add new DWARF\n+\tsections.\n+\t* coffgen.c (coff_pointerize_aux): Handle C_DWARF.\n+\t(coff_print_symbol): Likewise.\n+\t* libxcoff.h (XCOFF_DWSECT_NBR_NAMES): Update.\n+\n 2021-05-07  Jan Beulich  <jbeulich@suse.com>\n \n \t* elf64-x86-64.c (x86_64_elf_howto_table): Set src_mask fields"
    },
    {
      "sha": "45ba9b3cb0038fc8d6a8489679d836be920b4902",
      "filename": "bfd/coff-rs6000.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/bfd/coff-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/bfd/coff-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-rs6000.c?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -4265,7 +4265,10 @@ const struct xcoff_dwsect_name xcoff_dwsect_names[] = {\n   { SSUBTYP_DWARNGE, \".dwarnge\",  true },\n   { SSUBTYP_DWABREV, \".dwabrev\",  false },\n   { SSUBTYP_DWSTR,   \".dwstr\",    true },\n-  { SSUBTYP_DWRNGES, \".dwrnges\",  true }\n+  { SSUBTYP_DWRNGES, \".dwrnges\",  true },\n+  { SSUBTYP_DWLOC,   \".dwloc\",    true },\n+  { SSUBTYP_DWFRAME, \".dwframe\",  true },\n+  { SSUBTYP_DWMAC,   \".dwmac\",    true }\n };\n \n /* For generic entry points.  */"
    },
    {
      "sha": "b13e7732962bcdc52b6e66d1291b5da46d11a5e1",
      "filename": "bfd/coffgen.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/bfd/coffgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/bfd/coffgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffgen.c?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -1527,6 +1527,8 @@ coff_pointerize_aux (bfd *abfd,\n     return;\n   if (n_sclass == C_FILE)\n     return;\n+  if (n_sclass == C_DWARF)\n+    return;\n \n   BFD_ASSERT (! auxent->is_sym);\n   /* Otherwise patch up.  */\n@@ -2123,6 +2125,12 @@ coff_print_symbol (bfd *abfd,\n \t\t  fprintf (file, \"File \");\n \t\t  break;\n \n+\t\tcase C_DWARF:\n+\t\t  fprintf (file, \"AUX scnlen 0x%lx nreloc %ld\",\n+\t\t\t   (unsigned long) auxp->u.auxent.x_sect.x_scnlen,\n+\t\t\t   auxp->u.auxent.x_sect.x_nreloc);\n+\t\t  break;\n+\n \t\tcase C_STAT:\n \t\t  if (combined->u.syment.n_type == T_NULL)\n \t\t    /* Probably a section symbol ?  */"
    },
    {
      "sha": "2eeb503d5488d88a8f3db1a0409715b5d13b0628",
      "filename": "bfd/libxcoff.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/bfd/libxcoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/bfd/libxcoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libxcoff.h?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -252,7 +252,7 @@ struct xcoff_dwsect_name {\n \n /* Number of entries in the array.  The number is known and public so that user\n    can 'extend' this array by index.  */\n-#define XCOFF_DWSECT_NBR_NAMES\t8\n+#define XCOFF_DWSECT_NBR_NAMES\t11\n \n /* The dwarf sections array.  */\n extern const struct xcoff_dwsect_name"
    },
    {
      "sha": "b5c358d887acaea4232c64d974b194c7bf4881b7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -1,3 +1,29 @@\n+2021-05-07  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* config/obj-coff.c (coff_frob_symbol): Don't skip C_DWARF.\n+\t(coff_adjust_section_syms): Use corrext auxent for C_DWARF.\n+\t(coff_frob_section): Likewise.\n+\t* config/obj-coff.h (SA_GET_SECT_SCNLEN,\n+\tSA_GET_SECT_NRELOC, SA_SET_SECT_SCNLEN,\n+\tSA_SET_SECT_NRELOC) New defines.\n+\t(SET_SECTION_RELOCS): Adjust for C_DWARF.\n+\t* config/tc-ppc.c (ppc_frob_symbol): Don't skip C_DWARF.\n+\t(ppc_adjust_symtab): Reorder C_DWARF symbols.\n+\t* testsuite/gas/ppc/aix.exp: New tests.\n+\t* testsuite/gas/ppc/xcoff-dwsect-2-32.d: New test.\n+\t* testsuite/gas/ppc/xcoff-dwsect-2-64.d: New test.\n+\t* testsuite/gas/ppc/xcoff-dwsect-2.s: New test.\n+\n+\t* config/tc-ppc.c (ppc_function): Update comment for\n+\tfifth argument.\n+\t(ppc_frob_symbol): Remove ppc_last_function check.\n+\tMake sure coff_last_function is reset.\n+\tCorrectly set fsize when not provided in .function.\n+\t* testsuite/gas/ppc/aix.exp: New tests.\n+\t* testsuite/gas/ppc/xcoff-function-1-32.d: New test.\n+\t* testsuite/gas/ppc/xcoff-function-1-64.d: New test.\n+\t* testsuite/gas/ppc/xcoff-function-1.s: New test.\n+\n 2021-05-07  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/rela.s, testsuite/gas/i386/rela.d: New."
    },
    {
      "sha": "f2703ff0457cff3165dd41b8954d6f0055d24def",
      "filename": "gas/config/obj-coff.c",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/config/obj-coff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/config/obj-coff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-coff.c?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -1379,6 +1379,7 @@ coff_frob_symbol (symbolS *symp, int *punt)\n   /* This is pretty horrible, but we have to set *punt correctly in\n      order to call SA_SET_SYM_ENDNDX correctly.  */\n   if (! symbol_used_in_reloc_p (symp)\n+      && S_GET_STORAGE_CLASS (symp) != C_DWARF\n       && ((symbol_get_bfdsym (symp)->flags & BSF_SECTION_SYM) != 0\n \t  || (! (S_IS_EXTERNAL (symp) || S_IS_WEAK (symp))\n \t      && ! symbol_get_tc (symp)->output\n@@ -1483,8 +1484,18 @@ coff_adjust_section_syms (bfd *abfd ATTRIBUTE_UNUSED,\n   secsym = section_symbol (sec);\n   /* This is an estimate; we'll plug in the real value using\n      SET_SECTION_RELOCS later */\n+#ifdef OBJ_XCOFF\n+  if (S_GET_STORAGE_CLASS (secsym) == C_DWARF)\n+    SA_SET_SECT_NRELOC (secsym, nrelocs);\n+  else\n+    {\n+      SA_SET_SCN_NRELOC (secsym, nrelocs);\n+      SA_SET_SCN_NLINNO (secsym, nlnno);\n+    }\n+#else\n   SA_SET_SCN_NRELOC (secsym, nrelocs);\n   SA_SET_SCN_NLINNO (secsym, nlnno);\n+#endif\n }\n \n void\n@@ -1754,7 +1765,11 @@ coff_frob_section (segT sec)\n       S_SET_STORAGE_CLASS (secsym, sclass);\n       S_SET_NUMBER_AUXILIARY (secsym, 1);\n       SF_SET_STATICS (secsym);\n+#ifdef OBJ_XCOFF\n+      SA_SET_SECT_SCNLEN (secsym, size);\n+#else\n       SA_SET_SCN_SCNLEN (secsym, size);\n+#endif\n     }\n   /* FIXME: These should be in a \"stabs.h\" file, or maybe as.h.  */\n #ifndef STAB_SECTION_NAME"
    },
    {
      "sha": "73c001e3edc76ebcfcd8ac8640318e3e40e0bef3",
      "filename": "gas/config/obj-coff.h",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/config/obj-coff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/config/obj-coff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-coff.h?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -180,6 +180,13 @@\n #define SA_SET_SCN_NRELOC(s,v)\t(SYM_AUXENT (s)->x_scn.x_nreloc = (v))\n #define SA_SET_SCN_NLINNO(s,v)\t(SYM_AUXENT (s)->x_scn.x_nlinno = (v))\n \n+#ifdef OBJ_XCOFF\n+#define SA_GET_SECT_SCNLEN(s)\t(SYM_AUXENT (s)->x_sect.x_scnlen)\n+#define SA_GET_SECT_NRELOC(s)\t(SYM_AUXENT (s)->x_sect.x_nreloc)\n+#define SA_SET_SECT_SCNLEN(s,v)\t(SYM_AUXENT (s)->x_sect.x_scnlen = (v))\n+#define SA_SET_SECT_NRELOC(s,v)\t(SYM_AUXENT (s)->x_sect.x_nreloc = (v))\n+#endif\n+\n /* Internal use only definitions. SF_ stands for symbol flags.\n \n    These values can be assigned to sy_symbol.ost_flags field of a symbolS.  */\n@@ -294,8 +301,19 @@ extern const pseudo_typeS coff_pseudo_table[];\n #define INIT_STAB_SECTION(seg) obj_coff_init_stab_section (seg)\n \n /* Store the number of relocations in the section aux entry.  */\n+#ifdef OBJ_XCOFF\n+#define SET_SECTION_RELOCS(sec, relocs, n)\t\t\\\n+  do {\t\t\t\t\t\t\t\\\n+    symbolS * sectSym = section_symbol (sec);\t\t\\\n+    if (S_GET_STORAGE_CLASS (sectSym) == C_DWARF)\t\\\n+      SA_SET_SECT_NRELOC (sectSym, n);\t\t\t\\\n+    else\t\t\t\t\t\t\\\n+      SA_SET_SCN_NRELOC (sectSym, n);\t\t\t\\\n+  } while (0)\n+#else\n #define SET_SECTION_RELOCS(sec, relocs, n) \\\n   SA_SET_SCN_NRELOC (section_symbol (sec), n)\n+#endif\n \n #define obj_app_file(name, app) c_dot_file_symbol (name, app)\n "
    },
    {
      "sha": "fce2b15f17afa224c631f47134377609b8966bb1",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 49,
      "deletions": 5,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -5144,7 +5144,9 @@ ppc_function (int ignore ATTRIBUTE_UNUSED)\n \t  expression (& exp);\n \t  if (*input_line_pointer == ',')\n \t    {\n-\t      /* The fifth argument is the function size.  */\n+\t      /* The fifth argument is the function size.\n+\t         If it's omitted, the size will be the containing csect.\n+\t         This will be donce during ppc_frob_symtab.  */\n \t      ++input_line_pointer;\n \t      symbol_get_tc (ext_sym)->u.size\n \t\t= symbol_new (\"L0\\001\", absolute_section,\n@@ -5864,6 +5866,7 @@ ppc_frob_symbol (symbolS *sym)\n   /* Discard symbols that should not be included in the output symbol\n      table.  */\n   if (! symbol_used_in_reloc_p (sym)\n+      && S_GET_STORAGE_CLASS (sym) != C_DWARF\n       && ((symbol_get_bfdsym (sym)->flags & BSF_SECTION_SYM) != 0\n \t  || (! (S_IS_EXTERNAL (sym) || S_IS_WEAK (sym))\n \t      && ! symbol_get_tc (sym)->output\n@@ -5903,15 +5906,26 @@ ppc_frob_symbol (symbolS *sym)\n \n   if (SF_GET_FUNCTION (sym))\n     {\n-      if (ppc_last_function != (symbolS *) NULL)\n-\tas_bad (_(\"two .function pseudo-ops with no intervening .ef\"));\n+      /* Make sure coff_last_function is reset. Otherwise, we won't create\n+         the auxent for the next function.  */\n+      coff_last_function = 0;\n       ppc_last_function = sym;\n       if (symbol_get_tc (sym)->u.size != (symbolS *) NULL)\n \t{\n \t  resolve_symbol_value (symbol_get_tc (sym)->u.size);\n \t  SA_SET_SYM_FSIZE (sym,\n \t\t\t    (long) S_GET_VALUE (symbol_get_tc (sym)->u.size));\n \t}\n+      else\n+\t{\n+\t  /* Size of containing csect.  */\n+\t  symbolS* within = symbol_get_tc (sym)->within;\n+\t  union internal_auxent *csectaux;\n+\t  csectaux = &coffsymbol (symbol_get_bfdsym (within))\n+\t    ->native[S_GET_NUMBER_AUXILIARY(within)].u.auxent;\n+\n+\t  SA_SET_SYM_FSIZE (sym, csectaux->x_csect.x_scnlen.l);\n+\t}\n     }\n   else if (S_GET_STORAGE_CLASS (sym) == C_FCN\n \t   && strcmp (S_GET_NAME (sym), \".ef\") == 0)\n@@ -6126,13 +6140,43 @@ ppc_frob_symbol (symbolS *sym)\n   return 0;\n }\n \n-/* Adjust the symbol table.  This creates csect symbols for all\n-   absolute symbols.  */\n+/* Adjust the symbol table.  */\n \n void\n ppc_adjust_symtab (void)\n {\n   symbolS *sym;\n+  symbolS *anchorSym;\n+\n+  /* Make sure C_DWARF symbols come right after C_FILE.\n+     As the C_FILE might not be defined yet and as C_DWARF\n+     might already be ordered, we insert them before the\n+     first symbol which isn't a C_FILE or a C_DWARF.  */\n+  for (anchorSym = symbol_rootP; anchorSym != NULL;\n+       anchorSym = symbol_next (anchorSym))\n+    {\n+      if (S_GET_STORAGE_CLASS (anchorSym) != C_FILE\n+\t  && S_GET_STORAGE_CLASS (anchorSym) != C_DWARF)\n+\tbreak;\n+    }\n+\n+  sym = anchorSym;\n+  while (sym != NULL)\n+    {\n+      if (S_GET_STORAGE_CLASS (sym) != C_DWARF)\n+\t{\n+\t  sym = symbol_next (sym);\n+\t  continue;\n+\t}\n+\n+      symbolS* tsym = sym;\n+      sym = symbol_next (sym);\n+\n+      symbol_remove (tsym, &symbol_rootP, &symbol_lastP);\n+      symbol_insert (tsym, anchorSym, &symbol_rootP, &symbol_lastP);\n+    }\n+\n+  /* Create csect symbols for all absolute symbols.  */\n \n   if (! ppc_saw_abs)\n     return;"
    },
    {
      "sha": "efe27e4edb03ab86db2c40b6835efd0e6de602fe",
      "filename": "gas/testsuite/gas/ppc/aix.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/aix.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/aix.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/aix.exp?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -73,4 +73,9 @@ if { [istarget \"powerpc*-*-aix*\"] || [istarget \"rs6000-*-aix*\"] } then {\n \n     run_dump_test \"xcoff-dwsect-1-32\"\n     run_dump_test \"xcoff-dwsect-1-64\"\n+    run_dump_test \"xcoff-dwsect-2-32\"\n+    run_dump_test \"xcoff-dwsect-2-64\"\n+\n+    run_dump_test \"xcoff-function-1-32\"\n+    run_dump_test \"xcoff-function-1-64\"\n }"
    },
    {
      "sha": "cebc6d30d5a2a506b93b8fe2dc26a3486856fd9d",
      "filename": "gas/testsuite/gas/ppc/xcoff-dwsect-2-32.d",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-dwsect-2-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-dwsect-2-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-dwsect-2-32.d?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -0,0 +1,18 @@\n+#as: -a32\n+#source: xcoff-dwsect-2.s\n+#objdump: -t\n+#name: XCOFF dwsect test 2 (32-bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\\(scl 103\\).*\n+File .*\n+.*\\(scl 112\\).* .dwinfo\n+AUX .*\n+.*\\(scl 112\\).* .dwloc\n+AUX .*\n+.*\\(scl 112\\).* .dwarnge\n+AUX .*\n+.*\\(scl 107\\).* .text\n+.*"
    },
    {
      "sha": "445e70774081958fd741352e61383a7f962ceb91",
      "filename": "gas/testsuite/gas/ppc/xcoff-dwsect-2-64.d",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-dwsect-2-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-dwsect-2-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-dwsect-2-64.d?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -0,0 +1,18 @@\n+#as: -a64\n+#source: xcoff-dwsect-2.s\n+#objdump: -t\n+#name: XCOFF dwsect test 2 (64-bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\\(scl 103\\).*\n+File .*\n+.*\\(scl 112\\).* .dwinfo\n+AUX .*\n+.*\\(scl 112\\).* .dwloc\n+AUX .*\n+.*\\(scl 112\\).* .dwarnge\n+AUX .*\n+.*\\(scl 107\\).* .text\n+.*"
    },
    {
      "sha": "52a624ff8d71903ff68e28633b77fae2c3ab7bdf",
      "filename": "gas/testsuite/gas/ppc/xcoff-dwsect-2.s",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-dwsect-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-dwsect-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-dwsect-2.s?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -0,0 +1,12 @@\n+\n+\t.csect .text[PR]\n+\n+\t.dwsect 0x10000,Ldwinfo_0\n+\t.short 2\n+\t.dwsect 0x90000\n+Ldebug_loc:\n+\t.short 3\n+\t.dwsect 0x50000\n+\t.short 1\n+\t.short 4\n+"
    },
    {
      "sha": "805a248d5f0e251abc34c34be03f5c50bc53756a",
      "filename": "gas/testsuite/gas/ppc/xcoff-function-1-32.d",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-function-1-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-function-1-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-function-1-32.d?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -0,0 +1,20 @@\n+#as: -a32\n+#source: xcoff-function-1.s\n+#objdump: -t\n+#name: XCOFF function test 1 (32-bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\n+.*\n+\\[  2\\].* .text\n+AUX val     8 .*\n+\\[  4\\].* .foo\n+AUX .* ttlsiz 0x8 .*\n+AUX .* typ 2 .* clss 0 .*\n+\\[  7\\].* .bar\n+AUX .* ttlsiz 0x4 .*\n+AUX .* typ 2 .* clss 0 .*\n+\n+"
    },
    {
      "sha": "431c61cd9b268f95e8dfb4e8e36293712c885db0",
      "filename": "gas/testsuite/gas/ppc/xcoff-function-1-64.d",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-function-1-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-function-1-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-function-1-64.d?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -0,0 +1,20 @@\n+#as: -a64\n+#source: xcoff-function-1.s\n+#objdump: -t\n+#name: XCOFF function test 1 (64-bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\n+.*\n+\\[  2\\].* .text\n+AUX val     8 .*\n+\\[  4\\].* .foo\n+AUX .* ttlsiz 0x8 .*\n+AUX .* typ 2 .* clss 0 .*\n+\\[  7\\].* .bar\n+AUX .* ttlsiz 0x4 .*\n+AUX .* typ 2 .* clss 0 .*\n+\n+"
    },
    {
      "sha": "8a63fe720aa2ea99da54cab0cf491287c86297f6",
      "filename": "gas/testsuite/gas/ppc/xcoff-function-1.s",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-function-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/gas/testsuite/gas/ppc/xcoff-function-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-function-1.s?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -0,0 +1,16 @@\n+  .csect .text[PR]\n+\n+  # .function without 5th argument means\n+  # that the size is the size of the csect.\n+  .globl .foo\n+.foo:\n+  .function .foo,.foo,2,0\n+  blr\n+\n+  # .function without 5th argument means\n+  # that the size is the size given.\n+  .globl .bar\n+.bar:\n+  .function .bar,.bar,2,0, E..bar-.bar\n+  blr\n+E..bar:"
    },
    {
      "sha": "e22f3e85452ba1282ffaefccf520ddc3e7664452",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-07  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* coff/internal.h (C_DWARF): New define.\n+\t* coff/xcoff.h (SSUBTYP_DWLOC, SSUBTYP_DWFRAME,\n+\tSSUBTYP_DWMAC): New defines.\n+\n 2021-05-06  Stafford Horne  <shorne@gmail.com>\n \n \tPR 21464"
    },
    {
      "sha": "8d757acb333ba6c1e36a0e9d7329412d62e37f0f",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -348,6 +348,7 @@ struct internal_aouthdr\n #define C_BINCL         108\t/* Marks beginning of include file */\n #define C_EINCL         109\t/* Marks ending of include file */\n #define C_AIX_WEAKEXT   111\t/* AIX definition of C_WEAKEXT.  */\n+#define C_DWARF         112\t/* DWARF symbol  */\n \n #define C_NULL_VALUE\t0x00de1e00    /* Value for a C_NULL deleted entry.  */\n "
    },
    {
      "sha": "2b61545d611760f0697d93b497417b9ac50daac2",
      "filename": "include/coff/xcoff.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/97834047e13bb9f30430331c27b11412a5ed6950/include/coff/xcoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/97834047e13bb9f30430331c27b11412a5ed6950/include/coff/xcoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/xcoff.h?ref=97834047e13bb9f30430331c27b11412a5ed6950",
      "patch": "@@ -65,6 +65,9 @@\n #define SSUBTYP_DWABREV 0x60000\n #define SSUBTYP_DWSTR   0x70000\n #define SSUBTYP_DWRNGES 0x80000\n+#define SSUBTYP_DWLOC   0x90000\n+#define SSUBTYP_DWFRAME 0xA0000\n+#define SSUBTYP_DWMAC   0xB0000\n \n /* XCOFF uses a special .loader section with type STYP_LOADER.  */\n #define STYP_LOADER 0x1000"
    }
  ]
}