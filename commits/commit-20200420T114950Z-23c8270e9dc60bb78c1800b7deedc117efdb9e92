{
  "sha": "23c8270e9dc60bb78c1800b7deedc117efdb9e92",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjNjODI3MGU5ZGM2MGJiNzhjMTgwMGI3ZGVlZGMxMTdlZmRiOWU5Mg==",
  "commit": {
    "author": {
      "name": "Stephen Casner",
      "email": "casner@acm.org",
      "date": "2020-04-20T11:49:50Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-20T11:49:50Z"
    },
    "message": "When bfd/pdp11.c was copied from bfd/aoutx.h, the #defines for external symbol types N_TEXT etc. were #undef'd and then #define'd with new values.  But N_STAB was not changed even though the new value for N_EXT overlapped with it.  This caused aout_link_write_symbols() to treat global symbols referenced in the source but defined in a linker script as undefined.\n\nSeparately, in translate_symbol_table() the 16-bit symbol values were sign extended to unsigned long (e.g., 64 bits) when they really should be treated as unsigned so the value remains 16 bits.\n\n\tPR 25828\n\t* pdp11.c (N_STAB): Modify value to avoid conflict with N_EXT\n\tcausing globals from linker script to be treated as debug symbols.\n\t(translate_symbol_table): Don't sign-extend symbol values from 16\n\tto 64 bits in nm output.",
    "tree": {
      "sha": "eef82324bea47060d20bdfc2377f8a7cc7ff3c24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eef82324bea47060d20bdfc2377f8a7cc7ff3c24"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/23c8270e9dc60bb78c1800b7deedc117efdb9e92",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23c8270e9dc60bb78c1800b7deedc117efdb9e92",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/23c8270e9dc60bb78c1800b7deedc117efdb9e92",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23c8270e9dc60bb78c1800b7deedc117efdb9e92/comments",
  "author": {
    "login": "slcasner",
    "id": 5100408,
    "node_id": "MDQ6VXNlcjUxMDA0MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5100408?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slcasner",
    "html_url": "https://github.com/slcasner",
    "followers_url": "https://api.github.com/users/slcasner/followers",
    "following_url": "https://api.github.com/users/slcasner/following{/other_user}",
    "gists_url": "https://api.github.com/users/slcasner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slcasner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slcasner/subscriptions",
    "organizations_url": "https://api.github.com/users/slcasner/orgs",
    "repos_url": "https://api.github.com/users/slcasner/repos",
    "events_url": "https://api.github.com/users/slcasner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slcasner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c2e5c986b3825c16a578e5bf84aa412eec276dc7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2e5c986b3825c16a578e5bf84aa412eec276dc7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c2e5c986b3825c16a578e5bf84aa412eec276dc7"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 10,
    "deletions": 1
  },
  "files": [
    {
      "sha": "76f563094cedad4697185d01ced2fa8f92873683",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23c8270e9dc60bb78c1800b7deedc117efdb9e92/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23c8270e9dc60bb78c1800b7deedc117efdb9e92/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=23c8270e9dc60bb78c1800b7deedc117efdb9e92",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-20  Stephen Casner  <casner@acm.org>\n+\n+\t* pdp11.c (N_STAB): Modify value to avoid conflict with N_EXT\n+\tcausing globals from linker script to be treated as debug symbols.\n+\t(translate_symbol_table): Don't sign-extend symbol values from 16\n+\tto 64 bits in nm output.\n+\n 2020-04-20  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (ppc64_elf_size_stubs): Strip relbrlt too."
    },
    {
      "sha": "5ad95236590ea951a916d8cb14fd5fc7207f2724",
      "filename": "bfd/pdp11.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23c8270e9dc60bb78c1800b7deedc117efdb9e92/bfd/pdp11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23c8270e9dc60bb78c1800b7deedc117efdb9e92/bfd/pdp11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pdp11.c?ref=23c8270e9dc60bb78c1800b7deedc117efdb9e92",
      "patch": "@@ -160,6 +160,7 @@ static bfd_boolean MY(write_object_contents) (bfd *);\n #undef N_REG\n #undef N_FN\n #undef N_EXT\n+#undef N_STAB\n #define N_TYPE\t\t0x1f\t/* Type mask.  */\n #define N_UNDF\t\t0x00\t/* Undefined.  */\n #define N_ABS\t\t0x01\t/* Absolute.  */\n@@ -169,6 +170,7 @@ static bfd_boolean MY(write_object_contents) (bfd *);\n #define N_REG\t\t0x14\t/* Register symbol.  */\n #define N_FN\t\t0x1f\t/* File name.  */\n #define N_EXT\t\t0x20\t/* External flag.  */\n+#define N_STAB\t \t0xc0\t/* Not relevant; modified aout64.h's 0xe0 to avoid N_EXT.  */\n \n #define RELOC_SIZE 2\n \n@@ -1501,7 +1503,7 @@ NAME (aout, translate_symbol_table) (bfd *abfd,\n       else\n \treturn FALSE;\n \n-      in->symbol.value = GET_SWORD (abfd,  ext->e_value);\n+      in->symbol.value = GET_WORD (abfd,  ext->e_value);\n       /* TODO: is 0 a safe value here?  */\n       in->desc = 0;\n       in->other = 0;"
    }
  ]
}