{
  "sha": "f252c6d5dc49cb27838e153e863f16ea7895859e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjI1MmM2ZDVkYzQ5Y2IyNzgzOGUxNTNlODYzZjE2ZWE3ODk1ODU5ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-16T13:37:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-17T22:42:05Z"
    },
    "message": "Make psymtab range adapter a method on objfile\n\nThis removes the objfile_psymtabs class in favor of a method on\nobjfile and on psymtab_storage.\n\n2019-01-16  Tom Tromey  <tom@tromey.com>\n\n\t* objfiles.h (struct objfile) <psymtabs>: New method.\n\t(class objfile_psymtabs): Remove.\n\t* psymtab.h (class psymtab_storage) <partial_symtab_range>: New\n\ttypedef.\n\t<range>: New method.\n\t(require_partial_symbols): Change return type.\n\t* psymtab.c (require_partial_symbols)\n\t(psym_expand_symtabs_matching): Update.\n\t* mdebugread.c (parse_partial_symbols): Update.\n\t* dbxread.c (dbx_end_psymtab): Update.",
    "tree": {
      "sha": "4b84a64f29b3e1318eead66fc233483a04a931a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4b84a64f29b3e1318eead66fc233483a04a931a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f252c6d5dc49cb27838e153e863f16ea7895859e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f252c6d5dc49cb27838e153e863f16ea7895859e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f252c6d5dc49cb27838e153e863f16ea7895859e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f252c6d5dc49cb27838e153e863f16ea7895859e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b669c95337903d39aa2254e8ea0405c0ac117d24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b669c95337903d39aa2254e8ea0405c0ac117d24",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b669c95337903d39aa2254e8ea0405c0ac117d24"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 38,
    "deletions": 21
  },
  "files": [
    {
      "sha": "4e562fc00900c4259d3f1c21cf2b8c004abc166f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f252c6d5dc49cb27838e153e863f16ea7895859e",
      "patch": "@@ -1,3 +1,16 @@\n+2019-01-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* objfiles.h (struct objfile) <psymtabs>: New method.\n+\t(class objfile_psymtabs): Remove.\n+\t* psymtab.h (class psymtab_storage) <partial_symtab_range>: New\n+\ttypedef.\n+\t<range>: New method.\n+\t(require_partial_symbols): Change return type.\n+\t* psymtab.c (require_partial_symbols)\n+\t(psym_expand_symtabs_matching): Update.\n+\t* mdebugread.c (parse_partial_symbols): Update.\n+\t* dbxread.c (dbx_end_psymtab): Update.\n+\n 2019-01-15  Tom Tromey  <tom@tromey.com>\n \n \t* symtab.c (lookup_objfile_from_block)"
    },
    {
      "sha": "60d384b27fe533c0b33410a888bea590462df7c7",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=f252c6d5dc49cb27838e153e863f16ea7895859e",
      "patch": "@@ -2011,7 +2011,7 @@ dbx_end_psymtab (struct objfile *objfile, struct partial_symtab *pst,\n          address, set it to our starting address.  Take care to not set our\n          own ending address to our starting address.  */\n \n-      for (partial_symtab *p1 : objfile_psymtabs (objfile))\n+      for (partial_symtab *p1 : objfile->psymtabs ())\n \tif (!p1->text_high_valid && p1->text_low_valid && p1 != pst)\n \t  p1->set_text_high (pst->raw_text_low ());\n     }"
    },
    {
      "sha": "accf07c27804bd29f0080b4d14d84d886c44819b",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=f252c6d5dc49cb27838e153e863f16ea7895859e",
      "patch": "@@ -3684,7 +3684,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t  && save_pst->text_low_valid\n \t  && !(objfile->flags & OBJF_REORDERED))\n \t{\n-\t  for (partial_symtab *iter : objfile_psymtabs (objfile))\n+\t  for (partial_symtab *iter : objfile->psymtabs ())\n \t    {\n \t      if (save_pst != iter\n \t\t  && save_pst->raw_text_low () >= iter->raw_text_low ()"
    },
    {
      "sha": "5299a3c8e5e8a87b9b2d20c249ac18a7068bfc01",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 8,
      "deletions": 13,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=f252c6d5dc49cb27838e153e863f16ea7895859e",
      "patch": "@@ -293,6 +293,14 @@ struct objfile\n \n   DISABLE_COPY_AND_ASSIGN (objfile);\n \n+  /* A range adapter that makes it possible to iterate over all\n+     psymtabs in one objfile.  */\n+\n+  psymtab_storage::partial_symtab_range psymtabs ()\n+  {\n+    return partial_symtabs->range ();\n+  }\n+\n   /* Reset the storage for the partial symbol tables.  */\n \n   void reset_psymtabs ()\n@@ -642,19 +650,6 @@ class objfile_msymbols\n   struct objfile *m_objfile;\n };\n \n-/* A range adapter that makes it possible to iterate over all\n-   psymtabs in one objfile.  */\n-\n-class objfile_psymtabs : public next_adapter<struct partial_symtab>\n-{\n-public:\n-\n-  explicit objfile_psymtabs (struct objfile *objfile)\n-    : next_adapter<struct partial_symtab> (objfile->partial_symtabs->psymtabs)\n-  {\n-  }\n-};\n-\n #define ALL_OBJFILE_OSECTIONS(objfile, osect)\t\\\n   for (osect = objfile->sections; osect < objfile->sections_end; osect++) \\\n     if (osect->the_bfd_section == NULL)\t\t\t\t\t\\"
    },
    {
      "sha": "17db29759c4ca8be592696c23838935a1d9ff6a8",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=f252c6d5dc49cb27838e153e863f16ea7895859e",
      "patch": "@@ -104,7 +104,7 @@ psymtab_storage::allocate_psymtab ()\n \n /* See psymtab.h.  */\n \n-objfile_psymtabs\n+psymtab_storage::partial_symtab_range\n require_partial_symbols (struct objfile *objfile, int verbose)\n {\n   if ((objfile->flags & OBJF_PSYMTABS_READ) == 0)\n@@ -129,7 +129,7 @@ require_partial_symbols (struct objfile *objfile, int verbose)\n \t}\n     }\n \n-  return objfile_psymtabs (objfile);\n+  return objfile->psymtabs ();\n }\n \n /* Helper function for psym_map_symtabs_matching_filename that\n@@ -1341,7 +1341,7 @@ psym_expand_symtabs_matching\n   for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n     ps->searched_flag = PST_NOT_SEARCHED;\n \n-  for (partial_symtab *ps : objfile_psymtabs (objfile))\n+  for (partial_symtab *ps : objfile->psymtabs ())\n     {\n       QUIT;\n "
    },
    {
      "sha": "3ee5eee0b659522aef70f9af6b443027f2788e67",
      "filename": "gdb/psymtab.h",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/psymtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f252c6d5dc49cb27838e153e863f16ea7895859e/gdb/psymtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.h?ref=f252c6d5dc49cb27838e153e863f16ea7895859e",
      "patch": "@@ -92,6 +92,16 @@ class psymtab_storage\n \n   struct partial_symtab *allocate_psymtab ();\n \n+  typedef next_adapter<struct partial_symtab> partial_symtab_range;\n+\n+  /* A range adapter that makes it possible to iterate over all\n+     psymtabs in one objfile.  */\n+\n+  partial_symtab_range range ()\n+  {\n+    return partial_symtab_range (psymtabs);\n+  }\n+\n \n   /* Each objfile points to a linked list of partial symtabs derived from\n      this file, one partial symtab structure for each compilation unit\n@@ -144,8 +154,7 @@ extern const struct quick_symbol_functions dwarf2_debug_names_functions;\n    are loaded.  This function returns a range adapter suitable for\n    iterating over the psymtabs of OBJFILE.  */\n \n-class objfile_psymtabs;\n-extern objfile_psymtabs require_partial_symbols (struct objfile *objfile,\n-\t\t\t\t\t\t int verbose);\n+extern psymtab_storage::partial_symtab_range require_partial_symbols\n+    (struct objfile *objfile, int verbose);\n \n #endif /* PSYMTAB_H */"
    }
  ]
}