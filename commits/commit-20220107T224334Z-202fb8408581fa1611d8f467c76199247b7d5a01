{
  "sha": "202fb8408581fa1611d8f467c76199247b7d5a01",
  "node_id": "C_kwDOANOeidoAKDIwMmZiODQwODU4MWZhMTYxMWQ4ZjQ2N2M3NjE5OTI0N2I3ZDVhMDE",
  "commit": {
    "author": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2021-11-22T22:36:47Z"
    },
    "committer": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2022-01-07T22:43:34Z"
    },
    "message": "gdb/testsuite: Remove duplicates from gdb.mi/mi-catch-load.exp\n\nWhen I run the testsuite, I have:\n\n    Running .../gdb/testsuite/gdb.mi/mi-catch-load.exp ...\n    DUPLICATE: gdb.mi/mi-catch-load.exp: breakpoint at main\n    DUPLICATE: gdb.mi/mi-catch-load.exp: mi runto main\n\nFix by grouping the various phases in with_test_prefix blocks.  Since\nthe tests now have a prefix, remove the manually written prefixes in\ntestnames.\n\nAlso change some messages with the pattern \"(timeout) $testname\" into\n\"$estname (timeout)\" since tools will handle this as $testname[1] (which\nis what we want in this particular scenario).\n\nTested on x86_64-linux.\n\n[1] https://sourceware.org/gdb/wiki/GDBTestcaseCookbook#Do_not_use_.22tail_parentheses.22_on_test_messages",
    "tree": {
      "sha": "46bd2843139f0915f5b02f357f7e7281d91d0ae3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/46bd2843139f0915f5b02f357f7e7281d91d0ae3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/202fb8408581fa1611d8f467c76199247b7d5a01",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/202fb8408581fa1611d8f467c76199247b7d5a01",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/202fb8408581fa1611d8f467c76199247b7d5a01",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/202fb8408581fa1611d8f467c76199247b7d5a01/comments",
  "author": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4df98d9d31173d45438fbf000e6ed2d3cdd98ae2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4df98d9d31173d45438fbf000e6ed2d3cdd98ae2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4df98d9d31173d45438fbf000e6ed2d3cdd98ae2"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 41,
    "deletions": 36
  },
  "files": [
    {
      "sha": "ca2f586fae5c2f4f76de13a3497dde0607f6c99f",
      "filename": "gdb/testsuite/gdb.mi/mi-catch-load.exp",
      "status": "modified",
      "additions": 41,
      "deletions": 36,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/202fb8408581fa1611d8f467c76199247b7d5a01/gdb/testsuite/gdb.mi/mi-catch-load.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/202fb8408581fa1611d8f467c76199247b7d5a01/gdb/testsuite/gdb.mi/mi-catch-load.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-catch-load.exp?ref=202fb8408581fa1611d8f467c76199247b7d5a01",
      "patch": "@@ -40,48 +40,53 @@ if { [gdb_compile_shlib \"${srcdir}/${subdir}/${srcfile2}\" ${binfile2} {debug}] !\n     return -1\n }\n \n-mi_clean_restart $binfile\n-mi_runto_main\n-\n # test -catch-load\n-mi_gdb_test \"111-gdb-set auto-solib-add on\" \"111\\\\^done\" \"catch-load: auto-solib-add on\"\n-mi_gdb_test \"222-catch-load -t mi-catch-load-so.so*\" \\\n-    \"222\\\\^done,bkpt=\\{number=\\\"2\\\",type=\\\"catchpoint\\\",disp=\\\"del\\\",enabled=\\\"y\\\",what=\\\"load of library matching mi-catch-load-so\\.so\\\\*\\\",catch-type=\\\"load\\\",thread-groups=\\\\\\[\\\"i1\\\"\\\\\\],times=\\\"0\\\"\\}\" \\\n-    \"catch-load: catch load\"\n-mi_send_resuming_command \"exec-continue\" \"catch-load: continue\"\n+with_test_prefix \"catch-load\" {\n+    mi_clean_restart $binfile\n+    mi_runto_main\n \n-gdb_expect {\n-    -re \"\\\\*stopped.*reason=\\\"solib-event\\\".*added=.*\\r\\n.*\\r\\n$mi_gdb_prompt$\" {\n-        pass \"catch-load: solib-event stop\"\n-    }\n-    -re \".*$mi_gdb_prompt$\" {\n-\tsetup_kfail mi/15945 *-*-*mingw*\n-        fail \"catch-load: solib-event stop\"\n-    }\n-    timeout {\n-        fail \"(timeout) catch-load: solib-event stop\"\n+    mi_gdb_test \"111-gdb-set auto-solib-add on\" \"111\\\\^done\" \\\n+\t\t\"auto-solib-add on\"\n+    mi_gdb_test \"222-catch-load -t mi-catch-load-so.so*\" \\\n+\t\t\"222\\\\^done,bkpt=\\{number=\\\"2\\\",type=\\\"catchpoint\\\",disp=\\\"del\\\",enabled=\\\"y\\\",what=\\\"load of library matching mi-catch-load-so\\.so\\\\*\\\",catch-type=\\\"load\\\",thread-groups=\\\\\\[\\\"i1\\\"\\\\\\],times=\\\"0\\\"\\}\" \\\n+\t\t\"catch load\"\n+    mi_send_resuming_command \"exec-continue\" \"continue\"\n+\n+    gdb_expect {\n+\t-re \"\\\\*stopped.*reason=\\\"solib-event\\\".*added=.*\\r\\n.*\\r\\n$mi_gdb_prompt$\" {\n+\t    pass \"solib-event stop\"\n+\t}\n+\t-re \".*$mi_gdb_prompt$\" {\n+\t    setup_kfail mi/15945 *-*-*mingw*\n+\t    fail \"solib-event stop\"\n+\t}\n+\ttimeout {\n+\t    fail \"solib-event stop (timeout)\"\n+\t}\n     }\n }\n \n-mi_clean_restart $binfile\n-mi_runto_main\n-\n # test -catch-unload\n-mi_gdb_test \"111-gdb-set auto-solib-add on\" \"111\\\\^done\" \"catch-unload: auto-solib-add on\"\n-mi_gdb_test \"222-catch-unload -t mi-catch-load-so.so*\" \\\n-    \"222\\\\^done,bkpt=\\{number=\\\"2\\\",type=\\\"catchpoint\\\",disp=\\\"del\\\",enabled=\\\"y\\\",what=\\\"unload of library matching mi-catch-load-so\\.so\\\\*\\\",catch-type=\\\"unload\\\",thread-groups=\\\\\\[\\\"i1\\\"\\\\\\],times=\\\"0\\\"\\}\" \\\n-    \"catch-unload: catch unload\"\n-mi_send_resuming_command \"exec-continue\" \"catch-unload: continue\"\n+with_test_prefix \"catch-unload\" {\n+    mi_clean_restart $binfile\n+    mi_runto_main\n \n-gdb_expect {\n-    -re \"\\\\*stopped.*reason=\\\"solib-event\\\".*removed=.*\\r\\n.*\\r\\n$mi_gdb_prompt$\" {\n-        pass \"catch-unload: solib-event stop\"\n-    }\n-    -re \".*$mi_gdb_prompt$\" {\n-\tsetup_kfail mi/15945 *-*-*mingw*\n-        fail \"catch-unload: solib-event stop\"\n-    }\n-    timeout {\n-        fail \"(timeout) catch-unload: solib-event stop\"\n+    mi_gdb_test \"111-gdb-set auto-solib-add on\" \"111\\\\^done\" \"auto-solib-add on\"\n+    mi_gdb_test \"222-catch-unload -t mi-catch-load-so.so*\" \\\n+\t\t\"222\\\\^done,bkpt=\\{number=\\\"2\\\",type=\\\"catchpoint\\\",disp=\\\"del\\\",enabled=\\\"y\\\",what=\\\"unload of library matching mi-catch-load-so\\.so\\\\*\\\",catch-type=\\\"unload\\\",thread-groups=\\\\\\[\\\"i1\\\"\\\\\\],times=\\\"0\\\"\\}\" \\\n+\t\t\"catch unload\"\n+    mi_send_resuming_command \"exec-continue\" \"continue\"\n+\n+    gdb_expect {\n+\t-re \"\\\\*stopped.*reason=\\\"solib-event\\\".*removed=.*\\r\\n.*\\r\\n$mi_gdb_prompt$\" {\n+\t    pass \"solib-event stop\"\n+\t}\n+\t-re \".*$mi_gdb_prompt$\" {\n+\t    setup_kfail mi/15945 *-*-*mingw*\n+\t    fail \"solib-event stop\"\n+\t}\n+\ttimeout {\n+\t    fail \"solib-event stop (timeout)\"\n+\t}\n     }\n }"
    }
  ]
}