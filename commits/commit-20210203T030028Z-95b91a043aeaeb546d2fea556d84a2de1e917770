{
  "sha": "95b91a043aeaeb546d2fea556d84a2de1e917770",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTViOTFhMDQzYWVhZWI1NDZkMmZlYTU1NmQ4NGEyZGUxZTkxNzc3MA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-31T15:34:41Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-03T03:00:28Z"
    },
    "message": "pr27270 and pr27284, ar segfaults and wrong file mode\n\n\tPR 27270\n\tPR 27284\n\tPR 26945\n\t* ar.c: Don't include libbfd.h.\n\t(write_archive): Replace xmalloc+strcpy with xstrdup.  Use\n\tbfd_stat rather than fstat on iostream.  Move stat and fd tests\n\toutside of _WIN32 ifdef.  Delete skip_stat variable.\n\t* arsup.c (temp_name, real_ofd): New static variables.\n\t(ar_open): Use make_tempname and bfd_fdopenw.\n\t(ar_save): Adjust to suit ar_open changes.  Move stat output\n\tof _WIN32 ifdef.\n\t* objcopy.c: Don't include libbfd.h.\n\t(copy_file): Use bfd_stat.",
    "tree": {
      "sha": "f4d1b89f8cbd5afa631d7110b49dec23546cb25e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f4d1b89f8cbd5afa631d7110b49dec23546cb25e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/95b91a043aeaeb546d2fea556d84a2de1e917770",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95b91a043aeaeb546d2fea556d84a2de1e917770",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/95b91a043aeaeb546d2fea556d84a2de1e917770",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95b91a043aeaeb546d2fea556d84a2de1e917770/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6955136728a68365bbb5e6e1327dff1654b2a0ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6955136728a68365bbb5e6e1327dff1654b2a0ca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6955136728a68365bbb5e6e1327dff1654b2a0ca"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 50,
    "deletions": 28
  },
  "files": [
    {
      "sha": "79c4609b1a220109a841ead6334bbe003be2975d",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=95b91a043aeaeb546d2fea556d84a2de1e917770",
      "patch": "@@ -1,3 +1,19 @@\n+2021-02-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27270\n+\tPR 27284\n+\tPR 26945\n+\t* ar.c: Don't include libbfd.h.\n+\t(write_archive): Replace xmalloc+strcpy with xstrdup.  Use\n+\tbfd_stat rather than fstat on iostream.  Move stat and fd tests\n+\toutside of _WIN32 ifdef.  Delete skip_stat variable.\n+\t* arsup.c (temp_name, real_ofd): New static variables.\n+\t(ar_open): Use make_tempname and bfd_fdopenw.\n+\t(ar_save): Adjust to suit ar_open changes.  Move stat output\n+\tof _WIN32 ifdef.\n+\t* objcopy.c: Don't include libbfd.h.\n+\t(copy_file): Use bfd_stat.\n+\n 2021-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR binutils/27281"
    },
    {
      "sha": "0ecfa3372281a7b6172ea23d0d855c4f3ba6e625",
      "filename": "binutils/ar.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/ar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/ar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ar.c?ref=95b91a043aeaeb546d2fea556d84a2de1e917770",
      "patch": "@@ -25,7 +25,6 @@\n \n #include \"sysdep.h\"\n #include \"bfd.h\"\n-#include \"libbfd.h\"\n #include \"libiberty.h\"\n #include \"progress.h\"\n #include \"getopt.h\"\n@@ -1255,10 +1254,8 @@ write_archive (bfd *iarch)\n   bfd *contents_head = iarch->archive_next;\n   int ofd = -1;\n   struct stat target_stat;\n-  bfd_boolean skip_stat = FALSE;\n \n-  old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);\n-  strcpy (old_name, bfd_get_filename (iarch));\n+  old_name = xstrdup (bfd_get_filename (iarch));\n   new_name = make_tempname (old_name, &ofd);\n \n   if (new_name == NULL)\n@@ -1303,11 +1300,9 @@ write_archive (bfd *iarch)\n \n #if !defined (_WIN32) || defined (__CYGWIN32__)\n   ofd = dup (ofd);\n-  if (iarch == NULL || iarch->iostream == NULL)\n-    skip_stat = TRUE;\n-  else if (ofd == -1 || fstat (fileno ((FILE *) iarch->iostream), &target_stat) != 0)\n-    bfd_fatal (old_name);\n #endif\n+  if (ofd == -1 || bfd_stat (iarch, &target_stat) != 0)\n+    bfd_fatal (old_name);\n \n   if (!bfd_close (obfd))\n     bfd_fatal (old_name);\n@@ -1318,7 +1313,7 @@ write_archive (bfd *iarch)\n   /* We don't care if this fails; we might be creating the archive.  */\n   bfd_close (iarch);\n \n-  if (smart_rename (new_name, old_name, ofd, skip_stat ? NULL : &target_stat, 0) != 0)\n+  if (smart_rename (new_name, old_name, ofd, &target_stat, 0) != 0)\n     xexit (1);\n   free (old_name);\n   free (new_name);"
    },
    {
      "sha": "a60629f67618f16407cb0f409b9a3e9259013fdb",
      "filename": "binutils/arsup.c",
      "status": "modified",
      "additions": 29,
      "deletions": 17,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/arsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/arsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/arsup.c?ref=95b91a043aeaeb546d2fea556d84a2de1e917770",
      "patch": "@@ -42,6 +42,8 @@ extern int deterministic;\n \n static bfd *obfd;\n static char *real_name;\n+static char *temp_name;\n+static int real_ofd;\n static FILE *outfile;\n \n static void\n@@ -149,27 +151,24 @@ maybequit (void)\n void\n ar_open (char *name, int t)\n {\n-  char *tname;\n-  const char *bname = lbasename (name);\n-  real_name = name;\n+  real_name = xstrdup (name);\n+  temp_name = make_tempname (real_name, &real_ofd);\n \n-  /* Prepend tmp- to the beginning, to avoid file-name clashes after\n-     truncation on filesystems with limited namespaces (DOS).  */\n-  if (asprintf (&tname, \"%.*stmp-%s\", (int) (bname - name), name, bname) == -1)\n+  if (temp_name == NULL)\n     {\n-      fprintf (stderr, _(\"%s: Can't allocate memory for temp name (%s)\\n\"),\n+      fprintf (stderr, _(\"%s: Can't open temporary file (%s)\\n\"),\n \t       program_name, strerror(errno));\n       maybequit ();\n       return;\n     }\n \n-  obfd = bfd_openw (tname, NULL);\n+  obfd = bfd_fdopenw (temp_name, NULL, real_ofd);\n \n   if (!obfd)\n     {\n       fprintf (stderr,\n \t       _(\"%s: Can't open output archive %s\\n\"),\n-\t       program_name,  tname);\n+\t       program_name, temp_name);\n \n       maybequit ();\n     }\n@@ -344,28 +343,41 @@ ar_save (void)\n     }\n   else\n     {\n-      char *ofilename = xstrdup (bfd_get_filename (obfd));\n       bfd_boolean skip_stat = FALSE;\n       struct stat target_stat;\n-      int ofd = -1;\n+      int ofd = real_ofd;\n \n       if (deterministic > 0)\n         obfd->flags |= BFD_DETERMINISTIC_OUTPUT;\n \n #if !defined (_WIN32) || defined (__CYGWIN32__)\n       /* It's OK to fail; at worst it will result in SMART_RENAME using a slow\n          copy fallback to write the output.  */\n-      ofd = dup (fileno ((FILE *) obfd->iostream));\n-      if (lstat (real_name, &target_stat) != 0)\n-\tskip_stat = TRUE;\n+      ofd = dup (ofd);\n #endif\n-\n       bfd_close (obfd);\n \n-      smart_rename (ofilename, real_name, ofd,\n+      if (lstat (real_name, &target_stat) != 0)\n+\t{\n+\t  /* The temp file created in ar_open has mode 0600 as per mkstemp.\n+\t     Create the real empty output file here so smart_rename will\n+\t     update the mode according to the process umask.  */\n+\t  obfd = bfd_openw (real_name, NULL);\n+\t  if (obfd == NULL\n+\t      || bfd_stat (obfd, &target_stat) != 0)\n+\t    skip_stat = TRUE;\n+\t  if (obfd != NULL)\n+\t    {\n+\t      bfd_set_format (obfd, bfd_archive);\n+\t      bfd_close (obfd);\n+\t    }\n+\t}\n+\n+      smart_rename (temp_name, real_name, ofd,\n \t\t    skip_stat ? NULL : &target_stat, 0);\n       obfd = 0;\n-      free (ofilename);\n+      free (temp_name);\n+      free (real_name);\n     }\n }\n "
    },
    {
      "sha": "0e1047e7482dfe89eaff915cb7d719c4be33233a",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95b91a043aeaeb546d2fea556d84a2de1e917770/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=95b91a043aeaeb546d2fea556d84a2de1e917770",
      "patch": "@@ -20,7 +20,6 @@\n \f\n #include \"sysdep.h\"\n #include \"bfd.h\"\n-#include \"libbfd.h\"\n #include \"progress.h\"\n #include \"getopt.h\"\n #include \"libiberty.h\"\n@@ -3768,7 +3767,7 @@ copy_file (const char *input_filename, const char *output_filename, int ofd,\n   /* To allow us to do \"strip *\" without dying on the first\n      non-object file, failures are nonfatal.  */\n   ibfd = bfd_openr (input_filename, input_target);\n-  if (ibfd == NULL || fstat (fileno ((FILE *) ibfd->iostream), in_stat) != 0)\n+  if (ibfd == NULL || bfd_stat (ibfd, in_stat) != 0)\n     {\n       bfd_nonfatal_message (input_filename, NULL, NULL, NULL);\n       status = 1;"
    }
  ]
}