{
  "sha": "7f02673206eaef00f240b84c21069b4e5fbe09ea",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2YwMjY3MzIwNmVhZWYwMGYyNDBiODRjMjEwNjliNGU1ZmJlMDllYQ==",
  "commit": {
    "author": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2020-01-09T17:20:56Z"
    },
    "committer": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2020-01-10T14:16:05Z"
    },
    "message": "[PR ld/22269] arm: Avoid dynamic relocs for undefweak symbols in static PIE\n\nWith static PIE linking undefined weak symbols are resolved to 0, so no\ndynamic relocation is needed for them. The UNDEFWEAK_NO_DYNAMIC_RELOC\nmacro was introduced so this case can be handled easily, but it was not\napplied consistently in the first attempt to fix ld/22269 for arm:\n\n  commit 95b03e4ad68e7a90f5096b47df595636344b783a\n  arm: Check UNDEFWEAK_NO_DYNAMIC_RELOC\n\nThis patch fixes spurious relative relocs in static PIE binaries against\nGOT entries created for undefined weak symbols on arm*-*, this fixes\n\nFAIL: pr22269-1 (static pie undefined weak)\n\nbfd/ChangeLog:\n\n\tPR ld/22269\n\t* elf32-arm.c (elf32_arm_final_link_relocate): Use\n\tUNDEFWEAK_NO_DYNAMIC_RELOC.\n\t(allocate_dynrelocs_for_symbol): Likewise.",
    "tree": {
      "sha": "d9e07fb6af31f165aa84ca22d772a091ae86b583",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d9e07fb6af31f165aa84ca22d772a091ae86b583"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7f02673206eaef00f240b84c21069b4e5fbe09ea",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f02673206eaef00f240b84c21069b4e5fbe09ea",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7f02673206eaef00f240b84c21069b4e5fbe09ea",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f02673206eaef00f240b84c21069b4e5fbe09ea/comments",
  "author": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8cd0e5e93145699736a370b271ff03f3f41670b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cd0e5e93145699736a370b271ff03f3f41670b0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8cd0e5e93145699736a370b271ff03f3f41670b0"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 9,
    "deletions": 4
  },
  "files": [
    {
      "sha": "00d6cd810b38fca970f7d24a091a654c95a425ce",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f02673206eaef00f240b84c21069b4e5fbe09ea/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f02673206eaef00f240b84c21069b4e5fbe09ea/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7f02673206eaef00f240b84c21069b4e5fbe09ea",
      "patch": "@@ -1,3 +1,10 @@\n+2020-01-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\tPR ld/22269\n+\t* elf32-arm.c (elf32_arm_final_link_relocate): Use\n+\tUNDEFWEAK_NO_DYNAMIC_RELOC.\n+\t(allocate_dynrelocs_for_symbol): Likewise.\n+\n 2020-01-10  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR 25210"
    },
    {
      "sha": "faf8376f2006f9c8f8da977fd5341741af84ecd5",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f02673206eaef00f240b84c21069b4e5fbe09ea/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f02673206eaef00f240b84c21069b4e5fbe09ea/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=7f02673206eaef00f240b84c21069b4e5fbe09ea",
      "patch": "@@ -11578,8 +11578,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *\t    howto,\n \t\t  if (dynreloc_st_type == STT_GNU_IFUNC)\n \t\t    outrel.r_info = ELF32_R_INFO (0, R_ARM_IRELATIVE);\n \t\t  else if (bfd_link_pic (info)\n-\t\t\t   && (ELF_ST_VISIBILITY (h->other) == STV_DEFAULT\n-\t\t\t       || h->root.type != bfd_link_hash_undefweak))\n+\t\t\t   && !UNDEFWEAK_NO_DYNAMIC_RELOC (info, h))\n \t\t    outrel.r_info = ELF32_R_INFO (0, R_ARM_RELATIVE);\n \t\t  else\n \t\t    {\n@@ -16452,8 +16451,7 @@ allocate_dynrelocs_for_symbol (struct elf_link_hash_entry *h, void * inf)\n \t       GOT entry's R_ARM_IRELATIVE relocation.  */\n \t    elf32_arm_allocate_irelocs (info, htab->root.srelgot, 1);\n \t  else if (bfd_link_pic (info)\n-\t\t   && (ELF_ST_VISIBILITY (h->other) == STV_DEFAULT\n-\t\t       || h->root.type != bfd_link_hash_undefweak))\n+\t\t   && !UNDEFWEAK_NO_DYNAMIC_RELOC (info, h))\n \t    /* Reserve room for the GOT entry's R_ARM_RELATIVE relocation.  */\n \t    elf32_arm_allocate_dynrelocs (info, htab->root.srelgot, 1);\n \t  else if (htab->fdpic_p && tls_type == GOT_NORMAL)"
    }
  ]
}