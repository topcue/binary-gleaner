{
  "sha": "79bc120c7be00596098c09cecd25383ae6ddce34",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzliYzEyMGM3YmUwMDU5NjA5OGMwOWNlY2QyNTM4M2FlNmRkY2UzNA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-12T12:31:59Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-12T12:31:59Z"
    },
    "message": "Add demangling support to readelf.\n\n\tPR binutils/26331\n\t* readelf.c (do_demangle): New option flag.\n\t(print_symbol): If do_demangle is enabled, demangle the symbol.\n\t(enum long_option_values): New enum to hold long option values.\n\t(options): Add demangle, no-demangle, recursion-limit and\n\tno-recursion-limit options.  Alpha sort the table.\n\t(usage): Describe the new options.\n\t(parse_args): Handle the new options.\n\t* NEWS: Mention the new feature.\n\t* doc/binutils.texi: Document the new feature.\n\t* testsuite/binutils-all/readelf.exp: Test the new feature.\n\t* testsuite/binutils-all/mangled.s: New file - assembler source.\n\t* testsuite/binutils-all/readelf.demangled: New file - expected\n\toutput from readelf.",
    "tree": {
      "sha": "52603d55375f972945e4e25f611f7bd89f637a1e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/52603d55375f972945e4e25f611f7bd89f637a1e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/79bc120c7be00596098c09cecd25383ae6ddce34",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79bc120c7be00596098c09cecd25383ae6ddce34",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/79bc120c7be00596098c09cecd25383ae6ddce34",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79bc120c7be00596098c09cecd25383ae6ddce34/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "79ddc88496c3c18eac94b7776dc75b05c33abf25",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79ddc88496c3c18eac94b7776dc75b05c33abf25",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/79ddc88496c3c18eac94b7776dc75b05c33abf25"
    }
  ],
  "stats": {
    "total": 210,
    "additions": 172,
    "deletions": 38
  },
  "files": [
    {
      "sha": "162159f5cf887c96f2d7db992f6d07afc89f396b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=79bc120c7be00596098c09cecd25383ae6ddce34",
      "patch": "@@ -1,3 +1,20 @@\n+2020-08-12  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR binutils/26331\n+\t* readelf.c (do_demangle): New option flag.\n+\t(print_symbol): If do_demangle is enabled, demangle the symbol.\n+\t(enum long_option_values): New enum to hold long option values.\n+\t(options): Add demangle, no-demangle, recursion-limit and\n+\tno-recursion-limit options.  Alpha sort the table.\n+\t(usage): Describe the new options.\n+\t(parse_args): Handle the new options.\n+\t* NEWS: Mention the new feature.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* testsuite/binutils-all/readelf.exp: Test the new feature.\n+\t* testsuite/binutils-all/mangled.s: New file - assembler source.\n+\t* testsuite/binutils-all/readelf.demangled: New file - expected\n+\toutput from readelf.\n+\n 2020-08-12  Nick Clifton  <nickc@redhat.com>\n \n \t* po/sr.po: Updated Serbian translation."
    },
    {
      "sha": "c0dc73d7d8f5e239f1c7077275803ab3e915a2f2",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=79bc120c7be00596098c09cecd25383ae6ddce34",
      "patch": "@@ -1,5 +1,9 @@\n -*- text -*-\n \n+* Readelf now accepts the -C command line option to enable the demangling of\n+  symbol names.  In addition the --demangle=<style>, --no-demangle,\n+  --recurse-limit and --no-recurse-limit options are also now availale.\n+\n Changes in 2.35:\n \n * Changed readelf's display of symbol names when wide mode is not enabled."
    },
    {
      "sha": "968da2cb28e619c41bf7f19c8c2ca612031405de",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=79bc120c7be00596098c09cecd25383ae6ddce34",
      "patch": "@@ -4694,6 +4694,8 @@ readelf [@option{-a}|@option{--all}]\n         [@option{-e}|@option{--headers}]\n         [@option{-s}|@option{--syms}|@option{--symbols}]\n         [@option{--dyn-syms}]\n+        [@option{--demangle@var{=style}}|@option{--no-demangle}]\n+        [@option{--recurse-limit}|@option{--no-recurse-limit}]\n         [@option{-n}|@option{--notes}]\n         [@option{-r}|@option{--relocs}]\n         [@option{-u}|@option{--unwind}]\n@@ -4809,6 +4811,34 @@ Displays the entries in dynamic symbol table section of the file, if it\n has one.  The output format is the same as the format used by the\n @option{--syms} option.\n \n+@item -C\n+@itemx --demangle[=@var{style}]\n+@cindex demangling in nm\n+Decode (@dfn{demangle}) low-level symbol names into user-level names.\n+This makes C++ function names readable.  Different compilers have\n+different mangling styles.  The optional demangling style argument can\n+be used to choose an appropriate demangling style for your\n+compiler. @xref{c++filt}, for more information on demangling.\n+\n+@item --no-demangle\n+Do not demangle low-level symbol names.  This is the default.\n+\n+@item --recurse-limit\n+@itemx --no-recurse-limit\n+@itemx --recursion-limit\n+@itemx --no-recursion-limit\n+Enables or disables a limit on the amount of recursion performed\n+whilst demangling strings.  Since the name mangling formats allow for\n+an inifinite level of recursion it is possible to create strings whose\n+decoding will exhaust the amount of stack space available on the host\n+machine, triggering a memory fault.  The limit tries to prevent this\n+from happening by restricting recursion to 2048 levels of nesting.\n+\n+The default is for this limit to be enabled, but disabling it may be\n+necessary in order to demangle truly complicated names.  Note however\n+that if the recursion limit is disabled then stack exhaustion is\n+possible and any bug reports about such an event will be rejected.\n+\n @item -e\n @itemx --headers\n Display all the headers in the file.  Equivalent to @option{-h -l -S}."
    },
    {
      "sha": "17868e2ac9b3fe32bdcba5d92dd7c2b1119bd49a",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 94,
      "deletions": 38,
      "changes": 132,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=79bc120c7be00596098c09cecd25383ae6ddce34",
      "patch": "@@ -61,6 +61,7 @@\n #include \"elfcomm.h\"\n #include \"dwarf.h\"\n #include \"ctf-api.h\"\n+#include \"demangle.h\"\n \n #include \"elf/common.h\"\n #include \"elf/external.h\"\n@@ -235,6 +236,8 @@ static bfd_boolean check_all = FALSE;\n static bfd_boolean is_32bit_elf = FALSE;\n static bfd_boolean decompress_dumps = FALSE;\n static bfd_boolean do_not_show_symbol_truncation = FALSE;\n+static bfd_boolean do_demangle = FALSE;\t/* Pretty print C++ symbol names.  */\n+static int demangle_flags = DMGL_ANSI | DMGL_PARAMS;\n \n static char *dump_ctf_parent_name;\n static char *dump_ctf_symtab_name;\n@@ -552,6 +555,7 @@ print_symbol (signed int width, const char * symbol)\n   mbstate_t state;\n #endif\n   unsigned int width_remaining;\n+  const void * alloced_symbol = NULL;\n \n   if (width < 0)\n     {\n@@ -584,6 +588,14 @@ print_symbol (signed int width, const char * symbol)\n   memset (& state, 0, sizeof (state));\n #endif\n \n+  if (do_demangle && *symbol)\n+    {\n+      const char * res = cplus_demangle (symbol, demangle_flags);\n+\n+      if (res != NULL)\n+\talloced_symbol = symbol = res;\n+    }\n+\n   while (width_remaining)\n     {\n       size_t  n;\n@@ -643,6 +655,7 @@ print_symbol (signed int width, const char * symbol)\n       num_printed = width;\n     }\n \n+  free ((void *) alloced_symbol);\n   return num_printed;\n }\n \n@@ -4471,67 +4484,76 @@ get_section_type_name (Filedata * filedata, unsigned int sh_type)\n     }\n }\n \n-#define OPTION_DEBUG_DUMP\t512\n-#define OPTION_DYN_SYMS\t\t513\n-#define OPTION_DWARF_DEPTH\t514\n-#define OPTION_DWARF_START\t515\n-#define OPTION_DWARF_CHECK\t516\n-#define OPTION_CTF_DUMP\t\t517\n-#define OPTION_CTF_PARENT\t518\n-#define OPTION_CTF_SYMBOLS\t519\n-#define OPTION_CTF_STRINGS\t520\n+enum long_option_values\n+{\n+  OPTION_DEBUG_DUMP = 512,\n+  OPTION_DYN_SYMS,\n+  OPTION_DWARF_DEPTH,\n+  OPTION_DWARF_START,\n+  OPTION_DWARF_CHECK,\n+  OPTION_CTF_DUMP,\n+  OPTION_CTF_PARENT,\n+  OPTION_CTF_SYMBOLS,\n+  OPTION_CTF_STRINGS,\n+  OPTION_WITH_SYMBOL_VERSIONS,\n+  OPTION_RECURSE_LIMIT,\n+  OPTION_NO_RECURSE_LIMIT,\n+  OPTION_NO_DEMANGLING\n+};\n \n static struct option options[] =\n {\n+ /* Note - This table is alpha-sorted on the 'val'\n+    field in order to make adding new options easier.  */\n+  {\"arch-specific\",    no_argument, 0, 'A'},\n   {\"all\",\t       no_argument, 0, 'a'},\n-  {\"file-header\",      no_argument, 0, 'h'},\n-  {\"program-headers\",  no_argument, 0, 'l'},\n+  {\"demangle\",         optional_argument, 0, 'C'},\n+  {\"archive-index\",    no_argument, 0, 'c'},\n+  {\"use-dynamic\",      no_argument, 0, 'D'},\n+  {\"dynamic\",\t       no_argument, 0, 'd'},\n   {\"headers\",\t       no_argument, 0, 'e'},\n+  {\"section-groups\",   no_argument, 0, 'g'},\n+  {\"help\",\t       no_argument, 0, 'H'},\n+  {\"file-header\",      no_argument, 0, 'h'},\n   {\"histogram\",\t       no_argument, 0, 'I'},\n+  {\"lint\",             no_argument, 0, 'L'},\n+  {\"enable-checks\",    no_argument, 0, 'L'},\n+  {\"program-headers\",  no_argument, 0, 'l'},\n   {\"segments\",\t       no_argument, 0, 'l'},\n-  {\"sections\",\t       no_argument, 0, 'S'},\n-  {\"section-headers\",  no_argument, 0, 'S'},\n-  {\"section-groups\",   no_argument, 0, 'g'},\n-  {\"section-details\",  no_argument, 0, 't'},\n   {\"full-section-name\",no_argument, 0, 'N'},\n+  {\"notes\",\t       no_argument, 0, 'n'},\n+  {\"string-dump\",      required_argument, 0, 'p'},\n+  {\"relocated-dump\",   required_argument, 0, 'R'},\n+  {\"relocs\",\t       no_argument, 0, 'r'},\n+  {\"section-headers\",  no_argument, 0, 'S'},\n+  {\"sections\",\t       no_argument, 0, 'S'},\n   {\"symbols\",\t       no_argument, 0, 's'},\n   {\"syms\",\t       no_argument, 0, 's'},\n-  {\"dyn-syms\",\t       no_argument, 0, OPTION_DYN_SYMS},\n-  {\"relocs\",\t       no_argument, 0, 'r'},\n-  {\"notes\",\t       no_argument, 0, 'n'},\n-  {\"dynamic\",\t       no_argument, 0, 'd'},\n-  {\"lint\",             no_argument, 0, 'L'},\n-  {\"enable-checks\",    no_argument, 0, 'L'},\n-  {\"arch-specific\",    no_argument, 0, 'A'},\n-  {\"version-info\",     no_argument, 0, 'V'},\n-  {\"use-dynamic\",      no_argument, 0, 'D'},\n+  {\"silent-truncation\",no_argument, 0, 'T'},\n+  {\"section-details\",  no_argument, 0, 't'},\n   {\"unwind\",\t       no_argument, 0, 'u'},\n-  {\"archive-index\",    no_argument, 0, 'c'},\n+  {\"version-info\",     no_argument, 0, 'V'},\n+  {\"version\",\t       no_argument, 0, 'v'},\n+  {\"wide\",\t       no_argument, 0, 'W'},\n   {\"hex-dump\",\t       required_argument, 0, 'x'},\n-  {\"relocated-dump\",   required_argument, 0, 'R'},\n-  {\"string-dump\",      required_argument, 0, 'p'},\n   {\"decompress\",       no_argument, 0, 'z'},\n-#ifdef SUPPORT_DISASSEMBLY\n-  {\"instruction-dump\", required_argument, 0, 'i'},\n-#endif\n-  {\"debug-dump\",       optional_argument, 0, OPTION_DEBUG_DUMP},\n \n+  {\"no-demangle\",      no_argument, 0, OPTION_NO_DEMANGLING},\n+  {\"recurse-limit\",    no_argument, NULL, OPTION_RECURSE_LIMIT},\n+  {\"no-recurse-limit\", no_argument, NULL, OPTION_NO_RECURSE_LIMIT},\n+  {\"no-recursion-limit\", no_argument, NULL, OPTION_NO_RECURSE_LIMIT},\n+  {\"dyn-syms\",\t       no_argument, 0, OPTION_DYN_SYMS},\n+  {\"debug-dump\",       optional_argument, 0, OPTION_DEBUG_DUMP},\n   {\"dwarf-depth\",      required_argument, 0, OPTION_DWARF_DEPTH},\n   {\"dwarf-start\",      required_argument, 0, OPTION_DWARF_START},\n   {\"dwarf-check\",      no_argument, 0, OPTION_DWARF_CHECK},\n-\n #ifdef ENABLE_LIBCTF\n   {\"ctf\",\t       required_argument, 0, OPTION_CTF_DUMP},\n-\n   {\"ctf-symbols\",      required_argument, 0, OPTION_CTF_SYMBOLS},\n   {\"ctf-strings\",      required_argument, 0, OPTION_CTF_STRINGS},\n   {\"ctf-parent\",       required_argument, 0, OPTION_CTF_PARENT},\n #endif\n \n-  {\"version\",\t       no_argument, 0, 'v'},\n-  {\"wide\",\t       no_argument, 0, 'W'},\n-  {\"silent-truncation\",no_argument, 0, 'T'},\n-  {\"help\",\t       no_argument, 0, 'H'},\n   {0,\t\t       no_argument, 0, 0}\n };\n \n@@ -4553,6 +4575,13 @@ usage (FILE * stream)\n   -s --syms              Display the symbol table\\n\\\n      --symbols           An alias for --syms\\n\\\n      --dyn-syms          Display the dynamic symbol table\\n\\\n+  -C --demangle[=STYLE]  Decode low-level symbol names into user-level names\\n\\\n+                          The STYLE, if specified, can be `auto' (the default),\\n\\\n+                          `gnu', `lucid', `arm', `hp', `edg', `gnu-v3', `java'\\n\\\n+                          or `gnat'\\n\\\n+     --no-demangle       Do not demangle low-level symbol names.  (This is the default)\\n\\\n+     --recurse-limit     Enable a demangling recursion limit.  (This is the default)\\n\\\n+     --no-recurse-limit  Disable a demangling recursion limit\\n\\\n   -n --notes             Display the core notes (if present)\\n\\\n   -r --relocs            Display the relocations (if present)\\n\\\n   -u --unwind            Display the unwind info (if present)\\n\\\n@@ -4693,7 +4722,7 @@ parse_args (struct dump_data *dumpdata, int argc, char ** argv)\n     usage (stderr);\n \n   while ((c = getopt_long\n-\t  (argc, argv, \"ADHILNR:STVWacdeghi:lnp:rstuvw::x:z\", options, NULL)) != EOF)\n+\t  (argc, argv, \"ACDHILNR:STVWacdeghi:lnp:rstuvw::x:z\", options, NULL)) != EOF)\n     {\n       switch (c)\n \t{\n@@ -4718,6 +4747,7 @@ parse_args (struct dump_data *dumpdata, int argc, char ** argv)\n \t  do_arch = TRUE;\n \t  do_notes = TRUE;\n \t  break;\n+\n \tcase 'g':\n \t  do_section_groups = TRUE;\n \t  break;\n@@ -4858,6 +4888,32 @@ parse_args (struct dump_data *dumpdata, int argc, char ** argv)\n \tcase 'T':\n \t  do_not_show_symbol_truncation = TRUE;\n \t  break;\n+\tcase 'C':\n+\t  do_demangle = TRUE;\n+\t  if (optarg != NULL)\n+\t    {\n+\t      enum demangling_styles style;\n+\n+\t      style = cplus_demangle_name_to_style (optarg);\n+\t      if (style == unknown_demangling)\n+\t\terror (_(\"unknown demangling style `%s'\"), optarg);\n+\n+\t      cplus_demangle_set_style (style);\n+\t    }\n+\t  break;\n+\tcase OPTION_NO_DEMANGLING:\n+\t  do_demangle = FALSE;\n+\t  break;\n+\tcase OPTION_RECURSE_LIMIT:\n+\t  demangle_flags &= ~ DMGL_NO_RECURSE_LIMIT;\n+\t  break;\n+\tcase OPTION_NO_RECURSE_LIMIT:\n+\t  demangle_flags |= DMGL_NO_RECURSE_LIMIT;\n+\t  break;\n+\tcase OPTION_WITH_SYMBOL_VERSIONS:\n+\t  /* Ignored for backward compatibility.  */\n+\t  break;\n+\t  \n \tdefault:\n \t  /* xgettext:c-format */\n \t  error (_(\"Invalid option '-%c'\\n\"), c);"
    },
    {
      "sha": "0a28d6d4f555814787f162568ce02137aa9114d9",
      "filename": "binutils/testsuite/binutils-all/mangled.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/testsuite/binutils-all/mangled.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/testsuite/binutils-all/mangled.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/mangled.s?ref=79bc120c7be00596098c09cecd25383ae6ddce34",
      "patch": "@@ -0,0 +1,6 @@\n+\t.text\n+\t\t\n+\t.global _ZN4gold12Output_relocILi9ELb1ELi64ELb0EEC2EPNS_12Sized_relobjILi64ELb0EEEjjPNS_11Output_dataEmbbbb\n+_ZN4gold12Output_relocILi9ELb1ELi64ELb0EEC2EPNS_12Sized_relobjILi64ELb0EEEjjPNS_11Output_dataEmbbbb:\n+\t.dc.d 0\n+\t"
    },
    {
      "sha": "a137cedc1bbbee6e2bba2f9d36fd49634bea0449",
      "filename": "binutils/testsuite/binutils-all/readelf.demangled",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/testsuite/binutils-all/readelf.demangled",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/testsuite/binutils-all/readelf.demangled",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.demangled?ref=79bc120c7be00596098c09cecd25383ae6ddce34",
      "patch": "@@ -0,0 +1,5 @@\n+\n+Symbol table '.symtab' contains .* entries:\n+#...\n+.*gold::Output_reloc<9, true, 64, false>::Output_reloc\\(gold::Sized_relobj<64, false>\\*, unsigned int, unsigned int, gold::Output_data\\*, unsigned long, bool, bool, bool, bool\\)\n+#pass"
    },
    {
      "sha": "d7f47da68de2bebb9b4c637541b30b42e4ddec05",
      "filename": "binutils/testsuite/binutils-all/readelf.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/testsuite/binutils-all/readelf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79bc120c7be00596098c09cecd25383ae6ddce34/binutils/testsuite/binutils-all/readelf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.exp?ref=79bc120c7be00596098c09cecd25383ae6ddce34",
      "patch": "@@ -345,12 +345,28 @@ if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {\n     readelf_test -r $tempfile readelf.r  {}\n }\n \n+# Test demangling symbol names.\n+if {![binutils_assemble $srcdir/$subdir/mangled.s tmpdir/mangled.o]} then {\n+    unresolved \"readelf -s -C bintest (failed to assemble)\"\n+} else {\n+\n+    if ![is_remote host] {\n+\tset tempfile tmpdir/mangled.o\n+    } else {\n+\tset tempfile [remote_download host tmpdir/mangled.o]\n+    }\n+\n+    # Run the test.\n+    readelf_test {--syms --demangle --wide} $tempfile readelf.demangled {}\n+}\n+\n readelf_wi_test\n readelf_compressed_wa_test\n \n readelf_dump_test\n run_dump_test \"pr25543\"\n \n+\n # PR 13482 - Check for off-by-one errors when dumping .note sections.\n if {![binutils_assemble $srcdir/$subdir/version.s tmpdir/version.o]} then {\n     unresolved \"readelf -n version (failed to assemble)\""
    }
  ]
}