{
  "sha": "5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTE2MGQwZjMyM2Q0NzAzMWNiNzNjMzlhNGRiZDMxZDg5NzZiNGM4ZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-11-30T08:49:00Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-01T00:56:35Z"
    },
    "message": "PR26979, Visibility of undefined foo@v1 should constrain foo@@v1\n\nAlso, undefined foo should constrain the visibility of foo@@v1 just as\nit does for a later plain foo definition.\n\nbfd/\n\tPR 26979\n\t* elf-bfd.h (elf_backend_merge_symbol_attribute): Update prototype.\n\t* elf32-m68hc1x.h (elf32_m68hc11_merge_symbol_attribute): Likewise.\n\t* elfxx-mips.h (_bfd_mips_elf_merge_symbol_attribute): Likewise.\n\t* elfxx-x86.h (_bfd_x86_elf_merge_symbol_attribute): Likewise.\n\t* elf32-m68hc1x.c (elf32_m68hc11_merge_symbol_attribute): Replace\n\tisym parameter with st_other.  Adjust code.\n\t* elf64-alpha.c (elf64_alpha_merge_symbol_attribute): Likewise.\n\t* elf64-ppc.c (ppc64_elf_merge_symbol_attribute): Likewise.\n\t* elfnn-aarch64.c (elfNN_aarch64_merge_symbol_attribute): Likewise.\n\t* elfxx-mips.c (_bfd_mips_elf_merge_symbol_attribute): Likewise.\n\t* elfxx-x86.c (_bfd_x86_elf_merge_symbol_attribute): Likewise.\n\t* elflink.c (elf_merge_st_other): Likewise.\n\t(_bfd_elf_merge_symbol, elf_link_add_object_symbols): Adjust to suit.\n\t(_bfd_elf_copy_link_hash_symbol_type): Likewise.\n\t(_bfd_elf_add_default_symbol): Merge st_other from undecorated\n\tsymbol and @VER symbol to @@VER symbol.\nld/\n\t* testsuite/ld-elf/pr26979a.s,\n\t* testsuite/ld-elf/pr26979b.s,\n\t* testsuite/ld-elf/pr26979c.s,\n\t* testsuite/ld-elf/pr26979.ver,\n\t* testsuite/ld-elf/pr26979a.d,\n\t* testsuite/ld-elf/pr26979b.d: New tests.",
    "tree": {
      "sha": "59710941879e3598ddc359511388a9a5384ef271",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/59710941879e3598ddc359511388a9a5384ef271"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3ca6a4e547924828ec1428eda78217b30fae809c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ca6a4e547924828ec1428eda78217b30fae809c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3ca6a4e547924828ec1428eda78217b30fae809c"
    }
  ],
  "stats": {
    "total": 128,
    "additions": 99,
    "deletions": 29
  },
  "files": [
    {
      "sha": "d7724397960cad9fc17e79a34fbe67d9e2baf85e",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -1,3 +1,23 @@\n+2020-12-01  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26979\n+\t* elf-bfd.h (elf_backend_merge_symbol_attribute): Update prototype.\n+\t* elf32-m68hc1x.h (elf32_m68hc11_merge_symbol_attribute): Likewise.\n+\t* elfxx-mips.h (_bfd_mips_elf_merge_symbol_attribute): Likewise.\n+\t* elfxx-x86.h (_bfd_x86_elf_merge_symbol_attribute): Likewise.\n+\t* elf32-m68hc1x.c (elf32_m68hc11_merge_symbol_attribute): Replace\n+\tisym parameter with st_other.  Adjust code.\n+\t* elf64-alpha.c (elf64_alpha_merge_symbol_attribute): Likewise.\n+\t* elf64-ppc.c (ppc64_elf_merge_symbol_attribute): Likewise.\n+\t* elfnn-aarch64.c (elfNN_aarch64_merge_symbol_attribute): Likewise.\n+\t* elfxx-mips.c (_bfd_mips_elf_merge_symbol_attribute): Likewise.\n+\t* elfxx-x86.c (_bfd_x86_elf_merge_symbol_attribute): Likewise.\n+\t* elflink.c (elf_merge_st_other): Likewise.\n+\t(_bfd_elf_merge_symbol, elf_link_add_object_symbols): Adjust to suit.\n+\t(_bfd_elf_copy_link_hash_symbol_type): Likewise.\n+\t(_bfd_elf_add_default_symbol): Merge st_other from undecorated\n+\tsymbol and @VER symbol to @@VER symbol.\n+\n 2020-11-28  Alan Modra  <amodra@gmail.com>\n \n \tPR 26907"
    },
    {
      "sha": "e9c890f6f16bb751304cacbde8d81d833172d2d0",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -1295,8 +1295,7 @@ struct elf_backend_data\n \n   /* Merge the backend specific symbol attribute.  */\n   void (*elf_backend_merge_symbol_attribute)\n-    (struct elf_link_hash_entry *, const Elf_Internal_Sym *, bfd_boolean,\n-     bfd_boolean);\n+    (struct elf_link_hash_entry *, unsigned int, bfd_boolean, bfd_boolean);\n \n   /* This function, if defined, will return a string containing the\n      name of a target-specific dynamic tag.  */"
    },
    {
      "sha": "3ac6c670d02d81991d67e06f0c9cba571d5cbeb7",
      "filename": "bfd/elf32-m68hc1x.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf32-m68hc1x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf32-m68hc1x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m68hc1x.c?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -218,12 +218,12 @@ elf32_m68hc11_add_symbol_hook (bfd *abfd, struct bfd_link_info *info,\n \n void\n elf32_m68hc11_merge_symbol_attribute (struct elf_link_hash_entry *h,\n-\t\t\t\t      const Elf_Internal_Sym *isym,\n+\t\t\t\t      unsigned int st_other,\n \t\t\t\t      bfd_boolean definition,\n \t\t\t\t      bfd_boolean dynamic ATTRIBUTE_UNUSED)\n {\n   if (definition)\n-    h->other = ((isym->st_other & ~ELF_ST_VISIBILITY (-1))\n+    h->other = ((st_other & ~ELF_ST_VISIBILITY (-1))\n \t\t| ELF_ST_VISIBILITY (h->other));\n }\n "
    },
    {
      "sha": "6e673a83f4351a07b58319a9b5ad82e4fec4a66b",
      "filename": "bfd/elf32-m68hc1x.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf32-m68hc1x.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf32-m68hc1x.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m68hc1x.h?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -174,8 +174,7 @@ bfd_boolean elf32_m68hc11_add_symbol_hook\n    bfd_vma *valp);\n \n void elf32_m68hc11_merge_symbol_attribute\n-  (struct elf_link_hash_entry *, const Elf_Internal_Sym *,\n-   bfd_boolean, bfd_boolean);\n+  (struct elf_link_hash_entry *, unsigned int, bfd_boolean, bfd_boolean);\n \n /* Tweak the OSABI field of the elf header.  */\n "
    },
    {
      "sha": "ea7a53160bda4624ba0b254aa31c1da3668cebdc",
      "filename": "bfd/elf64-alpha.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf64-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf64-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-alpha.c?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -2093,13 +2093,13 @@ elf64_alpha_adjust_dynamic_symbol (struct bfd_link_info *info,\n \n static void\n elf64_alpha_merge_symbol_attribute (struct elf_link_hash_entry *h,\n-\t\t\t\t    const Elf_Internal_Sym *isym,\n+\t\t\t\t    unsigned int st_other,\n \t\t\t\t    bfd_boolean definition,\n \t\t\t\t    bfd_boolean dynamic)\n {\n   if (!dynamic && definition)\n     h->other = ((h->other & ELF_ST_VISIBILITY (-1))\n-\t\t| (isym->st_other & ~ELF_ST_VISIBILITY (-1)));\n+\t\t| (st_other & ~ELF_ST_VISIBILITY (-1)));\n }\n \n /* Symbol versioning can create new symbols, and make our old symbols"
    },
    {
      "sha": "9e5921743408c3513727d8e2576bbd096b63a243",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -4152,12 +4152,12 @@ ppc64_elf_add_symbol_hook (bfd *ibfd,\n \n static void\n ppc64_elf_merge_symbol_attribute (struct elf_link_hash_entry *h,\n-\t\t\t\t  const Elf_Internal_Sym *isym,\n+\t\t\t\t  unsigned int st_other,\n \t\t\t\t  bfd_boolean definition,\n \t\t\t\t  bfd_boolean dynamic)\n {\n   if (definition && (!dynamic || !h->def_regular))\n-    h->other = ((isym->st_other & ~ELF_ST_VISIBILITY (-1))\n+    h->other = ((st_other & ~ELF_ST_VISIBILITY (-1))\n \t\t| ELF_ST_VISIBILITY (h->other));\n }\n "
    },
    {
      "sha": "512c5044b3b7e0834c9c910253cc9bca3bd6a680",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 17,
      "deletions": 7,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -1006,20 +1006,20 @@ _bfd_elf_link_renumber_dynsyms (bfd *output_bfd,\n \n static void\n elf_merge_st_other (bfd *abfd, struct elf_link_hash_entry *h,\n-\t\t    const Elf_Internal_Sym *isym, asection *sec,\n+\t\t    unsigned int st_other, asection *sec,\n \t\t    bfd_boolean definition, bfd_boolean dynamic)\n {\n   const struct elf_backend_data *bed = get_elf_backend_data (abfd);\n \n   /* If st_other has a processor-specific meaning, specific\n      code might be needed here.  */\n   if (bed->elf_backend_merge_symbol_attribute)\n-    (*bed->elf_backend_merge_symbol_attribute) (h, isym, definition,\n+    (*bed->elf_backend_merge_symbol_attribute) (h, st_other, definition,\n \t\t\t\t\t\tdynamic);\n \n   if (!dynamic)\n     {\n-      unsigned symvis = ELF_ST_VISIBILITY (isym->st_other);\n+      unsigned symvis = ELF_ST_VISIBILITY (st_other);\n       unsigned hvis = ELF_ST_VISIBILITY (h->other);\n \n       /* Keep the most constraining visibility.  Leave the remainder\n@@ -1028,7 +1028,7 @@ elf_merge_st_other (bfd *abfd, struct elf_link_hash_entry *h,\n \th->other = symvis | (h->other & ~ELF_ST_VISIBILITY (-1));\n     }\n   else if (definition\n-\t   && ELF_ST_VISIBILITY (isym->st_other) != STV_DEFAULT\n+\t   && ELF_ST_VISIBILITY (st_other) != STV_DEFAULT\n \t   && (sec->flags & SEC_READONLY) == 0)\n     h->protected_def = 1;\n }\n@@ -1701,7 +1701,7 @@ _bfd_elf_merge_symbol (bfd *abfd,\n       /* Merge st_other.  If the symbol already has a dynamic index,\n \t but visibility says it should not be visible, turn it into a\n \t local symbol.  */\n-      elf_merge_st_other (abfd, h, sym, sec, newdef, newdyn);\n+      elf_merge_st_other (abfd, h, sym->st_other, sec, newdef, newdyn);\n       if (h->dynindx != -1)\n \tswitch (ELF_ST_VISIBILITY (h->other))\n \t  {\n@@ -2028,6 +2028,10 @@ _bfd_elf_add_default_symbol (bfd *abfd,\n       ht = (struct elf_link_hash_entry *) hi->root.u.i.link;\n       (*bed->elf_backend_copy_indirect_symbol) (info, ht, hi);\n \n+      /* If we first saw a reference to SHORTNAME with non-default\n+\t visibility, merge that visibility to the @@VER symbol.  */\n+      elf_merge_st_other (abfd, ht, hi->other, sec, TRUE, dynamic);\n+\n       /* A reference to the SHORTNAME symbol from a dynamic library\n \t will be satisfied by the versioned symbol at runtime.  In\n \t effect, we have a reference to the versioned symbol.  */\n@@ -2107,6 +2111,11 @@ _bfd_elf_add_default_symbol (bfd *abfd,\n \t  h->ref_dynamic_nonweak |= hi->ref_dynamic_nonweak;\n \t  hi->dynamic_def |= h->dynamic_def;\n \n+\t  /* If we first saw a reference to @VER symbol with\n+\t     non-default visibility, merge that visibility to the\n+\t     @@VER symbol.  */\n+\t  elf_merge_st_other (abfd, h, hi->other, sec, TRUE, dynamic);\n+\n \t  /* See if the new flags lead us to realize that the symbol\n \t     must be dynamic.  */\n \t  if (! *dynsym)\n@@ -5173,7 +5182,8 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n \t    }\n \n \t  /* Merge st_other field.  */\n-\t  elf_merge_st_other (abfd, h, isym, sec, definition, dynamic);\n+\t  elf_merge_st_other (abfd, h, isym->st_other, sec,\n+\t\t\t      definition, dynamic);\n \n \t  /* We don't want to make debug symbol dynamic.  */\n \t  if (definition\n@@ -15027,7 +15037,7 @@ _bfd_elf_copy_link_hash_symbol_type (bfd *abfd,\n   ehdest->target_internal = ehsrc->target_internal;\n \n   isym.st_other = ehsrc->other;\n-  elf_merge_st_other (abfd, ehdest, &isym, NULL, TRUE, FALSE);\n+  elf_merge_st_other (abfd, ehdest, isym.st_other, NULL, TRUE, FALSE);\n }\n \n /* Append a RELA relocation REL to section S in BFD.  */"
    },
    {
      "sha": "fcb617167952c43c42c42cfa87566dd7c4004db4",
      "filename": "bfd/elfnn-aarch64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfnn-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfnn-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-aarch64.c?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -2854,11 +2854,11 @@ elfNN_aarch64_copy_indirect_symbol (struct bfd_link_info *info,\n \n static void\n elfNN_aarch64_merge_symbol_attribute (struct elf_link_hash_entry *h,\n-\t\t\t\t      const Elf_Internal_Sym *isym,\n+\t\t\t\t      unsigned int st_other,\n \t\t\t\t      bfd_boolean definition ATTRIBUTE_UNUSED,\n \t\t\t\t      bfd_boolean dynamic ATTRIBUTE_UNUSED)\n {\n-  unsigned int isym_sto = isym->st_other & ~ELF_ST_VISIBILITY (-1);\n+  unsigned int isym_sto = st_other & ~ELF_ST_VISIBILITY (-1);\n   unsigned int h_sto = h->other & ~ELF_ST_VISIBILITY (-1);\n \n   if (isym_sto == h_sto)"
    },
    {
      "sha": "4ea04d48c023f4327d61648aeec5e4c9c87a3da8",
      "filename": "bfd/elfxx-mips.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-mips.c?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -16320,21 +16320,21 @@ const struct bfd_elf_special_section _bfd_mips_elf_special_sections[] =\n    definiton of the symbol.  */\n void\n _bfd_mips_elf_merge_symbol_attribute (struct elf_link_hash_entry *h,\n-\t\t\t\t      const Elf_Internal_Sym *isym,\n+\t\t\t\t      unsigned int st_other,\n \t\t\t\t      bfd_boolean definition,\n \t\t\t\t      bfd_boolean dynamic ATTRIBUTE_UNUSED)\n {\n-  if ((isym->st_other & ~ELF_ST_VISIBILITY (-1)) != 0)\n+  if ((st_other & ~ELF_ST_VISIBILITY (-1)) != 0)\n     {\n       unsigned char other;\n \n-      other = (definition ? isym->st_other : h->other);\n+      other = (definition ? st_other : h->other);\n       other &= ~ELF_ST_VISIBILITY (-1);\n       h->other = other | ELF_ST_VISIBILITY (h->other);\n     }\n \n   if (!definition\n-      && ELF_MIPS_IS_OPTIONAL (isym->st_other))\n+      && ELF_MIPS_IS_OPTIONAL (st_other))\n     h->other |= STO_OPTIONAL;\n }\n "
    },
    {
      "sha": "c84b92683522ba9e3cfead1e1b1f21cdb53bbe95",
      "filename": "bfd/elfxx-mips.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-mips.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-mips.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-mips.h?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -144,7 +144,7 @@ extern unsigned long _bfd_elf_mips_mach\n extern bfd_vma _bfd_mips_elf_sign_extend\n   (bfd_vma, int);\n extern void _bfd_mips_elf_merge_symbol_attribute\n-  (struct elf_link_hash_entry *, const Elf_Internal_Sym *, bfd_boolean, bfd_boolean);\n+  (struct elf_link_hash_entry *, unsigned int, bfd_boolean, bfd_boolean);\n extern char *_bfd_mips_elf_get_target_dtag (bfd_vma);\n extern bfd_boolean _bfd_mips_elf_ignore_undef_symbol\n   (struct elf_link_hash_entry *);"
    },
    {
      "sha": "8246fe5bd1b3fd12c1c57764c7d7cfc8a6c4087e",
      "filename": "bfd/elfxx-x86.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-x86.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-x86.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.c?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -1624,16 +1624,15 @@ _bfd_x86_elf_always_size_sections (bfd *output_bfd,\n \n void\n _bfd_x86_elf_merge_symbol_attribute (struct elf_link_hash_entry *h,\n-\t\t\t\t     const Elf_Internal_Sym *isym,\n+\t\t\t\t     unsigned int st_other,\n \t\t\t\t     bfd_boolean definition,\n \t\t\t\t     bfd_boolean dynamic ATTRIBUTE_UNUSED)\n {\n   if (definition)\n     {\n       struct elf_x86_link_hash_entry *eh\n \t= (struct elf_x86_link_hash_entry *) h;\n-      eh->def_protected = (ELF_ST_VISIBILITY (isym->st_other)\n-\t\t\t   == STV_PROTECTED);\n+      eh->def_protected = ELF_ST_VISIBILITY (st_other) == STV_PROTECTED;\n     }\n }\n "
    },
    {
      "sha": "d3bac465c86d2814d97840fb5fbc0c8be6d174b7",
      "filename": "bfd/elfxx-x86.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-x86.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/bfd/elfxx-x86.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.h?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -638,8 +638,7 @@ extern bfd_boolean _bfd_x86_elf_always_size_sections\n   (bfd *, struct bfd_link_info *);\n \n extern void _bfd_x86_elf_merge_symbol_attribute\n-  (struct elf_link_hash_entry *, const Elf_Internal_Sym *,\n-   bfd_boolean, bfd_boolean);\n+  (struct elf_link_hash_entry *, unsigned int, bfd_boolean, bfd_boolean);\n \n extern void _bfd_x86_elf_copy_indirect_symbol\n   (struct bfd_link_info *, struct elf_link_hash_entry *,"
    },
    {
      "sha": "7e09a2f28932ced65750ced83d18ca1f76760d01",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -1,3 +1,12 @@\n+2020-12-01  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-elf/pr26979a.s,\n+\t* testsuite/ld-elf/pr26979b.s,\n+\t* testsuite/ld-elf/pr26979c.s,\n+\t* testsuite/ld-elf/pr26979.ver,\n+\t* testsuite/ld-elf/pr26979a.d,\n+\t* testsuite/ld-elf/pr26979b.d: New tests.\n+\n 2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/26936"
    },
    {
      "sha": "46ddd300d7de29f863d137ffa2e7dfdf8960ac0e",
      "filename": "ld/testsuite/ld-elf/pr26979.ver",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979.ver",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979.ver",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26979.ver?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -0,0 +1 @@\n+v1 {};"
    },
    {
      "sha": "1b42598290d2eb3bef19f8fa0e5bcf78e9f131c6",
      "filename": "ld/testsuite/ld-elf/pr26979a.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26979a.d?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -0,0 +1,12 @@\n+#source: pr26979a.s\n+#source: pr26979c.s\n+#target: [check_shared_lib_support]\n+#as:\n+#ld: -shared --version-script=pr26979.ver\n+#readelf: -sW\n+\n+#...\n+.* GLOBAL PROTECTED .*foo@@v1\n+#...\n+.* GLOBAL PROTECTED .*foo@@v1\n+#pass"
    },
    {
      "sha": "c70c7563023b6119aeed38bc68816ffb2fdfddc3",
      "filename": "ld/testsuite/ld-elf/pr26979a.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979a.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979a.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26979a.s?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -0,0 +1,3 @@\n+ .protected foo\n+ .data\n+ .dc.a foo"
    },
    {
      "sha": "06973686e01faab79e910fd014de5924450f22c4",
      "filename": "ld/testsuite/ld-elf/pr26979b.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26979b.d?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -0,0 +1,12 @@\n+#source: pr26979b.s\n+#source: pr26979c.s\n+#target: [check_shared_lib_support]\n+#as:\n+#ld: -shared --version-script=pr26979.ver\n+#readelf: -sW\n+\n+#...\n+.* GLOBAL PROTECTED .*foo@@v1\n+#...\n+.* GLOBAL PROTECTED .*foo@@v1\n+#pass"
    },
    {
      "sha": "e078857d73e82df59ef582efdb2e0ff24ff3ac81",
      "filename": "ld/testsuite/ld-elf/pr26979b.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979b.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979b.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26979b.s?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -0,0 +1,4 @@\n+ .protected foo_v1\n+ .symver foo_v1, foo@v1\n+ .data\n+ .dc.a foo_v1"
    },
    {
      "sha": "f74dc1c6f758da6011661d55139583e1dd293b45",
      "filename": "ld/testsuite/ld-elf/pr26979c.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979c.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5160d0f323d47031cb73c39a4dbd31d8976b4c8e/ld/testsuite/ld-elf/pr26979c.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26979c.s?ref=5160d0f323d47031cb73c39a4dbd31d8976b4c8e",
      "patch": "@@ -0,0 +1,3 @@\n+ .globl foo\n+ .symver foo, foo@@@v1\n+foo:"
    }
  ]
}