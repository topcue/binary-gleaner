{
  "sha": "26c1e780920096772b5735250fa31a4184d2253c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjZjMWU3ODA5MjAwOTY3NzJiNTczNTI1MGZhMzFhNDE4NGQyMjUzYw==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-15T16:38:12Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:22:09Z"
    },
    "message": "[PATCH 12/57][Arm][GAS] Add support for MVE instructions: vaddlv and vaddv\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (M_MNEM_vaddlv, M_MNEM_vaddlva, M_MNEM_vaddv,\n\t M_MNEM_vaddva): New instruction encodings.\n\t(mve_encode_rq): New encoding helper function.\n\t(do_mve_vaddlv): New encoding function.\n\t(do_mve_vaddv): New encoding function.\n\t* testsuite/gas/arm/mve-vaddlv-bad.d: New test.\n\t* testsuite/gas/arm/mve-vaddlv-bad.l: New test.\n\t* testsuite/gas/arm/mve-vaddlv-bad.s: New test.\n\t* testsuite/gas/arm/mve-vaddv-bad.d: New test.\n\t* testsuite/gas/arm/mve-vaddv-bad.l: New test.\n\t* testsuite/gas/arm/mve-vaddv-bad.s: New test.",
    "tree": {
      "sha": "1dfb7836929d134b81a8b1c266fae563c7ee835b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1dfb7836929d134b81a8b1c266fae563c7ee835b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/26c1e780920096772b5735250fa31a4184d2253c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26c1e780920096772b5735250fa31a4184d2253c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/26c1e780920096772b5735250fa31a4184d2253c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26c1e780920096772b5735250fa31a4184d2253c/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c2dafc2a05c7bb1a341def59e6f39c1da42984dd"
    }
  ],
  "stats": {
    "total": 245,
    "additions": 245,
    "deletions": 0
  },
  "files": [
    {
      "sha": "74a3173ae5010ed7e0d53487ffd5e8f4b5c94867",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -1,3 +1,17 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (M_MNEM_vaddlv, M_MNEM_vaddlva, M_MNEM_vaddv,\n+\t M_MNEM_vaddva): New instruction encodings.\n+\t(mve_encode_rq): New encoding helper function.\n+\t(do_mve_vaddlv): New encoding function.\n+\t(do_mve_vaddv): New encoding function.\n+\t* testsuite/gas/arm/mve-vaddlv-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vaddlv-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vaddlv-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vaddv-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vaddv-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vaddv-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (M_MNEM_vadc, M_MNEM_vadci, M_MNEM_vbrsr):"
    },
    {
      "sha": "192de0b5acc8be1e30b7ef2ef27bf25444fd1d51",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 63,
      "deletions": 0,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -14139,6 +14139,10 @@ do_t_loloop (void)\n #define M_MNEM_vadc\t0xee300f00\n #define M_MNEM_vadci\t0xee301f00\n #define M_MNEM_vbrsr\t0xfe011e60\n+#define M_MNEM_vaddlv\t0xee890f00\n+#define M_MNEM_vaddlva\t0xee890f20\n+#define M_MNEM_vaddv\t0xeef10f00\n+#define M_MNEM_vaddva\t0xeef10f20\n \n /* Neon instruction encoder helpers.  */\n \n@@ -14315,6 +14319,8 @@ NEON_ENC_TAB\n   X(3, (D, D, S), DOUBLE),\t\t\\\n   X(3, (Q, Q, S), QUAD),\t\t\\\n   X(3, (Q, Q, R), QUAD),\t\t\\\n+  X(3, (R, R, Q), QUAD),\t\t\\\n+  X(2, (R, Q),\t  QUAD),\t\t\\\n   X(2, (D, D), DOUBLE),\t\t\t\\\n   X(2, (Q, Q), QUAD),\t\t\t\\\n   X(2, (D, S), DOUBLE),\t\t\t\\\n@@ -15763,6 +15769,15 @@ mve_encode_qqq (int ubit, int size)\n   inst.is_neon = 1;\n }\n \n+static void\n+mve_encode_rq (unsigned bit28, unsigned size)\n+{\n+  inst.instruction |= bit28 << 28;\n+  inst.instruction |= neon_logbits (size) << 18;\n+  inst.instruction |= inst.operands[0].reg << 12;\n+  inst.instruction |= LOW4 (inst.operands[1].reg);\n+  inst.is_neon = 1;\n+}\n \n /* Encode insns with bit pattern:\n \n@@ -16486,6 +16501,30 @@ do_mve_vst_vld (void)\n   inst.is_neon = 1;\n }\n \n+static void\n+do_mve_vaddlv (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_RRQ, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (3, rs, N_EQK, N_EQK, N_S32 | N_U32 | N_KEY);\n+\n+  if (et.type == NT_invtype)\n+    first_error (BAD_EL_TYPE);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  constraint (inst.operands[1].reg > 14, MVE_BAD_QREG);\n+\n+  inst.instruction |= (et.type == NT_unsigned) << 28;\n+  inst.instruction |= inst.operands[1].reg << 19;\n+  inst.instruction |= inst.operands[0].reg << 12;\n+  inst.instruction |= inst.operands[2].reg;\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_neon_dyadic_if_su (void)\n {\n@@ -16761,6 +16800,26 @@ do_neon_qdmulh (void)\n     }\n }\n \n+static void\n+do_mve_vaddv (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_RQ, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (2, rs, N_EQK,  N_SU_32 | N_KEY);\n+\n+  if (et.type == NT_invtype)\n+    first_error (BAD_EL_TYPE);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  constraint (inst.operands[1].reg > 14, MVE_BAD_QREG);\n+\n+  mve_encode_rq (et.type == NT_unsigned, et.size);\n+}\n+\n static void\n do_mve_vadc (void)\n {\n@@ -23999,6 +24058,10 @@ static const struct asm_opcode insns[] =\n  mCEF(vmovnt,\t_vmovnt,    2, (RMQ, RMQ),\t\t\t  mve_movn),\n  mCEF(vmovnb,\t_vmovnb,    2, (RMQ, RMQ),\t\t\t  mve_movn),\n  mCEF(vbrsr,\t_vbrsr,     3, (RMQ, RMQ, RR),\t\t\t  mve_vbrsr),\n+ mCEF(vaddlv,\t_vaddlv,    3, (RRe, RRo, RMQ),\t\t\t  mve_vaddlv),\n+ mCEF(vaddlva,\t_vaddlva,   3, (RRe, RRo, RMQ),\t\t\t  mve_vaddlv),\n+ mCEF(vaddv,\t_vaddv,\t    2, (RRe, RMQ),\t\t\t  mve_vaddv),\n+ mCEF(vaddva,\t_vaddva,    2, (RRe, RMQ),\t\t\t  mve_vaddv),\n \n #undef  ARM_VARIANT\n #define ARM_VARIANT  & fpu_vfp_ext_v1"
    },
    {
      "sha": "b5993f3181cd4885d81a59224e7f19e1c5a9425f",
      "filename": "gas/testsuite/gas/arm/mve-vaddlv-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddlv-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddlv-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddlv-bad.d?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -0,0 +1,5 @@\n+#name: Bad MVE VADDLV instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vaddlv-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "771fc009f9ea7e802e15ddfe1e41dd6e75523627",
      "filename": "gas/testsuite/gas/arm/mve-vaddlv-bad.l",
      "status": "added",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddlv-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddlv-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddlv-bad.l?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -0,0 +1,42 @@\n+[^:]*: Assembler messages:\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Error: bad type in SIMD instruction -- `vaddlv.i32 r0,r1,q0'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vaddlv.f32 r0,r1,q0'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vaddlv.s8 r0,r1,q0'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vaddlv.s16 r0,r1,q0'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vaddlv.s64 r0,r1,q0'\n+[^:]*:18: Error: bad type in SIMD instruction -- `vaddlv.u8 r0,r1,q0'\n+[^:]*:19: Error: bad type in SIMD instruction -- `vaddlv.u16 r0,r1,q0'\n+[^:]*:20: Error: bad type in SIMD instruction -- `vaddlv.u64 r0,r1,q0'\n+[^:]*:21: Error: bad type in SIMD instruction -- `vaddlva.i32 r0,r1,q0'\n+[^:]*:22: Error: bad type in SIMD instruction -- `vaddlva.f32 r0,r1,q0'\n+[^:]*:23: Error: bad type in SIMD instruction -- `vaddlva.s8 r0,r1,q0'\n+[^:]*:24: Error: bad type in SIMD instruction -- `vaddlva.s16 r0,r1,q0'\n+[^:]*:25: Error: bad type in SIMD instruction -- `vaddlva.s64 r0,r1,q0'\n+[^:]*:26: Error: bad type in SIMD instruction -- `vaddlva.u8 r0,r1,q0'\n+[^:]*:27: Error: bad type in SIMD instruction -- `vaddlva.u16 r0,r1,q0'\n+[^:]*:28: Error: bad type in SIMD instruction -- `vaddlva.u64 r0,r1,q0'\n+[^:]*:29: Error: Odd register not allowed here -- `vaddlv.s32 r1,r3,q0'\n+[^:]*:30: Error: Even register not allowed here -- `vaddlva.s32 r0,r2,q0'\n+[^:]*:31: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:33: Error: syntax error -- `vaddlveq.s32 r0,r1,q0'\n+[^:]*:34: Error: syntax error -- `vaddlveq.s32 r0,r1,q0'\n+[^:]*:36: Error: syntax error -- `vaddlveq.s32 r0,r1,q0'\n+[^:]*:37: Error: vector predicated instruction should be in VPT/VPST block -- `vaddlvt.s32 r0,r1,q0'\n+[^:]*:39: Error: instruction missing MVE vector predication code -- `vaddlv.s32 r0,r1,q0'\n+[^:]*:41: Error: syntax error -- `vaddlvaeq.s32 r0,r1,q0'\n+[^:]*:42: Error: syntax error -- `vaddlvaeq.s32 r0,r1,q0'\n+[^:]*:44: Error: syntax error -- `vaddlvaeq.s32 r0,r1,q0'\n+[^:]*:45: Error: vector predicated instruction should be in VPT/VPST block -- `vaddlvat.s32 r0,r1,q0'\n+[^:]*:47: Error: instruction missing MVE vector predication code -- `vaddlva.s32 r0,r1,q0'"
    },
    {
      "sha": "eda6923ffed6b836f5b40db73309e39601f8e650",
      "filename": "gas/testsuite/gas/arm/mve-vaddlv-bad.s",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddlv-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddlv-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddlv-bad.s?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -0,0 +1,47 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+.irp mnem, vaddlv.s32, vaddlva.u32\n+it \\cond\n+\\mnem r0, r1, q0\n+.endr\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+cond\n+vaddlv.i32 r0, r1, q0\n+vaddlv.f32 r0, r1, q0\n+vaddlv.s8 r0, r1, q0\n+vaddlv.s16 r0, r1, q0\n+vaddlv.s64 r0, r1, q0\n+vaddlv.u8 r0, r1, q0\n+vaddlv.u16 r0, r1, q0\n+vaddlv.u64 r0, r1, q0\n+vaddlva.i32 r0, r1, q0\n+vaddlva.f32 r0, r1, q0\n+vaddlva.s8 r0, r1, q0\n+vaddlva.s16 r0, r1, q0\n+vaddlva.s64 r0, r1, q0\n+vaddlva.u8 r0, r1, q0\n+vaddlva.u16 r0, r1, q0\n+vaddlva.u64 r0, r1, q0\n+vaddlv.s32 r1, r3, q0\n+vaddlva.s32 r0, r2, q0\n+vaddlv.s32 r0, sp, q0\n+it eq\n+vaddlveq.s32 r0, r1, q0\n+vaddlveq.s32 r0, r1, q0\n+vpst\n+vaddlveq.s32 r0, r1, q0\n+vaddlvt.s32 r0, r1, q0\n+vpst\n+vaddlv.s32 r0, r1, q0\n+it eq\n+vaddlvaeq.s32 r0, r1, q0\n+vaddlvaeq.s32 r0, r1, q0\n+vpst\n+vaddlvaeq.s32 r0, r1, q0\n+vaddlvat.s32 r0, r1, q0\n+vpst\n+vaddlva.s32 r0, r1, q0"
    },
    {
      "sha": "2291b7af74f47a34a3c3ef94d9c481f789877c2a",
      "filename": "gas/testsuite/gas/arm/mve-vaddv-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddv-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddv-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddv-bad.d?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VADDV instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vaddv-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "0d77dbdb41bcab7b2decdb91258dcd93f5e6c955",
      "filename": "gas/testsuite/gas/arm/mve-vaddv-bad.l",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddv-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddv-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddv-bad.l?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -0,0 +1,32 @@\n+[^:]*: Assembler messages:\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Error: bad type in SIMD instruction -- `vaddv.i32 r0,q0'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vaddv.f32 r0,q0'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vaddv.s64 r0,q0'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vaddv.u64 r0,q0'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vaddva.i32 r0,q0'\n+[^:]*:18: Error: bad type in SIMD instruction -- `vaddva.f32 r0,q0'\n+[^:]*:19: Error: bad type in SIMD instruction -- `vaddva.s64 r0,q0'\n+[^:]*:20: Error: bad type in SIMD instruction -- `vaddva.u64 r0,q0'\n+[^:]*:21: Error: Odd register not allowed here -- `vaddv.s32 r1,q0'\n+[^:]*:23: Error: syntax error -- `vaddveq.s32 r0,q0'\n+[^:]*:24: Error: syntax error -- `vaddveq.s32 r0,q0'\n+[^:]*:26: Error: syntax error -- `vaddveq.s32 r0,q0'\n+[^:]*:27: Error: vector predicated instruction should be in VPT/VPST block -- `vaddvt.s32 r0,q0'\n+[^:]*:29: Error: instruction missing MVE vector predication code -- `vaddv.s32 r0,q0'\n+[^:]*:31: Error: syntax error -- `vaddvaeq.s32 r0,q0'\n+[^:]*:32: Error: syntax error -- `vaddvaeq.s32 r0,q0'\n+[^:]*:34: Error: syntax error -- `vaddvaeq.s32 r0,q0'\n+[^:]*:35: Error: vector predicated instruction should be in VPT/VPST block -- `vaddvat.s32 r0,q0'\n+[^:]*:37: Error: instruction missing MVE vector predication code -- `vaddva.s32 r0,q0'"
    },
    {
      "sha": "eb5a65de128c5b9dbdca13231c8874152adf119c",
      "filename": "gas/testsuite/gas/arm/mve-vaddv-bad.s",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddv-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26c1e780920096772b5735250fa31a4184d2253c/gas/testsuite/gas/arm/mve-vaddv-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddv-bad.s?ref=26c1e780920096772b5735250fa31a4184d2253c",
      "patch": "@@ -0,0 +1,37 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+.irp mnem, vaddv.s32, vaddva.u32\n+it \\cond\n+\\mnem r0, q0\n+.endr\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+cond\n+vaddv.i32 r0, q0\n+vaddv.f32 r0, q0\n+vaddv.s64 r0, q0\n+vaddv.u64 r0, q0\n+vaddva.i32 r0, q0\n+vaddva.f32 r0, q0\n+vaddva.s64 r0, q0\n+vaddva.u64 r0, q0\n+vaddv.s32 r1, q0\n+it eq\n+vaddveq.s32 r0, q0\n+vaddveq.s32 r0, q0\n+vpst\n+vaddveq.s32 r0, q0\n+vaddvt.s32 r0, q0\n+vpst\n+vaddv.s32 r0, q0\n+it eq\n+vaddvaeq.s32 r0, q0\n+vaddvaeq.s32 r0, q0\n+vpst\n+vaddvaeq.s32 r0, q0\n+vaddvat.s32 r0, q0\n+vpst\n+vaddva.s32 r0, q0"
    }
  ]
}