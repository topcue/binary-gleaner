{
  "sha": "5519536196e670c3c0fb2b138acc44049227e724",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTUxOTUzNjE5NmU2NzBjM2MwZmIyYjEzOGFjYzQ0MDQ5MjI3ZTcyNA==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-12-21T13:26:29Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2021-01-05T13:08:26Z"
    },
    "message": "Prevent flickering when redrawing the TUI source window\n\ntui_win_info::refresh_window simply calls wrefresh, which internally\ndoes a doupdate.\nThis redraws the source background window without the source pad.\nThen prefresh of the source pad draws the actual source code on top,\nwhich flickers.\n\nBy changing this to wnoutrefresh, the actual drawing on the screen is\nonly done once in the following prefresh, without flickering.\n\ngdb/ChangeLog:\n\n2021-01-05  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* tui/tui-winsource.c (tui_source_window_base::refresh_window):\n\tCall wnoutrefresh instead of tui_win_info::refresh_window.",
    "tree": {
      "sha": "0fc0eb0f75778e15aaa627140d618dcbebe6fd9e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0fc0eb0f75778e15aaa627140d618dcbebe6fd9e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5519536196e670c3c0fb2b138acc44049227e724",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5519536196e670c3c0fb2b138acc44049227e724",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5519536196e670c3c0fb2b138acc44049227e724",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5519536196e670c3c0fb2b138acc44049227e724/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1b6d4bb2232ff9fd692a332a491b95b5f4052dfe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b6d4bb2232ff9fd692a332a491b95b5f4052dfe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1b6d4bb2232ff9fd692a332a491b95b5f4052dfe"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 8,
    "deletions": 1
  },
  "files": [
    {
      "sha": "4a7d801edb6a58f1dac485f6b3ace09716a7ade1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5519536196e670c3c0fb2b138acc44049227e724/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5519536196e670c3c0fb2b138acc44049227e724/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5519536196e670c3c0fb2b138acc44049227e724",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-05  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* tui/tui-winsource.c (tui_source_window_base::refresh_window):\n+\tCall wnoutrefresh instead of tui_win_info::refresh_window.\n+\n 2021-01-05  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* tui/tui-source.c (tui_source_window::show_line_number):"
    },
    {
      "sha": "40fd00fa7700a8bcaeb1ff7d10e863bb451360b4",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5519536196e670c3c0fb2b138acc44049227e724/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5519536196e670c3c0fb2b138acc44049227e724/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=5519536196e670c3c0fb2b138acc44049227e724",
      "patch": "@@ -252,7 +252,9 @@ tui_source_window_base::show_source_line (int lineno)\n void\n tui_source_window_base::refresh_window ()\n {\n-  tui_win_info::refresh_window ();\n+  /* tui_win_info::refresh_window would draw the empty background window to\n+     the screen, potentially creating a flicker.  */\n+  wnoutrefresh (handle.get ());\n \n   int pad_width = std::max (m_max_length, width);\n   int left_margin = 1 + TUI_EXECINFO_SIZE + extra_margin ();"
    }
  ]
}