{
  "sha": "eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWVmZTcyMWVhZGY3OGE1ZjY4YzM4ZWE5Y2EwMjcyYzdiZTA2ZTBjMA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:52Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:55Z"
    },
    "message": "libctf: fix GNU style for do {} while\n\nIt's formatted like this:\n\ndo\n  {\n    ...\n  }\nwhile (...);\n\nNot like this:\n\ndo\n {\n    ...\n  } while (...);\n\nor this:\n\ndo {\n  ...\n} while (...);\n\nWe used both in various places in libctf.  Fixing it necessitated some\nlight reindentation.\n\nlibctf/ChangeLog\n2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-archive.c (ctf_archive_next): GNU style fix for do {} while.\n\t* ctf-dedup.c (ctf_dedup_rhash_type): Likewise.\n\t(ctf_dedup_rwalk_one_output_mapping): Likewise.\n\t* ctf-dump.c (ctf_dump_format_type): Likewise.\n\t* ctf-lookup.c (ctf_symbol_next): Likewise.\n\t* swap.h (swap_thing): Likewise.",
    "tree": {
      "sha": "b075dbafc64ff850a17786341a673a75c752925b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b075dbafc64ff850a17786341a673a75c752925b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b9a964318a73b9a8540c5c85ab7f3bea3d9d8db5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9a964318a73b9a8540c5c85ab7f3bea3d9d8db5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b9a964318a73b9a8540c5c85ab7f3bea3d9d8db5"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 63,
    "deletions": 46
  },
  "files": [
    {
      "sha": "f64493f5012fba39db7929be8cc563f5a4aa8a5d",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_archive_next): GNU style fix for do {} while.\n+\t* ctf-dedup.c (ctf_dedup_rhash_type): Likewise.\n+\t(ctf_dedup_rwalk_one_output_mapping): Likewise.\n+\t* ctf-dump.c (ctf_dump_format_type): Likewise.\n+\t* ctf-lookup.c (ctf_symbol_next): Likewise.\n+\t* swap.h (swap_thing): Likewise.\n+\n 2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-serialize.c: General reshuffling, and..."
    },
    {
      "sha": "e0ceb80fa11fa1899c5c3e091192e3cf8f114a30",
      "filename": "libctf/ctf-archive.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-archive.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-archive.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-archive.c?ref=eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
      "patch": "@@ -1156,7 +1156,8 @@ ctf_archive_next (const ctf_archive_t *wrapper, ctf_next_t **it, const char **na\n \n       name_ = &nametbl[le64toh (modent[i->ctn_n].name_offset)];\n       i->ctn_n++;\n-    } while (skip_parent && strcmp (name_, _CTF_SECTION) == 0);\n+    }\n+  while (skip_parent && strcmp (name_, _CTF_SECTION) == 0);\n \n   if (name)\n     *name = name_;"
    },
    {
      "sha": "9f5ba903ec486d3cf47fa57c192ef252362b263d",
      "filename": "libctf/ctf-dedup.c",
      "status": "modified",
      "additions": 35,
      "deletions": 32,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-dedup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-dedup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dedup.c?ref=eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
      "patch": "@@ -589,7 +589,8 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \t  goto oom;\t\t\t\t\t\t\t\\\n       if (ctf_dynset_cinsert (citers, hval) < 0)\t\t\t\\\n \tgoto oom;\t\t\t\t\t\t\t\\\n-    } while (0)\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n   /* If this is a named struct or union or a forward to one, and this is a child\n      traversal, treat this type as if it were a forward -- do not recurse to\n@@ -2029,42 +2030,44 @@ ctf_dedup_rwalk_one_output_mapping (ctf_dict_t *output,\n      times, which is worse.  */\n \n #define CTF_TYPE_WALK(type, errlabel, errmsg)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    void *type_id;\t\t\t\t\t\t\t\\\n-    const char *hashval;\t\t\t\t\t\t\\\n-    int cited_type_input_num = input_num;\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      void *type_id;\t\t\t\t\t\t\t\\\n+      const char *hashval;\t\t\t\t\t\t\\\n+      int cited_type_input_num = input_num;\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    if ((fp->ctf_flags & LCTF_CHILD) && (LCTF_TYPE_ISPARENT (fp, type))) \\\n-      cited_type_input_num = parents[input_num];\t\t\t\\\n+      if ((fp->ctf_flags & LCTF_CHILD) && (LCTF_TYPE_ISPARENT (fp, type))) \\\n+\tcited_type_input_num = parents[input_num];\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    type_id = CTF_DEDUP_GID (output, cited_type_input_num, type);\t\\\n+      type_id = CTF_DEDUP_GID (output, cited_type_input_num, type);\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    if (type == 0)\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tctf_dprintf (\"Walking: unimplemented type\\n\");\t\t\t\\\n-\tbreak;\t\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n+      if (type == 0)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  ctf_dprintf (\"Walking: unimplemented type\\n\");\t\t\\\n+\t  break;\t\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    ctf_dprintf (\"Looking up ID %i/%lx in type hashes\\n\",\t\t\\\n-\t\t cited_type_input_num, type);\t\t\t\t\\\n-    hashval = ctf_dynhash_lookup (d->cd_type_hashes, type_id);\t\t\\\n-    if (!ctf_assert (output, hashval))\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\twhaterr = N_(\"error looking up ID in type hashes\");\t\t\\\n-\tgoto errlabel;\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    ctf_dprintf (\"ID %i/%lx has hash %s\\n\", cited_type_input_num, type,\t\\\n-\t\t hashval);\t\t\t\t\t\t\\\n+      ctf_dprintf (\"Looking up ID %i/%lx in type hashes\\n\",\t\t\\\n+\t\t   cited_type_input_num, type);\t\t\t\t\\\n+      hashval = ctf_dynhash_lookup (d->cd_type_hashes, type_id);\t\\\n+      if (!ctf_assert (output, hashval))\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  whaterr = N_(\"error looking up ID in type hashes\");\t\t\\\n+\t  goto errlabel;\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      ctf_dprintf (\"ID %i/%lx has hash %s\\n\", cited_type_input_num, type, \\\n+\t\t   hashval);\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    ret = ctf_dedup_rwalk_output_mapping (output, inputs, ninputs, parents, \\\n-\t\t\t\t\t  already_visited, hashval,\t\\\n-\t\t\t\t\t  visit_fun, arg, depth);\t\\\n-    if (ret < 0)\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\twhaterr = errmsg;\t\t\t\t\t\t\\\n-\tgoto errlabel;\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  } while (0)\n+      ret = ctf_dedup_rwalk_output_mapping (output, inputs, ninputs, parents, \\\n+\t\t\t\t\t    already_visited, hashval,\t\\\n+\t\t\t\t\t    visit_fun, arg, depth);\t\\\n+      if (ret < 0)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  whaterr = errmsg;\t\t\t\t\t\t\\\n+\t  goto errlabel;\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n   switch (ctf_type_kind_unsliced (fp, type))\n     {"
    },
    {
      "sha": "409626a224b64974b69989959c6450ec744260fa",
      "filename": "libctf/ctf-dump.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dump.c?ref=eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
      "patch": "@@ -220,7 +220,8 @@ ctf_dump_format_type (ctf_dict_t *fp, ctf_id_t id, int flag)\n \tnew_id = ctf_type_reference (fp, id);\n       if (new_id != CTF_ERR)\n \tstr = str_append (str, \" -> \");\n-    } while (new_id != CTF_ERR);\n+    }\n+  while (new_id != CTF_ERR);\n \n   if (ctf_errno (fp) != ECTF_NOTREF)\n     {"
    },
    {
      "sha": "9d1e6d8a4a2b23c9d0ad7eade665123f1e7a0f7f",
      "filename": "libctf/ctf-lookup.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-lookup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/ctf-lookup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-lookup.c?ref=eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
      "patch": "@@ -723,7 +723,8 @@ ctf_symbol_next (ctf_dict_t *fp, ctf_next_t **it, const char **name,\n \n \t  *name = ctf_strptr (fp, idx[i->ctn_n]);\n \t  sym = tab[i->ctn_n++];\n-\t} while (sym == -1u || sym == 0);\n+\t}\n+      while (sym == -1u || sym == 0);\n     }\n   else\n     {"
    },
    {
      "sha": "4d0b48c9e759e9c002a3b5b70a16ccb4519365d0",
      "filename": "libctf/swap.h",
      "status": "modified",
      "additions": 13,
      "deletions": 11,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/swap.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eefe721eadf78a5f68c38ea9ca0272c7be06e0c0/libctf/swap.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/swap.h?ref=eefe721eadf78a5f68c38ea9ca0272c7be06e0c0",
      "patch": "@@ -73,18 +73,20 @@ bswap_64 (uint64_t v)\n /* Swap the endianness of something.  */\n \n #define swap_thing(x)\t\t\t\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    _Static_assert (sizeof (x) == 1 || (sizeof (x) % 2 == 0\t\t\\\n-\t\t\t\t\t&& sizeof (x) <= 8),\t\t\\\n-\t\t    \"Invalid size, update endianness code\");\t\t\\\n-    switch (sizeof (x)) {\t\t\t\t\t\t\\\n-    case 2: x = bswap_16 (x); break;\t\t\t\t\t\\\n-    case 4: x = bswap_32 (x); break;\t\t\t\t\t\\\n-    case 8: x = bswap_64 (x); break;\t\t\t\t\t\\\n-    case 1: /* Nothing needs doing */\t\t\t\t\t\\\n-      break;\t\t\t\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      _Static_assert (sizeof (x) == 1 || (sizeof (x) % 2 == 0\t\t\\\n+\t\t\t\t\t  && sizeof (x) <= 8),\t\t\\\n+\t\t      \"Invalid size, update endianness code\");\t\t\\\n+      switch (sizeof (x)) {\t\t\t\t\t\t\\\n+      case 2: x = bswap_16 (x); break;\t\t\t\t\t\\\n+      case 4: x = bswap_32 (x); break;\t\t\t\t\t\\\n+      case 8: x = bswap_64 (x); break;\t\t\t\t\t\\\n+      case 1: /* Nothing needs doing */\t\t\t\t\t\\\n+\tbreak;\t\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n-  } while (0);\n+  while (0);\n \n \n #endif /* !defined(_CTF_SWAP_H) */"
    }
  ]
}