{
  "sha": "3defe97705e325f2f3048b8c18321518a6c7e190",
  "node_id": "C_kwDOANOeidoAKDNkZWZlOTc3MDVlMzI1ZjJmMzA0OGI4YzE4MzIxNTE4YTZjN2UxOTA",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-26T21:03:41Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-29T17:47:48Z"
    },
    "message": "Use debug_prefixed_printf_cond_nofunc in machoread\n\nThis changes machoread.c to use debug_prefixed_printf_cond_nofunc.  As\na side effect, the logs are now written to gdb_stdlog.  This is part\nof PR gdb/7233.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=7233",
    "tree": {
      "sha": "408f1572d3f090ad8d6b87b801eb81ec262987d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/408f1572d3f090ad8d6b87b801eb81ec262987d3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3defe97705e325f2f3048b8c18321518a6c7e190",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3defe97705e325f2f3048b8c18321518a6c7e190",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3defe97705e325f2f3048b8c18321518a6c7e190",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3defe97705e325f2f3048b8c18321518a6c7e190/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7fea6c34a1bcf11757c9d76c9d23ca5372d56501",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7fea6c34a1bcf11757c9d76c9d23ca5372d56501",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7fea6c34a1bcf11757c9d76c9d23ca5372d56501"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 14,
    "deletions": 23
  },
  "files": [
    {
      "sha": "0272ec7942cb37c32e6136601f44b29ef4f45918",
      "filename": "gdb/machoread.c",
      "status": "modified",
      "additions": 14,
      "deletions": 23,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3defe97705e325f2f3048b8c18321518a6c7e190/gdb/machoread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3defe97705e325f2f3048b8c18321518a6c7e190/gdb/machoread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/machoread.c?ref=3defe97705e325f2f3048b8c18321518a6c7e190",
      "patch": "@@ -37,6 +37,10 @@\n /* If non-zero displays debugging message.  */\n static unsigned int mach_o_debug_level = 0;\n \n+#define macho_debug(LEVEL, FMT, ...) \\\n+  debug_prefixed_printf_cond_nofunc (mach_o_debug_level > LEVEL, \\\n+\t\t\t\t     \"machoread\", FMT, ## __VA_ARGS__)\n+\n /* Dwarf debugging information are never in the final executable.  They stay\n    in object files and the executable contains the list of object files read\n    during the link.\n@@ -421,9 +425,7 @@ macho_add_oso_symfile (oso_el *oso, const gdb_bfd_ref_ptr &abfd,\n   /* Per section flag to mark which section have been rebased.  */\n   unsigned char *sections_rebased;\n \n-  if (mach_o_debug_level > 0)\n-    printf_unfiltered\n-      (_(\"Loading debugging symbols from oso: %s\\n\"), oso->name);\n+  macho_debug (0, _(\"Loading debugging symbols from oso: %s\\n\"), oso->name);\n \n   if (!bfd_check_format (abfd.get (), bfd_object))\n     {\n@@ -492,13 +494,9 @@ macho_add_oso_symfile (oso_el *oso, const gdb_bfd_ref_ptr &abfd,\n \t    complaint (_(\"Duplicated symbol %s in symbol table\"), sym->name);\n \t  else\n \t    {\n-\t      if (mach_o_debug_level > 4)\n-\t\t{\n-\t\t  struct gdbarch *arch = main_objfile->arch ();\n-\t\t  printf_unfiltered\n-\t\t    (_(\"Adding symbol %s (addr: %s)\\n\"),\n-\t\t     sym->name, paddress (arch, sym->value));\n-\t\t}\n+\t      macho_debug (4, _(\"Adding symbol %s (addr: %s)\\n\"),\n+\t\t\t   sym->name, paddress (main_objfile->arch (),\n+\t\t\t\t\t\tsym->value));\n \t      ent->sym = sym;\n \t    }\n \t}\n@@ -566,14 +564,9 @@ macho_add_oso_symfile (oso_el *oso, const gdb_bfd_ref_ptr &abfd,\n \t\t{\n \t\t  CORE_ADDR res = addr - sym->value;\n \n-\t\t  if (mach_o_debug_level > 3)\n-\t\t    {\n-\t\t      struct gdbarch *arch = main_objfile->arch ();\n-\t\t      printf_unfiltered\n-\t\t\t(_(\"resolve sect %s with %s (set to %s)\\n\"),\n-\t\t\t sec->name, sym->name,\n-\t\t\t paddress (arch, res));\n-\t\t    }\n+\t\t  macho_debug (3, _(\"resolve sect %s with %s (set to %s)\\n\"),\n+\t\t\t       sec->name, sym->name,\n+\t\t\t       paddress (main_objfile->arch (), res));\n \t\t  bfd_set_section_vma (sec, res);\n \t\t  sections_rebased[sec->index] = 1;\n \t\t}\n@@ -843,8 +836,7 @@ macho_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n \t{\n \t  struct bfd_section *asect, *dsect;\n \n-\t  if (mach_o_debug_level > 0)\n-\t    printf_unfiltered (_(\"dsym file found\\n\"));\n+\t  macho_debug (0, _(\"dsym file found\\n\"));\n \n \t  /* Set dsym section size.  */\n \t  for (asect = objfile->obfd->sections, dsect = dsym_bfd->sections;\n@@ -887,9 +879,8 @@ macho_symfile_relocate (struct objfile *objfile, asection *sectp,\n   if ((sectp->flags & SEC_RELOC) == 0)\n     return NULL;\n \n-  if (mach_o_debug_level > 0)\n-    printf_unfiltered (_(\"Relocate section '%s' of %s\\n\"),\n-\t\t       sectp->name, objfile_name (objfile));\n+  macho_debug (0, _(\"Relocate section '%s' of %s\\n\"),\n+\t       sectp->name, objfile_name (objfile));\n \n   return bfd_simple_get_relocated_section_contents (abfd, sectp, buf, NULL);\n }"
    }
  ]
}