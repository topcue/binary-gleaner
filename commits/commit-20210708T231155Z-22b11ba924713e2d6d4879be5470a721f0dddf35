{
  "sha": "22b11ba924713e2d6d4879be5470a721f0dddf35",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjJiMTFiYTkyNDcxM2UyZDZkNDg3OWJlNTQ3MGE3MjFmMGRkZGYzNQ==",
  "commit": {
    "author": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2021-07-08T23:09:11Z"
    },
    "committer": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2021-07-08T23:11:55Z"
    },
    "message": "Remove unused parameter in maybe_software_singlestep\n\nWhile working around, I noticed that the last parameter of\nmaybe_software_singlestep is never used.  This path removes\nit.\n\nBuilt on x86_64-linux-gnu and riscv64-linux-gnu.\n\ngdb/ChangeLog:\n\n\t* infrun.c (maybe_software_singlestep): Remove unused PC\n\tparameter.\n\t(resume_1): Update calls to maybe_software_singlestep.",
    "tree": {
      "sha": "47cead0e82ea27c14d429386781b55011f4293bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/47cead0e82ea27c14d429386781b55011f4293bf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/22b11ba924713e2d6d4879be5470a721f0dddf35",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22b11ba924713e2d6d4879be5470a721f0dddf35",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/22b11ba924713e2d6d4879be5470a721f0dddf35",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22b11ba924713e2d6d4879be5470a721f0dddf35/comments",
  "author": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "661b504df9bfb8d7c5d669091720e1dc0079c05e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/661b504df9bfb8d7c5d669091720e1dc0079c05e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/661b504df9bfb8d7c5d669091720e1dc0079c05e"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 7,
    "deletions": 8
  },
  "files": [
    {
      "sha": "8cfd58b267b7813533aa9b135e38ac6d5b642e06",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22b11ba924713e2d6d4879be5470a721f0dddf35/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22b11ba924713e2d6d4879be5470a721f0dddf35/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=22b11ba924713e2d6d4879be5470a721f0dddf35",
      "patch": "@@ -89,7 +89,7 @@ static void insert_step_resume_breakpoint_at_caller (struct frame_info *);\n \n static void insert_longjmp_resume_breakpoint (struct gdbarch *, CORE_ADDR);\n \n-static bool maybe_software_singlestep (struct gdbarch *gdbarch, CORE_ADDR pc);\n+static bool maybe_software_singlestep (struct gdbarch *gdbarch);\n \n static void resume (gdb_signal sig);\n \n@@ -2048,14 +2048,13 @@ set_schedlock_func (const char *args, int from_tty, struct cmd_list_element *c)\n    process.  */\n bool sched_multi = false;\n \n-/* Try to setup for software single stepping over the specified location.\n-   Return true if target_resume() should use hardware single step.\n+/* Try to setup for software single stepping.  Return true if target_resume()\n+   should use hardware single step.\n \n-   GDBARCH the current gdbarch.\n-   PC the location to step over.  */\n+   GDBARCH the current gdbarch.  */\n \n static bool\n-maybe_software_singlestep (struct gdbarch *gdbarch, CORE_ADDR pc)\n+maybe_software_singlestep (struct gdbarch *gdbarch)\n {\n   bool hw_step = true;\n \n@@ -2390,7 +2389,7 @@ resume_1 (enum gdb_signal sig)\n \t  set_step_over_info (regcache->aspace (),\n \t\t\t      regcache_read_pc (regcache), 0, tp->global_num);\n \n-\t  step = maybe_software_singlestep (gdbarch, pc);\n+\t  step = maybe_software_singlestep (gdbarch);\n \n \t  insert_breakpoints ();\n \t}\n@@ -2409,7 +2408,7 @@ resume_1 (enum gdb_signal sig)\n \n   /* Do we need to do it the hard way, w/temp breakpoints?  */\n   else if (step)\n-    step = maybe_software_singlestep (gdbarch, pc);\n+    step = maybe_software_singlestep (gdbarch);\n \n   /* Currently, our software single-step implementation leads to different\n      results than hardware single-stepping in one situation: when stepping"
    }
  ]
}