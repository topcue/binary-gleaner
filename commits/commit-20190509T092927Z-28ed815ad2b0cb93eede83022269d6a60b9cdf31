{
  "sha": "28ed815ad2b0cb93eede83022269d6a60b9cdf31",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjhlZDgxNWFkMmIwY2I5M2VlZGU4MzAyMjI2OWQ2YTYwYjljZGYzMQ==",
  "commit": {
    "author": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-05-09T09:29:27Z"
    },
    "committer": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-05-09T09:29:27Z"
    },
    "message": "[binutils][aarch64] New SVE_SHLIMM_UNPRED_22 operand.\n\nNew operand describes a shift-left immediate encoded in bits\n22:20-19:18-16 where UInt(bits) - esize == shift.\nThis operand is useful for instructions like sshllb.\n\ngas/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* config/tc-aarch64.c (parse_operands): Handle new SVE_SHLIMM_UNPRED_22\n\toperand.\n\ninclude/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHLIMM_UNPRED_22\n\toperand.\n\nopcodes/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* aarch64-asm-2.c: Regenerated.\n\t* aarch64-dis-2.c: Regenerated.\n\t* aarch64-opc-2.c: Regenerated.\n\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n\tfor SVE_SHLIMM_UNPRED_22.\n\t(aarch64_print_operand): Add printing for SVE_SHLIMM_UNPRED_22.\n\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHLIMM_UNPRED_22\n\toperand.",
    "tree": {
      "sha": "0edb14415647f239d12f539a8ea897a1c077e094",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0edb14415647f239d12f539a8ea897a1c077e094"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/28ed815ad2b0cb93eede83022269d6a60b9cdf31",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/28ed815ad2b0cb93eede83022269d6a60b9cdf31",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/28ed815ad2b0cb93eede83022269d6a60b9cdf31",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/28ed815ad2b0cb93eede83022269d6a60b9cdf31/comments",
  "author": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fd1dc4a0c1b87c1efa7e0398fd47fd1e87fa0fb4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd1dc4a0c1b87c1efa7e0398fd47fd1e87fa0fb4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fd1dc4a0c1b87c1efa7e0398fd47fd1e87fa0fb4"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 53,
    "deletions": 22
  },
  "files": [
    {
      "sha": "2a37acf7fc77c7faf818f76ec93ac729a62a91be",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* config/tc-aarch64.c (parse_operands): Handle new SVE_SHLIMM_UNPRED_22\n+\toperand.\n+\n 2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* config/tc-aarch64.c (parse_operands): Handle new SVE_Zm4_11_INDEX"
    },
    {
      "sha": "7b9ebbd1eddb45f14a22051c09be6ed5849ab32a",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -5786,6 +5786,7 @@ parse_operands (char *str, const aarch64_opcode *opcode)\n \tcase AARCH64_OPND_SVE_LIMM_MOV:\n \tcase AARCH64_OPND_SVE_SHLIMM_PRED:\n \tcase AARCH64_OPND_SVE_SHLIMM_UNPRED:\n+\tcase AARCH64_OPND_SVE_SHLIMM_UNPRED_22:\n \tcase AARCH64_OPND_SVE_SHRIMM_PRED:\n \tcase AARCH64_OPND_SVE_SHRIMM_UNPRED:\n \tcase AARCH64_OPND_SVE_SHRIMM_UNPRED_22:"
    },
    {
      "sha": "be6240e883ddd992d3611c07c5d463256ae902d0",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New SVE_SHLIMM_UNPRED_22\n+\toperand.\n+\n 2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_tsz_bhs"
    },
    {
      "sha": "a4520da8d150f4ff638bb0c2c7529d94ef4d150e",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -392,6 +392,7 @@ enum aarch64_opnd\n   AARCH64_OPND_SVE_Rn_SP,\t/* Integer Rn or SP, alt. SVE position.  */\n   AARCH64_OPND_SVE_SHLIMM_PRED,\t  /* SVE shift left amount (predicated).  */\n   AARCH64_OPND_SVE_SHLIMM_UNPRED, /* SVE shift left amount (unpredicated).  */\n+  AARCH64_OPND_SVE_SHLIMM_UNPRED_22,\t/* SVE 3 bit shift left unpred.  */\n   AARCH64_OPND_SVE_SHRIMM_PRED,\t  /* SVE shift right amount (predicated).  */\n   AARCH64_OPND_SVE_SHRIMM_UNPRED, /* SVE shift right amount (unpredicated).  */\n   AARCH64_OPND_SVE_SHRIMM_UNPRED_22,\t/* SVE 3 bit shift right unpred.  */"
    },
    {
      "sha": "86b3f42fd5db8640b6bfd1b1036dd5b8a67d824c",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -1,3 +1,14 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Constraint checking\n+\tfor SVE_SHLIMM_UNPRED_22.\n+\t(aarch64_print_operand): Add printing for SVE_SHLIMM_UNPRED_22.\n+\t* aarch64-tbl.h (AARCH64_OPERANDS): Use new SVE_SHLIMM_UNPRED_22\n+\toperand.\n+\n 2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle"
    },
    {
      "sha": "20472ae43549fc1ee2f3e2c76539309ba888ed92",
      "filename": "opcodes/aarch64-asm-2.c",
      "status": "modified",
      "additions": 12,
      "deletions": 11,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-asm-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-asm-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-asm-2.c?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -638,7 +638,6 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 169:\n     case 170:\n     case 171:\n-    case 185:\n     case 186:\n     case 187:\n     case 188:\n@@ -647,8 +646,9 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 191:\n     case 192:\n     case 193:\n-    case 199:\n-    case 202:\n+    case 194:\n+    case 200:\n+    case 203:\n       return aarch64_ins_regno (self, info, code, inst, errors);\n     case 14:\n       return aarch64_ins_reg_extended (self, info, code, inst, errors);\n@@ -660,7 +660,7 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 32:\n     case 33:\n     case 34:\n-    case 205:\n+    case 206:\n       return aarch64_ins_reglane (self, info, code, inst, errors);\n     case 35:\n       return aarch64_ins_reglist (self, info, code, inst, errors);\n@@ -696,15 +696,15 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 82:\n     case 159:\n     case 161:\n-    case 177:\n     case 178:\n     case 179:\n     case 180:\n     case 181:\n     case 182:\n     case 183:\n     case 184:\n-    case 204:\n+    case 185:\n+    case 205:\n       return aarch64_ins_imm (self, info, code, inst, errors);\n     case 43:\n     case 44:\n@@ -842,21 +842,22 @@ aarch64_insert_operand (const aarch64_operand *self,\n       return aarch64_ins_sve_scale (self, info, code, inst, errors);\n     case 172:\n     case 173:\n-      return aarch64_ins_sve_shlimm (self, info, code, inst, errors);\n     case 174:\n+      return aarch64_ins_sve_shlimm (self, info, code, inst, errors);\n     case 175:\n     case 176:\n+    case 177:\n       return aarch64_ins_sve_shrimm (self, info, code, inst, errors);\n-    case 194:\n     case 195:\n     case 196:\n     case 197:\n     case 198:\n+    case 199:\n       return aarch64_ins_sve_quad_index (self, info, code, inst, errors);\n-    case 200:\n-      return aarch64_ins_sve_index (self, info, code, inst, errors);\n     case 201:\n-    case 203:\n+      return aarch64_ins_sve_index (self, info, code, inst, errors);\n+    case 202:\n+    case 204:\n       return aarch64_ins_sve_reglist (self, info, code, inst, errors);\n     default: assert (0); abort ();\n     }"
    },
    {
      "sha": "3dccd6d31c1c8ac843a7321bc78909c1ba3bb9e7",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 12,
      "deletions": 11,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -20069,7 +20069,6 @@ aarch64_extract_operand (const aarch64_operand *self,\n     case 169:\n     case 170:\n     case 171:\n-    case 185:\n     case 186:\n     case 187:\n     case 188:\n@@ -20078,8 +20077,9 @@ aarch64_extract_operand (const aarch64_operand *self,\n     case 191:\n     case 192:\n     case 193:\n-    case 199:\n-    case 202:\n+    case 194:\n+    case 200:\n+    case 203:\n       return aarch64_ext_regno (self, info, code, inst, errors);\n     case 9:\n       return aarch64_ext_regrt_sysins (self, info, code, inst, errors);\n@@ -20095,7 +20095,7 @@ aarch64_extract_operand (const aarch64_operand *self,\n     case 32:\n     case 33:\n     case 34:\n-    case 205:\n+    case 206:\n       return aarch64_ext_reglane (self, info, code, inst, errors);\n     case 35:\n       return aarch64_ext_reglist (self, info, code, inst, errors);\n@@ -20132,15 +20132,15 @@ aarch64_extract_operand (const aarch64_operand *self,\n     case 82:\n     case 159:\n     case 161:\n-    case 177:\n     case 178:\n     case 179:\n     case 180:\n     case 181:\n     case 182:\n     case 183:\n     case 184:\n-    case 204:\n+    case 185:\n+    case 205:\n       return aarch64_ext_imm (self, info, code, inst, errors);\n     case 43:\n     case 44:\n@@ -20280,21 +20280,22 @@ aarch64_extract_operand (const aarch64_operand *self,\n       return aarch64_ext_sve_scale (self, info, code, inst, errors);\n     case 172:\n     case 173:\n-      return aarch64_ext_sve_shlimm (self, info, code, inst, errors);\n     case 174:\n+      return aarch64_ext_sve_shlimm (self, info, code, inst, errors);\n     case 175:\n     case 176:\n+    case 177:\n       return aarch64_ext_sve_shrimm (self, info, code, inst, errors);\n-    case 194:\n     case 195:\n     case 196:\n     case 197:\n     case 198:\n+    case 199:\n       return aarch64_ext_sve_quad_index (self, info, code, inst, errors);\n-    case 200:\n-      return aarch64_ext_sve_index (self, info, code, inst, errors);\n     case 201:\n-    case 203:\n+      return aarch64_ext_sve_index (self, info, code, inst, errors);\n+    case 202:\n+    case 204:\n       return aarch64_ext_sve_reglist (self, info, code, inst, errors);\n     default: assert (0); abort ();\n     }"
    },
    {
      "sha": "178d2108d7a7c6b1401e890de73722f60baf4746",
      "filename": "opcodes/aarch64-opc-2.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-opc-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-opc-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc-2.c?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -198,6 +198,7 @@ const struct aarch64_operand aarch64_operands[] =\n   {AARCH64_OPND_CLASS_INT_REG, \"SVE_Rn_SP\", OPD_F_MAYBE_SP | OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_SVE_Rn}, \"an integer register or SP\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"SVE_SHLIMM_PRED\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_SVE_tszh,FLD_SVE_imm5}, \"a shift-left immediate operand\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"SVE_SHLIMM_UNPRED\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_SVE_tszh,FLD_imm5}, \"a shift-left immediate operand\"},\n+  {AARCH64_OPND_CLASS_IMMEDIATE, \"SVE_SHLIMM_UNPRED_22\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_SVE_sz, FLD_SVE_tszl_19, FLD_SVE_imm3}, \"a shift-left immediate operand\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"SVE_SHRIMM_PRED\", 1 << OPD_F_OD_LSB | OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_SVE_tszh,FLD_SVE_imm5}, \"a shift-right immediate operand\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"SVE_SHRIMM_UNPRED\", 1 << OPD_F_OD_LSB | OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_SVE_tszh,FLD_imm5}, \"a shift-right immediate operand\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"SVE_SHRIMM_UNPRED_22\", 2 << OPD_F_OD_LSB | OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_SVE_sz, FLD_SVE_tszl_19, FLD_SVE_imm3}, \"a shift-right immediate operand\"},"
    },
    {
      "sha": "00ff94db31d839f21935668b02a644a96c644818",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -2531,6 +2531,7 @@ operand_general_constraint_met_p (const aarch64_opnd_info *opnds, int idx,\n \n \tcase AARCH64_OPND_SVE_SHLIMM_PRED:\n \tcase AARCH64_OPND_SVE_SHLIMM_UNPRED:\n+\tcase AARCH64_OPND_SVE_SHLIMM_UNPRED_22:\n \t  size = aarch64_get_qualifier_esize (opnds[idx - 1].qualifier);\n \t  if (!value_in_range_p (opnd->imm.value, 0, 8 * size - 1))\n \t    {\n@@ -3358,6 +3359,7 @@ aarch64_print_operand (char *buf, size_t size, bfd_vma pc,\n     case AARCH64_OPND_SIMM5:\n     case AARCH64_OPND_SVE_SHLIMM_PRED:\n     case AARCH64_OPND_SVE_SHLIMM_UNPRED:\n+    case AARCH64_OPND_SVE_SHLIMM_UNPRED_22:\n     case AARCH64_OPND_SVE_SHRIMM_PRED:\n     case AARCH64_OPND_SVE_SHRIMM_UNPRED:\n     case AARCH64_OPND_SVE_SHRIMM_UNPRED_22:"
    },
    {
      "sha": "eef7998d8b0e03dff9b90e657bd862e8263558d8",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/28ed815ad2b0cb93eede83022269d6a60b9cdf31/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=28ed815ad2b0cb93eede83022269d6a60b9cdf31",
      "patch": "@@ -4923,6 +4923,9 @@ struct aarch64_opcode aarch64_opcode_table[] =\n       F(FLD_SVE_tszh,FLD_SVE_imm5), \"a shift-left immediate operand\")\t\\\n     Y(IMMEDIATE, sve_shlimm, \"SVE_SHLIMM_UNPRED\", 0,\t\t\t\\\n       F(FLD_SVE_tszh,FLD_imm5), \"a shift-left immediate operand\")\t\\\n+    Y(IMMEDIATE, sve_shlimm, \"SVE_SHLIMM_UNPRED_22\", 0,\t\t\t\\\n+      F(FLD_SVE_sz, FLD_SVE_tszl_19, FLD_SVE_imm3),\t\t\t\\\n+      \"a shift-left immediate operand\")\t\t\t\t\t\\\n     Y(IMMEDIATE, sve_shrimm, \"SVE_SHRIMM_PRED\", 1 << OPD_F_OD_LSB,\t\\\n       F(FLD_SVE_tszh,FLD_SVE_imm5), \"a shift-right immediate operand\")\t\\\n     Y(IMMEDIATE, sve_shrimm, \"SVE_SHRIMM_UNPRED\", 1 << OPD_F_OD_LSB,\t\\"
    }
  ]
}