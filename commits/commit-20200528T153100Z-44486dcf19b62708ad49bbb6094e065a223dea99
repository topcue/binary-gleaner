{
  "sha": "44486dcf19b62708ad49bbb6094e065a223dea99",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQ0ODZkY2YxOWI2MjcwOGFkNDliYmI2MDk0ZTA2NWEyMjNkZWE5OQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-28T15:30:11Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-05-28T15:31:00Z"
    },
    "message": "gdb: use caller objfile in dwarf_evaluate_loc_desc::push_dwarf_reg_entry_value\n\nIn commit\n\n    89b07335fe (\"Add dwarf2_per_objfile to dwarf_expr_context and dwarf2_frame_cache\")\n\nI replaced the offset property of dwarf_expr_context by a per_objfile\nproperty (since we can get the text offset from the objfile).  The\nprevious code in dwarf_evaluate_loc_desc::push_dwarf_reg_entry_value\n(dwarf_evaluate_loc_desc derives from dwarf_expr_context) did\ntemporarily override the offset property while evaluating a DWARF\nsub-expression.  I speculated that this sub-expression always came from\nthe same objfile as the outer expression, so I didn't see the need to\ntemporarily override the per_objfile property in the new code.  A later\ncommit:\n\n    9f47c70716 (\"Remove dwarf2_per_cu_data::objfile ()\")\n\nadded the following assertion to verify this:\n\n    gdb_assert (this->per_objfile == caller_per_objfile);\n\nIt turns out that this is not true.  Call sites can refer to function in\nanother objfile, and therefore the caller's objfile can be different\nfrom the callee's objfile.  This can happen when the call site DIE in the\nDWARF represents a function call done through a function pointer.  The\nDIE can't describe statically which function is being called, since it's\nvariable and not known at compile time.  Instead, it provides an\nexpression that evaluates to the address of the function being called.\nIn this case, the called function can very well be in a separate\nobjfile.\n\nFix this by overriding the per_objfile property while evaluating the\nsub-expression.\n\nThis was exposed by the gdb.base/catch-load.exp test failing on openSUSE\nTumbleweed with the glibc debug info installed.  It was also reported to\nfail on Fedora.\n\nWhen I investigated the problem, the particular call site on which we\ndid hit the assert was coming from this DIE, in\n/usr/lib/debug/lib64/libc-2.31.so-2.31-5.1.x86_64.debug on openSUSE\nTumbleweed:\n\n    0x0091aa10:     DW_TAG_GNU_call_site\n                      DW_AT_low_pc [DW_FORM_addr]   (0x00000000001398e0)\n                      DW_AT_GNU_call_site_target [DW_FORM_exprloc]  (DW_OP_fbreg -272, DW_OP_deref)\n                      DW_AT_sibling [DW_FORM_ref4]  (0x0091aa2b)\n\nAnd for you curious out there, this call site is found in this function:\n\n    0x0091a91d:   DW_TAG_subprogram\n                    DW_AT_external [DW_FORM_flag_present]   (true)\n                    DW_AT_name [DW_FORM_strp]       (\"_dl_catch_exception\")\n                    DW_AT_decl_file [DW_FORM_data1] (\"/usr/src/debug/glibc-2.31-5.1.x86_64/elf/dl-error-skeleton.c\")\n                    ...\n\nWhich is a function that indeed uses a function pointer.\n\ngdb/ChangeLog:\n\n\t* dwarf2/loc.c (class dwarf_evaluate_loc_desc)\n\t<push_dwarf_reg_entry_value>: Remove assert.  Override\n\tper_objfile with caller_per_objfile.\n\nChange-Id: Ib227d767ce525c10607ab6621a373aaae982c67a",
    "tree": {
      "sha": "a0ee4c96bed5abf631966b238056404bf704d7b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a0ee4c96bed5abf631966b238056404bf704d7b6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44486dcf19b62708ad49bbb6094e065a223dea99",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44486dcf19b62708ad49bbb6094e065a223dea99",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44486dcf19b62708ad49bbb6094e065a223dea99",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44486dcf19b62708ad49bbb6094e065a223dea99/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "09fe663ed827474bfb73b78d0506cecdcd8ece9d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09fe663ed827474bfb73b78d0506cecdcd8ece9d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/09fe663ed827474bfb73b78d0506cecdcd8ece9d"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 9,
    "deletions": 3
  },
  "files": [
    {
      "sha": "e5b4019dd6466b19002fde36b352e93042d3f9a6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44486dcf19b62708ad49bbb6094e065a223dea99/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44486dcf19b62708ad49bbb6094e065a223dea99/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=44486dcf19b62708ad49bbb6094e065a223dea99",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-28  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/loc.c (class dwarf_evaluate_loc_desc)\n+\t<push_dwarf_reg_entry_value>: Remove assert.  Override\n+\tper_objfile with caller_per_objfile.\n+\n 2020-05-28  Tom de Vries  <tdevries@suse.de>\n \n \t* dwarf2/read.c\t(dw2_symtab_iter_next, dw2_expand_marked_cus): Limit"
    },
    {
      "sha": "1aab1a4f51bcb837185ee95327e2c8846274070d",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44486dcf19b62708ad49bbb6094e065a223dea99/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44486dcf19b62708ad49bbb6094e065a223dea99/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=44486dcf19b62708ad49bbb6094e065a223dea99",
      "patch": "@@ -726,8 +726,6 @@ class dwarf_evaluate_loc_desc : public dwarf_expr_context\n     data_src = deref_size == -1 ? parameter->value : parameter->data_value;\n     size = deref_size == -1 ? parameter->value_size : parameter->data_value_size;\n \n-    gdb_assert (this->per_objfile == caller_per_objfile);\n-\n     /* DEREF_SIZE size is not verified here.  */\n     if (data_src == NULL)\n       throw_error (NO_ENTRY_VALUE_ERROR,\n@@ -739,11 +737,13 @@ class dwarf_evaluate_loc_desc : public dwarf_expr_context\n \t\t\t\t\t\t      caller_per_cu);\n     scoped_restore save_obj_addr = make_scoped_restore (&this->obj_address,\n \t\t\t\t\t\t\t(CORE_ADDR) 0);\n+    scoped_restore save_per_objfile = make_scoped_restore (&this->per_objfile,\n+\t\t\t\t\t\t\t   caller_per_objfile);\n \n     scoped_restore save_arch = make_scoped_restore (&this->gdbarch);\n     this->gdbarch = this->per_objfile->objfile->arch ();\n     scoped_restore save_addr_size = make_scoped_restore (&this->addr_size);\n-    this->addr_size = per_cu->addr_size ();\n+    this->addr_size = this->per_cu->addr_size ();\n \n     this->eval (data_src, size);\n   }"
    }
  ]
}