{
  "sha": "602885d8087f6ab35c8b9fd8ff0d5240a0b040a0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjAyODg1ZDgwODdmNmFiMzVjOGI5ZmQ4ZmYwZDUyNDBhMGIwNDBhMA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-23T04:32:23Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-30T01:58:05Z"
    },
    "message": "gdb: fix nr_bits gdb_assert in append_flags_type_field\n\nThe assertion\n\n    gdb_assert (nr_bits >= 1 && nr_bits <= type_bitsize);\n\nis not correct.  Well, it's correct in that we do want the number of\nbits to be in the range [1, type_bitsize].  But we don't check anywhere\nthat the end of the specified flag is within the containing type.\n\nThe following code should generate a failed assertion, as the flag goes\npast the 32 bits of the underlying type, but it's currently not caught:\n\n    static void\n    test_print_flag (gdbarch *arch)\n    {\n      type *flags_type = arch_flags_type (arch, \"test_type\", 32);\n      type *field_type = builtin_type (arch)->builtin_uint32;\n      append_flags_type_field (flags_type, 31, 2, field_type, \"invalid\");\n    }\n\n(You can test this by registering it as a selftest using\nselftests::register_test_foreach_arc and running.)\n\nChange the assertion to verify that the end bit is within the range of\nthe underlying type.  This implicitly verifies that nr_bits is not\ntoo big as well, so we don't need a separate assertion for that.\n\nChange-Id: I9be79e5fd7a5917bf25b03b598727e6274c892e8\nCo-Authored-By: Tony Tye <Tony.Tye@amd.com>",
    "tree": {
      "sha": "14695ca2909e507b4049d586406ec9d9d8751996",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/14695ca2909e507b4049d586406ec9d9d8751996"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/602885d8087f6ab35c8b9fd8ff0d5240a0b040a0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/602885d8087f6ab35c8b9fd8ff0d5240a0b040a0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/602885d8087f6ab35c8b9fd8ff0d5240a0b040a0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/602885d8087f6ab35c8b9fd8ff0d5240a0b040a0/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bbf1c6a2370c86e3c43a3b6064f48473098e68aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbf1c6a2370c86e3c43a3b6064f48473098e68aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bbf1c6a2370c86e3c43a3b6064f48473098e68aa"
    }
  ],
  "stats": {
    "total": 2,
    "additions": 1,
    "deletions": 1
  },
  "files": [
    {
      "sha": "5ba0e8d0eb9a035d58a7a7d72d10b5e25f59cdff",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/602885d8087f6ab35c8b9fd8ff0d5240a0b040a0/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/602885d8087f6ab35c8b9fd8ff0d5240a0b040a0/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=602885d8087f6ab35c8b9fd8ff0d5240a0b040a0",
      "patch": "@@ -5839,7 +5839,7 @@ append_flags_type_field (struct type *type, int start_bitpos, int nr_bits,\n   gdb_assert (type->code () == TYPE_CODE_FLAGS);\n   gdb_assert (type->num_fields () + 1 <= type_bitsize);\n   gdb_assert (start_bitpos >= 0 && start_bitpos < type_bitsize);\n-  gdb_assert (nr_bits >= 1 && nr_bits <= type_bitsize);\n+  gdb_assert (nr_bits >= 1 && (start_bitpos + nr_bits) <= type_bitsize);\n   gdb_assert (name != NULL);\n \n   TYPE_FIELD_NAME (type, field_nr) = xstrdup (name);"
    }
  ]
}