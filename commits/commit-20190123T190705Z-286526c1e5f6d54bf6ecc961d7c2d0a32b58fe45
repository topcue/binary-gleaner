{
  "sha": "286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjg2NTI2YzFlNWY2ZDU0YmY2ZWNjOTYxZDdjMmQwYTMyYjU4ZmU0NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-23T18:58:34Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-01-23T19:07:05Z"
    },
    "message": "Remove clear_symtab_users_cleanup\n\nThis removes clear_symtab_users_cleanup, replacing it with uses of\nforward_scope_exit.\n\ngdb/ChangeLog:\n2019-01-23  Tom Tromey  <tom@tromey.com>\n\t    Pedro Alves  <palves@redhat.com>\n\n\t* symfile.c: Include forward-scope-exit.h.\n\t(clear_symtab_users_cleanup): Replace forward declaration with\n\ta FORWARD_SCOPE_EXIT.\n\t(syms_from_objfile_1): Use the forward_scope_exit and\n\tgdb::optional instead of cleanup_function.\n\t(reread_symbols): Use the forward_scope_exit instead of\n\tcleanup_function.\n\t(clear_symtab_users_cleanup): Remove function.",
    "tree": {
      "sha": "626a823940ec5e20979fb5f2a75c0c6030dbb72c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/626a823940ec5e20979fb5f2a75c0c6030dbb72c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1db93f14fae0b3a638324e5349fe56a0e625451e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1db93f14fae0b3a638324e5349fe56a0e625451e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1db93f14fae0b3a638324e5349fe56a0e625451e"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 22,
    "deletions": 14
  },
  "files": [
    {
      "sha": "4f536753f1a9e6cf5919490cdda54c0528240c0b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45",
      "patch": "@@ -1,3 +1,15 @@\n+2019-01-23  Tom Tromey  <tom@tromey.com>\n+\t    Pedro Alves  <palves@redhat.com>\n+\n+\t* symfile.c: Include forward-scope-exit.h.\n+\t(clear_symtab_users_cleanup): Replace forward declaration with\n+\ta FORWARD_SCOPE_EXIT.\n+\t(syms_from_objfile_1): Use the forward_scope_exit and\n+\tgdb::optional instead of cleanup_function.\n+\t(reread_symbols): Use the forward_scope_exit instead of\n+\tcleanup_function.\n+\t(clear_symtab_users_cleanup): Remove function.\n+\n 2019-01-23  Tom Tromey  <tom@tromey.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "4875cbf7f5a71c57b0b176d5f2fbd8c501ae9a95",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 10,
      "deletions": 14,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=286526c1e5f6d54bf6ecc961d7c2d0a32b58fe45",
      "patch": "@@ -59,6 +59,7 @@\n #include \"common/byte-vector.h\"\n #include \"selftest.h\"\n #include \"cli/cli-style.h\"\n+#include \"common/forward-scope-exit.h\"\n \n #include <sys/types.h>\n #include <fcntl.h>\n@@ -79,7 +80,8 @@ void (*deprecated_show_load_progress) (const char *section,\n void (*deprecated_pre_add_symbol_hook) (const char *);\n void (*deprecated_post_add_symbol_hook) (void);\n \n-static void clear_symtab_users_cleanup (void *ignore);\n+using clear_symtab_users_cleanup\n+  = FORWARD_SCOPE_EXIT (clear_symtab_users);\n \n /* Global variables owned by this file.  */\n int readnow_symbol_files;\t/* Read full symbols immediately.  */\n@@ -923,7 +925,6 @@ syms_from_objfile_1 (struct objfile *objfile,\n \t\t     symfile_add_flags add_flags)\n {\n   section_addr_info local_addr;\n-  struct cleanup *old_chain;\n   const int mainline = add_flags & SYMFILE_MAINLINE;\n \n   objfile_set_sym_fns (objfile, find_sym_fns (objfile->obfd));\n@@ -945,7 +946,8 @@ syms_from_objfile_1 (struct objfile *objfile,\n \n   /* Make sure that partially constructed symbol tables will be cleaned up\n      if an error occurs during symbol reading.  */\n-  old_chain = make_cleanup (null_cleanup, NULL);\n+  gdb::optional<clear_symtab_users_cleanup> defer_clear_users;\n+\n   std::unique_ptr<struct objfile> objfile_holder (objfile);\n \n   /* If ADDRS is NULL, put together a dummy address list.\n@@ -958,7 +960,7 @@ syms_from_objfile_1 (struct objfile *objfile,\n     {\n       /* We will modify the main symbol table, make sure that all its users\n          will be cleaned up if an error occurs during symbol reading.  */\n-      make_cleanup (clear_symtab_users_cleanup, 0 /*ignore*/);\n+      defer_clear_users.emplace ((symfile_add_flag) 0);\n \n       /* Since no error yet, throw away the old symbol table.  */\n \n@@ -999,7 +1001,8 @@ syms_from_objfile_1 (struct objfile *objfile,\n   /* Discard cleanups as symbol reading was successful.  */\n \n   objfile_holder.release ();\n-  discard_cleanups (old_chain);\n+  if (defer_clear_users)\n+    defer_clear_users->release ();\n }\n \n /* Same as syms_from_objfile_1, but also initializes the objfile\n@@ -2441,7 +2444,6 @@ reread_symbols (void)\n       new_modtime = new_statbuf.st_mtime;\n       if (new_modtime != objfile->mtime)\n \t{\n-\t  struct cleanup *old_cleanups;\n \t  struct section_offsets *offsets;\n \t  int num_offsets;\n \n@@ -2461,7 +2463,7 @@ reread_symbols (void)\n \t  std::unique_ptr<struct objfile> objfile_holder (objfile);\n \n \t  /* We need to do this whenever any symbols go away.  */\n-\t  old_cleanups = make_cleanup (clear_symtab_users_cleanup, 0 /*ignore*/);\n+\t  clear_symtab_users_cleanup defer_clear_users (0);\n \n \t  if (exec_bfd != NULL\n \t      && filename_cmp (bfd_get_filename (objfile->obfd),\n@@ -2615,7 +2617,7 @@ reread_symbols (void)\n \n \t  /* Discard cleanups as symbol reading was successful.  */\n \t  objfile_holder.release ();\n-\t  discard_cleanups (old_cleanups);\n+\t  defer_clear_users.release ();\n \n \t  /* If the mtime has changed between the time we set new_modtime\n \t     and now, we *want* this to be out of date, so don't call stat\n@@ -2892,12 +2894,6 @@ clear_symtab_users (symfile_add_flags add_flags)\n   if ((add_flags & SYMFILE_DEFER_BP_RESET) == 0)\n     breakpoint_re_set ();\n }\n-\n-static void\n-clear_symtab_users_cleanup (void *ignore)\n-{\n-  clear_symtab_users (0);\n-}\n \f\n /* OVERLAYS:\n    The following code implements an abstraction for debugging overlay sections."
    }
  ]
}