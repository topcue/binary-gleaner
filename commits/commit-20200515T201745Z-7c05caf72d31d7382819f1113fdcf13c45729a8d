{
  "sha": "7c05caf72d31d7382819f1113fdcf13c45729a8d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2MwNWNhZjcyZDMxZDczODI4MTlmMTExM2ZkY2YxM2M0NTcyOWE4ZA==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-10T18:21:51Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-15T20:17:45Z"
    },
    "message": "Fix/improve 'apropos' output\n\nSimilarly to 'help CLASS', apropos possibly shows several\ntimes the same help (for the command and for each of its aliases).\n\nThis patch changes 'apropos' so that the help for a command and\nall its aliases is shown once.\n\nSo, apropos_cmd now skips all aliases/abbreviations, as these are printed\nas part of the help of the aliased command.\n\nWhen 'apropos' prints the help of a command, function 'help_cmd' now\nunconditionally print the command name and its possible aliases (as we must\nindicate to the user the command/aliases for which the help is printed).\n\nWhen 'help somecommand' prints the help of a command, if the command is not\naliased, the command name is not printed (to avoid a useless first line), but if\nit has aliases, then the command name and all its aliases are now printed.\nIn addition to provide to the user the choice of the best way to\ntype a command, it also avoids the strange behaviour that the output\nof 'help somealias' does not mention somealias.\n\ngdb/ChangeLog\n\n2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* cli/cli-decode.c (apropos_cmd): Produce output for aliases\n\twhen their aliased command is traversed.\n\t(help_cmd): Add fput_command_names_styled call to\n\toutput command name and aliases when command has an alias.\n\ngdb/testsuite/ChangeLog\n\n2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/help.exp: Test apropos and help for commands\n\thaving aliases.  Fixed comments not starting with an\n\tupper-case letter or not finishing with a dot.",
    "tree": {
      "sha": "4baa0c3c7e840e40efa84c744ae591b3aac88de5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4baa0c3c7e840e40efa84c744ae591b3aac88de5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7c05caf72d31d7382819f1113fdcf13c45729a8d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c05caf72d31d7382819f1113fdcf13c45729a8d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7c05caf72d31d7382819f1113fdcf13c45729a8d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c05caf72d31d7382819f1113fdcf13c45729a8d/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "3b3aaacba15292f185b6e8ba5faba1ed89c9f908",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b3aaacba15292f185b6e8ba5faba1ed89c9f908",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3b3aaacba15292f185b6e8ba5faba1ed89c9f908"
    }
  ],
  "stats": {
    "total": 101,
    "additions": 71,
    "deletions": 30
  },
  "files": [
    {
      "sha": "f685addecd1c55e4073f25a2bac45f9f04f81894",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7c05caf72d31d7382819f1113fdcf13c45729a8d",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* cli/cli-decode.c (apropos_cmd): Produce output for aliases\n+\twhen their aliased command is traversed.\n+\t(help_cmd): Add fput_command_names_styled call to\n+\toutput command name and aliases when command has an alias.\n+\n 2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* cli/cli-decode.h (help_cmd_list): Remove declaration."
    },
    {
      "sha": "2b24e57d4635206e182f9c706f4f16d2ccaf3475",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 29,
      "deletions": 8,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=7c05caf72d31d7382819f1113fdcf13c45729a8d",
      "patch": "@@ -1078,9 +1078,7 @@ print_doc_of_command (struct cmd_list_element *c, const char *prefix,\n   if (verbose)\n     fputs_filtered (\"\\n\", stream);\n \n-  fprintf_styled (stream, title_style.style (),\n-\t\t  \"%s%s\", prefix, c->name);\n-  fputs_filtered (\" -- \", stream);\n+  fput_command_names_styled (c, true, \" -- \", stream);\n   if (verbose)\n     fputs_highlighted (c->doc, highlight, stream);\n   else\n@@ -1106,6 +1104,14 @@ apropos_cmd (struct ui_file *stream,\n   /* Walk through the commands.  */\n   for (c=commandlist;c;c=c->next)\n     {\n+      if (c->cmd_pointer != nullptr)\n+\t{\n+\t  /* Command aliases/abbreviations are skipped to ensure we print the\n+\t     doc of a command only once, when encountering the aliased\n+\t     command.  */\n+\t  continue;\n+\t}\n+\n       returnvalue = -1; /* Needed to avoid double printing.  */\n       if (c->name != NULL)\n \t{\n@@ -1115,6 +1121,17 @@ apropos_cmd (struct ui_file *stream,\n \t  returnvalue = regex.search (c->name, name_len, 0, name_len, NULL);\n \t  if (returnvalue >= 0)\n \t    print_doc_of_command (c, prefix, verbose, regex, stream);\n+\n+\t  /* Try to match against the name of the aliases.  */\n+\t  for (cmd_list_element *iter = c->aliases;\n+\t       returnvalue < 0 && iter;\n+\t       iter = iter->alias_chain)\n+\t    {\n+\t      name_len = strlen (iter->name);\n+\t      returnvalue = regex.search (iter->name, name_len, 0, name_len, NULL);\n+\t      if (returnvalue >= 0)\n+\t\tprint_doc_of_command (c, prefix, verbose, regex, stream);\n+\t    }\n \t}\n       if (c->doc != NULL && returnvalue < 0)\n \t{\n@@ -1124,10 +1141,8 @@ apropos_cmd (struct ui_file *stream,\n \t  if (regex.search (c->doc, doc_len, 0, doc_len, NULL) >= 0)\n \t    print_doc_of_command (c, prefix, verbose, regex, stream);\n \t}\n-      /* Check if this command has subcommands and is not an\n-\t abbreviation.  We skip listing subcommands of abbreviations\n-\t in order to avoid duplicates in the output.  */\n-      if (c->prefixlist != NULL && !c->abbrev_flag)\n+      /* Check if this command has subcommands.  */\n+      if (c->prefixlist != NULL)\n \t{\n \t  /* Recursively call ourselves on the subcommand list,\n \t     passing the right prefix in.  */\n@@ -1150,7 +1165,7 @@ apropos_cmd (struct ui_file *stream,\n void\n help_cmd (const char *command, struct ui_file *stream)\n {\n-  struct cmd_list_element *c;\n+  struct cmd_list_element *c, *alias, *prefix_cmd, *c_cmd;\n \n   if (!command)\n     {\n@@ -1164,11 +1179,14 @@ help_cmd (const char *command, struct ui_file *stream)\n       return;\n     }\n \n+  const char *orig_command = command;\n   c = lookup_cmd (&command, cmdlist, \"\", 0, 0);\n \n   if (c == 0)\n     return;\n \n+  lookup_cmd_composition (orig_command, &alias, &prefix_cmd, &c_cmd);\n+\n   /* There are three cases here.\n      If c->prefixlist is nonzero, we have a prefix command.\n      Print its documentation, then list its subcommands.\n@@ -1181,6 +1199,9 @@ help_cmd (const char *command, struct ui_file *stream)\n      number of this class so that the commands in the class will be\n      listed.  */\n \n+  /* If the user asked 'help somecommand' and there is no alias,\n+     the false indicates to not output the (single) command name.  */\n+  fput_command_names_styled (c, false, \"\\n\", stream);\n   fputs_filtered (c->doc, stream);\n   fputs_filtered (\"\\n\", stream);\n "
    },
    {
      "sha": "bf2b9384d26cc9f0a105df56c78d9904d4c46376",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7c05caf72d31d7382819f1113fdcf13c45729a8d",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/help.exp: Test apropos and help for commands\n+\thaving aliases.  Fixed comments not starting with an\n+\tupper-case letter or not finishing with a dot.\n+\n 2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.base/alias.exp: Update help output check."
    },
    {
      "sha": "8ed0be45dbc3a62f3decf06a5c823bb000382b95",
      "filename": "gdb/testsuite/gdb.base/help.exp",
      "status": "modified",
      "additions": 29,
      "deletions": 22,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/testsuite/gdb.base/help.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c05caf72d31d7382819f1113fdcf13c45729a8d/gdb/testsuite/gdb.base/help.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/help.exp?ref=7c05caf72d31d7382819f1113fdcf13c45729a8d",
      "patch": "@@ -21,7 +21,7 @@\n \n gdb_start\n \n-# disable pagination\n+# Disable pagination.\n gdb_test_no_output \"set height 0\" \"disable pagination\"\n \n # Test all the help classes.\n@@ -61,30 +61,30 @@ with_read1_timeout_factor 10 {\n \n     # Test help of an abbreviated command.  \"break\" is picked at random.\n     set help_breakpoint_text \"Set breakpoint at specified location\\..*\"\n-    # test help breakpoint \"b\" abbreviation\n+    # Test help breakpoint \"b\" abbreviation.\n     gdb_test \"help b\" $help_breakpoint_text \"help breakpoint \\\"b\\\" abbreviation\"\n-    # test help breakpoint \"br\" abbreviation\n+    # Test help breakpoint \"br\" abbreviation.\n     gdb_test \"help br\" $help_breakpoint_text \"help breakpoint \\\"br\\\" abbreviation\"\n-    # test help breakpoint \"bre\" abbreviation\n+    # Test help breakpoint \"bre\" abbreviation;\n     gdb_test \"help bre\" $help_breakpoint_text \"help breakpoint \\\"bre\\\" abbreviation\"\n-    # test help breakpoint \"brea\" abbreviation\n+    # Test help breakpoint \"brea\" abbreviation.\n }\n gdb_test \"help brea\" $help_breakpoint_text \"help breakpoint \\\"brea\\\" abbreviation\"\n-# test help breakpoint \"break\" abbreviation\n+# Test help breakpoint \"break\" abbreviation.\n gdb_test \"help break\" $help_breakpoint_text \"help breakpoint \\\"break\\\" abbreviation\"\n \n # Test help of an aliased command.  \"bt\" is picked at random.\n set help_backtrace_text \"Print backtrace of all stack frames, or innermost COUNT frames\\..*\"\n-# test help backtrace \"bt\" abbreviation\n+# Test help backtrace \"bt\" abbreviation.\n gdb_test \"help bt\" $help_backtrace_text \"help backtrace \\\"bt\\\" abbreviation\"\n-# test help backtrace\n+# Test help backtrace.\n gdb_test \"help backtrace\" $help_backtrace_text\n \n-# test help commands\n+# Test help commands.\n gdb_test \"help commands\" \"Set commands to be executed when the given breakpoints are hit\\.\\[\\r\\n\\]+Give a space-separated breakpoint list as argument after \\\"commands\\\"\\.\\[\\r\\n\\]+A list element can be a breakpoint number \\\\(e.g. `5'\\\\) or a range of numbers\\[\\r\\n\\]+\\\\(e.g. `5-7'\\\\)\\.\\[\\r\\n\\]+With no argument, the targeted breakpoint is the last one set\\.\\[\\r\\n\\]+The commands themselves follow starting on the next line\\.\\[\\r\\n\\]+Type a line containing \\\"end\\\" to indicate the end of them\\.\\[\\r\\n\\]+Give \\\"silent\\\" as the first line to make the breakpoint silent;\\[\\r\\n\\]+then no output is printed when it is hit, except what the commands print\\.\"\n \n # Test a prefix command.  \"delete\" is picked at random.\n-# test help delete \"d\" abbreviation\n+# Test help delete \"d\" abbreviation.\n set expected_help_delete {\n     \"Delete all or some breakpoints\\.\\[\\r\\n\\]+\"\n     \"Usage: delete \\\\\\[BREAKPOINTNUM\\\\\\]...\\[\\r\\n\\]+\"\n@@ -93,36 +93,43 @@ set expected_help_delete {\n     \"Also a prefix command for deletion of other GDB objects\\.\\[\\r\\n\\]+\"\n }\n test_prefix_command_help {\"d\" \"delete\"} $expected_help_delete \"help delete \\\"d\\\" abbreviation\"\n-# test help delete\n+# Test help delete.\n test_prefix_command_help \"delete\" $expected_help_delete\n \n # Make sure help for help itself is present.\n-# test help help \"h\" abbreviation \n+# Test help help \"h\" abbreviation.\n gdb_test \"help h\" \"Print list of commands\\.\" \"help help \\\"h\\\" abbreviation\"\n-# test help help\n+# Test help help.\n gdb_test \"help help\" \"Print list of commands\\.\"\n \n # The startup banner refers to \"show copying\" and \"show warranty\",\n # might as well test for them.\n-# test help info copying\n+# Test help info copying.\n gdb_test \"help show copying\" \"Conditions for redistributing copies of GDB\\.\"\n-# test help info warranty\n+# Test help info warranty.\n gdb_test \"help show warranty\" \"Various kinds of warranty you do not have\\.\"\n \n # Test a few other random \"help show\" commands.\n-# test help show commands\n+# Test help show commands.\n gdb_test \"help show commands\" \"Show the history of commands you typed\\.\\[\\r\\n\\]+You can supply a command number to start with, or a `\\[+\\]' to start after\\[\\r\\n\\]+the previous command number shown\\.\"\n-# test help show confirm\n+# Test help show confirm.\n gdb_test \"help show confirm\" \"Show whether to confirm potentially dangerous operations\\.\"\n \n-# test help info bogus-gdb-command\n+# Test help info bogus-gdb-command.\n gdb_test \"help info bogus-gdb-command\" \"Undefined info command: \\\"bogus-gdb-command\\\"\\.  Try \\\"help info\\\"\\.\"\n-# test help gotcha\n+# Test help gotcha.\n gdb_test \"help gotcha\" \"Undefined command: \\\"gotcha\\\"\\.  Try \\\"help\\\"\\.\"\n \n-# test apropos regex\n+# Test apropos regex.\n gdb_test \"apropos \\\\\\(print\\[\\^\\[ bsiedf\\\\\\\".-\\]\\\\\\)\" \"handle -- Specify how to handle signals\\.\"\n-# test apropos >1 word string\n+# Test apropos >1 word string.\n gdb_test \"apropos handle signal\" \"handle -- Specify how to handle signals\\.\"\n-# test apropos apropos\n+# Test apropos apropos.\n gdb_test \"apropos apropos\" \"apropos -- Search for commands matching a REGEXP.*\"\n+\n+# Test apropos for commands having aliases.\n+gdb_test \"apropos Print backtrace of all stack frames, or innermost COUNT frames\\.\" \\\n+    \"backtrace, where, bt -- Print backtrace of all stack frames, or innermost COUNT frames\\.\"\n+\n+# Test help for commands having aliases.\n+gdb_test \"help bt\" \"backtrace, where, bt\\[\\r\\n\\]+Print backtrace of all stack frames, or innermost COUNT frames\\..*\""
    }
  ]
}