{
  "sha": "91ef1ea5428adfc8b2b13bd584e1791c9e59e804",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTFlZjFlYTU0MjhhZGZjOGIyYjEzYmQ1ODRlMTc5MWM5ZTU5ZTgwNA==",
  "commit": {
    "author": {
      "name": "George Barrett",
      "email": "bob@bob131.so",
      "date": "2021-07-29T15:12:35Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-29T16:56:04Z"
    },
    "message": "guile/scm-math: indentation fixes\n\nChanges the indenting of a few expressions in\nvlscm_convert_typed_number to be better in line with the prevailing\ncode style.\n\ngdb/ChangeLog:\n\n2021-07-30  George Barrett  <bob@bob131.so>\n\n\t* guile/scm-math.c (vlscm_convert_typed_number): Fix the\n\tindentation of calls to gdbscm_make_out_of_range_error.\n\nChange-Id: I7463998b77c17a00e88058e89b52fa029ee40e03",
    "tree": {
      "sha": "72eb14a2275e92dc8e47b3d2244496ff4963acf8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/72eb14a2275e92dc8e47b3d2244496ff4963acf8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/91ef1ea5428adfc8b2b13bd584e1791c9e59e804",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/91ef1ea5428adfc8b2b13bd584e1791c9e59e804",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/91ef1ea5428adfc8b2b13bd584e1791c9e59e804",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/91ef1ea5428adfc8b2b13bd584e1791c9e59e804/comments",
  "author": {
    "login": "Bob131",
    "id": 4337852,
    "node_id": "MDQ6VXNlcjQzMzc4NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4337852?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Bob131",
    "html_url": "https://github.com/Bob131",
    "followers_url": "https://api.github.com/users/Bob131/followers",
    "following_url": "https://api.github.com/users/Bob131/following{/other_user}",
    "gists_url": "https://api.github.com/users/Bob131/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Bob131/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Bob131/subscriptions",
    "organizations_url": "https://api.github.com/users/Bob131/orgs",
    "repos_url": "https://api.github.com/users/Bob131/repos",
    "events_url": "https://api.github.com/users/Bob131/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Bob131/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b5b591a865b3021453a47c612ece5e7574b47d04",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5b591a865b3021453a47c612ece5e7574b47d04",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b5b591a865b3021453a47c612ece5e7574b47d04"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 9,
    "deletions": 9
  },
  "files": [
    {
      "sha": "b6a03da0af9477b22f0a0b7781d484fc13e67e18",
      "filename": "gdb/guile/scm-math.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/91ef1ea5428adfc8b2b13bd584e1791c9e59e804/gdb/guile/scm-math.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/91ef1ea5428adfc8b2b13bd584e1791c9e59e804/gdb/guile/scm-math.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-math.c?ref=91ef1ea5428adfc8b2b13bd584e1791c9e59e804",
      "patch": "@@ -532,9 +532,9 @@ vlscm_convert_typed_number (const char *func_name, int obj_arg_pos, SCM obj,\n \t  if (!scm_is_unsigned_integer (obj, 0, max))\n \t    {\n \t      *except_scmp\n-\t\t= gdbscm_make_out_of_range_error (func_name,\n-\t\t\t\t\t\t  obj_arg_pos, obj,\n-\t\t\t\t\t_(\"value out of range for type\"));\n+\t\t= gdbscm_make_out_of_range_error\n+\t\t    (func_name, obj_arg_pos, obj,\n+\t\t     _(\"value out of range for type\"));\n \t      return NULL;\n \t    }\n \t  return value_from_longest (type, gdbscm_scm_to_ulongest (obj));\n@@ -547,9 +547,9 @@ vlscm_convert_typed_number (const char *func_name, int obj_arg_pos, SCM obj,\n \t  if (!scm_is_signed_integer (obj, min, max))\n \t    {\n \t      *except_scmp\n-\t\t= gdbscm_make_out_of_range_error (func_name,\n-\t\t\t\t\t\t  obj_arg_pos, obj,\n-\t\t\t\t\t_(\"value out of range for type\"));\n+\t\t= gdbscm_make_out_of_range_error\n+\t\t    (func_name, obj_arg_pos, obj,\n+\t\t     _(\"value out of range for type\"));\n \t      return NULL;\n \t    }\n \t  return value_from_longest (type, gdbscm_scm_to_longest (obj));\n@@ -561,9 +561,9 @@ vlscm_convert_typed_number (const char *func_name, int obj_arg_pos, SCM obj,\n       if (!scm_is_unsigned_integer (obj, 0, max))\n \t{\n \t  *except_scmp\n-\t    = gdbscm_make_out_of_range_error (func_name,\n-\t\t\t\t\t      obj_arg_pos, obj,\n-\t\t\t\t\t_(\"value out of range for type\"));\n+\t    = gdbscm_make_out_of_range_error\n+\t        (func_name, obj_arg_pos, obj,\n+\t\t _(\"value out of range for type\"));\n \t  return NULL;\n \t}\n       return value_from_pointer (type, gdbscm_scm_to_ulongest (obj));"
    }
  ]
}