{
  "sha": "e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76",
  "node_id": "C_kwDOANOeidoAKGU0NmRhN2VjMWJkOWQzOWUyOGE4NmU4ZDZjNTIyYTZmZjc1MTBhNzY",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-30T17:07:48Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-30T17:07:48Z"
    },
    "message": "[gdb/testsuite] Check compilation result in gdb.base/call-sc.exp\n\nWhen running test-case gdb.base/call-sc.exp with target board unix/-bad, I\nget:\n...\ngdb compile failed, gcc: error: unrecognized command line option '-bad'\nUNTESTED: gdb.base/call-sc.exp: failed to prepare\nERROR: tcl error sourcing src/gdb/testsuite/gdb.base/call-sc.exp.\nERROR: can't read \"use_gdb_stub\": no such variable\n...\n\nFix this by checking the compilation result.\n\nFix the resulting DUPLICATE:\n...\nDUPLICATE: gdb.base/call-sc.exp: failed to prepare\n...\nusing with_test_prefix.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "d0cab111ee3f0a6fd539b92cc3bf968d56ff1b86",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d0cab111ee3f0a6fd539b92cc3bf968d56ff1b86"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b6107a72badd38a2cf63fc09759ce281547c19a3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6107a72badd38a2cf63fc09759ce281547c19a3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b6107a72badd38a2cf63fc09759ce281547c19a3"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 18,
    "deletions": 27
  },
  "files": [
    {
      "sha": "5ba72a54a1fda4b81c7b0d3196ebc2d69fde1376",
      "filename": "gdb/testsuite/gdb.base/call-sc.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 27,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76/gdb/testsuite/gdb.base/call-sc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76/gdb/testsuite/gdb.base/call-sc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/call-sc.exp?ref=e46da7ec1bd9d39e28a86e8d6c522a6ff7510a76",
      "patch": "@@ -393,10 +393,17 @@ proc test_scalar_returns { } {\n # Test every single char struct from 1..17 in size.  This is what the\n # original \"scalars\" test was doing.\n \n-start_scalars_test tc\n-test_scalar_calls\n-test_scalar_returns\n+proc test { type } {\n+    with_test_prefix $type {\n+\tif { [start_scalars_test $type] == -1 } {\n+\t    return\n+\t}\n+\ttest_scalar_calls\n+\ttest_scalar_returns\n+    }\n+}\n \n+test tc\n \n # Let the fun begin.\n \n@@ -413,45 +420,29 @@ test_scalar_returns\n # naturally aligned.  Padding being added where needed.\n \n # Approx size: 2, 4, ...\n-start_scalars_test ts\n-test_scalar_calls\n-test_scalar_returns\n+test ts\n \n # Approx size: 4, 8, ...\n-start_scalars_test ti\n-test_scalar_calls\n-test_scalar_returns\n+test ti\n \n # Approx size: 4, 8, ...\n-start_scalars_test tl\n-test_scalar_calls\n-test_scalar_returns\n+test tl\n \n # Approx size: 8, 16, ...\n-start_scalars_test tll\n-test_scalar_calls\n-test_scalar_returns\n+test tll\n \n if {!$skip_float_test} {\n     # Approx size: 4, 8, ...\n-    start_scalars_test tf\n-    test_scalar_calls\n-    test_scalar_returns\n+    test tf\n \n     # Approx size: 8, 16, ...\n-    start_scalars_test td\n-    test_scalar_calls\n-    test_scalar_returns\n+    test td\n \n     # Approx size: 16, 32, ...\n-    start_scalars_test tld\n-    test_scalar_calls\n-    test_scalar_returns\n+    test tld\n }\n \n # Approx size: 4, 8, ...\n-start_scalars_test te\n-test_scalar_calls\n-test_scalar_returns\n+test te\n \n return 0"
    }
  ]
}