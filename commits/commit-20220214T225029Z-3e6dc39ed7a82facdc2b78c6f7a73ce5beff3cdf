{
  "sha": "3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf",
  "node_id": "C_kwDOANOeidoAKDNlNmRjMzllZDdhODJmYWNkYzJiNzhjNmY3YTczY2U1YmVmZjNjZGY",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@axis.com",
      "date": "2022-02-14T22:50:29Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2022-02-14T22:50:29Z"
    },
    "message": "sim/testsuite: Set global_cc_os also when no compiler is found\n\nIf we don't set this variable, it doesn't exist, and using \"#progos:\"\nin an assembler-file will cause an error rather than just skipping the\ntest, viz:\n\nRunning /src/sim/testsuite/cris/hw/rv-n-cris/rvc.exp ...\nERROR: tcl error sourcing /src/sim/testsuite/cris/hw/rv-n-cris/rvc.exp.\nERROR: can't read \"global_cc_os\": no such variable\n    while executing\n\"if { $opts(progos) != \"\" && $opts(progos) != $global_cc_os } {\n\tuntested $subdir/$name\n\treturn\n    }\"\n    (procedure \"run_sim_test\" line 102)\n\nNeither the commit introducing progos, nor the top comment\nin run_sim_test, mentions progos as intended only for C\ntests, or that its use must be gated on $global_cc_works !=\n0, so (not) setting it in the no-working-compiler path seems\njust overlooked.\n\nAllowing it to be used for assembler tests makes it usable\nfor e.g. an always-false predicate and in expressions in\n.exp files without gating on $global_cc_works != 0.\n\nWith this patch, global_cc_os is set to \"\", just as for \"unknown OS\".\n\n    sim/testsuite:\n\t* lib/sim-defs.exp (sim_init_toolchain): Set global_cc_os also when\n\tno working target C compiler is found.",
    "tree": {
      "sha": "aee5cb0050a15b1353b785449426e2e55ae6331a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aee5cb0050a15b1353b785449426e2e55ae6331a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf/comments",
  "author": {
    "login": "hpataxisdotcom",
    "id": 80339731,
    "node_id": "MDQ6VXNlcjgwMzM5NzMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hpataxisdotcom",
    "html_url": "https://github.com/hpataxisdotcom",
    "followers_url": "https://api.github.com/users/hpataxisdotcom/followers",
    "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}",
    "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions",
    "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs",
    "repos_url": "https://api.github.com/users/hpataxisdotcom/repos",
    "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "3293b4f66797bb2ccd3dbbf170249556fc16ced7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3293b4f66797bb2ccd3dbbf170249556fc16ced7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3293b4f66797bb2ccd3dbbf170249556fc16ced7"
    }
  ],
  "stats": {
    "total": 1,
    "additions": 1,
    "deletions": 0
  },
  "files": [
    {
      "sha": "3586fa550765bfae33c04f6ca5062757db9c6a8e",
      "filename": "sim/testsuite/lib/sim-defs.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf/sim/testsuite/lib/sim-defs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf/sim/testsuite/lib/sim-defs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/lib/sim-defs.exp?ref=3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf",
      "patch": "@@ -142,6 +142,7 @@ proc sim_init_toolchain {} {\n     } {\n \tverbose -log \"Can't execute C compiler\"\n \tset global_cc_works 0\n+\tset global_cc_os \"\"\n     }\n \n     file delete $objdir/compilercheck.x"
    }
  ]
}