{
  "sha": "6b22174ff163b828a2069f22353018ca97fc0fb4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmIyMjE3NGZmMTYzYjgyOGEyMDY5ZjIyMzUzMDE4Y2E5N2ZjMGZiNA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-06-03T13:02:09Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-06-04T16:05:08Z"
    },
    "message": "libctf: look for BSD versus GNU qsort_r signatures\n\nWe cannot just look for any declaration of qsort_r, because some\noperating systems have a qsort_r that has a different prototype\nbut which still has a pair of pointers in the right places (the last two\nargs are interchanged): so use AC_LINK_IFELSE to check for both\nknown variants of qsort_r(), and swap their args into a consistent order\nin a suitable inline function.  (The code for this is taken almost\nunchanged from gnulib.)\n\n(Now we are not using AC_LIBOBJ any more, we can use a better name for\nthe qsort_r replacement as well.)\n\nlibctf/\n\t* qsort_r.c: Rename to...\n\t* ctf-qsort_r.c: ... this.\n\t(_quicksort): Define to ctf_qsort_r.\n\t* ctf-decls.h (qsort_r): Remove.\n\t(ctf_qsort_r): Add.\n\t(struct ctf_qsort_arg): New, transport the real ARG and COMPAR.\n\t(ctf_qsort_compar_thunk): Rearrange the arguments to COMPAR.\n\t* Makefile.am (libctf_a_LIBADD): Remove.\n\t(libctf_a_SOURCES): New, add ctf-qsort_r.c.\n\t* ctf-archive.c (ctf_arc_write): Call ctf_qsort_r, not qsort_r.\n\t* ctf-create.c (ctf_update): Likewise.\n\t* configure.ac: Check for BSD versus GNU qsort_r signature.\n\t* Makefile.in: Regenerate.\n\t* config.h.in: Likewise.\n\t* configure: Likewise.",
    "tree": {
      "sha": "25224c057c20981bff2e95d098b189673f3e6847",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/25224c057c20981bff2e95d098b189673f3e6847"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6b22174ff163b828a2069f22353018ca97fc0fb4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b22174ff163b828a2069f22353018ca97fc0fb4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6b22174ff163b828a2069f22353018ca97fc0fb4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b22174ff163b828a2069f22353018ca97fc0fb4/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "941accce38bc70a23c62e3c9439b67bf23298124",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/941accce38bc70a23c62e3c9439b67bf23298124",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/941accce38bc70a23c62e3c9439b67bf23298124"
    }
  ],
  "stats": {
    "total": 321,
    "additions": 236,
    "deletions": 85
  },
  "files": [
    {
      "sha": "c51efea8bcd215ad4a34bb5be1f15d07bc8eba55",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -1,3 +1,21 @@\n+2019-06-04  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* qsort_r.c: Rename to...\n+\t* ctf-qsort_r.c: ... this.\n+\t(_quicksort): Define to ctf_qsort_r.\n+\t* ctf-decls.h (qsort_r): Remove.\n+\t(ctf_qsort_r): Add.\n+\t(struct ctf_qsort_arg): New, transport the real ARG and COMPAR.\n+\t(ctf_qsort_compar_thunk): Rearrange the arguments to COMPAR.\n+\t* Makefile.am (libctf_a_LIBADD): Remove.\n+\t(libctf_a_SOURCES): New, add ctf-qsort_r.c.\n+\t* ctf-archive.c (ctf_arc_write): Call ctf_qsort_r, not qsort_r.\n+\t* ctf-create.c (ctf_update): Likewise.\n+\t* configure.ac: Check for BSD versus GNU qsort_r signature.\n+\t* Makefile.in: Regenerate.\n+\t* config.h.in: Likewise.\n+\t* configure: Likewise.\n+\n 2019-06-03  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-dump.c (ctf_dump_funcs): Free in the right place."
    },
    {
      "sha": "926c9919c56d7d4037be5782bddecd4b4c9b670c",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -35,4 +35,6 @@ noinst_LIBRARIES = libctf.a\n libctf_a_SOURCES = ctf-archive.c ctf-dump.c ctf-create.c ctf-decl.c ctf-error.c \\\n \t\t   ctf-hash.c ctf-labels.c ctf-lookup.c ctf-open.c ctf-open-bfd.c \\\n \t\t   ctf-subr.c ctf-types.c ctf-util.c\n-libctf_a_LIBADD = $(LIBOBJS)\n+if NEED_CTF_QSORT_R\n+libctf_a_SOURCES += ctf-qsort_r.c\n+endif"
    },
    {
      "sha": "4fea156c44ef8e27d40353059e3173bf52e968bc",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 17,
      "deletions": 12,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -104,6 +104,7 @@ POST_INSTALL = :\n NORMAL_UNINSTALL = :\n PRE_UNINSTALL = :\n POST_UNINSTALL = :\n+@NEED_CTF_QSORT_R_TRUE@am__append_1 = ctf-qsort_r.c\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n@@ -128,12 +129,17 @@ am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)\n am__v_AR_0 = @echo \"  AR      \" $@;\n am__v_AR_1 = \n libctf_a_AR = $(AR) $(ARFLAGS)\n-libctf_a_DEPENDENCIES = $(LIBOBJS)\n+libctf_a_LIBADD =\n+am__libctf_a_SOURCES_DIST = ctf-archive.c ctf-dump.c ctf-create.c \\\n+\tctf-decl.c ctf-error.c ctf-hash.c ctf-labels.c ctf-lookup.c \\\n+\tctf-open.c ctf-open-bfd.c ctf-subr.c ctf-types.c ctf-util.c \\\n+\tctf-qsort_r.c\n+@NEED_CTF_QSORT_R_TRUE@am__objects_1 = ctf-qsort_r.$(OBJEXT)\n am_libctf_a_OBJECTS = ctf-archive.$(OBJEXT) ctf-dump.$(OBJEXT) \\\n \tctf-create.$(OBJEXT) ctf-decl.$(OBJEXT) ctf-error.$(OBJEXT) \\\n \tctf-hash.$(OBJEXT) ctf-labels.$(OBJEXT) ctf-lookup.$(OBJEXT) \\\n \tctf-open.$(OBJEXT) ctf-open-bfd.$(OBJEXT) ctf-subr.$(OBJEXT) \\\n-\tctf-types.$(OBJEXT) ctf-util.$(OBJEXT)\n+\tctf-types.$(OBJEXT) ctf-util.$(OBJEXT) $(am__objects_1)\n libctf_a_OBJECTS = $(am_libctf_a_OBJECTS)\n AM_V_P = $(am__v_P_@AM_V@)\n am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n@@ -164,7 +170,7 @@ am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)\n am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n am__v_CCLD_1 = \n SOURCES = $(libctf_a_SOURCES)\n-DIST_SOURCES = $(libctf_a_SOURCES)\n+DIST_SOURCES = $(am__libctf_a_SOURCES_DIST)\n am__can_run_installinfo = \\\n   case $$AM_UPDATE_INFO_DIR in \\\n     n|no|NO) false;; \\\n@@ -196,7 +202,7 @@ am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \\\n \t$(top_srcdir)/../ar-lib $(top_srcdir)/../compile \\\n \t$(top_srcdir)/../depcomp $(top_srcdir)/../install-sh \\\n \t$(top_srcdir)/../missing $(top_srcdir)/../mkinstalldirs \\\n-\tChangeLog qsort_r.c\n+\tChangeLog\n DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n distdir = $(PACKAGE)-$(VERSION)\n top_distdir = $(distdir)\n@@ -323,11 +329,10 @@ ZLIBINC = @zlibinc@\n AM_CPPFLAGS = -D_GNU_SOURCE -I$(top_srcdir) -I$(top_srcdir)/../include -I$(top_srcdir)/../bfd -I../bfd\n AM_CFLAGS = -std=gnu99 @ac_libctf_warn_cflags@ @warn@ @c_warn@ @WARN_PEDANTIC@ @WERROR@ $(ZLIBINC)\n noinst_LIBRARIES = libctf.a\n-libctf_a_SOURCES = ctf-archive.c ctf-dump.c ctf-create.c ctf-decl.c ctf-error.c \\\n-\t\t   ctf-hash.c ctf-labels.c ctf-lookup.c ctf-open.c ctf-open-bfd.c \\\n-\t\t   ctf-subr.c ctf-types.c ctf-util.c\n-\n-libctf_a_LIBADD = $(LIBOBJS)\n+libctf_a_SOURCES = ctf-archive.c ctf-dump.c ctf-create.c ctf-decl.c \\\n+\tctf-error.c ctf-hash.c ctf-labels.c ctf-lookup.c ctf-open.c \\\n+\tctf-open-bfd.c ctf-subr.c ctf-types.c ctf-util.c \\\n+\t$(am__append_1)\n all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -396,7 +401,6 @@ mostlyclean-compile:\n distclean-compile:\n \t-rm -f *.tab.c\n \n-@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/qsort_r.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-archive.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-create.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-decl.Po@am__quote@\n@@ -407,6 +411,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-lookup.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-open-bfd.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-open.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-qsort_r.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-subr.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-types.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ctf-util.Po@am__quote@\n@@ -687,7 +692,7 @@ clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am\n \n distclean: distclean-am\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf $(DEPDIR) ./$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-hdr distclean-tags\n@@ -735,7 +740,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-am\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf $(DEPDIR) ./$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n "
    },
    {
      "sha": "d81c500c5c3627b5dceec8002026e6dcbbb5b898",
      "filename": "libctf/config.h.in",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/config.h.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/config.h.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/config.h.in?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -9,10 +9,6 @@\n /* Define to 1 if you have the <byteswap.h> header file. */\n #undef HAVE_BYTESWAP_H\n \n-/* Define to 1 if you have the declaration of `qsort_r', and to 0 if you\n-   don't. */\n-#undef HAVE_DECL_QSORT_R\n-\n /* Define to 1 if you have the <endian.h> header file. */\n #undef HAVE_ENDIAN_H\n \n@@ -31,6 +27,15 @@\n /* Define to 1 if you have the `pread' function. */\n #undef HAVE_PREAD\n \n+/* Define to 1 if you have the `qsort_r' function. */\n+#undef HAVE_QSORT_R\n+\n+/* Whether a qsort_r exists with a void *arg as its last arg. */\n+#undef HAVE_QSORT_R_ARG_LAST\n+\n+/* Whether a qsort_r exists with the compar function as its last arg. */\n+#undef HAVE_QSORT_R_COMPAR_LAST\n+\n /* Define to 1 if you have the <stdint.h> header file. */\n #undef HAVE_STDINT_H\n "
    },
    {
      "sha": "d485b1a7cec58371097f211a6723ddf69ddf4a12",
      "filename": "libctf/configure",
      "status": "modified",
      "additions": 104,
      "deletions": 57,
      "changes": 161,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -620,10 +620,13 @@ ac_includes_default=\"\\\n #endif\"\n \n ac_header_list=\n+ac_func_list=\n ac_subst_vars='am__EXEEXT_FALSE\n am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n+NEED_CTF_QSORT_R_FALSE\n+NEED_CTF_QSORT_R_TRUE\n zlibinc\n zlibdir\n ac_libctf_warn_cflags\n@@ -1809,52 +1812,6 @@ $as_echo \"$ac_res\" >&6; }\n   eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n \n } # ac_fn_c_check_func\n-\n-# ac_fn_c_check_decl LINENO SYMBOL VAR INCLUDES\n-# ---------------------------------------------\n-# Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR\n-# accordingly.\n-ac_fn_c_check_decl ()\n-{\n-  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n-  as_decl_name=`echo $2|sed 's/ *(.*//'`\n-  as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\n-$as_echo_n \"checking whether $as_decl_name is declared... \" >&6; }\n-if eval \\${$3+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-$4\n-int\n-main ()\n-{\n-#ifndef $as_decl_name\n-#ifdef __cplusplus\n-  (void) $as_decl_use;\n-#else\n-  (void) $as_decl_name;\n-#endif\n-#endif\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  eval \"$3=yes\"\n-else\n-  eval \"$3=no\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-fi\n-eval ac_res=\\$$3\n-\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n-$as_echo \"$ac_res\" >&6; }\n-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n-\n-} # ac_fn_c_check_decl\n cat >config.log <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n@@ -2142,6 +2099,7 @@ fi\n as_fn_append ac_header_list \" stdlib.h\"\n as_fn_append ac_header_list \" unistd.h\"\n as_fn_append ac_header_list \" sys/param.h\"\n+as_fn_append ac_func_list \" qsort_r\"\n # Check that the precious variables saved in the cache have kept the same\n # value.\n ac_cache_corrupted=false\n@@ -6401,23 +6359,108 @@ _ACEOF\n fi\n done\n \n-ac_fn_c_check_decl \"$LINENO\" \"qsort_r\" \"ac_cv_have_decl_qsort_r\" \"$ac_includes_default\"\n-if test \"x$ac_cv_have_decl_qsort_r\" = xyes; then :\n-  ac_have_decl=1\n-else\n-  ac_have_decl=0\n+\n+\n+\n+\n+  for ac_func in $ac_func_list\n+do :\n+  as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n+ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n+if eval test \\\"x\\$\"$as_ac_var\"\\\" = x\"yes\"; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define `$as_echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n+_ACEOF\n+\n fi\n+done\n \n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_DECL_QSORT_R $ac_have_decl\n+\n+\n+\n+if test $ac_cv_func_qsort_r = yes; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for qsort_r signature\" >&5\n+$as_echo_n \"checking for qsort_r signature... \" >&6; }\n+if ${ac_cv_libctf_qsort_r_signature+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#undef qsort_r\n+                          #include <stdlib.h>\n+                          void qsort_r (void *, size_t, size_t,\n+                                        int (*) (void const *, void const *,\n+                                                 void *),\n+                                        void *);\n+                          void (*p) (void *, size_t, size_t,\n+                                     int (*) (void const *, void const *,\n+                                              void *),\n+                                     void *) = qsort_r;\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n _ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_libctf_qsort_r_signature=GNU\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#undef qsort_r\n+\t                     #include <stdlib.h>\n+                             void qsort_r (void *, size_t, size_t, void *,\n+                                           int (*) (void *,\n+                                                    void const *,\n+                                                    void const *));\n+                             void (*p) (void *, size_t, size_t, void *,\n+                                        int (*) (void *, void const *,\n+                                                 void const *)) = qsort_r;\n \n-case \" $LIBOBJS \" in\n-  *\" qsort_r.$ac_objext \"* ) ;;\n-  *) LIBOBJS=\"$LIBOBJS qsort_r.$ac_objext\"\n- ;;\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_libctf_qsort_r_signature=BSD\n+else\n+  ac_cv_libctf_qsort_r_signature=unknown\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_libctf_qsort_r_signature\" >&5\n+$as_echo \"$ac_cv_libctf_qsort_r_signature\" >&6; }\n+fi\n+\n+case x$ac_cv_libctf_qsort_r_signature in\n+  xGNU)\n+$as_echo \"#define HAVE_QSORT_R_ARG_LAST 1\" >>confdefs.h\n+;;\n+  xBSD)\n+$as_echo \"#define HAVE_QSORT_R_COMPAR_LAST 1\" >>confdefs.h\n+;;\n+  *) ac_cv_libctf_qsort_r_signature=unknown;;\n esac\n \n+ if test \"${ac_cv_libctf_qsort_r_signature}\" = unknown; then\n+  NEED_CTF_QSORT_R_TRUE=\n+  NEED_CTF_QSORT_R_FALSE='#'\n+else\n+  NEED_CTF_QSORT_R_TRUE='#'\n+  NEED_CTF_QSORT_R_FALSE=\n+fi\n+\n \n ac_config_files=\"$ac_config_files Makefile\"\n \n@@ -6561,6 +6604,10 @@ if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n \n+if test -z \"${NEED_CTF_QSORT_R_TRUE}\" && test -z \"${NEED_CTF_QSORT_R_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"NEED_CTF_QSORT_R\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : \"${CONFIG_STATUS=./config.status}\"\n ac_write_fail=0"
    },
    {
      "sha": "beb90ba75cc4cf58329da2f5551d81201affe2db",
      "filename": "libctf/configure.ac",
      "status": "modified",
      "additions": 42,
      "deletions": 2,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure.ac?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -90,8 +90,48 @@ fi\n AC_C_BIGENDIAN\n AC_CHECK_HEADERS(byteswap.h endian.h)\n AC_CHECK_FUNCS(pread)\n-AC_CHECK_DECLS([qsort_r])\n-AC_LIBOBJ([qsort_r])\n+\n+dnl Check for qsort_r.  (Taken from gnulib.)\n+AC_CHECK_FUNCS_ONCE([qsort_r])\n+if test $ac_cv_func_qsort_r = yes; then\n+  AC_CACHE_CHECK([for qsort_r signature], [ac_cv_libctf_qsort_r_signature],\n+    [AC_LINK_IFELSE(\n+       [AC_LANG_PROGRAM([[#undef qsort_r\n+                          #include <stdlib.h>\n+                          void qsort_r (void *, size_t, size_t,\n+                                        int (*) (void const *, void const *,\n+                                                 void *),\n+                                        void *);\n+                          void (*p) (void *, size_t, size_t,\n+                                     int (*) (void const *, void const *,\n+                                              void *),\n+                                     void *) = qsort_r;\n+                        ]])],\n+       [ac_cv_libctf_qsort_r_signature=GNU],\n+       [AC_LINK_IFELSE(\n+          [AC_LANG_PROGRAM([[#undef qsort_r\n+\t                     #include <stdlib.h>\n+                             void qsort_r (void *, size_t, size_t, void *,\n+                                           int (*) (void *,\n+                                                    void const *,\n+                                                    void const *));\n+                             void (*p) (void *, size_t, size_t, void *,\n+                                        int (*) (void *, void const *,\n+                                                 void const *)) = qsort_r;\n+                           ]])],\n+          [ac_cv_libctf_qsort_r_signature=BSD],\n+          [ac_cv_libctf_qsort_r_signature=unknown])])])\n+fi\n+\n+case x$ac_cv_libctf_qsort_r_signature in\n+  xGNU)     AC_DEFINE([HAVE_QSORT_R_ARG_LAST], 1,\n+\t     [Whether a qsort_r exists with a void *arg as its last arg.]);;\n+  xBSD)     AC_DEFINE([HAVE_QSORT_R_COMPAR_LAST], 1,\n+\t     [Whether a qsort_r exists with the compar function as its last arg.]);;\n+  *) ac_cv_libctf_qsort_r_signature=unknown;;\n+esac\n+\n+AM_CONDITIONAL(NEED_CTF_QSORT_R, test \"${ac_cv_libctf_qsort_r_signature}\" = unknown)\n \n AC_CONFIG_FILES(Makefile)\n AC_CONFIG_HEADERS(config.h)"
    },
    {
      "sha": "90cd020b781bdd23d43ebd8c721fce46db5e36bb",
      "filename": "libctf/ctf-archive.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-archive.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-archive.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-archive.c?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -169,10 +169,11 @@ ctf_arc_write (const char *file, ctf_file_t ** ctf_files, size_t ctf_file_cnt,\n       modent++;\n     }\n \n-  qsort_r ((ctf_archive_modent_t *) ((char *) archdr\n-\t\t\t\t     + sizeof (struct ctf_archive)),\n-\t   le64toh (archdr->ctfa_nfiles),\n-\t   sizeof (struct ctf_archive_modent), sort_modent_by_name, nametbl);\n+  ctf_qsort_r ((ctf_archive_modent_t *) ((char *) archdr\n+\t\t\t\t\t + sizeof (struct ctf_archive)),\n+\t       le64toh (archdr->ctfa_nfiles),\n+\t       sizeof (struct ctf_archive_modent), sort_modent_by_name,\n+\t       nametbl);\n \n    /* Now the name table.  */\n "
    },
    {
      "sha": "3beed8871224281b33e4df6b94a85345216fa3a2",
      "filename": "libctf/ctf-create.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-create.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-create.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-create.c?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -344,7 +344,7 @@ ctf_update (ctf_file_t *fp)\n     }\n   assert (i == nvars);\n \n-  qsort_r (dvarents, nvars, sizeof (ctf_varent_t), ctf_sort_var, s0);\n+  ctf_qsort_r (dvarents, nvars, sizeof (ctf_varent_t), ctf_sort_var, s0);\n   t += sizeof (ctf_varent_t) * nvars;\n \n   assert (t == (unsigned char *) buf + sizeof (ctf_header_t) + hdr.cth_typeoff);"
    },
    {
      "sha": "d12409e4b608d28a68ff1db4f3c21ee2d2f58fc7",
      "filename": "libctf/ctf-decls.h",
      "status": "modified",
      "additions": 36,
      "deletions": 3,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-decls.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-decls.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-decls.h?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -22,12 +22,45 @@\n \n #include \"config.h\"\n \n-#if !HAVE_DECL_QSORT_R\n #include <stddef.h>\n-void qsort_r (void *base, size_t nmemb, size_t size,\n+#include <stdlib.h>\n+\n+#if HAVE_QSORT_R_ARG_LAST\n+static inline void\n+ctf_qsort_r (void *base, size_t nmemb, size_t size,\n+\t     int (*compar)(const void *, const void *, void *),\n+\t     void *arg)\n+{\n+  qsort_r (base, nmemb, size, compar, arg);\n+}\n+#elif HAVE_QSORT_R_COMPAR_LAST\n+struct ctf_qsort_arg\n+{\n+  int (*compar) (const void *, const void *, void *);\n+  void *arg;\n+};\n+\n+static int\n+ctf_qsort_compar_thunk (void *arg, const void *a, const void *b)\n+{\n+  struct ctf_qsort_arg *qsort_arg = (struct ctf_qsort_arg *) arg;\n+\n+  return qsort_arg->compar (a, b, arg);\n+}\n+\n+static inline void\n+ctf_qsort_r (void *base, size_t nmemb, size_t size,\n+\t     int (*compar)(const void *, const void *, void *),\n+\t     void *arg)\n+{\n+  struct ctf_qsort_arg thunk = { compar, arg };\n+  qsort_r (base, nmemb, size, &thunk, ctf_qsort_compar_thunk);\n+}\n+#else\n+void ctf_qsort_r (void *base, size_t nmemb, size_t size,\n \t      int (*compar)(const void *, const void *, void *),\n \t      void *arg);\n-#endif /* !HAVE_DECL_QSORT_R */\n+#endif\n \n #undef MAX\n #undef MIN"
    },
    {
      "sha": "6cb221d6f54cbe2022303bd3157e87a0d3e21d0a",
      "filename": "libctf/ctf-qsort_r.c",
      "status": "renamed",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-qsort_r.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b22174ff163b828a2069f22353018ca97fc0fb4/libctf/ctf-qsort_r.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-qsort_r.c?ref=6b22174ff163b828a2069f22353018ca97fc0fb4",
      "patch": "@@ -30,7 +30,7 @@\n #include \"ctf-decls.h\"\n \n #ifndef _LIBC\n-# define _quicksort qsort_r\n+# define _quicksort ctf_qsort_r\n # define __compar_d_fn_t compar_d_fn_t\n typedef int (*compar_d_fn_t) (const void *, const void *, void *);\n #endif",
      "previous_filename": "libctf/qsort_r.c"
    }
  ]
}