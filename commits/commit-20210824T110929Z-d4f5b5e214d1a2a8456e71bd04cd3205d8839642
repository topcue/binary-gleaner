{
  "sha": "d4f5b5e214d1a2a8456e71bd04cd3205d8839642",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDRmNWI1ZTIxNGQxYTJhODQ1NmU3MWJkMDRjZDMyMDVkODgzOTY0Mg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-08-19T03:45:06Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-08-24T11:09:29Z"
    },
    "message": "objdump -S test fail on mingw\n\nFAIL: objdump -S\nFAIL: objdump --source-comment\nis seen on mingw for the simple reason that gcc adds a .exe suffix on\nthe output file if not already present.  Fix that, and tidy some objcopy\ntests.\n\n\t* testsuite/lib/binutils-common.exp (exeext): New proc.\n\t* testsuite/binutils-all/objcopy.exp (exe, test_prog): Use it here.\n\t(objcopy_remove_relocations_from_executable): Catch objcopy errors.\n\tOnly run on ELF targets.\n\t* testsuite/binutils-all/objdump.exp (exe): Set variable.\n\t(test_build_id_debuglink, test_objdump_S): Use exe file suffix.",
    "tree": {
      "sha": "6e334c50c2aa1633603a0661b52c32fe25f05bf2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6e334c50c2aa1633603a0661b52c32fe25f05bf2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d4f5b5e214d1a2a8456e71bd04cd3205d8839642",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4f5b5e214d1a2a8456e71bd04cd3205d8839642",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d4f5b5e214d1a2a8456e71bd04cd3205d8839642",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4f5b5e214d1a2a8456e71bd04cd3205d8839642/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ee077885e5d182d0d9fba090f3505f16f640dff7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee077885e5d182d0d9fba090f3505f16f640dff7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ee077885e5d182d0d9fba090f3505f16f640dff7"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 33,
    "deletions": 12
  },
  "files": [
    {
      "sha": "88ed3100ed08330a51a9d24667adac7a79343f24",
      "filename": "binutils/testsuite/binutils-all/objcopy.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4f5b5e214d1a2a8456e71bd04cd3205d8839642/binutils/testsuite/binutils-all/objcopy.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4f5b5e214d1a2a8456e71bd04cd3205d8839642/binutils/testsuite/binutils-all/objcopy.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objcopy.exp?ref=d4f5b5e214d1a2a8456e71bd04cd3205d8839642",
      "patch": "@@ -631,11 +631,8 @@ strip_test_with_saving_a_symbol\n \n # Build a final executable.\n \n-if { [istarget *-*-cygwin] || [istarget *-*-mingw*] } {\n-    set test_prog \"testprog.exe\"\n-} else {\n-    set test_prog \"testprog\"\n-}\n+set exe [exeext]\n+set test_prog \"testprog${exe}\"\n \n proc copy_setup { } {\n     global srcdir\n@@ -1342,6 +1339,13 @@ proc objcopy_remove_relocations_from_executable { } {\n     set out tmpdir/pr23611.out\n \n     set exec_output1 [binutils_run $OBJCOPY \"-R .rela.plt -R .rela.dyn -R .rel.plt -R .rel.dyn $objfile $out\"]\n+\n+    set exec_output1 [prune_warnings $exec_output1]\n+    if ![string equal \"\" $exec_output1] {\n+\tfail $test\n+\treturn\n+    }\n+\n     set exec_output2 [binutils_run $READELF \"-S $out\"]\n     if { [string match \"*.rel.plt*\" $exec_output2] || [string match \"*.rela.plt*\" $exec_output2] || [string match \"*.rel.dyn*\" $exec_output2] || [string match \"*.rela.dyn*\" $exec_output2] } {\n \tfail $test\n@@ -1350,7 +1354,9 @@ proc objcopy_remove_relocations_from_executable { } {\n     pass $test\n }\n \n-objcopy_remove_relocations_from_executable\n+if [is_elf_format] {\n+    objcopy_remove_relocations_from_executable\n+}\n \n run_dump_test \"pr23633\"\n "
    },
    {
      "sha": "0b797f9e9b4c777716d4a5c9f92fb2e4a11efefa",
      "filename": "binutils/testsuite/binutils-all/objdump.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4f5b5e214d1a2a8456e71bd04cd3205d8839642/binutils/testsuite/binutils-all/objdump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4f5b5e214d1a2a8456e71bd04cd3205d8839642/binutils/testsuite/binutils-all/objdump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objdump.exp?ref=d4f5b5e214d1a2a8456e71bd04cd3205d8839642",
      "patch": "@@ -62,6 +62,7 @@ set obj o\n if { [istarget \"*-*-vms\"] } then {\n     set obj obj\n }\n+set exe [exeext]\n \n # The remaining tests require a test file.\n \n@@ -519,6 +520,7 @@ proc test_build_id_debuglink {} {\n     global OBJCOPY\n     global OBJDUMP\n     global CFLAGS_FOR_TARGET\n+    global exe\n     \n     set test \"build-id-debuglink\"\n \n@@ -528,7 +530,7 @@ proc test_build_id_debuglink {} {\n     }\n     set CFLAGS_FOR_TARGET \"-g -Wl,--build-id=0x12345678abcdef01\"\n \n-    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog executable debug] != \"\" } {\n+    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog${exe} executable debug] != \"\" } {\n \tunsupported \"$test (build)\"\n \treturn\n     }\n@@ -539,12 +541,12 @@ proc test_build_id_debuglink {} {\n \tunset CFLAGS_FOR_TARGET\n     }\n \n-    if { [binutils_run $STRIP \"--strip-debug --remove-section=.comment tmpdir/testprog -o tmpdir/testprog.strip\"] != \"\" } {\n+    if { [binutils_run $STRIP \"--strip-debug --remove-section=.comment tmpdir/testprog${exe} -o tmpdir/testprog.strip\"] != \"\" } {\n \tfail \"$test (strip debug info)\"\n \treturn\n     }\n \n-    if { [binutils_run $OBJCOPY \"--only-keep-debug tmpdir/testprog tmpdir/testprog.debug\"] != \"\" } {\n+    if { [binutils_run $OBJCOPY \"--only-keep-debug tmpdir/testprog${exe} tmpdir/testprog.debug\"] != \"\" } {\n \tfail \"$test (create separate debug info file)\"\n \treturn\n     }\n@@ -813,15 +815,16 @@ proc test_objdump_S { } {\n     global subdir\n     global OBJDUMP\n     global OBJDUMPFLAGS\n+    global exe\n     \n     set test \"objdump -S\"\n \n-    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog executable debug] != \"\" } {\n+    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog${exe} executable debug] != \"\" } {\n \tunsupported \"$test (build)\"\n \treturn\n     }\n \n-    set got [binutils_run $OBJDUMP \"$OBJDUMPFLAGS -D -S tmpdir/testprog\"]\n+    set got [binutils_run $OBJDUMP \"$OBJDUMPFLAGS -D -S tmpdir/testprog${exe}\"]\n \n     set want \"static int local = 2\"\n \n@@ -833,7 +836,7 @@ proc test_objdump_S { } {\n \n     set test \"objdump --source-comment\"\n \n-    set got [binutils_run $OBJDUMP \"$OBJDUMPFLAGS --disassemble-all --source-comment=// tmpdir/testprog\"]\n+    set got [binutils_run $OBJDUMP \"$OBJDUMPFLAGS --disassemble-all --source-comment=// tmpdir/testprog${exe}\"]\n \n     set want \"//static int local = 2\"\n "
    },
    {
      "sha": "0419b3b0b93871fda80e9fc1fc3b19a554653209",
      "filename": "binutils/testsuite/lib/binutils-common.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4f5b5e214d1a2a8456e71bd04cd3205d8839642/binutils/testsuite/lib/binutils-common.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4f5b5e214d1a2a8456e71bd04cd3205d8839642/binutils/testsuite/lib/binutils-common.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/lib/binutils-common.exp?ref=d4f5b5e214d1a2a8456e71bd04cd3205d8839642",
      "patch": "@@ -183,6 +183,18 @@ proc is_rela { binary_file } {\n     return 1\n }\n \n+# Return the file name suffix required for executables, if any.\n+#\n+proc exeext {} {\n+    if { [istarget *-*-cygwin*]\n+\t || [istarget *-*-mingw*]\n+\t || [istarget *-*-msdos*]\n+\t || [istarget *-*-*vms*] } {\n+\treturn \".exe\"\n+    }\n+    return \"\"\n+}\n+\n # True if the target matches TARGET, specified as a TCL procedure if\n # in square brackets or as machine triplet otherwise.\n #"
    }
  ]
}