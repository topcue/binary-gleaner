{
  "sha": "dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGM4M2YyZDIwZTk2NGY5YTdmZDlhOTdiYTlkMzk1MGI5MDg3NTJhMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-02T01:36:14Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-03T07:16:24Z"
    },
    "message": "Split relocation defines out of coff/internal.h\n\ninclude/\n\t* coff/internal.h: Delete obsolete relocation defines.  Move used\n\trelocation defines..\n\t* coff/i386.h: ..to here..\n\t* coff/ti.h: ..and here..\n\t* coff/x86_64.h: ..and here..\n\t* coff/z80.h: ..and here..\n\t* coff/z8k.h: ..and here.\nbfd/\n\t* reloc.c: Include x86_64.h rather than internal.h.",
    "tree": {
      "sha": "b2655d6a19d07021558a1151bf85ae70194768a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b2655d6a19d07021558a1151bf85ae70194768a6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca87bad0e90e53de2f6509939c45cd7434329a49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca87bad0e90e53de2f6509939c45cd7434329a49",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca87bad0e90e53de2f6509939c45cd7434329a49"
    }
  ],
  "stats": {
    "total": 247,
    "additions": 97,
    "deletions": 150
  },
  "files": [
    {
      "sha": "0e518ceb34db1d9bd5f63e066028ebc939e187ad",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* reloc.c: Include x86_64.h rather than internal.h.\n+\n 2021-03-02  Nick Clifton  <nickc@redhat.com>\n \n \tPR 27484"
    },
    {
      "sha": "a7547187ebeef370fb8cd29301225e55fd7fcd22",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -51,7 +51,7 @@ SECTION\n #include \"bfdlink.h\"\n #include \"libbfd.h\"\n #include \"bfdver.h\"\n-#include \"coff/internal.h\"\n+#include \"coff/x86_64.h\"\n /*\n DOCDD\n INODE"
    },
    {
      "sha": "7c53c21b9c39165c3129fe3d974c5671d0ba87eb",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/internal.h: Delete obsolete relocation defines.  Move used\n+\trelocation defines..\n+\t* coff/i386.h: ..to here..\n+\t* coff/ti.h: ..and here..\n+\t* coff/x86_64.h: ..and here..\n+\t* coff/z80.h: ..and here..\n+\t* coff/z8k.h: ..and here.\n+\n 2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-api.h (CTF_LINK_SHARE_DUPLICATED): Note that this might"
    },
    {
      "sha": "dd2eda1bd4a2a95dddfc1801119f5b26f3b268e2",
      "filename": "include/coff/i386.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/i386.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/i386.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/i386.h?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -91,3 +91,14 @@ struct external_reloc\n #define RELOC struct external_reloc\n #define RELSZ 10\n \n+/* i386 Relocations.  */\n+\n+#define R_DIR32\t\t 6\n+#define R_IMAGEBASE\t 7\n+#define R_SECREL32\t11\n+#define R_RELBYTE\t15\n+#define R_RELWORD\t16\n+#define R_RELLONG\t17\n+#define R_PCRBYTE\t18\n+#define R_PCRWORD\t19\n+#define R_PCRLONG\t20"
    },
    {
      "sha": "165518135465c2ece1a20aa76afbfb8e03b3e0df",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 0,
      "deletions": 142,
      "changes": 142,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -668,146 +668,4 @@ struct internal_reloc\n   unsigned long r_offset;\t/* Used by Alpha ECOFF, SPARC, others */\n };\n \n-/* X86-64 relocations.  */\n-#define R_AMD64_ABS \t\t 0 /* Reference is absolute, no relocation is necessary.  */\n-#define R_AMD64_DIR64\t\t 1 /* 64-bit address (VA).  */\n-#define R_AMD64_DIR32\t\t 2 /* 32-bit address (VA) R_DIR32.  */\n-#define R_AMD64_IMAGEBASE\t 3 /* 32-bit absolute ref w/o base R_IMAGEBASE.  */\n-#define R_AMD64_PCRLONG\t\t 4 /* 32-bit relative address from byte following reloc R_PCRLONG.  */\n-#define R_AMD64_PCRLONG_1\t 5 /* 32-bit relative address from byte distance 1 from reloc.  */\n-#define R_AMD64_PCRLONG_2\t 6 /* 32-bit relative address from byte distance 2 from reloc.  */\n-#define R_AMD64_PCRLONG_3\t 7 /* 32-bit relative address from byte distance 3 from reloc.  */\n-#define R_AMD64_PCRLONG_4\t 8 /* 32-bit relative address from byte distance 4 from reloc.  */\n-#define R_AMD64_PCRLONG_5\t 9 /* 32-bit relative address from byte distance 5 from reloc.  */\n-#define R_AMD64_SECTION\t\t10 /* Section index.  */\n-#define R_AMD64_SECREL\t\t11 /* 32 bit offset from base of section containing target R_SECREL.  */\n-#define R_AMD64_SECREL7\t\t12 /* 7 bit unsigned offset from base of section containing target.  */\n-#define R_AMD64_TOKEN\t\t13 /* 32 bit metadata token.  */\n-#define R_AMD64_PCRQUAD\t\t14 /* Pseude PC64 relocation - Note: not specified by MS/AMD but need for gas pc-relative 64bit wide relocation generated by ELF.  */\n-\n-/* i386 Relocations.  */\n-\n-#define R_DIR16 \t 1\n-#define R_REL24          5\n-#define R_DIR32 \t 6\n-#define R_IMAGEBASE\t 7\n-#define R_SECREL32\t11\n-#define R_RELBYTE\t15\n-#define R_RELWORD\t16\n-#define R_RELLONG\t17\n-#define R_PCRBYTE\t18\n-#define R_PCRWORD\t19\n-#define R_PCRLONG\t20\n-#define R_PCR24         21\n-#define R_IPRSHORT\t24\n-#define R_IPRLONG\t26\n-#define R_GETSEG\t29\n-#define R_GETPA \t30\n-#define R_TAGWORD\t31\n-#define R_JUMPTARG\t32\t/* strange 29k 00xx00xx reloc */\n-#define R_PARTLS16      32\n-#define R_PARTMS8       33\n-\n-#define R_PCR16L       128\n-#define R_PCR26L       129\n-#define R_VRT16        130\n-#define R_HVRT16       131\n-#define R_LVRT16       132\n-#define R_VRT32        133\n-\n-\n-/* This reloc identifies mov.b instructions with a 16bit absolute\n-   address.  The linker tries to turn insns with this reloc into\n-   an absolute 8-bit address.  */\n-#define R_MOV16B1    \t0x41\n-\n-/* This reloc identifies mov.b instructions which had a 16bit\n-   absolute address which have been shortened into a 8-bit\n-   absolute address.  */\n-#define R_MOV16B2 \t0x42\n-\n-/* This reloc identifies jmp insns with a 16bit target address;\n-   the linker tries to turn these insns into bra insns with\n-   an 8bit pc-relative target.  */\n-#define R_JMP1     \t0x43\n-\n-/* This reloc identifies a bra with an 8-bit pc-relative\n-   target that was formerly a jmp insn with a 16bit target.  */\n-#define R_JMP2 \t\t0x44\n-\n-/* ??? */\n-#define R_RELLONG_NEG  \t0x45\n-\n-/* This reloc identifies jmp insns with a 24bit target address;\n-   the linker tries to turn these insns into bra insns with\n-   an 8bit pc-relative target.  */\n-#define R_JMPL1     \t0x46\n-\n-/* This reloc identifies a bra with an 8-bit pc-relative\n-   target that was formerly a jmp insn with a 24bit target.  */\n-#define R_JMPL2\t\t0x47\n-\n-/* This reloc identifies mov.b instructions with a 24bit absolute\n-   address.  The linker tries to turn insns with this reloc into\n-   an absolute 8-bit address.  */\n-\n-#define R_MOV24B1    \t0x48\n-\n-/* This reloc identifies mov.b instructions which had a 24bit\n-   absolute address which have been shortened into a 8-bit\n-   absolute address.  */\n-#define R_MOV24B2 \t0x49\n-\n-/* An h8300 memory indirect jump/call.  Forces the address of the jump/call\n-   target into the function vector (in page zero), and the address of the\n-   vector entry to be placed in the jump/call instruction.  */\n-#define R_MEM_INDIRECT\t0x4a\n-\n-/* This reloc identifies a 16bit pc-relative branch target which was\n-   shortened into an 8bit pc-relative branch target.  */\n-#define R_PCRWORD_B\t0x4b\n-\n-/* This reloc identifies mov.[wl] instructions with a 32/24 bit\n-   absolute address; the linker may turn this into a mov.[wl]\n-   insn with a 16bit absolute address.  */\n-#define R_MOVL1    \t0x4c\n-\n-/* This reloc identifies mov.[wl] insns which formerly had\n-   a 32/24bit absolute address and now have a 16bit absolute address.  */\n-#define R_MOVL2 \t0x4d\n-\n-/* This reloc identifies a bCC:8 which will have it's condition\n-   inverted and its target redirected to the target of the branch\n-   in the following insn.  */\n-#define R_BCC_INV\t0x4e\n-\n-/* This reloc identifies a jmp instruction that has been deleted.  */\n-#define R_JMP_DEL\t0x4f\n-\n-/* Z8k modes */\n-#define R_IMM16   0x01\t\t/* 16 bit abs */\n-#define R_JR\t  0x02\t\t/* jr  8 bit disp */\n-#define R_IMM4L   0x23\t\t/* low nibble */\n-#define R_IMM8    0x22\t\t/* 8 bit abs */\n-#define R_IMM32   R_RELLONG\t/* 32 bit abs */\n-#define R_CALL    R_DA\t\t/* Absolute address which could be a callr */\n-#define R_JP\t  R_DA\t\t/* Absolute address which could be a jp */\n-#define R_REL16   0x04\t\t/* 16 bit PC rel */\n-#define R_CALLR\t  0x05\t\t/* callr 12 bit disp */\n-#define R_SEG     0x10\t\t/* set if in segmented mode */\n-#define R_IMM4H   0x24\t\t/* high nibble */\n-#define R_DISP7   0x25          /* djnz displacement */\n-\n-/* Z80 modes */\n-#define R_OFF8    0x32\t\t/* 8 bit signed abs, for (i[xy]+d) */\n-#define R_IMM24   0x33          /* 24 bit abs */\n-#define R_IMM16BE 0x3A          /* 16 bit abs, big endian */\n-/* R_JR, R_IMM8, R_IMM16, R_IMM32 - as for Z8k */\n-#define R_BYTE0  0x34\t\t/* first (lowest) 8 bits of multibyte value */\n-#define R_BYTE1  0x35\t\t/* second 8 bits of multibyte value */\n-#define R_BYTE2  0x36\t\t/* third 8 bits of multibyte value */\n-#define R_BYTE3  0x37\t\t/* fourth (highest) 8 bits of multibyte value */\n-#define R_WORD0  0x38\t\t/* lowest 16 bits of 32 or 24 bit value */\n-#define R_WORD1  0x39\t\t/* highest 16 bits of 32 or 24 bit value */\n-\n #endif /* GNU_COFF_INTERNAL_H */"
    },
    {
      "sha": "5d242d12c247de9c4e3808fdf6f3a7d3767b9d80",
      "filename": "include/coff/ti.h",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/ti.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/ti.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/ti.h?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -549,12 +549,20 @@ struct external_reloc\n   do memset (dst->r_reserved, 0, sizeof (dst->r_reserved)); while (0)\n \n /* various relocation types.  */\n-#define R_ABS     0x0000            /* no relocation */\n-#define R_REL13   0x002A            /* 13-bit direct reference (???) */\n-#define R_PARTLS7 0x0028            /* 7 LSBs of an address */\n-#define R_PARTMS9 0x0029            /* 9MSBs of an address */\n-#define R_EXTWORD 0x002B            /* 23-bit direct reference */\n-#define R_EXTWORD16 0x002C          /* 16-bit direct reference to 23-bit addr*/\n-#define R_EXTWORDMS7 0x002D         /* upper 7 bits of 23-bit address */\n+#define R_REL24\t\t 5\n+#define R_RELWORD\t16\n+#define R_RELLONG\t17\n+#define R_PCRWORD\t19\n+#define R_PCR24\t\t21\n+#define R_PARTLS16\t32\n+#define R_PARTMS8\t33\n+\n+#define R_ABS\t\t 0\t/* no relocation */\n+#define R_REL13       0x2A\t/* 13-bit direct reference (???) */\n+#define R_PARTLS7     0x28\t/* 7 LSBs of an address */\n+#define R_PARTMS9     0x29\t/* 9MSBs of an address */\n+#define R_EXTWORD     0x2B\t/* 23-bit direct reference */\n+#define R_EXTWORD16   0x2C\t/* 16-bit direct reference to 23-bit addr*/\n+#define R_EXTWORDMS7  0x2D\t/* upper 7 bits of 23-bit address */\n \n #endif /* COFF_TI_H */"
    },
    {
      "sha": "4d3e6e79177adb437fb9935008eb0b4d34e24a44",
      "filename": "include/coff/x86_64.h",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/x86_64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/x86_64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/x86_64.h?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -75,3 +75,32 @@ struct external_reloc\n \n #define RELOC struct external_reloc\n #define RELSZ 10\n+\n+/* X86-64 relocations.  */\n+#define R_AMD64_ABS \t\t 0 /* Reference is absolute, no relocation is necessary.  */\n+#define R_AMD64_DIR64\t\t 1 /* 64-bit address (VA).  */\n+#define R_AMD64_DIR32\t\t 2 /* 32-bit address (VA) R_DIR32.  */\n+#define R_AMD64_IMAGEBASE\t 3 /* 32-bit absolute ref w/o base R_IMAGEBASE.  */\n+#define R_AMD64_PCRLONG\t\t 4 /* 32-bit relative address from byte following reloc R_PCRLONG.  */\n+#define R_AMD64_PCRLONG_1\t 5 /* 32-bit relative address from byte distance 1 from reloc.  */\n+#define R_AMD64_PCRLONG_2\t 6 /* 32-bit relative address from byte distance 2 from reloc.  */\n+#define R_AMD64_PCRLONG_3\t 7 /* 32-bit relative address from byte distance 3 from reloc.  */\n+#define R_AMD64_PCRLONG_4\t 8 /* 32-bit relative address from byte distance 4 from reloc.  */\n+#define R_AMD64_PCRLONG_5\t 9 /* 32-bit relative address from byte distance 5 from reloc.  */\n+#define R_AMD64_SECTION\t\t10 /* Section index.  */\n+#define R_AMD64_SECREL\t\t11 /* 32 bit offset from base of section containing target R_SECREL.  */\n+#define R_AMD64_SECREL7\t\t12 /* 7 bit unsigned offset from base of section containing target.  */\n+#define R_AMD64_TOKEN\t\t13 /* 32 bit metadata token.  */\n+#define R_AMD64_PCRQUAD\t\t14 /* Pseude PC64 relocation - Note: not specified by MS/AMD but need for gas pc-relative 64bit wide relocation generated by ELF.  */\n+\n+/* i386 Relocations.  */\n+\n+#define R_DIR32\t\t 6\n+#define R_IMAGEBASE\t 7\n+#define R_SECREL32\t11\n+#define R_RELBYTE\t15\n+#define R_RELWORD\t16\n+#define R_RELLONG\t17\n+#define R_PCRBYTE\t18\n+#define R_PCRWORD\t19\n+#define R_PCRLONG\t20"
    },
    {
      "sha": "1ba8e45fea242877cbf5be0f090a7678b2ea482d",
      "filename": "include/coff/z80.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/z80.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/z80.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/z80.h?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -58,3 +58,19 @@ struct external_reloc\n \n #define RELOC struct external_reloc\n #define RELSZ 16\n+\n+/* Z80 relocations.  */\n+#define R_IMM16   0x01\t\t/* 16 bit abs */\n+#define R_JR      0x02\t\t/* jr  8 bit disp */\n+#define R_IMM32   0x11\t\t/* 32 bit abs */\n+#define R_IMM8    0x22\t\t/* 8 bit abs */\n+\n+#define R_OFF8    0x32\t\t/* 8 bit signed abs, for (i[xy]+d) */\n+#define R_IMM24   0x33\t\t/* 24 bit abs */\n+#define R_IMM16BE 0x3A\t\t/* 16 bit abs, big endian */\n+#define R_BYTE0   0x34\t\t/* first (lowest) 8 bits of multibyte value */\n+#define R_BYTE1   0x35\t\t/* second 8 bits of multibyte value */\n+#define R_BYTE2   0x36\t\t/* third 8 bits of multibyte value */\n+#define R_BYTE3   0x37\t\t/* fourth (highest) 8 bits of multibyte value */\n+#define R_WORD0   0x38\t\t/* lowest 16 bits of 32 or 24 bit value */\n+#define R_WORD1   0x39\t\t/* highest 16 bits of 32 or 24 bit value */"
    },
    {
      "sha": "90ac466e4d012cc9b3dfadc839bf673f166e9181",
      "filename": "include/coff/z8k.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/z8k.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc83f2d20e964f9a7fd9a97ba9d3950b908752a1/include/coff/z8k.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/z8k.h?ref=dc83f2d20e964f9a7fd9a97ba9d3950b908752a1",
      "patch": "@@ -47,3 +47,14 @@ struct external_reloc\n #define RELOC struct external_reloc\n #define RELSZ 16\n \n+/* Z8k relocations.  */\n+#define R_IMM16   0x01\t\t/* 16 bit abs */\n+#define R_JR      0x02\t\t/* jr  8 bit disp */\n+#define R_IMM32   0x11\t\t/* 32 bit abs */\n+#define R_IMM8    0x22\t\t/* 8 bit abs */\n+#define R_IMM4L   0x23\t\t/* low nibble */\n+#define R_REL16   0x04\t\t/* 16 bit PC rel */\n+#define R_CALLR   0x05\t\t/* callr 12 bit disp */\n+#define R_SEG     0x10\t\t/* set if in segmented mode */\n+#define R_IMM4H   0x24\t\t/* high nibble */\n+#define R_DISP7   0x25\t\t/* djnz displacement */"
    }
  ]
}