{
  "sha": "3734320dc054bd9f6632607e9e5c901c57450791",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzczNDMyMGRjMDU0YmQ5ZjY2MzI2MDdlOWU1YzkwMWM1NzQ1MDc5MQ==",
  "commit": {
    "author": {
      "name": "Matthew Fortune",
      "email": "matthew.fortune@mips.com",
      "date": "2019-05-14T00:03:19Z"
    },
    "committer": {
      "name": "Faraz Shahbazker",
      "email": "fshahbazker@wavecomp.com",
      "date": "2019-05-21T16:22:28Z"
    },
    "message": "[MIPS] Add generation of PLT entries with compact jumps for MIPS R6\n\nAdd a new option to get the linker to emit PLTs that use compact\nbranches instead of delay slot branches.\n\nbfd/\n\t* elfxx-mips.c (LA25_BC): New macro.\n\t(mips_elf_link_hash_table)<compact_branches>: New field.\n\t(STUB_JALRC): New macro.\n\t(mipsr6_o32_exec_plt0_entry_compact): New array.\n\t(mipsr6_n32_exec_plt0_entry_compact): Likewise.\n\t(mipsr6_n64_exec_plt0_entry_compact): Likewise.\n\t(mipsr6_exec_plt_entry_compact): Likewise.\n\t(mips_elf_create_la25_stub): Use BC instead of J for stubs\n\twhen compact_branches is true.\n\t(_bfd_mips_elf_finish_dynamic_symbol): Choose the compact\n\tPLT for MIPSR6 with compact_branches.  Do not reorder the\n\tcompact branches PLT.  Switch the lazy stub for MIPSR6\n\twith compact_branches to use JALRC.\n\t(mips_finish_exec_plt): Choose the compact PLT0 for MIPSR6\n\twhen compact_branches is true.\n\t(_bfd_mips_elf_compact_branches): New function.\n\t* elfxx-mips.h (_bfd_mips_elf_compact_branches): New prototype.\n\nld/\n\t* emultempl/mipself.em (compact_branches): New static variable.\n\t(mips_create_output_section_statements): Call\n\t_bfd_mips_elf_compact_branches.\n\t(PARSE_AND_LIST_PROLOGUE): Add OPTION_COMPACT_BRANCHES and\n\tOPTION_NO_COMPACT_BRANCHES.\n\t(PARSE_AND_LIST_LONGOPTS): Add compact-branches,\n\tno-compact-branches.\n\t(PARSE_AND_LIST_OPTIONS): Add --compact-branches,\n\t--no-compact-branches.\n\t(PARSE_AND_LIST_ARGS_CASES): Handle the above.\n\t* ld.texinfo: Document --compact-branches, --no-compact-branches.\n\t* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd: New test.\n\t* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd: New test.\n\t* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd: New test.\n\t* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd: New test.\n\t* testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s: New test source.\n\t* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s: New test source.\n\t* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.",
    "tree": {
      "sha": "09ada7b6ef14bf220ce429dbd2d4a0dcd0faa654",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/09ada7b6ef14bf220ce429dbd2d4a0dcd0faa654"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3734320dc054bd9f6632607e9e5c901c57450791",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3734320dc054bd9f6632607e9e5c901c57450791",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3734320dc054bd9f6632607e9e5c901c57450791",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3734320dc054bd9f6632607e9e5c901c57450791/comments",
  "author": null,
  "committer": {
    "login": "farazs-github",
    "id": 57776434,
    "node_id": "MDQ6VXNlcjU3Nzc2NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/57776434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/farazs-github",
    "html_url": "https://github.com/farazs-github",
    "followers_url": "https://api.github.com/users/farazs-github/followers",
    "following_url": "https://api.github.com/users/farazs-github/following{/other_user}",
    "gists_url": "https://api.github.com/users/farazs-github/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/farazs-github/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/farazs-github/subscriptions",
    "organizations_url": "https://api.github.com/users/farazs-github/orgs",
    "repos_url": "https://api.github.com/users/farazs-github/repos",
    "events_url": "https://api.github.com/users/farazs-github/events{/privacy}",
    "received_events_url": "https://api.github.com/users/farazs-github/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6467207116c66ff2c58f8bc35cb15b2596f5c457",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6467207116c66ff2c58f8bc35cb15b2596f5c457",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6467207116c66ff2c58f8bc35cb15b2596f5c457"
    }
  ],
  "stats": {
    "total": 388,
    "additions": 374,
    "deletions": 14
  },
  "files": [
    {
      "sha": "deca7784d398f224afc62667f089bed1beceecfa",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -1,3 +1,24 @@\n+2019-05-21  Matthew Fortune  <matthew.fortune@mips.com>\n+\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* elfxx-mips.c (LA25_BC): New macro.\n+\t(mips_elf_link_hash_table)<compact_branches>: New field.\n+\t(STUB_JALRC): New macro.\n+\t(mipsr6_o32_exec_plt0_entry_compact): New array.\n+\t(mipsr6_n32_exec_plt0_entry_compact): Likewise.\n+\t(mipsr6_n64_exec_plt0_entry_compact): Likewise.\n+\t(mipsr6_exec_plt_entry_compact): Likewise.\n+\t(mips_elf_create_la25_stub): Use BC instead of J for stubs\n+\twhen compact_branches is true.\n+\t(_bfd_mips_elf_finish_dynamic_symbol): Choose the compact\n+\tPLT for MIPSR6 with compact_branches.  Do not reorder the\n+\tcompact branches PLT.  Switch the lazy stub for MIPSR6\n+\twith compact_branches to use JALRC.\n+\t(mips_finish_exec_plt): Choose the compact PLT0 for MIPSR6\n+\twhen compact_branches is true.\n+\t(_bfd_mips_elf_compact_branches): New function.\n+\t* elfxx-mips.h (_bfd_mips_elf_compact_branches): New prototype.\n+\n 2019-05-21  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR ld/24373"
    },
    {
      "sha": "8c1ad72aa8388362a5135bf2e8b1436a08265344",
      "filename": "bfd/elfxx-mips.c",
      "status": "modified",
      "additions": 115,
      "deletions": 12,
      "changes": 127,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/bfd/elfxx-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/bfd/elfxx-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-mips.c?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -292,6 +292,7 @@ struct mips_elf_la25_stub {\n \n #define LA25_LUI(VAL) (0x3c190000 | (VAL))\t/* lui t9,VAL */\n #define LA25_J(VAL) (0x08000000 | (((VAL) >> 2) & 0x3ffffff)) /* j VAL */\n+#define LA25_BC(VAL) (0xc8000000 | (((VAL) >> 2) & 0x3ffffff)) /* bc VAL */\n #define LA25_ADDIU(VAL) (0x27390000 | (VAL))\t/* addiu t9,t9,VAL */\n #define LA25_LUI_MICROMIPS(VAL)\t\t\t\t\t\t\\\n   (0x41b90000 | (VAL))\t\t\t\t/* lui t9,VAL */\n@@ -449,6 +450,9 @@ struct mips_elf_link_hash_table\n   /* True if we suppress checks for invalid branches between ISA modes.  */\n   bfd_boolean ignore_branch_isa;\n \n+  /* True if we are targetting R6 compact branches.  */\n+  bfd_boolean compact_branches;\n+\n   /* True if we're generating code for VxWorks.  */\n   bfd_boolean is_vxworks;\n \n@@ -920,6 +924,7 @@ static bfd *reldyn_sorting_bfd;\n #define STUB_MOVE 0x03e07825\t\t\t/* or t7,ra,zero */\n #define STUB_LUI(VAL) (0x3c180000 + (VAL))\t/* lui t8,VAL */\n #define STUB_JALR 0x0320f809\t\t\t/* jalr ra,t9 */\n+#define STUB_JALRC 0xf8190000\t\t\t/* jalrc ra,t9 */\n #define STUB_ORI(VAL) (0x37180000 + (VAL))\t/* ori t8,t8,VAL */\n #define STUB_LI16U(VAL) (0x34180000 + (VAL))\t/* ori t8,zero,VAL unsigned */\n #define STUB_LI16S(abfd, VAL)\t\t\t\t\t\t\\\n@@ -1036,6 +1041,20 @@ static const bfd_vma mips_o32_exec_plt0_entry[] =\n   0x2718fffe\t/* subu $24, $24, 2\t\t\t\t\t*/\n };\n \n+/* The format of the first PLT entry in an O32 executable using compact\n+   jumps.  */\n+static const bfd_vma mipsr6_o32_exec_plt0_entry_compact[] =\n+{\n+  0x3c1c0000,\t/* lui $28, %hi(&GOTPLT[0])\t\t\t\t*/\n+  0x8f990000,\t/* lw $25, %lo(&GOTPLT[0])($28)\t\t\t\t*/\n+  0x279c0000,\t/* addiu $28, $28, %lo(&GOTPLT[0])\t\t\t*/\n+  0x031cc023,\t/* subu $24, $24, $28\t\t\t\t\t*/\n+  0x03e07821,\t/* move $15, $31\t# 32-bit move (addu)\t\t*/\n+  0x0018c082,\t/* srl $24, $24, 2\t\t\t\t\t*/\n+  0x2718fffe,\t/* subu $24, $24, 2\t\t\t\t\t*/\n+  0xf8190000\t/* jalrc $25\t\t\t\t\t\t*/\n+};\n+\n /* The format of the first PLT entry in an N32 executable.  Different\n    because gp ($28) is not available; we use t2 ($14) instead.  */\n static const bfd_vma mips_n32_exec_plt0_entry[] =\n@@ -1050,6 +1069,21 @@ static const bfd_vma mips_n32_exec_plt0_entry[] =\n   0x2718fffe\t/* subu $24, $24, 2\t\t\t\t\t*/\n };\n \n+/* The format of the first PLT entry in an N32 executable using compact\n+   jumps.  Different because gp ($28) is not available; we use t2 ($14)\n+   instead.  */\n+static const bfd_vma mipsr6_n32_exec_plt0_entry_compact[] =\n+{\n+  0x3c0e0000,\t/* lui $14, %hi(&GOTPLT[0])\t\t\t\t*/\n+  0x8dd90000,\t/* lw $25, %lo(&GOTPLT[0])($14)\t\t\t\t*/\n+  0x25ce0000,\t/* addiu $14, $14, %lo(&GOTPLT[0])\t\t\t*/\n+  0x030ec023,\t/* subu $24, $24, $14\t\t\t\t\t*/\n+  0x03e07821,\t/* move $15, $31\t# 32-bit move (addu)\t\t*/\n+  0x0018c082,\t/* srl $24, $24, 2\t\t\t\t\t*/\n+  0x2718fffe,\t/* subu $24, $24, 2\t\t\t\t\t*/\n+  0xf8190000\t/* jalrc $25\t\t\t\t\t\t*/\n+};\n+\n /* The format of the first PLT entry in an N64 executable.  Different\n    from N32 because of the increased size of GOT entries.  */\n static const bfd_vma mips_n64_exec_plt0_entry[] =\n@@ -1064,6 +1098,22 @@ static const bfd_vma mips_n64_exec_plt0_entry[] =\n   0x2718fffe\t/* subu $24, $24, 2\t\t\t\t\t*/\n };\n \n+/* The format of the first PLT entry in an N64 executable using compact\n+   jumps.  Different from N32 because of the increased size of GOT\n+   entries.  */\n+static const bfd_vma mipsr6_n64_exec_plt0_entry_compact[] =\n+{\n+  0x3c0e0000,\t/* lui $14, %hi(&GOTPLT[0])\t\t\t\t*/\n+  0xddd90000,\t/* ld $25, %lo(&GOTPLT[0])($14)\t\t\t\t*/\n+  0x25ce0000,\t/* addiu $14, $14, %lo(&GOTPLT[0])\t\t\t*/\n+  0x030ec023,\t/* subu $24, $24, $14\t\t\t\t\t*/\n+  0x03e0782d,\t/* move $15, $31\t# 64-bit move (daddu)\t\t*/\n+  0x0018c0c2,\t/* srl $24, $24, 3\t\t\t\t\t*/\n+  0x2718fffe,\t/* subu $24, $24, 2\t\t\t\t\t*/\n+  0xf8190000\t/* jalrc $25\t\t\t\t\t\t*/\n+};\n+\n+\n /* The format of the microMIPS first PLT entry in an O32 executable.\n    We rely on v0 ($2) rather than t8 ($24) to contain the address\n    of the GOTPLT entry handled, so this stub may only be used when\n@@ -1106,9 +1156,6 @@ static const bfd_vma mips_exec_plt_entry[] =\n   0x03200008\t/* jr $25\t\t\t\t\t*/\n };\n \n-/* In the following PLT entry the JR and ADDIU instructions will\n-   be swapped in _bfd_mips_elf_finish_dynamic_symbol because\n-   LOAD_INTERLOCKS_P will be true for MIPS R6.  */\n static const bfd_vma mipsr6_exec_plt_entry[] =\n {\n   0x3c0f0000,\t/* lui $15, %hi(.got.plt entry)\t\t\t*/\n@@ -1117,6 +1164,14 @@ static const bfd_vma mipsr6_exec_plt_entry[] =\n   0x03200009\t/* jr $25\t\t\t\t\t*/\n };\n \n+static const bfd_vma mipsr6_exec_plt_entry_compact[] =\n+{\n+  0x3c0f0000,\t/* lui $15, %hi(.got.plt entry)\t\t\t*/\n+  0x01f90000,\t/* l[wd] $25, %lo(.got.plt entry)($15)\t\t*/\n+  0x25f80000,\t/* addiu $24, $15, %lo(.got.plt entry)\t\t*/\n+  0xd8190000\t/* jic $25, 0\t\t\t\t\t*/\n+};\n+\n /* The format of subsequent MIPS16 o32 PLT entries.  We use v0 ($2)\n    and v1 ($3) as temporaries because t8 ($24) and t9 ($25) are not\n    directly addressable.  */\n@@ -10604,6 +10659,8 @@ mips_elf_create_la25_stub (void **slot, void *data)\n   asection *s;\n   bfd_byte *loc;\n   bfd_vma offset, target, target_high, target_low;\n+  bfd_vma branch_pc;\n+  bfd_signed_vma pcrel_offset = 0;\n \n   stub = (struct mips_elf_la25_stub *) *slot;\n   hti = (struct mips_htab_traverse_info *) data;\n@@ -10627,13 +10684,25 @@ mips_elf_create_la25_stub (void **slot, void *data)\n   /* Work out where in the section this stub should go.  */\n   offset = stub->offset;\n \n+  /* We add 8 here to account for the LUI/ADDIU instructions\n+     before the branch instruction.  This cannot be moved down to\n+     where pcrel_offset is calculated as 's' is updated in\n+     mips_elf_get_la25_target.  */\n+  branch_pc = s->output_section->vma + s->output_offset + offset + 8;\n+\n   /* Work out the target address.  */\n   target = mips_elf_get_la25_target (stub, &s);\n   target += s->output_section->vma + s->output_offset;\n \n   target_high = ((target + 0x8000) >> 16) & 0xffff;\n   target_low = (target & 0xffff);\n \n+  /* Calculate the PC of the compact branch instruction (for the case where\n+     compact branches are used for either microMIPSR6 or MIPSR6 with\n+     compact branches.  Add 4-bytes to account for BC using the PC of the\n+     next instruction as the base.  */\n+  pcrel_offset = target - (branch_pc + 4);\n+\n   if (stub->stub_section != htab->strampoline)\n     {\n       /* This is a simple LUI/ADDIU stub.  Zero out the beginning\n@@ -10672,8 +10741,16 @@ mips_elf_create_la25_stub (void **slot, void *data)\n       else\n \t{\n \t  bfd_put_32 (hti->output_bfd, LA25_LUI (target_high), loc);\n-\t  bfd_put_32 (hti->output_bfd, LA25_J (target), loc + 4);\n-\t  bfd_put_32 (hti->output_bfd, LA25_ADDIU (target_low), loc + 8);\n+\t  if (MIPSR6_P (hti->output_bfd) && htab->compact_branches)\n+\t    {\n+\t      bfd_put_32 (hti->output_bfd, LA25_ADDIU (target_low), loc + 4);\n+\t      bfd_put_32 (hti->output_bfd, LA25_BC (pcrel_offset), loc + 8);\n+\t    }\n+\t  else\n+\t    {\n+\t      bfd_put_32 (hti->output_bfd, LA25_J (target), loc + 4);\n+\t      bfd_put_32 (hti->output_bfd, LA25_ADDIU (target_low), loc + 8);\n+\t    }\n \t  bfd_put_32 (hti->output_bfd, 0, loc + 12);\n \t}\n     }\n@@ -10830,14 +10907,16 @@ _bfd_mips_elf_finish_dynamic_symbol (bfd *output_bfd,\n \t  /* Fill in the PLT entry itself.  */\n \n \t  if (MIPSR6_P (output_bfd))\n-\t    plt_entry = mipsr6_exec_plt_entry;\n+\t    plt_entry = htab->compact_branches ? mipsr6_exec_plt_entry_compact\n+\t\t\t\t\t       : mipsr6_exec_plt_entry;\n \t  else\n \t    plt_entry = mips_exec_plt_entry;\n \t  bfd_put_32 (output_bfd, plt_entry[0] | got_address_high, loc);\n \t  bfd_put_32 (output_bfd, plt_entry[1] | got_address_low | load,\n \t\t      loc + 4);\n \n-\t  if (! LOAD_INTERLOCKS_P (output_bfd))\n+\t  if (! LOAD_INTERLOCKS_P (output_bfd)\n+\t      || (MIPSR6_P (output_bfd) && htab->compact_branches))\n \t    {\n \t      bfd_put_32 (output_bfd, plt_entry[2] | got_address_low, loc + 8);\n \t      bfd_put_32 (output_bfd, plt_entry[3], loc + 12);\n@@ -11041,8 +11120,12 @@ _bfd_mips_elf_finish_dynamic_symbol (bfd *output_bfd,\n \t\t\t  stub + idx);\n \t      idx += 4;\n \t    }\n-\t  bfd_put_32 (output_bfd, STUB_JALR, stub + idx);\n-\t  idx += 4;\n+\n+\t  if (!(MIPSR6_P (output_bfd) && htab->compact_branches))\n+\t    {\n+\t      bfd_put_32 (output_bfd, STUB_JALR, stub + idx);\n+\t      idx += 4;\n+\t    }\n \n \t  /* If a large stub is not required and sign extension is not a\n \t     problem, then use legacy code in the stub.  */\n@@ -11055,6 +11138,10 @@ _bfd_mips_elf_finish_dynamic_symbol (bfd *output_bfd,\n \t  else\n \t    bfd_put_32 (output_bfd, STUB_LI16S (output_bfd, h->dynindx),\n \t\t\tstub + idx);\n+\t  idx += 4;\n+\n+\t  if (MIPSR6_P (output_bfd) && htab->compact_branches)\n+\t    bfd_put_32 (output_bfd, STUB_JALRC, stub + idx);\n \t}\n \n       BFD_ASSERT (h->plt.plist->stub_offset <= htab->sstubs->size);\n@@ -11428,11 +11515,17 @@ mips_finish_exec_plt (bfd *output_bfd, struct bfd_link_info *info)\n   BFD_ASSERT (htab != NULL);\n \n   if (ABI_64_P (output_bfd))\n-    plt_entry = mips_n64_exec_plt0_entry;\n+    plt_entry = (htab->compact_branches\n+\t\t ? mipsr6_n64_exec_plt0_entry_compact\n+\t\t : mips_n64_exec_plt0_entry);\n   else if (ABI_N32_P (output_bfd))\n-    plt_entry = mips_n32_exec_plt0_entry;\n+    plt_entry = (htab->compact_branches\n+\t\t ? mipsr6_n32_exec_plt0_entry_compact\n+\t\t : mips_n32_exec_plt0_entry);\n   else if (!htab->plt_header_is_comp)\n-    plt_entry = mips_o32_exec_plt0_entry;\n+    plt_entry = (htab->compact_branches\n+\t\t ? mipsr6_o32_exec_plt0_entry_compact\n+\t\t : mips_o32_exec_plt0_entry);\n   else if (htab->insn32)\n     plt_entry = micromips_insn32_o32_exec_plt0_entry;\n   else\n@@ -14190,6 +14283,16 @@ _bfd_mips_elf_linker_flags (struct bfd_link_info *info, bfd_boolean insn32,\n   mips_elf_hash_table (info)->ignore_branch_isa = ignore_branch_isa;\n   mips_elf_hash_table (info)->gnu_target = gnu_target;\n }\n+\n+/* A function that the linker calls to enable use of compact branches in\n+   linker generated code for MIPSR6.  */\n+\n+void\n+_bfd_mips_elf_compact_branches (struct bfd_link_info *info, bfd_boolean on)\n+{\n+  mips_elf_hash_table (info)->compact_branches = on;\n+}\n+\n \f\n /* Structure for saying that BFD machine EXTENSION extends BASE.  */\n "
    },
    {
      "sha": "acd9d7913faec0344f39e0ccc09f9ceb25f8316f",
      "filename": "bfd/elfxx-mips.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/bfd/elfxx-mips.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/bfd/elfxx-mips.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-mips.h?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -150,6 +150,8 @@ extern void _bfd_mips_elf_use_plts_and_copy_relocs\n   (struct bfd_link_info *);\n extern void _bfd_mips_elf_linker_flags\n   (struct bfd_link_info *, bfd_boolean, bfd_boolean, bfd_boolean);\n+extern void _bfd_mips_elf_compact_branches\n+  (struct bfd_link_info *, bfd_boolean);\n extern bfd_boolean _bfd_mips_elf_init_stubs\n   (struct bfd_link_info *,\n    asection *(*) (const char *, asection *, asection *));"
    },
    {
      "sha": "6896a72be41eb04a595bef2e3a0d989ff95b3567",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -1,3 +1,25 @@\n+2019-05-21  Matthew Fortune  <matthew.fortune@mips.com>\n+\t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n+\t* emultempl/mipself.em (compact_branches): New static variable.\n+\t(mips_create_output_section_statements): Call\n+\t_bfd_mips_elf_compact_branches.\n+\t(PARSE_AND_LIST_PROLOGUE): Add OPTION_COMPACT_BRANCHES and\n+\tOPTION_NO_COMPACT_BRANCHES.\n+\t(PARSE_AND_LIST_LONGOPTS): Add compact-branches,\n+\tno-compact-branches.\n+\t(PARSE_AND_LIST_OPTIONS): Add --compact-branches,\n+\t--no-compact-branches.\n+\t(PARSE_AND_LIST_ARGS_CASES): Handle the above.\n+\t* ld.texinfo: Document --compact-branches, --no-compact-branches.\n+\t* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd: New test.\n+\t* testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd: New test.\n+\t* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd: New test.\n+\t* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd: New test.\n+\t* testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s: New test source.\n+\t* testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s: New test source.\n+\t* testsuite/ld-mips-elf/mips-elf.exp: Run the new tests.\n+\n 2019-05-21  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* testsuite/ld-arm/arm-elf.exp: Add tests"
    },
    {
      "sha": "ec908d738dce2518ca45f798ecdb6f58099b80fe",
      "filename": "ld/emultempl/mipself.em",
      "status": "modified",
      "additions": 24,
      "deletions": 2,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/emultempl/mipself.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/emultempl/mipself.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/mipself.em?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -44,6 +44,7 @@ static bfd *stub_bfd;\n \n static bfd_boolean insn32;\n static bfd_boolean ignore_branch_isa;\n+static bfd_boolean compact_branches;\n \n static void\n mips_after_parse (void)\n@@ -216,7 +217,10 @@ mips_create_output_section_statements (void)\n \t\t\t\t${gnu_target});\n \n   if (is_mips_elf (link_info.output_bfd))\n-    _bfd_mips_elf_init_stubs (&link_info, mips_add_stub_section);\n+    {\n+      _bfd_mips_elf_compact_branches (&link_info, compact_branches);\n+      _bfd_mips_elf_init_stubs (&link_info, mips_add_stub_section);\n+    }\n }\n \n /* This is called after we have merged the private data of the input bfds.  */\n@@ -269,7 +273,9 @@ enum\n     OPTION_INSN32 = 301,\n     OPTION_NO_INSN32,\n     OPTION_IGNORE_BRANCH_ISA,\n-    OPTION_NO_IGNORE_BRANCH_ISA\n+    OPTION_NO_IGNORE_BRANCH_ISA,\n+    OPTION_COMPACT_BRANCHES,\n+    OPTION_NO_COMPACT_BRANCHES\n   };\n '\n \n@@ -278,6 +284,8 @@ PARSE_AND_LIST_LONGOPTS='\n   { \"no-insn32\", no_argument, NULL, OPTION_NO_INSN32 },\n   { \"ignore-branch-isa\", no_argument, NULL, OPTION_IGNORE_BRANCH_ISA },\n   { \"no-ignore-branch-isa\", no_argument, NULL, OPTION_NO_IGNORE_BRANCH_ISA },\n+  { \"compact-branches\", no_argument, NULL, OPTION_COMPACT_BRANCHES },\n+  { \"no-compact-branches\", no_argument, NULL, OPTION_NO_COMPACT_BRANCHES },\n '\n \n PARSE_AND_LIST_OPTIONS='\n@@ -295,6 +303,12 @@ PARSE_AND_LIST_OPTIONS='\n   --no-ignore-branch-isa      Reject invalid branch relocations requiring\\n\\\n                               an ISA mode switch\\n\"\n \t\t   ));\n+  fprintf (file, _(\"\\\n+  --compact-branches          Generate compact branches/jumps for MIPS R6\\n\"\n+\t\t   ));\n+  fprintf (file, _(\"\\\n+  --no-compact-branches       Generate delay slot branches/jumps for MIPS R6\\n\"\n+\t\t   ));\n '\n \n PARSE_AND_LIST_ARGS_CASES='\n@@ -313,6 +327,14 @@ PARSE_AND_LIST_ARGS_CASES='\n     case OPTION_NO_IGNORE_BRANCH_ISA:\n       ignore_branch_isa = FALSE;\n       break;\n+\n+    case OPTION_COMPACT_BRANCHES:\n+      compact_branches = TRUE;\n+      break;\n+\n+    case OPTION_NO_COMPACT_BRANCHES:\n+      compact_branches = FALSE;\n+      break;\n '\n \n LDEMUL_AFTER_PARSE=mips_after_parse"
    },
    {
      "sha": "671a2a5dce74461d42eacc1c459f510a925679c9",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -3197,6 +3197,13 @@ calculated.  By default or if @samp{--no-ignore-branch-isa} is used\n a check is made causing the loss of an ISA mode transition to produce\n an error.\n \n+@kindex --compact-branches\n+@item --compact-branches\n+@kindex --no-compact-branches\n+@item --compact-branches\n+These options control the generation of compact instructions by the linker\n+in the PLT entries for MIPS R6.\n+\n @end table\n \n @c man end"
    },
    {
      "sha": "cbbd9add6afec0bd8638871cc09e6a8d7c7b10b3",
      "filename": "ld/testsuite/ld-mips-elf/mips-elf.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/mips-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/mips-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/mips-elf.exp?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -523,6 +523,12 @@ if { $linux_gnu } {\n \t {{objdump -dr pic-and-nonpic-1.dd}\n \t  {readelf --symbols pic-and-nonpic-1.nd}}\n \t \"pic-and-nonpic-1-static1.o\"}\n+\t{\"PIC and non-PIC test 1 R6 compact branches (static 1)\"\n+\t \"-melf32btsmip -Tpic-and-nonpic-1.ld --compact-branches\" \"\"\n+\t \"-32 -EB -mips32r6\" {pic-and-nonpic-1a-r6.s pic-and-nonpic-1b.s}\n+\t {{objdump -dr pic-and-nonpic-1-r6.dd}\n+\t  {readelf --symbols pic-and-nonpic-1-r6.nd}}\n+\t \"pic-and-nonpic-1-r6-static1.o\"}\n \t{\"PIC and non-PIC test 1 (static 2)\"\n \t \"-melf32btsmip -Tpic-and-nonpic-1.ld tmpdir/pic-and-nonpic-1-rel.o\" \"\"\n \t \"\" {}\n@@ -586,6 +592,13 @@ if { $linux_gnu } {\n \t  {readelf --symbols pic-and-nonpic-3b.nd}\n \t  {readelf -d pic-and-nonpic-3b.ad}}\n \t \"pic-and-nonpic-3b\"}\n+\t{\"PIC and non-PIC test 3 R6 compact branches (shared library)\"\n+\t \"-melf32btsmip -shared --compact-branches -Tpic-and-nonpic-3a.ld\" \"\"\n+\t \"-32 -EB -mips32r6\" {pic-and-nonpic-3a-r6.s}\n+\t {{readelf --segments pic-and-nonpic-3a.sd}\n+\t  {readelf -A pic-and-nonpic-3a-r6.gd}\n+\t  {objdump -dr pic-and-nonpic-3a-r6.dd}}\n+\t \"pic-and-nonpic-3a-r6.so\"}\n     }\n     run_dump_test_o32 \"pic-and-nonpic-3-error\" {noarch {as -EB} {ld -EB}}\n     run_ld_link_tests {"
    },
    {
      "sha": "86ad7a9a30252ed2e5475ca144ecbe6564218040",
      "filename": "ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.dd?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -0,0 +1,50 @@\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+00041000 <\\.pic\\.f3>:\n+   41000:\t3c190004 \tlui\tt9,0x4\n+   41004:\t27391060 \taddiu\tt9,t9,4192\n+   41008:\tc8000015 \tbc\t41060 <f3>\n+   4100c:\t00000000 \tnop\n+\n+00041010 <\\.pic\\.f2>:\n+   41010:\t3c190004 \tlui\tt9,0x4\n+   41014:\t2739104c \taddiu\tt9,t9,4172\n+   41018:\tc800000c \tbc\t4104c <f2>\n+\t\\.\\.\\.\n+\n+00041028 <\\.pic\\.f1>:\n+   41028:\t3c190004 \tlui\tt9,0x4\n+   4102c:\t27391030 \taddiu\tt9,t9,4144\n+\n+00041030 <f1>:\n+   41030:\t3c1c0002 \tlui\tgp,0x2\n+   41034:\t279c6fd0 \taddiu\tgp,gp,28624\n+   41038:\t0399e021 \taddu\tgp,gp,t9\n+   4103c:\t0c010418 \tjal\t41060 <f3>\n+   41040:\t00000000 \tnop\n+   41044:\t03e00009 \tjr\tra\n+   41048:\t00000000 \tnop\n+\n+0004104c <f2>:\n+   4104c:\t3c1c0002 \tlui\tgp,0x2\n+   41050:\t279c6fb4 \taddiu\tgp,gp,28596\n+   41054:\t0399e021 \taddu\tgp,gp,t9\n+   41058:\t03e00009 \tjr\tra\n+   4105c:\t00000000 \tnop\n+\n+00041060 <f3>:\n+   41060:\t00021400 \tsll\tv0,v0,0x10\n+   41064:\t00431021 \taddu\tv0,v0,v1\n+\t\\.\\.\\.\n+\n+00041070 <__start>:\n+   41070:\t0c01040a \tjal\t41028 <\\.pic\\.f1>\n+   41074:\t00000000 \tnop\n+   41078:\t0c010404 \tjal\t41010 <\\.pic\\.f2>\n+   4107c:\t00000000 \tnop\n+   41080:\t0c010400 \tjal\t41000 <\\.pic\\.f3>\n+   41084:\t00000000 \tnop\n+\t\\.\\.\\."
    },
    {
      "sha": "5264505844b2b8e8993057bba15864de04d22f6b",
      "filename": "ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.nd?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -0,0 +1,9 @@\n+#...\n+.*: 00041000 +16 +FUNC +LOCAL +DEFAULT .* \\.pic\\.f3\n+.*: 00068000 +0 +NOTYPE +LOCAL +DEFAULT +ABS _gp\n+.*: 00041028 +8 +FUNC +LOCAL +DEFAULT .* \\.pic\\.f1\n+.*: 00041010 +16 +FUNC +LOCAL +DEFAULT .* \\.pic\\.f2\n+.*: 00041060 +8 +FUNC  +GLOBAL +DEFAULT .* f3\n+.*: 00041070 +24 +FUNC +GLOBAL +DEFAULT .* __start\n+.*: 0004104c +20 +FUNC +GLOBAL +DEFAULT .* f2\n+.*: 00041030 +28 +FUNC +GLOBAL +DEFAULT .* f1"
    },
    {
      "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "filename": "ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.s",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/pic-and-nonpic-1-r6.s?ref=3734320dc054bd9f6632607e9e5c901c57450791"
    },
    {
      "sha": "340004bca424886f78b2f44538514f3568aaa9fa",
      "filename": "ld/testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/pic-and-nonpic-1a-r6.s?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -0,0 +1,28 @@\n+\t.abicalls\n+\t.global\tf1\n+\t.global\tf2\n+\t.global\tf3\n+\t.ent\tf1\n+f1:\n+\t.set\tnoreorder\n+\t.cpload\t$25\n+\t.set\treorder\n+\t.option\tpic0\n+\tjal\tf3\n+\t.option\tpic2\n+\tjr\t$31\n+\t.end\tf1\n+\n+\t.ent\tf2\n+f2:\n+\t.set\tnoreorder\n+\t.cpload\t$25\n+\t.set\treorder\n+\tjr\t$31\n+\t.end\tf2\n+\n+\t.ent\tf3\n+f3:\n+\tsll\t$2,16\n+\taddu\t$2,$2,$3\n+\t.end\tf3"
    },
    {
      "sha": "80dac37cb432f53482b96e53028738fc7c3d1030",
      "filename": "ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.dd?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -0,0 +1,36 @@\n+# GOT layout:\n+#\n+# -32752: lazy resolution function\n+# -32748: reserved for module pointer\n+# -32744: the GOT page entry\n+# -32740: foo's GOT entry\n+# -32736: ext's GOT entry\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+00000800 <foo>:\n+ 800:\t3c1c0001 \tlui\tgp,0x1\n+ 804:\t279c7bf0 \taddiu\tgp,gp,31728\n+ 808:\t0399e021 \taddu\tgp,gp,t9\n+ 80c:\t8f99801c \tlw\tt9,-32740\\(gp\\)\n+ 810:\t8f828018 \tlw\tv0,-32744\\(gp\\)\n+ 814:\t24420000 \taddiu\tv0,v0,0\n+ 818:\td8190000 \tjrc\tt9\n+\n+0000081c <bar>:\n+ 81c:\t3c1c0001 \tlui\tgp,0x1\n+ 820:\t279c7bd4 \taddiu\tgp,gp,31700\n+ 824:\t0399e021 \taddu\tgp,gp,t9\n+ 828:\t8f998020 \tlw\tt9,-32736\\(gp\\)\n+ 82c:\td8190000 \tjrc\tt9\n+#...\n+Disassembly of section \\.MIPS\\.stubs:\n+\n+00000c00 <_MIPS_STUBS_>:\n+ c00:\t8f998010 \tlw\tt9,-32752\\(gp\\)\n+ c04:\t03e07825 \tmove\tt7,ra\n+ c08:\t2418[0-9a-f]+ \tli\tt8,[0-9]+\n+ c0c:\tf8190000 \tjalrc\tt9\n+\t\\.\\.\\."
    },
    {
      "sha": "af046ee9d0e6a950a2732e270e0e45d815a1f4d9",
      "filename": "ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.gd?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -0,0 +1,21 @@\n+\n+Attribute Section: gnu\n+File Attributes\n+  Tag_GNU_MIPS_ABI_FP: Hard float \\(32-bit CPU, 64-bit FPU\\)\n+\n+Primary GOT:\n+ Canonical gp value: 000183f0\n+\n+ Reserved entries:\n+   Address     Access  Initial Purpose\n+  00010400 -32752\\(gp\\) 00000000 Lazy resolver\n+  00010404 -32748\\(gp\\) 80000000 Module pointer \\(GNU extension\\)\n+\n+ Local entries:\n+   Address     Access  Initial\n+  00010408 -32744\\(gp\\) 00010000\n+\n+ Global entries:\n+   Address     Access  Initial Sym\\.Val\\. Type    Ndx Name\n+  0001040c -32740\\(gp\\) 00000800 00000800 FUNC      6 foo\n+  00010410 -32736\\(gp\\) 00000c00 00000c00 FUNC    UND ext"
    },
    {
      "sha": "fb8eb813dbb6d5cb64e744cf8182f4fc80278fff",
      "filename": "ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3734320dc054bd9f6632607e9e5c901c57450791/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/pic-and-nonpic-3a-r6.s?ref=3734320dc054bd9f6632607e9e5c901c57450791",
      "patch": "@@ -0,0 +1,26 @@\n+\t.abicalls\n+\t.set\tnomips16\n+\t.global\tfoo\n+\t.ent\tfoo\n+foo:\n+\t.set noreorder\n+\t.cpload\t$25\n+\t.set reorder\n+\tlw\t$25,%call16(foo)($28)\n+\tlw\t$2,%got(data)($28)\n+\taddiu\t$2,$2,%lo(data)\n+\tjrc\t$25\n+\t.end\tfoo\n+\n+\t.global\tbar\n+\t.ent\tbar\n+bar:\n+\t.set noreorder\n+\t.cpload\t$25\n+\t.set reorder\n+\tlw\t$25,%call16(ext)($28)\n+\tjrc\t$25\n+\t.end\tbar\n+\n+\t.data\n+data:\t.word\t0x12345678"
    }
  ]
}