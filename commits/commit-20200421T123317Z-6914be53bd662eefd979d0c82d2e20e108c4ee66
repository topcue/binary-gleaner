{
  "sha": "6914be53bd662eefd979d0c82d2e20e108c4ee66",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjkxNGJlNTNiZDY2MmVlZmQ5NzlkMGM4MmQyZTIwZTEwOGM0ZWU2Ng==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-04-21T12:33:04Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-04-21T12:33:17Z"
    },
    "message": "gas: Extend .symver directive\n\nExtend .symver directive to update visibility of the original symbol and\nassign one original symbol to different versioned symbols:\n\n  .symver foo, foo@VERS_1, local    # Change foo to a local symbol.\n  .symver foo, foo@VERS_2, hidden   # Change foo to a hidden symbol.\n  .symver foo, foo@@VERS_3, remove  # Remove foo from symbol table.\n  .symver foo, bar@V1               # Assign foo to bar@V1 and baz@V2.\n  .symver foo, baz@V2\n\n\tPR gas/23840\n\tPR gas/25295\n\t* NEWS: Mention .symver extension.\n\t* config/obj-elf.c (obj_elf_find_and_add_versioned_name): New\n\tfunction.\n\t(obj_elf_symver): Call obj_elf_find_and_add_versioned_name to\n\tadd a version name.  Add local, hidden and remove visibility\n\tsupport.\n\t(elf_frob_symbol): Handle the list of version names.  Update the\n\toriginal symbol to local, hidden or remove it from the symbol\n\ttable.\n\t(elf_frob_file_before_adjust): Handle the list of version names.\n\t* config/obj-elf.h (elf_visibility): New.\n\t(elf_versioned_name_list): Likewise.\n\t(elf_obj_sy): Change local to bitfield. Add rename, bad_version\n\tand visibility.  Change versioned_name pointer to struct\n\telf_versioned_name_list.\n\t* doc/as.texi: Update .symver directive.\n\t* testsuite/gas/symver/symver.exp: Run all *.d tests.  Add more\n\terror checking tests.\n\t* testsuite/gas/symver/symver6.d: New file.\n\t* testsuite/gas/symver/symver7.d: Likewise.\n\t* testsuite/gas/symver/symver7.s: Likewise.\n\t* testsuite/gas/symver/symver8.d: Likewise.\n\t* testsuite/gas/symver/symver8.s: Likewise.\n\t* testsuite/gas/symver/symver9.s: Likewise.\n\t* testsuite/gas/symver/symver9a.d: Likewise.\n\t* testsuite/gas/symver/symver9b.d: Likewise.\n\t* testsuite/gas/symver/symver10.s: Likewise.\n\t* testsuite/gas/symver/symver10a.d: Likewise.\n\t* testsuite/gas/symver/symver10b.d: Likewise.\n\t* testsuite/gas/symver/symver11.d: Likewise.\n\t* testsuite/gas/symver/symver11.s: Likewise.\n\t* testsuite/gas/symver/symver12.d: Likewise.\n\t* testsuite/gas/symver/symver12.s: Likewise.\n\t* testsuite/gas/symver/symver13.d: Likewise.\n\t* testsuite/gas/symver/symver13.s: Likewise.\n\t* testsuite/gas/symver/symver14.d: Likewise.\n\t* testsuite/gas/symver/symver14.l: Likewise.\n\t* testsuite/gas/symver/symver15.d: Likewise.\n\t* testsuite/gas/symver/symver15.l: Likewise.\n\t* testsuite/gas/symver/symver6.l: Removed.\n\t* testsuite/gas/symver/symver6.s: Updated.",
    "tree": {
      "sha": "1ae1bebd08fc216bb92d2deb38e21408776a1f87",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ae1bebd08fc216bb92d2deb38e21408776a1f87"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6914be53bd662eefd979d0c82d2e20e108c4ee66",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6914be53bd662eefd979d0c82d2e20e108c4ee66",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6914be53bd662eefd979d0c82d2e20e108c4ee66",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6914be53bd662eefd979d0c82d2e20e108c4ee66/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89"
    }
  ],
  "stats": {
    "total": 592,
    "additions": 470,
    "deletions": 122
  },
  "files": [
    {
      "sha": "3185bdcf3669751b35ec92cb53f66660e77ea329",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -1,3 +1,49 @@\n+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/23840\n+\tPR gas/25295\n+\t* NEWS: Mention .symver extension.\n+\t* config/obj-elf.c (obj_elf_find_and_add_versioned_name): New\n+\tfunction.\n+\t(obj_elf_symver): Call obj_elf_find_and_add_versioned_name to\n+\tadd a version name.  Add local, hidden and remove visibility\n+\tsupport.\n+\t(elf_frob_symbol): Handle the list of version names.  Update the\n+\toriginal symbol to local, hidden or remove it from the symbol\n+\ttable.\n+\t(elf_frob_file_before_adjust): Handle the list of version names.\n+\t* config/obj-elf.h (elf_visibility): New.\n+\t(elf_versioned_name_list): Likewise.\n+\t(elf_obj_sy): Change local to bitfield. Add rename, bad_version\n+\tand visibility.  Change versioned_name pointer to struct\n+\telf_versioned_name_list.\n+\t* doc/as.texi: Update .symver directive.\n+\t* testsuite/gas/symver/symver.exp: Run all *.d tests.  Add more\n+\terror checking tests.\n+\t* testsuite/gas/symver/symver6.d: New file.\n+\t* testsuite/gas/symver/symver7.d: Likewise.\n+\t* testsuite/gas/symver/symver7.s: Likewise.\n+\t* testsuite/gas/symver/symver8.d: Likewise.\n+\t* testsuite/gas/symver/symver8.s: Likewise.\n+\t* testsuite/gas/symver/symver9.s: Likewise.\n+\t* testsuite/gas/symver/symver9a.d: Likewise.\n+\t* testsuite/gas/symver/symver9b.d: Likewise.\n+\t* testsuite/gas/symver/symver10.s: Likewise.\n+\t* testsuite/gas/symver/symver10a.d: Likewise.\n+\t* testsuite/gas/symver/symver10b.d: Likewise.\n+\t* testsuite/gas/symver/symver11.d: Likewise.\n+\t* testsuite/gas/symver/symver11.s: Likewise.\n+\t* testsuite/gas/symver/symver12.d: Likewise.\n+\t* testsuite/gas/symver/symver12.s: Likewise.\n+\t* testsuite/gas/symver/symver13.d: Likewise.\n+\t* testsuite/gas/symver/symver13.s: Likewise.\n+\t* testsuite/gas/symver/symver14.d: Likewise.\n+\t* testsuite/gas/symver/symver14.l: Likewise.\n+\t* testsuite/gas/symver/symver15.d: Likewise.\n+\t* testsuite/gas/symver/symver15.l: Likewise.\n+\t* testsuite/gas/symver/symver6.l: Removed.\n+\t* testsuite/gas/symver/symver6.s: Updated.\n+\n 2020-04-20  Sudakshina Das  <sudi.das@arm.com>\n \n \t* config/tc-aarch64.c (parse_barrier_psb): Update error messages"
    },
    {
      "sha": "58d79caa41db695424a37307b6545b513cb35fee",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -1,5 +1,8 @@\n -*- text -*-\n \n+* Extend .symver directive to update visibility of the original symbol\n+  and assign one original symbol to different versioned symbols.\n+\n * Add support for Intel SERIALIZE and TSXLDTRK instructions.\n \n * Add -mlfence-after-load=, -mlfence-before-indirect-branch= and"
    },
    {
      "sha": "409ea4d6bed5ef4542bc772e9b7b372f9026bc1c",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 211,
      "deletions": 107,
      "changes": 318,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -1515,6 +1515,70 @@ obj_elf_line (int ignore ATTRIBUTE_UNUSED)\n   demand_empty_rest_of_line ();\n }\n \n+static struct elf_versioned_name_list *\n+obj_elf_find_and_add_versioned_name (const char *version_name,\n+\t\t\t\t     const char *sym_name,\n+\t\t\t\t     const char *ver,\n+\t\t\t\t     struct elf_obj_sy *sy_obj)\n+{\n+  struct elf_versioned_name_list *versioned_name;\n+  const char *p;\n+\n+  for (p = ver + 1; *p == ELF_VER_CHR; p++)\n+    ;\n+\n+  /* NB: Since some tests in ld/testsuite/ld-elfvers have no version\n+     names, we have to disable this.  */\n+  if (0 && *p == '\\0')\n+    {\n+      as_bad (_(\"missing version name in `%s' for symbol `%s'\"),\n+\t      version_name, sym_name);\n+      return NULL;\n+    }\n+\n+  versioned_name = sy_obj->versioned_name;\n+\n+  switch (p - ver)\n+    {\n+    case 1:\n+    case 2:\n+      break;\n+    case 3:\n+      if (sy_obj->rename)\n+\t{\n+\t  if (strcmp (versioned_name->name, version_name) == 0)\n+\t    return versioned_name;\n+\t  else\n+\t    {\n+\t      as_bad (_(\"only one version name with `@@@' is allowed \"\n+\t\t\t\"for symbol `%s'\"), sym_name);\n+\t      return NULL;\n+\t    }\n+\t}\n+      sy_obj->rename = TRUE;\n+      break;\n+    default:\n+      as_bad (_(\"invalid version name '%s' for symbol `%s'\"),\n+\t      version_name, sym_name);\n+      return NULL;\n+    }\n+\n+  for (;\n+       versioned_name != NULL;\n+       versioned_name = versioned_name->next)\n+    if (strcmp (versioned_name->name, version_name) == 0)\n+      return versioned_name;\n+\n+  /* Add this versioned name to the head of the list,  */\n+  versioned_name = (struct elf_versioned_name_list *)\n+    xmalloc (sizeof (*versioned_name));\n+  versioned_name->name = xstrdup (version_name);\n+  versioned_name->next = sy_obj->versioned_name;\n+  sy_obj->versioned_name = versioned_name;\n+\n+  return versioned_name;\n+}\n+\n /* This handles the .symver pseudo-op, which is used to specify a\n    symbol version.  The syntax is ``.symver NAME,SYMVERNAME''.\n    SYMVERNAME may contain ELF_VER_CHR ('@') characters.  This\n@@ -1525,9 +1589,12 @@ static void\n obj_elf_symver (int ignore ATTRIBUTE_UNUSED)\n {\n   char *name;\n+  const char *sym_name;\n   char c;\n   char old_lexat;\n   symbolS *sym;\n+  struct elf_obj_sy *sy_obj;\n+  char *p;\n \n   sym = get_sym_from_input_line_and_check ();\n \n@@ -1546,43 +1613,59 @@ obj_elf_symver (int ignore ATTRIBUTE_UNUSED)\n   lex_type[(unsigned char) '@'] |= LEX_NAME;\n   c = get_symbol_name (& name);\n   lex_type[(unsigned char) '@'] = old_lexat;\n+  sym_name = S_GET_NAME (sym);\n \n   if (S_IS_COMMON (sym))\n     {\n       as_bad (_(\"`%s' can't be versioned to common symbol '%s'\"),\n-\t      name, S_GET_NAME (sym));\n+\t      name, sym_name);\n       ignore_rest_of_line ();\n       return;\n     }\n \n-  if (symbol_get_obj (sym)->versioned_name == NULL)\n+  p = strchr (name, ELF_VER_CHR);\n+  if (p == NULL)\n     {\n-      symbol_get_obj (sym)->versioned_name = xstrdup (name);\n+      as_bad (_(\"missing version name in `%s' for symbol `%s'\"),\n+\t      name, sym_name);\n+      ignore_rest_of_line ();\n+      return;\n+    }\n+\n+  sy_obj = symbol_get_obj (sym);\n+  if (obj_elf_find_and_add_versioned_name (name, sym_name,\n+\t\t\t\t\t   p, sy_obj) == NULL)\n+    {\n+      sy_obj->bad_version = TRUE;\n+      ignore_rest_of_line ();\n+      return;\n+    }\n \n-      (void) restore_line_pointer (c);\n+  (void) restore_line_pointer (c);\n \n-      if (strchr (symbol_get_obj (sym)->versioned_name,\n-\t\t  ELF_VER_CHR) == NULL)\n+  if (*input_line_pointer == ',')\n+    {\n+      char *save = input_line_pointer;\n+\n+      ++input_line_pointer;\n+      SKIP_WHITESPACE ();\n+      if (strncmp (input_line_pointer, \"local\", 5) == 0)\n \t{\n-\t  as_bad (_(\"missing version name in `%s' for symbol `%s'\"),\n-\t\t  symbol_get_obj (sym)->versioned_name,\n-\t\t  S_GET_NAME (sym));\n-\t  ignore_rest_of_line ();\n-\t  return;\n+\t  input_line_pointer += 5;\n+\t  sy_obj->visibility = visibility_local;\n \t}\n-    }\n-  else\n-    {\n-      if (strcmp (symbol_get_obj (sym)->versioned_name, name))\n+      else if (strncmp (input_line_pointer, \"hidden\", 6) == 0)\n \t{\n-\t  as_bad (_(\"multiple versions [`%s'|`%s'] for symbol `%s'\"),\n-\t\t  name, symbol_get_obj (sym)->versioned_name,\n-\t\t  S_GET_NAME (sym));\n-\t  ignore_rest_of_line ();\n-\t  return;\n+\t  input_line_pointer += 6;\n+\t  sy_obj->visibility = visibility_hidden;\n \t}\n-\n-      (void) restore_line_pointer (c);\n+      else if (strncmp (input_line_pointer, \"remove\", 6) == 0)\n+\t{\n+\t  input_line_pointer += 6;\n+\t  sy_obj->visibility = visibility_remove;\n+\t}\n+      else\n+\tinput_line_pointer = save;\n     }\n \n   demand_empty_rest_of_line ();\n@@ -2382,6 +2465,7 @@ elf_frob_symbol (symbolS *symp, int *puntp)\n {\n   struct elf_obj_sy *sy_obj;\n   expressionS *size;\n+  struct elf_versioned_name_list *versioned_name;\n \n #ifdef NEED_ECOFF_DEBUG\n   if (ECOFF_DEBUGGING)\n@@ -2409,73 +2493,47 @@ elf_frob_symbol (symbolS *symp, int *puntp)\n       sy_obj->size = NULL;\n     }\n \n-  if (sy_obj->versioned_name != NULL)\n+  versioned_name = sy_obj->versioned_name;\n+  if (versioned_name)\n     {\n-      char *p;\n-\n-      p = strchr (sy_obj->versioned_name, ELF_VER_CHR);\n-      if (p == NULL)\n-\t/* We will have already reported an error about a missing version.  */\n-\t*puntp = TRUE;\n-\n       /* This symbol was given a new name with the .symver directive.\n-\n \t If this is an external reference, just rename the symbol to\n \t include the version string.  This will make the relocs be\n-\t against the correct versioned symbol.\n-\n-\t If this is a definition, add an alias.  FIXME: Using an alias\n-\t will permit the debugging information to refer to the right\n-\t symbol.  However, it's not clear whether it is the best\n-\t approach.  */\n+\t against the correct versioned symbol.  */\n \n-      else if (! S_IS_DEFINED (symp))\n+      /* We will have already reported an version error.  */\n+      if (sy_obj->bad_version)\n+\t*puntp = TRUE;\n+      /* elf_frob_file_before_adjust only allows one version symbol for\n+\t renamed symbol.  */\n+      else if (sy_obj->rename)\n+\tS_SET_NAME (symp, versioned_name->name);\n+      else if (S_IS_COMMON (symp))\n \t{\n-\t  /* Verify that the name isn't using the @@ syntax--this is\n-\t     reserved for definitions of the default version to link\n-\t     against.  */\n-\t  if (p[1] == ELF_VER_CHR)\n-\t    {\n-\t      as_bad (_(\"invalid attempt to declare external version name\"\n-\t\t\t\" as default in symbol `%s'\"),\n-\t\t      sy_obj->versioned_name);\n-\t      *puntp = TRUE;\n-\t    }\n-\t  S_SET_NAME (symp, sy_obj->versioned_name);\n+\t  as_bad (_(\"`%s' can't be versioned to common symbol '%s'\"),\n+\t\t  versioned_name->name, S_GET_NAME (symp));\n+\t  *puntp = TRUE;\n \t}\n       else\n \t{\n-\t  if (p[1] == ELF_VER_CHR && p[2] == ELF_VER_CHR)\n-\t    {\n-\t      size_t l;\n-\n-\t      /* The @@@ syntax is a special case. It renames the\n-\t\t symbol name to versioned_name with one `@' removed.  */\n-\t      l = strlen (&p[3]) + 1;\n-\t      memmove (&p[2], &p[3], l);\n-\t      S_SET_NAME (symp, sy_obj->versioned_name);\n-\t    }\n-\t  else\n+\t  asymbol *bfdsym;\n+\t  elf_symbol_type *elfsym;\n+\n+\t  /* This is a definition.  Add an alias for each version.\n+\t     FIXME: Using an alias will permit the debugging information\n+\t     to refer to the right symbol.  However, it's not clear\n+\t     whether it is the best approach.  */\n+\n+\t  /* FIXME: Creating a new symbol here is risky.  We're\n+\t     in the final loop over the symbol table.  We can\n+\t     get away with it only because the symbol goes to\n+\t     the end of the list, where the loop will still see\n+\t     it.  It would probably be better to do this in\n+\t     obj_frob_file_before_adjust.  */\n+\t  for (; versioned_name != NULL;\n+\t       versioned_name = versioned_name->next)\n \t    {\n-\t      symbolS *symp2;\n-\n-\t      /* FIXME: Creating a new symbol here is risky.  We're\n-\t\t in the final loop over the symbol table.  We can\n-\t\t get away with it only because the symbol goes to\n-\t\t the end of the list, where the loop will still see\n-\t\t it.  It would probably be better to do this in\n-\t\t obj_frob_file_before_adjust.  */\n-\n-\t      symp2 = symbol_find_or_make (sy_obj->versioned_name);\n-\n-\t      /* Now we act as though we saw symp2 = sym.  */\n-\t      if (S_IS_COMMON (symp))\n-\t\t{\n-\t\t  as_bad (_(\"`%s' can't be versioned to common symbol '%s'\"),\n-\t\t\t  sy_obj->versioned_name, S_GET_NAME (symp));\n-\t\t  *puntp = TRUE;\n-\t\t  return;\n-\t\t}\n+\t      symbolS *symp2 = symbol_find_or_make (versioned_name->name);\n \n \t      S_SET_SEGMENT (symp2, S_GET_SEGMENT (symp));\n \n@@ -2498,6 +2556,27 @@ elf_frob_symbol (symbolS *symp, int *puntp)\n \t      if (S_IS_EXTERNAL (symp))\n \t\tS_SET_EXTERNAL (symp2);\n \t    }\n+\n+\t  switch (symbol_get_obj (symp)->visibility)\n+\t    {\n+\t    case visibility_unchanged:\n+\t      break;\n+\t    case visibility_hidden:\n+\t      bfdsym = symbol_get_bfdsym (symp);\n+\t      elfsym = elf_symbol_from (bfd_asymbol_bfd (bfdsym),\n+\t\t\t\t\tbfdsym);\n+\t      elfsym->internal_elf_sym.st_other &= ~3;\n+\t      elfsym->internal_elf_sym.st_other |= STV_HIDDEN;\n+\t      break;\n+\t    case visibility_remove:\n+\t      /* Remove the symbol if it isn't used in relocation.  */\n+\t      if (!symbol_used_in_reloc_p (symp))\n+\t\tsymbol_remove (symp, &symbol_rootP, &symbol_lastP);\n+\t      break;\n+\t    case visibility_local:\n+\t      S_CLEAR_EXTERNAL (symp);\n+\t      break;\n+\t    }\n \t}\n     }\n \n@@ -2676,36 +2755,61 @@ elf_frob_file_before_adjust (void)\n       symbolS *symp;\n \n       for (symp = symbol_rootP; symp; symp = symbol_next (symp))\n-\tif (!S_IS_DEFINED (symp))\n-\t  {\n-\t    if (symbol_get_obj (symp)->versioned_name)\n-\t      {\n-\t\tchar *p;\n-\n-\t\t/* The @@@ syntax is a special case. If the symbol is\n-\t\t   not defined, 2 `@'s will be removed from the\n-\t\t   versioned_name.  */\n-\n-\t\tp = strchr (symbol_get_obj (symp)->versioned_name,\n-\t\t\t    ELF_VER_CHR);\n-\t\tif (p != NULL && p[1] == ELF_VER_CHR && p[2] == ELF_VER_CHR)\n-\t\t  {\n-\t\t    size_t l = strlen (&p[3]) + 1;\n-\t\t    memmove (&p[1], &p[3], l);\n-\t\t  }\n-\t\tif (symbol_used_p (symp) == 0\n-\t\t    && symbol_used_in_reloc_p (symp) == 0)\n-\t\t  symbol_remove (symp, &symbol_rootP, &symbol_lastP);\n-\t      }\n+\t{\n+\t  struct elf_obj_sy *sy_obj = symbol_get_obj (symp);\n+\t  int is_defined = !!S_IS_DEFINED (symp);\n \n-\t    /* If there was .weak foo, but foo was neither defined nor\n-\t       used anywhere, remove it.  */\n+\t  if (sy_obj->versioned_name)\n+\t    {\n+\t      char *p = strchr (sy_obj->versioned_name->name,\n+\t\t\t\tELF_VER_CHR);\n \n-\t    else if (S_IS_WEAK (symp)\n-\t\t     && symbol_used_p (symp) == 0\n-\t\t     && symbol_used_in_reloc_p (symp) == 0)\n-\t      symbol_remove (symp, &symbol_rootP, &symbol_lastP);\n-\t  }\n+\t      if (sy_obj->rename)\n+\t\t{\n+\t\t  /* The @@@ syntax is a special case. If the symbol is\n+\t\t     not defined, 2 `@'s will be removed from the\n+\t\t     versioned_name. Otherwise, 1 `@' will be removed.   */\n+\t\t  size_t l = strlen (&p[3]) + 1;\n+\t\t  memmove (&p[1 + is_defined], &p[3], l);\n+\t\t}\n+\n+\t      if (!is_defined)\n+\t\t{\n+\t\t  /* Verify that the name isn't using the @@ syntax--this\n+\t\t     is reserved for definitions of the default version\n+\t\t     to link against.  */\n+\t\t  if (!sy_obj->rename && p[1] == ELF_VER_CHR)\n+\t\t    {\n+\t\t      as_bad (_(\"invalid attempt to declare external \"\n+\t\t\t\t\"version name as default in symbol `%s'\"),\n+\t\t\t      sy_obj->versioned_name->name);\n+\t\t      return;\n+\t\t    }\n+\n+\t\t  /* Only one version symbol is allowed for undefined\n+\t\t     symbol.  */\n+\t\t  if (sy_obj->versioned_name->next)\n+\t\t    {\n+\t\t      as_bad (_(\"multiple versions [`%s'|`%s'] for \"\n+\t\t\t\t\"symbol `%s'\"),\n+\t\t\t      sy_obj->versioned_name->name,\n+\t\t\t      sy_obj->versioned_name->next->name,\n+\t\t\t      S_GET_NAME (symp));\n+\t\t      return;\n+\t\t    }\n+\n+\t\t  sy_obj->rename = TRUE;\n+\t\t}\n+\t    }\n+\n+\t  /* If there was .symver or .weak, but symbol was neither\n+\t     defined nor used anywhere, remove it.  */\n+\t  if (!is_defined\n+\t      && (sy_obj->versioned_name || S_IS_WEAK (symp))\n+\t      && symbol_used_p (symp) == 0\n+\t      && symbol_used_in_reloc_p (symp) == 0)\n+\t    symbol_remove (symp, &symbol_rootP, &symbol_lastP);\n+\t}\n     }\n }\n "
    },
    {
      "sha": "b39a1a1ab63e5d7093bb846b7f94b6902527d59e",
      "filename": "gas/config/obj-elf.h",
      "status": "modified",
      "additions": 26,
      "deletions": 3,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/config/obj-elf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/config/obj-elf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.h?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -55,18 +55,41 @@ extern int mips_flag_mdebug;\n #endif\n #endif\n \n+enum elf_visibility\n+{\n+  visibility_unchanged = 0,\n+  visibility_local,\n+  visibility_hidden,\n+  visibility_remove\n+};\n+\n+struct elf_versioned_name_list\n+{\n+  char *name;\n+  struct elf_versioned_name_list *next;\n+};\n+\n /* Additional information we keep for each symbol.  */\n struct elf_obj_sy\n {\n   /* Whether the symbol has been marked as local.  */\n-  int local;\n+  unsigned int local : 1;\n+\n+  /* Whether the symbol has been marked for rename with @@@.  */\n+  unsigned int rename : 1;\n+\n+  /* Whether the symbol has a bad version name.  */\n+  unsigned int bad_version : 1;\n+\n+  /* Whether visibility of the symbol should be changed.  */\n+  ENUM_BITFIELD (elf_visibility) visibility : 2;\n \n   /* Use this to keep track of .size expressions that involve\n      differences that we can't compute yet.  */\n   expressionS *size;\n \n-  /* The name specified by the .symver directive.  */\n-  char *versioned_name;\n+  /* The list of names specified by the .symver directive.  */\n+  struct elf_versioned_name_list *versioned_name;\n \n #ifdef ECOFF_DEBUGGING\n   /* If we are generating ECOFF debugging information, we need some"
    },
    {
      "sha": "8669879c87f165b9491b40c7d166a466fef3a5cd",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -4509,7 +4509,7 @@ Some machine configurations provide additional directives.\n * Struct::\t\t\t@code{.struct @var{expression}}\n @ifset ELF\n * SubSection::                  @code{.subsection}\n-* Symver::                      @code{.symver @var{name},@var{name2@@nodename}}\n+* Symver::                      @code{.symver @var{name},@var{name2@@nodename}[,@var{visibility}]}\n @end ifset\n \n @ifset COFF\n@@ -7112,9 +7112,9 @@ shared library.\n \n For ELF targets, the @code{.symver} directive can be used like this:\n @smallexample\n-.symver @var{name}, @var{name2@@nodename}\n+.symver @var{name}, @var{name2@@nodename}[ ,@var{visibility}]\n @end smallexample\n-If the symbol @var{name} is defined within the file\n+If the original symbol @var{name} is defined within the file\n being assembled, the @code{.symver} directive effectively creates a symbol\n alias with the name @var{name2@@nodename}, and in fact the main reason that we\n just don't try and create a regular alias is that the @var{@@} character isn't\n@@ -7127,7 +7127,15 @@ function is being mentioned.  The @var{nodename} portion of the alias should be\n the name of a node specified in the version script supplied to the linker when\n building a shared library.  If you are attempting to override a versioned\n symbol from a shared library, then @var{nodename} should correspond to the\n-nodename of the symbol you are trying to override.\n+nodename of the symbol you are trying to override.  The optional argument\n+@var{visibility} updates the visibility of the original symbol.  The valid\n+visibilities are @code{local}, @code {hidden}, and @code {remove}.  The\n+@code{local} visibility makes the original symbol a local symbol\n+(@pxref{Local}).  The @code{hidden} visibility sets the visibility of the\n+original symbol to @code{hidden} (@pxref{Hidden}).  The @code{remove}\n+visibility removes the original symbol from the symbol table if it isn't\n+used in relocation.  If visibility isn't specified, the original symbol\n+is unchanged.\n \n If the symbol @var{name} is not defined within the file being assembled, all\n references to @var{name} will be changed to @var{name2@@nodename}.  If no"
    },
    {
      "sha": "6b29a12d316fdbc3f6507e45cd3400a86268585b",
      "filename": "gas/testsuite/gas/symver/symver.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver.exp?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -46,8 +46,13 @@ if { [is_elf_format] } then {\n       return\n     }\n \n-    run_dump_test \"symver0\" \n-    run_dump_test \"symver1\" \n+    set test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]\n+    foreach t $test_list {\n+\t# We need to strip the \".d\", but can leave the dirname.\n+\tverbose [file rootname $t]\n+\trun_dump_test [file rootname $t]\n+    }\n+\n     run_error_test \"symver2\" \"\"\n     run_error_test \"symver3\" \"\"\n     # We have to comment out symver4 and symver5, which check the\n@@ -56,5 +61,6 @@ if { [is_elf_format] } then {\n     # version name.\n #    run_error_test \"symver4\" \"\"\n #    run_error_test \"symver5\" \"\"\n-    run_error_test \"symver6\" \"\"\n+    run_error_test \"symver14\" \"\"\n+    run_error_test \"symver15\" \"\"\n }"
    },
    {
      "sha": "967a692a73a57d4c4cc364a570e875ce1c705173",
      "filename": "gas/testsuite/gas/symver/symver10.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver10.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver10.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver10.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+\t.data\n+\t.globl foo\n+\t.type foo,%object\n+foo:\n+\t.byte 0\n+\t.size foo,.-foo\n+\t.symver foo,foo@@version2,remove\n+\t.symver foo,foo@version1"
    },
    {
      "sha": "e9bd1594ebaa2e103cf75b5d3e9fd76885c7967c",
      "filename": "gas/testsuite/gas/symver/symver10a.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver10a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver10a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver10a.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+#source: symver10.s\n+#readelf: -sW\n+#name: symver symver10a\n+\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@version1\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@@version2\n+#pass"
    },
    {
      "sha": "17d0bfdd19ea2ed04e0bacfc9bd4538001cc104f",
      "filename": "gas/testsuite/gas/symver/symver10b.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver10b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver10b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver10b.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+#source: symver10.s\n+#readelf: -sW\n+#name: symver symver10b\n+\n+#failif\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo\n+#pass"
    },
    {
      "sha": "0e3e7f14b7dc2853d9ccd56d741a9397fb7e0f6d",
      "filename": "gas/testsuite/gas/symver/symver11.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver11.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+#readelf: -rsW\n+#name: symver symver11\n+\n+#...\n+[0-9a-f]+ +[0-9a-f]+ +R_.* +[0-9a-f]+ +foo *.*\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo\n+#pass"
    },
    {
      "sha": "547e8123f0d4fa779c968dbaaf677bf2a2525f5b",
      "filename": "gas/testsuite/gas/symver/symver11.s",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver11.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver11.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver11.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,9 @@\n+\t.data\n+\t.globl foo\n+\t.type foo,%object\n+foo:\n+\t.byte 0\n+\t.size foo,.-foo\n+\t.symver foo,foo@@version2,remove\n+\t.symver foo,foo@version1\n+\t.dc.a foo"
    },
    {
      "sha": "3878f4dd496b9d73e27dfc277e422e68f8860637",
      "filename": "gas/testsuite/gas/symver/symver12.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver12.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver12.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver12.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,9 @@\n+#readelf: -sW\n+#name: symver symver12\n+\n+#...\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +DEFAULT +[0-9]+ +foo\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +DEFAULT +[0-9]+ +foo@VERS_2\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +DEFAULT +[0-9]+ +foo@VERS_1\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +DEFAULT +[0-9]+ +foo@@VERS_2\n+#pass"
    },
    {
      "sha": "724c3efcece3ce74886521ba2987a65dc3abb24d",
      "filename": "gas/testsuite/gas/symver/symver12.s",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver12.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver12.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver12.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,10 @@\n+\t.text\n+\t.space 13\n+\t.symver foo, foo@@VERS_2\n+\t.symver foo, foo@VERS_1\n+\t.symver foo, foo@VERS_2\n+\t.globl  foo\n+\t.type   foo, %function\n+foo:\n+\t.byte 0\n+\t.size foo,.-foo"
    },
    {
      "sha": "dce8579f5dcf0986352485eaec90b705ba27bbe8",
      "filename": "gas/testsuite/gas/symver/symver13.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver13.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver13.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver13.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,9 @@\n+#readelf: -sW\n+#name: symver symver13\n+\n+#...\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +HIDDEN +[0-9]+ +foo\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +HIDDEN +[0-9]+ +foo@VERS_1\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +HIDDEN +[0-9]+ +foo@@VERS_2\n+ +[0-9]+: +0+d +1 +FUNC +GLOBAL +HIDDEN +[0-9]+ +foo@VERS_2\n+#pass"
    },
    {
      "sha": "5426d8682afa663398f185c00efd587f3af0c26b",
      "filename": "gas/testsuite/gas/symver/symver13.s",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver13.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver13.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver13.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,11 @@\n+\t.text\n+\t.space 13\n+\t.globl  foo\n+\t.type   foo, %function\n+foo:\n+\t.byte 0\n+\t.symver foo, foo@VERS_2\n+\t.symver foo, foo@@VERS_2\n+\t.symver foo, foo@VERS_1\n+\t.hidden foo\n+\t.size foo,.-foo"
    },
    {
      "sha": "53fb7f44e7b59c9a83867b21e41e92f4c664f4a5",
      "filename": "gas/testsuite/gas/symver/symver14.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver14.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver14.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver14.l?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,2 @@\n+.*: Assembler messages:\n+.*: Error: only one version name with `@@@' is allowed for symbol `foo'"
    },
    {
      "sha": "6693ff6b006c20feaf291680f357a6cf96d51da1",
      "filename": "gas/testsuite/gas/symver/symver14.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver14.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver14.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver14.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,6 @@\n+\t.data\n+\t.global foo\n+foo:\n+\t.byte 1\n+\t.symver foo,foo@@@version1\n+\t.symver foo,foo@@@version2"
    },
    {
      "sha": "903a67c6014e16289fbbe0a7cdac5883c8514d68",
      "filename": "gas/testsuite/gas/symver/symver15.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver15.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver15.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver15.l?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,2 @@\n+.*: Assembler messages:\n+.*: Error: multiple versions \\[`foo@version2'|`foo@version1'\\] for symbol `foo'"
    },
    {
      "sha": "abf18600a87006291f73cec6de98401dfd75bc5e",
      "filename": "gas/testsuite/gas/symver/symver15.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver15.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver15.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver15.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,3 @@\n+\t.data\n+\t.symver foo,foo@version1\n+\t.symver foo,foo@version2"
    },
    {
      "sha": "cddf7ec7032836d4ac22115e45ceae6294141ba8",
      "filename": "gas/testsuite/gas/symver/symver6.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver6.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver6.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver6.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,11 @@\n+#nm: -n\n+#name: symver symver6\n+#\n+\n+#...\n+[ \t]+U foo\n+#...\n+0+00000.. D foo1\n+0+0000000 D foo@@version1\n+0+00000.. D foo@version1\n+0+00000.. d L_foo1"
    },
    {
      "sha": "c2d12ae060ffbb0a741f1cb23e86b288974410bd",
      "filename": "gas/testsuite/gas/symver/symver6.l",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/gas/testsuite/gas/symver/symver6.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f6fd151cbf226bbaa66e44977f57b7c6dc33d89/gas/testsuite/gas/symver/symver6.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver6.l?ref=6f6fd151cbf226bbaa66e44977f57b7c6dc33d89",
      "patch": "@@ -1,3 +0,0 @@\n-.*: Assembler messages:\n-.*:7: Error: multiple versions \\[`foo@version1'|`foo@@version1'\\] for symbol `foo'\n-#pass"
    },
    {
      "sha": "b0bc0b8b22bd97deadc3c11e850679b5b6c5b0bb",
      "filename": "gas/testsuite/gas/symver/symver6.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver6.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver6.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver6.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -3,7 +3,7 @@\n \t.type foo1,object\n foo1:\n \t.long foo\n-\t.symver foo,foo@@version1\n-\t.symver foo,foo@version1\n+\t.symver foo1,foo@@version1\n+\t.symver foo1,foo@version1\n L_foo1:\n \t.size foo1,L_foo1-foo1"
    },
    {
      "sha": "5152678a485dcc856eace9f353b38931a8438cf0",
      "filename": "gas/testsuite/gas/symver/symver7.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver7.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver7.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver7.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+#readelf: -sW\n+#name: symver symver7\n+\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +HIDDEN +[0-9]+ +foo\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@version1\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@@version2\n+#pass"
    },
    {
      "sha": "20c11b7cc089ae8fbdda02a552728c7c8488c40e",
      "filename": "gas/testsuite/gas/symver/symver7.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver7.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver7.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver7.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+\t.data\n+\t.globl foo\n+\t.type foo,%object\n+foo:\n+\t.byte 0\n+\t.size foo,.-foo\n+\t.symver foo,foo@@version2,local\n+\t.symver foo,foo@version1,hidden"
    },
    {
      "sha": "8938aecb59290d4d05bc4eb3bf1c2c906354f5e0",
      "filename": "gas/testsuite/gas/symver/symver8.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver8.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,9 @@\n+#readelf: -sW\n+#name: symver symver8\n+\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +LOCAL +DEFAULT +[0-9]+ +foo\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@version1\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@@version2\n+#pass"
    },
    {
      "sha": "17ab0370402e6826ca7a086dd743a07520737d88",
      "filename": "gas/testsuite/gas/symver/symver8.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver8.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver8.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver8.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+\t.data\n+\t.globl foo\n+\t.type foo,%object\n+foo:\n+\t.byte 0\n+\t.size foo,.-foo\n+\t.symver foo,foo@@version2,hidden\n+\t.symver foo,foo@version1,local"
    },
    {
      "sha": "2f608972f57d31927fd0be5e95d029ee4eb9a466",
      "filename": "gas/testsuite/gas/symver/symver9.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver9.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver9.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver9.s?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+\t.data\n+\t.globl foo\n+\t.type foo,%object\n+foo:\n+\t.byte 0\n+\t.size foo,.-foo\n+\t.symver foo,foo@@version2\n+\t.symver foo,foo@version1,remove"
    },
    {
      "sha": "1cdbce8efc8d624ef052b8f2184b109a9a577e19",
      "filename": "gas/testsuite/gas/symver/symver9a.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver9a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver9a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver9a.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+#source: symver9.s\n+#readelf: -sW\n+#name: symver symver9a\n+\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@version1\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@@version2\n+#pass"
    },
    {
      "sha": "383d1bd0809c72feeadebffdc46d6eb7669561f9",
      "filename": "gas/testsuite/gas/symver/symver9b.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver9b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6914be53bd662eefd979d0c82d2e20e108c4ee66/gas/testsuite/gas/symver/symver9b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver9b.d?ref=6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "patch": "@@ -0,0 +1,8 @@\n+#source: symver9.s\n+#readelf: -sW\n+#name: symver symver9b\n+\n+#failif\n+#...\n+ +[0-9]+: +0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo\n+#pass"
    }
  ]
}