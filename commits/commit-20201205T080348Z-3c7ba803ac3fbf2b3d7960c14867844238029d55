{
  "sha": "3c7ba803ac3fbf2b3d7960c14867844238029d55",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2M3YmE4MDNhYzNmYmYyYjNkNzk2MGMxNDg2Nzg0NDIzODAyOWQ1NQ==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-12-05T08:03:48Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-12-05T08:03:48Z"
    },
    "message": "Fix TARGET_CHAR_BIT/HOST_CHAR_BIT confusion in gmp-utils.c\n\nIn a couple of gdb_mpz methods, we are computing the number of\nbits in a gdb::array_view of gdb_byte. Since gdb_byte is defined\nusing a host-side type (see common-types.h), the number of bits\nin a gdb_byte should be HOST_CHAR_BIT, not TARGET_CHAR_BIT.\n\ngdb/ChangeLog:\n\n        * gmp-utils.c (gdb_mpz::read): Use HOST_CHAR_BIT instead of\n        TARGET_CHAR_BIT.\n        (gdb_mpz::write): Likewise.",
    "tree": {
      "sha": "f8385120746722df4ada0e3a27ba362ce13e8873",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f8385120746722df4ada0e3a27ba362ce13e8873"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c7ba803ac3fbf2b3d7960c14867844238029d55",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c7ba803ac3fbf2b3d7960c14867844238029d55",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c7ba803ac3fbf2b3d7960c14867844238029d55",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c7ba803ac3fbf2b3d7960c14867844238029d55/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7e45e7a9ab38ee904ca62ed9934e933fdb1d6e9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e45e7a9ab38ee904ca62ed9934e933fdb1d6e9c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7e45e7a9ab38ee904ca62ed9934e933fdb1d6e9c"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 8,
    "deletions": 2
  },
  "files": [
    {
      "sha": "fd9599205642d2da4222294fd8ef60194e17753c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c7ba803ac3fbf2b3d7960c14867844238029d55/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c7ba803ac3fbf2b3d7960c14867844238029d55/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3c7ba803ac3fbf2b3d7960c14867844238029d55",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-05  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* gmp-utils.c (gdb_mpz::read): Use HOST_CHAR_BIT instead of\n+\tTARGET_CHAR_BIT.\n+\t(gdb_mpz::write): Likewise.\n+\n 2020-12-04  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* amd64-linux-tdep.c (amd64_linux_init_abi): Pass 2 as the"
    },
    {
      "sha": "e3a33333d50b5fd419215bb06f64ac3265b5d493",
      "filename": "gdb/gmp-utils.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c7ba803ac3fbf2b3d7960c14867844238029d55/gdb/gmp-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c7ba803ac3fbf2b3d7960c14867844238029d55/gdb/gmp-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gmp-utils.c?ref=3c7ba803ac3fbf2b3d7960c14867844238029d55",
      "patch": "@@ -56,7 +56,7 @@ gdb_mpz::read (gdb::array_view<const gdb_byte> buf, enum bfd_endian byte_order,\n \t was in fact negative, we need to adjust VAL accordingly.  */\n       gdb_mpz max;\n \n-      mpz_ui_pow_ui (max.val, 2, buf.size () * TARGET_CHAR_BIT - 1);\n+      mpz_ui_pow_ui (max.val, 2, buf.size () * HOST_CHAR_BIT - 1);\n       if (mpz_cmp (val, max.val) >= 0)\n \tmpz_submul_ui (val, max.val, 2);\n     }\n@@ -77,7 +77,7 @@ gdb_mpz::write (gdb::array_view<gdb_byte> buf, enum bfd_endian byte_order,\n \t would be the same as our negative value.  */\n       gdb_mpz neg_offset;\n \n-      mpz_ui_pow_ui (neg_offset.val, 2, buf.size () * TARGET_CHAR_BIT);\n+      mpz_ui_pow_ui (neg_offset.val, 2, buf.size () * HOST_CHAR_BIT);\n       mpz_add (exported_val.val, exported_val.val, neg_offset.val);\n     }\n "
    }
  ]
}