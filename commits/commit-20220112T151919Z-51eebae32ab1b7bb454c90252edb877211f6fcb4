{
  "sha": "51eebae32ab1b7bb454c90252edb877211f6fcb4",
  "node_id": "C_kwDOANOeidoAKDUxZWViYWUzMmFiMWI3YmI0NTRjOTAyNTJlZGI4NzcyMTFmNmZjYjQ",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2022-01-12T15:06:10Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2022-01-12T15:19:19Z"
    },
    "message": "gdb/testsuite: fix gdb.python/py-events.exp for finding process id\n\nWhen executed with --target_board=native-extended-gdbserver, the\ngdb.python/py-events.exp test errors out with\n\n  ERROR: tcl error sourcing /path/to/gdb/testsuite/gdb.python/py-events.exp.\n  ERROR: can't read \"process_id\": no such variable\n      while executing\n  \"lappend expected \"ptid: \\\\($process_id, $process_id, 0\\\\)\" \"address: $addr\"\"\n      (file \"/path/to/gdb/testsuite/gdb.python/py-events.exp\" line 103)\n      invoked from within\n  \"source /path/to/gdb/testsuite/gdb.python/py-events.exp\"\n      (\"uplevel\" body line 1)\n      invoked from within\n  \"uplevel #0 source /path/to/gdb/testsuite/gdb.python/py-events.exp\"\n      invoked from within\n  \"catch \"uplevel #0 source $test_file_name\"\"\n\nThere are multiple problems around this:\n\n1. The process_id variable is not initialized to a default value.\n\n2. The test attempts to find the PID of the current thread, but the\n   regexp that it uses is not tailored for the output printed by the\n   remote target.\n\n3. The test uses \"info threads\" to find the current thread PID.\n   Using the \"thread\" command instead is simpler.\n\nFix these problems.",
    "tree": {
      "sha": "3512b26b033b37713a3dcb3cdcb230c850239f7b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3512b26b033b37713a3dcb3cdcb230c850239f7b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/51eebae32ab1b7bb454c90252edb877211f6fcb4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51eebae32ab1b7bb454c90252edb877211f6fcb4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/51eebae32ab1b7bb454c90252edb877211f6fcb4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51eebae32ab1b7bb454c90252edb877211f6fcb4/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ae9adb365189f0f8c04aa5d7348c8e8a73a65f61",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae9adb365189f0f8c04aa5d7348c8e8a73a65f61",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ae9adb365189f0f8c04aa5d7348c8e8a73a65f61"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "2fdd2160a44d97380b0b8e2cac84599322ac1ab9",
      "filename": "gdb/testsuite/gdb.python/py-events.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51eebae32ab1b7bb454c90252edb877211f6fcb4/gdb/testsuite/gdb.python/py-events.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51eebae32ab1b7bb454c90252edb877211f6fcb4/gdb/testsuite/gdb.python/py-events.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-events.exp?ref=51eebae32ab1b7bb454c90252edb877211f6fcb4",
      "patch": "@@ -81,12 +81,17 @@ delete_breakpoints\n \n # Test inferior call events\n \n-gdb_test_multiple \"info threads\" \"get current thread\" {\n-    -re -wrap \"process ($decimal)\\[^\\n\\r\\]*do_nothing.*\" {\n+set process_id \"invalid\"\n+gdb_test_multiple \"thread\" \"get current thread\" {\n+    -re -wrap \"process ($decimal).*\" {\n \tset process_id $expect_out(1,string)\n \tpass $gdb_test_name\n     }\n-    -re -wrap \"Thread $hex \\\\(LWP ($decimal)\\\\)\\[^\\n\\r\\]*do_nothing.*\" {\n+    -re -wrap \"Thread $hex \\\\(LWP ($decimal)\\\\).*\" {\n+\tset process_id $expect_out(1,string)\n+\tpass $gdb_test_name\n+    }\n+    -re -wrap \"Thread $decimal\\.($decimal).*\" {\n \tset process_id $expect_out(1,string)\n \tpass $gdb_test_name\n     }"
    }
  ]
}