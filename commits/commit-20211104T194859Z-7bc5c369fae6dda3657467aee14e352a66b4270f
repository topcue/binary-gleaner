{
  "sha": "7bc5c369fae6dda3657467aee14e352a66b4270f",
  "node_id": "C_kwDOANOeidoAKDdiYzVjMzY5ZmFlNmRkYTM2NTc0NjdhZWUxNGUzNTJhNjZiNDI3MGY",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-04T19:31:28Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-04T19:48:59Z"
    },
    "message": "gdb: introduce \"set index-cache enabled\", deprecate \"set index-cache on/off\"\n\nThe \"set index-cache\" command is used at the same time as a prefix\ncommand (prefix for \"set index-cache directory\", for example), and a\nboolean setting for turning the index-cache on and off.  Even though I\ndid introduce that, I now don't think it's a good idea to do something\nnon-standard like this.\n\nFirst, there's no dedicated CLI command to show whether the index-cache\nis enabled, so it has to be custom output in the \"show index-cache\nhandler\".  Also, it means there's no good way a MI frontend can find out\nif the index-cache is enabled.  \"-gdb-show index-cache\" doesn't show it\nin the MI output record:\n\n    (gdb) interpreter-exec mi \"-gdb-show index-cache\"\n    ~\"\\n\"\n    ~\"The index cache is currently disabled.\\n\"\n    ^done,showlist={option={name=\"directory\",value=\"/home/simark/.cache/gdb\"}}\n\nFix this by introducing \"set/show index-cache enabled on/off\", regular\nboolean setting commands.  Keep commands \"set index-cache on\" and \"set\nindex-cache off\" as deprecated aliases of \"set index-cache enabled\",\nwith respectively the default arguments \"on\" and \"off\".\n\nUpdate tests using \"set index-cache on/off\" to use the new command.\nUpdate the regexps in gdb.base/maint.exp to figure out whether the\nindex-cache is enabled or not.  Update the doc to mention the new\ncommands.\n\nChange-Id: I7d5aaaf7fd22bf47bd03e0023ef4fbb4023b37b3",
    "tree": {
      "sha": "892fdb9b3bb2fc0f6d1cab26f7fd64373ca691cd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/892fdb9b3bb2fc0f6d1cab26f7fd64373ca691cd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7bc5c369fae6dda3657467aee14e352a66b4270f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bc5c369fae6dda3657467aee14e352a66b4270f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7bc5c369fae6dda3657467aee14e352a66b4270f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7bc5c369fae6dda3657467aee14e352a66b4270f/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fcef6471ed3c07d6eac2d9e0010552994f0891aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fcef6471ed3c07d6eac2d9e0010552994f0891aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fcef6471ed3c07d6eac2d9e0010552994f0891aa"
    }
  ],
  "stats": {
    "total": 98,
    "additions": 71,
    "deletions": 27
  },
  "files": [
    {
      "sha": "fc8e5bdf3db65e1c396dad08cb3ff4af3d1ae725",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=7bc5c369fae6dda3657467aee14e352a66b4270f",
      "patch": "@@ -21795,14 +21795,14 @@ Indices only work when using DWARF debugging information, not stabs.\n @cindex automatic symbol index cache\n It is possible for @value{GDBN} to automatically save a copy of this index in a\n cache on disk and retrieve it from there when loading the same binary in the\n-future.  This feature can be turned on with @kbd{set index-cache on}.  The\n-following commands can be used to tweak the behavior of the index cache.\n+future.  This feature can be turned on with @kbd{set index-cache enabled on}.\n+The following commands can be used to tweak the behavior of the index cache.\n \n @table @code\n \n @kindex set index-cache\n-@item set index-cache on\n-@itemx set index-cache off\n+@item set index-cache enabled on\n+@itemx set index-cache enabled off\n Enable or disable the use of the symbol index cache.\n \n @item set index-cache directory @var{directory}"
    },
    {
      "sha": "06c27db306ffb446f4355fa82458ec531fe91117",
      "filename": "gdb/dwarf2/index-cache.c",
      "status": "modified",
      "additions": 41,
      "deletions": 10,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/dwarf2/index-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/dwarf2/index-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/index-cache.c?ref=7bc5c369fae6dda3657467aee14e352a66b4270f",
      "patch": "@@ -22,6 +22,7 @@\n \n #include \"build-id.h\"\n #include \"cli/cli-cmds.h\"\n+#include \"cli/cli-decode.h\"\n #include \"command.h\"\n #include \"gdbsupport/scoped_mmap.h\"\n #include \"gdbsupport/pathstuff.h\"\n@@ -267,20 +268,32 @@ show_index_cache_command (const char *arg, int from_tty)\n      global_index_cache.enabled () ? _(\"enabled\") : _(\"disabled\"));\n }\n \n-/* \"set index-cache on\" handler.  */\n+/* \"set/show index-cache enabled\" set callback.  */\n \n static void\n-set_index_cache_on_command (const char *arg, int from_tty)\n+set_index_cache_enabled_command (bool value)\n {\n-  global_index_cache.enable ();\n+  if (value)\n+    global_index_cache.enable ();\n+  else\n+    global_index_cache.disable ();\n+}\n+\n+/* \"set/show index-cache enabled\" get callback.  */\n+\n+static bool\n+get_index_cache_enabled_command ()\n+{\n+  return global_index_cache.enabled ();\n }\n \n-/* \"set index-cache off\" handler.  */\n+/* \"set/show index-cache enabled\" show callback.  */\n \n static void\n-set_index_cache_off_command (const char *arg, int from_tty)\n+show_index_cache_enabled_command (ui_file *stream, int from_tty,\n+\t\t\t\t  cmd_list_element *cmd, const char *value)\n {\n-  global_index_cache.disable ();\n+  fprintf_filtered (stream, _(\"The index cache is %s.\\n\"), value);\n }\n \n /* \"set index-cache directory\" handler.  */\n@@ -342,13 +355,31 @@ _initialize_index_cache ()\n \t\t  _(\"Show index-cache options.\"), &show_index_cache_prefix_list,\n \t\t  false, &showlist);\n \n+  /* set/show index-cache enabled */\n+  set_show_commands setshow_index_cache_enabled_cmds\n+    = add_setshow_boolean_cmd (\"enabled\", class_files,\n+\t\t\t       _(\"Enable the index cache.\"),\n+\t\t\t       _(\"Show whether the index cache is enabled.\"),\n+\t\t\t       _(\"help doc\"),\n+\t\t\t       set_index_cache_enabled_command,\n+\t\t\t       get_index_cache_enabled_command,\n+\t\t\t       show_index_cache_enabled_command,\n+\t\t\t       &set_index_cache_prefix_list,\n+\t\t\t       &show_index_cache_prefix_list);\n+\n   /* set index-cache on */\n-  add_cmd (\"on\", class_files, set_index_cache_on_command,\n-\t   _(\"Enable the index cache.\"), &set_index_cache_prefix_list);\n+  cmd_list_element *set_index_cache_on_cmd\n+    = add_alias_cmd (\"on\", setshow_index_cache_enabled_cmds.set, class_files,\n+\t\t     false, &set_index_cache_prefix_list);\n+  deprecate_cmd (set_index_cache_on_cmd, \"set index-cache enabled on\");\n+  set_index_cache_on_cmd->default_args = \"on\";\n \n   /* set index-cache off */\n-  add_cmd (\"off\", class_files, set_index_cache_off_command,\n-\t   _(\"Disable the index cache.\"), &set_index_cache_prefix_list);\n+  cmd_list_element *set_index_cache_off_cmd\n+    = add_alias_cmd (\"off\", setshow_index_cache_enabled_cmds.set, class_files,\n+\t\t     false, &set_index_cache_prefix_list);\n+  deprecate_cmd (set_index_cache_off_cmd, \"set index-cache enabled off\");\n+  set_index_cache_off_cmd->default_args = \"off\";\n \n   /* set index-cache directory */\n   add_setshow_filename_cmd (\"directory\", class_files, &index_cache_directory,"
    },
    {
      "sha": "c5e9ff5896d627c281221910ef5099e72f8a5ee9",
      "filename": "gdb/testsuite/gdb.base/index-cache.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 7,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/testsuite/gdb.base/index-cache.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/testsuite/gdb.base/index-cache.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/index-cache.exp?ref=7bc5c369fae6dda3657467aee14e352a66b4270f",
      "patch": "@@ -80,7 +80,7 @@ proc run_test_with_flags { cache_dir cache_enabled code } {\n \n     save_vars { GDBFLAGS } {\n \tset GDBFLAGS \"$GDBFLAGS -iex \\\"set index-cache directory $cache_dir\\\"\"\n-\tset GDBFLAGS \"$GDBFLAGS -iex \\\"set index-cache $cache_enabled\\\"\"\n+\tset GDBFLAGS \"$GDBFLAGS -iex \\\"set index-cache enabled $cache_enabled\\\"\"\n \n \tclean_restart ${testfile}\n \n@@ -97,17 +97,30 @@ proc_with_prefix test_basic_stuff { } {\n \n     # Check that the index cache is disabled by default.\n     gdb_test \\\n-\t\"show index-cache\" \\\n-\t\" is currently disabled.\" \\\n+\t\"show index-cache enabled\" \\\n+\t\"The index cache is off.\" \\\n \t\"index-cache is disabled by default\"\n \n-    # Test that we can enable it and \"show index-cache\" reflects that.\n-    gdb_test_no_output \"set index-cache on\" \"enable index cache\"\n+    # Test that we can enable it and \"show index-cache enabled\" reflects that.\n+    gdb_test_no_output \"set index-cache enabled on\" \"enable index cache\"\n     gdb_test \\\n-\t\"show index-cache\" \\\n-\t\" is currently enabled.\" \\\n+\t\"show index-cache enabled\" \\\n+\t\"The index cache is on.\" \\\n \t\"index-cache is now enabled\"\n \n+    with_test_prefix \"deprecated commands\" {\n+        gdb_test \"set index-cache off\" \".*is deprecated.*\" \"disable index cache\"\n+\tgdb_test \\\n+\t    \"show index-cache enabled\" \\\n+\t    \"The index cache is off.\" \\\n+\t    \"index-cache is now disabled\"\n+        gdb_test \"set index-cache on\" \".*is deprecated.*\" \"enable index cache\"\n+\tgdb_test \\\n+\t    \"show index-cache enabled\" \\\n+\t    \"The index cache is on.\" \\\n+\t    \"index-cache is now enabled\"\n+    }\n+\n     # Test the \"set/show index-cache directory\" commands.\n     gdb_test \"set index-cache directory\" \"Argument required.*\" \"set index-cache directory without arg\"\n     gdb_test_no_output \"set index-cache directory /tmp\" \"change the index cache directory\""
    },
    {
      "sha": "4b200879728e07b953d9fe49f90a638c281dd92a",
      "filename": "gdb/testsuite/gdb.base/maint.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/testsuite/gdb.base/maint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/testsuite/gdb.base/maint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint.exp?ref=7bc5c369fae6dda3657467aee14e352a66b4270f",
      "patch": "@@ -131,11 +131,11 @@ gdb_test_multiple \"show index-cache stats\" \"check index cache stats\" {\n }\n \n set using_index_cache 0\n-gdb_test_multiple \"show index-cache\" \"check index cache status\" {\n-    -re \".*is currently disabled.\\r\\n$gdb_prompt $\" {\n+gdb_test_multiple \"show index-cache enabled\" \"check index cache status\" {\n+    -re \".*is off.\\r\\n$gdb_prompt $\" {\n \tset using_index_cache 0\n     }\n-    -re \".*is currently enabled.\\r\\n$gdb_prompt $\" {\n+    -re \".*is on.\\r\\n$gdb_prompt $\" {\n \tset using_index_cache 1\n     }\n }"
    },
    {
      "sha": "47c92d9a26f2fd628338e441229de8cf08e3eb6a",
      "filename": "gdb/testsuite/gdb.dwarf2/per-bfd-sharing.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/testsuite/gdb.dwarf2/per-bfd-sharing.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7bc5c369fae6dda3657467aee14e352a66b4270f/gdb/testsuite/gdb.dwarf2/per-bfd-sharing.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/per-bfd-sharing.exp?ref=7bc5c369fae6dda3657467aee14e352a66b4270f",
      "patch": "@@ -45,7 +45,7 @@ with_test_prefix \"populate index cache\" {\n \n     gdb_test_no_output \"set index-cache directory $cache_dir\" \\\n \t\"set index-cache directory\"\n-    gdb_test_no_output \"set index-cache on\"\n+    gdb_test_no_output \"set index-cache enabled on\"\n     gdb_test \"file $binfile\" \"Reading symbols from .*\" \"file\"\n }\n \n@@ -56,9 +56,9 @@ proc load_binary { method } {\n     if { $method == \"standard\" } {\n \tgdb_test \"file $binfile\" \"Reading symbols from .*\" \"file\"\n     } elseif { $method == \"index\" } {\n-\tgdb_test_no_output \"set index-cache on\"\n+\tgdb_test_no_output \"set index-cache enabled on\"\n \tgdb_test \"file $binfile\" \"Reading symbols from .*\" \"file index\"\n-\tgdb_test_no_output \"set index-cache off\"\n+\tgdb_test_no_output \"set index-cache enabled off\"\n     } elseif { $method == \"readnow\" } {\n \tgdb_test \"file -readnow $binfile\" \\\n \t    \"Reading symbols from .*Expanding full symbols from .*\" \\"
    }
  ]
}