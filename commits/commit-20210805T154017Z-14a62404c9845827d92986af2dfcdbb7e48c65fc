{
  "sha": "14a62404c9845827d92986af2dfcdbb7e48c65fc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTRhNjI0MDRjOTg0NTgyN2Q5Mjk4NmFmMmRmY2RiYjdlNDhjNjVmYw==",
  "commit": {
    "author": {
      "name": "Zoran Zaric",
      "email": "zoran.zaric@amd.com",
      "date": "2020-09-15T11:24:11Z"
    },
    "committer": {
      "name": "Zoran Zaric",
      "email": "zoran.zaric@amd.com",
      "date": "2021-08-05T15:40:17Z"
    },
    "message": "Remove empty frame and full evaluators\n\nThere are no virtual methods that require different specialization in\ndwarf_expr_context class. This means that derived classes\ndwarf_expr_executor and dwarf_evaluate_loc_desc are not needed any\nmore.\n\nAs a result of this, the  evaluate_for_locexpr_baton class base class\nis now the dwarf_expr_context class.\n\nThere might be a need for a better class hierarchy when we know more\nabout the direction of the future DWARF versions and gdb extensions,\nbut that is out of the scope of this patch series.\n\ngdb/ChangeLog:\n\n\t* dwarf2/frame.c (class dwarf_expr_executor): Remove class.\n\t(execute_stack_op): Instantiate dwarf_expr_context instead of\n\tdwarf_evaluate_loc_desc class.\n\t* dwarf2/loc.c (class dwarf_evaluate_loc_desc): Remove class.\n\t(dwarf2_evaluate_loc_desc_full): Instantiate dwarf_expr_context\n\tinstead of dwarf_evaluate_loc_desc class.\n\t(struct evaluate_for_locexpr_baton): Derive from\n\tdwarf_expr_context.",
    "tree": {
      "sha": "b533e9602db2f6a0b86d895d1a7db434e0e1281d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b533e9602db2f6a0b86d895d1a7db434e0e1281d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/14a62404c9845827d92986af2dfcdbb7e48c65fc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14a62404c9845827d92986af2dfcdbb7e48c65fc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/14a62404c9845827d92986af2dfcdbb7e48c65fc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14a62404c9845827d92986af2dfcdbb7e48c65fc/comments",
  "author": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9e739f693f142ac634d9d127bd9951d0c62593c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e739f693f142ac634d9d127bd9951d0c62593c1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9e739f693f142ac634d9d127bd9951d0c62593c1"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 5,
    "deletions": 29
  },
  "files": [
    {
      "sha": "c1219d997ec75f74964f3c5875e67c07d814c811",
      "filename": "gdb/dwarf2/frame.c",
      "status": "modified",
      "additions": 1,
      "deletions": 17,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14a62404c9845827d92986af2dfcdbb7e48c65fc/gdb/dwarf2/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14a62404c9845827d92986af2dfcdbb7e48c65fc/gdb/dwarf2/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/frame.c?ref=14a62404c9845827d92986af2dfcdbb7e48c65fc",
      "patch": "@@ -224,30 +224,14 @@ register %s (#%d) at %s\"),\n     }\n }\n \n-class dwarf_expr_executor : public dwarf_expr_context\n-{\n-public:\n-\n-  dwarf_expr_executor (dwarf2_per_objfile *per_objfile)\n-    : dwarf_expr_context (per_objfile)\n-  {}\n-\n- private:\n-\n-  void invalid (const char *op) ATTRIBUTE_NORETURN\n-  {\n-    error (_(\"%s is invalid in this context\"), op);\n-  }\n-};\n-\n static CORE_ADDR\n execute_stack_op (const gdb_byte *exp, ULONGEST len, int addr_size,\n \t\t  struct frame_info *this_frame, CORE_ADDR initial,\n \t\t  int initial_in_stack_memory, dwarf2_per_objfile *per_objfile)\n {\n   CORE_ADDR result;\n \n-  dwarf_expr_executor ctx (per_objfile);\n+  dwarf_expr_context ctx (per_objfile);\n   scoped_value_mark free_values;\n \n   ctx.frame = this_frame;"
    },
    {
      "sha": "b985f91c8dadb317b838471e6b125e5aaec40e70",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14a62404c9845827d92986af2dfcdbb7e48c65fc/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14a62404c9845827d92986af2dfcdbb7e48c65fc/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=14a62404c9845827d92986af2dfcdbb7e48c65fc",
      "patch": "@@ -660,14 +660,6 @@ sect_variable_value (sect_offset sect_off,\n \t\t\t\t     type, true);\n }\n \n-class dwarf_evaluate_loc_desc : public dwarf_expr_context\n-{\n-public:\n-  dwarf_evaluate_loc_desc (dwarf2_per_objfile *per_objfile)\n-    : dwarf_expr_context (per_objfile)\n-  {}\n-};\n-\n /* See dwarf2loc.h.  */\n \n unsigned int entry_values_debug = 0;\n@@ -2071,7 +2063,7 @@ dwarf2_evaluate_loc_desc_full (struct type *type, struct frame_info *frame,\n   if (size == 0)\n     return allocate_optimized_out_value (subobj_type);\n \n-  dwarf_evaluate_loc_desc ctx (per_objfile);\n+  dwarf_expr_context ctx (per_objfile);\n   ctx.frame = frame;\n   ctx.per_cu = per_cu;\n   ctx.obj_address = 0;\n@@ -2270,16 +2262,16 @@ dwarf2_evaluate_loc_desc (struct type *type, struct frame_info *frame,\n \t\t\t\t\tper_objfile, NULL, 0);\n }\n \n-/* A specialization of dwarf_evaluate_loc_desc that is used by\n+/* A specialization of dwarf_expr_context that is used by\n    dwarf2_locexpr_baton_eval.  This subclass exists to handle the case\n    where a caller of dwarf2_locexpr_baton_eval passes in some data,\n    but with the address being 0.  In this situation, we arrange for\n    memory reads to come from the passed-in buffer.  */\n \n-struct evaluate_for_locexpr_baton : public dwarf_evaluate_loc_desc\n+struct evaluate_for_locexpr_baton : public dwarf_expr_context\n {\n   evaluate_for_locexpr_baton (dwarf2_per_objfile *per_objfile)\n-    : dwarf_evaluate_loc_desc (per_objfile)\n+    : dwarf_expr_context (per_objfile)\n   {}\n \n   /* The data that was passed in.  */"
    }
  ]
}