{
  "sha": "20c4b12e937b20f0998bd25ad37c77145650e826",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjBjNGIxMmU5MzdiMjBmMDk5OGJkMjVhZDM3Yzc3MTQ1NjUwZTgyNg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-07-03T13:00:33Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-07-03T13:00:33Z"
    },
    "message": "Synchronize libiberty sources (and include/demangle.h) with GCC master version",
    "tree": {
      "sha": "bcc05850ae7ed90cedb0368ab7f8b3a88a703500",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bcc05850ae7ed90cedb0368ab7f8b3a88a703500"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/20c4b12e937b20f0998bd25ad37c77145650e826",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20c4b12e937b20f0998bd25ad37c77145650e826",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/20c4b12e937b20f0998bd25ad37c77145650e826",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20c4b12e937b20f0998bd25ad37c77145650e826/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0d03c52682bec990371b2f006e186641cf86f923",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d03c52682bec990371b2f006e186641cf86f923",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0d03c52682bec990371b2f006e186641cf86f923"
    }
  ],
  "stats": {
    "total": 869,
    "additions": 476,
    "deletions": 393
  },
  "files": [
    {
      "sha": "21fe47859005496573be96c1b91785e7e1003b38",
      "filename": "ChangeLog",
      "status": "modified",
      "additions": 82,
      "deletions": 0,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ChangeLog?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -1,3 +1,85 @@\n+2021-07-03  Nick Clifton  <nickc@redhat.com>\n+\n+\t* libiberty: Sync with gcc.  Bring in:\n+\t2021-06-30  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* make-temp-file.c (usrtmp): Remove.\n+\t(choose_tmpdir): Remove use of usrtmp.\n+\n+\t2021-06-28  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\t* simple-object.c (handle_lto_debug_sections): Copy over .BTF section.\n+\n+\t2021-06-28  Indu Bhagat  <indu.bhagat@oracle.com>\n+\t    David Faust  <david.faust@oracle.com>\n+\t    Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\t    Weimin Pan  <weimin.pan@oracle.com>\n+\n+\t* simple-object.c (handle_lto_debug_sections): Copy over .ctf\n+\tsections.\n+\n+\t2021-06-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/100734\n+\t* configure.ac: Use libiberty snprintf and vsnprintf on\n+\thppa*-*-hpux*.\n+\t* configure: Regenerate.\n+\n+\t2021-05-06  Tom Tromey  <tom@tromey.com>\n+\n+\t* hashtab.c (htab_eq_string): New function.\n+\n+\t2021-05-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* configure.ac: Make test for variables more robust.\n+\t* configure: Regenerate.\n+\n+\t2021-05-03  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR bootstrap/99703\n+\t* configure: Regenerated.\n+\n+\t2021-04-21  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\tPR demangler/100177\n+\t* rust-demangle.c (demangle_const_char): Properly print the\n+\tcharacter value.\n+\n+\t2021-03-31  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/88115\n+\t* cp-demangle.c (d_dump, d_make_comp, d_expression_1)\n+\t(d_count_templates_scopes): Handle DEMANGLE_COMPONENT_VENDOR_EXPR.\n+\t(d_print_comp_inner): Likewise.\n+\t<case DEMANGLE_COMPONENT_EXTENDED_OPERATOR>: Revert r11-4926\n+\tchange.\n+\t<case DEMANGLE_COMPONENT_UNARY>: Likewise.\n+\t* testsuite/demangle-expected: Adjust __alignof__ tests.\n+\n+\t2021-03-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* sha1.c (sha1_process_bytes): Use memmove in place of memcpy.\n+\n+\t2021-02-20  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (ACLOCAL, ACLOCAL_AMFLAGS, $(srcdir)/aclocal.m4): Define.\n+\t(configure_deps): Rename to ...\n+\t(aclocal_deps): ... this.  Replace aclocal.m4 with acinclude.m4.\n+\t($(srcdir)/configure): Replace $(configure_deps) with\n+\t$(srcdir)/aclocal.m4.\n+\t* aclocal.m4: Move libiberty macros to acinclude.m4, then regenerate.\n+\t* acinclude.m4: New file.\n+\t* configure: Regenerate.\n+\n+\t2021-02-19  Ayush Mittal  <ayush.m@samsung.com>\n+\n+\t* argv.c (expandargv): free allocated buffer if read fails.\n+\n+\t2021-02-01  Martin Sebor  <msebor@redhat.com>\n+\n+\t* dyn-string.c (dyn_string_insert_cstr): Use memcpy instead of strncpy\n+\tto avoid -Wstringop-truncation.\n+\n 2021-05-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac: Add gnulib to configdirs for sim."
    },
    {
      "sha": "eef7451c20d846c37cd141715353ab7f2a854bc7",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -1,3 +1,12 @@\n+2021-07-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tImport from gcc mainline:\n+\t2021-03-31  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/88115\n+\t* demangle.h (enum demangle_component_type): Add\n+\tDEMANGLE_COMPONENT_VENDOR_EXPR.\n+\n 2021-07-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* opcode/aarch64.h (aarch64_opcode_table): Mark const."
    },
    {
      "sha": "295d58cb4541d4a7200d92086454c5048329ba36",
      "filename": "include/demangle.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/include/demangle.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/include/demangle.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/demangle.h?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -408,6 +408,9 @@ enum demangle_component_type\n      number which involves neither modifying the mangled string nor\n      allocating a new copy of the literal in memory.  */\n   DEMANGLE_COMPONENT_LITERAL_NEG,\n+  /* A vendor's builtin expression.  The left subtree holds the\n+     expression's name, and the right subtree is a argument list.  */\n+  DEMANGLE_COMPONENT_VENDOR_EXPR,\n   /* A libgcj compiled resource.  The left subtree is the name of the\n      resource.  */\n   DEMANGLE_COMPONENT_JAVA_RESOURCE,"
    },
    {
      "sha": "0143d429eb881ece9481cc95b73a84aa66f1af40",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 72,
      "deletions": 13,
      "changes": 85,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -1,23 +1,82 @@\n-2021-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n+2021-06-30  Gerald Pfeifer  <gerald@pfeifer.com>\n \n-\tPR binutils/27397\n-\t* configure: Regenerated.\n+\t* make-temp-file.c (usrtmp): Remove.\n+\t(choose_tmpdir): Remove use of usrtmp.\n \n-2021-01-11  H.J. Lu  <hongjiu.lu@intel.com>\n+2021-06-28  Indu Bhagat  <indu.bhagat@oracle.com>\n \n-\tPR ld/27173\n-\t* configure: Regenerated.\n+\t* simple-object.c (handle_lto_debug_sections): Copy over .BTF section.\n+\n+2021-06-28  Indu Bhagat  <indu.bhagat@oracle.com>\n+\t    David Faust  <david.faust@oracle.com>\n+\t    Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\t    Weimin Pan  <weimin.pan@oracle.com>\n+\n+\t* simple-object.c (handle_lto_debug_sections): Copy over .ctf\n+\tsections.\n+\n+2021-06-05  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR target/100734\n+\t* configure.ac: Use libiberty snprintf and vsnprintf on\n+\thppa*-*-hpux*.\n+\t* configure: Regenerate.\n \n-2021-01-09  H.J. Lu  <hongjiu.lu@intel.com>\n+2021-05-06  Tom Tromey  <tom@tromey.com>\n \n-\t* Makefile.in (AR): Add @AR_PLUGIN_OPTION@\n-\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n-\t(configure_deps): Depend on ../config/gcc-plugin.m4.\n-\t* aclocal.m4: Include ../config/gcc-plugin.m4.\n-\t* configure.ac: AC_SUBST AR_PLUGIN_OPTION and\n-\tRANLIB_PLUGIN_OPTION.\n+\t* hashtab.c (htab_eq_string): New function.\n+\n+2021-05-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* configure.ac: Make test for variables more robust.\n+\t* configure: Regenerate.\n+\n+2021-05-03  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR bootstrap/99703\n \t* configure: Regenerated.\n \n+2021-04-21  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\tPR demangler/100177\n+\t* rust-demangle.c (demangle_const_char): Properly print the\n+\tcharacter value.\n+\n+2021-03-31  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/88115\n+\t* cp-demangle.c (d_dump, d_make_comp, d_expression_1)\n+\t(d_count_templates_scopes): Handle DEMANGLE_COMPONENT_VENDOR_EXPR.\n+\t(d_print_comp_inner): Likewise.\n+\t<case DEMANGLE_COMPONENT_EXTENDED_OPERATOR>: Revert r11-4926\n+\tchange.\n+\t<case DEMANGLE_COMPONENT_UNARY>: Likewise.\n+\t* testsuite/demangle-expected: Adjust __alignof__ tests.\n+\n+2021-03-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* sha1.c (sha1_process_bytes): Use memmove in place of memcpy.\n+\n+2021-02-20  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (ACLOCAL, ACLOCAL_AMFLAGS, $(srcdir)/aclocal.m4): Define.\n+\t(configure_deps): Rename to ...\n+\t(aclocal_deps): ... this.  Replace aclocal.m4 with acinclude.m4.\n+\t($(srcdir)/configure): Replace $(configure_deps) with\n+\t$(srcdir)/aclocal.m4.\n+\t* aclocal.m4: Move libiberty macros to acinclude.m4, then regenerate.\n+\t* acinclude.m4: New file.\n+\t* configure: Regenerate.\n+\n+2021-02-19  Ayush Mittal  <ayush.m@samsung.com>\n+\n+\t* argv.c (expandargv): free allocated buffer if read fails.\n+\n+2021-02-01  Martin Sebor  <msebor@redhat.com>\n+\n+\t* dyn-string.c (dyn_string_insert_cstr): Use memcpy instead of strncpy\n+\tto avoid -Wstringop-truncation.\n+\n 2021-01-04  Martin Liska  <mliska@suse.cz>\n \n \t* strverscmp.c: Convert to utf8 from iso8859."
    },
    {
      "sha": "4f1213b983b6cc6ce868cc712b36724e8bcba998",
      "filename": "libiberty/Makefile.in",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/Makefile.in?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -49,13 +49,13 @@ mkinstalldirs = $(SHELL) $(libiberty_topdir)/mkinstalldirs\n # Some compilers can't handle cc -c blah.c -o foo/blah.o.\n OUTPUT_OPTION = @OUTPUT_OPTION@\n \n-AR = @AR@ @AR_PLUGIN_OPTION@\n+AR = @AR@\n AR_FLAGS = rc\n \n CC = @CC@\n CFLAGS = @CFLAGS@\n CPPFLAGS = @CPPFLAGS@\n-RANLIB = @RANLIB@ @RANLIB_PLUGIN_OPTION@\n+RANLIB = @RANLIB@\n MAKEINFO = @MAKEINFO@\n PERL = @PERL@\n \n@@ -481,19 +481,24 @@ config.status: $(srcdir)/configure\n \t$(SHELL) ./config.status --recheck\n \n AUTOCONF = autoconf\n-configure_deps = $(srcdir)/aclocal.m4 \\\n+ACLOCAL = aclocal\n+ACLOCAL_AMFLAGS = -I ../config -I ..\n+aclocal_deps = \\\n \t$(srcdir)/../config/acx.m4 \\\n \t$(srcdir)/../config/cet.m4 \\\n \t$(srcdir)/../config/enable.m4 \\\n-\t$(srcdir)/../config/gcc-plugin.m4 \\\n \t$(srcdir)/../config/no-executables.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n \t$(srcdir)/../config/picflag.m4 \\\n-\t$(srcdir)/../config/warnings.m4\n+\t$(srcdir)/../config/warnings.m4 \\\n+\t$(srcdir)/acinclude.m4\n \n-$(srcdir)/configure: @MAINT@ $(srcdir)/configure.ac $(configure_deps)\n+$(srcdir)/configure: @MAINT@ $(srcdir)/configure.ac $(srcdir)/aclocal.m4\n \tcd $(srcdir) && $(AUTOCONF)\n \n+$(srcdir)/aclocal.m4: @MAINT@ $(aclocal_deps)\n+\tcd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n+\n # Depending on config.h makes sure that config.status has been re-run\n # if needed.  This prevents problems with parallel builds, in case\n # subdirectories need to run config.status also."
    },
    {
      "sha": "6db0e50851712eaad6c64f3874d1bd9cf7c84e56",
      "filename": "libiberty/acinclude.m4",
      "status": "added",
      "additions": 185,
      "deletions": 0,
      "changes": 185,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/acinclude.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/acinclude.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/acinclude.m4?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -0,0 +1,185 @@\n+dnl Copyright (C) 2000-2021 Free Software Foundation, Inc.\n+dnl\n+dnl GCC is free software; you can redistribute it and/or modify\n+dnl it under the terms of the GNU General Public License as published by\n+dnl the Free Software Foundation; either version 3, or (at your option)\n+dnl any later version.\n+dnl\n+dnl GCC is distributed in the hope that it will be useful,\n+dnl but WITHOUT ANY WARRANTY; without even the implied warranty of\n+dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+dnl GNU General Public License for more details.\n+dnl\n+dnl You should have received a copy of the GNU General Public License\n+dnl along with GCC; see the file COPYING3.  If not see\n+dnl <http://www.gnu.org/licenses/>.\n+\n+dnl See whether strncmp reads past the end of its string parameters.\n+dnl On some versions of SunOS4 at least, strncmp reads a word at a time\n+dnl but erroneously reads past the end of strings.  This can cause\n+dnl a SEGV in some cases.\n+AC_DEFUN([libiberty_AC_FUNC_STRNCMP],\n+[AC_REQUIRE([AC_FUNC_MMAP])\n+AC_CACHE_CHECK([for working strncmp], ac_cv_func_strncmp_works,\n+[AC_TRY_RUN([\n+/* Test by Jim Wilson and Kaveh Ghazi.\n+   Check whether strncmp reads past the end of its string parameters. */\n+#include <sys/types.h>\n+\n+#ifdef HAVE_FCNTL_H\n+#include <fcntl.h>\n+#endif\n+\n+#ifdef HAVE_SYS_MMAN_H\n+#include <sys/mman.h>\n+#endif\n+\n+#ifndef MAP_ANON\n+#ifdef MAP_ANONYMOUS\n+#define MAP_ANON MAP_ANONYMOUS\n+#else\n+#define MAP_ANON MAP_FILE\n+#endif\n+#endif\n+\n+#ifndef MAP_FILE\n+#define MAP_FILE 0\n+#endif\n+#ifndef O_RDONLY\n+#define O_RDONLY 0\n+#endif\n+\n+#define MAP_LEN 0x10000\n+\n+main ()\n+{\n+#if defined(HAVE_MMAP) || defined(HAVE_MMAP_ANYWHERE)\n+  char *p;\n+  int dev_zero;\n+\n+  dev_zero = open (\"/dev/zero\", O_RDONLY);\n+  if (dev_zero < 0)\n+    exit (1);\n+\n+  p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n+\t\t     MAP_ANON|MAP_PRIVATE, dev_zero, 0);\n+  if (p == (char *)-1)\n+    p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n+\t\t       MAP_ANON|MAP_PRIVATE, -1, 0);\n+  if (p == (char *)-1)\n+    exit (2);\n+  else\n+    {\n+      char *string = \"__si_type_info\";\n+      char *q = (char *) p + MAP_LEN - strlen (string) - 2;\n+      char *r = (char *) p + 0xe;\n+\n+      strcpy (q, string);\n+      strcpy (r, string);\n+      strncmp (r, q, 14);\n+    }\n+#endif /* HAVE_MMAP || HAVE_MMAP_ANYWHERE */\n+  exit (0);\n+}\n+], ac_cv_func_strncmp_works=yes, ac_cv_func_strncmp_works=no,\n+  ac_cv_func_strncmp_works=yes)\n+rm -f core core.* *.core])\n+if test $ac_cv_func_strncmp_works = no ; then\n+  AC_LIBOBJ([strncmp])\n+fi\n+])\n+\n+dnl See if errno must be declared even when <errno.h> is included.\n+AC_DEFUN([libiberty_AC_DECLARE_ERRNO],\n+[AC_CACHE_CHECK(whether errno must be declared, libiberty_cv_declare_errno,\n+[AC_TRY_COMPILE(\n+[#include <errno.h>],\n+[int x = errno;],\n+libiberty_cv_declare_errno=no,\n+libiberty_cv_declare_errno=yes)])\n+if test $libiberty_cv_declare_errno = yes\n+then AC_DEFINE(NEED_DECLARATION_ERRNO, 1,\n+  [Define if errno must be declared even when <errno.h> is included.])\n+fi\n+])\n+\n+dnl See whether we need a declaration for a function.\n+AC_DEFUN([libiberty_NEED_DECLARATION],\n+[AC_MSG_CHECKING([whether $1 must be declared])\n+AC_CACHE_VAL(libiberty_cv_decl_needed_$1,\n+[AC_TRY_COMPILE([\n+#include \"confdefs.h\"\n+#include <stdio.h>\n+#ifdef HAVE_STRING_H\n+#include <string.h>\n+#else\n+#ifdef HAVE_STRINGS_H\n+#include <strings.h>\n+#endif\n+#endif\n+#ifdef HAVE_STDLIB_H\n+#include <stdlib.h>\n+#endif\n+#ifdef HAVE_UNISTD_H\n+#include <unistd.h>\n+#endif],\n+[char *(*pfn) = (char *(*)) $1],\n+libiberty_cv_decl_needed_$1=no, libiberty_cv_decl_needed_$1=yes)])\n+AC_MSG_RESULT($libiberty_cv_decl_needed_$1)\n+if test $libiberty_cv_decl_needed_$1 = yes; then\n+  AC_DEFINE([NEED_DECLARATION_]translit($1, [a-z], [A-Z]), 1,\n+            [Define if $1 is not declared in system header files.])\n+fi\n+])dnl\n+\n+# We always want a C version of alloca() compiled into libiberty,\n+# because native-compiler support for the real alloca is so !@#$%\n+# unreliable that GCC has decided to use it only when being compiled\n+# by GCC.  This is the part of AC_FUNC_ALLOCA that calculates the\n+# information alloca.c needs.\n+AC_DEFUN([libiberty_AC_FUNC_C_ALLOCA],\n+[AC_CACHE_CHECK(whether alloca needs Cray hooks, ac_cv_os_cray,\n+[AC_EGREP_CPP(webecray,\n+[#if defined(CRAY) && ! defined(CRAY2)\n+webecray\n+#else\n+wenotbecray\n+#endif\n+], ac_cv_os_cray=yes, ac_cv_os_cray=no)])\n+if test $ac_cv_os_cray = yes; then\n+  for ac_func in _getb67 GETB67 getb67; do\n+    AC_CHECK_FUNC($ac_func,\n+      [AC_DEFINE_UNQUOTED(CRAY_STACKSEG_END, $ac_func,\n+  [Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP\n+   systems. This function is required for alloca.c support on those\n+   systems.])  break])\n+  done\n+fi\n+\n+AC_CACHE_CHECK(stack direction for C alloca, ac_cv_c_stack_direction,\n+[AC_TRY_RUN([find_stack_direction ()\n+{\n+  static char *addr = 0;\n+  auto char dummy;\n+  if (addr == 0)\n+    {\n+      addr = &dummy;\n+      return find_stack_direction ();\n+    }\n+  else\n+    return (&dummy > addr) ? 1 : -1;\n+}\n+main ()\n+{\n+  exit (find_stack_direction() < 0);\n+}],\n+  ac_cv_c_stack_direction=1,\n+  ac_cv_c_stack_direction=-1,\n+  ac_cv_c_stack_direction=0)])\n+AC_DEFINE_UNQUOTED(STACK_DIRECTION, $ac_cv_c_stack_direction,\n+  [Define if you know the direction of stack growth for your system;\n+   otherwise it will be automatically deduced at run-time.\n+        STACK_DIRECTION > 0 => grows toward higher addresses\n+        STACK_DIRECTION < 0 => grows toward lower addresses\n+        STACK_DIRECTION = 0 => direction of growth unknown])\n+])"
    },
    {
      "sha": "3378316dced982635e91397312018e5ea1f5f6e4",
      "filename": "libiberty/aclocal.m4",
      "status": "modified",
      "additions": 21,
      "deletions": 178,
      "changes": 199,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/aclocal.m4?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -1,178 +1,21 @@\n-sinclude(../config/acx.m4)\n-sinclude(../config/cet.m4)\n-sinclude(../config/enable.m4)\n-sinclude(../config/gcc-plugin.m4)\n-sinclude(../config/no-executables.m4)\n-sinclude(../config/override.m4)\n-sinclude(../config/picflag.m4)\n-sinclude(../config/warnings.m4)\n-\n-dnl See whether strncmp reads past the end of its string parameters.\n-dnl On some versions of SunOS4 at least, strncmp reads a word at a time\n-dnl but erroneously reads past the end of strings.  This can cause\n-dnl a SEGV in some cases.\n-AC_DEFUN(libiberty_AC_FUNC_STRNCMP,\n-[AC_REQUIRE([AC_FUNC_MMAP])\n-AC_CACHE_CHECK([for working strncmp], ac_cv_func_strncmp_works,\n-[AC_TRY_RUN([\n-/* Test by Jim Wilson and Kaveh Ghazi.\n-   Check whether strncmp reads past the end of its string parameters. */\n-#include <sys/types.h>\n-\n-#ifdef HAVE_FCNTL_H\n-#include <fcntl.h>\n-#endif\n-\n-#ifdef HAVE_SYS_MMAN_H\n-#include <sys/mman.h>\n-#endif\n-\n-#ifndef MAP_ANON\n-#ifdef MAP_ANONYMOUS\n-#define MAP_ANON MAP_ANONYMOUS\n-#else\n-#define MAP_ANON MAP_FILE\n-#endif\n-#endif\n-\n-#ifndef MAP_FILE\n-#define MAP_FILE 0\n-#endif\n-#ifndef O_RDONLY\n-#define O_RDONLY 0\n-#endif\n-\n-#define MAP_LEN 0x10000\n-\n-main ()\n-{\n-#if defined(HAVE_MMAP) || defined(HAVE_MMAP_ANYWHERE)\n-  char *p;\n-  int dev_zero;\n-\n-  dev_zero = open (\"/dev/zero\", O_RDONLY);\n-  if (dev_zero < 0)\n-    exit (1);\n-  \n-  p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n-\t\t     MAP_ANON|MAP_PRIVATE, dev_zero, 0);\n-  if (p == (char *)-1)\n-    p = (char *) mmap (0, MAP_LEN, PROT_READ|PROT_WRITE,\n-\t\t       MAP_ANON|MAP_PRIVATE, -1, 0);\n-  if (p == (char *)-1)\n-    exit (2);\n-  else\n-    {\n-      char *string = \"__si_type_info\";\n-      char *q = (char *) p + MAP_LEN - strlen (string) - 2;\n-      char *r = (char *) p + 0xe;\n-\n-      strcpy (q, string);\n-      strcpy (r, string);\n-      strncmp (r, q, 14);\n-    }\n-#endif /* HAVE_MMAP || HAVE_MMAP_ANYWHERE */\n-  exit (0);\n-}\n-], ac_cv_func_strncmp_works=yes, ac_cv_func_strncmp_works=no,\n-  ac_cv_func_strncmp_works=yes)\n-rm -f core core.* *.core])\n-if test $ac_cv_func_strncmp_works = no ; then\n-  AC_LIBOBJ([strncmp])\n-fi\n-])\n-\n-dnl See if errno must be declared even when <errno.h> is included.\n-AC_DEFUN(libiberty_AC_DECLARE_ERRNO,\n-[AC_CACHE_CHECK(whether errno must be declared, libiberty_cv_declare_errno,\n-[AC_TRY_COMPILE(\n-[#include <errno.h>],\n-[int x = errno;],\n-libiberty_cv_declare_errno=no,\n-libiberty_cv_declare_errno=yes)])\n-if test $libiberty_cv_declare_errno = yes\n-then AC_DEFINE(NEED_DECLARATION_ERRNO, 1,\n-  [Define if errno must be declared even when <errno.h> is included.])\n-fi\n-])\n-\n-dnl See whether we need a declaration for a function.\n-AC_DEFUN(libiberty_NEED_DECLARATION,\n-[AC_MSG_CHECKING([whether $1 must be declared])\n-AC_CACHE_VAL(libiberty_cv_decl_needed_$1,\n-[AC_TRY_COMPILE([\n-#include \"confdefs.h\"\n-#include <stdio.h>\n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#else\n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>\n-#endif\n-#endif\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-#ifdef HAVE_UNISTD_H\n-#include <unistd.h>\n-#endif],\n-[char *(*pfn) = (char *(*)) $1],\n-libiberty_cv_decl_needed_$1=no, libiberty_cv_decl_needed_$1=yes)])\n-AC_MSG_RESULT($libiberty_cv_decl_needed_$1)\n-if test $libiberty_cv_decl_needed_$1 = yes; then\n-  AC_DEFINE([NEED_DECLARATION_]translit($1, [a-z], [A-Z]), 1,\n-            [Define if $1 is not declared in system header files.])\n-fi\n-])dnl\n-\n-# We always want a C version of alloca() compiled into libiberty,\n-# because native-compiler support for the real alloca is so !@#$%\n-# unreliable that GCC has decided to use it only when being compiled\n-# by GCC.  This is the part of AC_FUNC_ALLOCA that calculates the\n-# information alloca.c needs.\n-AC_DEFUN(libiberty_AC_FUNC_C_ALLOCA,\n-[AC_CACHE_CHECK(whether alloca needs Cray hooks, ac_cv_os_cray,\n-[AC_EGREP_CPP(webecray,\n-[#if defined(CRAY) && ! defined(CRAY2)\n-webecray\n-#else\n-wenotbecray\n-#endif\n-], ac_cv_os_cray=yes, ac_cv_os_cray=no)])\n-if test $ac_cv_os_cray = yes; then\n-  for ac_func in _getb67 GETB67 getb67; do\n-    AC_CHECK_FUNC($ac_func, \n-      [AC_DEFINE_UNQUOTED(CRAY_STACKSEG_END, $ac_func, \n-  [Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP\n-   systems. This function is required for alloca.c support on those\n-   systems.])  break])\n-  done\n-fi\n-\n-AC_CACHE_CHECK(stack direction for C alloca, ac_cv_c_stack_direction,\n-[AC_TRY_RUN([find_stack_direction ()\n-{\n-  static char *addr = 0;\n-  auto char dummy;\n-  if (addr == 0)\n-    {\n-      addr = &dummy;\n-      return find_stack_direction ();\n-    }\n-  else\n-    return (&dummy > addr) ? 1 : -1;\n-}\n-main ()\n-{\n-  exit (find_stack_direction() < 0);\n-}], \n-  ac_cv_c_stack_direction=1,\n-  ac_cv_c_stack_direction=-1,\n-  ac_cv_c_stack_direction=0)])\n-AC_DEFINE_UNQUOTED(STACK_DIRECTION, $ac_cv_c_stack_direction,\n-  [Define if you know the direction of stack growth for your system;\n-   otherwise it will be automatically deduced at run-time.\n-        STACK_DIRECTION > 0 => grows toward higher addresses\n-        STACK_DIRECTION < 0 => grows toward lower addresses\n-        STACK_DIRECTION = 0 => direction of growth unknown])\n-])\n+# generated automatically by aclocal 1.15.1 -*- Autoconf -*-\n+\n+# Copyright (C) 1996-2017 Free Software Foundation, Inc.\n+\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+m4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])\n+m4_include([../config/acx.m4])\n+m4_include([../config/cet.m4])\n+m4_include([../config/enable.m4])\n+m4_include([../config/no-executables.m4])\n+m4_include([../config/picflag.m4])\n+m4_include([../config/warnings.m4])\n+m4_include([acinclude.m4])"
    },
    {
      "sha": "48dcd102461f69d70331a73975109ddbc5766e66",
      "filename": "libiberty/argv.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/argv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/argv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/argv.c?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -442,7 +442,10 @@ expandargv (int *argcp, char ***argvp)\n \t     due to CR/LF->CR translation when reading text files.\n \t     That does not in-and-of itself indicate failure.  */\n \t  && ferror (f))\n-\tgoto error;\n+\t{\n+\t  free (buffer);\n+\t  goto error;\n+\t}\n       /* Add a NUL terminator.  */\n       buffer[len] = '\\0';\n       /* If the file is empty or contains only whitespace, buildargv would"
    },
    {
      "sha": "f7449d6a3684ca867d2cb4ff2cfc39b265f31058",
      "filename": "libiberty/configure",
      "status": "modified",
      "additions": 38,
      "deletions": 151,
      "changes": 189,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -645,8 +645,6 @@ CPPFLAGS\n LDFLAGS\n CFLAGS\n CC\n-RANLIB_PLUGIN_OPTION\n-AR_PLUGIN_OPTION\n RANLIB\n AR\n host_os\n@@ -683,6 +681,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -762,6 +761,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE}'\n@@ -1014,6 +1014,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1151,7 +1160,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1304,6 +1313,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -2460,9 +2470,6 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n-\n-\n-\n # This works around the fact that libtool configuration may change LD\n # for this particular configuration, but some shells, instead of\n # keeping the changes in LD private, export them just because LD is\n@@ -2934,144 +2941,6 @@ else\n fi\n \n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -plugin option\" >&5\n-$as_echo_n \"checking for -plugin option... \" >&6; }\n-\n-plugin_names=\"liblto_plugin.so liblto_plugin-0.dll cyglto_plugin-0.dll\"\n-plugin_option=\n-for plugin in $plugin_names; do\n-  plugin_so=`${CC} ${CFLAGS} --print-prog-name $plugin`\n-  if test x$plugin_so = x$plugin; then\n-    plugin_so=`${CC} ${CFLAGS} --print-file-name $plugin`\n-  fi\n-  if test x$plugin_so != x$plugin; then\n-    plugin_option=\"--plugin $plugin_so\"\n-    break\n-  fi\n-done\n-if test -n \"$ac_tool_prefix\"; then\n-  # Extract the first word of \"${ac_tool_prefix}ar\", so it can be a program name with args.\n-set dummy ${ac_tool_prefix}ar; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if ${ac_cv_prog_AR+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if test -n \"$AR\"; then\n-  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_AR=\"${ac_tool_prefix}ar\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-fi\n-fi\n-AR=$ac_cv_prog_AR\n-if test -n \"$AR\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\n-$as_echo \"$AR\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-\n-fi\n-if test -z \"$ac_cv_prog_AR\"; then\n-  ac_ct_AR=$AR\n-  # Extract the first word of \"ar\", so it can be a program name with args.\n-set dummy ar; ac_word=$2\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n-$as_echo_n \"checking for $ac_word... \" >&6; }\n-if ${ac_cv_prog_ac_ct_AR+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  if test -n \"$ac_ct_AR\"; then\n-  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\n-else\n-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-    for ac_exec_ext in '' $ac_executable_extensions; do\n-  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_prog_ac_ct_AR=\"ar\"\n-    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-  done\n-IFS=$as_save_IFS\n-\n-fi\n-fi\n-ac_ct_AR=$ac_cv_prog_ac_ct_AR\n-if test -n \"$ac_ct_AR\"; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\n-$as_echo \"$ac_ct_AR\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-  if test \"x$ac_ct_AR\" = x; then\n-    AR=\"\"\n-  else\n-    case $cross_compiling:$ac_tool_warned in\n-yes:)\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n-$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n-ac_tool_warned=yes ;;\n-esac\n-    AR=$ac_ct_AR\n-  fi\n-else\n-  AR=\"$ac_cv_prog_AR\"\n-fi\n-\n-if test \"${AR}\" = \"\" ; then\n-  as_fn_error $? \"Required archive tool 'ar' not found on PATH.\" \"$LINENO\" 5\n-fi\n-touch conftest.c\n-${AR} $plugin_option rc conftest.a conftest.c\n-if test \"$?\" != 0; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Failed: $AR $plugin_option rc\" >&5\n-$as_echo \"$as_me: WARNING: Failed: $AR $plugin_option rc\" >&2;}\n-  plugin_option=\n-fi\n-rm -f conftest.*\n-if test -n \"$plugin_option\"; then\n-  PLUGIN_OPTION=\"$plugin_option\"\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $plugin_option\" >&5\n-$as_echo \"$plugin_option\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-fi\n-\n-if test -n \"$PLUGIN_OPTION\"; then\n-  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n-    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-\n-  fi\n-  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n-    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-\n-  fi\n-fi\n-\n # Add --enable-multilib to configure.\n # Default to --enable-multilib\n # Check whether --enable-multilib was given.\n@@ -4426,7 +4295,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4472,7 +4341,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4496,7 +4365,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4541,7 +4410,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4565,7 +4434,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -6731,6 +6600,22 @@ if test -z \"${setobjs}\"; then\n     ac_cv_func_getpagesize=yes\n     ;;\n \n+  hppa*-*-hpux*)\n+    # Replace system snprintf and vsnprintf with libiberty implementations.\n+    case \" $LIBOBJS \" in\n+  *\" snprintf.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS snprintf.$ac_objext\"\n+ ;;\n+esac\n+\n+    case \" $LIBOBJS \" in\n+  *\" vsnprintf.$ac_objext \"* ) ;;\n+  *) LIBOBJS=\"$LIBOBJS vsnprintf.$ac_objext\"\n+ ;;\n+esac\n+\n+    ;;\n+\n   *-*-mingw32*)\n     # Under mingw32, sys_nerr and sys_errlist exist, but they are\n     # macros, so the test below won't find them.\n@@ -7192,11 +7077,11 @@ else\n fi\n cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-int *p;\n+extern int $v [];\n int\n main ()\n {\n-extern int $v []; p = $v;\n+if ($v [0]) return 1;\n   ;\n   return 0;\n }\n@@ -7690,6 +7575,8 @@ main ()\n     if (*(data + i) != *(data3 + i))\n       return 14;\n   close (fd);\n+  free (data);\n+  free (data3);\n   return 0;\n }\n _ACEOF"
    },
    {
      "sha": "a85ff25501adc5bfa576045cd652e81f09a182a4",
      "filename": "libiberty/configure.ac",
      "status": "modified",
      "additions": 7,
      "deletions": 13,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure.ac?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -108,18 +108,6 @@ dnl to call AC_CHECK_PROG.\n AC_CHECK_TOOL(AR, ar)\n AC_CHECK_TOOL(RANLIB, ranlib, :)\n \n-GCC_PLUGIN_OPTION(PLUGIN_OPTION)\n-if test -n \"$PLUGIN_OPTION\"; then\n-  if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n-    AR_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-    AC_SUBST(AR_PLUGIN_OPTION)\n-  fi\n-  if $RANLIB --help 2>&1 | grep -q \"\\--plugin\"; then\n-    RANLIB_PLUGIN_OPTION=\"$PLUGIN_OPTION\"\n-    AC_SUBST(RANLIB_PLUGIN_OPTION)\n-  fi\n-fi\n-\n dnl When switching to automake, replace the following with AM_ENABLE_MULTILIB.\n # Add --enable-multilib to configure.\n # Default to --enable-multilib\n@@ -623,6 +611,12 @@ if test -z \"${setobjs}\"; then\n     ac_cv_func_getpagesize=yes\n     ;;\n \n+  hppa*-*-hpux*)\n+    # Replace system snprintf and vsnprintf with libiberty implementations.\n+    AC_LIBOBJ([snprintf])\n+    AC_LIBOBJ([vsnprintf])\n+    ;;\n+\n   *-*-mingw32*)\n     # Under mingw32, sys_nerr and sys_errlist exist, but they are\n     # macros, so the test below won't find them.\n@@ -677,7 +671,7 @@ if test -z \"${setobjs}\"; then\n   for v in $vars; do\n     AC_MSG_CHECKING([for $v])\n     AC_CACHE_VAL(libiberty_cv_var_$v,\n-      [AC_LINK_IFELSE([AC_LANG_PROGRAM([[int *p;]],[[extern int $v []; p = $v;]])],\n+      [AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern int $v [];]],[[if ($v [0]) return 1;]])],\n \t\t      [eval \"libiberty_cv_var_$v=yes\"],\n \t\t      [eval \"libiberty_cv_var_$v=no\"])])\n     if eval \"test \\\"`echo '$libiberty_cv_var_'$v`\\\" = yes\"; then"
    },
    {
      "sha": "33490f60285467c104bc3eca98ed9815ea28ed00",
      "filename": "libiberty/cp-demangle.c",
      "status": "modified",
      "additions": 27,
      "deletions": 20,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/cp-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/cp-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.c?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -815,6 +815,9 @@ d_dump (struct demangle_component *dc, int indent)\n     case DEMANGLE_COMPONENT_LITERAL_NEG:\n       printf (\"negative literal\\n\");\n       break;\n+    case DEMANGLE_COMPONENT_VENDOR_EXPR:\n+      printf (\"vendor expression\\n\");\n+      break;\n     case DEMANGLE_COMPONENT_JAVA_RESOURCE:\n       printf (\"java resource\\n\");\n       break;\n@@ -976,6 +979,7 @@ d_make_comp (struct d_info *di, enum demangle_component_type type,\n     case DEMANGLE_COMPONENT_TRINARY_ARG1:\n     case DEMANGLE_COMPONENT_LITERAL:\n     case DEMANGLE_COMPONENT_LITERAL_NEG:\n+    case DEMANGLE_COMPONENT_VENDOR_EXPR:\n     case DEMANGLE_COMPONENT_COMPOUND_NAME:\n     case DEMANGLE_COMPONENT_VECTOR_TYPE:\n     case DEMANGLE_COMPONENT_CLONE:\n@@ -3344,6 +3348,7 @@ d_unresolved_name (struct d_info *di)\n \t\t::= cl <expression>+ E\n                 ::= st <type>\n                 ::= <template-param>\n+\t\t::= u <source-name> <template-arg>* E # vendor extended expression\n \t\t::= <unresolved-name>\n                 ::= <expr-primary>\n \n@@ -3425,6 +3430,15 @@ d_expression_1 (struct d_info *di)\n       return d_make_comp (di, DEMANGLE_COMPONENT_INITIALIZER_LIST,\n \t\t\t  type, d_exprlist (di, 'E'));\n     }\n+  else if (peek == 'u')\n+    {\n+      /* A vendor extended expression.  */\n+      struct demangle_component *name, *args;\n+      d_advance (di, 1);\n+      name = d_source_name (di);\n+      args = d_template_args_1 (di);\n+      return d_make_comp (di, DEMANGLE_COMPONENT_VENDOR_EXPR, name, args);\n+    }\n   else\n     {\n       struct demangle_component *op;\n@@ -4229,6 +4243,7 @@ d_count_templates_scopes (struct d_print_info *dpi,\n     case DEMANGLE_COMPONENT_TRINARY_ARG2:\n     case DEMANGLE_COMPONENT_LITERAL:\n     case DEMANGLE_COMPONENT_LITERAL_NEG:\n+    case DEMANGLE_COMPONENT_VENDOR_EXPR:\n     case DEMANGLE_COMPONENT_JAVA_RESOURCE:\n     case DEMANGLE_COMPONENT_COMPOUND_NAME:\n     case DEMANGLE_COMPONENT_DECLTYPE:\n@@ -5509,18 +5524,9 @@ d_print_comp_inner (struct d_print_info *dpi, int options,\n       }\n \n     case DEMANGLE_COMPONENT_EXTENDED_OPERATOR:\n-      {\n-\tstruct demangle_component *name = dc->u.s_extended_operator.name;\n-\tif (name->type == DEMANGLE_COMPONENT_NAME\n-\t    && !strncmp (name->u.s_name.s, \"__alignof__\", name->u.s_name.len))\n-\t  d_print_comp (dpi, options, dc->u.s_extended_operator.name);\n-\telse\n-\t  {\n-\t    d_append_string (dpi, \"operator \");\n-\t    d_print_comp (dpi, options, dc->u.s_extended_operator.name);\n-\t  }\n-\treturn;\n-      }\n+      d_append_string (dpi, \"operator \");\n+      d_print_comp (dpi, options, dc->u.s_extended_operator.name);\n+      return;\n \n     case DEMANGLE_COMPONENT_CONVERSION:\n       d_append_string (dpi, \"operator \");\n@@ -5585,14 +5591,8 @@ d_print_comp_inner (struct d_print_info *dpi, int options,\n \tif (code && !strcmp (code, \"gs\"))\n \t  /* Avoid parens after '::'.  */\n \t  d_print_comp (dpi, options, operand);\n-\telse if ((code && !strcmp (code, \"st\"))\n-\t\t || (op->type == DEMANGLE_COMPONENT_EXTENDED_OPERATOR\n-\t\t     && (op->u.s_extended_operator.name->type\n-\t\t\t == DEMANGLE_COMPONENT_NAME)\n-\t\t     && !strncmp (op->u.s_extended_operator.name->u.s_name.s,\n-\t\t\t\t  \"__alignof__\",\n-\t\t\t\t  op->u.s_extended_operator.name->u.s_name.len)))\n-\t  /* Always print parens for sizeof (type) and __alignof__.  */\n+\telse if (code && !strcmp (code, \"st\"))\n+\t  /* Always print parens for sizeof (type).  */\n \t  {\n \t    d_append_char (dpi, '(');\n \t    d_print_comp (dpi, options, operand);\n@@ -5805,6 +5805,13 @@ d_print_comp_inner (struct d_print_info *dpi, int options,\n       }\n       return;\n \n+    case DEMANGLE_COMPONENT_VENDOR_EXPR:\n+      d_print_comp (dpi, options, d_left (dc));\n+      d_append_char (dpi, '(');\n+      d_print_comp (dpi, options, d_right (dc));\n+      d_append_char (dpi, ')');\n+      return;\n+\n     case DEMANGLE_COMPONENT_NUMBER:\n       d_append_num (dpi, dc->u.s_number.number);\n       return;"
    },
    {
      "sha": "8d2456b86c81ef5ad00bc4b4ac14b4bb1e711b19",
      "filename": "libiberty/dyn-string.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/dyn-string.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/dyn-string.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/dyn-string.c?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -277,7 +277,7 @@ dyn_string_insert_cstr (dyn_string_t dest, int pos, const char *src)\n   for (i = dest->length; i >= pos; --i)\n     dest->s[i + length] = dest->s[i];\n   /* Splice in the new stuff.  */\n-  strncpy (dest->s + pos, src, length);\n+  memcpy (dest->s + pos, src, length);\n   /* Compute the new length.  */\n   dest->length += length;\n   return 1;"
    },
    {
      "sha": "31f87fbcfdeb3a9e978b97c5330d319821f7d314",
      "filename": "libiberty/make-temp-file.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/make-temp-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/make-temp-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/make-temp-file.c?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -81,8 +81,6 @@ try_dir (const char *dir, const char *base)\n }\n \n static const char tmp[] = { DIR_SEPARATOR, 't', 'm', 'p', 0 };\n-static const char usrtmp[] =\n-{ DIR_SEPARATOR, 'u', 's', 'r', DIR_SEPARATOR, 't', 'm', 'p', 0 };\n static const char vartmp[] =\n { DIR_SEPARATOR, 'v', 'a', 'r', DIR_SEPARATOR, 't', 'm', 'p', 0 };\n \n@@ -129,9 +127,8 @@ choose_tmpdir (void)\n \tbase = try_dir (P_tmpdir, base);\n #endif\n \n-      /* Try /var/tmp, /usr/tmp, then /tmp.  */\n+      /* Try /var/tmp, then /tmp.  */\n       base = try_dir (vartmp, base);\n-      base = try_dir (usrtmp, base);\n       base = try_dir (tmp, base);\n       \n       /* If all else fails, use the current directory!  */"
    },
    {
      "sha": "449941b56dc16461aa4cf182ad95607ee20d4aed",
      "filename": "libiberty/rust-demangle.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/rust-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/rust-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/rust-demangle.c?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -1253,9 +1253,12 @@ demangle_const_char (struct rust_demangler *rdm)\n   else if (value == '\\n')\n     PRINT (\"\\\\n\");\n   else if (value > ' ' && value < '~')\n-    /* Rust also considers many non-ASCII codepoints to be printable, but\n-       that logic is not easily ported to C. */\n-    print_str (rdm, (char *) &value, 1);\n+    {\n+      /* Rust also considers many non-ASCII codepoints to be printable, but\n+\t that logic is not easily ported to C. */\n+      char c = value;\n+      print_str (rdm, &c, 1);\n+    }\n   else\n     {\n       PRINT (\"\\\\u{\");"
    },
    {
      "sha": "7d15d48d11ddba50b26a9a39eab1179c103f6e2c",
      "filename": "libiberty/sha1.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/sha1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/sha1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/sha1.c?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -258,7 +258,7 @@ sha1_process_bytes (const void *buffer, size_t len, struct sha1_ctx *ctx)\n \t{\n \t  sha1_process_block (ctx->buffer, 64, ctx);\n \t  left_over -= 64;\n-\t  memcpy (ctx->buffer, &ctx->buffer[16], left_over);\n+\t  memmove (ctx->buffer, &ctx->buffer[16], left_over);\n \t}\n       ctx->buflen = left_over;\n     }"
    },
    {
      "sha": "facbf94fd09e1e60cceba0fbdb87c14dd2425386",
      "filename": "libiberty/simple-object.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/simple-object.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/simple-object.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object.c?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -304,6 +304,12 @@ handle_lto_debug_sections (const char *name, int rename)\n   /* Copy over .GCC.command.line section under the same name if present.  */\n   else if (strcmp (name, \".GCC.command.line\") == 0)\n     return strcpy (newname, name);\n+  /* Copy over .ctf section under the same name if present.  */\n+  else if (strcmp (name, \".ctf\") == 0)\n+    return strcpy (newname, name);\n+  /* Copy over .BTF section under the same name if present.  */\n+  else if (strcmp (name, \".BTF\") == 0)\n+    return strcpy (newname, name);\n   free (newname);\n   return NULL;\n }"
    },
    {
      "sha": "19a0d621bc01123f526aa48f1f5a6f2875d91b8e",
      "filename": "libiberty/testsuite/demangle-expected",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/testsuite/demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20c4b12e937b20f0998bd25ad37c77145650e826/libiberty/testsuite/demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/demangle-expected?ref=20c4b12e937b20f0998bd25ad37c77145650e826",
      "patch": "@@ -1471,10 +1471,10 @@ _Z2F2IZ1FvEUlvE_EN1AIT_E1XES2_\n A<F()::{lambda()#1}>::X F2<F()::{lambda()#1}>(F()::{lambda()#1})\n \n # PR 88115\n-_Z1fIiEvDTv111__alignof__T_E\n+_Z1fIiEvDTu11__alignof__T_EE\n void f<int>(decltype (__alignof__(int)))\n \n-_Z1fIiEvDTv111__alignof__tlT_EE\n+_Z1fIiEvDTu11__alignof__XtlT_EEEE\n void f<int>(decltype (__alignof__(int{})))\n \n _Z1gI1AEv1SIXadsrT_oncviEE"
    }
  ]
}