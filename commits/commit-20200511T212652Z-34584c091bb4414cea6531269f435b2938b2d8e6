{
  "sha": "34584c091bb4414cea6531269f435b2938b2d8e6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzQ1ODRjMDkxYmI0NDE0Y2VhNjUzMTI2OWY0MzViMjkzOGIyZDhlNg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-04-23T09:47:29Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-05-11T21:26:52Z"
    },
    "message": "gdb/testsuite: Detect and warn if paths are used in test names\n\nA new library is introduced that hooks into the core of Dejagnu and\ndetects when a test's name includes either the source or build paths.\nIf any offending test names are detected then Dejagnu will print a\nnew result type, '# of paths in test names'.  Users should treat this\nresult type just like other bad results types, and aim not to increase\nthis number.\n\nAs well as displaying the total number of offending tests as part of\nthe final results, a new marker is included in both the gdb.log and\ngdb.sum files, this marker starts with 'PATH: ', so an offending test\nwould be expected to appear like this:\n\n  PASS: gdb.base/sometest.exp: Loaded /path/to/build/testsuite/foo.exe\n  PATH: gdb.base/sometest.exp: Loaded /path/to/build/testsuite/foo.exe\n\nThis should make it easier to track down offending tests.\n\nCurrently for a local run on my machine, I don't see any offending\ntest names, but it is possible that different targets, or different\nconfigurations, might currently be breaking the no paths rule.\n\nIn order to get this working I have needed to wrap two core Dejagnu\nfunctions, log_summary, and reset_vars.  Relying on core functions\nthat are not part of any API is always going to be risky, given the\nrelatively slow rate of Dejagnu change this is probably OK for now,\nand we can possibly upstream some changes to Dejagnu that would allow\nthis functionality to be supported in a more official way later on.\n\nCurrently if the tests are run in parallel mode the new result type is\nnot merged into the combined summary file so users will need to run in\nnon-parallel mode to check this result.  Similarly, the 'PATH: '\nmarkers will not be merged into the combined summary file.  A later\ncommit will fix this.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp: Include check-test-names.exp library.\n\t* lib/check-test-names.exp: New file.",
    "tree": {
      "sha": "a97a3c3932037f3b0bd9fe392f7216b0999c293c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a97a3c3932037f3b0bd9fe392f7216b0999c293c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/34584c091bb4414cea6531269f435b2938b2d8e6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/34584c091bb4414cea6531269f435b2938b2d8e6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/34584c091bb4414cea6531269f435b2938b2d8e6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/34584c091bb4414cea6531269f435b2938b2d8e6/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5eb68a39a2c2908fc01f03e79daed72ba85dc14c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5eb68a39a2c2908fc01f03e79daed72ba85dc14c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5eb68a39a2c2908fc01f03e79daed72ba85dc14c"
    }
  ],
  "stats": {
    "total": 148,
    "additions": 148,
    "deletions": 0
  },
  "files": [
    {
      "sha": "0806b62d7ff34996bbf497bd68d1c1801235aed6",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/34584c091bb4414cea6531269f435b2938b2d8e6/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/34584c091bb4414cea6531269f435b2938b2d8e6/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=34584c091bb4414cea6531269f435b2938b2d8e6",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* lib/gdb.exp: Include check-test-names.exp library.\n+\t* lib/check-test-names.exp: New file.\n+\n 2020-05-11  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.ada/packed_tagged.exp: Change kfail into xfail."
    },
    {
      "sha": "addce4b8242073e33a3ac8556aca00990954a63b",
      "filename": "gdb/testsuite/lib/check-test-names.exp",
      "status": "added",
      "additions": 142,
      "deletions": 0,
      "changes": 142,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/34584c091bb4414cea6531269f435b2938b2d8e6/gdb/testsuite/lib/check-test-names.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/34584c091bb4414cea6531269f435b2938b2d8e6/gdb/testsuite/lib/check-test-names.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/check-test-names.exp?ref=34584c091bb4414cea6531269f435b2938b2d8e6",
      "patch": "@@ -0,0 +1,142 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This library provides some protection against the introduction of\n+# tests that include either the source of build paths in the test\n+# name.  When a test includes the path in its test name it is harder\n+# to compare results between two runs of GDB from different trees.\n+\n+namespace eval ::CheckTestNames {\n+    # An associative array of counts of tests that include a path in their\n+    # test name.  There are two counts, 'count', which counts occurrences\n+    # within a single variant run, and 'total', which counts across all\n+    # variants.\n+    variable counts\n+    array set counts {}\n+    foreach nm {paths} {\n+\tset counts($nm,count) 0\n+\tset counts($nm,total) 0\n+    }\n+\n+    # Increment the count, and total count for TYPE.\n+    proc inc_count { type } {\n+\tvariable counts\n+\n+\tincr counts($type,count)\n+\tincr counts($type,total)\n+    }\n+\n+    # Check if MESSAGE contains a build or source path, if it does increment\n+    # the relevant counter and return true, otherwise, return false.\n+    proc _check_paths { message } {\n+\tglobal srcdir objdir\n+\n+\tforeach path [list $srcdir $objdir] {\n+\t    if { [ string first $path $message ] >= 0 } {\n+\t\t# Count each test just once.\n+\t\tinc_count paths\n+\t\treturn true\n+\t    }\n+\t}\n+\n+\treturn false\n+    }\n+\n+    # Remove the leading Dejagnu status marker from MESSAGE, and\n+    # return the remainder of MESSAGE.  A status marker is something\n+    # like 'PASS: '.  It is assumed that MESSAGE does contain such a\n+    # marker.  If it doesn't then MESSAGE is returned unmodified.\n+    proc _strip_status { message } {\n+\t# Find the position of the first ': ' string.\n+\tset pos [string first \": \" $message]\n+\tif { $pos > -1 } {\n+\t    # The '+ 2' is so we skip the ': ' we found above.\n+\t    return  [string range $message [expr $pos + 2] end]\n+\t}\n+\n+\treturn $message\n+    }\n+\n+    # Check if MESSAGE contains either the source path or the build path.\n+    # This will result in test names that can't easily be compared between\n+    # different runs of GDB.\n+    #\n+    # Any offending test names cause the corresponding count to be\n+    # incremented, and an extra message to be printed into the log\n+    # file.\n+    proc check { message } {\n+\tset message [ _strip_status $message ]\n+\n+\tif [ _check_paths $message ] {\n+\t    clone_output \"PATH: $message\"\n+\t}\n+    }\n+\n+    # If COUNT is greater than zero, disply PREFIX followed by COUNT.\n+    proc maybe_show_count { prefix count } {\n+\tif { $count > 0 } {\n+\t    clone_output \"$prefix$count\"\n+\t}\n+    }\n+\n+    # Rename Dejagnu's log_summary procedure, and create do_log_summary to\n+    # replace it.  We arrange to have do_log_summary called later.\n+    rename ::log_summary log_summary\n+    proc do_log_summary { args } {\n+\tvariable counts\n+\n+\t# If ARGS is the empty list then we don't want to pass a single\n+\t# empty string as a parameter here.\n+\teval \"CheckTestNames::log_summary $args\"\n+\n+\tif { [llength $args] == 0 } {\n+\t    set which \"count\"\n+\t} else {\n+\t    set which [lindex $args 0]\n+\t}\n+\n+\tmaybe_show_count \"# of paths in test names\\t\" \\\n+\t    $counts(paths,$which)\n+    }\n+\n+    # Rename Dejagnu's reset_vars procedure, and create do_reset_vars to\n+    # replace it.  We arrange to have do_reset_vars called later.\n+    rename ::reset_vars reset_vars\n+    proc do_reset_vars {} {\n+\tvariable counts\n+\n+\tCheckTestNames::reset_vars\n+\n+\tforeach nm {paths} {\n+\t    set counts($nm,count) 0\n+\t}\n+    }\n+}\n+\n+# Arrange for Dejagnu to call CheckTestNames::check for each test result.\n+foreach nm {pass fail xfail kfail xpass kpass unresolved untested \\\n+\t\tunsupported} {\n+    set local_record_procs($nm) \"CheckTestNames::check\"\n+}\n+\n+# Create new global log_summary to replace Dejagnu's.\n+proc log_summary { args } {\n+    eval \"CheckTestNames::do_log_summary $args\"\n+}\n+\n+# Create new global reset_vars to replace Dejagnu's.\n+proc reset_vars {} {\n+    eval \"CheckTestNames::do_reset_vars\"\n+}"
    },
    {
      "sha": "f7d20bd94ff0c1b6409f6c2878161998dc8aee4b",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/34584c091bb4414cea6531269f435b2938b2d8e6/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/34584c091bb4414cea6531269f435b2938b2d8e6/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=34584c091bb4414cea6531269f435b2938b2d8e6",
      "patch": "@@ -29,6 +29,7 @@ load_lib libgloss.exp\n load_lib cache.exp\n load_lib gdb-utils.exp\n load_lib memory.exp\n+load_lib check-test-names.exp\n \n global GDB\n "
    }
  ]
}