{
  "sha": "7016a382b0dc48001cb5c36e56b42fc41b1303a8",
  "node_id": "C_kwDOANOeidoAKDcwMTZhMzgyYjBkYzQ4MDAxY2I1YzM2ZTU2YjQyZmM0MWIxMzAzYTg",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-30T17:23:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-26T22:19:13Z"
    },
    "message": "Add ui_file::wrap_here\n\nRight now, wrap_here is a global function.  In the long run, we'd like\noutput streams to be relatively self-contained objects, and having a\nglobal function like this is counter to that goal.  Also, existing\ncode freely mixes writes to some parameterized stream with calls to\nwrap_here -- but wrap_here only really affects gdb_stdout, so this is\nalso incoherent.\n\nThis step is a patch toward making wrap_here more sane.  It adds a\nwrap_here method to ui_file and changes ui_out implementations to use\nit.",
    "tree": {
      "sha": "5190cb314252a75138fabb04aa925355e8f9f0a4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5190cb314252a75138fabb04aa925355e8f9f0a4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7016a382b0dc48001cb5c36e56b42fc41b1303a8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7016a382b0dc48001cb5c36e56b42fc41b1303a8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7016a382b0dc48001cb5c36e56b42fc41b1303a8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7016a382b0dc48001cb5c36e56b42fc41b1303a8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6c92c339539ec87dc12783e9c8f1688a4a370c03",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c92c339539ec87dc12783e9c8f1688a4a370c03",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6c92c339539ec87dc12783e9c8f1688a4a370c03"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 25,
    "deletions": 2
  },
  "files": [
    {
      "sha": "b2daad11a51bda0d56f22508c28a5000926ceacc",
      "filename": "gdb/cli-out.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/cli-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/cli-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli-out.c?ref=7016a382b0dc48001cb5c36e56b42fc41b1303a8",
      "patch": "@@ -243,7 +243,7 @@ cli_ui_out::do_wrap_hint (int indent)\n   if (m_suppress_output)\n     return;\n \n-  wrap_here (indent);\n+  m_streams.back ()->wrap_here (indent);\n }\n \n void"
    },
    {
      "sha": "53f7206addd1ca292e3fad1741effc50211c4429",
      "filename": "gdb/mi/mi-out.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/mi/mi-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/mi/mi-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.c?ref=7016a382b0dc48001cb5c36e56b42fc41b1303a8",
      "patch": "@@ -174,7 +174,7 @@ mi_ui_out::do_message (const ui_file_style &style,\n void\n mi_ui_out::do_wrap_hint (int indent)\n {\n-  wrap_here (indent);\n+  m_streams.back ()->wrap_here (indent);\n }\n \n void"
    },
    {
      "sha": "57fc05a6c848f59e338dea223348c1a44f0f6ba0",
      "filename": "gdb/ui-file.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/ui-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/ui-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.c?ref=7016a382b0dc48001cb5c36e56b42fc41b1303a8",
      "patch": "@@ -131,6 +131,12 @@ ui_file::printchar (int c, int quoter, bool async_safe)\n     this->write (buf, out);\n }\n \n+void\n+ui_file::wrap_here (int indent)\n+{\n+  ::wrap_here (indent);\n+}\n+\n \f\n \n void"
    },
    {
      "sha": "3df9f936da582fc8a277f485bfac2ea1f8821d3a",
      "filename": "gdb/ui-file.h",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/ui-file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7016a382b0dc48001cb5c36e56b42fc41b1303a8/gdb/ui-file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.h?ref=7016a382b0dc48001cb5c36e56b42fc41b1303a8",
      "patch": "@@ -107,6 +107,23 @@ class ui_file\n     return false;\n   }\n \n+  /* Indicate that if the next sequence of characters overflows the\n+     line, a newline should be inserted here rather than when it hits\n+     the end.  If INDENT is non-zero, it is a number of spaces to be\n+     printed to indent the wrapped part on the next line.\n+\n+     If the line is already overfull, we immediately print a newline and\n+     the indentation, and disable further wrapping.\n+\n+     If we don't know the width of lines, but we know the page height,\n+     we must not wrap words, but should still keep track of newlines\n+     that were explicitly printed.\n+\n+     This routine is guaranteed to force out any output which has been\n+     squirreled away in the wrap_buffer, so wrap_here (0) can be\n+     used to force out output from the wrap_buffer.  */\n+  void wrap_here (int indent);\n+\n private:\n \n   /* Helper function for putstr and putstrn.  Print the character C on"
    }
  ]
}