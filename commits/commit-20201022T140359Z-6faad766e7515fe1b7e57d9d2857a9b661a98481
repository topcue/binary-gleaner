{
  "sha": "6faad766e7515fe1b7e57d9d2857a9b661a98481",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmZhYWQ3NjZlNzUxNWZlMWI3ZTU3ZDlkMjg1N2E5YjY2MWE5ODQ4MQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-22T13:10:08Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-22T14:03:59Z"
    },
    "message": "ld: Skip bootstrap tests for -fprofile-generate=\n\nMake plug_opt available to all linker tests.  Skip bootstrap tests when\nlinker is compiled with -fprofile-generate=.\n\n\t* testsuite/ld-plugin/lto.exp (plug_opt): Moved to ...\n\t* testsuite/config/default.exp (plug_opt): Here.  New.\n\t* testsuite/ld-bootstrap/bootstrap.exp: Skip when linker is\n\tcompiled with -fprofile-generate=.",
    "tree": {
      "sha": "bd89ad84fc9f9bb5732baaf4fea6c35d69dbd4af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bd89ad84fc9f9bb5732baaf4fea6c35d69dbd4af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6faad766e7515fe1b7e57d9d2857a9b661a98481",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6faad766e7515fe1b7e57d9d2857a9b661a98481",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6faad766e7515fe1b7e57d9d2857a9b661a98481",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6faad766e7515fe1b7e57d9d2857a9b661a98481/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1bd57575dcb693d7fbda49bee44e81c20d1be7bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bd57575dcb693d7fbda49bee44e81c20d1be7bf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1bd57575dcb693d7fbda49bee44e81c20d1be7bf"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 31,
    "deletions": 17
  },
  "files": [
    {
      "sha": "540ebae7930816ca7ebb4fa3a899445dc0362513",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=6faad766e7515fe1b7e57d9d2857a9b661a98481",
      "patch": "@@ -1,3 +1,10 @@\n+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/ld-plugin/lto.exp (plug_opt): Moved to ...\n+\t* testsuite/config/default.exp (plug_opt): Here.  New.\n+\t* testsuite/ld-bootstrap/bootstrap.exp: Skip when linker is\n+\tcompiled with -fprofile-generate=.\n+\n 2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/config/default.exp (NOLTO_CFLAGS): New."
    },
    {
      "sha": "73d61dec27207549cf0ce0115dc833ac624c2844",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=6faad766e7515fe1b7e57d9d2857a9b661a98481",
      "patch": "@@ -424,3 +424,20 @@ if { [istarget alpha*-*-*vms*] } {\n     }\n     unset f src\n }\n+\n+set plugin_names {\n+    liblto_plugin.so\n+    liblto_plugin-0.dll\n+    cyglto_plugin-0.dll\n+}\n+set plug_opt \"\"\n+foreach plug $plugin_names {\n+    set plug_so [run_host_cmd $CC \"--print-prog-name $plug\"]\n+    if { $plug_so eq $plug } then {\n+\tset plug_so [run_host_cmd $CC \"--print-file-name $plug\"]\n+    }\n+    if { $plug_so ne $plug } then {\n+\tset plug_opt \"--plugin $plug_so\"\n+\tbreak\n+    }\n+}"
    },
    {
      "sha": "2342d509fc0e44523998c3ab74a8cecaa8eb868a",
      "filename": "ld/testsuite/ld-bootstrap/bootstrap.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/testsuite/ld-bootstrap/bootstrap.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/testsuite/ld-bootstrap/bootstrap.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bootstrap/bootstrap.exp?ref=6faad766e7515fe1b7e57d9d2857a9b661a98481",
      "patch": "@@ -29,7 +29,13 @@ if ![isnative] {\n     return\n }\n \n-# Determine if plugin support is present.\n+# Skip for -fprofile-generate=.\n+catch \"exec $nm $plug_opt $OFILES\" exec_output\n+send_log \"foo: $exec_output\"\n+if { [ string match \"*__gcov_*\" $exec_output ] } {\n+    return\n+}\n+\n remote_exec host \"$nm --help\" \"\" \"/dev/null\" \"plugin-support\"\n set tmp [file_contents \"plugin-support\"]\n regexp \".*\\(--plugin\\).*\\n\" $tmp foo plugins"
    },
    {
      "sha": "9f9f2d13ced3d7f93b21eeab041a59f273d354be",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6faad766e7515fe1b7e57d9d2857a9b661a98481/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=6faad766e7515fe1b7e57d9d2857a9b661a98481",
      "patch": "@@ -41,22 +41,6 @@ proc restore_notify { } {\n   set CXXFLAGS \"$saved_CXXFLAGS\"\n }\n \n-set plugin_names {\n-    liblto_plugin.so\n-    liblto_plugin-0.dll\n-    cyglto_plugin-0.dll\n-}\n-set plug_opt \"\"\n-foreach plug $plugin_names {\n-    set plug_so [run_host_cmd $CC \"--print-prog-name $plug\"]\n-    if { $plug_so eq $plug } then {\n-\tset plug_so [run_host_cmd $CC \"--print-file-name $plug\"]\n-    }\n-    if { $plug_so ne $plug } then {\n-\tset plug_opt \"--plugin $plug_so\"\n-\tbreak\n-    }\n-}\n set lto_fat \"\"\n set lto_no_fat \"\"\n if { [check_lto_fat_available] } {"
    }
  ]
}