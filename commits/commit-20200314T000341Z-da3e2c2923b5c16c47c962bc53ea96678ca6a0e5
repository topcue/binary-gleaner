{
  "sha": "da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGEzZTJjMjkyM2I1YzE2YzQ3Yzk2MmJjNTNlYTk2Njc4Y2E2YTBlNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:41Z"
    },
    "message": "Introduce c_value_print_ptr\n\nThis adds c_value_print_ptr, a value-based analogue of\nc_val_print_ptr.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* c-valprint.c (c_value_print_ptr): New function.\n\t(c_value_print_inner): Use it.",
    "tree": {
      "sha": "70a84988bce62d05c16d8877e4ba499f4cadeec2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/70a84988bce62d05c16d8877e4ba499f4cadeec2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5083623134c2ac383a8d8412b6d3c530452fda51",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5083623134c2ac383a8d8412b6d3c530452fda51",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5083623134c2ac383a8d8412b6d3c530452fda51"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 43,
    "deletions": 2
  },
  "files": [
    {
      "sha": "98223d4dfb6ec38e495667c95ef025ffe9bec9a6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* c-valprint.c (c_value_print_ptr): New function.\n+\t(c_value_print_inner): Use it.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* c-valprint.c (c_value_print_inner): Rewrite."
    },
    {
      "sha": "6cac9e0b578e61f11970b27f4b1fe598273dff0f",
      "filename": "gdb/c-valprint.c",
      "status": "modified",
      "additions": 38,
      "deletions": 2,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5/gdb/c-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5/gdb/c-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-valprint.c?ref=da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
      "patch": "@@ -375,6 +375,43 @@ c_val_print_ptr (struct type *type, const gdb_byte *valaddr,\n     }\n }\n \n+/* c_value_print_inner helper for TYPE_CODE_PTR.  */\n+\n+static void\n+c_value_print_ptr (struct value *val, struct ui_file *stream, int recurse,\n+\t\t   const struct value_print_options *options)\n+{\n+  if (options->format && options->format != 's')\n+    {\n+      value_print_scalar_formatted (val, options, 0, stream);\n+      return;\n+    }\n+\n+  struct type *type = check_typedef (value_type (val));\n+  struct gdbarch *arch = get_type_arch (type);\n+  const gdb_byte *valaddr = value_contents_for_printing (val);\n+\n+  if (options->vtblprint && cp_is_vtbl_ptr_type (type))\n+    {\n+      /* Print the unmangled name if desired.  */\n+      /* Print vtable entry - we only get here if we ARE using\n+\t -fvtable_thunks.  (Otherwise, look under\n+\t TYPE_CODE_STRUCT.)  */\n+      CORE_ADDR addr = extract_typed_address (valaddr, type);\n+\n+      print_function_pointer_address (options, arch, addr, stream);\n+    }\n+  else\n+    {\n+      struct type *unresolved_elttype = TYPE_TARGET_TYPE (type);\n+      struct type *elttype = check_typedef (unresolved_elttype);\n+      CORE_ADDR addr = unpack_pointer (type, valaddr);\n+\n+      print_unpacked_pointer (type, elttype, unresolved_elttype, valaddr,\n+\t\t\t      0, addr, stream, recurse, options);\n+    }\n+}\n+\n /* c_val_print helper for TYPE_CODE_STRUCT.  */\n \n static void\n@@ -582,8 +619,7 @@ c_value_print_inner (struct value *val, struct ui_file *stream, int recurse,\n       break;\n \n     case TYPE_CODE_PTR:\n-      c_val_print_ptr (type, valaddr, 0, stream, recurse,\n-\t\t       val, options);\n+      c_value_print_ptr (val, stream, recurse, options);\n       break;\n \n     case TYPE_CODE_UNION:"
    }
  ]
}