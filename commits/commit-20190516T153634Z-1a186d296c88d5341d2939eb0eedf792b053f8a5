{
  "sha": "1a186d296c88d5341d2939eb0eedf792b053f8a5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWExODZkMjk2Yzg4ZDUzNDFkMjkzOWViMGVlZGY3OTJiMDUzZjhhNQ==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T10:52:29Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:34Z"
    },
    "message": "[PATCH 25/57][Arm][GAS] Add support for MVE instruction: vmvn, vqabs and vqneg\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_neon_mvn): Change to accept MVE variants.\n\t(do_neon_sat_abs_neg): Likewise.\n\t(insns): Likewise.\n\t* testsuite/gas/arm/mve-vmvn-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmvn-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmvn-bad.s: New test.\n\t* testsuite/gas/arm/mve-vqabsneg-bad.d: New test.\n\t* testsuite/gas/arm/mve-vqabsneg-bad.l: New test.\n\t* testsuite/gas/arm/mve-vqabsneg-bad.s: New test.",
    "tree": {
      "sha": "6daa02ea067cb407e50de27091c8913f1bc2d4c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6daa02ea067cb407e50de27091c8913f1bc2d4c0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1a186d296c88d5341d2939eb0eedf792b053f8a5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a186d296c88d5341d2939eb0eedf792b053f8a5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1a186d296c88d5341d2939eb0eedf792b053f8a5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a186d296c88d5341d2939eb0eedf792b053f8a5/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2d78f95bb639209254eb7252f9c48c520bd90d56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d78f95bb639209254eb7252f9c48c520bd90d56",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2d78f95bb639209254eb7252f9c48c520bd90d56"
    }
  ],
  "stats": {
    "total": 150,
    "additions": 145,
    "deletions": 5
  },
  "files": [
    {
      "sha": "8b3f9a1348c59e90638cac554b3be960577adc51",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -1,3 +1,15 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_neon_mvn): Change to accept MVE variants.\n+\t(do_neon_sat_abs_neg): Likewise.\n+\t(insns): Likewise.\n+\t* testsuite/gas/arm/mve-vmvn-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmvn-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmvn-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vqabsneg-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vqabsneg-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vqabsneg-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (do_mve_vmlas): New encoding function."
    },
    {
      "sha": "c7ff204356866f18cefc1642e36fddf3e5a268ee",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 26,
      "deletions": 5,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -18486,9 +18486,16 @@ neon_move_immediate (void)\n static void\n do_neon_mvn (void)\n {\n+  if (check_simd_pred_availability (0, NEON_CHECK_CC | NEON_CHECK_ARCH))\n+    return;\n+\n   if (inst.operands[1].isreg)\n     {\n-      enum neon_shape rs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n+      enum neon_shape rs;\n+      if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+\trs = neon_select_shape (NS_QQ, NS_NULL);\n+      else\n+\trs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n \n       NEON_ENCODE (INTEGER, inst);\n       inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n@@ -18504,6 +18511,13 @@ do_neon_mvn (void)\n     }\n \n   neon_dp_fixup (&inst);\n+\n+  if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+    {\n+      constraint (!inst.operands[1].isreg && !inst.operands[0].isquad, BAD_FPU);\n+      constraint ((inst.instruction & 0xd00) == 0xd00,\n+\t\t  _(\"immediate value out of range\"));\n+    }\n }\n \n /* Encode instructions of form:\n@@ -19450,7 +19464,14 @@ do_neon_zip_uzp (void)\n static void\n do_neon_sat_abs_neg (void)\n {\n-  enum neon_shape rs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n+  if (check_simd_pred_availability (0, NEON_CHECK_CC | NEON_CHECK_ARCH))\n+    return;\n+\n+  enum neon_shape rs;\n+  if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+    rs = neon_select_shape (NS_QQ, NS_NULL);\n+  else\n+    rs = neon_select_shape (NS_DD, NS_QQ, NS_NULL);\n   struct neon_type_el et = neon_check_type (2, rs,\n     N_EQK, N_S8 | N_S16 | N_S32 | N_KEY);\n   neon_two_same (neon_quad (rs), 1, et.size);\n@@ -24057,7 +24078,6 @@ static const struct asm_opcode insns[] =\n   /* CVT with optional immediate for fixed-point variant.  */\n  nUF(vcvtq,     _vcvt,    3, (RNQ, RNQ, oI32b), neon_cvt),\n \n- nUF(vmvn,      _vmvn,    2, (RNDQ, RNDQ_Ibig), neon_mvn),\n  nUF(vmvnq,     _vmvn,    2, (RNQ,  RNDQ_Ibig), neon_mvn),\n \n   /* Data processing, three registers of different lengths.  */\n@@ -24111,9 +24131,7 @@ static const struct asm_opcode insns[] =\n  NUF(vuzp,      1b20100, 2, (RNDQ, RNDQ),     neon_zip_uzp),\n  NUF(vuzpq,     1b20100, 2, (RNQ,  RNQ),      neon_zip_uzp),\n   /* VQABS / VQNEG. Types S8 S16 S32.  */\n- NUF(vqabs,     1b00700, 2, (RNDQ, RNDQ),     neon_sat_abs_neg),\n  NUF(vqabsq,    1b00700, 2, (RNQ,  RNQ),      neon_sat_abs_neg),\n- NUF(vqneg,     1b00780, 2, (RNDQ, RNDQ),     neon_sat_abs_neg),\n  NUF(vqnegq,    1b00780, 2, (RNQ,  RNQ),      neon_sat_abs_neg),\n   /* Pairwise, lengthening. Types S8 S16 S32 U8 U16 U32.  */\n  NUF(vpadal,    1b00600, 2, (RNDQ, RNDQ),     neon_pair_long),\n@@ -24774,6 +24792,9 @@ static const struct asm_opcode insns[] =\n  mnUF(vmax,      _vmax,    3, (RNDQMQ, oRNDQMQ, RNDQMQ), neon_dyadic_if_su),\n  MNUF(vqadd,     0000010,  3, (RNDQMQ, oRNDQMQ, RNDQMQR), neon_dyadic_i64_su),\n  MNUF(vqsub,     0000210,  3, (RNDQMQ, oRNDQMQ, RNDQMQR), neon_dyadic_i64_su),\n+ mnUF(vmvn,      _vmvn,    2, (RNDQMQ, RNDQMQ_Ibig), neon_mvn),\n+ MNUF(vqabs,     1b00700,  2, (RNDQMQ, RNDQMQ),     neon_sat_abs_neg),\n+ MNUF(vqneg,     1b00780,  2, (RNDQMQ, RNDQMQ),     neon_sat_abs_neg),\n \n #undef\tARM_VARIANT\n #define ARM_VARIANT & arm_ext_v8_3"
    },
    {
      "sha": "3b06d63fcc1b807c81ea2bb7312cb8677187c73e",
      "filename": "gas/testsuite/gas/arm/mve-vmvn-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vmvn-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vmvn-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmvn-bad.d?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMVN instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vmvn-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "8073a68ea80cfc39a6d92dba7637fc174de47be2",
      "filename": "gas/testsuite/gas/arm/mve-vmvn-bad.l",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vmvn-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vmvn-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmvn-bad.l?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -0,0 +1,20 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: invalid instruction shape -- `vmvn.i16 d0,d1'\n+[^:]*:11: Error: immediate out of range -- `vmvn.i32 q0,#0x1ef'\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Error: syntax error -- `vmvneq q0,q1'\n+[^:]*:16: Error: syntax error -- `vmvneq q0,q1'\n+[^:]*:18: Error: syntax error -- `vmvneq q0,q1'\n+[^:]*:19: Error: vector predicated instruction should be in VPT/VPST block -- `vmvnt q0,q1'\n+[^:]*:21: Error: instruction missing MVE vector predication code -- `vmvn q0,q1'"
    },
    {
      "sha": "5b8f127abf1e57a45caabef0f888de4a84514a8a",
      "filename": "gas/testsuite/gas/arm/mve-vmvn-bad.s",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vmvn-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vmvn-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmvn-bad.s?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -0,0 +1,21 @@\n+.macro cond lastop\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vmvn.i16 q0, \\lastop\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmvn.i16 d0, d1\n+vmvn.i32 q0, #0x1ef\n+cond q1\n+cond #0\n+it eq\n+vmvneq q0, q1\n+vmvneq q0, q1\n+vpst\n+vmvneq q0, q1\n+vmvnt q0, q1\n+vpst\n+vmvn q0, q1"
    },
    {
      "sha": "30c9cd6c6477c2584c597a9db7c4d49992b20d85",
      "filename": "gas/testsuite/gas/arm/mve-vqabsneg-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vqabsneg-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vqabsneg-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vqabsneg-bad.d?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VQABS and VQNEG instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vqabsneg-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "ea9891e317cf80c319bda84389e3ee0cec41fb50",
      "filename": "gas/testsuite/gas/arm/mve-vqabsneg-bad.l",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vqabsneg-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vqabsneg-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vqabsneg-bad.l?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -0,0 +1,27 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vqabs.u8 q0,q1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vqneg.u16 q0,q1'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vqabs.s64 q0,q1'\n+[^:]*:13: Error: bad instruction `vqnegs.s64 q0,q1'\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Error: syntax error -- `vqabseq.s32 q0,q1'\n+[^:]*:18: Error: syntax error -- `vqabseq.s32 q0,q1'\n+[^:]*:19: Error: syntax error -- `vqabseq.s32 q0,q1'\n+[^:]*:20: Error: vector predicated instruction should be in VPT/VPST block -- `vqabst.s32 q0,q1'\n+[^:]*:22: Error: instruction missing MVE vector predication code -- `vqabs.s32 q0,q1'\n+[^:]*:24: Error: syntax error -- `vqnegeq.s32 q0,q1'\n+[^:]*:25: Error: syntax error -- `vqnegeq.s32 q0,q1'\n+[^:]*:26: Error: syntax error -- `vqnegeq.s32 q0,q1'\n+[^:]*:27: Error: vector predicated instruction should be in VPT/VPST block -- `vqnegt.s32 q0,q1'\n+[^:]*:29: Error: instruction missing MVE vector predication code -- `vqneg.s32 q0,q1'"
    },
    {
      "sha": "af760904b2489614df19508e3bae817b22ebec6a",
      "filename": "gas/testsuite/gas/arm/mve-vqabsneg-bad.s",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vqabsneg-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a186d296c88d5341d2939eb0eedf792b053f8a5/gas/testsuite/gas/arm/mve-vqabsneg-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vqabsneg-bad.s?ref=1a186d296c88d5341d2939eb0eedf792b053f8a5",
      "patch": "@@ -0,0 +1,29 @@\n+.macro cond op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().s16 q0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vqabs.u8 q0, q1\n+vqneg.u16 q0, q1\n+vqabs.s64 q0, q1\n+vqnegs.s64 q0, q1\n+cond vqabs\n+cond vqneg\n+it eq\n+vqabseq.s32 q0, q1\n+vqabseq.s32 q0, q1\n+vqabseq.s32 q0, q1\n+vqabst.s32 q0, q1\n+vpst\n+vqabs.s32 q0, q1\n+it eq\n+vqnegeq.s32 q0, q1\n+vqnegeq.s32 q0, q1\n+vqnegeq.s32 q0, q1\n+vqnegt.s32 q0, q1\n+vpst\n+vqneg.s32 q0, q1"
    }
  ]
}