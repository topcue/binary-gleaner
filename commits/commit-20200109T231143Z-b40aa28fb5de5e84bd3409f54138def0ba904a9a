{
  "sha": "b40aa28fb5de5e84bd3409f54138def0ba904a9a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjQwYWEyOGZiNWRlNWU4NGJkMzQwOWY1NDEzOGRlZjBiYTkwNGE5YQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-07T00:30:35Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-09T23:11:43Z"
    },
    "message": "gdb/testsuite/tui: Split enter_tui into two procs\n\nSplit Term::enter_tui into two procedures, a core which does the\nsetup, but doesn't actually enable tui mode, and the old enter_tui\nthat calls the new core, and then enables tui mode.\n\nThis is going to be useful in a later commit.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/tuiterm.exp (Term::prepare_for_tui): New proc.\n\t(Term::enter_tui): Use Term::prepare_for_tui.\n\nChange-Id: I501dfb2ddaa4a4e7246a5ad319ab428e4f42b3af",
    "tree": {
      "sha": "d9a17fdda240abb3c3ce436c19f78a9a14d71bcd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d9a17fdda240abb3c3ce436c19f78a9a14d71bcd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b40aa28fb5de5e84bd3409f54138def0ba904a9a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b40aa28fb5de5e84bd3409f54138def0ba904a9a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b40aa28fb5de5e84bd3409f54138def0ba904a9a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b40aa28fb5de5e84bd3409f54138def0ba904a9a/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "63ffd7c9131c0e9723016d33cf8d435cc508d02b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63ffd7c9131c0e9723016d33cf8d435cc508d02b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/63ffd7c9131c0e9723016d33cf8d435cc508d02b"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 18,
    "deletions": 3
  },
  "files": [
    {
      "sha": "7d8c8d0b7c5f9f831e80863c6447a3889f256866",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b40aa28fb5de5e84bd3409f54138def0ba904a9a/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b40aa28fb5de5e84bd3409f54138def0ba904a9a/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b40aa28fb5de5e84bd3409f54138def0ba904a9a",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* lib/tuiterm.exp (Term::prepare_for_tui): New proc.\n+\t(Term::enter_tui): Use Term::prepare_for_tui.\n+\n 2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* lib/tuiterm.exp (Term::dump_screen): Always dump the screen when"
    },
    {
      "sha": "9ac599b6f2d333cc28d06d32f743a8254c80c058",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 3,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b40aa28fb5de5e84bd3409f54138def0ba904a9a/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b40aa28fb5de5e84bd3409f54138def0ba904a9a/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=b40aa28fb5de5e84bd3409f54138def0ba904a9a",
      "patch": "@@ -462,15 +462,25 @@ namespace eval Term {\n \t}\n     }\n \n-    # Start the TUI.  Returns 1 on success, 0 if TUI tests should be\n-    # skipped.\n-    proc enter_tui {} {\n+    # Setup ready for starting the tui, but don't actually start it.\n+    # Returns 1 on success, 0 if TUI tests should be skipped.\n+    proc prepare_for_tui {} {\n \tif {[skip_tui_tests]} {\n \t    return 0\n \t}\n \n \tgdb_test_no_output \"set tui border-kind ascii\"\n \tgdb_test_no_output \"maint set tui-resize-message on\"\n+\treturn 1\n+    }\n+\n+    # Start the TUI.  Returns 1 on success, 0 if TUI tests should be\n+    # skipped.\n+    proc enter_tui {} {\n+\tif {![prepare_for_tui]} {\n+\t    return 0\n+\t}\n+\n \tcommand \"tui enable\"\n \treturn 1\n     }"
    }
  ]
}