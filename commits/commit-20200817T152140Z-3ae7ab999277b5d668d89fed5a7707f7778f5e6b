{
  "sha": "3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2FlN2FiOTk5Mjc3YjVkNjY4ZDg5ZmVkNWE3NzA3Zjc3NzhmNWU2Yg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-17T15:21:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-17T15:21:40Z"
    },
    "message": "Fix MI crash with Ada string access\n\nI happened to notice that using -var-create at a certain spot in an\nAda program caused a crash.  This happens because\nada_get_decoded_value can return NULL -- in particular, deeper in the\ncode it can hit this return in ada_type_of_array:\n\n      descriptor = desc_bounds (arr);\n      if (value_as_long (descriptor) == 0)\n        return NULL;\n\nThis patch avoids the crash by handling this NULL return.\n\ngdb/ChangeLog\n2020-08-17  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-varobj.c (ada_varobj_decode_var): Handle case where\n\tada_get_decoded_value returns NULL.\n\ngdb/testsuite/ChangeLog\n2020-08-17  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/mi_var_access.exp: New file.\n\t* gdb.ada/mi_var_access/mi_access.adb: New file.\n\t* gdb.ada/mi_var_access/pck.adb: New file.\n\t* gdb.ada/mi_var_access/pck.ads: New file.",
    "tree": {
      "sha": "6a91d725cf865015651c722d9f544b37c40cde48",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6a91d725cf865015651c722d9f544b37c40cde48"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b017825fabd0ff6f6ff2a8526d50d0b7218606d0"
    }
  ],
  "stats": {
    "total": 158,
    "additions": 154,
    "deletions": 4
  },
  "files": [
    {
      "sha": "b097b325a22b90770bbbf4482e8e1897ebda3952",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-08-17  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-varobj.c (ada_varobj_decode_var): Handle case where\n+\tada_get_decoded_value returns NULL.\n+\n 2020-08-17  Tom Tromey  <tromey@adacore.com>\n \n \t* python/py-inferior.c (infpy_search_memory): Use"
    },
    {
      "sha": "a72653af37ab553740ce5765e23af7fd7971351e",
      "filename": "gdb/ada-varobj.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/ada-varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/ada-varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-varobj.c?ref=3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
      "patch": "@@ -63,10 +63,10 @@ static void\n ada_varobj_decode_var (struct value **value_ptr, struct type **type_ptr)\n {\n   if (*value_ptr)\n-    {\n-      *value_ptr = ada_get_decoded_value (*value_ptr);\n-      *type_ptr = ada_check_typedef (value_type (*value_ptr));\n-    }\n+    *value_ptr = ada_get_decoded_value (*value_ptr);\n+\n+  if (*value_ptr != nullptr)\n+    *type_ptr = ada_check_typedef (value_type (*value_ptr));\n   else\n     *type_ptr = ada_get_decoded_type (*type_ptr);\n }"
    },
    {
      "sha": "9fdbcb8703c40ff987ec67d6ee810b80f2001606",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
      "patch": "@@ -1,3 +1,10 @@\n+2020-08-17  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/mi_var_access.exp: New file.\n+\t* gdb.ada/mi_var_access/mi_access.adb: New file.\n+\t* gdb.ada/mi_var_access/pck.adb: New file.\n+\t* gdb.ada/mi_var_access/pck.ads: New file.\n+\n 2020-08-16  Tom de Vries  <tdevries@suse.de>\n \n \tPR gdb/25350"
    },
    {
      "sha": "5ffc0ae877268ef479a55f48f045ff8e2fd0476f",
      "filename": "gdb/testsuite/gdb.ada/mi_var_access.exp",
      "status": "added",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_var_access.exp?ref=3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
      "patch": "@@ -0,0 +1,52 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+if {[skip_ada_tests]} {\n+    return -1\n+}\n+\n+standard_ada_testfile mi_access\n+\n+load_lib mi-support.exp\n+set MIFLAGS \"-i=mi\"\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable debug] != \"\" } {\n+    return -1\n+}\n+\n+if {[mi_gdb_start]} {\n+    continue\n+}\n+\n+mi_delete_breakpoints\n+mi_gdb_reinitialize_dir $srcdir/$subdir\n+mi_gdb_load ${binfile}\n+\n+if ![mi_run_to_main] then {\n+    fail \"cannot run to main, testcase aborted\"\n+    return 0\n+}\n+\n+set bp_location [gdb_get_line_number \"STOP\" ${testdir}/mi_access.adb]\n+mi_continue_to_line \\\n+    \"mi_access.adb:$bp_location\" \\\n+    \"stop at start of mi_access\"\n+\n+# The bug was that creating a varobj for A_String_Access would crash.\n+mi_gdb_test \"-var-create A_String_Access * A_String_Access\" \\\n+    \"\\\\^done,name=\\\"A_String_Access\\\",numchild=\\\"1\\\",.*\" \\\n+    \"Create varobj\""
    },
    {
      "sha": "d5f5f8814632e7dfbe30cc364d32da58010c2b45",
      "filename": "gdb/testsuite/gdb.ada/mi_var_access/mi_access.adb",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access/mi_access.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access/mi_access.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_var_access/mi_access.adb?ref=3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
      "patch": "@@ -0,0 +1,37 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with Pck; use Pck;\n+\n+procedure Mi_Access is\n+   A_String : String (3 .. 5) := \"345\"; -- STOP\n+   A_String_Access : String_Access;\n+   A_Pointer : Pointer;\n+begin\n+   Do_Nothing (A_String'Address);\n+   A_String (4) := '6';\n+   A_String_Access := Copy (A_String);\n+   A_Pointer.P := A_String_Access;\n+   Do_Nothing (A_String_Access'Address);\n+   A_String_Access (4) := 'a';\n+   Do_Nothing (A_Pointer'Address);\n+   A_String_Access := Copy(\"Hi\");\n+   A_Pointer.P := A_String_Access;\n+   Do_Nothing (A_String_Access'Address);\n+   A_String_Access := null;\n+   A_Pointer.P := null;\n+   Do_Nothing (A_Pointer'Address);\n+   Do_Nothing (A_String'Address);\n+end Mi_Access;"
    },
    {
      "sha": "9aff885f65b0fa7e39193478147fb77775a78277",
      "filename": "gdb/testsuite/gdb.ada/mi_var_access/pck.adb",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access/pck.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access/pck.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_var_access/pck.adb?ref=3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
      "patch": "@@ -0,0 +1,26 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package body Pck is\n+   function Copy (S : String) return String_Access is\n+   begin\n+      return new String'(S);\n+   end Copy;\n+\n+   procedure Do_Nothing (A : System.Address) is\n+   begin\n+      null;\n+   end Do_Nothing;\n+end Pck;"
    },
    {
      "sha": "307a0aacd6d69353378d4ec3d1952190d83c9750",
      "filename": "gdb/testsuite/gdb.ada/mi_var_access/pck.ads",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ae7ab999277b5d668d89fed5a7707f7778f5e6b/gdb/testsuite/gdb.ada/mi_var_access/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_var_access/pck.ads?ref=3ae7ab999277b5d668d89fed5a7707f7778f5e6b",
      "patch": "@@ -0,0 +1,23 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with System;\n+package Pck is\n+   type String_Access is access all String;\n+   type Pointer is record P : String_Access; end record;\n+\n+   function Copy (S : String) return String_Access;\n+   procedure Do_Nothing (A : System.Address);\n+end Pck;"
    }
  ]
}