{
  "sha": "d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDY5Y2Q0N2U3ZTk4ODRmN2IzYTMxOTkzNmY3MGI4ZDkzMzQ3ZTllMA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-07-09T02:57:55Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-07-09T05:00:00Z"
    },
    "message": "Re: gas/ELF: don't accumulate .type settings\n\ngit commit f2d4ba38f5 caused many failures for mips-sgi-irix targets,\nand added a new test that failed for aarch64, nds32, and rl78.\nThe mips failures are due to BSF_OBJECT being set in many cases for\nsymbols by the mips .global/.globl directive.  This patch removes that\ncode and instead sets BSF_OBJECT in a target frob_symbol function,\nalso moving the mips hacks in elf_frob_symbol to the new function.\n\nNote that common symbols are handled fine in elf.c:swap_out_syms\nwithout needing to set BSF_OBJECT, so that old code can disappear.\n\n\t* config/obj-elf.c (elf_frob_symbol): Remove mips hacks.\n\t* config/tc-mips.h (tc_frob_symbol): Define.\n\t(mips_frob_symbol): Declare.\n\t* config/tc-mips.c (s_mips_globl): Don't set BSF_OBJECT for irix.\n\t(mips_frob_symbol): Fudge symbols for irix here.\n\t* testsuite/gas/elf/type-2.e: Allow random target symbols.",
    "tree": {
      "sha": "0f20c0314732be1cc380e0701b207e3176d6304b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f20c0314732be1cc380e0701b207e3176d6304b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "64da05d557f59814151e908a34f36996a027d127",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64da05d557f59814151e908a34f36996a027d127",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/64da05d557f59814151e908a34f36996a027d127"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 42,
    "deletions": 29
  },
  "files": [
    {
      "sha": "0ec0d52b360f2158001da125d22e1d4acdc354b7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
      "patch": "@@ -1,3 +1,12 @@\n+2019-07-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/obj-elf.c (elf_frob_symbol): Remove mips hacks.\n+\t* config/tc-mips.h (tc_frob_symbol): Define.\n+\t(mips_frob_symbol): Declare.\n+\t* config/tc-mips.c (s_mips_globl): Don't set BSF_OBJECT for irix.\n+\t(mips_frob_symbol): Fudge symbols for irix here.\n+\t* testsuite/gas/elf/type-2.e: Allow random target symbols.\n+\n 2019-07-05  Kito Cheng <kito.cheng@sifive.com>\n \n \t* doc/c-riscv.texi (Instruction Formats): Add r4 type."
    },
    {
      "sha": "af35feeec2f259db45e128a16cedc9db8494edff",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
      "patch": "@@ -2369,23 +2369,6 @@ elf_frob_symbol (symbolS *symp, int *puntp)\n \tas_bad (_(\"symbol `%s' can not be both weak and common\"),\n \t\tS_GET_NAME (symp));\n     }\n-\n-#ifdef TC_MIPS\n-  /* The Irix 5 and 6 assemblers set the type of any common symbol and\n-     any undefined non-function symbol to STT_OBJECT.  We try to be\n-     compatible, since newer Irix 5 and 6 linkers care.  However, we\n-     only set undefined symbols to be STT_OBJECT if we are on Irix,\n-     because that is the only time gcc will generate the necessary\n-     .global directives to mark functions.  */\n-\n-  if (S_IS_COMMON (symp))\n-    symbol_get_bfdsym (symp)->flags |= BSF_OBJECT;\n-\n-  if (strstr (TARGET_OS, \"irix\") != NULL\n-      && ! S_IS_DEFINED (symp)\n-      && (symbol_get_bfdsym (symp)->flags & BSF_FUNCTION) == 0)\n-    symbol_get_bfdsym (symp)->flags |= BSF_OBJECT;\n-#endif\n }\n \n struct group_list"
    },
    {
      "sha": "b7b4b6989a12d3091a02de7155fbea3adbf1c9d7",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 18,
      "deletions": 12,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
      "patch": "@@ -16461,7 +16461,6 @@ s_mips_globl (int x ATTRIBUTE_UNUSED)\n   char *name;\n   int c;\n   symbolS *symbolP;\n-  flagword flag;\n \n   do\n     {\n@@ -16472,14 +16471,6 @@ s_mips_globl (int x ATTRIBUTE_UNUSED)\n       *input_line_pointer = c;\n       SKIP_WHITESPACE_AFTER_NAME ();\n \n-#ifdef TE_IRIX\n-      /* On Irix 5, every global symbol that is not explicitly labelled as\n-         being a function is apparently labelled as being an object.  */\n-      flag = BSF_OBJECT;\n-#else\n-      flag = BSF_NO_FLAGS;\n-#endif\n-\n       if (!is_end_of_line[(unsigned char) *input_line_pointer]\n \t  && (*input_line_pointer != ','))\n \t{\n@@ -16493,11 +16484,9 @@ s_mips_globl (int x ATTRIBUTE_UNUSED)\n \t  (void) restore_line_pointer (c);\n \n \t  if (sec != NULL && (sec->flags & SEC_CODE) != 0)\n-\t    flag = BSF_FUNCTION;\n+\t    symbol_get_bfdsym (symbolP)->flags |= BSF_FUNCTION;\n \t}\n \n-      symbol_get_bfdsym (symbolP)->flags |= flag;\n-\n       c = *input_line_pointer;\n       if (c == ',')\n \t{\n@@ -16512,6 +16501,23 @@ s_mips_globl (int x ATTRIBUTE_UNUSED)\n   demand_empty_rest_of_line ();\n }\n \n+#ifdef TE_IRIX\n+/* The Irix 5 and 6 assemblers set the type of any common symbol and\n+   any undefined non-function symbol to STT_OBJECT.  We try to be\n+   compatible, since newer Irix 5 and 6 linkers care.  */\n+\n+void\n+mips_frob_symbol (symbolS *symp ATTRIBUTE_UNUSED)\n+{\n+  /* This late in assembly we can set BSF_OBJECT indiscriminately\n+     and let elf.c:swap_out_syms sort out the symbol type.  */\n+  flagword *flags = &symbol_get_bfdsym (symp)->flags;\n+  if ((*flags & (BSF_GLOBAL | BSF_WEAK)) != 0\n+      || !S_IS_DEFINED (symp))\n+    *flags |= BSF_OBJECT;\n+}\n+#endif\n+\n static void\n s_option (int x ATTRIBUTE_UNUSED)\n {"
    },
    {
      "sha": "a928c8a49cdc87d094bc3c154b3e7c97b3031187",
      "filename": "gas/config/tc-mips.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/config/tc-mips.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/config/tc-mips.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.h?ref=d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
      "patch": "@@ -126,6 +126,11 @@ extern void mips_frob_file (void);\n extern void mips_frob_file_after_relocs (void);\n #endif\n \n+#ifdef TE_IRIX\n+#define tc_frob_symbol(sym, punt) mips_frob_symbol (sym)\n+extern void mips_frob_symbol (symbolS *);\n+#endif\n+\n #define tc_fix_adjustable(fixp) mips_fix_adjustable (fixp)\n extern int mips_fix_adjustable (struct fix *);\n "
    },
    {
      "sha": "57f21068cc2ac02c06fc57d2ad8144e93798c2c5",
      "filename": "gas/testsuite/gas/elf/type-2.e",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/testsuite/gas/elf/type-2.e",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d69cd47e7e9884f7b3a319936f70b8d93347e9e0/gas/testsuite/gas/elf/type-2.e",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/type-2.e?ref=d69cd47e7e9884f7b3a319936f70b8d93347e9e0",
      "patch": "@@ -1,10 +1,20 @@\n  +.+: 0+0 +0 +NOTYPE +LOCAL +DEFAULT +UND *\n+#...\n  +.+: 0+0 +0 +OBJECT +LOCAL +DEFAULT +. test1\n+#...\n  +.+: 0+1 +0 +FUNC +LOCAL +DEFAULT +. test2\n+#...\n  +.+: 0+2 +0 +NOTYPE +LOCAL +DEFAULT +. test3\n+#...\n  +.+: 0+3 +0 +NOTYPE +LOCAL +DEFAULT +. test4\n+#...\n  +.+: 0+4 +0 +NOTYPE +LOCAL +DEFAULT +. test5\n+#...\n  +.+: 0+5 +0 +NOTYPE +LOCAL +DEFAULT +. test6\n+#...\n  +.+: 0+6 +0 +OBJECT +LOCAL +DEFAULT +. test7\n+#...\n  +.+: 0+7 +0 +TLS +LOCAL +DEFAULT +. test8\n+#...\n  +.+: 0+8 +0 +IFUNC +LOCAL +DEFAULT +. test9\n+#pass"
    }
  ]
}