{
  "sha": "9aac24b1a8382f257c4ea223ebefd5e397dfe59b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWFhYzI0YjFhODM4MmYyNTdjNGVhMjIzZWJlZmQ1ZTM5N2RmZTU5Yg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-07T10:02:40Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-07T10:02:40Z"
    },
    "message": "x86: move register check in immediate operand parsing\n\ni386_finalize_immediate() is used for both AT&T and Intel immediate\noperand handling. Move an AT&T-only check to i386_immediate(), which at\nthe same time allows it to cover other cases as well, giving an overall\nbetter / more consistent diagnostic.",
    "tree": {
      "sha": "01e8999d011e26681589d58b968208fdce1af02e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/01e8999d011e26681589d58b968208fdce1af02e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9aac24b1a8382f257c4ea223ebefd5e397dfe59b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9aac24b1a8382f257c4ea223ebefd5e397dfe59b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9aac24b1a8382f257c4ea223ebefd5e397dfe59b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9aac24b1a8382f257c4ea223ebefd5e397dfe59b/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "87ed972dc348404a4f8b820efa8dc79aaaa966f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87ed972dc348404a4f8b820efa8dc79aaaa966f2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/87ed972dc348404a4f8b820efa8dc79aaaa966f2"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 13,
    "deletions": 7
  },
  "files": [
    {
      "sha": "ba307b85f638c72fa5e350851f8c04dac1d09b01",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9aac24b1a8382f257c4ea223ebefd5e397dfe59b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9aac24b1a8382f257c4ea223ebefd5e397dfe59b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=9aac24b1a8382f257c4ea223ebefd5e397dfe59b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (i386_finalize_immediate): Move register\n+\tcheck ...\n+\t(i386_immediate): ... here.\n+\n 2021-05-07  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (optimize_imm): Drop redundant masking."
    },
    {
      "sha": "7e1d1552438182ad707465cfd1242458f382c3c5",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9aac24b1a8382f257c4ea223ebefd5e397dfe59b/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9aac24b1a8382f257c4ea223ebefd5e397dfe59b/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=9aac24b1a8382f257c4ea223ebefd5e397dfe59b",
      "patch": "@@ -10690,10 +10690,16 @@ i386_immediate (char *imm_start)\n     {\n       free (gotfree_input_line);\n \n-      if (exp->X_op == O_constant || exp->X_op == O_register)\n+      if (exp->X_op == O_constant)\n \texp->X_op = O_illegal;\n     }\n \n+  if (exp_seg == reg_section)\n+    {\n+      as_bad (_(\"illegal immediate register operand %s\"), imm_start);\n+      return 0;\n+    }\n+\n   return i386_finalize_immediate (exp_seg, exp, types, imm_start);\n }\n \n@@ -10731,12 +10737,6 @@ i386_finalize_immediate (segT exp_seg ATTRIBUTE_UNUSED, expressionS *exp,\n       return 0;\n     }\n #endif\n-  else if (!intel_syntax && exp_seg == reg_section)\n-    {\n-      if (imm_start)\n-\tas_bad (_(\"illegal immediate register operand %s\"), imm_start);\n-      return 0;\n-    }\n   else\n     {\n       /* This is an address.  The size of the address will be"
    }
  ]
}