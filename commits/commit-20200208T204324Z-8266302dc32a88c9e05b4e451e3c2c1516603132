{
  "sha": "8266302dc32a88c9e05b4e451e3c2c1516603132",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODI2NjMwMmRjMzJhODhjOWUwNWI0ZTQ1MWUzYzJjMTUxNjYwMzEzMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:43:24Z"
    },
    "message": "Convert read_offset to method on comp_unit_head\n\nThis changes one of the read_offset overloads to be a method on\ncomp_unit_head.\n\n2020-02-08  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (read_attribute_value, read_indirect_string)\n\t(read_indirect_line_string): Update.\n\t* dwarf2/comp-unit.c (read_offset): Remove.\n\t(read_comp_unit_head): Update.\n\t* dwarf2/comp-unit.h (struct comp_unit_head) <read_offset>: New\n\tmethod.\n\t(read_offset): Don't declare.\n\nChange-Id: Ia595702a5748337b7c031352bc437956baab9990",
    "tree": {
      "sha": "11332dff1c23623a3de7431ec7b1282bdb0772bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/11332dff1c23623a3de7431ec7b1282bdb0772bb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8266302dc32a88c9e05b4e451e3c2c1516603132",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8266302dc32a88c9e05b4e451e3c2c1516603132",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8266302dc32a88c9e05b4e451e3c2c1516603132",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8266302dc32a88c9e05b4e451e3c2c1516603132/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4057dfde49d7867ad41906ed11705e450a08b4cf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4057dfde49d7867ad41906ed11705e450a08b4cf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4057dfde49d7867ad41906ed11705e450a08b4cf"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 32,
    "deletions": 32
  },
  "files": [
    {
      "sha": "db821ff24e43905328660c0d381a8acec37c6a85",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8266302dc32a88c9e05b4e451e3c2c1516603132",
      "patch": "@@ -1,3 +1,13 @@\n+2020-02-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (read_attribute_value, read_indirect_string)\n+\t(read_indirect_line_string): Update.\n+\t* dwarf2/comp-unit.c (read_offset): Remove.\n+\t(read_comp_unit_head): Update.\n+\t* dwarf2/comp-unit.h (struct comp_unit_head) <read_offset>: New\n+\tmethod.\n+\t(read_offset): Don't declare.\n+\n 2020-02-08  Tom Tromey  <tom@tromey.com>\n \n \t* Makefile.in (COMMON_SFILES): Add dwarf2/comp-unit.c."
    },
    {
      "sha": "847a148cbd2528a758f4b84a1ad221db43fb2637",
      "filename": "gdb/dwarf2/comp-unit.c",
      "status": "modified",
      "additions": 3,
      "deletions": 17,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/dwarf2/comp-unit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/dwarf2/comp-unit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/comp-unit.c?ref=8266302dc32a88c9e05b4e451e3c2c1516603132",
      "patch": "@@ -129,9 +129,8 @@ read_comp_unit_head (struct comp_unit_head *cu_header,\n       cu_header->addr_size = read_1_byte (abfd, info_ptr);\n       info_ptr += 1;\n     }\n-  cu_header->abbrev_sect_off = (sect_offset) read_offset (abfd, info_ptr,\n-\t\t\t\t\t\t\t  cu_header,\n-\t\t\t\t\t\t\t  &bytes_read);\n+  cu_header->abbrev_sect_off\n+    = (sect_offset) cu_header->read_offset (abfd, info_ptr, &bytes_read);\n   info_ptr += bytes_read;\n   if (cu_header->version < 5)\n     {\n@@ -157,7 +156,7 @@ read_comp_unit_head (struct comp_unit_head *cu_header,\n   if (section_kind == rcuh_kind::TYPE)\n     {\n       LONGEST type_offset;\n-      type_offset = read_offset (abfd, info_ptr, cu_header, &bytes_read);\n+      type_offset = cu_header->read_offset (abfd, info_ptr, &bytes_read);\n       info_ptr += bytes_read;\n       cu_header->type_cu_offset_in_tu = (cu_offset) type_offset;\n       if (to_underlying (cu_header->type_cu_offset_in_tu) != type_offset)\n@@ -222,16 +221,3 @@ read_and_check_comp_unit_head (struct dwarf2_per_objfile *dwarf2_per_objfile,\n \n   return info_ptr;\n }\n-\n-/* See comp-unit.h.  */\n-\n-LONGEST\n-read_offset (bfd *abfd, const gdb_byte *buf,\n-\t     const struct comp_unit_head *cu_header,\n-             unsigned int *bytes_read)\n-{\n-  LONGEST offset = read_offset (abfd, buf, cu_header->offset_size);\n-\n-  *bytes_read = cu_header->offset_size;\n-  return offset;\n-}"
    },
    {
      "sha": "e61b1000b9e42b1d27f1c8b861c2a1147d2d5ccc",
      "filename": "gdb/dwarf2/comp-unit.h",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/dwarf2/comp-unit.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/dwarf2/comp-unit.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/comp-unit.h?ref=8266302dc32a88c9e05b4e451e3c2c1516603132",
      "patch": "@@ -27,6 +27,7 @@\n #ifndef GDB_DWARF2_COMP_UNIT_H\n #define GDB_DWARF2_COMP_UNIT_H\n \n+#include \"dwarf2/leb.h\"\n #include \"gdbtypes.h\"\n \n /* The data in a compilation unit header, after target2host\n@@ -78,6 +79,16 @@ struct comp_unit_head\n     sect_offset top = sect_off + get_length ();\n     return off >= bottom && off < top;\n   }\n+\n+  /* Read an offset from the data stream.  The size of the offset is\n+     given by cu_header->offset_size.  */\n+  LONGEST read_offset (bfd *abfd, const gdb_byte *buf,\n+\t\t       unsigned int *bytes_read) const\n+  {\n+    LONGEST offset = ::read_offset (abfd, buf, offset_size);\n+    *bytes_read = offset_size;\n+    return offset;\n+  }\n };\n \n /* Expected enum dwarf_unit_type for read_comp_unit_head.  */\n@@ -104,11 +115,4 @@ extern const gdb_byte *read_and_check_comp_unit_head\n    const gdb_byte *info_ptr,\n    rcuh_kind section_kind);\n \n-/* Read an offset from the data stream.  The size of the offset is\n-   given by cu_header->offset_size.  */\n-\n-extern LONGEST read_offset (bfd *abfd, const gdb_byte *buf,\n-\t\t\t    const struct comp_unit_head *cu_header,\n-\t\t\t    unsigned int *bytes_read);\n-\n #endif /* GDB_DWARF2_COMP_UNIT_H */"
    },
    {
      "sha": "8ea0b60e187d6f99dea0642ad24a165f33dea236",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8266302dc32a88c9e05b4e451e3c2c1516603132/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=8266302dc32a88c9e05b4e451e3c2c1516603132",
      "patch": "@@ -18448,12 +18448,12 @@ read_attribute_value (const struct die_reader_specs *reader,\n       if (cu->header.version == 2)\n \tDW_UNSND (attr) = read_address (abfd, info_ptr, cu, &bytes_read);\n       else\n-\tDW_UNSND (attr) = read_offset (abfd, info_ptr,\n-\t\t\t\t       &cu->header, &bytes_read);\n+\tDW_UNSND (attr) = cu->header.read_offset (abfd, info_ptr,\n+\t\t\t\t\t\t  &bytes_read);\n       info_ptr += bytes_read;\n       break;\n     case DW_FORM_GNU_ref_alt:\n-      DW_UNSND (attr) = read_offset (abfd, info_ptr, &cu->header, &bytes_read);\n+      DW_UNSND (attr) = cu->header.read_offset (abfd, info_ptr, &bytes_read);\n       info_ptr += bytes_read;\n       break;\n     case DW_FORM_addr:\n@@ -18497,7 +18497,7 @@ read_attribute_value (const struct die_reader_specs *reader,\n       DW_BLOCK (attr) = blk;\n       break;\n     case DW_FORM_sec_offset:\n-      DW_UNSND (attr) = read_offset (abfd, info_ptr, &cu->header, &bytes_read);\n+      DW_UNSND (attr) = cu->header.read_offset (abfd, info_ptr, &bytes_read);\n       info_ptr += bytes_read;\n       break;\n     case DW_FORM_string:\n@@ -18530,8 +18530,8 @@ read_attribute_value (const struct die_reader_specs *reader,\n     case DW_FORM_GNU_strp_alt:\n       {\n \tstruct dwz_file *dwz = dwarf2_get_dwz_file (dwarf2_per_objfile);\n-\tLONGEST str_offset = read_offset (abfd, info_ptr, cu_header,\n-\t\t\t\t\t  &bytes_read);\n+\tLONGEST str_offset = cu_header->read_offset (abfd, info_ptr,\n+\t\t\t\t\t\t     &bytes_read);\n \n \tDW_STRING (attr) = read_indirect_string_from_dwz (objfile,\n \t\t\t\t\t\t\t  dwz, str_offset);\n@@ -18892,7 +18892,7 @@ read_indirect_string (struct dwarf2_per_objfile *dwarf2_per_objfile, bfd *abfd,\n \t\t      const struct comp_unit_head *cu_header,\n \t\t      unsigned int *bytes_read_ptr)\n {\n-  LONGEST str_offset = read_offset (abfd, buf, cu_header, bytes_read_ptr);\n+  LONGEST str_offset = cu_header->read_offset (abfd, buf, bytes_read_ptr);\n \n   return read_indirect_string_at_offset (dwarf2_per_objfile, abfd, str_offset);\n }\n@@ -18907,7 +18907,7 @@ read_indirect_line_string (struct dwarf2_per_objfile *dwarf2_per_objfile,\n \t\t\t   const struct comp_unit_head *cu_header,\n \t\t\t   unsigned int *bytes_read_ptr)\n {\n-  LONGEST str_offset = read_offset (abfd, buf, cu_header, bytes_read_ptr);\n+  LONGEST str_offset = cu_header->read_offset (abfd, buf, bytes_read_ptr);\n \n   return read_indirect_line_string_at_offset (dwarf2_per_objfile, abfd,\n \t\t\t\t\t      str_offset);"
    }
  ]
}