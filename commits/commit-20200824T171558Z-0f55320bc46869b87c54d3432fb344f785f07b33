{
  "sha": "0f55320bc46869b87c54d3432fb344f785f07b33",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGY1NTMyMGJjNDY4NjliODdjNTRkMzQzMmZiMzQ0Zjc4NWYwN2IzMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-24T17:07:02Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-24T17:15:58Z"
    },
    "message": "elf_hash_table_id access\n\n\t* elf-m10300.c (elf32_mn10300_hash_table): Test is_elf_hash_table\n\tbefore accessing elf_hash_table_id.\n\t* elf32-arc.c (elf_arc_hash_table): Likewise.\n\t* elf32-arm.c (elf32_arm_hash_table): Likewise.\n\t* elf32-avr.c (avr_link_hash_table): Likewise.\n\t* elf32-bfin.c (bfinfdpic_hash_table): Likewise.\n\t* elf32-cris.c (elf_cris_hash_table): Likewise.\n\t* elf32-csky.c (csky_elf_hash_table): Likewise.\n\t* elf32-frv.c (frvfdpic_hash_table): Likewise.\n\t* elf32-hppa.c (hppa_link_hash_table): Likewise.\n\t* elf32-lm32.c (lm32_elf_hash_table): Likewise.\n\t* elf32-m32r.c (m32r_elf_hash_table): Likewise.\n\t* elf32-m68hc1x.h (m68hc11_elf_hash_table): Likewise.\n\t* elf32-m68k.c (elf_m68k_hash_table): Likewise.\n\t* elf32-metag.c (metag_link_hash_table): Likewise.\n\t* elf32-microblaze.c (elf32_mb_hash_table): Likewise.\n\t* elf32-nds32.h (nds32_elf_hash_table): Likewise.\n\t* elf32-or1k.c (or1k_elf_hash_table): Likewise.\n\t* elf32-s390.c (elf_s390_hash_table): Likewise.\n\t* elf32-sh.c (sh_elf_hash_table): Likewise.\n\t* elf32-spu.c (spu_hash_table): Likewise.\n\t* elf32-tilepro.c (tilepro_elf_hash_table): Likewise.\n\t* elf32-xtensa.c (elf_xtensa_hash_table): Likewise.\n\t* elf64-alpha.c (alpha_elf_hash_table): Likewise.\n\t* elf64-hppa.c (hppa_link_hash_table): Likewise.\n\t* elf64-ia64-vms.c (elf64_ia64_hash_table): Likewise.\n\t* elf64-s390.c (elf_s390_hash_table): Likewise.\n\t* elfnn-ia64.c (elfNN_ia64_hash_table): Likewise.\n\t* elfnn-riscv.c (riscv_elf_hash_table): Likewise.\n\t* elfxx-mips.c (mips_elf_hash_table): Likewise.\n\t* elfxx-sparc.h (_bfd_sparc_elf_hash_table): Likewise.\n\t* elfxx-tilegx.c (tilegx_elf_hash_table): Likewise.",
    "tree": {
      "sha": "678f13a5750f7487ee7700036acc80b27292f36c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/678f13a5750f7487ee7700036acc80b27292f36c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0f55320bc46869b87c54d3432fb344f785f07b33",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f55320bc46869b87c54d3432fb344f785f07b33",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0f55320bc46869b87c54d3432fb344f785f07b33",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f55320bc46869b87c54d3432fb344f785f07b33/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3cdad0846b5f37898798d4145e5b991900a46ec5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3cdad0846b5f37898798d4145e5b991900a46ec5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3cdad0846b5f37898798d4145e5b991900a46ec5"
    }
  ],
  "stats": {
    "total": 205,
    "additions": 133,
    "deletions": 72
  },
  "files": [
    {
      "sha": "0c638590fce949fd169593827b2dadaa627134cb",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -1,3 +1,38 @@\n+2020-08-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf-m10300.c (elf32_mn10300_hash_table): Test is_elf_hash_table\n+\tbefore accessing elf_hash_table_id.\n+\t* elf32-arc.c (elf_arc_hash_table): Likewise.\n+\t* elf32-arm.c (elf32_arm_hash_table): Likewise.\n+\t* elf32-avr.c (avr_link_hash_table): Likewise.\n+\t* elf32-bfin.c (bfinfdpic_hash_table): Likewise.\n+\t* elf32-cris.c (elf_cris_hash_table): Likewise.\n+\t* elf32-csky.c (csky_elf_hash_table): Likewise.\n+\t* elf32-frv.c (frvfdpic_hash_table): Likewise.\n+\t* elf32-hppa.c (hppa_link_hash_table): Likewise.\n+\t* elf32-lm32.c (lm32_elf_hash_table): Likewise.\n+\t* elf32-m32r.c (m32r_elf_hash_table): Likewise.\n+\t* elf32-m68hc1x.h (m68hc11_elf_hash_table): Likewise.\n+\t* elf32-m68k.c (elf_m68k_hash_table): Likewise.\n+\t* elf32-metag.c (metag_link_hash_table): Likewise.\n+\t* elf32-microblaze.c (elf32_mb_hash_table): Likewise.\n+\t* elf32-nds32.h (nds32_elf_hash_table): Likewise.\n+\t* elf32-or1k.c (or1k_elf_hash_table): Likewise.\n+\t* elf32-s390.c (elf_s390_hash_table): Likewise.\n+\t* elf32-sh.c (sh_elf_hash_table): Likewise.\n+\t* elf32-spu.c (spu_hash_table): Likewise.\n+\t* elf32-tilepro.c (tilepro_elf_hash_table): Likewise.\n+\t* elf32-xtensa.c (elf_xtensa_hash_table): Likewise.\n+\t* elf64-alpha.c (alpha_elf_hash_table): Likewise.\n+\t* elf64-hppa.c (hppa_link_hash_table): Likewise.\n+\t* elf64-ia64-vms.c (elf64_ia64_hash_table): Likewise.\n+\t* elf64-s390.c (elf_s390_hash_table): Likewise.\n+\t* elfnn-ia64.c (elfNN_ia64_hash_table): Likewise.\n+\t* elfnn-riscv.c (riscv_elf_hash_table): Likewise.\n+\t* elfxx-mips.c (mips_elf_hash_table): Likewise.\n+\t* elfxx-sparc.h (_bfd_sparc_elf_hash_table): Likewise.\n+\t* elfxx-tilegx.c (tilegx_elf_hash_table): Likewise.\n+\n 2020-08-21  Jon Turney  <jon.turney@dronecode.org.uk>\n \n \t* elf.c (elfcore_grok_win32pstatus): Change name_size to unsigned"
    },
    {
      "sha": "ae8cac84e67bc8b124f1b23626df3a7c59effa7e",
      "filename": "bfd/elf-m10300.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf-m10300.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf-m10300.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-m10300.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -128,8 +128,9 @@ struct elf_mn10300_obj_tdata\n /* Get the MN10300 ELF linker hash table from a link_info structure.  */\n \n #define elf32_mn10300_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == MN10300_ELF_DATA ? ((struct elf32_mn10300_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == MN10300_ELF_DATA)\t\\\n+   ? (struct elf32_mn10300_link_hash_table *) (p)->hash : NULL)\n \n #define elf32_mn10300_link_hash_traverse(table, func, info)\t\t\\\n   (elf_link_hash_traverse\t\t\t\t\t\t\\"
    },
    {
      "sha": "7d282f39ac2667282e9b44fd0da14769f4c32113",
      "filename": "bfd/elf32-arc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-arc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-arc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arc.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -1939,8 +1939,9 @@ elf_arc_relocate_section (bfd *\t\t\t  output_bfd,\n }\n \n #define elf_arc_hash_table(p) \\\n-    (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == ARC_ELF_DATA ? ((struct elf_arc_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == ARC_ELF_DATA)\t\t\\\n+   ? (struct elf_arc_link_hash_table *) (p)->hash : NULL)\n \n static bfd_boolean\n elf_arc_check_relocs (bfd *\t\t\t abfd,"
    },
    {
      "sha": "66930c0c7dc1da0b621f5ea23a96a2d17383f9d2",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -3255,9 +3255,10 @@ struct elf32_arm_link_hash_entry\n     (info)))\n \n /* Get the ARM elf linker hash table from a link_info structure.  */\n-#define elf32_arm_hash_table(info) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((info)->hash)) \\\n-  == ARM_ELF_DATA ? ((struct elf32_arm_link_hash_table *) ((info)->hash)) : NULL)\n+#define elf32_arm_hash_table(p) \\\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == ARM_ELF_DATA)\t\t\\\n+   ? (struct elf32_arm_link_hash_table *) (p)->hash : NULL)\n \n #define arm_stub_hash_lookup(table, string, create, copy) \\\n   ((struct elf32_arm_stub_hash_entry *) \\"
    },
    {
      "sha": "9adf627975d0748ff77c400798272d794ce43105",
      "filename": "bfd/elf32-avr.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-avr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-avr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-avr.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -106,9 +106,9 @@ struct elf32_avr_link_hash_table\n \n /* Various hash macros and functions.  */\n #define avr_link_hash_table(p) \\\n-  /* PR 3874: Check that we have an AVR style hash table before using it.  */\\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == AVR_ELF_DATA ? ((struct elf32_avr_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == AVR_ELF_DATA)\t\t\\\n+   ? (struct elf32_avr_link_hash_table *) (p)->hash : NULL)\n \n #define avr_stub_hash_entry(ent) \\\n   ((struct elf32_avr_stub_hash_entry *)(ent))"
    },
    {
      "sha": "ab928530db60d8f412896fda51b8cdca419ff08e",
      "filename": "bfd/elf32-bfin.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-bfin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-bfin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-bfin.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -1668,9 +1668,10 @@ struct bfinfdpic_elf_link_hash_table\n \n /* Get the Blackfin ELF linker hash table from a link_info structure.  */\n \n-#define bfinfdpic_hash_table(info) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((info)->hash)) \\\n-  == BFIN_ELF_DATA ? ((struct bfinfdpic_elf_link_hash_table *) ((info)->hash)) : NULL)\n+#define bfinfdpic_hash_table(p) \\\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == BFIN_ELF_DATA)\t\t\\\n+   ? (struct bfinfdpic_elf_link_hash_table *) (p)->hash : NULL)\n \n #define bfinfdpic_got_section(info) \\\n   (bfinfdpic_hash_table (info)->elf.sgot)"
    },
    {
      "sha": "6e5a2d87d6242ac53ca99ed3529d3656ead0e351",
      "filename": "bfd/elf32-cris.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-cris.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-cris.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-cris.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -837,8 +837,9 @@ struct elf_cris_link_hash_table\n /* Get the CRIS ELF linker hash table from a link_info structure.  */\n \n #define elf_cris_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == CRIS_ELF_DATA ? ((struct elf_cris_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == CRIS_ELF_DATA)\t\t\\\n+   ? (struct elf_cris_link_hash_table *) (p)->hash : NULL)\n \n /* Get the CRIS ELF linker hash entry from a regular hash entry (the\n    \"parent class\").  The .root reference is just a simple type"
    },
    {
      "sha": "7806ec7417ad1ec06b304581ed2e53ffaf86470c",
      "filename": "bfd/elf32-csky.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-csky.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-csky.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-csky.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -1184,11 +1184,10 @@ struct csky_elf_link_hash_entry\n     (info)))\n \n /* Get the C-SKY ELF linker hash table from a link_info structure.  */\n-#define csky_elf_hash_table(info) \\\n-  ((elf_hash_table_id  ((struct elf_link_hash_table *) ((info)->hash))\t\\\n-    == CSKY_ELF_DATA)\t\t\t\t\t\t\t\\\n-   ? ((struct csky_elf_link_hash_table *) ((info)->hash))\t\t\\\n-   : NULL)\n+#define csky_elf_hash_table(p) \\\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == CSKY_ELF_DATA)\t\t\\\n+   ? (struct csky_elf_link_hash_table *) (p)->hash : NULL)\n \n #define csky_elf_hash_entry(ent)  ((struct csky_elf_link_hash_entry*)(ent))\n "
    },
    {
      "sha": "9908c0112a5fac731f355c32f565636e469cf187",
      "filename": "bfd/elf32-frv.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-frv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-frv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-frv.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -826,8 +826,9 @@ struct frvfdpic_elf_link_hash_table\n /* Get the FRV ELF linker hash table from a link_info structure.  */\n \n #define frvfdpic_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == FRV_ELF_DATA ? ((struct frvfdpic_elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == FRV_ELF_DATA)\t\t\\\n+   ? (struct frvfdpic_elf_link_hash_table *) (p)->hash : NULL)\n \n #define frvfdpic_got_section(info) \\\n   (frvfdpic_hash_table (info)->elf.sgot)"
    },
    {
      "sha": "b9b1dad1aef3d25d4041cfda3f9667a88e9aef37",
      "filename": "bfd/elf32-hppa.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-hppa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-hppa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-hppa.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -296,8 +296,9 @@ struct elf32_hppa_link_hash_table\n \n /* Various hash macros and functions.  */\n #define hppa_link_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == HPPA32_ELF_DATA ? ((struct elf32_hppa_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == HPPA32_ELF_DATA)\t\\\n+   ? (struct elf32_hppa_link_hash_table *) (p)->hash : NULL)\n \n #define hppa_elf_hash_entry(ent) \\\n   ((struct elf32_hppa_link_hash_entry *)(ent))"
    },
    {
      "sha": "1751b66bae6e049ec4841a8fa733c43939de59f3",
      "filename": "bfd/elf32-lm32.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-lm32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-lm32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-lm32.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -67,8 +67,9 @@ struct elf_lm32_link_hash_table\n /* Get the lm32 ELF linker hash table from a link_info structure.  */\n \n #define lm32_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == LM32_ELF_DATA ? ((struct elf_lm32_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == LM32_ELF_DATA)\t\t\\\n+   ? (struct elf_lm32_link_hash_table *) (p)->hash : NULL)\n \n #define lm32fdpic_got_section(info) \\\n   (lm32_elf_hash_table (info)->root.sgot)"
    },
    {
      "sha": "533d662ee8956b2df1fe8c5c0db855aa13e32fb1",
      "filename": "bfd/elf32-m32r.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-m32r.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-m32r.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m32r.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -1509,8 +1509,9 @@ struct elf_m32r_pcrel_relocs_copied\n /* Get the m32r ELF linker hash table from a link_info structure.  */\n \n #define m32r_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == M32R_ELF_DATA ? ((struct elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == M32R_ELF_DATA)\t\t\\\n+   ? (struct elf_link_hash_table *) (p)->hash : NULL)\n \n /* Create an m32r ELF linker hash table.  */\n "
    },
    {
      "sha": "f88f276772b331bfd2539804cfbb076379fefaa1",
      "filename": "bfd/elf32-m68hc1x.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-m68hc1x.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-m68hc1x.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m68hc1x.h?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -127,8 +127,9 @@ struct m68hc11_elf_link_hash_table\n /* Get the Sparc64 ELF linker hash table from a link_info structure.  */\n \n #define m68hc11_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == M68HC11_ELF_DATA ? ((struct m68hc11_elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == M68HC11_ELF_DATA)\t\\\n+   ? (struct m68hc11_elf_link_hash_table *) (p)->hash : NULL)\n \n /* Create a 68HC11/68HC12 ELF linker hash table.  */\n "
    },
    {
      "sha": "b9b8bec6aa89f00ec5c3dd084e5a058155eb6c71",
      "filename": "bfd/elf32-m68k.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-m68k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-m68k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m68k.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -910,8 +910,9 @@ struct elf_m68k_link_hash_table\n /* Get the m68k ELF linker hash table from a link_info structure.  */\n \n #define elf_m68k_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == M68K_ELF_DATA ? ((struct elf_m68k_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == M68K_ELF_DATA)\t\t\\\n+   ? (struct elf_m68k_link_hash_table *) (p)->hash : NULL)\n \n /* Shortcut to multi-GOT data.  */\n #define elf_m68k_multi_got(INFO) (&elf_m68k_hash_table (INFO)->multi_got_)"
    },
    {
      "sha": "e3203b264f34d34b97bdd006f2bbd8ff1aefae7c",
      "filename": "bfd/elf32-metag.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-metag.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-metag.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-metag.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -906,8 +906,9 @@ metag_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n \n /* Various hash macros and functions.  */\n #define metag_link_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == METAG_ELF_DATA ? ((struct elf_metag_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == METAG_ELF_DATA)\t\\\n+   ? (struct elf_metag_link_hash_table *) (p)->hash : NULL)\n \n #define metag_elf_hash_entry(ent) \\\n   ((struct elf_metag_link_hash_entry *)(ent))"
    },
    {
      "sha": "1b5c2efcd6edfe372cfcd3fb9b75c251aac2f60d",
      "filename": "bfd/elf32-microblaze.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-microblaze.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-microblaze.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-microblaze.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -756,9 +756,10 @@ struct elf32_mb_link_hash_table\n \n /* Get the ELF linker hash table from a link_info structure.  */\n \n-#define elf32_mb_hash_table(p)\t\t\t\t\\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == MICROBLAZE_ELF_DATA ? ((struct elf32_mb_link_hash_table *) ((p)->hash)) : NULL)\n+#define elf32_mb_hash_table(p) \\\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == MICROBLAZE_ELF_DATA)\t\\\n+   ? (struct elf32_mb_link_hash_table *) (p)->hash : NULL)\n \n /* Create an entry in a microblaze ELF linker hash table.  */\n "
    },
    {
      "sha": "57da1a206a158c3825e282efe8bdb5045c56cd65",
      "filename": "bfd/elf32-nds32.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-nds32.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-nds32.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-nds32.h?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -104,10 +104,10 @@ extern void\t   bfd_elf32_nds32_set_target_option (struct bfd_link_info *,\n \t\t\t\t\t\t      int, int, FILE *,\n \t\t\t\t\t\t      int, int, int);\n \n-#define nds32_elf_hash_table(info) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((info)->hash)) \\\n-   == NDS32_ELF_DATA ? \\\n-   ((struct elf_nds32_link_hash_table *) ((info)->hash)) : NULL)\n+#define nds32_elf_hash_table(p) \\\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == NDS32_ELF_DATA)\t\\\n+   ? (struct elf_nds32_link_hash_table *) (p)->hash : NULL)\n \n #define elf32_nds32_compute_jump_table_size(htab) \\\n   ((htab)->next_tls_desc_index * 4)"
    },
    {
      "sha": "38406eda3d686736049123b05194938770d56eb6",
      "filename": "bfd/elf32-or1k.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-or1k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-or1k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-or1k.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -921,8 +921,9 @@ struct elf_or1k_link_hash_table\n \n /* Get the ELF linker hash table from a link_info structure.  */\n #define or1k_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-   == OR1K_ELF_DATA ? ((struct elf_or1k_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == OR1K_ELF_DATA)\t\t\\\n+   ? (struct elf_or1k_link_hash_table *) (p)->hash : NULL)\n \n static bfd_boolean\n elf_or1k_mkobject (bfd *abfd)"
    },
    {
      "sha": "158f909d05a9b9f0d066100b401cc2eb268b9d31",
      "filename": "bfd/elf32-s390.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-s390.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-s390.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-s390.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -751,8 +751,9 @@ struct elf_s390_link_hash_table\n /* Get the s390 ELF linker hash table from a link_info structure.  */\n \n #define elf_s390_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == S390_ELF_DATA ? ((struct elf_s390_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == S390_ELF_DATA)\t\t\\\n+   ? (struct elf_s390_link_hash_table *) (p)->hash : NULL)\n \n #undef ELF64\n #include \"elf-s390-common.c\""
    },
    {
      "sha": "04949463ebf227d12cb42cf1b3168e3b4be8eb5d",
      "filename": "bfd/elf32-sh.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-sh.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-sh.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-sh.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -2192,8 +2192,9 @@ struct elf_sh_link_hash_table\n /* Get the sh ELF linker hash table from a link_info structure.  */\n \n #define sh_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == SH_ELF_DATA ? ((struct elf_sh_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == SH_ELF_DATA)\t\t\\\n+   ? (struct elf_sh_link_hash_table *) (p)->hash : NULL)\n \n /* Create an entry in an sh ELF linker hash table.  */\n "
    },
    {
      "sha": "13cff2c5e09880b0da7e49d05c1b131650394337",
      "filename": "bfd/elf32-spu.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-spu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-spu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-spu.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -371,8 +371,9 @@ struct got_entry\n };\n \n #define spu_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == SPU_ELF_DATA ? ((struct spu_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == SPU_ELF_DATA)\t\t\\\n+   ? (struct spu_link_hash_table *) (p)->hash : NULL)\n \n struct call_info\n {"
    },
    {
      "sha": "351146673943f839f07b14a7e0ae488eb10446e2",
      "filename": "bfd/elf32-tilepro.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-tilepro.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-tilepro.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-tilepro.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -729,9 +729,9 @@ tilepro_elf_mkobject (bfd *abfd)\n \n /* Get the Tilepro ELF linker hash table from a link_info structure.  */\n #define tilepro_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == TILEPRO_ELF_DATA \\\n-  ? ((struct elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == TILEPRO_ELF_DATA)\t\\\n+   ? (struct elf_link_hash_table *) (p)->hash : NULL)\n \n static reloc_howto_type *\n tilepro_reloc_type_lookup (bfd * abfd ATTRIBUTE_UNUSED,"
    },
    {
      "sha": "65c6ceb37942b9d8849efc4ea460a34156415ad9",
      "filename": "bfd/elf32-xtensa.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-xtensa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf32-xtensa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-xtensa.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -705,8 +705,9 @@ struct elf_xtensa_link_hash_table\n /* Get the Xtensa ELF linker hash table from a link_info structure.  */\n \n #define elf_xtensa_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == XTENSA_ELF_DATA ? ((struct elf_xtensa_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == XTENSA_ELF_DATA)\t\\\n+   ? (struct elf_xtensa_link_hash_table *) (p)->hash : NULL)\n \n /* Create an entry in an Xtensa ELF linker hash table.  */\n "
    },
    {
      "sha": "1976450fa4e5d0bd73a54793eed6fd15d6fddd32",
      "filename": "bfd/elf64-alpha.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-alpha.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -216,8 +216,9 @@ struct alpha_elf_link_hash_table\n /* Get the Alpha ELF linker hash table from a link_info structure.  */\n \n #define alpha_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == ALPHA_ELF_DATA ? ((struct alpha_elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == ALPHA_ELF_DATA)\t\\\n+   ? (struct alpha_elf_link_hash_table *) (p)->hash : NULL)\n \n /* Get the object's symbols as our own entry type.  */\n "
    },
    {
      "sha": "bf8207e3a7a53bf2a8cb439a9509614903125b74",
      "filename": "bfd/elf64-hppa.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-hppa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-hppa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-hppa.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -145,8 +145,9 @@ struct elf64_hppa_link_hash_table\n };\n \n #define hppa_link_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == HPPA64_ELF_DATA ? ((struct elf64_hppa_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == HPPA64_ELF_DATA)\t\\\n+   ? (struct elf64_hppa_link_hash_table *) (p)->hash : NULL)\n \n #define hppa_elf_hash_entry(ent) \\\n   ((struct elf64_hppa_link_hash_entry *)(ent))"
    },
    {
      "sha": "5ce8775459e117d86aea6afdd8626a1ee08ef51f",
      "filename": "bfd/elf64-ia64-vms.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-ia64-vms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-ia64-vms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ia64-vms.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -170,8 +170,9 @@ struct elf64_ia64_allocate_data\n };\n \n #define elf64_ia64_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == IA64_ELF_DATA ? ((struct elf64_ia64_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == IA64_ELF_DATA)\t\t\\\n+   ? (struct elf64_ia64_link_hash_table *) (p)->hash : NULL)\n \n struct elf64_ia64_vms_obj_tdata\n {"
    },
    {
      "sha": "0522850a5d8784fef2aece9a4b6c641c3b5ebce3",
      "filename": "bfd/elf64-s390.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-s390.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elf64-s390.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-s390.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -670,8 +670,9 @@ struct elf_s390_link_hash_table\n /* Get the s390 ELF linker hash table from a link_info structure.  */\n \n #define elf_s390_hash_table(p)\t\t\t\t\t\t\\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash))\t\\\n-   == S390_ELF_DATA ? ((struct elf_s390_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == S390_ELF_DATA)\t\t\\\n+   ? (struct elf_s390_link_hash_table *) (p)->hash : NULL)\n \n #define ELF64 1\n #include \"elf-s390-common.c\""
    },
    {
      "sha": "cadf645df9ebcb9d6e7b27cfa2e94edce68d794f",
      "filename": "bfd/elfnn-ia64.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfnn-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfnn-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-ia64.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -166,8 +166,9 @@ struct elfNN_ia64_allocate_data\n };\n \n #define elfNN_ia64_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == IA64_ELF_DATA ? ((struct elfNN_ia64_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == IA64_ELF_DATA)\t\t\\\n+   ? (struct elfNN_ia64_link_hash_table *) (p)->hash : NULL)\n \n static struct elfNN_ia64_dyn_sym_info * get_dyn_sym_info\n   (struct elfNN_ia64_link_hash_table *ia64_info,"
    },
    {
      "sha": "5af1b1c3ff336e74e6d65ea3a96dc1ee447bf75e",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -120,8 +120,9 @@ struct riscv_elf_link_hash_table\n \n /* Get the RISC-V ELF linker hash table from a link_info structure.  */\n #define riscv_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == RISCV_ELF_DATA ? ((struct riscv_elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == RISCV_ELF_DATA)\t\\\n+   ? (struct riscv_elf_link_hash_table *) (p)->hash : NULL)\n \n static bfd_boolean\n riscv_info_to_howto_rela (bfd *abfd,"
    },
    {
      "sha": "fda653e1afccf441269f7800b5f47fb98016bc17",
      "filename": "bfd/elfxx-mips.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfxx-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfxx-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-mips.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -534,8 +534,9 @@ struct mips_elf_link_hash_table\n /* Get the MIPS ELF linker hash table from a link_info structure.  */\n \n #define mips_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == MIPS_ELF_DATA ? ((struct mips_elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == MIPS_ELF_DATA)\t\t\\\n+   ? (struct mips_elf_link_hash_table *) (p)->hash : NULL)\n \n /* A structure used to communicate with htab_traverse callbacks.  */\n struct mips_htab_traverse_info"
    },
    {
      "sha": "6fbf237e67400b0b983cecb77471640262eb3916",
      "filename": "bfd/elfxx-sparc.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfxx-sparc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfxx-sparc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-sparc.h?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -84,8 +84,9 @@ struct _bfd_sparc_elf_link_hash_table\n /* Get the SPARC ELF linker hash table from a link_info structure.  */\n \n #define _bfd_sparc_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == SPARC_ELF_DATA ? ((struct _bfd_sparc_elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == SPARC_ELF_DATA)\t\\\n+   ? (struct _bfd_sparc_elf_link_hash_table *) (p)->hash : NULL)\n \n extern reloc_howto_type *_bfd_sparc_elf_reloc_type_lookup\n   (bfd *, bfd_reloc_code_real_type);"
    },
    {
      "sha": "abe344c0c8620b100765db1b9b9f30f6c69e71ad",
      "filename": "bfd/elfxx-tilegx.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfxx-tilegx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f55320bc46869b87c54d3432fb344f785f07b33/bfd/elfxx-tilegx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-tilegx.c?ref=0f55320bc46869b87c54d3432fb344f785f07b33",
      "patch": "@@ -840,8 +840,9 @@ struct tilegx_elf_link_hash_table\n \n /* Get the Tile ELF linker hash table from a link_info structure.  */\n #define tilegx_elf_hash_table(p) \\\n-  (elf_hash_table_id ((struct elf_link_hash_table *) ((p)->hash)) \\\n-  == TILEGX_ELF_DATA ? ((struct tilegx_elf_link_hash_table *) ((p)->hash)) : NULL)\n+  ((is_elf_hash_table ((p)->hash)\t\t\t\t\t\\\n+    && elf_hash_table_id (elf_hash_table (p)) == TILEGX_ELF_DATA)\t\\\n+   ? (struct tilegx_elf_link_hash_table *) (p)->hash : NULL)\n \n #ifdef BFD64\n static bfd_vma"
    }
  ]
}