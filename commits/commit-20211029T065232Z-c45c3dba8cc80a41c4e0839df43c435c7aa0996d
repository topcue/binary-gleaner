{
  "sha": "c45c3dba8cc80a41c4e0839df43c435c7aa0996d",
  "node_id": "C_kwDOANOeidoAKGM0NWMzZGJhOGNjODBhNDFjNGUwODM5ZGY0M2M0MzVjN2FhMDk5NmQ",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-29T04:39:52Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-29T06:52:32Z"
    },
    "message": "ELF core file size checks\n\nCatch fuzzed segments where p_offset + p_filesz wraps, and limit error\noutput.\n\n\t* elfcore.h (elf_core_file_p): Rewrite segment checks using\n\tbfd_get_file_size.  Set read_only on file size errors.\n\t* elfcode.h (elf_swap_shdr_in): Don't repeat error message.",
    "tree": {
      "sha": "416b94ca907560ba4ddfebc3b6fa437cf3d44d2c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/416b94ca907560ba4ddfebc3b6fa437cf3d44d2c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c45c3dba8cc80a41c4e0839df43c435c7aa0996d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c45c3dba8cc80a41c4e0839df43c435c7aa0996d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c45c3dba8cc80a41c4e0839df43c435c7aa0996d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c45c3dba8cc80a41c4e0839df43c435c7aa0996d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c82ebeb7e6e060dacbaef02933b5f06c10f574f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c82ebeb7e6e060dacbaef02933b5f06c10f574f6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c82ebeb7e6e060dacbaef02933b5f06c10f574f6"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 19,
    "deletions": 25
  },
  "files": [
    {
      "sha": "ee88fce487d73a25c24234943ef08294f71c56bd",
      "filename": "bfd/elfcode.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c45c3dba8cc80a41c4e0839df43c435c7aa0996d/bfd/elfcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c45c3dba8cc80a41c4e0839df43c435c7aa0996d/bfd/elfcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfcode.h?ref=c45c3dba8cc80a41c4e0839df43c435c7aa0996d",
      "patch": "@@ -325,9 +325,10 @@ elf_swap_shdr_in (bfd *abfd,\n \t  && ((ufile_ptr) dst->sh_offset > filesize\n \t      || dst->sh_size > filesize - dst->sh_offset))\n \t{\n+\t  if (!abfd->read_only)\n+\t    _bfd_error_handler (_(\"warning: %pB has a section \"\n+\t\t\t\t  \"extending past end of file\"), abfd);\n \t  abfd->read_only = 1;\n-\t  _bfd_error_handler (_(\"warning: %pB has a section \"\n-\t\t\t\t\"extending past end of file\"), abfd);\n \t}\n     }\n   dst->sh_link = H_GET_32 (abfd, src->sh_link);"
    },
    {
      "sha": "832818f6cd19215a44c9297fb71feb0c357b7f48",
      "filename": "bfd/elfcore.h",
      "status": "modified",
      "additions": 16,
      "deletions": 23,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c45c3dba8cc80a41c4e0839df43c435c7aa0996d/bfd/elfcore.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c45c3dba8cc80a41c4e0839df43c435c7aa0996d/bfd/elfcore.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfcore.h?ref=c45c3dba8cc80a41c4e0839df43c435c7aa0996d",
      "patch": "@@ -92,6 +92,7 @@ elf_core_file_p (bfd *abfd)\n   unsigned int phindex;\n   const struct elf_backend_data *ebd;\n   bfd_size_type amt;\n+  ufile_ptr filesize;\n \n   /* Read in the ELF header in external format.  */\n   if (bfd_bread (&x_ehdr, sizeof (x_ehdr), abfd) != sizeof (x_ehdr))\n@@ -286,29 +287,21 @@ elf_core_file_p (bfd *abfd)\n       goto fail;\n \n   /* Check for core truncation.  */\n-  {\n-    bfd_size_type high = 0;\n-    struct stat statbuf;\n-    for (phindex = 0; phindex < i_ehdrp->e_phnum; ++phindex)\n-      {\n-\tElf_Internal_Phdr *p = i_phdrp + phindex;\n-\tif (p->p_filesz)\n-\t  {\n-\t    bfd_size_type current = p->p_offset + p->p_filesz;\n-\t    if (high < current)\n-\t      high = current;\n-\t  }\n-      }\n-    if (bfd_stat (abfd, &statbuf) == 0)\n-      {\n-\tif ((bfd_size_type) statbuf.st_size < high)\n-\t  {\n-\t    _bfd_error_handler\n-\t      /* xgettext:c-format */\n-\t      (_(\"warning: %pB is truncated: expected core file \"\n-\t\t \"size >= %\" PRIu64 \", found: %\" PRIu64),\n-\t       abfd, (uint64_t) high, (uint64_t) statbuf.st_size);\n-\t  }\n+  filesize = bfd_get_file_size (abfd);\n+  if (filesize != 0)\n+    {\n+      for (phindex = 0; phindex < i_ehdrp->e_phnum; ++phindex)\n+\t{\n+\t  Elf_Internal_Phdr *p = i_phdrp + phindex;\n+\t  if (p->p_filesz\n+\t      && (p->p_offset >= filesize\n+\t\t  || p->p_filesz > filesize - p->p_offset))\n+\t    {\n+\t      _bfd_error_handler (_(\"warning: %pB has a segment \"\n+\t\t\t\t    \"extending past end of file\"), abfd);\n+\t      abfd->read_only = 1;\n+\t      break;\n+\t    }\n       }\n   }\n "
    }
  ]
}