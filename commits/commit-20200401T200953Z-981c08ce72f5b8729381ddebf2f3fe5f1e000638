{
  "sha": "981c08ce72f5b8729381ddebf2f3fe5f1e000638",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTgxYzA4Y2U3MmY1Yjg3MjkzODFkZGViZjJmM2ZlNWYxZTAwMDYzOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-04-01T20:09:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-01T20:09:53Z"
    },
    "message": "Change how complex types are printed in C\n\nGCC accepts the \"i\" suffix for complex numbers.  I think this is nicer\nto read than the current output, so this patch changes the C code to\nprint complex numbers this way.\n\ngdb/ChangeLog\n2020-04-01  Tom Tromey  <tom@tromey.com>\n\n\t* c-valprint.c (c_decorations): Change complex suffix to \"i\".\n\ngdb/testsuite/ChangeLog\n2020-04-01  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.compile/compile.exp: Update.\n\t* gdb.compile/compile-cplus.exp: Update.\n\t* gdb.base/varargs.exp: Update.\n\t* gdb.base/floatn.exp: Update.\n\t* gdb.base/endianity.exp: Update.\n\t* gdb.base/callfuncs.exp (do_function_calls): Update.\n\t* gdb.base/funcargs.exp (complex_args, complex_integral_args)\n\t(complex_float_integral_args): Update.\n\t* gdb.base/complex.exp: Update.\n\t* gdb.base/complex-parts.exp: Update.",
    "tree": {
      "sha": "30b053f9551c0ed8a5df73d42b09385ed5f271b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/30b053f9551c0ed8a5df73d42b09385ed5f271b8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/981c08ce72f5b8729381ddebf2f3fe5f1e000638",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/981c08ce72f5b8729381ddebf2f3fe5f1e000638",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/981c08ce72f5b8729381ddebf2f3fe5f1e000638",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/981c08ce72f5b8729381ddebf2f3fe5f1e000638/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4c99290df04ba757b74a21ac5a6d16fe300e49ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c99290df04ba757b74a21ac5a6d16fe300e49ed",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4c99290df04ba757b74a21ac5a6d16fe300e49ed"
    }
  ],
  "stats": {
    "total": 82,
    "additions": 48,
    "deletions": 34
  },
  "files": [
    {
      "sha": "174ac70096759010677a9487ba72954810a6332c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -1,3 +1,7 @@\n+2020-04-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* c-valprint.c (c_decorations): Change complex suffix to \"i\".\n+\n 2020-04-01  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (generic_value_print_complex): Use accessors."
    },
    {
      "sha": "bde9c6cc88330dbf7a04d19e5c8301d02e020939",
      "filename": "gdb/c-valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/c-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/c-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-valprint.c?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -121,7 +121,7 @@ static const struct generic_val_print_decorations c_decorations =\n {\n   \"\",\n   \" + \",\n-  \" * I\",\n+  \"i\",\n   \"true\",\n   \"false\",\n   \"void\","
    },
    {
      "sha": "15db7ecc822d208a301d00d04b8ac36662c9a0eb",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -1,3 +1,16 @@\n+2020-04-01  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.compile/compile.exp: Update.\n+\t* gdb.compile/compile-cplus.exp: Update.\n+\t* gdb.base/varargs.exp: Update.\n+\t* gdb.base/floatn.exp: Update.\n+\t* gdb.base/endianity.exp: Update.\n+\t* gdb.base/callfuncs.exp (do_function_calls): Update.\n+\t* gdb.base/funcargs.exp (complex_args, complex_integral_args)\n+\t(complex_float_integral_args): Update.\n+\t* gdb.base/complex.exp: Update.\n+\t* gdb.base/complex-parts.exp: Update.\n+\n 2020-04-01  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.rust/union.rs: New file."
    },
    {
      "sha": "642fe0d7fd94d3f743fe4d4285d2d7d235d09bdf",
      "filename": "gdb/testsuite/gdb.base/callfuncs.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/callfuncs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/callfuncs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/callfuncs.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -224,13 +224,13 @@ proc do_function_calls {prototypes} {\n \n     if [support_complex_tests] {\n \n-\tgdb_test \"p t_structs_fc(struct_val1)\" \".*= 3 \\\\+ 3 \\\\* I\" \\\n+\tgdb_test \"p t_structs_fc(struct_val1)\" \".*= 3 \\\\+ 3i\" \\\n \t    \"call inferior func with struct - returns float _Complex\"\n \n-\tgdb_test \"p t_structs_dc(struct_val1)\" \".*= 4 \\\\+ 4 \\\\* I\" \\\n+\tgdb_test \"p t_structs_dc(struct_val1)\" \".*= 4 \\\\+ 4i\" \\\n \t    \"call inferior func with struct - returns double _Complex\"\n \n-\tgdb_test \"p t_structs_ldc(struct_val1)\" \"= 5 \\\\+ 5 \\\\* I\" \\\n+\tgdb_test \"p t_structs_ldc(struct_val1)\" \"= 5 \\\\+ 5i\" \\\n \t    \"call inferior func with struct - returns long double _Complex\"\n     }\n "
    },
    {
      "sha": "071de5c56d722762e869faa196ab609103b0c81b",
      "filename": "gdb/testsuite/gdb.base/complex-parts.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/complex-parts.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/complex-parts.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/complex-parts.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -27,9 +27,9 @@ if { ![runto_main] } then {\n gdb_breakpoint [gdb_get_line_number \"Break Here\"]\n gdb_continue_to_breakpoint \"breakpt\" \".* Break Here\\\\. .*\"\n \n-gdb_test \"p z1\" \" = 1.5 \\\\+ 4.5 \\\\* I\"\n-gdb_test \"p z2\" \" = 2.5 \\\\+ -5.5 \\\\* I\"\n-gdb_test \"p z3\" \" = 3.5 \\\\+ 6.5 \\\\* I\"\n+gdb_test \"p z1\" \" = 1.5 \\\\+ 4.5i\"\n+gdb_test \"p z2\" \" = 2.5 \\\\+ -5.5i\"\n+gdb_test \"p z3\" \" = 3.5 \\\\+ 6.5i\"\n \n gdb_test \"ptype z1\" \" = complex double\"\n gdb_test \"ptype z2\" \" = complex float\""
    },
    {
      "sha": "b60d9372414f462dfa7da6ebd10a6e994d6b629e",
      "filename": "gdb/testsuite/gdb.base/complex.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/complex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/complex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/complex.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -29,12 +29,12 @@ if [runto f2] then {\n     if { [test_compiler_info gcc-2-*] && [test_debug_format \"DWARF 2\"] } then {\n \tsetup_xfail \"*-*-*\"\n     }\n-    gdb_test \"p *y\" \"\\\\\\$\\[0-9\\]* = \\{c = 42 '\\\\*', f = 1 \\\\+ 0 \\\\* I\\}\" \\\n+    gdb_test \"p *y\" \"\\\\\\$\\[0-9\\]* = \\{c = 42 '\\\\*', f = 1 \\\\+ 0i\\}\" \\\n \t    \"print complex packed value in C\"\n }\n \n if [runto f4] then {\n-    gdb_test \"p *y\" \"\\\\\\$\\[0-9\\]* = \\{c = 42 '\\\\*', f = 1 \\\\+ 0 \\\\* I\\}\" \\\n+    gdb_test \"p *y\" \"\\\\\\$\\[0-9\\]* = \\{c = 42 '\\\\*', f = 1 \\\\+ 0i\\}\" \\\n \t    \"print complex value in C\"\n }\n "
    },
    {
      "sha": "2fa9ed3bf162749735dbfa0fdcdd266b78a8614c",
      "filename": "gdb/testsuite/gdb.base/endianity.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/endianity.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/endianity.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/endianity.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -25,7 +25,7 @@ if ![runto \"endianity.c:$bp_location\" ] then {\n   return -1\n }\n \n-gdb_test \"print o\" \"= {v = 3, w = 2, x = 7, f = 23.5, cplx = 1.25 \\\\+ 7.25 \\\\* I, d = 75}\" \\\n+gdb_test \"print o\" \"= {v = 3, w = 2, x = 7, f = 23.5, cplx = 1.25 \\\\+ 7.25i, d = 75}\" \\\n     \"print o before assignment\"\n \n gdb_test \"print o.v = 4\" \"= 4\"\n@@ -41,5 +41,5 @@ if { ([test_compiler_info {gcc-[0-5]-*}] || ![test_compiler_info gcc*]) } {\n gdb_test \"x/x &o.v\" \"0x04000000\"\n gdb_test \"x/xh &o.w\" \"0x0300\"\n \n-gdb_test \"print o\" \"= {v = 4, w = 3, x = 2, f = 1.5, cplx = 1.25 \\\\+ 7.25 \\\\* I, d = -23.125}\" \\\n+gdb_test \"print o\" \"= {v = 4, w = 3, x = 2, f = 1.5, cplx = 1.25 \\\\+ 7.25i, d = -23.125}\" \\\n     \"print o after assignment\""
    },
    {
      "sha": "0f087451b7cb9a8f78da90897cf0c491abef69b2",
      "filename": "gdb/testsuite/gdb.base/floatn.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/floatn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/floatn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/floatn.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -114,11 +114,8 @@ gdb_test \"print f32x\" \".* = 100\\\\.5.*\" \"the value of f32x is changed to 100.5\"\n gdb_test \"print f64x\" \".* = 200\\\\.25.*\" \"the value of f64x is changed to 200.25\"\n \n # Print the original values of c32, c64, c128, c32x, c64x.\n-gdb_test \"print c32\" \".* = 1\\\\.5 \\\\+ 1 \\\\* I.*\" \"the original value of c32 is 1.5 + 1 * I\"\n-gdb_test \"print c64\" \".* = 2\\\\.25 \\\\+ 1 \\\\* I.*\" \"the original value of c64 is 2.25 + 1 * I\"\n-gdb_test \"print c128\" \".* = 3\\\\.375 \\\\+ 1 \\\\* I.*\" \"the original value of c128 is 3.375 + 1 * I\"\n-gdb_test \"print c32x\" \".* = 10\\\\.5 \\\\+ 1 \\\\* I.*\" \"the original value of c32x is 10.5 + 1 * I\"\n-gdb_test \"print c64x\" \".* = 20\\\\.25 \\\\+ 1 \\\\* I.*\" \"the original value of c64x is 20.25 + 1 * I\"\n-\n-# FIXME: GDB cannot parse non-trivial complex constants yet.\n-\n+gdb_test \"print c32\" \".* = 1\\\\.5 \\\\+ 1i.*\" \"the original value of c32 is 1.5 + 1i\"\n+gdb_test \"print c64\" \".* = 2\\\\.25 \\\\+ 1i.*\" \"the original value of c64 is 2.25 + 1i\"\n+gdb_test \"print c128\" \".* = 3\\\\.375 \\\\+ 1i.*\" \"the original value of c128 is 3.375 + 1i\"\n+gdb_test \"print c32x\" \".* = 10\\\\.5 \\\\+ 1i.*\" \"the original value of c32x is 10.5 + 1i\"\n+gdb_test \"print c64x\" \".* = 20\\\\.25 \\\\+ 1i.*\" \"the original value of c64x is 20.25 + 1i\""
    },
    {
      "sha": "743c4c2758d89f9647174bef88fc2e339363eaf2",
      "filename": "gdb/testsuite/gdb.base/funcargs.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/funcargs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/funcargs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/funcargs.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -248,13 +248,13 @@ proc complex_args {} {\n \n     # Run; should stop at call1a and print actual arguments.\n     gdb_run_cmd\n-    gdb_test \"\" \" callca \\\\(f1=1 \\\\+ 2 \\\\* I, f2=1 \\\\+ 2 \\\\* I, f3=1 \\\\+ 2 \\\\* I\\\\) .*\" \"run to call2a\"\n+    gdb_test \"\" \" callca \\\\(f1=1 \\\\+ 2i, f2=1 \\\\+ 2i, f3=1 \\\\+ 2i\\\\) .*\" \"run to call2a\"\n \n-    gdb_test \"cont\" \".* callcb \\\\(d1=3 \\\\+ 4 \\\\* I, d2=3 \\\\+ 4 \\\\* I, d3=3 \\\\+ 4 \\\\* I\\\\) .*\" \"continue to callcb\"\n-    gdb_test \"cont\" \".* callcc \\\\(ld1=5 \\\\+ 6 \\\\* I, ld2=5 \\\\+ 6 \\\\* I, ld3=5 \\\\+ 6 \\\\* I\\\\) .*\" \"continue to callcc\"\n-    gdb_test \"cont\" \".* callcd \\\\(fc1=1 \\\\+ 2 \\\\* I, dc1=3 \\\\+ 4 \\\\* I, ldc1=5 \\\\+ 6 \\\\* I\\\\) .*\" \"continue to callcd\"\n-    gdb_test \"cont\" \".* callce \\\\(dc1=3 \\\\+ 4 \\\\* I, ldc1=5 \\\\+ 6 \\\\* I, fc1=1 \\\\+ 2 \\\\* I\\\\) .*\" \"continue to callce\"\n-    gdb_test \"cont\" \".* callcf \\\\(ldc1=5 \\\\+ 6 \\\\* I, fc1=1 \\\\+ 2 \\\\* I, dc1=3 \\\\+ 4 \\\\* I\\\\) .*\" \"continue to callcf\"\n+    gdb_test \"cont\" \".* callcb \\\\(d1=3 \\\\+ 4i, d2=3 \\\\+ 4i, d3=3 \\\\+ 4i\\\\) .*\" \"continue to callcb\"\n+    gdb_test \"cont\" \".* callcc \\\\(ld1=5 \\\\+ 6i, ld2=5 \\\\+ 6i, ld3=5 \\\\+ 6i\\\\) .*\" \"continue to callcc\"\n+    gdb_test \"cont\" \".* callcd \\\\(fc1=1 \\\\+ 2i, dc1=3 \\\\+ 4i, ldc1=5 \\\\+ 6i\\\\) .*\" \"continue to callcd\"\n+    gdb_test \"cont\" \".* callce \\\\(dc1=3 \\\\+ 4i, ldc1=5 \\\\+ 6i, fc1=1 \\\\+ 2i\\\\) .*\" \"continue to callce\"\n+    gdb_test \"cont\" \".* callcf \\\\(ldc1=5 \\\\+ 6i, fc1=1 \\\\+ 2i, dc1=3 \\\\+ 4i\\\\) .*\" \"continue to callcf\"\n }\n \n \n@@ -271,9 +271,9 @@ proc complex_integral_args {} {\n \n     # Run; should stop at call1a and print actual arguments.\n     gdb_run_cmd\n-    gdb_test \"\" \" callc1a \\\\(c=97 'a', s=1, i=2, ui=7, l=3, fc1=1 \\\\+ 2 \\\\* I, dc1=3 \\\\+ 4 \\\\* I, ldc1=5 \\\\+ 6 \\\\* I\\\\) .*\" \"run to callc1a\"\n+    gdb_test \"\" \" callc1a \\\\(c=97 'a', s=1, i=2, ui=7, l=3, fc1=1 \\\\+ 2i, dc1=3 \\\\+ 4i, ldc1=5 \\\\+ 6i\\\\) .*\" \"run to callc1a\"\n \n-    gdb_test \"cont\" \".* callc1b \\\\(ldc1=5 \\\\+ 6 \\\\* I\\\\, c=97 'a', s=1, i=2, fc1=1 \\\\+ 2 \\\\* I, ui=7, l=3, dc1=3 \\\\+ 4 \\\\* I\\\\) .*\" \"continue to callc1b\"\n+    gdb_test \"cont\" \".* callc1b \\\\(ldc1=5 \\\\+ 6i\\\\, c=97 'a', s=1, i=2, fc1=1 \\\\+ 2i, ui=7, l=3, dc1=3 \\\\+ 4i\\\\) .*\" \"continue to callc1b\"\n }\n \n #\n@@ -289,9 +289,9 @@ proc complex_float_integral_args {} {\n \n     # Run; should stop at call1a and print actual arguments.\n     gdb_run_cmd\n-    gdb_test \"\" \" callc2a \\\\(c=97 'a', s=1, i=2, ui=7, l=3, f=4, d=5, fc1=1 \\\\+ 2 \\\\* I, dc1=3 \\\\+ 4 \\\\* I, ldc1=5 \\\\+ 6 \\\\* I\\\\) .*\" \"run to callc2a\"\n+    gdb_test \"\" \" callc2a \\\\(c=97 'a', s=1, i=2, ui=7, l=3, f=4, d=5, fc1=1 \\\\+ 2i, dc1=3 \\\\+ 4i, ldc1=5 \\\\+ 6i\\\\) .*\" \"run to callc2a\"\n \n-    gdb_test \"cont\" \".* callc2b \\\\(fc1=1 \\\\+ 2 \\\\* I, c=97 'a', s=1, i=2, ui=7, ldc1=5 \\\\+ 6 \\\\* I\\\\, l=3, f=4, d=5, dc1=3 \\\\+ 4 \\\\* I\\\\) .*\" \"continue to callc2b\"\n+    gdb_test \"cont\" \".* callc2b \\\\(fc1=1 \\\\+ 2i, c=97 'a', s=1, i=2, ui=7, ldc1=5 \\\\+ 6i\\\\, l=3, f=4, d=5, dc1=3 \\\\+ 4i\\\\) .*\" \"continue to callc2b\"\n }\n \n #"
    },
    {
      "sha": "f6f4f659653d543fae77bbec054dabeba25d2bdd",
      "filename": "gdb/testsuite/gdb.base/varargs.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/varargs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.base/varargs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/varargs.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -101,12 +101,12 @@ if [support_complex_tests] {\n     global gdb_prompt\n \n     set test \"print find_max_float_real(4, fc1, fc2, fc3, fc4)\"\n-    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\"\n+    gdb_test $test \".*= 4 \\\\+ 4i\"\n \n     set test \"print find_max_double_real(4, dc1, dc2, dc3, dc4)\"\n-    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\"\n+    gdb_test $test \".*= 4 \\\\+ 4i\"\n \n     set test \"print find_max_long_double_real(4, ldc1, ldc2, ldc3, ldc4)\"\n-    gdb_test $test \".*= 4 \\\\+ 4 \\\\* I\"\n+    gdb_test $test \".*= 4 \\\\+ 4i\"\n \n }"
    },
    {
      "sha": "cca5b20520056b49d980cb8b9b6ad47e3a1e1c49",
      "filename": "gdb/testsuite/gdb.compile/compile-cplus.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.compile/compile-cplus.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.compile/compile-cplus.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.compile/compile-cplus.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -219,7 +219,7 @@ gdb_test \"print struct_object.arrayfield\" \\\n     \" = \\\\{0, 0, 7, 0, 0\\\\}\"\n \n gdb_test_no_output \"compile code struct_object.complexfield = 7 + 5i\"\n-gdb_test \"print struct_object.complexfield\" \" = 7 \\\\+ 5 \\\\* I\"\n+gdb_test \"print struct_object.complexfield\" \" = 7 \\\\+ 5i\"\n \n gdb_test_no_output \"compile code struct_object.boolfield = 1\"\n gdb_test \"print struct_object.boolfield\" \" = true\""
    },
    {
      "sha": "d9c3e6668ecfc332e2b10900e5d3160e2993fd9c",
      "filename": "gdb/testsuite/gdb.compile/compile.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.compile/compile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/981c08ce72f5b8729381ddebf2f3fe5f1e000638/gdb/testsuite/gdb.compile/compile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.compile/compile.exp?ref=981c08ce72f5b8729381ddebf2f3fe5f1e000638",
      "patch": "@@ -237,7 +237,7 @@ if {$skip_struct_object} {\n \t\" = \\\\{0, 0, 7, 0, 0\\\\}\"\n \n     gdb_test_no_output \"compile code struct_object.complexfield = 7 + 5i\"\n-    gdb_test \"print struct_object.complexfield\" \" = 7 \\\\+ 5 \\\\* I\"\n+    gdb_test \"print struct_object.complexfield\" \" = 7 \\\\+ 5i\"\n \n     gdb_test_no_output \"compile code struct_object.boolfield = 1\"\n     gdb_test \"print struct_object.boolfield\" \" = true\""
    }
  ]
}