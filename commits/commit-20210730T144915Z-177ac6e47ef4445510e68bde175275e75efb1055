{
  "sha": "177ac6e47ef4445510e68bde175275e75efb1055",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTc3YWM2ZTQ3ZWY0NDQ1NTEwZTY4YmRlMTc1Mjc1ZTc1ZWZiMTA1NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-07-29T21:27:33Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-07-30T14:49:15Z"
    },
    "message": "Use iterator_range in more places\n\nThis changes a couple of spots to replace custom iterator range\nclasses with a specialization of iterator_range.\n\nRegression tested on x86-64 Fedora 34.",
    "tree": {
      "sha": "1ed1caa4e207c43e28f0b30bd2d29476c9ec42f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ed1caa4e207c43e28f0b30bd2d29476c9ec42f4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/177ac6e47ef4445510e68bde175275e75efb1055",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/177ac6e47ef4445510e68bde175275e75efb1055",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/177ac6e47ef4445510e68bde175275e75efb1055",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/177ac6e47ef4445510e68bde175275e75efb1055/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "785e5700ce4bda469e323d1dc7eeae9d86980c79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/785e5700ce4bda469e323d1dc7eeae9d86980c79",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/785e5700ce4bda469e323d1dc7eeae9d86980c79"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 9,
    "deletions": 50
  },
  "files": [
    {
      "sha": "97abc9c17ef4a51f1fbae68b259f317089227d29",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 9,
      "deletions": 50,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/177ac6e47ef4445510e68bde175275e75efb1055/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/177ac6e47ef4445510e68bde175275e75efb1055/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=177ac6e47ef4445510e68bde175275e75efb1055",
      "patch": "@@ -380,29 +380,7 @@ class separate_debug_iterator\n \n /* A range adapter wrapping separate_debug_iterator.  */\n \n-class separate_debug_range\n-{\n-public:\n-\n-  explicit separate_debug_range (struct objfile *objfile)\n-    : m_objfile (objfile)\n-  {\n-  }\n-\n-  separate_debug_iterator begin ()\n-  {\n-    return separate_debug_iterator (m_objfile);\n-  }\n-\n-  separate_debug_iterator end ()\n-  {\n-    return separate_debug_iterator (nullptr);\n-  }\n-\n-private:\n-\n-  struct objfile *m_objfile;\n-};\n+typedef iterator_range<separate_debug_iterator> separate_debug_range;\n \n /* Master structure for keeping track of each file from which\n    gdb reads symbols.  There are several ways these get allocated: 1.\n@@ -456,46 +434,27 @@ struct objfile\n   /* A range adapter that makes it possible to iterate over all\n      minimal symbols of an objfile.  */\n \n-  class msymbols_range\n-  {\n-  public:\n-\n-    explicit msymbols_range (struct objfile *objfile)\n-      : m_objfile (objfile)\n-    {\n-    }\n-\n-    minimal_symbol_iterator begin () const\n-    {\n-      return minimal_symbol_iterator (m_objfile->per_bfd->msymbols.get ());\n-    }\n-\n-    minimal_symbol_iterator end () const\n-    {\n-      return minimal_symbol_iterator\n-\t(m_objfile->per_bfd->msymbols.get ()\n-\t + m_objfile->per_bfd->minimal_symbol_count);\n-    }\n-\n-  private:\n-\n-    struct objfile *m_objfile;\n-  };\n+  typedef iterator_range<minimal_symbol_iterator> msymbols_range;\n \n   /* Return a range adapter for iterating over all minimal\n      symbols.  */\n \n   msymbols_range msymbols ()\n   {\n-    return msymbols_range (this);\n+    auto start = minimal_symbol_iterator (per_bfd->msymbols.get ());\n+    auto end = minimal_symbol_iterator (per_bfd->msymbols.get ()\n+\t\t\t\t\t+ per_bfd->minimal_symbol_count);\n+    return msymbols_range (start, end);\n   }\n \n   /* Return a range adapter for iterating over all the separate debug\n      objfiles of this objfile.  */\n \n   separate_debug_range separate_debug_objfiles ()\n   {\n-    return separate_debug_range (this);\n+    auto start = separate_debug_iterator (this);\n+    auto end = separate_debug_iterator (nullptr);\n+    return separate_debug_range (start, end);\n   }\n \n   CORE_ADDR text_section_offset () const"
    }
  ]
}