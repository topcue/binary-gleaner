{
  "sha": "e71daf80d338e536597fa1c3cd1029aadbaa2a67",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTcxZGFmODBkMzM4ZTUzNjU5N2ZhMWMzY2QxMDI5YWFkYmFhMmE2Nw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-01-04T16:56:10Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-04T17:00:25Z"
    },
    "message": "gdb: use infrun_debug_printf in print_target_wait_results\n\nThe code in print_target_wait_results uses a single call to debug_printf\nin order to make sure a single timestamp is emitted, despite printing\nmultiple lines.  The result is:\n\n    941502.043284 [infrun] target_wait (-1.0.0, status) =\n    [infrun]   649832.649832.0 [process 649832],\n    [infrun]   status->kind = stopped, signal = GDB_SIGNAL_TRAP\n\nI find this decision a bit counter productive, because it messes up the\nalignment of the three lines.  We don't care that three (slightly\ndifferent) timestamps are printed.\n\nI suggest to change this function to use infrun_debug_printf, with this\nresult:\n\n    941601.425771 [infrun] print_target_wait_results: target_wait (-1.0.0 [process -1], status) =\n    941601.425824 [infrun] print_target_wait_results:   651481.651481.0 [process 651481],\n    941601.425867 [infrun] print_target_wait_results:   status->kind = stopped, signal = GDB_SIGNAL_TRAP\n\nNote that the current code only prints the waiton_ptid as a string\nbetween square brackets if pid != -1.  I don't think this complexity is\nneeded in a debug print.  I made it so it's always printed, which I\nthink results in a much simpler function.\n\ngdb/ChangeLog:\n\n\t* infrun.c (print_target_wait_results): Use infrun_debug_printf.\n\nChange-Id: I817bd10286b8e641a6c751ac3a1bd1ddf9b18ce0",
    "tree": {
      "sha": "7f47bbfd089a5274f2e67fca6718681665982915",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7f47bbfd089a5274f2e67fca6718681665982915"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e71daf80d338e536597fa1c3cd1029aadbaa2a67",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e71daf80d338e536597fa1c3cd1029aadbaa2a67",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e71daf80d338e536597fa1c3cd1029aadbaa2a67",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e71daf80d338e536597fa1c3cd1029aadbaa2a67/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "335709bc5a6dc4778e9931cfa0ed55cb0c516d7a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/335709bc5a6dc4778e9931cfa0ed55cb0c516d7a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/335709bc5a6dc4778e9931cfa0ed55cb0c516d7a"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 15,
    "deletions": 25
  },
  "files": [
    {
      "sha": "674c3964e9e3f44e9c2cf9bbbf1c80adff6c67b5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e71daf80d338e536597fa1c3cd1029aadbaa2a67/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e71daf80d338e536597fa1c3cd1029aadbaa2a67/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e71daf80d338e536597fa1c3cd1029aadbaa2a67",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-04  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* infrun.c (print_target_wait_results): Use infrun_debug_printf.\n+\n 2021-01-04  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* utils.c (vfprintf_unfiltered): Print timestamp only when"
    },
    {
      "sha": "01d7ead8a410606618b356d15e4cc96b805a8eea",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 11,
      "deletions": 25,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e71daf80d338e536597fa1c3cd1029aadbaa2a67/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e71daf80d338e536597fa1c3cd1029aadbaa2a67/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=e71daf80d338e536597fa1c3cd1029aadbaa2a67",
      "patch": "@@ -3275,31 +3275,17 @@ void\n print_target_wait_results (ptid_t waiton_ptid, ptid_t result_ptid,\n \t\t\t   const struct target_waitstatus *ws)\n {\n-  std::string status_string = target_waitstatus_to_string (ws);\n-  string_file stb;\n-\n-  /* The text is split over several lines because it was getting too long.\n-     Call fprintf_unfiltered (gdb_stdlog) once so that the text is still\n-     output as a unit; we want only one timestamp printed if debug_timestamp\n-     is set.  */\n-\n-  stb.printf (\"[infrun] target_wait (%d.%ld.%ld\",\n-\t      waiton_ptid.pid (),\n-\t      waiton_ptid.lwp (),\n-\t      waiton_ptid.tid ());\n-  if (waiton_ptid.pid () != -1)\n-    stb.printf (\" [%s]\", target_pid_to_str (waiton_ptid).c_str ());\n-  stb.printf (\", status) =\\n\");\n-  stb.printf (\"[infrun]   %d.%ld.%ld [%s],\\n\",\n-\t      result_ptid.pid (),\n-\t      result_ptid.lwp (),\n-\t      result_ptid.tid (),\n-\t      target_pid_to_str (result_ptid).c_str ());\n-  stb.printf (\"[infrun]   %s\\n\", status_string.c_str ());\n-\n-  /* This uses %s in part to handle %'s in the text, but also to avoid\n-     a gcc error: the format attribute requires a string literal.  */\n-  fprintf_unfiltered (gdb_stdlog, \"%s\", stb.c_str ());\n+  infrun_debug_printf (\"target_wait (%d.%ld.%ld [%s], status) =\",\n+\t\t       waiton_ptid.pid (),\n+\t\t       waiton_ptid.lwp (),\n+\t\t       waiton_ptid.tid (),\n+\t\t       target_pid_to_str (waiton_ptid).c_str ());\n+  infrun_debug_printf (\"  %d.%ld.%ld [%s],\",\n+\t\t       result_ptid.pid (),\n+\t\t       result_ptid.lwp (),\n+\t\t       result_ptid.tid (),\n+\t\t       target_pid_to_str (result_ptid).c_str ());\n+  infrun_debug_printf (\"  %s\", target_waitstatus_to_string (ws).c_str ());\n }\n \n /* Select a thread at random, out of those which are resumed and have"
    }
  ]
}