{
  "sha": "9d70ffbc5ba41c766ce629447af8e72a5ceba229",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWQ3MGZmYmM1YmE0MWM3NjZjZTYyOTQ0N2FmOGU3MmE1Y2ViYTIyOQ==",
  "commit": {
    "author": {
      "name": "Weimin Pan",
      "email": "weimin.pan@oracle.com",
      "date": "2019-02-14T22:20:36Z"
    },
    "committer": {
      "name": "Weimin Pan",
      "email": "weimin.pan@oracle.com",
      "date": "2019-02-14T22:27:43Z"
    },
    "message": "Updating test case\n\ngdb.arch/aarch64-dbreg-contents.exp:\n * Replaced \"run\" with \"runto_main + continue\".\n * Replaced \"gdb_compile + clean_restart\" with \"prepare_for_testing\".\n * Added comment for case \"exited with code 01\".\n\ngdb.arch/aarch64-dbreg-contents.c:\n * Removed SET_WATCHPOINT marco.\n * Removed redundent cleanup ().\n * Cleaned up comment.",
    "tree": {
      "sha": "b0fad52ffd787626ced8625b8bf03aa56dc0f2ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b0fad52ffd787626ced8625b8bf03aa56dc0f2ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9d70ffbc5ba41c766ce629447af8e72a5ceba229",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d70ffbc5ba41c766ce629447af8e72a5ceba229",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9d70ffbc5ba41c766ce629447af8e72a5ceba229",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d70ffbc5ba41c766ce629447af8e72a5ceba229/comments",
  "author": {
    "login": "wmwpan",
    "id": 50341885,
    "node_id": "MDQ6VXNlcjUwMzQxODg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/50341885?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wmwpan",
    "html_url": "https://github.com/wmwpan",
    "followers_url": "https://api.github.com/users/wmwpan/followers",
    "following_url": "https://api.github.com/users/wmwpan/following{/other_user}",
    "gists_url": "https://api.github.com/users/wmwpan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wmwpan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wmwpan/subscriptions",
    "organizations_url": "https://api.github.com/users/wmwpan/orgs",
    "repos_url": "https://api.github.com/users/wmwpan/repos",
    "events_url": "https://api.github.com/users/wmwpan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wmwpan/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "wmwpan",
    "id": 50341885,
    "node_id": "MDQ6VXNlcjUwMzQxODg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/50341885?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wmwpan",
    "html_url": "https://github.com/wmwpan",
    "followers_url": "https://api.github.com/users/wmwpan/followers",
    "following_url": "https://api.github.com/users/wmwpan/following{/other_user}",
    "gists_url": "https://api.github.com/users/wmwpan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wmwpan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wmwpan/subscriptions",
    "organizations_url": "https://api.github.com/users/wmwpan/orgs",
    "repos_url": "https://api.github.com/users/wmwpan/repos",
    "events_url": "https://api.github.com/users/wmwpan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wmwpan/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "abc163a4647f77bfa449e09da4a85a71e747cf4c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/abc163a4647f77bfa449e09da4a85a71e747cf4c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/abc163a4647f77bfa449e09da4a85a71e747cf4c"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 17,
    "deletions": 13
  },
  "files": [
    {
      "sha": "d5446800523f28e73008fd71951642f01398f5c3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d70ffbc5ba41c766ce629447af8e72a5ceba229/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d70ffbc5ba41c766ce629447af8e72a5ceba229/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9d70ffbc5ba41c766ce629447af8e72a5ceba229",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-13  Weimin Pan  <weimin.pan@oracle.com>\n+\n+\tPR breakpoints/21870\n+\t* gdb.arch/aarch64-dbreg-contents.exp: Use runto_main + continue\n+\tand prepare_for_testing.  Add comment.\n+\t* gdb.arch/aarch64-dbreg-contents.c: Remove SET_WATCHPOINT and\n+\tredundant cleanup call.  Clean up comment.\n+\n 2019-02-12  Weimin Pan  <weimin.pan@oracle.com>\n \n \tPR breakpoints/21870"
    },
    {
      "sha": "66ca76f847729d398cfbbdad408b5c105be480dc",
      "filename": "gdb/testsuite/gdb.arch/aarch64-dbreg-contents.c",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d70ffbc5ba41c766ce629447af8e72a5ceba229/gdb/testsuite/gdb.arch/aarch64-dbreg-contents.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d70ffbc5ba41c766ce629447af8e72a5ceba229/gdb/testsuite/gdb.arch/aarch64-dbreg-contents.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/aarch64-dbreg-contents.c?ref=9d70ffbc5ba41c766ce629447af8e72a5ceba229",
      "patch": "@@ -27,8 +27,6 @@ cleanup (void)\n   child = 0;\n }\n \n-#define SET_WATCHPOINT set_watchpoint\n-\n /* Macros to extract fields from the hardware debug information word.  */\n #define AARCH64_DEBUG_NUM_SLOTS(x) ((x) & 0xff)\n #define AARCH64_DEBUG_ARCH(x) (((x) >> 8) & 0xff)\n@@ -64,7 +62,7 @@ set_watchpoint (pid_t pid, volatile void *addr, unsigned len_mask)\n   assert (DR_CONTROL_LENGTH (dreg_state.dbg_regs[0].ctrl) == len_mask);\n \n   dreg_state.dbg_regs[0].ctrl |= 2 << 3; // write\n-  dreg_state.dbg_regs[0].ctrl |= 2 << 1; // GDB: ???: enabled at el0\n+  dreg_state.dbg_regs[0].ctrl |= 2 << 1; // enabled at el0\n   dreg_state.dbg_regs[0].addr = (uintptr_t) addr;\n \n   iov.iov_base = &dreg_state;\n@@ -110,7 +108,7 @@ main (void)\n   /* Add a watchpoint to check.\n      Restart the child. It will write to check.\n      Check child has stopped on the watchpoint.  */\n-  SET_WATCHPOINT (child, &check, 0x02);\n+  set_watchpoint (child, &check, 0x02);\n \n   errno = 0;\n   l = ptrace (PTRACE_CONT, child, 0l, 0l);\n@@ -128,6 +126,5 @@ main (void)\n     }\n   assert (WSTOPSIG (status) == SIGTRAP);\n \n-  cleanup ();\n   return 0;\n }"
    },
    {
      "sha": "3edbb146f0585053965bcd5cd8f6d3adb3724c80",
      "filename": "gdb/testsuite/gdb.arch/aarch64-dbreg-contents.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d70ffbc5ba41c766ce629447af8e72a5ceba229/gdb/testsuite/gdb.arch/aarch64-dbreg-contents.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d70ffbc5ba41c766ce629447af8e72a5ceba229/gdb/testsuite/gdb.arch/aarch64-dbreg-contents.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/aarch64-dbreg-contents.exp?ref=9d70ffbc5ba41c766ce629447af8e72a5ceba229",
      "patch": "@@ -17,7 +17,7 @@\n #\n # This test checks that GDB does not alter watchpoints set by an inferior.\n # It sets a watchpoint on memory then writes to the watched memory.\n-# It will exit with 1 if the watchpoint is not reached.\n+# It will exit with 2 if the watchpoint is not reached.\n #\n # See PR breakpoints/21870.\n \n@@ -28,16 +28,15 @@ if {![is_aarch64_target]} {\n \n standard_testfile .c\n \n-if { [gdb_compile ${srcdir}/${subdir}/${srcfile} ${binfile} executable {debug}] != \"\" } {\n-     untested \"failed to compile\"\n-     return -1\n+if { [prepare_for_testing \"failed to prepare\" ${testfile}] } {\n+    return\n }\n \n-clean_restart $testfile\n-\n-set test \"run to exit\"\n-gdb_test_multiple \"run\" \"$test\" {\n+runto_main\n+set test \"continue to exit\"\n+gdb_test_multiple \"continue\" \"$test\" {\n     -re \"exited with code 01.*$gdb_prompt $\" {\n+        # For case that the PTRACE_SETREGSET call fails.\n         pass \"$test\"\n     }\n     -re \"exited normally.*$gdb_prompt $\" {"
    }
  ]
}