{
  "sha": "8a4efb366fadfc8c7eff2994af863a169fe38401",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGE0ZWZiMzY2ZmFkZmM4YzdlZmYyOTk0YWY4NjNhMTY5ZmUzODQwMQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-08T18:11:10Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-12T12:18:33Z"
    },
    "message": "gdb/testsuite: check the correct Python variable in test\n\nWhile squashing duplicate test names I spotted what looked like a copy\n& paste error.  During this test a Python variable is created, and\nthen we call the type method on that variable.  In one case we create\na variable and then call the type method on a variable created for a\nprevious test.  I can see no reason why this should be what we want,\nit doesn't line up with the comments in the test script, so I've\nupdated the test.  Note, the expected result doesn't change, just the\ncommand issued (the test relates to stripping typedefs).\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/lib-types.exp: Update the test to check the correct\n\tpython variable.",
    "tree": {
      "sha": "04206e7dbab97c956bfbb37294ba00a4cd8f106d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04206e7dbab97c956bfbb37294ba00a4cd8f106d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8a4efb366fadfc8c7eff2994af863a169fe38401",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a4efb366fadfc8c7eff2994af863a169fe38401",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8a4efb366fadfc8c7eff2994af863a169fe38401",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a4efb366fadfc8c7eff2994af863a169fe38401/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "66bb1dd9cda54130515be30ff01061bf5226544e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66bb1dd9cda54130515be30ff01061bf5226544e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/66bb1dd9cda54130515be30ff01061bf5226544e"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "23135be25d15884eae505bdc599ec6782d298a34",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a4efb366fadfc8c7eff2994af863a169fe38401/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a4efb366fadfc8c7eff2994af863a169fe38401/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=8a4efb366fadfc8c7eff2994af863a169fe38401",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/lib-types.exp: Update the test to check the correct\n+\tpython variable.\n+\n 2021-03-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.python/py-explore-cc.exp: Extend test names to make them"
    },
    {
      "sha": "fbc74990f59ff071e1e3f68cf7530bcde86c4af4",
      "filename": "gdb/testsuite/gdb.python/lib-types.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a4efb366fadfc8c7eff2994af863a169fe38401/gdb/testsuite/gdb.python/lib-types.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a4efb366fadfc8c7eff2994af863a169fe38401/gdb/testsuite/gdb.python/lib-types.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/lib-types.exp?ref=8a4efb366fadfc8c7eff2994af863a169fe38401",
      "patch": "@@ -92,7 +92,7 @@ gdb_test_multiple \"python print (str (basic_type_class1_ref_obj))\" $test {\n # test nested typedef stripping\n gdb_test_no_output \"python typedef_const_typedef_class1_obj = gdb.parse_and_eval ('typedef_const_typedef_class1_obj')\"\n gdb_test_no_output \"python basic_type_typedef_const_typedef_class1_obj = gdb.types.get_basic_type (typedef_const_typedef_class1_obj.type)\"\n-gdb_test \"python print (str (typedef_class1_obj.type))\" \"typedef_class1\"\n+gdb_test \"python print (str (typedef_const_typedef_class1_obj.type))\" \"typedef_class1\"\n set test \"nested typedef stripping\"\n gdb_test_multiple \"python print (str (basic_type_typedef_const_typedef_class1_obj))\" $test {\n     -re \"\\[\\r\\n\\]+class1\\[\\r\\n\\]+$gdb_prompt $\" {"
    }
  ]
}