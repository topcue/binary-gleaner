{
  "sha": "bab31d145160cd4dec7b9ad0e79346382ebf8385",
  "node_id": "C_kwDOANOeidoAKGJhYjMxZDE0NTE2MGNkNGRlYzdiOWFkMGU3OTM0NjM4MmViZjgzODU",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-22T08:14:16Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-22T08:14:16Z"
    },
    "message": "[gdb/symtab] Support .debug_line with DW_FORM_line_strp\n\nI noticed a new gcc option -gdwarf64 and tried it out (using gcc 11.2.1).\n\nWith a test-case hello.c:\n...\nint\nmain (void)\n{\n  printf (\"hello\\n\");\n  return 0;\n}\n...\ncompiled like this:\n...\n$ gcc -g -gdwarf64 ~/hello.c\n...\nI ran into:\n...\n$ gdb -q -batch a.out\nDW_FORM_line_strp pointing outside of .debug_line_str section \\\n  [in module a.out]\n...\n\nDebugging gdb revealed that the string offset is:\n...\n(gdb) up\n    objfile=0x182ab70, str_offset=1378684502312,\n    form_name=0xeae9b5 \"DW_FORM_line_strp\")\n    at src/gdb/dwarf2/section.c:208\n208         error (_(\"%s pointing outside of %s section [in module %s]\"),\n(gdb) p /x str_offset\n$1 = 0x14100000128\n(gdb)\n...\nwhich is read when parsing a .debug_line entry at 0x1e0.\n\nLooking with readelf at the 0x1e0 entry, we have:\n...\n The Directory Table (offset 0x202, lines 2, columns 1):\n  Entry Name\n  0     (indirect line string, offset: 0x128): /data/gdb_versions/devel\n  1     (indirect line string, offset: 0x141): /home/vries\n...\nwhich in a hexdump looks like:\n...\n  0x00000200 1f022801 00004101 00000201 1f020f02\n...\n\nWhat happens is the following:\n- readelf interprets the DW_FORM_line_strp reference to .debug_line_str as\n  a 4 byte value, and sees entries 0x00000128 and 0x00000141.\n- gdb instead interprets it as an 8 byte value, and sees as first entry\n  0x0000014100000128, which is too big so it bails out.\n\nAFAIU, gdb is wrong.  It assumes DW_FORM_line_strp is 8 bytes on the basis\nthat the corresponding CU is 64-bit DWARF.  However, the .debug_line\ncontribution has it's own initial_length field, and encodes there that it's\n32-bit DWARF.\n\nFix this by using the correct offset size for DW_FORM_line_strp references\nin .debug_line.\n\nNote: the described test-case does trigger this complaint (both with and\nwithout this patch):\n...\n$ gdb -q -batch -iex \"set complaints 10\" a.out\nDuring symbol reading: intermixed 32-bit and 64-bit DWARF sections\n...\n\nThe reason that the CU has 64-bit dwarf is because -gdwarf64 was passed to\ngcc.  The reason that the .debug_line entry has 32-bit dwarf is because that's\nwhat gas generates.  Perhaps this is complaint-worthy, but I don't think it\nis wrong.\n\nTested on x86_64-linux, using native and target board dwarf64.exp.",
    "tree": {
      "sha": "85261ec6bfe218eb40d187efe56da0d409e05ea9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/85261ec6bfe218eb40d187efe56da0d409e05ea9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bab31d145160cd4dec7b9ad0e79346382ebf8385",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab31d145160cd4dec7b9ad0e79346382ebf8385",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bab31d145160cd4dec7b9ad0e79346382ebf8385",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab31d145160cd4dec7b9ad0e79346382ebf8385/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "26bf28e29d7b3bddc6d2f8f34f07000f2b858588",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26bf28e29d7b3bddc6d2f8f34f07000f2b858588",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/26bf28e29d7b3bddc6d2f8f34f07000f2b858588"
    }
  ],
  "stats": {
    "total": 129,
    "additions": 106,
    "deletions": 23
  },
  "files": [
    {
      "sha": "852e2851e99437a91d0a194935d9d60c59697f7c",
      "filename": "gdb/dwarf2/line-header.c",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/dwarf2/line-header.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/dwarf2/line-header.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/line-header.c?ref=bab31d145160cd4dec7b9ad0e79346382ebf8385",
      "patch": "@@ -137,7 +137,7 @@ read_checked_initial_length_and_offset (bfd *abfd, const gdb_byte *buf,\n static void\n read_formatted_entries (dwarf2_per_objfile *per_objfile, bfd *abfd,\n \t\t\tconst gdb_byte **bufp, struct line_header *lh,\n-\t\t\tconst struct comp_unit_head *cu_header,\n+\t\t\tunsigned int offset_size,\n \t\t\tvoid (*callback) (struct line_header *lh,\n \t\t\t\t\t  const char *name,\n \t\t\t\t\t  dir_index d_index,\n@@ -187,9 +187,12 @@ read_formatted_entries (dwarf2_per_objfile *per_objfile, bfd *abfd,\n \t      break;\n \n \t    case DW_FORM_line_strp:\n-\t      string.emplace\n-\t\t(per_objfile->read_line_string (buf, cu_header, &bytes_read));\n-\t      buf += bytes_read;\n+\t      {\n+\t\tconst char *str\n+\t\t  = per_objfile->read_line_string (buf, offset_size);\n+\t\tstring.emplace (str);\n+\t\tbuf += offset_size;\n+\t      }\n \t      break;\n \n \t    case DW_FORM_data1:\n@@ -372,7 +375,7 @@ dwarf_decode_line_header  (sect_offset sect_off, bool is_dwz,\n     {\n       /* Read directory table.  */\n       read_formatted_entries (per_objfile, abfd, &line_ptr, lh.get (),\n-\t\t\t      cu_header,\n+\t\t\t      offset_size,\n \t\t\t      [] (struct line_header *header, const char *name,\n \t\t\t\t  dir_index d_index, unsigned int mod_time,\n \t\t\t\t  unsigned int length)\n@@ -382,7 +385,7 @@ dwarf_decode_line_header  (sect_offset sect_off, bool is_dwz,\n \n       /* Read file name table.  */\n       read_formatted_entries (per_objfile, abfd, &line_ptr, lh.get (),\n-\t\t\t      cu_header,\n+\t\t\t      offset_size,\n \t\t\t      [] (struct line_header *header, const char *name,\n \t\t\t\t  dir_index d_index, unsigned int mod_time,\n \t\t\t\t  unsigned int length)"
    },
    {
      "sha": "a513cc493a78786746c8d022947c9449f4b686bc",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=bab31d145160cd4dec7b9ad0e79346382ebf8385",
      "patch": "@@ -20304,6 +20304,18 @@ read_indirect_string (dwarf2_per_objfile *per_objfile, bfd *abfd,\n \n /* See read.h.  */\n \n+const char *\n+dwarf2_per_objfile::read_line_string (const gdb_byte *buf,\n+\t\t\t\t      unsigned int offset_size)\n+{\n+  bfd *abfd = objfile->obfd;\n+  ULONGEST str_offset = read_offset (abfd, buf, offset_size);\n+\n+  return per_bfd->line_str.read_string (objfile, str_offset, \"DW_FORM_line_strp\");\n+}\n+\n+/* See read.h.  */\n+\n const char *\n dwarf2_per_objfile::read_line_string (const gdb_byte *buf,\n \t\t\t\t      const struct comp_unit_head *cu_header,"
    },
    {
      "sha": "fe34e3f95aedc04fad74fa8161c33334c674631b",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=bab31d145160cd4dec7b9ad0e79346382ebf8385",
      "patch": "@@ -517,6 +517,11 @@ struct dwarf2_per_objfile\n \t\t\t\tconst struct comp_unit_head *cu_header,\n \t\t\t\tunsigned int *bytes_read_ptr);\n \n+  /* Return pointer to string at .debug_line_str offset as read from BUF.\n+     The offset_size is OFFSET_SIZE.  */\n+  const char *read_line_string (const gdb_byte *buf,\n+\t\t\t\tunsigned int offset_size);\n+\n   /* Return true if the symtab corresponding to PER_CU has been set,\n      false otherwise.  */\n   bool symtab_set_p (const dwarf2_per_cu_data *per_cu) const;"
    },
    {
      "sha": "9cc24955102e06714fe0a128177ea2640db3b818",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-lines.exp?ref=bab31d145160cd4dec7b9ad0e79346382ebf8385",
      "patch": "@@ -37,18 +37,19 @@ proc line_for { l } {\n }\n \n # Execute test.\n-proc test_1 { _cv _cdw64 _lv _ldw64 } {\n+proc test_1 { _cv _cdw64 _lv _ldw64 {_string_form \"\"}} {\n     global srcfile srcfile2 testfile\n-    global cv cdw64 lv ldw64\n+    global cv cdw64 lv ldw64 string_form\n     set cv $_cv\n     set cdw64 $_cdw64\n     set lv $_lv\n     set ldw64 $_ldw64\n+    set string_form $_string_form\n \n     set asm_file [standard_output_file $srcfile2]\n     Dwarf::assemble $asm_file {\n \tdeclare_labels Llines\n-\tglobal srcdir subdir srcfile cv cdw64 lv ldw64\n+\tglobal srcdir subdir srcfile cv cdw64 lv ldw64 string_form\n \tglobal func_info_vars\n \tforeach var $func_info_vars {\n \t    global $var\n@@ -75,7 +76,7 @@ proc test_1 { _cv _cdw64 _lv _ldw64 } {\n \t    }\n \t}\n \n-\tlines [list version $lv is_64 $ldw64] Llines {\n+\tlines [list version $lv is_64 $ldw64 string_form $string_form] Llines {\n \t    include_dir \"${srcdir}/${subdir}\"\n \t    file_name \"$srcfile\" 1\n \n@@ -121,12 +122,18 @@ proc test_1 { _cv _cdw64 _lv _ldw64 } {\n \n \n # Add unique test prefix.\n-proc test { cv cdw64 lv ldw64 } {\n+proc test { cv cdw64 lv ldw64 {string_form \"\"}} {\n     with_test_prefix cv=$cv {\n \twith_test_prefix cdw=[expr $cdw64 ? 64 : 32] {\n \t    with_test_prefix lv=$lv {\n \t\twith_test_prefix ldw=[expr $ldw64 ? 64 : 32] {\n-\t\t    test_1 $cv $cdw64 $lv $ldw64\n+\t\t    if { $string_form == \"\" } {\n+\t\t\ttest_1 $cv $cdw64 $lv $ldw64\n+\t\t    } else {\n+\t\t\twith_test_prefix string_form=$string_form {\n+\t\t\t    test_1 $cv $cdw64 $lv $ldw64 $string_form\n+\t\t\t}\n+\t\t    }\n \t\t}\n \t    }\n \t}\n@@ -157,6 +164,7 @@ for { set cv $cv_low } { $cv <= $cv_high } { incr cv } {\n \n foreach cdw64 { 0 1 } {\n     foreach ldw64 { 0 1 } {\n-\ttest 5 $cdw64 5 $ldw64\n+\ttest 5 $cdw64 5 $ldw64 string\n+\ttest 5 $cdw64 5 $ldw64 line_strp\n     }\n }"
    },
    {
      "sha": "cbb1bf6985aec8928605c53ce7cc243a11f1aeb2",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 65,
      "deletions": 10,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bab31d145160cd4dec7b9ad0e79346382ebf8385/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=bab31d145160cd4dec7b9ad0e79346382ebf8385",
      "patch": "@@ -2185,9 +2185,11 @@ namespace eval Dwarf {\n \tvariable _line_saw_program\n \tvariable _line_header_end_label\n \tvariable _line_unit_version\n+\tvariable _line_is_64\n+\tvariable _line_string_form\n \n \t# Establish the defaults.\n-\tset is_64 0\n+\tset _line_is_64 0\n \tset _line_unit_version 4\n \tset _unit_addr_size default\n \tset _line_saw_program 0\n@@ -2197,14 +2199,17 @@ namespace eval Dwarf {\n \tset _line_header_finalized 0\n \tset _default_is_stmt 1\n \tset _seg_sel_size 0\n+\t#set _line_string_form string\n+\tset _line_string_form line_strp\n \n \tforeach { name value } $options {\n \t    switch -exact -- $name {\n-\t\tis_64 { set is_64 $value }\n+\t\tis_64 { set _line_is_64 $value }\n \t\tversion { set _line_unit_version $value }\n \t\taddr_size { set _unit_addr_size $value }\n \t\tseg_sel_size { set _seg_sel_size $value }\n \t\tdefault_is_stmt { set _default_is_stmt $value }\n+\t\tstring_form { set $_line_string_form $value }\n \t\tdefault { error \"unknown option $name\" }\n \t    }\n \t}\n@@ -2231,7 +2236,7 @@ namespace eval Dwarf {\n \tset header_len_label [_compute_label \"line${_line_count}_header_start\"]\n \tset _line_header_end_label [_compute_label \"line${_line_count}_header_end\"]\n \n-\tif {$is_64} {\n+\tif {$_line_is_64} {\n \t    _op .4byte 0xffffffff\n \t    _op .8byte \"$unit_end_label - $unit_len_label\" \"unit_length\"\n \t} else {\n@@ -2248,7 +2253,7 @@ namespace eval Dwarf {\n \t    _op .byte $_seg_sel_size \"seg_sel_size\"\n \t}\n \n-\tif {$is_64} {\n+\tif {$_line_is_64} {\n \t    _op .8byte \"$_line_header_end_label - $header_len_label\" \"header_length\"\n \t} else {\n \t    _op .4byte \"$_line_header_end_label - $header_len_label\" \"header_length\"\n@@ -2306,12 +2311,22 @@ namespace eval Dwarf {\n \t    variable _line_file_names\n \n \t    variable _line_unit_version\n+\t    variable _line_is_64\n+\t    variable _line_string_form\n \t    if { $_line_unit_version >= 5 } {\n \t\t_op .byte 1 \"directory_entry_format_count\"\n \t\t_op .uleb128 1 \\\n \t\t    \"directory_entry_format (content type code: DW_LNCT_path)\"\n-\t\t_op .uleb128 0x08 \\\n-\t\t    \"directory_entry_format (form: DW_FORM_string)\"\n+\t\tswitch $_line_string_form {\n+\t\t    string {\n+\t\t\t_op .uleb128 0x08 \\\n+\t\t\t    \"directory_entry_format (form: DW_FORM_string)\"\n+\t\t    }\n+\t\t    line_strp {\n+\t\t\t_op .uleb128 0x1f \\\n+\t\t\t    \"directory_entry_format (form: DW_FORM_line_strp)\"\n+\t\t    }\n+\t\t}\n \n \t\tset nr_dirs [llength $_line_include_dirs]\n \t\t# For entry 0.\n@@ -2324,14 +2339,38 @@ namespace eval Dwarf {\n \t\t    [concat [list $dirname] $_line_include_dirs]\n \n \t\tforeach dirname $_line_include_dirs {\n-\t\t    _op .ascii [_quote $dirname]\n+\t\t    switch $_line_string_form {\n+\t\t\tstring {\n+\t\t\t    _op .ascii [_quote $dirname]\n+\t\t\t}\n+\t\t\tline_strp {\n+\t\t\t    declare_labels string_ptr\n+\t\t\t    _defer_output .debug_line_str {\n+\t\t\t\tstring_ptr:\n+\t\t\t\t_op .ascii [_quote $dirname]\n+\t\t\t    }\n+\t\t\t    if { $_line_is_64 } {\n+\t\t\t\t_op .8byte $string_ptr\n+\t\t\t    } else {\n+\t\t\t\t_op .4byte $string_ptr\n+\t\t\t    }\n+\t\t\t}\n+\t\t    }\n \t\t}\n \n \t\t_op .byte 2 \"file_name_entry_format_count\"\n \t\t_op .uleb128 1 \\\n \t\t    \"file_name_entry_format (content type code: DW_LNCT_path)\"\n-\t\t_op .uleb128 0x08 \\\n-\t\t    \"file_name_entry_format (form: DW_FORM_string)\"\n+\t\tswitch $_line_string_form {\n+\t\t    string {\n+\t\t\t_op .uleb128 0x08 \\\n+\t\t\t    \"directory_entry_format (form: DW_FORM_string)\"\n+\t\t    }\n+\t\t    line_strp {\n+\t\t\t_op .uleb128 0x1f \\\n+\t\t\t    \"directory_entry_format (form: DW_FORM_line_strp)\"\n+\t\t    }\n+\t\t}\n \t\t_op .uleb128 2 \\\n \t\t    \"file_name_entry_format (content type code: DW_LNCT_directory_index)\"\n \t\t_op .uleb128 0x0f \\\n@@ -2349,7 +2388,23 @@ namespace eval Dwarf {\n \t\t    [concat [list $filename $diridx] $_line_file_names]\n \n \t\tforeach { filename diridx } $_line_file_names {\n-\t\t    _op .ascii [_quote $filename]\n+\t\t    switch $_line_string_form {\n+\t\t\tstring {\n+\t\t\t    _op .ascii [_quote $filename]\n+\t\t\t}\n+\t\t\tline_strp {\n+\t\t\t    declare_labels string_ptr\n+\t\t\t    _defer_output .debug_line_str {\n+\t\t\t\tstring_ptr:\n+\t\t\t\t_op .ascii [_quote $filename]\n+\t\t\t    }\n+\t\t\t    if { $_line_is_64 } {\n+\t\t\t\t_op .8byte $string_ptr\n+\t\t\t    } else {\n+\t\t\t\t_op .4byte $string_ptr\n+\t\t\t    }\n+\t\t\t}\n+\t\t    }\n \t\t    _op .uleb128 $diridx\n \t\t}\n \t    } else {"
    }
  ]
}