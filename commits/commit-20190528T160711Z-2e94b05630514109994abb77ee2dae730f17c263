{
  "sha": "2e94b05630514109994abb77ee2dae730f17c263",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmU5NGIwNTYzMDUxNDEwOTk5NGFiYjc3ZWUyZGFlNzMwZjE3YzI2Mw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-04-23T17:42:34Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-05-28T16:07:11Z"
    },
    "message": "include: new header ctf-api.h\n\nThis non-installed header is the means by which libctf consumers\ncommunicate with libctf.\n\nThis header will be extended in subsequent commits.\n\ninclude/\n\t* ctf-api.h: New file.",
    "tree": {
      "sha": "d76d38e3832899fc3737856da2561fed54550c27",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d76d38e3832899fc3737856da2561fed54550c27"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2e94b05630514109994abb77ee2dae730f17c263",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2e94b05630514109994abb77ee2dae730f17c263",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2e94b05630514109994abb77ee2dae730f17c263",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2e94b05630514109994abb77ee2dae730f17c263/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fceac76e64b998c9b66a229134a9ead25209e095",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fceac76e64b998c9b66a229134a9ead25209e095",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fceac76e64b998c9b66a229134a9ead25209e095"
    }
  ],
  "stats": {
    "total": 134,
    "additions": 134,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2cd9f49393e00a7e39b9a0360021e14903d7946c",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2e94b05630514109994abb77ee2dae730f17c263/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2e94b05630514109994abb77ee2dae730f17c263/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=2e94b05630514109994abb77ee2dae730f17c263",
      "patch": "@@ -1,3 +1,7 @@\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h: New file.\n+\n 2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf.h: New file."
    },
    {
      "sha": "81f6add468111e15d6885f55127715e721ad9b73",
      "filename": "include/ctf-api.h",
      "status": "added",
      "additions": 130,
      "deletions": 0,
      "changes": 130,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2e94b05630514109994abb77ee2dae730f17c263/include/ctf-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2e94b05630514109994abb77ee2dae730f17c263/include/ctf-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf-api.h?ref=2e94b05630514109994abb77ee2dae730f17c263",
      "patch": "@@ -0,0 +1,130 @@\n+/* Public API to libctf.\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of libctf.\n+\n+   libctf is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+\n+   This program is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+   See the GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; see the file COPYING.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* This header file defines the interfaces available from the CTF debugger\n+   library, libctf.  This API can be used by a debugger to operate on data in\n+   the Compact ANSI-C Type Format (CTF).  */\n+\n+#ifndef\t_CTF_API_H\n+#define\t_CTF_API_H\n+\n+#include <sys/param.h>\n+#include <sys/types.h>\n+#include <ctf.h>\n+\n+#ifdef\t__cplusplus\n+extern \"C\"\n+  {\n+#endif\n+\n+/* Clients can open one or more CTF containers and obtain a pointer to an\n+   opaque ctf_file_t.  Types are identified by an opaque ctf_id_t token.\n+   They can also open or create read-only archives of CTF containers in a\n+   ctf_archive_t.\n+\n+   These opaque definitions allow libctf to evolve without breaking clients.  */\n+\n+typedef struct ctf_file ctf_file_t;\n+typedef struct ctf_archive_internal ctf_archive_t;\n+typedef long ctf_id_t;\n+\n+/* Functions that return integer status or a ctf_id_t use the following value\n+   to indicate failure.  ctf_errno() can be used to obtain an error code.  */\n+#define\tCTF_ERR\t(-1L)\n+\n+#define\tECTF_BASE\t1000\t/* Base value for libctf errnos.  */\n+\n+\n+enum\n+  {\n+   ECTF_FMT = ECTF_BASE,\t/* File is not in CTF or ELF format.  */\n+   ECTF_BFDERR,\t\t\t/* BFD error.  */\n+   ECTF_CTFVERS,\t\t/* CTF version is more recent than libctf.  */\n+   ECTF_BFD_AMBIGUOUS,\t\t/* Ambiguous BFD target.  */\n+   ECTF_SYMTAB,\t\t\t/* Symbol table uses invalid entry size.  */\n+   ECTF_SYMBAD,\t\t\t/* Symbol table data buffer invalid.  */\n+   ECTF_STRBAD,\t\t\t/* String table data buffer invalid.  */\n+   ECTF_CORRUPT,\t\t/* File data corruption detected.  */\n+   ECTF_NOCTFDATA,\t\t/* ELF file does not contain CTF data.  */\n+   ECTF_NOCTFBUF,\t\t/* Buffer does not contain CTF data.  */\n+   ECTF_NOSYMTAB,\t\t/* Symbol table data is not available.  */\n+   ECTF_NOPARENT,\t\t/* Parent CTF container is not available.  */\n+   ECTF_DMODEL,\t\t\t/* Data model mismatch.  */\n+   ECTF_UNUSED,\t\t\t/* Unused error.  */\n+   ECTF_ZALLOC,\t\t\t/* Failed to allocate (de)compression buffer.  */\n+   ECTF_DECOMPRESS,\t\t/* Failed to decompress CTF data.  */\n+   ECTF_STRTAB,\t\t\t/* String table for this string is missing.  */\n+   ECTF_BADNAME,\t\t/* String offset is corrupt w.r.t. strtab.  */\n+   ECTF_BADID,\t\t\t/* Invalid type ID number.  */\n+   ECTF_NOTSOU,\t\t\t/* Type is not a struct or union.  */\n+   ECTF_NOTENUM,\t\t/* Type is not an enum.  */\n+   ECTF_NOTSUE,\t\t\t/* Type is not a struct, union, or enum.  */\n+   ECTF_NOTINTFP,\t\t/* Type is not an integer, float, or enum.  */\n+   ECTF_NOTARRAY,\t\t/* Type is not an array.  */\n+   ECTF_NOTREF,\t\t\t/* Type does not reference another type.  */\n+   ECTF_NAMELEN,\t\t/* Buffer is too small to hold type name.  */\n+   ECTF_NOTYPE,\t\t\t/* No type found corresponding to name.  */\n+   ECTF_SYNTAX,\t\t\t/* Syntax error in type name.  */\n+   ECTF_NOTFUNC,\t\t/* Symtab entry does not refer to a function.  */\n+   ECTF_NOFUNCDAT,\t\t/* No func info available for function.  */\n+   ECTF_NOTDATA,\t\t/* Symtab entry does not refer to a data obj.  */\n+   ECTF_NOTYPEDAT,\t\t/* No type info available for object.  */\n+   ECTF_NOLABEL,\t\t/* No label found corresponding to name.  */\n+   ECTF_NOLABELDATA,\t\t/* File does not contain any labels.  */\n+   ECTF_NOTSUP,\t\t\t/* Feature not supported.  */\n+   ECTF_NOENUMNAM,\t\t/* Enum element name not found.  */\n+   ECTF_NOMEMBNAM,\t\t/* Member name not found.  */\n+   ECTF_RDONLY,\t\t\t/* CTF container is read-only.  */\n+   ECTF_DTFULL,\t\t\t/* CTF type is full (no more members allowed).  */\n+   ECTF_FULL,\t\t\t/* CTF container is full.  */\n+   ECTF_DUPLICATE,\t\t/* Duplicate member or variable name.  */\n+   ECTF_CONFLICT,\t\t/* Conflicting type definition present.  */\n+   ECTF_OVERROLLBACK,\t\t/* Attempt to roll back past a ctf_update.  */\n+   ECTF_COMPRESS,\t\t/* Failed to compress CTF data.  */\n+   ECTF_ARCREATE,\t\t/* Error creating CTF archive.  */\n+   ECTF_ARNNAME,\t\t/* Name not found in CTF archive.  */\n+   ECTF_SLICEOVERFLOW,\t\t/* Overflow of type bitness or offset in slice.  */\n+   ECTF_DUMPSECTUNKNOWN,\t/* Unknown section number in dump.  */\n+   ECTF_DUMPSECTCHANGED\t\t/* Section changed in middle of dump.  */\n+  };\n+\n+/* The CTF data model is inferred to be the caller's data model or the data\n+   model of the given object, unless ctf_setmodel() is explicitly called.  */\n+#define\tCTF_MODEL_ILP32 1\t/* Object data model is ILP32.  */\n+#define\tCTF_MODEL_LP64  2\t/* Object data model is LP64.  */\n+#ifdef _LP64\n+# define CTF_MODEL_NATIVE CTF_MODEL_LP64\n+#else\n+# define CTF_MODEL_NATIVE CTF_MODEL_ILP32\n+#endif\n+\n+/* Dynamic CTF containers can be created using ctf_create().  The ctf_add_*\n+   routines can be used to add new definitions to the dynamic container.\n+   New types are labeled as root or non-root to determine whether they are\n+   visible at the top-level program scope when subsequently doing a lookup.  */\n+\n+#define\tCTF_ADD_NONROOT\t0\t/* Type only visible in nested scope.  */\n+#define\tCTF_ADD_ROOT\t1\t/* Type visible at top-level scope.  */\n+\n+\n+#ifdef\t__cplusplus\n+}\n+#endif\n+\n+#endif\t\t\t\t/* _CTF_API_H */"
    }
  ]
}