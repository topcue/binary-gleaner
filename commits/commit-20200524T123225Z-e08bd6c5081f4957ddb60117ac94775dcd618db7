{
  "sha": "e08bd6c5081f4957ddb60117ac94775dcd618db7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTA4YmQ2YzUwODFmNDk1N2RkYjYwMTE3YWM5NDc3NWRjZDYxOGRiNw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-24T12:32:25Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-24T12:32:25Z"
    },
    "message": "Don't remove C++ aliases from completions if symbol doesn't match\n\ncompletion_list_add_symbol currently tries to remove C++ function\naliases from the completions match list even if the symbol passed down\nwasn't successfully added to the completion list because it didn't\nmatch.  I.e., we call cp_canonicalize_string_no_typedefs for each and\nevery C++ function in the program, which is useful work.  This patch\nskips that useless work.\n\ngdb/ChangeLog:\n2020-05-24  Pedro Alves  <palves@redhat.com>\n\n\t* symtab.c (completion_list_add_name): Return boolean indication\n\tof whether the symbol matched.\n\t(completion_list_add_symbol): Don't try to remove C++ aliases if\n\tthe symbol didn't match in the first place.\n\t* symtab.h (completion_list_add_name): Return bool.",
    "tree": {
      "sha": "816111736ca11d83497d4505c9510fc892bdbfd0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/816111736ca11d83497d4505c9510fc892bdbfd0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e08bd6c5081f4957ddb60117ac94775dcd618db7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e08bd6c5081f4957ddb60117ac94775dcd618db7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e08bd6c5081f4957ddb60117ac94775dcd618db7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e08bd6c5081f4957ddb60117ac94775dcd618db7/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bb68f22c8e648032a0d1c1d17353eec599ff5e6a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb68f22c8e648032a0d1c1d17353eec599ff5e6a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bb68f22c8e648032a0d1c1d17353eec599ff5e6a"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 19,
    "deletions": 7
  },
  "files": [
    {
      "sha": "9f65e2df97005471aebef138ccc3f0b8f6a046e0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e08bd6c5081f4957ddb60117ac94775dcd618db7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e08bd6c5081f4957ddb60117ac94775dcd618db7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e08bd6c5081f4957ddb60117ac94775dcd618db7",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-24  Pedro Alves  <palves@redhat.com>\n+\n+\t* symtab.c (completion_list_add_name): Return boolean indication\n+\tof whether the symbol matched.\n+\t(completion_list_add_symbol): Don't try to remove C++ aliases if\n+\tthe symbol didn't match in the first place.\n+\t* symtab.h (completion_list_add_name): Return bool.\n+\n 2020-05-23  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdbtypes.h (TYPE_FIELD): Remove.  Replace all uses with"
    },
    {
      "sha": "5c4e282c0246262d0f9d5de74a35c2a0fadcb812",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e08bd6c5081f4957ddb60117ac94775dcd618db7/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e08bd6c5081f4957ddb60117ac94775dcd618db7/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=e08bd6c5081f4957ddb60117ac94775dcd618db7",
      "patch": "@@ -5260,7 +5260,7 @@ compare_symbol_name (const char *symbol_name, language symbol_language,\n \n /*  See symtab.h.  */\n \n-void\n+bool\n completion_list_add_name (completion_tracker &tracker,\n \t\t\t  language symbol_language,\n \t\t\t  const char *symname,\n@@ -5272,7 +5272,7 @@ completion_list_add_name (completion_tracker &tracker,\n \n   /* Clip symbols that cannot match.  */\n   if (!compare_symbol_name (symname, symbol_language, lookup_name, match_res))\n-    return;\n+    return false;\n \n   /* Refresh SYMNAME from the match string.  It's potentially\n      different depending on language.  (E.g., on Ada, the match may be\n@@ -5296,6 +5296,8 @@ completion_list_add_name (completion_tracker &tracker,\n     tracker.add_completion (std::move (completion),\n \t\t\t    &match_res.match_for_lcd, text, word);\n   }\n+\n+  return true;\n }\n \n /* completion_list_add_name wrapper for struct symbol.  */\n@@ -5306,9 +5308,10 @@ completion_list_add_symbol (completion_tracker &tracker,\n \t\t\t    const lookup_name_info &lookup_name,\n \t\t\t    const char *text, const char *word)\n {\n-  completion_list_add_name (tracker, sym->language (),\n-\t\t\t    sym->natural_name (),\n-\t\t\t    lookup_name, text, word);\n+  if (!completion_list_add_name (tracker, sym->language (),\n+\t\t\t\t sym->natural_name (),\n+\t\t\t\t lookup_name, text, word))\n+    return;\n \n   /* C++ function symbols include the parameters within both the msymbol\n      name and the symbol name.  The problem is that the msymbol name will"
    },
    {
      "sha": "9972e8125ba0e845a6b5a674e4f14c0803159954",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e08bd6c5081f4957ddb60117ac94775dcd618db7/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e08bd6c5081f4957ddb60117ac94775dcd618db7/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=e08bd6c5081f4957ddb60117ac94775dcd618db7",
      "patch": "@@ -2332,8 +2332,9 @@ const char *\n /* Test to see if the symbol of language SYMBOL_LANGUAGE specified by\n    SYMNAME (which is already demangled for C++ symbols) matches\n    SYM_TEXT in the first SYM_TEXT_LEN characters.  If so, add it to\n-   the current completion list.  */\n-void completion_list_add_name (completion_tracker &tracker,\n+   the current completion list and return true.  Otherwise, return\n+   false.  */\n+bool completion_list_add_name (completion_tracker &tracker,\n \t\t\t       language symbol_language,\n \t\t\t       const char *symname,\n \t\t\t       const lookup_name_info &lookup_name,"
    }
  ]
}