{
  "sha": "50a5f1878e22b09ebea30ad60a2164b80af6efdb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTBhNWYxODc4ZTIyYjA5ZWJlYTMwYWQ2MGEyMTY0YjgwYWY2ZWZkYg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-20T19:08:06Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-13T12:36:15Z"
    },
    "message": "gdb: introduce new 'maint flush ' prefix command\n\nWe currently have two flushing commands 'flushregs' and 'maint\nflush-symbol-cache'.  I'm planning to add at least one more so I\nthought it might be nice if we bundled these together into one place.\n\nAnd so I created the 'maint flush ' command prefix.  Currently there\nare two commands:\n\n  (gdb) maint flush symbol-cache\n  (gdb) maint flush register-cache\n\nUnfortunately, even though both of the existing flush commands are\nmaintenance commands, I don't know how keen we about deleting existing\ncommands for fear of breaking things in the wild.  So, both of the\nexisting flush commands 'maint flush-symbol-cache' and 'flushregs' are\nstill around as deprecated aliases to the new commands.\n\nI've updated the testsuite to use the new command syntax, and updated\nthe documentation too.\n\ngdb/ChangeLog:\n\n\t* NEWS: Mention new commands, and that the old commands are now\n\tdeprecated.\n\t* cli/cli-cmds.c (maintenanceflushlist): Define.\n\t* cli/cli-cmds.h (maintenanceflushlist): Declare.\n\t* maint.c (_initialize_maint_cmds): Initialise\n\tmaintenanceflushlist.\n\t* regcache.c: Add 'cli/cli-cmds.h' include.\n\t(reg_flush_command): Add header comment.\n\t(_initialize_regcache): Create new 'maint flush register-cache'\n\tcommand, make 'flushregs' an alias.\n\t* symtab.c: Add 'cli/cli-cmds.h' include.\n\t(_initialize_symtab): Create new 'maint flush symbol-cache'\n\tcommand, make old command an alias.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Symbols): Document 'maint flush symbol-cache'.\n\t(Maintenance Commands): Document 'maint flush register-cache'.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/c-linkage-name.exp: Update to use new 'maint flush ...'\n\tcommands.\n\t* gdb.base/killed-outside.exp: Likewise.\n\t* gdb.opt/inline-bt.exp: Likewise.\n\t* gdb.perf/gmonster-null-lookup.py: Likewise.\n\t* gdb.perf/gmonster-print-cerr.py: Likewise.\n\t* gdb.perf/gmonster-ptype-string.py: Likewise.\n\t* gdb.python/py-unwind.exp: Likewise.",
    "tree": {
      "sha": "cd8cd90d92c67b71fa0b41da54d54543fbb49b7d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cd8cd90d92c67b71fa0b41da54d54543fbb49b7d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/50a5f1878e22b09ebea30ad60a2164b80af6efdb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50a5f1878e22b09ebea30ad60a2164b80af6efdb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/50a5f1878e22b09ebea30ad60a2164b80af6efdb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50a5f1878e22b09ebea30ad60a2164b80af6efdb/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7393df7f3fb404a605af9f2b9d4b8698c6fcc7df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7393df7f3fb404a605af9f2b9d4b8698c6fcc7df",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7393df7f3fb404a605af9f2b9d4b8698c6fcc7df"
    }
  ],
  "stats": {
    "total": 113,
    "additions": 96,
    "deletions": 17
  },
  "files": [
    {
      "sha": "f7ca2c9ff7c6c554cfb87e8ace6d8535c9091d14",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -1,3 +1,19 @@\n+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* NEWS: Mention new commands, and that the old commands are now\n+\tdeprecated.\n+\t* cli/cli-cmds.c (maintenanceflushlist): Define.\n+\t* cli/cli-cmds.h (maintenanceflushlist): Declare.\n+\t* maint.c (_initialize_maint_cmds): Initialise\n+\tmaintenanceflushlist.\n+\t* regcache.c: Add 'cli/cli-cmds.h' include.\n+\t(reg_flush_command): Add header comment.\n+\t(_initialize_regcache): Create new 'maint flush register-cache'\n+\tcommand, make 'flushregs' an alias.\n+\t* symtab.c: Add 'cli/cli-cmds.h' include.\n+\t(_initialize_symtab): Create new 'maint flush symbol-cache'\n+\tcommand, make old command an alias.\n+\n 2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* cli/cli-decode.c (deprecated_cmd_warning): Ignore the prefix"
    },
    {
      "sha": "4d963880cb34d1f1ca992f79c766c25f7d4a7107",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -39,6 +39,11 @@ set debug event-loop\n show debug event-loop\n   Control the display of debug output about GDB's event loop.\n \n+maintenance flush symbol-cache\n+maintenance flush register-cache\n+  These new commands are equivalent to the already existing commands\n+  'maintenance flush-symbol-cache' and 'flushregs' respectively.\n+\n * Changed commands\n \n break [PROBE_MODIFIER] [LOCATION] [thread THREADNUM]\n@@ -61,6 +66,12 @@ condition [-force] N COND\n   GDB into defining the condition even when COND is invalid for all the\n   current locations of breakpoint N.\n \n+flushregs\n+maintenance flush-symbol-cache\n+  These commands are deprecated in favor of the new commands\n+  'maintenance flush register-cache' and 'maintenance flush\n+  symbol-cache' respectively.\n+\n *** Changes in GDB 10\n \n * There are new feature names for ARC targets: \"org.gnu.gdb.arc.core\""
    },
    {
      "sha": "88c83cd63198d3de569c9365559cbfd5275d3514",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -151,6 +151,10 @@ struct cmd_list_element *maintenanceprintlist;\n \n struct cmd_list_element *maintenancechecklist;\n \n+/* Chain containing all defined \"maintenance flush\" subcommands.  */\n+\n+struct cmd_list_element *maintenanceflushlist;\n+\n struct cmd_list_element *setprintlist;\n \n struct cmd_list_element *showprintlist;"
    },
    {
      "sha": "976cea078066294328185a495cd958759f459909",
      "filename": "gdb/cli/cli-cmds.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/cli/cli-cmds.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/cli/cli-cmds.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.h?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -89,6 +89,10 @@ extern struct cmd_list_element *maintenanceinfolist;\n \n extern struct cmd_list_element *maintenanceprintlist;\n \n+/* Chain containing all defined \"maintenance flush\" subcommands.  */\n+\n+extern struct cmd_list_element *maintenanceflushlist;\n+\n extern struct cmd_list_element *setprintlist;\n \n extern struct cmd_list_element *showprintlist;"
    },
    {
      "sha": "6ad728ea36eb77411682029f9fe8fde9fdaf0136",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.texinfo (Symbols): Document 'maint flush symbol-cache'.\n+\t(Maintenance Commands): Document 'maint flush register-cache'.\n+\n 2020-12-04  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* Makefile.in: Delete GDBvn.texi and version.subst only in"
    },
    {
      "sha": "5bafb9d11cd6ba03a6dbc509f51c2463020f6678",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -19503,12 +19503,16 @@ This is useful when debugging symbol cache issues.\n Print symbol cache usage statistics.\n This helps determine how well the cache is being utilized.\n \n+@kindex maint flush symbol-cache\n @kindex maint flush-symbol-cache\n @cindex symbol cache, flushing\n-@item maint flush-symbol-cache\n-Flush the contents of the symbol cache, all entries are removed.\n-This command is useful when debugging the symbol cache.\n-It is also useful when collecting performance data.\n+@item maint flush symbol-cache\n+@itemx maint flush-symbol-cache\n+Flush the contents of the symbol cache, all entries are removed.  This\n+command is useful when debugging the symbol cache.  It is also useful\n+when collecting performance data.  The command @code{maint\n+flush-symbol-cache} is deprecated in favor of @code{maint flush\n+symbol-cache}..\n \n @end table\n \n@@ -38859,9 +38863,15 @@ The register groups info looks like this:\n  restore    internal\n @end smallexample\n \n+@kindex maint flush register-cache\n @kindex flushregs\n-@item flushregs\n-This command forces @value{GDBN} to flush its internal register cache.\n+@cindex register cache, flushing\n+@item maint flush register-cache\n+@itemx flushregs\n+Flush the contents of the register cache and as a consequence the\n+frame cache.  This command is useful when debugging issues related to\n+register fetching, or frame unwinding.  The command @code{flushregs}\n+is deprecated in favor of @code{maint flush register-cache}.\n \n @kindex maint print objfiles\n @cindex info for known object files"
    },
    {
      "sha": "ac2431562d301723f4e477625121398de16ece06",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -1083,6 +1083,11 @@ lists all sections from all object files, including shared libraries.\"),\n \t\t\t&maintenanceprintlist, \"maintenance print \", 0,\n \t\t\t&maintenancelist);\n \n+  add_basic_prefix_cmd (\"flush\", class_maintenance,\n+\t\t\t_(\"Maintenance command for flushing GDB internal caches.\"),\n+\t\t\t&maintenanceflushlist, \"maintenance flush \", 0,\n+\t\t\t&maintenancelist);\n+\n   add_basic_prefix_cmd (\"set\", class_maintenance, _(\"\\\n Set GDB internal variables used by the GDB maintainer.\\n\\\n Configure variables internal to GDB that aid in GDB's maintenance\"),"
    },
    {
      "sha": "a0dff93a53afee0ad8ec912b34b4a74f33b9ee60",
      "filename": "gdb/regcache.c",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/regcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/regcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache.c?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -30,6 +30,7 @@\n #include \"observable.h\"\n #include \"regset.h\"\n #include <unordered_map>\n+#include \"cli/cli-cmds.h\"\n \n /*\n  * DATA STRUCTURE\n@@ -1382,6 +1383,8 @@ regcache::debug_print_register (const char *func,  int regno)\n   fprintf_unfiltered (gdb_stdlog, \"\\n\");\n }\n \n+/* Implement 'maint flush register-cache' command.  */\n+\n static void\n reg_flush_command (const char *command, int from_tty)\n {\n@@ -2076,14 +2079,20 @@ void _initialize_regcache ();\n void\n _initialize_regcache ()\n {\n+  struct cmd_list_element *c;\n+\n   regcache_descr_handle\n     = gdbarch_data_register_post_init (init_regcache_descr);\n \n   gdb::observers::target_changed.attach (regcache_observer_target_changed);\n   gdb::observers::thread_ptid_changed.attach (regcache_thread_ptid_changed);\n \n-  add_com (\"flushregs\", class_maintenance, reg_flush_command,\n-\t   _(\"Force gdb to flush its register cache (maintainer command).\"));\n+  add_cmd (\"register-cache\", class_maintenance, reg_flush_command,\n+\t   _(\"Force gdb to flush its register and frame cache.\"),\n+\t   &maintenanceflushlist);\n+  c = add_com_alias (\"flushregs\", \"maintenance flush register-cache\",\n+\t\t     class_maintenance, 0);\n+  deprecate_cmd (c, \"maintenance flush register-cache\");\n \n #if GDB_SELF_TEST\n   selftests::register_test (\"get_thread_arch_aspace_regcache\","
    },
    {
      "sha": "3339bf7b88aa087474646e4b34547cba2b67b08b",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -42,6 +42,7 @@\n #include \"addrmap.h\"\n #include \"cli/cli-utils.h\"\n #include \"cli/cli-style.h\"\n+#include \"cli/cli-cmds.h\"\n #include \"fnmatch.h\"\n #include \"hashtab.h\"\n #include \"typeprint.h\"\n@@ -6929,10 +6930,13 @@ If zero then the symbol cache is disabled.\"),\n \t   _(\"Print symbol cache statistics for each program space.\"),\n \t   &maintenanceprintlist);\n \n-  add_cmd (\"flush-symbol-cache\", class_maintenance,\n+  add_cmd (\"symbol-cache\", class_maintenance,\n \t   maintenance_flush_symbol_cache,\n \t   _(\"Flush the symbol cache for each program space.\"),\n-\t   &maintenancelist);\n+\t   &maintenanceflushlist);\n+  c = add_alias_cmd (\"flush-symbol-cache\", \"flush symbol-cache\",\n+\t\t     class_maintenance, 0, &maintenancelist);\n+  deprecate_cmd (c, \"maintenancelist flush symbol-cache\");\n \n   gdb::observers::executable_changed.attach (symtab_observer_executable_changed);\n   gdb::observers::new_objfile.attach (symtab_new_objfile_observer);"
    },
    {
      "sha": "130de8ab447ca1c470e567de125d25e2e89501f3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -1,3 +1,14 @@\n+2020-12-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/c-linkage-name.exp: Update to use new 'maint flush ...'\n+\tcommands.\n+\t* gdb.base/killed-outside.exp: Likewise.\n+\t* gdb.opt/inline-bt.exp: Likewise.\n+\t* gdb.perf/gmonster-null-lookup.py: Likewise.\n+\t* gdb.perf/gmonster-print-cerr.py: Likewise.\n+\t* gdb.perf/gmonster-ptype-string.py: Likewise.\n+\t* gdb.python/py-unwind.exp: Likewise.\n+\n 2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/commands.exp: Update expected results."
    },
    {
      "sha": "c6b3b509df6e30e4866959f363ea0e09f7b69581",
      "filename": "gdb/testsuite/gdb.base/c-linkage-name.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/c-linkage-name.exp?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -64,7 +64,7 @@ gdb_test \"maint info symtabs\" \"\\{ symtab \\[^\\r\\n\\]*c-linkage-name-2.c.*\"\n \n # Flush the symbol cache to prevent the lookup to return the same as before.\n \n-gdb_test \"maint flush-symbol-cache\"\n+gdb_test \"maint flush symbol-cache\"\n \n # Try to print MUNDANE using its linkage name again, after partial\n # symtab expansion."
    },
    {
      "sha": "645b41f4867b1dc17bedf737da703b846ed71819",
      "filename": "gdb/testsuite/gdb.base/killed-outside.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.base/killed-outside.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.base/killed-outside.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/killed-outside.exp?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -115,7 +115,7 @@ with_test_prefix \"stepi\" {\n # other commands would trigger.\n with_test_prefix \"registers\" {\n     test {\n-\tgdb_test \"flushregs\" \".*\"\n+\tgdb_test \"maint flush register-cache\" \".*\"\n \tgdb_test \"info threads\" \".*\"\n     }\n }"
    },
    {
      "sha": "109627c2306465c76f2fa085f6ff009b27da6e47",
      "filename": "gdb/testsuite/gdb.opt/inline-bt.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.opt/inline-bt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.opt/inline-bt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.opt/inline-bt.exp?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -61,7 +61,7 @@ gdb_test \"info frame\" \".*inlined into frame.*\" \"func2 inlined (3)\"\n # function.\n gdb_test_no_output \"set backtrace limit 2\"\n # Force flushing the frame cache.\n-gdb_test \"flushregs\" \"Register cache flushed.\"\n+gdb_test \"maint flush register-cache\" \"Register cache flushed.\"\n gdb_test \"up\" \"#1  .*func1.*\" \"up from bar (4)\"\n gdb_test \"info frame\" \".*in func1.*\" \"info frame still works\"\n # Verify the user visible limit works as expected."
    },
    {
      "sha": "f4ce1ea55e932afeda677bfa08af2e731a9fa54f",
      "filename": "gdb/testsuite/gdb.perf/gmonster-null-lookup.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.perf/gmonster-null-lookup.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.perf/gmonster-null-lookup.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.perf/gmonster-null-lookup.py?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -40,7 +40,7 @@ def execute_test(self):\n             utils.safe_execute(\"mt expand-symtabs\")\n             iteration = 5\n             while iteration > 0:\n-                utils.safe_execute(\"mt flush-symbol-cache\")\n+                utils.safe_execute(\"mt flush symbol-cache\")\n                 func = lambda: utils.safe_execute(\"p symbol_not_found\")\n                 self.measure.measure(func, run)\n                 iteration -= 1"
    },
    {
      "sha": "adee2e601aaadc15b4da9b3dc64ace442b48ce50",
      "filename": "gdb/testsuite/gdb.perf/gmonster-print-cerr.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.perf/gmonster-print-cerr.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.perf/gmonster-print-cerr.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.perf/gmonster-print-cerr.py?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -46,7 +46,7 @@ def execute_test(self):\n             utils.runto_main()\n             iteration = 5\n             while iteration > 0:\n-                utils.safe_execute(\"mt flush-symbol-cache\")\n+                utils.safe_execute(\"mt flush symbol-cache\")\n                 func = lambda: utils.safe_execute(\"print gm_std::cerr\")\n                 self.measure.measure(func, run)\n                 iteration -= 1"
    },
    {
      "sha": "aa5513547e57a40cad721d1df83dae9f9340c273",
      "filename": "gdb/testsuite/gdb.perf/gmonster-ptype-string.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.perf/gmonster-ptype-string.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.perf/gmonster-ptype-string.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.perf/gmonster-ptype-string.py?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -41,7 +41,7 @@ def execute_test(self):\n             utils.safe_execute(\"mt expand-symtabs\")\n             iteration = 5\n             while iteration > 0:\n-                utils.safe_execute(\"mt flush-symbol-cache\")\n+                utils.safe_execute(\"mt flush symbol-cache\")\n                 func1 = lambda: utils.safe_execute(\"ptype hello\")\n                 func = lambda: utils.run_n_times(2, func1)\n                 self.measure.measure(func, run)"
    },
    {
      "sha": "e8ae8632a8e981b6a1663e6e4df3da805b1f5ac3",
      "filename": "gdb/testsuite/gdb.python/py-unwind.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.python/py-unwind.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50a5f1878e22b09ebea30ad60a2164b80af6efdb/gdb/testsuite/gdb.python/py-unwind.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-unwind.exp?ref=50a5f1878e22b09ebea30ad60a2164b80af6efdb",
      "patch": "@@ -57,4 +57,4 @@ gdb_test_sequence \"where\"  \"Backtrace restored by unwinder\" {\n }\n \n # Check that the Python unwinder frames can be flushed / released.\n-gdb_test \"flushregs\" \"Register cache flushed\\\\.\" \"flush frames\"\n+gdb_test \"maint flush register-cache\" \"Register cache flushed\\\\.\" \"flush frames\""
    }
  ]
}