{
  "sha": "e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZThiNWQ1Zjk3MTNiN2M3NGY5NWM0ZmY1NzNkZGViN2ViZGIzZmJjMw==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:23:36Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:23:36Z"
    },
    "message": "x86: drop dead code from OP_IMREG()\n\nThere's only a very limited set of modes that this function gets invoked\nwith - avoid it being more generic than it needs to be. This may, down\nthe road, allow actually doing away with the function altogether.\n\nThis eliminates a first improperly used \"USED_REX (0)\".",
    "tree": {
      "sha": "0bafc00c1efb11d44eefb9020b4362bc2b028853",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0bafc00c1efb11d44eefb9020b4362bc2b028853"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "38397794c90dc92e92ca4b0a9d00005f23fe500b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38397794c90dc92e92ca4b0a9d00005f23fe500b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/38397794c90dc92e92ca4b0a9d00005f23fe500b"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 24,
    "deletions": 40
  },
  "files": [
    {
      "sha": "ba55ed9c8fa20c4ce2049cf18c1d140ed82e77ff",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
      "patch": "@@ -1,3 +1,9 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* testsuite/gas/i386/x86-64-pseudos.s: Add empty-REX tests for\n+\tnot-ModR/M-encoded byte register cases.\n+\t* testsuite/gas/i386/x86-64-pseudos.d: Adjust expectations.\n+\n 2020-07-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/ilp32/x86-64-arch-1.d,"
    },
    {
      "sha": "26944b94cbeb2e79bd28da7a02986bdffe4e30fc",
      "filename": "gas/testsuite/gas/i386/x86-64-pseudos.d",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/gas/testsuite/gas/i386/x86-64-pseudos.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/gas/testsuite/gas/i386/x86-64-pseudos.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-pseudos.d?ref=e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
      "patch": "@@ -301,6 +301,8 @@ Disassembly of section .text:\n  +[a-f0-9]+:\t0f 28 90 80 00 00 00 \tmovaps 0x80\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t0f 28 90 80 00 00 00 \tmovaps 0x80\\(%rax\\),%xmm2\n  +[a-f0-9]+:\t88 c4                \tmov    %al,%ah\n+ +[a-f0-9]+:\t40 d3 e0             \trex shl %cl,%eax\n+ +[a-f0-9]+:\t40 a0 01 00 00 00 00 00 00 00 \trex movabs 0x1,%al\n  +[a-f0-9]+:\t40 89 c3             \trex mov %eax,%ebx\n  +[a-f0-9]+:\t41 89 c6             \tmov    %eax,%r14d\n  +[a-f0-9]+:\t41 89 00             \tmov    %eax,\\(%r8\\)"
    },
    {
      "sha": "052907564c7bb7ea1420ba177ad93a0015ace756",
      "filename": "gas/testsuite/gas/i386/x86-64-pseudos.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/gas/testsuite/gas/i386/x86-64-pseudos.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/gas/testsuite/gas/i386/x86-64-pseudos.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-pseudos.s?ref=e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
      "patch": "@@ -305,6 +305,8 @@ _start:\n \t{disp8} movaps 128(%rax),%xmm2\n \t{disp32} movaps 128(%rax),%xmm2\n \t{rex} mov %al,%ah\n+\t{rex} shl %cl, %eax\n+\t{rex} movabs 1, %al\n \t{rex} movl %eax,%ebx\n \t{rex} movl %eax,%r14d\n \t{rex} movl %eax,(%r8)"
    },
    {
      "sha": "26b56bafd0a30fe6e9d3a7ee015b7aa1a31fdd86",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
      "patch": "@@ -1,3 +1,11 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (eBX, eCX, eDX, eSP, eBP, eSI, eDI, DL, BL, AH,\n+\tCH, DH, BH, AX, DX): Delete.\n+\t(OP_IMREG): Drop handling of eBX_reg, eCX_reg, eDX_reg, eSP_reg,\n+\teBP_reg, eSI_reg, eDI_reg, dl_reg, bl_reg, ah_reg, ch_reg,\n+\tdh_reg, bh_reg, ax_reg, and dx_reg. Simplify what's left.\n+\n 2020-07-10  Lili Cui  <lili.cui@intel.com>\n \n \t* i386-dis.c (TMM): New."
    },
    {
      "sha": "b635a047c55172ee9405bdacb9f69ba3a37e1a18",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 6,
      "deletions": 40,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=e8b5d5f9713b7c74f95c4ff573ddeb7ebdb3fbc3",
      "patch": "@@ -326,23 +326,8 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define RMDX { OP_REG, dx_reg }\n \n #define eAX { OP_IMREG, eAX_reg }\n-#define eBX { OP_IMREG, eBX_reg }\n-#define eCX { OP_IMREG, eCX_reg }\n-#define eDX { OP_IMREG, eDX_reg }\n-#define eSP { OP_IMREG, eSP_reg }\n-#define eBP { OP_IMREG, eBP_reg }\n-#define eSI { OP_IMREG, eSI_reg }\n-#define eDI { OP_IMREG, eDI_reg }\n #define AL { OP_IMREG, al_reg }\n #define CL { OP_IMREG, cl_reg }\n-#define DL { OP_IMREG, dl_reg }\n-#define BL { OP_IMREG, bl_reg }\n-#define AH { OP_IMREG, ah_reg }\n-#define CH { OP_IMREG, ch_reg }\n-#define DH { OP_IMREG, dh_reg }\n-#define BH { OP_IMREG, bh_reg }\n-#define AX { OP_IMREG, ax_reg }\n-#define DX { OP_IMREG, dx_reg }\n #define zAX { OP_IMREG, z_mode_ax_reg }\n #define indirDX { OP_IMREG, indir_dx_reg }\n \n@@ -15285,36 +15270,17 @@ OP_IMREG (int code, int sizeflag)\n       else\n \ts = \"(%dx)\";\n       break;\n-    case ax_reg: case cx_reg: case dx_reg: case bx_reg:\n-    case sp_reg: case bp_reg: case si_reg: case di_reg:\n-      s = names16[code - ax_reg];\n-      break;\n-    case es_reg: case ss_reg: case cs_reg:\n-    case ds_reg: case fs_reg: case gs_reg:\n-      s = names_seg[code - es_reg];\n-      break;\n-    case al_reg: case ah_reg: case cl_reg: case ch_reg:\n-    case dl_reg: case dh_reg: case bl_reg: case bh_reg:\n-      USED_REX (0);\n-      if (rex)\n-\ts = names8rex[code - al_reg];\n-      else\n-\ts = names8[code - al_reg];\n+    case al_reg: case cl_reg:\n+      s = names8[code - al_reg];\n       break;\n-    case eAX_reg: case eCX_reg: case eDX_reg: case eBX_reg:\n-    case eSP_reg: case eBP_reg: case eSI_reg: case eDI_reg:\n+    case eAX_reg:\n       USED_REX (REX_W);\n       if (rex & REX_W)\n-\ts = names64[code - eAX_reg];\n-      else\n \t{\n-\t  if (sizeflag & DFLAG)\n-\t    s = names32[code - eAX_reg];\n-\t  else\n-\t    s = names16[code - eAX_reg];\n-\t  used_prefixes |= (prefixes & PREFIX_DATA);\n+\t  s = *names64;\n+\t  break;\n \t}\n-      break;\n+      /* Fall through.  */\n     case z_mode_ax_reg:\n       if ((rex & REX_W) || (sizeflag & DFLAG))\n \ts = *names32;"
    }
  ]
}