{
  "sha": "b02c4f162335ed055964f603ba3aca18b0e5c5bf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjAyYzRmMTYyMzM1ZWQwNTU5NjRmNjAzYmEzYWNhMThiMGU1YzViZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-06T05:53:28Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-06T06:07:08Z"
    },
    "message": "PR24873, gcc -flto objects result in --start-group .. --end-group failure to include --as-needed libraries\n\nReloading of archives (and checking --as-needed DSOs again) is\ndisabled until we hit the plugin insert point.  It's necessary to do\nthat because in a case like lib1.a lto.o lib2.a where lib1.a and\nlib2.a contain duplicate symbols, we want the lto.o recompiled object\nto pull in objects from lib2.a as necessary, but not from lib1.a.\nUnfortunately this heuristic fails when the insert point is inside a\ngroup, because ld actually loads the symbols from the recompiled\nobject before running over the contours of the script, thus missing\nthe fact that new undefs appeared in the group.\n\n\tPR 24873\n\t* ldlang.c (plugin_undefs): New static var.\n\t(open_input_bfds <lang_group_statement_enum>): Loop on\n\tplugin_undefs and hitting plugin_insert point.\n\t(lang_process <lto_plugin_active>): Set plugin_undefs.",
    "tree": {
      "sha": "880772752d9272e0f86edfa60489e4fa1648837e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/880772752d9272e0f86edfa60489e4fa1648837e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b02c4f162335ed055964f603ba3aca18b0e5c5bf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b02c4f162335ed055964f603ba3aca18b0e5c5bf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b02c4f162335ed055964f603ba3aca18b0e5c5bf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b02c4f162335ed055964f603ba3aca18b0e5c5bf/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b39152b3e5befec363302d5d81ade36ab45d6d08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b39152b3e5befec363302d5d81ade36ab45d6d08",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b39152b3e5befec363302d5d81ade36ab45d6d08"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 26,
    "deletions": 1
  },
  "files": [
    {
      "sha": "8f9d1f02516ebb8c5d4dedd4ea90b0ca772f9f15",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b02c4f162335ed055964f603ba3aca18b0e5c5bf/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b02c4f162335ed055964f603ba3aca18b0e5c5bf/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=b02c4f162335ed055964f603ba3aca18b0e5c5bf",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-06  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24873\n+\t* ldlang.c (plugin_undefs): New static var.\n+\t(open_input_bfds <lang_group_statement_enum>): Loop on\n+\tplugin_undefs and hitting plugin_insert point.\n+\t(lang_process <lto_plugin_active>): Set plugin_undefs.\n+\n 2019-08-02  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/tlsie.s: Correct medium model ELF sequence."
    },
    {
      "sha": "b88c8418102e6b3b7175570a05bb36467af72320",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b02c4f162335ed055964f603ba3aca18b0e5c5bf/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b02c4f162335ed055964f603ba3aca18b0e5c5bf/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=b02c4f162335ed055964f603ba3aca18b0e5c5bf",
      "patch": "@@ -3444,6 +3444,7 @@ enum open_bfd_mode\n   };\n #ifdef ENABLE_PLUGINS\n static lang_input_statement_type *plugin_insert = NULL;\n+static struct bfd_link_hash_entry *plugin_undefs = NULL;\n #endif\n \n static void\n@@ -3471,18 +3472,31 @@ open_input_bfds (lang_statement_union_type *s, enum open_bfd_mode mode)\n \tcase lang_group_statement_enum:\n \t  {\n \t    struct bfd_link_hash_entry *undefs;\n+#ifdef ENABLE_PLUGINS\n+\t    lang_input_statement_type *plugin_insert_save;\n+#endif\n \n \t    /* We must continually search the entries in the group\n \t       until no new symbols are added to the list of undefined\n \t       symbols.  */\n \n \t    do\n \t      {\n+#ifdef ENABLE_PLUGINS\n+\t\tplugin_insert_save = plugin_insert;\n+#endif\n \t\tundefs = link_info.hash->undefs_tail;\n \t\topen_input_bfds (s->group_statement.children.head,\n \t\t\t\t mode | OPEN_BFD_FORCE);\n \t      }\n-\t    while (undefs != link_info.hash->undefs_tail);\n+\t    while (undefs != link_info.hash->undefs_tail\n+#ifdef ENABLE_PLUGINS\n+\t\t   /* Objects inserted by a plugin, which are loaded\n+\t\t      before we hit this loop, may have added new\n+\t\t      undefs.  */\n+\t\t   || (plugin_insert != plugin_insert_save && plugin_undefs)\n+#endif\n+\t\t   );\n \t  }\n \t  break;\n \tcase lang_target_statement_enum:\n@@ -7420,7 +7434,10 @@ lang_process (void)\n \teinfo (_(\"%F%P: %s: plugin reported error after all symbols read\\n\"),\n \t       plugin_error_plugin ());\n       /* Open any newly added files, updating the file chains.  */\n+      plugin_undefs = link_info.hash->undefs_tail;\n       open_input_bfds (*added.tail, OPEN_BFD_NORMAL);\n+      if (plugin_undefs == link_info.hash->undefs_tail)\n+\tplugin_undefs = NULL;\n       /* Restore the global list pointer now they have all been added.  */\n       lang_list_remove_tail (stat_ptr, &added);\n       /* And detach the fresh ends of the file lists.  */"
    }
  ]
}