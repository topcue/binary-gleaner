{
  "sha": "0a0f4c0179106ee4b8e56649c549f4175ebba994",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGEwZjRjMDE3OTEwNmVlNGI4ZTU2NjQ5YzU0OWY0MTc1ZWJiYTk5NA==",
  "commit": {
    "author": {
      "name": "Jordan Rupprecht",
      "email": "rupprecht@google.com",
      "date": "2019-02-25T20:21:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-02-25T20:51:39Z"
    },
    "message": "Fix crash when loading dwp files\n\nWhen loading dwp files, we create an array of ELF sections indexed by the ELF\nsection index in the dwp file. The size of this array is calculated by\nsection_count, as returned by bfd_count_sections, plus 1 (to account for the\nnull section at index 0). However, when loading the bfd file, strtab/symtab\nsections are not added to the list, nor do they increment section_count, so\nsection_count is actually smaller than the number of ELF sections.\n\nThis happens to work when using GNU dwp, which lays out .debug section first,\nwith sections like .shstrtab coming at the end. Other tools, like llvm-dwp, put\n.strtab first, and gdb crashes when loading those dwp files.\n\nFor instance, with the current state of gdb, loading a file like this:\n$ readelf -SW <file.dwp>\n[ 0] <empty>\n[ 1] .debug_foo PROGBITS ...\n[ 2] .strtab    STRTAB ...\n\n... results in section_count = 2 (.debug is the only thing placed into\nbfd->sections, so section_count + 1 == 2), and sectp->this_idx = 1 when mapping\nover .debug_foo in dwarf2_locate_common_dwp_sections, which passes the\nassertion that 1 < 2.\n\nHowever, using a dwp file produced by llvm-dwp:\n$ readelf -SW <file.dwp>\n[ 0] <empty>\n[ 1] .strtab    STRTAB ...\n[ 2] .debug_foo PROGBITS ...\n\n... results in section_count = 2 (.debug is the only thing placed into\nbfd->sections, so section_count + 1 == 2), and sectp->this_idx = 2 when mapping\nover .debug_foo in dwarf2_locate_common_dwp_sections, which fails the assertion\nthat 2 < 2.\n\nThe assertion hit is:\n\ngdb/dwarf2read.c:13009: internal-error: void dwarf2_locate_common_dwp_sections(bfd*, asection*, void*): Assertion `elf_section_nr < dwp_file->num_sections' failed.\n\nThis patch changes the calculation of section_count to use elf_numsections,\nwhich should return the actual number of ELF sections.",
    "tree": {
      "sha": "2abb9f2013dd7d69b0f1c4c289fc9412d0718678",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2abb9f2013dd7d69b0f1c4c289fc9412d0718678"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0a0f4c0179106ee4b8e56649c549f4175ebba994",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a0f4c0179106ee4b8e56649c549f4175ebba994",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0a0f4c0179106ee4b8e56649c549f4175ebba994",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a0f4c0179106ee4b8e56649c549f4175ebba994/comments",
  "author": {
    "login": "rupprecht",
    "id": 663413,
    "node_id": "MDQ6VXNlcjY2MzQxMw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/663413?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rupprecht",
    "html_url": "https://github.com/rupprecht",
    "followers_url": "https://api.github.com/users/rupprecht/followers",
    "following_url": "https://api.github.com/users/rupprecht/following{/other_user}",
    "gists_url": "https://api.github.com/users/rupprecht/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rupprecht/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rupprecht/subscriptions",
    "organizations_url": "https://api.github.com/users/rupprecht/orgs",
    "repos_url": "https://api.github.com/users/rupprecht/repos",
    "events_url": "https://api.github.com/users/rupprecht/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rupprecht/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cd5a152cebb201e98f3dbeca510aa39e838a1f62",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd5a152cebb201e98f3dbeca510aa39e838a1f62",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd5a152cebb201e98f3dbeca510aa39e838a1f62"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "c2340e694c2f4a9b57b36e32840fe0ec6da83e6e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a0f4c0179106ee4b8e56649c549f4175ebba994/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a0f4c0179106ee4b8e56649c549f4175ebba994/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0a0f4c0179106ee4b8e56649c549f4175ebba994",
      "patch": "@@ -1,3 +1,9 @@\n+2019-02-25  Jordan Rupprecht  <rupprecht@google.com>\n+\n+\t* dwarf2read.c (open_and_init_dwp_file): Call\n+\telf_numsections instead of bfd_count_sections to initialize\n+\tdwp_file->num_sections.\n+\n 2019-02-25  Tom Tromey  <tromey@adacore.com>\n \n \t* solib-darwin.c (darwin_get_dyld_bfd): Don't release dyld_bfd."
    },
    {
      "sha": "2908a233fe49626ea96c69bd3cc5f405a4e3252a",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0a0f4c0179106ee4b8e56649c549f4175ebba994/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0a0f4c0179106ee4b8e56649c549f4175ebba994/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=0a0f4c0179106ee4b8e56649c549f4175ebba994",
      "patch": "@@ -13230,8 +13230,7 @@ open_and_init_dwp_file (struct dwarf2_per_objfile *dwarf2_per_objfile)\n   std::unique_ptr<struct dwp_file> dwp_file\n     (new struct dwp_file (name, std::move (dbfd)));\n \n-  /* +1: section 0 is unused */\n-  dwp_file->num_sections = bfd_count_sections (dwp_file->dbfd) + 1;\n+  dwp_file->num_sections = elf_numsections (dwp_file->dbfd);\n   dwp_file->elf_sections =\n     OBSTACK_CALLOC (&objfile->objfile_obstack,\n \t\t    dwp_file->num_sections, asection *);"
    }
  ]
}