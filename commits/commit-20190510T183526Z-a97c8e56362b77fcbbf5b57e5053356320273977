{
  "sha": "a97c8e56362b77fcbbf5b57e5053356320273977",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTk3YzhlNTYzNjJiNzdmY2JiZjViNTdlNTA1MzM1NjMyMDI3Mzk3Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-10T14:19:04Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-10T18:35:26Z"
    },
    "message": "Document lazy computation for pretty-printer \"children\" method\n\nI found out recently that some users didn't know that the Python\npretty-printers \"children\" method should compute its result lazily.\nThis has been a good idea since the earliest days, but wasn't\nmentioned in the docs.  This patch adds some text to this effect.\n\ngdb/doc/ChangeLog\n2019-05-10  Tom Tromey  <tromey@adacore.com>\n\n\t* python.texi (Pretty Printing API): Mention lazy computation for\n\t\"children\".",
    "tree": {
      "sha": "90ac6fa026ac06e1dfb141d45d87dcc6f81b7a26",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/90ac6fa026ac06e1dfb141d45d87dcc6f81b7a26"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a97c8e56362b77fcbbf5b57e5053356320273977",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a97c8e56362b77fcbbf5b57e5053356320273977",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a97c8e56362b77fcbbf5b57e5053356320273977",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a97c8e56362b77fcbbf5b57e5053356320273977/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "71bed2dba6c0706633ead4994cc89e063abf28ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71bed2dba6c0706633ead4994cc89e063abf28ea",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/71bed2dba6c0706633ead4994cc89e063abf28ea"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 11,
    "deletions": 0
  },
  "files": [
    {
      "sha": "fe7f33ba7bfda5b161cf94e42d0b1c111b42b729",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a97c8e56362b77fcbbf5b57e5053356320273977/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a97c8e56362b77fcbbf5b57e5053356320273977/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=a97c8e56362b77fcbbf5b57e5053356320273977",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* python.texi (Pretty Printing API): Mention lazy computation for\n+\t\"children\".\n+\n 2019-05-10  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.texinfo (Set Catchpoints): Add text for parameter to \"catch"
    },
    {
      "sha": "98e52bb770ca8f0e94b7e592720a6957458e98e6",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a97c8e56362b77fcbbf5b57e5053356320273977/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a97c8e56362b77fcbbf5b57e5053356320273977/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=a97c8e56362b77fcbbf5b57e5053356320273977",
      "patch": "@@ -1371,6 +1371,12 @@ object which is convertible to a @value{GDBN} value.\n This method is optional.  If it does not exist, @value{GDBN} will act\n as though the value has no children.\n \n+For efficiency, the @code{children} method should lazily compute its\n+results.  This will let @value{GDBN} read as few elements as\n+necessary, for example when various print settings (@pxref{Print\n+Settings}) or @code{-var-list-children} (@pxref{GDB/MI Variable\n+Objects}) limit the number of elements to be displayed.\n+\n Children may be hidden from display based on the value of @samp{set\n print max-depth} (@pxref{Print Settings}).\n @end defun"
    }
  ]
}