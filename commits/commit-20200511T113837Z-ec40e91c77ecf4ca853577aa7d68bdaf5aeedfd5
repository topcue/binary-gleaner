{
  "sha": "ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWM0MGU5MWM3N2VjZjRjYTg1MzU3N2FhN2Q2OGJkYWY1YWVlZGZkNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-11T00:14:25Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-11T11:38:37Z"
    },
    "message": "Power10 bit manipulation operations\n\nopcodes/\n\t* ppc-opc.c (UIM8, P_U8XX4_MASK): Define.\n\t(powerpc_opcodes): Add vgnb, vcfuged, vpextd, vpdepd, vclzdm,\n\tvctzdm, cntlzdm, pdepd, pextd, cfuged, cnttzdm.\n\t(prefix_opcodes): Add xxeval.\ngas/\n\t* testsuite/gas/ppc/bitmanip.d,\n\t* testsuite/gas/ppc/bitmanip.s: New test.\n\t* testsuite/gas/ppc/ppc.exp: Run it.",
    "tree": {
      "sha": "409ce291d9c53459928d58cebfaceb0f926b3132",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/409ce291d9c53459928d58cebfaceb0f926b3132"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d7e97a765ef0b9da6cdddd907ebe9f56a71716ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7e97a765ef0b9da6cdddd907ebe9f56a71716ba",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d7e97a765ef0b9da6cdddd907ebe9f56a71716ba"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 71,
    "deletions": 1
  },
  "files": [
    {
      "sha": "11a20f5a068feb2073d75209a29b2f42b9075bd5",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/gas/ppc/bitmanip.d,\n+\t* testsuite/gas/ppc/bitmanip.s: New test.\n+\t* testsuite/gas/ppc/ppc.exp: Run it.\n+\n 2020-05-11  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/gas/ppc/genpcv.d,"
    },
    {
      "sha": "27f4a0cfa6683a5bcee8d51ca6d6c2820fb31afa",
      "filename": "gas/testsuite/gas/ppc/bitmanip.d",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/testsuite/gas/ppc/bitmanip.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/testsuite/gas/ppc/bitmanip.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/bitmanip.d?ref=ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
      "patch": "@@ -0,0 +1,23 @@\n+#as: -mpower10\n+#objdump: -dr -Mpower10\n+#name: bit manipulation\n+\n+.*\n+\n+\n+Disassembly of section \\.text:\n+\n+0+0 <_start>:\n+.*:\t(7f df e9 b8|b8 e9 df 7f) \tcfuged  r31,r30,r29\n+.*:\t(7f 7c d0 76|76 d0 7c 7f) \tcntlzdm r28,r27,r26\n+.*:\t(7f 19 bc 76|76 bc 19 7f) \tcnttzdm r25,r24,r23\n+.*:\t(7e b6 a1 38|38 a1 b6 7e) \tpdepd   r22,r21,r20\n+.*:\t(7e 53 89 78|78 89 53 7e) \tpextd   r19,r18,r17\n+.*:\t(12 0f 77 84|84 77 0f 12) \tvclzdm  v16,v15,v14\n+.*:\t(11 ac 5f c4|c4 5f ac 11) \tvctzdm  v13,v12,v11\n+.*:\t(11 49 45 cd|cd 45 49 11) \tvpdepd  v10,v9,v8\n+.*:\t(10 e6 2d 8d|8d 2d e6 10) \tvpextd  v7,v6,v5\n+.*:\t(10 83 15 4d|4d 15 83 10) \tvcfuged v4,v3,v2\n+.*:\t(10 27 04 cc|cc 04 27 10) \tvgnb    r1,v0,7\n+.*:\t(05 00 00 3f|3f 00 00 05) \txxeval  vs63,vs31,vs62,vs30,63\n+.*:\t(8b ff f7 93|93 f7 ff 8b) "
    },
    {
      "sha": "d4d5774df19770c2f3b3dc845ea118478e4ab7cd",
      "filename": "gas/testsuite/gas/ppc/bitmanip.s",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/testsuite/gas/ppc/bitmanip.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/testsuite/gas/ppc/bitmanip.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/bitmanip.s?ref=ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
      "patch": "@@ -0,0 +1,14 @@\n+\t.text\n+_start:\n+\tcfuged\t31,30,29\n+\tcntlzdm\t28,27,26\n+\tcnttzdm 25,24,23\n+\tpdepd\t22,21,20\n+\tpextd\t19,18,17\n+\tvclzdm\t16,15,14\n+\tvctzdm\t13,12,11\n+\tvpdepd\t10,9,8\n+\tvpextd\t7,6,5\n+\tvcfuged 4,3,2\n+\tvgnb\t1,0,7\n+\txxeval\t63,31,62,30,0x3f"
    },
    {
      "sha": "0e53a4caa335b05f442d402a8d25103292416b93",
      "filename": "gas/testsuite/gas/ppc/ppc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/testsuite/gas/ppc/ppc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/gas/testsuite/gas/ppc/ppc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/ppc.exp?ref=ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
      "patch": "@@ -140,3 +140,4 @@ run_dump_test \"simd_perm\"\n run_dump_test \"outerprod\"\n run_dump_test \"maskmanip\"\n run_dump_test \"genpcv\"\n+run_dump_test \"bitmanip\""
    },
    {
      "sha": "c53e18f7b7d66ef2573f076e42d03ee366db3585",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (UIM8, P_U8XX4_MASK): Define.\n+\t(powerpc_opcodes): Add vgnb, vcfuged, vpextd, vpdepd, vclzdm,\n+\tvctzdm, cntlzdm, pdepd, pextd, cfuged, cnttzdm.\n+\t(prefix_opcodes): Add xxeval.\n+\n 2020-05-11  Alan Modra  <amodra@gmail.com>\n \n \t* ppc-opc.c (powerpc_opcodes): Add xxgenpcvbm, xxgenpcvhm,"
    },
    {
      "sha": "b8c841cc14da547f2c61d295b9a829ed525a174a",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 20,
      "deletions": 1,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=ec40e91c77ecf4ca853577aa7d68bdaf5aeedfd5",
      "patch": "@@ -2306,8 +2306,12 @@ const struct powerpc_operand powerpc_operands[] =\n #define UIM3 IMM32 + 1\n   { 0x7, 32, NULL, NULL, 0},\n \n+  /* The UIM field in a vector eval prefix instruction.  */\n+#define UIM8 UIM3 + 1\n+  { 0xff, 32, NULL, NULL, 0},\n+\n   /* The IX field in xxsplti32dx.  */\n-#define IX UIM3 + 1\n+#define IX UIM8 + 1\n   { 0x1, 17, NULL, NULL, 0 },\n \n   /* The PMSK field in GER rank 8 prefix instructions.  */\n@@ -3107,6 +3111,7 @@ const unsigned int num_powerpc_operands = (sizeof (powerpc_operands)\n /* Mask for prefix vector permute insns.  */\n #define P_XX4_MASK (PREFIX_MASK | XX4_MASK)\n #define P_UXX4_MASK (P_XX4_MASK & ~(7ULL << 32))\n+#define P_U8XX4_MASK (P_XX4_MASK & ~(0xffULL << 32))\n \n /* MMIRR:XX3-form 8-byte outer product instructions.  */\n #define P_GER_MASK ((-1ULL << 40) | XX3_MASK | (3 << 21) | 1)\n@@ -4738,6 +4743,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evaddsmiaaw\",\tVX (4,1225),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"evsubfumiaaw\",VX (4,1226),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n {\"evsubfsmiaaw\",VX (4,1227),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA}},\n+{\"vgnb\",\tVX (4,1228),\tVX_MASK,     POWER10,\t0,\t\t{RT, VB, UIMM3}},\n {\"vpkudus\",\tVX (4,1230),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"machhwso\",\tXO (4, 108,1,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"machhwso.\",\tXO (4, 108,1,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4796,6 +4802,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evmwlsmfaaw\",\tVX (4,1355),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n {\"evmwhumiaa\",\tVX (4,1356),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n {\"vbpermq\",\tVX (4,1356),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vcfuged\",\tVX (4,1357),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evmwhsmiaa\",\tVX (4,1357),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n {\"vpksdus\",\tVX (4,1358),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"evmwhsmfaa\",\tVX (4,1359),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n@@ -4834,6 +4841,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evmhesmianw\",\tVX (4,1417),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"evmhesmfanw\",\tVX (4,1419),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"evmhoumianw\",\tVX (4,1420),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n+{\"vpextd\",\tVX (4,1421),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evmhosmianw\",\tVX (4,1421),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"evmhosmfanw\",\tVX (4,1423),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"macchwsuo\",\tXO (4, 204,1,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4862,6 +4870,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evmwlsmfanw\",\tVX (4,1483),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n {\"evmwhumian\",\tVX (4,1484),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n {\"vbpermd\",\tVX (4,1484),\tVX_MASK,     PPCVEC3,\t0,\t\t{VD, VA, VB}},\n+{\"vpdepd\",\tVX (4,1485),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evmwhsmian\",\tVX (4,1485),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n {\"vpksdss\",\tVX (4,1486),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"evmwhsmfan\",\tVX (4,1487),\tVX_MASK,     PPCSPE,\t0,\t\t{RD, RA, RB}},\n@@ -4977,6 +4986,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vsubsws\",\tVX (4,1920),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vclzw\",\tVX (4,1922),\tVXVA_MASK,   PPCVEC2,\t0,\t\t{VD, VB}},\n {\"vpopcntw\",\tVX (4,1923),\tVXVA_MASK,   PPCVEC2,\t0,\t\t{VD, VB}},\n+{\"vclzdm\",\tVX (4,1924),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgtsw.\",\tVXR(4, 902,1),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"udi14fcm.\",\tAPU(4, 963,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vcmpgtsq.\",\tVXR(4, 903,1),\tVXR_MASK,    POWER10,\t0,\t\t{VD, VA, VB}},\n@@ -4989,6 +4999,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"maclhwsuo.\",\tXO (4, 460,1,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"vclzd\",\tVX (4,1986),\tVXVA_MASK,   PPCVEC2,\t0,\t\t{VD, VB}},\n {\"vpopcntd\",\tVX (4,1987),\tVXVA_MASK,   PPCVEC2,\t0,\t\t{VD, VB}},\n+{\"vctzdm\",\tVX (4,1988),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vcmpbfp.\",\tVXR(4, 966,1),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"udi15fcm.\",\tAPU(4, 995,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vcmpgtsd.\",\tVXR(4, 967,1),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n@@ -6102,6 +6113,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"cntlzd\",\tXRC(31,58,0),\tXRB_MASK,    PPC64,\t0,\t\t{RA, RS}},\n {\"cntlzd.\",\tXRC(31,58,1),\tXRB_MASK,    PPC64,\t0,\t\t{RA, RS}},\n \n+{\"cntlzdm\",\tX(31,59),\tX_MASK,\t     POWER10,\t0,\t\t{RA, RS, RB}},\n+\n {\"andc\",\tXRC(31,60,0),\tX_MASK,\t     COM,\t0,\t\t{RA, RS, RB}},\n {\"andc.\",\tXRC(31,60,1),\tX_MASK,\t     COM,\t0,\t\t{RA, RS, RB}},\n \n@@ -6236,6 +6249,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"prtyw\",\tX(31,154),    XRB_MASK, POWER6|PPCA2|PPC476, 0,\t\t{RA, RS}},\n \n {\"brw\",\t\tX(31,155),\tXRB_MASK,    POWER10,\t0,\t\t{RA, RS}},\n+{\"pdepd\",\tX(31,156),\tX_MASK,\t     POWER10,\t0,\t\t{RA, RS, RB}},\n \n {\"stdepx\",\tX(31,157),\tX_MASK,\t  E500MC|PPCA2, 0,\t\t{RS, RA0, RB}},\n \n@@ -6278,6 +6292,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"prtyd\",\tX(31,186),\tXRB_MASK, POWER6|PPCA2,\t0,\t\t{RA, RS}},\n \n {\"brd\",\t\tX(31,187),\tXRB_MASK,    POWER10,\t0,\t\t{RA, RS}},\n+{\"pextd\",\tX(31,188),\tX_MASK,\t     POWER10,\t0,\t\t{RA, RS, RB}},\n \n {\"cmprb\",\tX(31,192),\tXCMP_MASK,   POWER9,\t0,\t\t{BF, L, RA, RB}},\n \n@@ -6318,6 +6333,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"sleq.\",\tXRC(31,217,1),\tX_MASK,\t     M601,\t0,\t\t{RA, RS, RB}},\n \n {\"brh\",\t\tX(31,219),\tXRB_MASK,    POWER10,\t0,\t\t{RA, RS}},\n+{\"cfuged\",\tX(31,220),\tX_MASK,\t     POWER10,\t0,\t\t{RA, RS, RB}},\n \n {\"stbepx\",\tX(31,223),\tX_MASK,\t  E500MC|PPCA2, 0,\t\t{RS, RA0, RB}},\n \n@@ -7170,6 +7186,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"cnttzd\",\tXRC(31,570,0),\tXRB_MASK,    POWER9,\t0,\t\t{RA, RS}},\n {\"cnttzd.\",\tXRC(31,570,1),\tXRB_MASK,    POWER9,\t0,\t\t{RA, RS}},\n \n+{\"cnttzdm\",\tX(31,571),\tX_MASK,\t     POWER10,\t0,\t\t{RA, RS, RB}},\n+\n {\"mcrxrx\",\tX(31,576),     XBFRARB_MASK, POWER9,\t0,\t\t{BF}},\n \n {\"lwdcbx\",\tX(31,578),\tX_MASK,      E200Z4,\t0,\t\t{RT, RA, RB}},\n@@ -8408,6 +8426,7 @@ const struct powerpc_opcode prefix_opcodes[] = {\n {\"xxblendvw\",\t  P8RR|XX4(33,2),      P_XX4_MASK,\tPOWER10, 0,\t{XT6, XA6, XB6, XC6}},\n {\"xxblendvd\",\t  P8RR|XX4(33,3),      P_XX4_MASK,\tPOWER10, 0,\t{XT6, XA6, XB6, XC6}},\n {\"xxpermx\",\t  P8RR|XX4(34,0),      P_UXX4_MASK,\tPOWER10, 0,\t{XT6, XA6, XB6, XC6, UIM3}},\n+{\"xxeval\",\t  P8RR|XX4(34,1),      P_U8XX4_MASK,\tPOWER10, 0,\t{XT6, XA6, XB6, XC6, UIM8}},\n {\"plbz\",\t  PMLS|OP(34),\t       P_D_MASK,\tPOWER10, 0,\t{RT, D34, PRA0, PCREL}},\n {\"pstw\",\t  PMLS|OP(36),\t       P_D_MASK,\tPOWER10, 0,\t{RS, D34, PRA0, PCREL}},\n {\"pstb\",\t  PMLS|OP(38),\t       P_D_MASK,\tPOWER10, 0,\t{RS, D34, PRA0, PCREL}},"
    }
  ]
}