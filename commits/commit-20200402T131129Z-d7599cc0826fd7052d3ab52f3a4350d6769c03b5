{
  "sha": "d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDc1OTljYzA4MjZmZDcwNTJkM2FiNTJmM2E0MzUwZDY3NjljMDNiNQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:29Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:29Z"
    },
    "message": "gdbserver/linux-low: turn 'prepare_to_resume' into a method\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn the 'prepare_to_resume' linux target op into a method of\n\tlinux_process_target.\n\n\t* linux-low.h (struct linux_target_ops): Remove the op.\n\t(class linux_process_target) <low_prepare_to_resume>: Declare.\n\t* linux-low.cc (linux_process_target::low_prepare_to_resume):\n\tDefine.\n\n\tUpdate the callers below:\n\n\t(linux_process_target::resume_one_lwp_throw)\n\t(linux_process_target::low_prepare_to_resume)\n\n\t* linux-x86-low.cc (class x86_target) <low_prepare_to_resume>:\n\tDeclare.\n\t(x86_target::low_prepare_to_resume): Define.\n\t(the_low_target): Remove the op field.\n\t* linux-aarch64-low.cc (class aarch64_target)\n\t<low_prepare_to_resume>: Declare.\n\t(aarch64_target::low_prepare_to_resume): Define.\n\t(the_low_target): Remove the op field.\n\t* linux-arm-low.cc (class arm_target) <low_prepare_to_resume>:\n\tDeclare.\n\t(arm_prepare_to_resume): Turn into...\n\t(arm_target::low_prepare_to_resume): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-mips-low.cc (class mips_target) <low_prepare_to_resume>:\n\tDeclare.\n\t(mips_linux_prepare_to_resume): Turn into...\n\t(mips_target::low_prepare_to_resume): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-bfin-low.cc (the_low_target): Remove the op field.\n\t* linux-crisv32-low.cc (the_low_target): Ditto.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-ppc-low.cc (the_low_target): Ditto.\n\t* linux-s390-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.",
    "tree": {
      "sha": "70dad53e121c98034f4eedbc22c0800f5e532386",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/70dad53e121c98034f4eedbc22c0800f5e532386"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fd000fb3dfd9c93e332246bf89b700ab9aac7339",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd000fb3dfd9c93e332246bf89b700ab9aac7339",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fd000fb3dfd9c93e332246bf89b700ab9aac7339"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 82,
    "deletions": 27
  },
  "files": [
    {
      "sha": "8c5ca79f1551da7399e50b1a8f44efa9bab4a9a2",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -1,3 +1,47 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn the 'prepare_to_resume' linux target op into a method of\n+\tlinux_process_target.\n+\n+\t* linux-low.h (struct linux_target_ops): Remove the op.\n+\t(class linux_process_target) <low_prepare_to_resume>: Declare.\n+\t* linux-low.cc (linux_process_target::low_prepare_to_resume):\n+\tDefine.\n+\n+\tUpdate the callers below:\n+\n+\t(linux_process_target::resume_one_lwp_throw)\n+\t(linux_process_target::low_prepare_to_resume)\n+\n+\t* linux-x86-low.cc (class x86_target) <low_prepare_to_resume>:\n+\tDeclare.\n+\t(x86_target::low_prepare_to_resume): Define.\n+\t(the_low_target): Remove the op field.\n+\t* linux-aarch64-low.cc (class aarch64_target)\n+\t<low_prepare_to_resume>: Declare.\n+\t(aarch64_target::low_prepare_to_resume): Define.\n+\t(the_low_target): Remove the op field.\n+\t* linux-arm-low.cc (class arm_target) <low_prepare_to_resume>:\n+\tDeclare.\n+\t(arm_prepare_to_resume): Turn into...\n+\t(arm_target::low_prepare_to_resume): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-mips-low.cc (class mips_target) <low_prepare_to_resume>:\n+\tDeclare.\n+\t(mips_linux_prepare_to_resume): Turn into...\n+\t(mips_target::low_prepare_to_resume): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-bfin-low.cc (the_low_target): Remove the op field.\n+\t* linux-crisv32-low.cc (the_low_target): Ditto.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-ppc-low.cc (the_low_target): Ditto.\n+\t* linux-s390-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn the 'new_process', 'delete_process', 'new_thread',"
    },
    {
      "sha": "a99b97929cf7d1f9d02f79791f2b0a3fa6cf0bf4",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -103,6 +103,8 @@ class aarch64_target : public linux_process_target\n   void low_delete_thread (arch_lwp_info *) override;\n \n   void low_new_fork (process_info *parent, process_info *child) override;\n+\n+  void low_prepare_to_resume (lwp_info *lwp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -123,6 +125,12 @@ aarch64_target::low_cannot_store_register (int regno)\n \t\t\t  \"is not implemented by the target\");\n }\n \n+void\n+aarch64_target::low_prepare_to_resume (lwp_info *lwp)\n+{\n+  aarch64_linux_prepare_to_resume (lwp);\n+}\n+\n /* Per-process arch-specific data we want to keep.  */\n \n struct arch_process_info\n@@ -3139,7 +3147,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_linux_prepare_to_resume,\n   NULL, /* process_qsupported */\n   aarch64_supports_tracepoints,\n   aarch64_get_thread_area,"
    },
    {
      "sha": "f6429f0475c420dde8a166efd1cf906cde58f711",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -109,6 +109,8 @@ class arm_target : public linux_process_target\n   void low_delete_thread (arch_lwp_info *) override;\n \n   void low_new_fork (process_info *parent, process_info *child) override;\n+\n+  void low_prepare_to_resume (lwp_info *lwp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -813,8 +815,8 @@ arm_target::low_new_fork (process_info *parent, process_info *child)\n \n /* Called when resuming a thread.\n    If the debug regs have changed, update the thread's copies.  */\n-static void\n-arm_prepare_to_resume (struct lwp_info *lwp)\n+void\n+arm_target::low_prepare_to_resume (lwp_info *lwp)\n {\n   struct thread_info *thread = get_lwp_thread (lwp);\n   int pid = lwpid_of (thread);\n@@ -1115,7 +1117,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  arm_prepare_to_resume,\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "3e3f39a1ba5822fec8b26cec15615d57bde7e436",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -171,7 +171,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "d262fae9a950fb73fd9d94ee6223937eaa7cad82",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -468,7 +468,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "3105db6d01225063543b3e9985da1b37f5b9ca5d",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -1530,8 +1530,7 @@ linux_process_target::detach_one_lwp (lwp_info *lwp)\n       regcache_invalidate_thread (thread);\n \n       /* Finally, let it resume.  */\n-      if (the_low_target.prepare_to_resume != NULL)\n-\tthe_low_target.prepare_to_resume (lwp);\n+      low_prepare_to_resume (lwp);\n     }\n   catch (const gdb_exception_error &ex)\n     {\n@@ -4322,8 +4321,7 @@ linux_process_target::resume_one_lwp_throw (lwp_info *lwp, int step,\n \t\t  lwpid_of (thread), step ? \"step\" : \"continue\", signal,\n \t\t  lwp->stop_expected ? \"expected\" : \"not expected\");\n \n-  if (the_low_target.prepare_to_resume != NULL)\n-    the_low_target.prepare_to_resume (lwp);\n+  low_prepare_to_resume (lwp);\n \n   regcache_invalidate_thread (thread);\n   errno = 0;\n@@ -4355,6 +4353,12 @@ linux_process_target::resume_one_lwp_throw (lwp_info *lwp, int step,\n   lwp->stop_reason = TARGET_STOPPED_BY_NO_REASON;\n }\n \n+void\n+linux_process_target::low_prepare_to_resume (lwp_info *lwp)\n+{\n+  /* Nop.  */\n+}\n+\n /* Called when we try to resume a stopped LWP and that errors out.  If\n    the LWP is no longer in ptrace-stopped state (meaning it's zombie,\n    or about to become), discard the error, clear any pending status"
    },
    {
      "sha": "49fbc5edcec85c34a2f505fcba2c559131a7b61d",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -131,9 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Hook to call prior to resuming a thread.  */\n-  void (*prepare_to_resume) (struct lwp_info *);\n-\n   /* Hook to support target specific qSupported.  */\n   void (*process_qsupported) (char **, int count);\n \n@@ -720,6 +717,9 @@ class linux_process_target : public process_stratum_target\n   /* Hook to call, if any, when a new fork is attached.  */\n   virtual void low_new_fork (process_info *parent, process_info *child);\n \n+  /* Hook to call prior to resuming a thread.  */\n+  virtual void low_prepare_to_resume (lwp_info *lwp);\n+\n   /* How many bytes the PC should be decremented after a break.  */\n   virtual int low_decr_pc_after_break ();\n };"
    },
    {
      "sha": "bae0f25e1830872d4f53584d9984a80548495e3f",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -161,7 +161,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "cfb0a0ac2bfffa077deda660d6634d6669135f93",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -265,7 +265,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "6c3bc1cc5fb997a23ad6f37b0ceaa4d121a834b5",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -80,6 +80,8 @@ class mips_target : public linux_process_target\n   void low_delete_thread (arch_lwp_info *) override;\n \n   void low_new_fork (process_info *parent, process_info *child) override;\n+\n+  void low_prepare_to_resume (lwp_info *lwp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -491,12 +493,12 @@ mips_target::low_new_fork (process_info *parent,\n \n   child_private->watch_mirror = parent_private->watch_mirror;\n }\n-/* This is the implementation of linux_target_ops method\n-   prepare_to_resume.  If the watch regs have changed, update the\n+/* This is the implementation of linux target ops method\n+   low_prepare_to_resume.  If the watch regs have changed, update the\n    thread's copies.  */\n \n-static void\n-mips_linux_prepare_to_resume (struct lwp_info *lwp)\n+void\n+mips_target::low_prepare_to_resume (lwp_info *lwp)\n {\n   ptid_t ptid = ptid_of (get_lwp_thread (lwp));\n   struct process_info *proc = find_process_pid (ptid.pid ());\n@@ -996,7 +998,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  mips_linux_prepare_to_resume\n };\n \n /* The linux target ops object.  */"
    },
    {
      "sha": "22fda3306f29e755ab1b64a43b17d0b592f069fc",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -3428,7 +3428,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   ppc_supports_tracepoints,\n   ppc_get_thread_area,"
    },
    {
      "sha": "e46375f59c4f7d408f132d187f5b6e4fce339a28",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -2845,7 +2845,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   s390_supports_tracepoints,\n   s390_get_thread_area,"
    },
    {
      "sha": "d2d0f0b0958a634c9246852702c3fa2e0584b4e0",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -192,7 +192,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "ddb84e7517ed708dae724b34a5b8824ee15a3407",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -423,7 +423,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "5268f40ccf13d64a2bc3e61f4914a7abddf50393",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -224,7 +224,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    },
    {
      "sha": "f9459dc18cb31e19b6de581d22fe74a7cfbb032f",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -155,6 +155,8 @@ class x86_target : public linux_process_target\n   void low_delete_thread (arch_lwp_info *) override;\n \n   void low_new_fork (process_info *parent, process_info *child) override;\n+\n+  void low_prepare_to_resume (lwp_info *lwp) override;\n };\n \n /* The singleton target ops object.  */\n@@ -763,6 +765,13 @@ x86_target::low_new_fork (process_info *parent, process_info *child)\n   *child->priv->arch_private = *parent->priv->arch_private;\n }\n \n+void\n+x86_target::low_prepare_to_resume (lwp_info *lwp)\n+{\n+  /* This comes from nat/.  */\n+  x86_linux_prepare_to_resume (lwp);\n+}\n+\n /* See nat/x86-dregs.h.  */\n \n struct x86_debug_reg_state *\n@@ -2954,7 +2963,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  x86_linux_prepare_to_resume,\n   x86_linux_process_qsupported,\n   x86_supports_tracepoints,\n   x86_get_thread_area,"
    },
    {
      "sha": "a58a74b98d5d53907570d5369ea1c31f7a0bfcc5",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7599cc0826fd7052d3ab52f3a4350d6769c03b5/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=d7599cc0826fd7052d3ab52f3a4350d6769c03b5",
      "patch": "@@ -329,7 +329,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* prepare_to_resume */\n   NULL, /* process_qsupported */\n   NULL, /* supports_tracepoints */\n   NULL, /* get_thread_area */"
    }
  ]
}