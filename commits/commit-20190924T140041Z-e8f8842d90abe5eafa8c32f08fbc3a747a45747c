{
  "sha": "e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZThmODg0MmQ5MGFiZTVlYWZhOGMzMmYwOGZiYzNhNzQ3YTQ1NzQ3Yw==",
  "commit": {
    "author": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-09-24T13:46:17Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2019-09-24T14:00:41Z"
    },
    "message": "Arm: Fix out of range conditional branch (PR/24991)\n\nThe fix for PR12848 introduced an off by one error in the mask, this corrected\nthe negative overflows but not the positive overflows.  As a result the\nconditional branch instructions accepted a too wide positive immediate which\nresulted in it corrupting the instruction during encoding.\n\nThe relocation I believe has been incorrectly named, to be consistent with the\nother relocations it should have been named BRANCH21 which is why the masks for\nit are confusing.\n\nI've replaced the masks with a function out_of_range_p which should make it\nharder to make such mistakes.\n\nThe mask for BL/BLX on Armv6t+ is also wrong, the extended range is 25-bits\nand so the mask should be checking for 24-bits for positive overflow.\n\ngas/ChangeLog:\n\n\tPR gas/24991\n\t* config/tc-arm.c (out_of_range_p): New.\n\t(md_apply_fix): Use it in BFD_RELOC_THUMB_PCREL_BRANCH9,\n\tBFD_RELOC_THUMB_PCREL_BRANCH12, BFD_RELOC_THUMB_PCREL_BRANCH20,\n\tBFD_RELOC_THUMB_PCREL_BRANCH23, BFD_RELOC_THUMB_PCREL_BRANCH25\n\t* testsuite/gas/arm/pr24991.d: New test.\n\t* testsuite/gas/arm/pr24991.l: New test.\n\t* testsuite/gas/arm/pr24991.s: New test.",
    "tree": {
      "sha": "880995ce4582f8054790b4b962f9b7a0b705bda6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/880995ce4582f8054790b4b962f9b7a0b705bda6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/comments",
  "author": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 38,
    "deletions": 7
  },
  "files": [
    {
      "sha": "41fc4cefd8a5ff93e2afb005cc25eb270244e03f",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
      "patch": "@@ -1,3 +1,14 @@\n+2019-09-24  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR gas/24991\n+\t* config/tc-arm.c (out_of_range_p): New.\n+\t(md_apply_fix): Use it in BFD_RELOC_THUMB_PCREL_BRANCH9,\n+\tBFD_RELOC_THUMB_PCREL_BRANCH12, BFD_RELOC_THUMB_PCREL_BRANCH20,\n+\tBFD_RELOC_THUMB_PCREL_BRANCH23, BFD_RELOC_THUMB_PCREL_BRANCH25\n+\t* testsuite/gas/arm/pr24991.d: New test.\n+\t* testsuite/gas/arm/pr24991.l: New test.\n+\t* testsuite/gas/arm/pr24991.s: New test.\n+\n 2019-09-23  Alan Modra  <amodra@gmail.com>\n \n \t* config/obj-ecoff.c: Include ecoff-bfd.h."
    },
    {
      "sha": "1f462307ed9129d8aca8a4bd371965c4b2f0c0ca",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 16,
      "deletions": 7,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
      "patch": "@@ -107,6 +107,15 @@ enum arm_float_abi\n    should define CPU_DEFAULT here.  */\n #endif\n \n+/* Perform range checks on positive and negative overflows by checking if the\n+   VALUE given fits within the range of an BITS sized immediate.  */\n+static bfd_boolean out_of_range_p (offsetT value, offsetT bits)\n+ {\n+  gas_assert (bits < (offsetT)(sizeof (value) * 8));\n+  return (value & ~((1 << bits)-1))\n+\t  && ((value & ~((1 << bits)-1)) != ~((1 << bits)-1));\n+}\n+\n #ifndef FPU_DEFAULT\n # ifdef TE_LINUX\n #  define FPU_DEFAULT FPU_ARCH_FPA\n@@ -28089,7 +28098,7 @@ md_apply_fix (fixS *\tfixP,\n       break;\n \n     case BFD_RELOC_THUMB_PCREL_BRANCH9: /* Conditional branch.\t*/\n-      if ((value & ~0xff) && ((value & ~0xff) != ~0xff))\n+      if (out_of_range_p (value, 8))\n \tas_bad_where (fixP->fx_file, fixP->fx_line, BAD_RANGE);\n \n       if (fixP->fx_done || !seg->use_rela_p)\n@@ -28101,7 +28110,7 @@ md_apply_fix (fixS *\tfixP,\n       break;\n \n     case BFD_RELOC_THUMB_PCREL_BRANCH12: /* Unconditional branch.  */\n-      if ((value & ~0x7ff) && ((value & ~0x7ff) != ~0x7ff))\n+      if (out_of_range_p (value, 11))\n \tas_bad_where (fixP->fx_file, fixP->fx_line, BAD_RANGE);\n \n       if (fixP->fx_done || !seg->use_rela_p)\n@@ -28112,6 +28121,7 @@ md_apply_fix (fixS *\tfixP,\n \t}\n       break;\n \n+    /* This relocation is misnamed, it should be BRANCH21.  */\n     case BFD_RELOC_THUMB_PCREL_BRANCH20:\n       if (fixP->fx_addsy\n \t  && (S_GET_SEGMENT (fixP->fx_addsy) == seg)\n@@ -28122,7 +28132,7 @@ md_apply_fix (fixS *\tfixP,\n \t  /* Force a relocation for a branch 20 bits wide.  */\n \t  fixP->fx_done = 0;\n \t}\n-      if ((value & ~0x1fffff) && ((value & ~0x0fffff) != ~0x0fffff))\n+      if (out_of_range_p (value, 20))\n \tas_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t      _(\"conditional branch out of range\"));\n \n@@ -28201,12 +28211,11 @@ md_apply_fix (fixS *\tfixP,\n \t fixP->fx_r_type = BFD_RELOC_THUMB_PCREL_BRANCH23;\n #endif\n \n-      if ((value & ~0x3fffff) && ((value & ~0x3fffff) != ~0x3fffff))\n+      if (out_of_range_p (value, 22))\n \t{\n \t  if (!(ARM_CPU_HAS_FEATURE (cpu_variant, arm_ext_v6t2)))\n \t    as_bad_where (fixP->fx_file, fixP->fx_line, BAD_RANGE);\n-\t  else if ((value & ~0x1ffffff)\n-\t\t   && ((value & ~0x1ffffff) != ~0x1ffffff))\n+\t  else if (out_of_range_p (value, 24))\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"Thumb2 branch out of range\"));\n \t}\n@@ -28217,7 +28226,7 @@ md_apply_fix (fixS *\tfixP,\n       break;\n \n     case BFD_RELOC_THUMB_PCREL_BRANCH25:\n-      if ((value & ~0x0ffffff) && ((value & ~0x0ffffff) != ~0x0ffffff))\n+      if (out_of_range_p (value, 24))\n \tas_bad_where (fixP->fx_file, fixP->fx_line, BAD_RANGE);\n \n       if (fixP->fx_done || !seg->use_rela_p)"
    },
    {
      "sha": "2acca2d656ccfa9233dcdf12a35633a642d41fbe",
      "filename": "gas/testsuite/gas/arm/pr24991.d",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/testsuite/gas/arm/pr24991.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/testsuite/gas/arm/pr24991.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/pr24991.d?ref=e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
      "patch": "@@ -0,0 +1,4 @@\n+#as: -march=armv7-a\n+#source: pr24991.s\n+#error_output: pr24991.l\n+"
    },
    {
      "sha": "4fc58751c8dfd866f5dc6e361434b0210c807e85",
      "filename": "gas/testsuite/gas/arm/pr24991.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/testsuite/gas/arm/pr24991.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/testsuite/gas/arm/pr24991.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/pr24991.l?ref=e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
      "patch": "@@ -0,0 +1,2 @@\n+[^:]*: Assembler messages:\n+[^:]*:4: Error: conditional branch out of range"
    },
    {
      "sha": "27f8daff1c81bc31dd5630f9dcff5c664d8e845f",
      "filename": "gas/testsuite/gas/arm/pr24991.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/testsuite/gas/arm/pr24991.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8f8842d90abe5eafa8c32f08fbc3a747a45747c/gas/testsuite/gas/arm/pr24991.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/pr24991.s?ref=e8f8842d90abe5eafa8c32f08fbc3a747a45747c",
      "patch": "@@ -0,0 +1,5 @@\n+        .arch armv7-a\n+        .syntax unified\n+        .thumb\n+        beq     .+ 0x124f80\n+"
    }
  ]
}