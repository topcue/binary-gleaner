{
  "sha": "1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWQzOGU5ZDE0Y2M3OTNiY2E5MTI0ZDVlZDdkYzJhNmUzMTIyZjJlNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-18T05:34:27Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-18T12:02:51Z"
    },
    "message": "Constify target name, reloc name, and carsym name\n\nbfd/\n\t* bfd-in.h (carsym.name): Make const.\n\t* reloc.c (struct reloc_howto_struct.name): Likewise.\n\t* targets.c (bfd_target.name): Likewise.!\n\t* bfd.c (bfd_get_sign_extend_vma): Make variable const.\n\t* som.c (som_bfd_fill_in_ar_symbols): Use an intermediary variable\n\twhen setting carsym.name.\n\t* bfd-in2.h: Regenerate.\ngdb/\n\t* amd64-dicos-tdep.c (amd64_dicos_osabi_sniffer): Constify target.\n\t* i386-cygwin-tdep.c (i386_cygwin_init_abi): Likewise.\n\t* i386-dicos-tdep.c (i386_dicos_osabi_sniffer): Likewise.\nld/\n\t* ldlang.c (stricpy, strcut, name_compare): Constify params.\n\t(get_first_input_target): Make return and \"target\" const.",
    "tree": {
      "sha": "af0c3bdb5483df06b9f1fb399aa40bfdf0c138ce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/af0c3bdb5483df06b9f1fb399aa40bfdf0c138ce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "90d92a632aaf75ce698335efeb383ddf785c12d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90d92a632aaf75ce698335efeb383ddf785c12d8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/90d92a632aaf75ce698335efeb383ddf785c12d8"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 47,
    "deletions": 23
  },
  "files": [
    {
      "sha": "8c5ce8b8b2aa452748d4864e5be016d4ebcebbef",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -1,3 +1,13 @@\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfd-in.h (carsym.name): Make const.\n+\t* reloc.c (struct reloc_howto_struct.name): Likewise.\n+\t* targets.c (bfd_target.name): Likewise.!\n+\t* bfd.c (bfd_get_sign_extend_vma): Make variable const.\n+\t* som.c (som_bfd_fill_in_ar_symbols): Use an intermediary variable\n+\twhen setting carsym.name.\n+\t* bfd-in2.h: Regenerate.\n+\n 2019-09-18  Alan Modra  <amodra@gmail.com>\n \n \t* mach-o.c (bfd_mach_o_fat_member_init): Likewise.  Replace"
    },
    {
      "sha": "6c72acb705944e0ff70bbe14c3ed169f766ebc3c",
      "filename": "bfd/bfd-in.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/bfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/bfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in.h?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -257,7 +257,7 @@ typedef unsigned long symindex;\n /* This is a type pun with struct ranlib on purpose!  */\n typedef struct carsym\n {\n-  char *name;\n+  const char *name;\n   file_ptr file_offset;\t/* Look here to find the file.  */\n }\n carsym;\t\t\t/* To make these you call a carsymogen.  */"
    },
    {
      "sha": "135c1e5fbc4ca425c39e0333d15b93f1111af1f7",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -264,7 +264,7 @@ typedef unsigned long symindex;\n /* This is a type pun with struct ranlib on purpose!  */\n typedef struct carsym\n {\n-  char *name;\n+  const char *name;\n   file_ptr file_offset;\t/* Look here to find the file.  */\n }\n carsym;\t\t\t/* To make these you call a carsymogen.  */\n@@ -2718,7 +2718,7 @@ struct reloc_howto_struct\n      bfd *, char **);\n \n   /* The textual name of the relocation type.  */\n-  char *name;\n+  const char *name;\n };\n \n #define HOWTO(type, right, size, bits, pcrel, left, ovf, func, name,   \\\n@@ -7634,7 +7634,7 @@ typedef struct flag_info flag_info;\n typedef struct bfd_target\n {\n   /* Identifies the kind of target, e.g., SunOS4, Ultrix, etc.  */\n-  char *name;\n+  const char *name;\n \n  /* The \"flavour\" of a back end is a general indication about\n     the contents of a file.  */"
    },
    {
      "sha": "91403508a9a100f94b7689da95d23c5f1241fe35",
      "filename": "bfd/bfd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -1507,7 +1507,7 @@ RETURNS\n int\n bfd_get_sign_extend_vma (bfd *abfd)\n {\n-  char *name;\n+  const char *name;\n \n   if (bfd_get_flavour (abfd) == bfd_target_elf_flavour)\n     return get_elf_backend_data (abfd)->sign_extend_vma;"
    },
    {
      "sha": "8eac73ddfe588cc96e3e0df91d9d44cce2545093",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -361,7 +361,7 @@ CODE_FRAGMENT\n .     bfd *, char **);\n .\n .  {* The textual name of the relocation type.  *}\n-.  char *name;\n+.  const char *name;\n .};\n .\n */"
    },
    {
      "sha": "cf788434523ca374f3b58851300be2a6f8c82018",
      "filename": "bfd/som.c",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/som.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/som.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/som.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -5995,6 +5995,7 @@ som_bfd_fill_in_ar_symbols (bfd *abfd,\n       unsigned int hash_val;\n       unsigned int len;\n       unsigned char ext_len[4];\n+      char *name;\n \n       /* An empty chain has zero as it's file offset.  */\n       hash_val = bfd_getb32 (hash_table + 4 * i);\n@@ -6025,13 +6026,14 @@ som_bfd_fill_in_ar_symbols (bfd *abfd,\n       len = bfd_getb32 (ext_len);\n \n       /* Allocate space for the name and null terminate it too.  */\n-      set->name = bfd_zalloc (abfd, (bfd_size_type) len + 1);\n-      if (!set->name)\n+      name = bfd_zalloc (abfd, (bfd_size_type) len + 1);\n+      if (!name)\n \tgoto error_return;\n-      if (bfd_bread (set->name, (bfd_size_type) len, abfd) != len)\n+      if (bfd_bread (name, (bfd_size_type) len, abfd) != len)\n \tgoto error_return;\n \n-      set->name[len] = 0;\n+      name[len] = 0;\n+      set->name = name;\n \n       /* Fill in the file offset.  Note that the \"location\" field points\n \t to the SOM itself, not the ar_hdr in front of it.  */\n@@ -6068,13 +6070,14 @@ som_bfd_fill_in_ar_symbols (bfd *abfd,\n \t  len = bfd_getb32 (ext_len);\n \n \t  /* Allocate space for the name and null terminate it too.  */\n-\t  set->name = bfd_zalloc (abfd, (bfd_size_type) len + 1);\n-\t  if (!set->name)\n+\t  name = bfd_zalloc (abfd, (bfd_size_type) len + 1);\n+\t  if (!name)\n \t    goto error_return;\n \n-\t  if (bfd_bread (set->name, (bfd_size_type) len, abfd) != len)\n+\t  if (bfd_bread (name, (bfd_size_type) len, abfd) != len)\n \t    goto error_return;\n-\t  set->name[len] = 0;\n+\t  name[len] = 0;\n+\t  set->name = name;\n \n \t  /* Fill in the file offset.  Note that the \"location\" field points\n \t     to the SOM itself, not the ar_hdr in front of it.  */"
    },
    {
      "sha": "b02dfc548474f6b3f9ed7c73ae63d32c257c17e6",
      "filename": "bfd/targets.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/targets.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/bfd/targets.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/targets.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -179,7 +179,7 @@ DESCRIPTION\n .typedef struct bfd_target\n .{\n .  {* Identifies the kind of target, e.g., SunOS4, Ultrix, etc.  *}\n-.  char *name;\n+.  const char *name;\n .\n . {* The \"flavour\" of a back end is a general indication about\n .    the contents of a file.  *}"
    },
    {
      "sha": "5e0e37bcfaff2e362ebf4ee8dc657c9ea3b9383f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -1,3 +1,9 @@\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* amd64-dicos-tdep.c (amd64_dicos_osabi_sniffer): Constify target.\n+\t* i386-cygwin-tdep.c (i386_cygwin_init_abi): Likewise.\n+\t* i386-dicos-tdep.c (i386_dicos_osabi_sniffer): Likewise.\n+\n 2019-09-18  Alan Modra  <amodra@gmail.com>\n \n \t* solib-spu.c (spu_bfd_open): Use bfd_set_filename."
    },
    {
      "sha": "ee91888491b340838601d048b4257dd07641b3ad",
      "filename": "gdb/amd64-dicos-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/amd64-dicos-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/amd64-dicos-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-dicos-tdep.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -35,7 +35,7 @@ amd64_dicos_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n static enum gdb_osabi\n amd64_dicos_osabi_sniffer (bfd *abfd)\n {\n-  char *target_name = bfd_get_target (abfd);\n+  const char *target_name = bfd_get_target (abfd);\n \n   /* On amd64-DICOS, the Load Module's \"header\" section is 72\n      bytes.  */"
    },
    {
      "sha": "0e3ba82b76474f2479da16522fb483cb17467c87",
      "filename": "gdb/i386-cygwin-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/i386-cygwin-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/i386-cygwin-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-cygwin-tdep.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -229,7 +229,7 @@ i386_cygwin_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n static enum gdb_osabi\n i386_cygwin_osabi_sniffer (bfd *abfd)\n {\n-  char *target_name = bfd_get_target (abfd);\n+  const char *target_name = bfd_get_target (abfd);\n \n   if (strcmp (target_name, \"pei-i386\") == 0)\n     return GDB_OSABI_CYGWIN;"
    },
    {
      "sha": "a8c7c04d1fc5fc74bae5cffd3060bc7c2b42d339",
      "filename": "gdb/i386-dicos-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/i386-dicos-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/gdb/i386-dicos-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-dicos-tdep.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -31,7 +31,7 @@ i386_dicos_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n static enum gdb_osabi\n i386_dicos_osabi_sniffer (bfd *abfd)\n {\n-  char *target_name = bfd_get_target (abfd);\n+  const char *target_name = bfd_get_target (abfd);\n \n   /* On x86-DICOS, the Load Module's \"header\" section is 36 bytes.  */\n   if (strcmp (target_name, \"elf32-i386\") == 0"
    },
    {
      "sha": "b863676ccd1a688a23c40a014062115f59204057",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -1,3 +1,8 @@\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* ldlang.c (stricpy, strcut, name_compare): Constify params.\n+\t(get_first_input_target): Make return and \"target\" const.\n+\n 2019-09-18  Alan Modra  <amodra@gmail.com>\n \n \t* emultempl/pe.em (after_open): Use bfd_set_filename."
    },
    {
      "sha": "76e862a6409d1d92ef50cc2f507d783ef97c9c05",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=1d38e9d14cc793bca9124d5ed7dc2a6e3122f2e5",
      "patch": "@@ -3149,7 +3149,7 @@ get_target (const bfd_target *target, void *data)\n /* Like strcpy() but convert to lower case as well.  */\n \n static void\n-stricpy (char *dest, char *src)\n+stricpy (char *dest, const char *src)\n {\n   char c;\n \n@@ -3163,7 +3163,7 @@ stricpy (char *dest, char *src)\n    from haystack.  */\n \n static void\n-strcut (char *haystack, char *needle)\n+strcut (char *haystack, const char *needle)\n {\n   haystack = strstr (haystack, needle);\n \n@@ -3182,7 +3182,7 @@ strcut (char *haystack, char *needle)\n    Return a value indicating how \"similar\" they are.  */\n \n static int\n-name_compare (char *first, char *second)\n+name_compare (const char *first, const char *second)\n {\n   char *copy1;\n   char *copy2;\n@@ -3267,10 +3267,10 @@ closest_target_match (const bfd_target *target, void *data)\n \n /* Return the BFD target format of the first input file.  */\n \n-static char *\n+static const char *\n get_first_input_target (void)\n {\n-  char *target = NULL;\n+  const char *target = NULL;\n \n   LANG_FOR_EACH_INPUT_STATEMENT (s)\n     {"
    }
  ]
}