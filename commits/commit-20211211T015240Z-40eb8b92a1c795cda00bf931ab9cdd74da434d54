{
  "sha": "40eb8b92a1c795cda00bf931ab9cdd74da434d54",
  "node_id": "C_kwDOANOeidoAKDQwZWI4YjkyYTFjNzk1Y2RhMDBiZjkzMWFiOWNkZDc0ZGE0MzRkNTQ",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-12-10T21:34:22Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-12-11T01:52:40Z"
    },
    "message": "Don't return the main file as the separate debug info\n\nOn Fedora 35,\n\n$ readelf -d /usr/bin/npc\n\ncaused readelf to run out of stack since load_separate_debug_info\nreturned the input main file as the separate debug info:\n\n(gdb) bt\n #0  load_separate_debug_info (\n    main_filename=main_filename@entry=0x510f50 \"/export/home/hjl/.cache/debuginfod_client/dcc33c51c49e7dafc178fdb5cf8bd8946f965295/debuginfo\",\n    xlink=xlink@entry=0x4e5180 <debug_displays+4480>,\n    parse_func=parse_func@entry=0x431550 <parse_gnu_debuglink>,\n    check_func=check_func@entry=0x432ae0 <check_gnu_debuglink>,\n    func_data=func_data@entry=0x7fffffffdb60, file=file@entry=0x51d430)\n    at /export/gnu/import/git/sources/binutils-gdb/binutils/dwarf.c:11057\n #1  0x000000000043328d in check_for_and_load_links (file=0x51d430,\n    filename=0x510f50 \"/export/home/hjl/.cache/debuginfod_client/dcc33c51c49e7dafc178fdb5cf8bd8946f965295/debuginfo\")\n    at /export/gnu/import/git/sources/binutils-gdb/binutils/dwarf.c:11381\n #2  0x00000000004332ae in check_for_and_load_links (file=0x51b070,\n    filename=0x518dd0 \"/export/home/hjl/.cache/debuginfod_client/dcc33c51c49e7dafc178fdb5cf8bd8946f965295/debuginfo\")\n\nReturn NULL if the separate debug info is the same as the input main\nfile to avoid infinite recursion.\n\n\tPR binutils/28679\n\t* dwarf.c (load_separate_debug_info): Don't return the input\n\tmain file.",
    "tree": {
      "sha": "9ad9fcd12f538e4c0fe271fb31f516391dc13e9b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ad9fcd12f538e4c0fe271fb31f516391dc13e9b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/40eb8b92a1c795cda00bf931ab9cdd74da434d54",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40eb8b92a1c795cda00bf931ab9cdd74da434d54",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/40eb8b92a1c795cda00bf931ab9cdd74da434d54",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40eb8b92a1c795cda00bf931ab9cdd74da434d54/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1563e7179a7e7f06ae9b44725f191163ccf0975c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1563e7179a7e7f06ae9b44725f191163ccf0975c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1563e7179a7e7f06ae9b44725f191163ccf0975c"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 17,
    "deletions": 1
  },
  "files": [
    {
      "sha": "eeef98d4a184728242493ae7b640c36f4384ff46",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 17,
      "deletions": 1,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/40eb8b92a1c795cda00bf931ab9cdd74da434d54/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/40eb8b92a1c795cda00bf931ab9cdd74da434d54/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=40eb8b92a1c795cda00bf931ab9cdd74da434d54",
      "patch": "@@ -11053,6 +11053,9 @@ load_separate_debug_info (const char *            main_filename,\n   char *         canon_dir;\n   size_t         canon_dirlen;\n   size_t         dirlen;\n+  char *         canon_filename;\n+  char *         canon_debug_filename;\n+  bool\t\t self;\n \n   if ((separate_filename = parse_func (xlink, func_data)) == NULL)\n     {\n@@ -11064,7 +11067,8 @@ load_separate_debug_info (const char *            main_filename,\n   /* Attempt to locate the separate file.\n      This should duplicate the logic in bfd/opncls.c:find_separate_debug_file().  */\n \n-  canon_dir = lrealpath (main_filename);\n+  canon_filename = lrealpath (main_filename);\n+  canon_dir = xstrdup (canon_filename);\n \n   for (canon_dirlen = strlen (canon_dir); canon_dirlen > 0; canon_dirlen--)\n     if (IS_DIR_SEPARATOR (canon_dir[canon_dirlen - 1]))\n@@ -11096,6 +11100,7 @@ load_separate_debug_info (const char *            main_filename,\n     {\n       warn (_(\"Out of memory\"));\n       free (canon_dir);\n+      free (canon_filename);\n       return NULL;\n     }\n \n@@ -11214,11 +11219,22 @@ load_separate_debug_info (const char *            main_filename,\n \n   free (canon_dir);\n   free (debug_filename);\n+  free (canon_filename);\n   return NULL;\n \n  found:\n   free (canon_dir);\n \n+  canon_debug_filename = lrealpath (debug_filename);\n+  self = strcmp (canon_debug_filename, canon_filename) == 0;\n+  free (canon_filename);\n+  free (canon_debug_filename);\n+  if (self)\n+    {\n+      free (debug_filename);\n+      return NULL;\n+    }\n+\n   void * debug_handle;\n \n   /* Now open the file.... */"
    }
  ]
}