{
  "sha": "3ca60c57a715bbefc091949dd2381bab1b124715",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2NhNjBjNTdhNzE1YmJlZmMwOTE5NDlkZDIzODFiYWIxYjEyNDcxNQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-02-20T17:51:21Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-02-20T17:51:21Z"
    },
    "message": "Fix potential illegal memory access by readelf when parsing a binary containing corrupt system tap notes.\n\n\tPR 24246\n\t* readelf.c (print_stapsdt_note): Harden against corrupt notes.",
    "tree": {
      "sha": "6bd9d7bf0bd830bd680d4bd90b80e301330cb034",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6bd9d7bf0bd830bd680d4bd90b80e301330cb034"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3ca60c57a715bbefc091949dd2381bab1b124715",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ca60c57a715bbefc091949dd2381bab1b124715",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3ca60c57a715bbefc091949dd2381bab1b124715",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ca60c57a715bbefc091949dd2381bab1b124715/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "171375c68e809e97b5653ef424f80d46956a50e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/171375c68e809e97b5653ef424f80d46956a50e8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/171375c68e809e97b5653ef424f80d46956a50e8"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 50,
    "deletions": 7
  },
  "files": [
    {
      "sha": "4d7712075f1a3c822e995652ff88982d53504a1c",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ca60c57a715bbefc091949dd2381bab1b124715/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ca60c57a715bbefc091949dd2381bab1b124715/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=3ca60c57a715bbefc091949dd2381bab1b124715",
      "patch": "@@ -1,5 +1,8 @@\n 2019-02-20  Nick Clifton  <nickc@redhat.com>\n \n+\tPR 24246\n+\t* readelf.c (print_stapsdt_note): Harden against corrupt notes.\n+\n \tPR 24244\n \t* unwind-ia64.c (unw_decode_uleb128): Add end parameter, use it to\n \tprevent walking off the end of the buffer."
    },
    {
      "sha": "0e3e43cc8ed8c82b047e18feb790c41290b4efa8",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 47,
      "deletions": 7,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ca60c57a715bbefc091949dd2381bab1b124715/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ca60c57a715bbefc091949dd2381bab1b124715/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=3ca60c57a715bbefc091949dd2381bab1b124715",
      "patch": "@@ -17868,25 +17868,60 @@ get_stapsdt_note_type (unsigned e_type)\n static bfd_boolean\n print_stapsdt_note (Elf_Internal_Note *pnote)\n {\n-  int addr_size = is_32bit_elf ? 4 : 8;\n+  size_t len, maxlen;\n+  unsigned long addr_size = is_32bit_elf ? 4 : 8;\n   char *data = pnote->descdata;\n   char *data_end = pnote->descdata + pnote->descsz;\n   bfd_vma pc, base_addr, semaphore;\n   char *provider, *probe, *arg_fmt;\n \n+  if (pnote->descsz < (addr_size * 3))\n+    goto stapdt_note_too_small;\n+\n   pc = byte_get ((unsigned char *) data, addr_size);\n   data += addr_size;\n+\n   base_addr = byte_get ((unsigned char *) data, addr_size);\n   data += addr_size;\n+\n   semaphore = byte_get ((unsigned char *) data, addr_size);\n   data += addr_size;\n \n-  provider = data;\n-  data += strlen (data) + 1;\n-  probe = data;\n-  data += strlen (data) + 1;\n-  arg_fmt = data;\n-  data += strlen (data) + 1;\n+  if (data >= data_end)\n+    goto stapdt_note_too_small;\n+  maxlen = data_end - data;\n+  len = strnlen (data, maxlen);\n+  if (len < maxlen)\n+    {\n+      provider = data;\n+      data += len + 1;\n+    }\n+  else\n+    goto stapdt_note_too_small;\n+\n+  if (data >= data_end)\n+    goto stapdt_note_too_small;\n+  maxlen = data_end - data;\n+  len = strnlen (data, maxlen);\n+  if (len < maxlen)\n+    {\n+      probe = data;\n+      data += len + 1;\n+    }\n+  else\n+    goto stapdt_note_too_small;\n+  \n+  if (data >= data_end)\n+    goto stapdt_note_too_small;\n+  maxlen = data_end - data;\n+  len = strnlen (data, maxlen);\n+  if (len < maxlen)\n+    {\n+      arg_fmt = data;\n+      data += len + 1;\n+    }\n+  else\n+    goto stapdt_note_too_small;\n \n   printf (_(\"    Provider: %s\\n\"), provider);\n   printf (_(\"    Name: %s\\n\"), probe);\n@@ -17900,6 +17935,11 @@ print_stapsdt_note (Elf_Internal_Note *pnote)\n   printf (_(\"    Arguments: %s\\n\"), arg_fmt);\n \n   return data == data_end;\n+\n+ stapdt_note_too_small:\n+  printf (_(\"  <corrupt - note is too small>\\n\"));\n+  error (_(\"corrupt stapdt note - the data size is too small\\n\"));\n+  return FALSE;\n }\n \n static const char *"
    }
  ]
}