{
  "sha": "25dfed247b09f2e5c9672a8737c8208ff90928bf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjVkZmVkMjQ3YjA5ZjJlNWM5NjcyYTg3MzdjODIwOGZmOTA5MjhiZg==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2020-07-23T03:42:20Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2020-07-23T03:42:20Z"
    },
    "message": "Fix more bugs in gdb testglue wrapper handling\n\nIn commit 24ac169ac5a918cd82b7485935f0c40a094c625e, this patch:\n\n\t2020-02-21  Shahab Vahedi  <shahab@synopsys.com>\n\n\t* lib/gdb.exp (gdb_wrapper_init): Reset\n\t\"gdb_wrapper_initialized\" to 0 if \"wrapper_file\" does\n\tnot exist.\n\nattempted to fix problems finding the gdb test wrapper gdb_tg.o in\nsome tests that cd to some non-default directory by rebuilding also\nthe test wrapper in that directory.  This had the side-effect of\nleaving these .o files in various places in the GDB source directory\ntree.\n\nFurthermore, while the tests that cd to some non-default directory\ncannot run on remote host, the code that was added to probe for the\npresence of the wrapper file was also specific to host == build.\n\nThis patch reverts the problematic parts of that commit and replaces\nit with forcing use of an absolute (rather than relative) pathname to\nthe .o file for linking when host == build.\n\nWhile debugging this patch, I also observed that use of the construct\n\"[info exists gdb_wrapper_file]\" was not reliable for detecting when\nthat variable had been initialized by gdb_wrapper_init.  I rewrote\nthat so that the variable is always initialized and has a value of an\nempty string when no wrapper file is needed.\n\n2020-07-22  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgdb/testsuite/\n\t* lib/gdb.exp (gdb_wrapper_file, gdb_wrapper_flags):\n\tInitialize to empty string at top level.\n\t(gdb_wrapper_init): Revert check for file existence on build.\n\tBuild the wrapper in its default place, not a build-specific\n\tlocation.  When host == build, make the pathname absolute.\n\t(gdb_compile): Delete leftover declaration of\n\tgdb_wrapper_initialized.  Check gdb_wrapper_file being an empty\n\tstring instead of uninitialized.",
    "tree": {
      "sha": "6a9ac26c92d0c436b19dd150ae328ee7f3033427",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6a9ac26c92d0c436b19dd150ae328ee7f3033427"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/25dfed247b09f2e5c9672a8737c8208ff90928bf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25dfed247b09f2e5c9672a8737c8208ff90928bf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/25dfed247b09f2e5c9672a8737c8208ff90928bf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25dfed247b09f2e5c9672a8737c8208ff90928bf/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "25322a133a8e97ff66fcd1c9da55836766f14fe9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25322a133a8e97ff66fcd1c9da55836766f14fe9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/25322a133a8e97ff66fcd1c9da55836766f14fe9"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 22,
    "deletions": 12
  },
  "files": [
    {
      "sha": "06bafcebc9d07c4511a585a869506c05e3f309e3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/25dfed247b09f2e5c9672a8737c8208ff90928bf/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/25dfed247b09f2e5c9672a8737c8208ff90928bf/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=25dfed247b09f2e5c9672a8737c8208ff90928bf",
      "patch": "@@ -1,3 +1,14 @@\n+2020-07-22  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* lib/gdb.exp (gdb_wrapper_file, gdb_wrapper_flags):\n+\tInitialize to empty string at top level.\n+\t(gdb_wrapper_init): Revert check for file existence on build.\n+\tBuild the wrapper in its default place, not a build-specific\n+\tlocation.  When host == build, make the pathname absolute.\n+\t(gdb_compile): Delete leftover declaration of\n+\tgdb_wrapper_initialized.  Check gdb_wrapper_file being an empty\n+\tstring instead of uninitialized.\n+\n 2020-07-22  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdb.base/corefile2.exp: New file."
    },
    {
      "sha": "5bdeed70f3011da429c7622d962ec129bccd07ec",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 12,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/25dfed247b09f2e5c9672a8737c8208ff90928bf/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/25dfed247b09f2e5c9672a8737c8208ff90928bf/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=25dfed247b09f2e5c9672a8737c8208ff90928bf",
      "patch": "@@ -3694,34 +3694,34 @@ proc current_target_name { } {\n \n set gdb_wrapper_initialized 0\n set gdb_wrapper_target \"\"\n+set gdb_wrapper_file \"\"\n+set gdb_wrapper_flags \"\"\n \n proc gdb_wrapper_init { args } {\n     global gdb_wrapper_initialized\n     global gdb_wrapper_file\n     global gdb_wrapper_flags\n     global gdb_wrapper_target\n \n-    # If the wrapper is initialized but the wrapper file cannot be\n-    # found anymore, the wrapper file must be built again.\n-    if { $gdb_wrapper_initialized == 1 && \\\n-\t    [info exists gdb_wrapper_file] && \\\n-\t    ![file exists $gdb_wrapper_file] } {\n-\tverbose \"reinitializing the wrapper\"\n-\tset gdb_wrapper_initialized 0\n-    }\n-\n     if { $gdb_wrapper_initialized == 1 } { return; }\n \n     if {[target_info exists needs_status_wrapper] && \\\n \t    [target_info needs_status_wrapper] != \"0\"} {\n-\tset result [build_wrapper [standard_output_file \"testglue.o\"]]\n+\tset result [build_wrapper \"testglue.o\"]\n \tif { $result != \"\" } {\n \t    set gdb_wrapper_file [lindex $result 0]\n+\t    if ![is_remote host] {\n+\t\tset gdb_wrapper_file [file join [pwd] $gdb_wrapper_file]\n+\t    }\n \t    set gdb_wrapper_flags [lindex $result 1]\n \t} else {\n \t    warning \"Status wrapper failed to build.\"\n \t}\n+    } else {\n+\tset gdb_wrapper_file \"\"\n+\tset gdb_wrapper_flags \"\"\n     }\n+    verbose \"set gdb_wrapper_file = $gdb_wrapper_file\"\n     set gdb_wrapper_initialized 1\n     set gdb_wrapper_target [current_target_name]\n }\n@@ -3857,7 +3857,6 @@ proc gdb_compile {source dest type options} {\n     global GDB_TESTCASE_OPTIONS\n     global gdb_wrapper_file\n     global gdb_wrapper_flags\n-    global gdb_wrapper_initialized\n     global srcdir\n     global objdir\n     global gdb_saved_set_unbuffered_mode_obj\n@@ -3994,7 +3993,7 @@ proc gdb_compile {source dest type options} {\n \n     if {[target_info exists needs_status_wrapper] && \\\n \t    [target_info needs_status_wrapper] != \"0\" && \\\n-\t    [info exists gdb_wrapper_file]} {\n+\t    $gdb_wrapper_file != \"\" } {\n \tlappend options \"libs=${gdb_wrapper_file}\"\n \tlappend options \"ldflags=${gdb_wrapper_flags}\"\n     }"
    }
  ]
}