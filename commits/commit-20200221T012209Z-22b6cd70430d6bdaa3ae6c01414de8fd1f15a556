{
  "sha": "22b6cd70430d6bdaa3ae6c01414de8fd1f15a556",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjJiNmNkNzA0MzBkNmJkYWEzYWU2YzAxNDE0ZGU4ZmQxZjE1YTU1Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-21T01:22:09Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-21T01:22:09Z"
    },
    "message": "Fix latent bug in dwarf2_find_containing_comp_unit\n\ndwarf2_find_containing_comp_unit has this in its binary search:\n\n      if (mid_cu->is_dwz > offset_in_dwz\n\t  || (mid_cu->is_dwz == offset_in_dwz\n\t      && mid_cu->sect_off + mid_cu->length >= sect_off))\n\thigh = mid;\n\nThe intent here is to determine whether SECT_OFF appears in or before\nMID_CU.\n\nI believe this has an off-by-one error, and that the check should use\n\">\" rather than \">=\".  If the two side are equal, then SECT_OFF\nactually appears at the start of the next CU.\n\nI've had this patch kicking around for ages but I forget how I found\nthe problem.\n\ngdb/ChangeLog\n2020-02-20  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (dwarf2_find_containing_comp_unit): Use \">\", not\n\t\">=\", in binary search.\n\t(dwarf2_find_containing_comp_unit): New overload.\n\t(run_test): New self-test.\n\t(_initialize_dwarf2_read): Register new test.",
    "tree": {
      "sha": "8d65a7bf4b91e78340ba60d39033a649abb7a78e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8d65a7bf4b91e78340ba60d39033a649abb7a78e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "54b2aec10df9ad032184c556ec9cc3f611a91830",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54b2aec10df9ad032184c556ec9cc3f611a91830",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/54b2aec10df9ad032184c556ec9cc3f611a91830"
    }
  ],
  "stats": {
    "total": 102,
    "additions": 91,
    "deletions": 11
  },
  "files": [
    {
      "sha": "748788acac15e2d822f0c236a8567c6126894356",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=22b6cd70430d6bdaa3ae6c01414de8fd1f15a556",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (dwarf2_find_containing_comp_unit): Use \">\", not\n+\t\">=\", in binary search.\n+\t(dwarf2_find_containing_comp_unit): New overload.\n+\t(run_test): New self-test.\n+\t(_initialize_dwarf2_read): Register new test.\n+\n 2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* riscv-tdep.c: Updated since the DECLARE_CSR is changed."
    },
    {
      "sha": "f998fe6b8d0ba383deb3340ba374b9664ea82b3a",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 83,
      "deletions": 11,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/22b6cd70430d6bdaa3ae6c01414de8fd1f15a556/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=22b6cd70430d6bdaa3ae6c01414de8fd1f15a556",
      "patch": "@@ -24136,34 +24136,53 @@ dwarf2_per_cu_data::addr_type () const\n   return addr_type;\n }\n \n-/* Locate the .debug_info compilation unit from CU's objfile which contains\n-   the DIE at OFFSET.  Raises an error on failure.  */\n+/* A helper function for dwarf2_find_containing_comp_unit that returns\n+   the index of the result, and that searches a vector.  It will\n+   return a result even if the offset in question does not actually\n+   occur in any CU.  This is separate so that it can be unit\n+   tested.  */\n \n-static struct dwarf2_per_cu_data *\n-dwarf2_find_containing_comp_unit (sect_offset sect_off,\n-\t\t\t\t  unsigned int offset_in_dwz,\n-\t\t\t\t  struct dwarf2_per_objfile *dwarf2_per_objfile)\n+static int\n+dwarf2_find_containing_comp_unit\n+  (sect_offset sect_off,\n+   unsigned int offset_in_dwz,\n+   const std::vector<dwarf2_per_cu_data *> &all_comp_units)\n {\n-  struct dwarf2_per_cu_data *this_cu;\n   int low, high;\n \n   low = 0;\n-  high = dwarf2_per_objfile->all_comp_units.size () - 1;\n+  high = all_comp_units.size () - 1;\n   while (high > low)\n     {\n       struct dwarf2_per_cu_data *mid_cu;\n       int mid = low + (high - low) / 2;\n \n-      mid_cu = dwarf2_per_objfile->all_comp_units[mid];\n+      mid_cu = all_comp_units[mid];\n       if (mid_cu->is_dwz > offset_in_dwz\n \t  || (mid_cu->is_dwz == offset_in_dwz\n-\t      && mid_cu->sect_off + mid_cu->length >= sect_off))\n+\t      && mid_cu->sect_off + mid_cu->length > sect_off))\n \thigh = mid;\n       else\n \tlow = mid + 1;\n     }\n   gdb_assert (low == high);\n-  this_cu = dwarf2_per_objfile->all_comp_units[low];\n+  return low;\n+}\n+\n+/* Locate the .debug_info compilation unit from CU's objfile which contains\n+   the DIE at OFFSET.  Raises an error on failure.  */\n+\n+static struct dwarf2_per_cu_data *\n+dwarf2_find_containing_comp_unit (sect_offset sect_off,\n+\t\t\t\t  unsigned int offset_in_dwz,\n+\t\t\t\t  struct dwarf2_per_objfile *dwarf2_per_objfile)\n+{\n+  int low\n+    = dwarf2_find_containing_comp_unit (sect_off, offset_in_dwz,\n+\t\t\t\t\tdwarf2_per_objfile->all_comp_units);\n+  struct dwarf2_per_cu_data *this_cu\n+    = dwarf2_per_objfile->all_comp_units[low];\n+\n   if (this_cu->is_dwz != offset_in_dwz || this_cu->sect_off > sect_off)\n     {\n       if (low == 0 || this_cu->is_dwz != offset_in_dwz)\n@@ -24186,6 +24205,57 @@ dwarf2_find_containing_comp_unit (sect_offset sect_off,\n     }\n }\n \n+#if GDB_SELF_TEST\n+\n+namespace selftests {\n+namespace find_containing_comp_unit {\n+\n+static void\n+run_test ()\n+{\n+  struct dwarf2_per_cu_data one {};\n+  struct dwarf2_per_cu_data two {};\n+  struct dwarf2_per_cu_data three {};\n+  struct dwarf2_per_cu_data four {};\n+\n+  one.length = 5;\n+  two.sect_off = sect_offset (one.length);\n+  two.length = 7;\n+\n+  three.length = 5;\n+  three.is_dwz = 1;\n+  four.sect_off = sect_offset (three.length);\n+  four.length = 7;\n+  four.is_dwz = 1;\n+\n+  std::vector<dwarf2_per_cu_data *> units;\n+  units.push_back (&one);\n+  units.push_back (&two);\n+  units.push_back (&three);\n+  units.push_back (&four);\n+\n+  int result;\n+\n+  result = dwarf2_find_containing_comp_unit (sect_offset (0), 0, units);\n+  SELF_CHECK (units[result] == &one);\n+  result = dwarf2_find_containing_comp_unit (sect_offset (3), 0, units);\n+  SELF_CHECK (units[result] == &one);\n+  result = dwarf2_find_containing_comp_unit (sect_offset (5), 0, units);\n+  SELF_CHECK (units[result] == &two);\n+\n+  result = dwarf2_find_containing_comp_unit (sect_offset (0), 1, units);\n+  SELF_CHECK (units[result] == &three);\n+  result = dwarf2_find_containing_comp_unit (sect_offset (3), 1, units);\n+  SELF_CHECK (units[result] == &three);\n+  result = dwarf2_find_containing_comp_unit (sect_offset (5), 1, units);\n+  SELF_CHECK (units[result] == &four);\n+}\n+\n+}\n+}\n+\n+#endif /* GDB_SELF_TEST */\n+\n /* Initialize dwarf2_cu CU, owned by PER_CU.  */\n \n dwarf2_cu::dwarf2_cu (struct dwarf2_per_cu_data *per_cu_)\n@@ -24690,5 +24760,7 @@ Warning: This option must be enabled before gdb reads the file.\"),\n #if GDB_SELF_TEST\n   selftests::register_test (\"dw2_expand_symtabs_matching\",\n \t\t\t    selftests::dw2_expand_symtabs_matching::run_test);\n+  selftests::register_test (\"dwarf2_find_containing_comp_unit\",\n+\t\t\t    selftests::find_containing_comp_unit::run_test);\n #endif\n }"
    }
  ]
}