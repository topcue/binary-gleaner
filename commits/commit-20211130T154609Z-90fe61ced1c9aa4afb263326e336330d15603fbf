{
  "sha": "90fe61ced1c9aa4afb263326e336330d15603fbf",
  "node_id": "C_kwDOANOeidoAKDkwZmU2MWNlZDFjOWFhNGFmYjI2MzMyNmUzMzYzMzBkMTU2MDNmYmY",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-11-29T13:53:06Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-11-30T15:46:09Z"
    },
    "message": "gdb/python: don't use the 'p' format for parsing args\n\nWhen running the gdb.python/py-arch.exp tests on a GDB built\nagainst Python 2 I ran into some errors.  The problem is that this\ntest script exercises the gdb.Architecture.integer_type method, and\nthis method uses 'p' as an argument format specifier in a call to\ngdb_PyArg_ParseTupleAndKeywords.\n\nUnfortunately this specified was only added in Python 3.3, so will\ncause an error for earlier versions of Python.\n\nThis commit switches to use the 'O' specifier to collect a PyObject,\nand then uses PyObject_IsTrue to convert the object to a boolean.\n\nAn earlier version of this patch incorrectly switched from using 'p'\nto use 'i', however, it was pointed out during review that this would\ncause some changes in behaviour, for example both of these will work\nwith 'p', but not with 'i':\n\n  gdb.selected_inferior().architecture().integer_type(32, None)\n  gdb.selected_inferior().architecture().integer_type(32, \"foo\")\n\nThe new approach of using 'O' works fine with these cases.  I've added\nsome new tests to cover both of the above.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "cd3361cec8660cd59e00766142f010d119c2eef8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cd3361cec8660cd59e00766142f010d119c2eef8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90fe61ced1c9aa4afb263326e336330d15603fbf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90fe61ced1c9aa4afb263326e336330d15603fbf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90fe61ced1c9aa4afb263326e336330d15603fbf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90fe61ced1c9aa4afb263326e336330d15603fbf/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "d0b39fc48552fb96b00176145f11ecc871ef4024",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0b39fc48552fb96b00176145f11ecc871ef4024",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d0b39fc48552fb96b00176145f11ecc871ef4024"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 9,
    "deletions": 4
  },
  "files": [
    {
      "sha": "824ad0bfeab2e18be2ee4382c38c224de3970631",
      "filename": "gdb/python/py-arch.c",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90fe61ced1c9aa4afb263326e336330d15603fbf/gdb/python/py-arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90fe61ced1c9aa4afb263326e336330d15603fbf/gdb/python/py-arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-arch.c?ref=90fe61ced1c9aa4afb263326e336330d15603fbf",
      "patch": "@@ -276,12 +276,17 @@ static PyObject *\n archpy_integer_type (PyObject *self, PyObject *args, PyObject *kw)\n {\n   static const char *keywords[] = { \"size\", \"signed\", NULL };\n-  int size, is_signed = 1;\n+  int size;\n+  PyObject *is_signed_obj = nullptr;\n \n-  if (!gdb_PyArg_ParseTupleAndKeywords (args, kw, \"i|p\", keywords,\n-\t\t\t\t\t&size, &is_signed))\n+  if (!gdb_PyArg_ParseTupleAndKeywords (args, kw, \"i|O\", keywords,\n+\t\t\t\t\t&size, &is_signed_obj))\n     return nullptr;\n \n+  /* Assume signed by default.  */\n+  bool is_signed = (is_signed_obj == nullptr\n+\t\t    || PyObject_IsTrue (is_signed_obj));\n+\n   struct gdbarch *gdbarch;\n   ARCHPY_REQUIRE_VALID (self, gdbarch);\n "
    },
    {
      "sha": "14dc1bf85eed7153e23fb219b88d496d45fa04e2",
      "filename": "gdb/testsuite/gdb.python/py-arch.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90fe61ced1c9aa4afb263326e336330d15603fbf/gdb/testsuite/gdb.python/py-arch.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90fe61ced1c9aa4afb263326e336330d15603fbf/gdb/testsuite/gdb.python/py-arch.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-arch.exp?ref=90fe61ced1c9aa4afb263326e336330d15603fbf",
      "patch": "@@ -64,7 +64,7 @@ if { ![is_address_zero_readable] } {\n }\n \n foreach size {0 1 2 3 4 8 16} {\n-    foreach sign {\"\" \", True\" \", False\"} {\n+    foreach sign {\"\" \", True\" \", False\" \", None\" \", \\\"blah\\\"\"} {\n \tset fullsize [expr 8 * $size]\n \tgdb_test_no_output \"python t = arch.integer_type($fullsize$sign)\" \\\n \t    \"get integer type for $size$sign\""
    }
  ]
}