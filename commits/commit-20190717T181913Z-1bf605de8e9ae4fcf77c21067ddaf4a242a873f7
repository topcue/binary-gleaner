{
  "sha": "1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWJmNjA1ZGU4ZTlhZTRmY2Y3N2MyMTA2N2RkYWY0YTI0MmE4NzNmNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-29T05:56:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:19:13Z"
    },
    "message": "Introduce reset_locator function in tui-layout.c\n\ninit_and_make_win in tui-layout.c is now only called for the locator\n-- earlier changes have made most of the cases here obsolete.  This\npatch removes init_and_make_win and introduces a reset_locator\nfunction.  Window creation is now much simpler to follow, because it\nis no longer quite so dynamic.  (Though it will become even simpler in\ncoming patches.)\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.c (show_source_disasm_command): Use\n\treset_locator.\n\t(reset_locator): New function.\n\t(init_and_make_win): Remove.\n\t(show_source_or_disasm_and_command): Use reset_locator.",
    "tree": {
      "sha": "f0f403f374afd5da10bf993ea25e49ac2bbfb396",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f0f403f374afd5da10bf993ea25e49ac2bbfb396"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "098f9ed48e1c94a2624c825ba93d72b163d41196",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/098f9ed48e1c94a2624c825ba93d72b163d41196",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/098f9ed48e1c94a2624c825ba93d72b163d41196"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 31,
    "deletions": 66
  },
  "files": [
    {
      "sha": "76549e029a370ccb78c2ffba074d6ccd63433da3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
      "patch": "@@ -1,3 +1,11 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.c (show_source_disasm_command): Use\n+\treset_locator.\n+\t(reset_locator): New function.\n+\t(init_and_make_win): Remove.\n+\t(show_source_or_disasm_and_command): Use reset_locator.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.c (tui_set_exec_info_content): Remove"
    },
    {
      "sha": "ab849a9813de7cb77781d4d60dc146d7b06fcfe1",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 23,
      "deletions": 66,
      "changes": 89,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
      "patch": "@@ -43,10 +43,8 @@\n ** Static Local Decls\n ********************************/\n static void show_layout (enum tui_layout_type);\n-static tui_gen_win_info *init_and_make_win (tui_gen_win_info *,\n-\t\t\t\t\t    enum tui_win_type,\n-\t\t\t\t\t    int, int, int, int,\n-\t\t\t\t\t    enum tui_box);\n+static void reset_locator (tui_gen_win_info *,\n+\t\t\t   int, int, int, int);\n static void show_source_or_disasm_and_command (enum tui_layout_type);\n static struct tui_win_info *make_command_window (int, int);\n static struct tui_win_info *make_source_window (int, int);\n@@ -614,13 +612,11 @@ show_source_disasm_command (void)\n \t{\n \t  tui_win_list[DISASSEM_WIN]\n \t    = make_disasm_window (asm_height, src_height - 1);\n-\t  init_and_make_win (locator,\n-\t\t\t     LOCATOR_WIN,\n-\t\t\t     2 /* 1 */ ,\n-\t\t\t     tui_term_width (),\n-\t\t\t     0,\n-\t\t\t     (src_height + asm_height) - 1,\n-\t\t\t     DONT_BOX_WINDOW);\n+\t  reset_locator (locator,\n+\t\t\t 2 /* 1 */ ,\n+\t\t\t tui_term_width (),\n+\t\t\t 0,\n+\t\t\t (src_height + asm_height) - 1);\n \t}\n       else\n \t{\n@@ -696,13 +692,11 @@ show_data (enum tui_layout_type new_layout)\n       else\n \ttui_win_list[win_type]\n \t  = make_disasm_window (src_height, data_height - 1);\n-      init_and_make_win (locator,\n-\t\t\t     LOCATOR_WIN,\n-\t\t\t     2 /* 1 */ ,\n-\t\t\t     tui_term_width (),\n-\t\t\t     0,\n-\t\t\t     total_height - 1,\n-\t\t\t     DONT_BOX_WINDOW);\n+      reset_locator (locator,\n+\t\t     2 /* 1 */ ,\n+\t\t     tui_term_width (),\n+\t\t     0,\n+\t\t     total_height - 1);\n       base = (tui_source_window_base *) tui_win_list[win_type];\n     }\n   else\n@@ -751,48 +745,13 @@ tui_gen_win_info::reset (enum tui_win_type win_type,\n   origin.y = origin_y_;\n }\n \n-/* init_and_make_win().\n- */\n-static tui_gen_win_info *\n-init_and_make_win (tui_gen_win_info *win_info, \n-\t\t   enum tui_win_type win_type,\n-\t\t   int height, int width, \n-\t\t   int origin_x, int origin_y,\n-\t\t   enum tui_box box_it)\n+static void\n+reset_locator (tui_gen_win_info *win_info, \n+\t       int height, int width, \n+\t       int origin_x, int origin_y)\n {\n-  if (win_info == NULL)\n-    {\n-      switch (win_type)\n-\t{\n-\tcase SRC_WIN:\n-\t  win_info = new tui_source_window ();\n-\t  break;\n-\n-\tcase DISASSEM_WIN:\n-\t  win_info = new tui_disasm_window ();\n-\t  break;\n-\n-\tcase DATA_WIN:\n-\t  win_info = new tui_data_window ();\n-\t  break;\n-\n-\tcase CMD_WIN:\n-\t  win_info = new tui_cmd_window ();\n-\t  break;\n-\n-\tcase EXEC_INFO_WIN:\n-\t  win_info = new tui_exec_info_window ();\n-\t  break;\n-\n-\tdefault:\n-\t  gdb_assert_not_reached (_(\"unhandled window type\"));\n-\t}\n-    }\n-\n-  win_info->reset (win_type, height, width, origin_x, origin_y);\n-  tui_make_window (win_info, box_it);\n-\n-  return win_info;\n+  win_info->reset (LOCATOR_WIN, height, width, origin_x, origin_y);\n+  tui_make_window (win_info, DONT_BOX_WINDOW);\n }\n \n \n@@ -825,13 +784,11 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \t    *win_info_ptr = make_source_window (src_height - 1, 0);\n \t  else\n \t    *win_info_ptr = make_disasm_window (src_height - 1, 0);\n-\t  init_and_make_win (locator,\n-\t\t\t     LOCATOR_WIN,\n-\t\t\t     2 /* 1 */ ,\n-\t\t\t     tui_term_width (),\n-\t\t\t     0,\n-\t\t\t     src_height - 1,\n-\t\t\t     DONT_BOX_WINDOW);\n+\t  reset_locator (locator,\n+\t\t\t 2 /* 1 */ ,\n+\t\t\t tui_term_width (),\n+\t\t\t 0,\n+\t\t\t src_height - 1);\n \t  base = (tui_source_window_base *) *win_info_ptr;\n \t}\n       else"
    }
  ]
}