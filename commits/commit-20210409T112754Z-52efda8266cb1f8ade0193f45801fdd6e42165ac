{
  "sha": "52efda8266cb1f8ade0193f45801fdd6e42165ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTJlZmRhODI2NmNiMWY4YWRlMDE5M2Y0NTgwMWZkZDZlNDIxNjVhYw==",
  "commit": {
    "author": {
      "name": "Tejas Belagod",
      "email": "tejas.belagod@arm.com",
      "date": "2021-04-09T11:21:38Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2021-04-09T11:27:54Z"
    },
    "message": "AArch64: Fix Atomic LD64/ST64 classification.\n\nPatch 1: Fix diagnostics for exclusive load/stores and reclassify\n\t Armv8.7-A ST/LD64 Atomics.\n\nFollowing upstream pointing out some inconsistencies in diagnostics,\n\nhttps://sourceware.org/pipermail/binutils/2021-February/115356.html\n\nattached is a patch set that fixes the issues. I believe a combination\nof two patches mainly contributed to these bugs:\n\nhttps://sourceware.org/pipermail/binutils/2020-November/113961.html\nhttps://sourceware.org/pipermail/binutils/2018-June/103322.html\n\nA summary of what this patch set fixes:\n\nFor instructions\n\n\tSTXR w0,x2,[x0]\n\tSTLXR w0,x2,[x0]\n\nThe warning we emit currently is misleading:\n\nWarning: unpredictable: identical transfer and status registers --`stlxr w0,x2,[x0]'\nWarning: unpredictable: identical transfer and status registers --`stxr w0,x2,[x0]'\n\nit ought to be:\n\nWarning: unpredictable: identical base and status registers --`stlxr w0,x2,[x0]'\nWarning: unpredictable: identical base and status registers --`stxr w0,x2,[x0]'\n\nFor instructions:\n\n\tldaxp x0,x0,[x0]\n\tldxp x0,x0,[x0]\n\nThe warning we emit is incorrect\n\nWarning: unpredictable: identical transfer and status registers --`ldaxp x0,x0,[x0]'\nWarning: unpredictable: identical transfer and status registers --`ldxp x0,x0,[x0]'\n\nit ought to be:\n\nWarning: unpredictable load of register pair -- `ldaxp x0,x0,[x0]'\nWarning: unpredictable load of register pair -- `ldxp x0,x0,[x0]'\n\nFor instructions\n\n\tstlxp   w0, x2, x2, [x0]\n\tstxp    w0, x2, x2, [x0]\n\nWe don't emit any warning when it ought to be:\n\nWarning: unpredictable: identical base and status registers --`stlxp w0,x2,x2,[x0]'\nWarning: unpredictable: identical base and status registers --`stxp w0,x2,x2,[x0]'\n\nFor instructions:\n\n\tst64bv  x0, x2, [x0]\n\tst64bv  x2, x0, [x0]\n\nWe incorrectly warn when its not necessary. This is because we classify them\nincorrectly as ldstexcl when it should be lse_atomics in the opcode table.\nThe incorrect classification makes it pick up the warnings from warning on\nexclusive load/stores.\n\nPatch 2: Reclassify Armv8.7-A ST/LD64 Atomics.\n\nThis patch reclassifies ST64B{V,V0}, LD64B as lse_atomics rather than ldstexcl\naccording to their encoding class as specified in the architecture. This also\nhas the fortunate side-effect of spurious unpredictable warnings getting\neliminated.\n\nFor eg. For instruction:\n\n\tst64bv  x0, x2, [x0]\n\nWe incorrectly warn when its not necessary:\n\nWarning: unpredictable: identical transfer and status registers --`st64bv x0,x2,[x0]'\n\nThis is because we classify them incorrectly as ldstexcl when it should be\nlse_atomics in the opcode table. The incorrect classification makes it pick\nup the warnings from warning on exclusive load/stores. This patch fixes it\nby reclassifying it and no warnings are issued for this instruction.\n\nopcodes/ChangeLog:\n\n2021-04-09  Tejas Belagod  <tejas.belagod@arm.com>\n\n\t* aarch64-tbl.h (struct aarch64_opcode aarch64_opcode_table): Reclassify\n\tLD64/ST64 instructions to lse_atomic instead of ldstexcl.",
    "tree": {
      "sha": "90be33f93f897c9524d0cbdb15240eb33f5798ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/90be33f93f897c9524d0cbdb15240eb33f5798ad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/52efda8266cb1f8ade0193f45801fdd6e42165ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52efda8266cb1f8ade0193f45801fdd6e42165ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/52efda8266cb1f8ade0193f45801fdd6e42165ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52efda8266cb1f8ade0193f45801fdd6e42165ac/comments",
  "author": {
    "login": "tejas-belagod-arm",
    "id": 92718852,
    "node_id": "U_kgDOBYbHBA",
    "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tejas-belagod-arm",
    "html_url": "https://github.com/tejas-belagod-arm",
    "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers",
    "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs",
    "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos",
    "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c3f72de4f53bc3e5f13762633d78d8a7efb8dd79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3f72de4f53bc3e5f13762633d78d8a7efb8dd79",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c3f72de4f53bc3e5f13762633d78d8a7efb8dd79"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 9,
    "deletions": 4
  },
  "files": [
    {
      "sha": "d2b54352d98a2023638d5aa8595beb47e95e5744",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52efda8266cb1f8ade0193f45801fdd6e42165ac/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52efda8266cb1f8ade0193f45801fdd6e42165ac/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=52efda8266cb1f8ade0193f45801fdd6e42165ac",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-09  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* aarch64-tbl.h (struct aarch64_opcode aarch64_opcode_table): Reclassify\n+\tLD64/ST64 instructions to lse_atomic instead of ldstexcl.\n+\n 2021-04-09  Alan Modra  <amodra@gmail.com>\n \n \t* ppc-dis.c (struct dis_private): Add \"special\"."
    },
    {
      "sha": "4192e54d188357bfd16cb7915f3f8d47fdc34cfd",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52efda8266cb1f8ade0193f45801fdd6e42165ac/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52efda8266cb1f8ade0193f45801fdd6e42165ac/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=52efda8266cb1f8ade0193f45801fdd6e42165ac",
      "patch": "@@ -3646,10 +3646,10 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   CORE_INSN (\"ldrsw\", 0x98000000, 0xff000000, loadlit, OP_LDRSW_LIT, OP2 (Rt, ADDR_PCREL19),    QL_X_PCREL, 0),\n   CORE_INSN (\"prfm\",  0xd8000000, 0xff000000, loadlit, OP_PRFM_LIT,  OP2 (PRFOP, ADDR_PCREL19), QL_PRFM_PCREL, 0),\n   /* Atomic 64-byte load/store in Armv8.7.  */\n-  _LS64_INSN (\"ld64b\",   0xf83fd000, 0xfffffc00, ldstexcl, OP2 (Rt_LS64, ADDR_SIMPLE), QL_X1NIL, 0),\n-  _LS64_INSN (\"st64b\",   0xf83f9000, 0xfffffc00, ldstexcl, OP2 (Rt_LS64, ADDR_SIMPLE), QL_X1NIL, 0),\n-  _LS64_INSN (\"st64bv\",  0xf820b000, 0xffe0fc00, ldstexcl, OP3 (Rs, Rt_LS64, ADDR_SIMPLE), QL_X2NIL, 0),\n-  _LS64_INSN (\"st64bv0\", 0xf820a000, 0xffe0fc00, ldstexcl, OP3 (Rs, Rt_LS64, ADDR_SIMPLE), QL_X2NIL, 0),\n+  _LS64_INSN (\"ld64b\",   0xf83fd000, 0xfffffc00, lse_atomic, OP2 (Rt_LS64, ADDR_SIMPLE), QL_X1NIL, 0),\n+  _LS64_INSN (\"st64b\",   0xf83f9000, 0xfffffc00, lse_atomic, OP2 (Rt_LS64, ADDR_SIMPLE), QL_X1NIL, 0),\n+  _LS64_INSN (\"st64bv\",  0xf820b000, 0xffe0fc00, lse_atomic, OP3 (Rs, Rt_LS64, ADDR_SIMPLE), QL_X2NIL, 0),\n+  _LS64_INSN (\"st64bv0\", 0xf820a000, 0xffe0fc00, lse_atomic, OP3 (Rs, Rt_LS64, ADDR_SIMPLE), QL_X2NIL, 0),\n   /* Logical (immediate).  */\n   CORE_INSN (\"and\", 0x12000000, 0x7f800000, log_imm, 0, OP3 (Rd_SP, Rn, LIMM), QL_R2NIL, F_HAS_ALIAS | F_SF),\n   CORE_INSN (\"bic\", 0x12000000, 0x7f800000, log_imm, OP_BIC, OP3 (Rd_SP, Rn, LIMM), QL_R2NIL, F_ALIAS | F_PSEUDO | F_SF),"
    }
  ]
}