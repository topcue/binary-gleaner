{
  "sha": "82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODJjNzBiMDhkZmI0N2JmNTZjZTc4ZmJkOTE0N2QzOGY1MWVjZGViOA==",
  "commit": {
    "author": {
      "name": "Kyrylo Tkachov",
      "email": "kyrylo.tkachov@arm.com",
      "date": "2021-01-05T17:39:04Z"
    },
    "committer": {
      "name": "Kyrylo Tkachov",
      "email": "kyrylo.tkachov@arm.com",
      "date": "2021-01-11T15:01:09Z"
    },
    "message": "aarch64: Remove support for CSRE\n\nThis patch removes support for the CSRE extension from aarch64\ngas/objdump.\nCSRE (FEAT_CSRE) is part of the Future Architecture Technologies program\nand at this time Arm is withdrawing this particular feature.\n\nThe patch removes the system registers and the CSR PDEC instruction.\n\ngas/ChangeLog\n\t* NEWS: Remove CSRE.\n\t* config/tc-aarch64.c (parse_csr_operand): Delete.\n\t(parse_operands): Delete handling of AARCH64_OPND_CSRE_CSR.\n\t(aarch64_features): Remove csre.\n\t* doc/c-aarch64.texi: Remove CSRE.\n\t* testsuite/gas/aarch64/csre.d: Delete.\n\t* testsuite/gas/aarch64/csre-invalid.s: Likewise.\n\t* testsuite/gas/aarch64/csre-invalid.d: Likewise.\n\t* testsuite/gas/aarch64/csre_csr.s: Likewise.\n\t* testsuite/gas/aarch64/csre_csr.d: Likewise.\n\t* testsuite/gas/aarch64/csre_csr-invalid.s: Likewise.\n\t* testsuite/gas/aarch64/csre_csr-invalid.l: Likewise.\n\t* testsuite/gas/aarch64/csre_csr-invalid.d: Likewise.\n\ninclude/ChangeLog\n\n\t* opcode/aarch64.h (AARCH64_FEATURE_CSRE): Delete.\n\t(aarch64_opnd): Delete AARCH64_OPND_CSRE_CSR.\n\nopcodes/ChangeLog\n\n\t* aarch64-asm-2.c: Regenerate.\n\t* aarch64-dis-2.c: Likewise.\n\t* aarch64-opc-2.c: Likewise.\n\t* aarch64-opc.c (aarch64_print_operand): Delete handling of\n\tAARCH64_OPND_CSRE_CSR.\n\t* aarch64-tbl.h (aarch64_feature_csre): Delete.\n\t(CSRE): Likewise.\n\t(_CSRE_INSN): Likewise.\n\t(aarch64_opcode_table): Delete csr.",
    "tree": {
      "sha": "8027bec80ca4a29fa74c6adaa3e58dfc57f16eda",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8027bec80ca4a29fa74c6adaa3e58dfc57f16eda"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/comments",
  "author": {
    "login": "ktkachov-arm",
    "id": 74917949,
    "node_id": "MDQ6VXNlcjc0OTE3OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ktkachov-arm",
    "html_url": "https://github.com/ktkachov-arm",
    "followers_url": "https://api.github.com/users/ktkachov-arm/followers",
    "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs",
    "repos_url": "https://api.github.com/users/ktkachov-arm/repos",
    "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ktkachov-arm",
    "id": 74917949,
    "node_id": "MDQ6VXNlcjc0OTE3OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ktkachov-arm",
    "html_url": "https://github.com/ktkachov-arm",
    "followers_url": "https://api.github.com/users/ktkachov-arm/followers",
    "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs",
    "repos_url": "https://api.github.com/users/ktkachov-arm/repos",
    "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65"
    }
  ],
  "stats": {
    "total": 2992,
    "additions": 1457,
    "deletions": 1535
  },
  "files": [
    {
      "sha": "d65b6216677b3134daf780abe30674b7681fefc8",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -1,3 +1,20 @@\n+2021-10-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* NEWS: Remove CSRE.\n+\t* config/tc-aarch64.c (parse_csr_operand): Delete.\n+\t(parse_operands): Delete handling of\n+\tAARCH64_OPND_CSRE_CSR.\n+\t(aarch64_features): Remove csre.\n+\t* doc/c-aarch64.texi: Remove CSRE.\n+\t* testsuite/gas/aarch64/csre.d: Delete.\n+\t* testsuite/gas/aarch64/csre-invalid.s: Likewise.\n+\t* testsuite/gas/aarch64/csre-invalid.d: Likewise.\n+\t* testsuite/gas/aarch64/csre_csr.s: Likewise.\n+\t* testsuite/gas/aarch64/csre_csr.d: Likewise.\n+\t* testsuite/gas/aarch64/csre_csr-invalid.s: Likewise.\n+\t* testsuite/gas/aarch64/csre_csr-invalid.l: Likewise.\n+\t* testsuite/gas/aarch64/csre_csr-invalid.d: Likewise.\n+\n 2021-01-11  Nick Clifton  <nickc@redhat.com>\n \n \t* po/uk.po: Updated Ukranian translation."
    },
    {
      "sha": "33dc91b48b40269e27a41935ca5f3c2607ab0147",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -18,18 +18,14 @@ Changes in 2.36:\n   Add support for Cortex-R82, Neoverse V1, and Neoverse N2 for ARM.\n \n * Add support for ETMv4 (Embedded Trace Macrocell), ETE (Embedded Trace\n-  Extension), TRBE (Trace Buffer Extension), CSRE (Call Stack Recorder\n-  Extension) and BRBE (Branch Record Buffer Extension) system registers for\n-  AArch64.\n+  Extension), TRBE (Trace Buffer Extension)and BRBE (Branch Record Buffer\n+  Extension) system registers for AArch64.\n \n * Add support for Armv8-R and Armv8.7-A AArch64.\n \n * Add support for DSB memory nXS barrier, WFET and WFIT instruction for Armv8.7\n   AArch64.\n \n-* Add support for +csre feature for -march. Add CSR PDEC instruction for CSRE\n-  feature in AArch64.\n-\n * Add support for +flagm feature for -march in Armv8.4 AArch64.\n \n * Add support for +ls64 feature for -march in Armv8.7 AArch64. Add atomic"
    },
    {
      "sha": "6f782d057f844a79aaca183e21f2fbd49b546019",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -4036,29 +4036,6 @@ parse_barrier_psb (char **str,\n   return 0;\n }\n \n-/* Parse an operand for CSR (CSRE instruction).  */\n-\n-static int\n-parse_csr_operand (char **str)\n-{\n-  char *p, *q;\n-\n-  p = q = *str;\n-  while (ISALPHA (*q))\n-    q++;\n-\n-  /* Instruction has only one operand PDEC which encodes Rt field of the\n-     operation to 0b11111.  */\n-  if (strcasecmp(p, \"pdec\"))\n-  {\n-    set_syntax_error (_(\"CSR instruction accepts only PDEC\"));\n-    return PARSE_FAIL;\n-  }\n-\n-  *str = q;\n-  return 0;\n-}\n-\n /* Parse an operand for BTI.  Set *HINT_OPT to the hint-option record\n    return 0 if successful.  Otherwise return PARSE_FAIL.  */\n \n@@ -6793,12 +6770,6 @@ parse_operands (char *str, const aarch64_opcode *opcode)\n \t    goto failure;\n \t  break;\n \n-\tcase AARCH64_OPND_CSRE_CSR:\n-\t  val = parse_csr_operand (&str);\n-\t  if (val == PARSE_FAIL)\n-\t    goto failure;\n-\t  break;\n-\n \tdefault:\n \t  as_fatal (_(\"unhandled operand code %d\"), operands[i]);\n \t}\n@@ -9230,8 +9201,6 @@ static const struct aarch64_option_cpu_value_table aarch64_features[] = {\n \t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE, 0)},\n   {\"f64mm\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_F64MM, 0),\n \t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE, 0)},\n-  {\"csre\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_CSRE, 0),\n-\t\t\tAARCH64_ARCH_NONE},\n   {\"ls64\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_LS64, 0),\n \t\t\tAARCH64_ARCH_NONE},\n   {\"flagm\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_FLAGM, 0),"
    },
    {
      "sha": "79dce2f74074e7cd3502cb127d87f585b048dfaa",
      "filename": "gas/doc/c-aarch64.texi",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/doc/c-aarch64.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/gas/doc/c-aarch64.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-aarch64.texi?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -229,8 +229,6 @@ automatically cause those extensions to be disabled.\n  @tab Enable SVE2 SHA3 Extension.\n @item @code{flagm} @tab ARMv8-A @tab ARMv8.4-A or later\n  @tab Enable Flag Manipulation instructions.\n-@item @code{csre} @tab ARMv8-A @tab No\n- @tab Enable Call Stack Recorder Extension.\n @item @code{ls64} @tab ARMv8.6-A @tab ARMv8.7-A or later\n  @tab Enable 64 Byte Loads/Stores.\n @item @code{pauth} @tab ARMv8-A @tab No"
    },
    {
      "sha": "f273b65010a871b5b99f79a354215d47b59fecf4",
      "filename": "gas/testsuite/gas/aarch64/csre-invalid.d",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre-invalid.d?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,3 +0,0 @@\n-#name: Invalid CSRE System registers usage\n-#source: csre-invalid.s\n-#warning_output: csre-invalid.l"
    },
    {
      "sha": "424f50a3fea8ed9d4308887e176ef4bac7343bc6",
      "filename": "gas/testsuite/gas/aarch64/csre-invalid.s",
      "status": "removed",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre-invalid.s?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,6 +0,0 @@\n-/* Write to read-only CSRE system registers.  */\n-\n-msr csridr_el0 ,x0\n-msr csrptridx_el0 ,x0\n-msr csrptridx_el1 ,x0\n-msr csrptridx_el2 ,x0"
    },
    {
      "sha": "ac77d4ac1a2c7e8183204f6bdfe66bc774a041ce",
      "filename": "gas/testsuite/gas/aarch64/csre.d",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre.d?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,29 +0,0 @@\n-#name: CSRE System registers\n-#objdump: -dr\n-\n-.*:     file format .*\n-\n-\n-Disassembly of section \\.text:\n-\n-0+ <.*>:\n-[^:]+:\td5338000 \tmrs\tx0, csrcr_el0\n-[^:]+:\td5338020 \tmrs\tx0, csrptr_el0\n-[^:]+:\td5338040 \tmrs\tx0, csridr_el0\n-[^:]+:\td5338060 \tmrs\tx0, csrptridx_el0\n-[^:]+:\td5308000 \tmrs\tx0, csrcr_el1\n-[^:]+:\td5358000 \tmrs\tx0, csrcr_el12\n-[^:]+:\td5308020 \tmrs\tx0, csrptr_el1\n-[^:]+:\td5358020 \tmrs\tx0, csrptr_el12\n-[^:]+:\td5308060 \tmrs\tx0, csrptridx_el1\n-[^:]+:\td5348000 \tmrs\tx0, csrcr_el2\n-[^:]+:\td5348020 \tmrs\tx0, csrptr_el2\n-[^:]+:\td5348060 \tmrs\tx0, csrptridx_el2\n-[^:]+:\td5138000 \tmsr\tcsrcr_el0, x0\n-[^:]+:\td5138020 \tmsr\tcsrptr_el0, x0\n-[^:]+:\td5108000 \tmsr\tcsrcr_el1, x0\n-[^:]+:\td5158000 \tmsr\tcsrcr_el12, x0\n-[^:]+:\td5108020 \tmsr\tcsrptr_el1, x0\n-[^:]+:\td5158020 \tmsr\tcsrptr_el12, x0\n-[^:]+:\td5148000 \tmsr\tcsrcr_el2, x0\n-[^:]+:\td5148020 \tmsr\tcsrptr_el2, x0"
    },
    {
      "sha": "bec71c8871dda9d6d7409c0dc3a73b655843aa7c",
      "filename": "gas/testsuite/gas/aarch64/csre_csr-invalid.d",
      "status": "removed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr-invalid.d?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,3 +0,0 @@\n-#name: CSR PDEC instruction\n-#source: csre_csr-invalid.s\n-#error_output: csre_csr-invalid.l"
    },
    {
      "sha": "dec38ab2d7ba149328d1391375aac49b3d3ac458",
      "filename": "gas/testsuite/gas/aarch64/csre_csr-invalid.l",
      "status": "removed",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr-invalid.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr-invalid.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr-invalid.l?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,2 +0,0 @@\n-.*: Assembler messages:\n-.*: Error: selected processor does not support `csr pdec'"
    },
    {
      "sha": "e8520badc3f3f7b166fed8c40dfff89d134feff8",
      "filename": "gas/testsuite/gas/aarch64/csre_csr-invalid.s",
      "status": "removed",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr-invalid.s?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,4 +0,0 @@\n-/* CSR PDEC requires +csre for -march= command line option.   */\n-.arch armv8-a\n-\n-    csr pdec"
    },
    {
      "sha": "c242f0ac42d0eb1560fe270e40250f71b8f40fb7",
      "filename": "gas/testsuite/gas/aarch64/csre_csr.d",
      "status": "removed",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr.d?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,10 +0,0 @@\n-#name: CSRE extension CSR PDEC instruction\n-#objdump: -dr\n-\n-.*:     file format .*\n-\n-Disassembly of section \\.text:\n-\n-0+ <.*>:\n-.*:\td50b721f \tcsr\tpdec\n-.*:\td50b721f \tcsr\tpdec"
    },
    {
      "sha": "d0ac90fd7e4a6f9840f21c62303c194adc747644",
      "filename": "gas/testsuite/gas/aarch64/csre_csr.s",
      "status": "removed",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65/gas/testsuite/gas/aarch64/csre_csr.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/csre_csr.s?ref=c0f6e439cc59fa60fec3a4c4ff56e6fac52a8c65",
      "patch": "@@ -1,4 +0,0 @@\n-.arch armv8-a+csre\n-\n-    csr pdec\n-    CSR PDEC"
    },
    {
      "sha": "e818efbc7020ca57b27f5033c92db0c1d902105f",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_CSRE): Delete.\n+\t(aarch64_opnd): Delete AARCH64_OPND_CSRE_CSR.\n+\n 2021-01-09  Nick Clifton  <nickc@redhat.com>\n \n \t* 2.36 release branch crated."
    },
    {
      "sha": "f99869103108283451c660d9bc149dda8b6b1d41",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -51,7 +51,6 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_V8_4\t     (1ULL << 11) /* ARMv8.4 processors.  */\n #define AARCH64_FEATURE_V8_R\t     (1ULL << 12) /* Armv8-R processors.  */\n #define AARCH64_FEATURE_V8_7\t     (1ULL << 13) /* Armv8.7 processors.  */\n-#define AARCH64_FEATURE_CSRE\t     (1ULL << 14) /* CSRE feature.  */\n #define AARCH64_FEATURE_LS64\t     (1ULL << 15) /* Atomic 64-byte load/store.  */\n #define AARCH64_FEATURE_PAC\t     (1ULL << 16) /* v8.3 Pointer Authentication.  */\n #define AARCH64_FEATURE_FP\t     (1ULL << 17) /* FP instructions.  */\n@@ -440,7 +439,6 @@ enum aarch64_opnd\n   AARCH64_OPND_SVE_ZtxN,\t/* SVE vector register list in Zt.  */\n   AARCH64_OPND_TME_UIMM16,\t/* TME unsigned 16-bit immediate.  */\n   AARCH64_OPND_SM3_IMM2,\t/* SM3 encodes lane in bits [13, 14].  */\n-  AARCH64_OPND_CSRE_CSR,\t/* CSRE CSR instruction Rt field.  */\n };\n \n /* Qualifier constrains an operand.  It either specifies a variant of an"
    },
    {
      "sha": "147ca03af571107b03b4ee21a3b05b4198a5741a",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -1,3 +1,15 @@\n+2021-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Likewise.\n+\t* aarch64-opc-2.c: Likewise.\n+\t* aarch64-opc.c (aarch64_print_operand):\n+\tDelete handling of AARCH64_OPND_CSRE_CSR.\n+\t* aarch64-tbl.h (aarch64_feature_csre): Delete.\n+\t(CSRE): Likewise.\n+\t(_CSRE_INSN): Likewise.\n+\t(aarch64_opcode_table): Delete csr.\n+\n 2021-01-11  Nick Clifton  <nickc@redhat.com>\n \n \t* po/de.po: Updated German translation."
    },
    {
      "sha": "abc6d68d94e1152738dbfdd41eb639b625aa86a3",
      "filename": "opcodes/aarch64-asm-2.c",
      "status": "modified",
      "additions": 124,
      "deletions": 124,
      "changes": 248,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-asm-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-asm-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-asm-2.c?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -426,177 +426,177 @@ aarch64_find_real_opcode (const aarch64_opcode *opcode)\n     case 1188:\t/* movz */\n       value = 1188;\t/* --> movz.  */\n       break;\n-    case 1247:\t/* autibsp */\n-    case 1246:\t/* autibz */\n-    case 1245:\t/* autiasp */\n-    case 1244:\t/* autiaz */\n-    case 1243:\t/* pacibsp */\n-    case 1242:\t/* pacibz */\n-    case 1241:\t/* paciasp */\n-    case 1240:\t/* paciaz */\n-    case 1216:\t/* tsb */\n-    case 1215:\t/* psb */\n-    case 1214:\t/* esb */\n-    case 1213:\t/* autib1716 */\n-    case 1212:\t/* autia1716 */\n-    case 1211:\t/* pacib1716 */\n-    case 1210:\t/* pacia1716 */\n-    case 1209:\t/* xpaclri */\n-    case 1207:\t/* sevl */\n-    case 1206:\t/* sev */\n-    case 1205:\t/* wfi */\n-    case 1204:\t/* wfe */\n-    case 1203:\t/* yield */\n-    case 1202:\t/* bti */\n-    case 1201:\t/* csdb */\n-    case 1200:\t/* nop */\n-    case 1199:\t/* hint */\n-      value = 1199;\t/* --> hint.  */\n-      break;\n-    case 1222:\t/* pssbb */\n-    case 1221:\t/* ssbb */\n-    case 1220:\t/* dfb */\n+    case 1246:\t/* autibsp */\n+    case 1245:\t/* autibz */\n+    case 1244:\t/* autiasp */\n+    case 1243:\t/* autiaz */\n+    case 1242:\t/* pacibsp */\n+    case 1241:\t/* pacibz */\n+    case 1240:\t/* paciasp */\n+    case 1239:\t/* paciaz */\n+    case 1215:\t/* tsb */\n+    case 1214:\t/* psb */\n+    case 1213:\t/* esb */\n+    case 1212:\t/* autib1716 */\n+    case 1211:\t/* autia1716 */\n+    case 1210:\t/* pacib1716 */\n+    case 1209:\t/* pacia1716 */\n+    case 1208:\t/* xpaclri */\n+    case 1206:\t/* sevl */\n+    case 1205:\t/* sev */\n+    case 1204:\t/* wfi */\n+    case 1203:\t/* wfe */\n+    case 1202:\t/* yield */\n+    case 1201:\t/* bti */\n+    case 1200:\t/* csdb */\n+    case 1199:\t/* nop */\n+    case 1198:\t/* hint */\n+      value = 1198;\t/* --> hint.  */\n+      break;\n+    case 1221:\t/* pssbb */\n+    case 1220:\t/* ssbb */\n+    case 1219:\t/* dfb */\n+    case 1217:\t/* dsb */\n+      value = 1217;\t/* --> dsb.  */\n+      break;\n     case 1218:\t/* dsb */\n       value = 1218;\t/* --> dsb.  */\n       break;\n-    case 1219:\t/* dsb */\n-      value = 1219;\t/* --> dsb.  */\n+    case 1234:\t/* cpp */\n+    case 1233:\t/* dvp */\n+    case 1232:\t/* cfp */\n+    case 1229:\t/* tlbi */\n+    case 1228:\t/* ic */\n+    case 1227:\t/* dc */\n+    case 1226:\t/* at */\n+    case 1225:\t/* sys */\n+      value = 1225;\t/* --> sys.  */\n       break;\n-    case 1235:\t/* cpp */\n-    case 1234:\t/* dvp */\n-    case 1233:\t/* cfp */\n-    case 1230:\t/* tlbi */\n-    case 1229:\t/* ic */\n-    case 1228:\t/* dc */\n-    case 1227:\t/* at */\n-    case 1226:\t/* sys */\n-      value = 1226;\t/* --> sys.  */\n+    case 1230:\t/* wfet */\n+      value = 1230;\t/* --> wfet.  */\n       break;\n-    case 1231:\t/* wfet */\n-      value = 1231;\t/* --> wfet.  */\n+    case 1231:\t/* wfit */\n+      value = 1231;\t/* --> wfit.  */\n       break;\n-    case 1232:\t/* wfit */\n-      value = 1232;\t/* --> wfit.  */\n+    case 2044:\t/* bic */\n+    case 1294:\t/* and */\n+      value = 1294;\t/* --> and.  */\n       break;\n-    case 2045:\t/* bic */\n-    case 1295:\t/* and */\n-      value = 1295;\t/* --> and.  */\n+    case 1277:\t/* mov */\n+    case 1296:\t/* and */\n+      value = 1296;\t/* --> and.  */\n       break;\n-    case 1278:\t/* mov */\n-    case 1297:\t/* and */\n-      value = 1297;\t/* --> and.  */\n+    case 1281:\t/* movs */\n+    case 1297:\t/* ands */\n+      value = 1297;\t/* --> ands.  */\n       break;\n-    case 1282:\t/* movs */\n-    case 1298:\t/* ands */\n-      value = 1298;\t/* --> ands.  */\n+    case 2045:\t/* cmple */\n+    case 1332:\t/* cmpge */\n+      value = 1332;\t/* --> cmpge.  */\n       break;\n-    case 2046:\t/* cmple */\n-    case 1333:\t/* cmpge */\n-      value = 1333;\t/* --> cmpge.  */\n+    case 2048:\t/* cmplt */\n+    case 1335:\t/* cmpgt */\n+      value = 1335;\t/* --> cmpgt.  */\n       break;\n-    case 2049:\t/* cmplt */\n-    case 1336:\t/* cmpgt */\n-      value = 1336;\t/* --> cmpgt.  */\n+    case 2046:\t/* cmplo */\n+    case 1337:\t/* cmphi */\n+      value = 1337;\t/* --> cmphi.  */\n       break;\n-    case 2047:\t/* cmplo */\n-    case 1338:\t/* cmphi */\n-      value = 1338;\t/* --> cmphi.  */\n+    case 2047:\t/* cmpls */\n+    case 1340:\t/* cmphs */\n+      value = 1340;\t/* --> cmphs.  */\n       break;\n-    case 2048:\t/* cmpls */\n-    case 1341:\t/* cmphs */\n-      value = 1341;\t/* --> cmphs.  */\n+    case 1274:\t/* mov */\n+    case 1362:\t/* cpy */\n+      value = 1362;\t/* --> cpy.  */\n       break;\n-    case 1275:\t/* mov */\n+    case 1276:\t/* mov */\n     case 1363:\t/* cpy */\n       value = 1363;\t/* --> cpy.  */\n       break;\n-    case 1277:\t/* mov */\n+    case 2055:\t/* fmov */\n+    case 1279:\t/* mov */\n     case 1364:\t/* cpy */\n       value = 1364;\t/* --> cpy.  */\n       break;\n-    case 2056:\t/* fmov */\n-    case 1280:\t/* mov */\n-    case 1365:\t/* cpy */\n-      value = 1365;\t/* --> cpy.  */\n+    case 1269:\t/* mov */\n+    case 1376:\t/* dup */\n+      value = 1376;\t/* --> dup.  */\n       break;\n-    case 1270:\t/* mov */\n+    case 1271:\t/* mov */\n+    case 1268:\t/* mov */\n     case 1377:\t/* dup */\n       value = 1377;\t/* --> dup.  */\n       break;\n-    case 1272:\t/* mov */\n-    case 1269:\t/* mov */\n+    case 2054:\t/* fmov */\n+    case 1273:\t/* mov */\n     case 1378:\t/* dup */\n       value = 1378;\t/* --> dup.  */\n       break;\n-    case 2055:\t/* fmov */\n-    case 1274:\t/* mov */\n-    case 1379:\t/* dup */\n-      value = 1379;\t/* --> dup.  */\n+    case 1272:\t/* mov */\n+    case 1379:\t/* dupm */\n+      value = 1379;\t/* --> dupm.  */\n       break;\n-    case 1273:\t/* mov */\n-    case 1380:\t/* dupm */\n-      value = 1380;\t/* --> dupm.  */\n+    case 2049:\t/* eon */\n+    case 1381:\t/* eor */\n+      value = 1381;\t/* --> eor.  */\n       break;\n-    case 2050:\t/* eon */\n-    case 1382:\t/* eor */\n-      value = 1382;\t/* --> eor.  */\n+    case 1282:\t/* not */\n+    case 1383:\t/* eor */\n+      value = 1383;\t/* --> eor.  */\n       break;\n-    case 1283:\t/* not */\n-    case 1384:\t/* eor */\n-      value = 1384;\t/* --> eor.  */\n+    case 1283:\t/* nots */\n+    case 1384:\t/* eors */\n+      value = 1384;\t/* --> eors.  */\n       break;\n-    case 1284:\t/* nots */\n-    case 1385:\t/* eors */\n-      value = 1385;\t/* --> eors.  */\n+    case 2050:\t/* facle */\n+    case 1389:\t/* facge */\n+      value = 1389;\t/* --> facge.  */\n       break;\n-    case 2051:\t/* facle */\n-    case 1390:\t/* facge */\n-      value = 1390;\t/* --> facge.  */\n+    case 2051:\t/* faclt */\n+    case 1390:\t/* facgt */\n+      value = 1390;\t/* --> facgt.  */\n       break;\n-    case 2052:\t/* faclt */\n-    case 1391:\t/* facgt */\n-      value = 1391;\t/* --> facgt.  */\n+    case 2052:\t/* fcmle */\n+    case 1403:\t/* fcmge */\n+      value = 1403;\t/* --> fcmge.  */\n       break;\n-    case 2053:\t/* fcmle */\n-    case 1404:\t/* fcmge */\n-      value = 1404;\t/* --> fcmge.  */\n+    case 2053:\t/* fcmlt */\n+    case 1405:\t/* fcmgt */\n+      value = 1405;\t/* --> fcmgt.  */\n       break;\n-    case 2054:\t/* fcmlt */\n-    case 1406:\t/* fcmgt */\n-      value = 1406;\t/* --> fcmgt.  */\n+    case 1266:\t/* fmov */\n+    case 1411:\t/* fcpy */\n+      value = 1411;\t/* --> fcpy.  */\n       break;\n-    case 1267:\t/* fmov */\n-    case 1412:\t/* fcpy */\n-      value = 1412;\t/* --> fcpy.  */\n+    case 1265:\t/* fmov */\n+    case 1434:\t/* fdup */\n+      value = 1434;\t/* --> fdup.  */\n       break;\n-    case 1266:\t/* fmov */\n-    case 1435:\t/* fdup */\n-      value = 1435;\t/* --> fdup.  */\n+    case 1267:\t/* mov */\n+    case 1765:\t/* orr */\n+      value = 1765;\t/* --> orr.  */\n       break;\n-    case 1268:\t/* mov */\n+    case 2056:\t/* orn */\n     case 1766:\t/* orr */\n       value = 1766;\t/* --> orr.  */\n       break;\n-    case 2057:\t/* orn */\n-    case 1767:\t/* orr */\n-      value = 1767;\t/* --> orr.  */\n+    case 1270:\t/* mov */\n+    case 1768:\t/* orr */\n+      value = 1768;\t/* --> orr.  */\n       break;\n-    case 1271:\t/* mov */\n-    case 1769:\t/* orr */\n-      value = 1769;\t/* --> orr.  */\n+    case 1280:\t/* movs */\n+    case 1769:\t/* orrs */\n+      value = 1769;\t/* --> orrs.  */\n       break;\n-    case 1281:\t/* movs */\n-    case 1770:\t/* orrs */\n-      value = 1770;\t/* --> orrs.  */\n+    case 1275:\t/* mov */\n+    case 1831:\t/* sel */\n+      value = 1831;\t/* --> sel.  */\n       break;\n-    case 1276:\t/* mov */\n+    case 1278:\t/* mov */\n     case 1832:\t/* sel */\n       value = 1832;\t/* --> sel.  */\n       break;\n-    case 1279:\t/* mov */\n-    case 1833:\t/* sel */\n-      value = 1833;\t/* --> sel.  */\n-      break;\n     default: return NULL;\n     }\n "
    },
    {
      "sha": "5cffd3f77a3c17f5f4186002f681e5295b7b5e5a",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 1289,
      "deletions": 1290,
      "changes": 2579,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8"
    },
    {
      "sha": "820f6f115499c2fb18ef1e57efaaa8fa3fe2c6b8",
      "filename": "opcodes/aarch64-opc-2.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-opc-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-opc-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc-2.c?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -312,17 +312,17 @@ static const unsigned op_enum_table [] =\n   391,\n   413,\n   415,\n-  1271,\n-  1276,\n-  1269,\n+  1270,\n+  1275,\n   1268,\n-  1272,\n-  1279,\n-  1281,\n-  1282,\n+  1267,\n+  1271,\n   1278,\n-  1284,\n+  1280,\n+  1281,\n+  1277,\n   1283,\n+  1282,\n   131,\n };\n "
    },
    {
      "sha": "50d641239364b2d042b181b08c42a4a913c26572",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -3788,10 +3788,6 @@ aarch64_print_operand (char *buf, size_t size, bfd_vma pc,\n \tsnprintf (buf, size, \"%s\", opnd->hint_option->name);\n       break;\n \n-    case AARCH64_OPND_CSRE_CSR:\n-      snprintf (buf, size, \"pdec\");\n-      break;\n-\n     default:\n       assert (0);\n     }"
    },
    {
      "sha": "f5c313138eab1fee742abc785b67b7094237b00e",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=82c70b08dfb47bf56ce78fbd9147d38f51ecdeb8",
      "patch": "@@ -2418,8 +2418,6 @@ static const aarch64_feature_set aarch64_feature_f64mm_sve =\n        | AARCH64_FEATURE_SVE, 0);\n static const aarch64_feature_set aarch64_feature_v8_r =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_R, 0);\n-static const aarch64_feature_set aarch64_feature_csre =\n-  AARCH64_FEATURE (AARCH64_FEATURE_CSRE, 0);\n static const aarch64_feature_set aarch64_feature_ls64 =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_6 | AARCH64_FEATURE_LS64, 0);\n static const aarch64_feature_set aarch64_feature_flagm =\n@@ -2470,7 +2468,6 @@ static const aarch64_feature_set aarch64_feature_flagm =\n #define I8MM      &aarch64_feature_i8mm\n #define ARMV8_R\t  &aarch64_feature_v8_r\n #define ARMV8_7\t  &aarch64_feature_v8_7\n-#define CSRE\t  &aarch64_feature_csre\n #define LS64\t  &aarch64_feature_ls64\n #define FLAGM\t  &aarch64_feature_flagm\n \n@@ -2582,8 +2579,6 @@ static const aarch64_feature_set aarch64_feature_flagm =\n   { NAME, OPCODE, MASK, CLASS, 0, ARMV8_R, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define V8_7_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, ARMV8_7, OPS, QUALS, FLAGS, 0, 0, NULL }\n-#define _CSRE_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n-  { NAME, OPCODE, MASK, CLASS, 0, CSRE, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define _LS64_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, LS64, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define FLAGM_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n@@ -3863,8 +3858,6 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   _TME_INSN (\"tcommit\", 0xd503307f, 0xffffffff, 0, 0, OP0 (), {}, 0),\n   _TME_INSN (\"ttest\", 0xd5233160, 0xffffffe0, 0, 0, OP1 (Rd), QL_I1X, 0),\n   _TME_INSN (\"tcancel\", 0xd4600000, 0xffe0001f, 0, 0, OP1 (TME_UIMM16), QL_IMM_NIL, 0),\n-  /* CSRE Instructions.  */\n-  _CSRE_INSN (\"csr\", 0xd50b721f, 0xffffffff, 0, OP1 (CSRE_CSR), {}, 0),\n   /* System.  */\n   CORE_INSN (\"msr\", 0xd500401f, 0xfff8f01f, ic_system, 0, OP2 (PSTATEFIELD, UIMM4), {}, F_SYS_WRITE),\n   CORE_INSN (\"hint\",0xd503201f, 0xfffff01f, ic_system, 0, OP1 (UIMM7), {}, F_HAS_ALIAS),"
    }
  ]
}