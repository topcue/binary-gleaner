{
  "sha": "0f8e278da2d58c48b59d79b9f23229412d964848",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGY4ZTI3OGRhMmQ1OGM0OGI1OWQ3OWI5ZjIzMjI5NDEyZDk2NDg0OA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-07T08:07:42Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-07T17:22:33Z"
    },
    "message": "sim: ChangeLog: move arch-specific entries into the arch dir\n\nWe don't want arch-specific entries in the common ChangeLog files.\nMost arches do this already, so clean up the recent additions, and\nmove some older entries down to help avoid confusing newcomers.",
    "tree": {
      "sha": "a73db9bbf4d34efdbbedf7cb8e7822845eb6c1c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a73db9bbf4d34efdbbedf7cb8e7822845eb6c1c0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0f8e278da2d58c48b59d79b9f23229412d964848",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f8e278da2d58c48b59d79b9f23229412d964848",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0f8e278da2d58c48b59d79b9f23229412d964848",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f8e278da2d58c48b59d79b9f23229412d964848/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e6c1dbbfe8bed2b9396f74e3594701c8abe875ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6c1dbbfe8bed2b9396f74e3594701c8abe875ad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e6c1dbbfe8bed2b9396f74e3594701c8abe875ad"
    }
  ],
  "stats": {
    "total": 1033,
    "additions": 524,
    "deletions": 509
  },
  "files": [
    {
      "sha": "121f005217a1de4a91affbc05919b08f3456ba13",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 0,
      "deletions": 490,
      "changes": 490,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -1,66 +1,15 @@\n-2020-11-01  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* bpf/configure: Re-generate.\n-\n-2020-09-08  David Faust  <david.faust@oracle.com>\n-\n-\t* bpf/sem-be.c: Regenerate.\n-\t* bpf/sem-le.c: Likewise.\n-\n-2020-09-03  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* bpf/bpf.c: Include bpf-helpers.h.\n-\t* bpf/bpf-helpers.h: Provide a prototype for bpf_trace_printk.\n-\t* bpf/configure.ac: Set simulator bitsize to 64.\n-\t* bpf/configure (includedir): Regenerate.\n-\t* bpf/sim-if.c: Include stdlib.h.\n-\t* bpf/traps.c: Likewise.\n-\n 2020-09-03  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* configure.ac: Do not configure sim/testsuite nor sim/igen if the\n \tprimary target doesn't have a simulator.\n \t* configure: Regenerate.\n \n-2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\t    David Faust <david.faust@oracle.com>\n-\n-\t* bpf/arch.c: Likewise.\n-\t* bpf/arch.h: Likewise.\n-\t* bpf/cpu.c: Likewise.\n-\t* bpf/cpu.h: Likewise.\n-\t* bpf/cpuall.h: Likewise.\n-\t* bpf/decode-be.c: Likewise.\n-\t* bpf/decode-be.h: Likewise.\n-\t* bpf/decode-le.c: Likewise.\n-\t* bpf/decode-le.h: Likewise.\n-\t* bpf/defs-be.h: Likewise.\n-\t* bpf/defs-le.h: Likewise.\n-\t* bpf/sem-be.c: Likewise.\n-\t* bpf/sem-le.c: Likewise.\n-\n 2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \t    David Faust <david.faust@oracle.com>\n \n \t* configure.tgt (sim_arch): Add entry for bpf-*-*.\n \t* configure: Regenerate.\n \t* MAINTAINERS: Add maintainer for the BPF simulator.\n-\t* bpf/Makefile.in: New file.\n-\t* bpf/bpf-helpers.c: Likewise.\n-\t* bpf/bpf-helpers.def: Likewise.\n-\t* bpf/bpf-helpers.h: Likewise.\n-\t* bpf/bpf-sim.h: Likewise.\n-\t* bpf/bpf.c: Likewise.\n-\t* bpf/config.in: Likewise.\n-\t* bpf/configure.ac: Likewise.\n-\t* bpf/decode.h: Likewise.\n-\t* bpf/eng.h: Likewise.\n-\t* bpf/mloop.in: Likewise.\n-\t* bpf/sim-if.c: Likewise.\n-\t* bpf/sim-main.h: Likewise.\n-\t* bpf/traps.c: Likewise.\n-\t* bpf/configure: Generate.\n-\t* bpf/aclocal.m4: Likewise.\n \n 2019-12-19  Tom Tromey  <tromey@adacore.com>\n \n@@ -73,10 +22,6 @@\n \t* configure: Regenerated.\n \t* configure.tgt: Add PRU.\n \n-2019-09-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc/emul_generic.c (emul_add_tree_options): Delete old bfd code.\n-\n 2019-09-18  Alan Modra  <amodra@gmail.com>\n \n \t* common/sim-load.c, * common/sim-utils.c, * cris/sim-if.c,\n@@ -85,16 +30,6 @@\n \t* rl78/load.c, * rl78/trace.c, * rx/gdb-if.c, * rx/load.c,\n \t* rx/trace.c: Update throughout for bfd section macro changes.\n \n-2019-06-13  Stafford Horne  <shorne@gmail.com>\n-\n-\t* or1k/cpu.c: Regenerate.\n-\t* or1k/cpu.h: Regenerate.\n-\t* or1k/decode.c: Regenerate.\n-\t* or1k/decode.h: Regenerate.\n-\t* or1k/model.c: Regenerate.\n-\t* or1k/sem-switch.c: Regenerate.\n-\t* or1k/sem.c: Regenerate.\n-\n 2019-02-28  Joel Brobecker  <brobecker@adacore.com>\n \n \t* MAINTAINERS: Move Mike Frysinger to past maintainers' section.\n@@ -119,15 +54,6 @@\n \t* or1k/configure: Regenerate.\n \t* sh64/configure: Regenerate.\n \n-2018-10-05  Stafford Horne  <shorne@gmail.com>\n-\n-\t* or1k/cpu.h: Regenerate.\n-\t* or1k/decode.c: Regenerate.\n-\t* or1k/decode.h: Regenerate.\n-\t* or1k/model.c: Regenerate.\n-\t* or1k/sem-switch.c: Regenerate.\n-\t* or1k/sem.c: Regenerate:\n-\n 2018-07-20  Maciej W. Rozycki  <macro@mips.com>\n \n \t* MAINTAINERS: Update my e-mail address, downgrade to MIPS I-IV\n@@ -154,45 +80,11 @@\n \t    Peter Gavin  <pgavin@gmail.com>\n \n \t* configure: Regenerated.\n-\t* or1k/aclocal.m4: Generated.\n-\t* or1k/config.in: Generated.\n-\t* or1k/configure: Generated.\n-\n-2017-12-12  Stafford Horne  <shorne@gmail.com>\n-\t    Peter Gavin  <pgavin@gmail.com>\n-\n-\t* or1k/arch.c: Generated.\n-\t* or1k/arch.h: Generated.\n-\t* or1k/cpu.c: Generated.\n-\t* or1k/cpu.h: Generated.\n-\t* or1k/cpuall.h: Generated.\n-\t* or1k/decode.c: Generated.\n-\t* or1k/decode.h: Generated.\n-\t* or1k/model.c: Generated.\n-\t* or1k/sem-switch.c: Generated.\n-\t* or1k/sem.c: Generated.\n \n 2017-12-12  Stafford Horne  <shorne@gmail.com>\n \t    Peter Gavin  <pgavin@gmail.com>\n \n \t* configure.tgt: Add or1k sim.\n-\t* or1k/README: New file.\n-\t* or1k/Makefile.in: New file.\n-\t* or1k/configure.ac: New file.\n-\t* or1k/mloop.in: New file.\n-\t* or1k/or1k-sim.h: New file.\n-\t* or1k/or1k.c: New file.\n-\t* or1k/sim-if.c: New file.\n-\t* or1k/sim-main.h: New file.\n-\t* or1k/traps.c: New file.\n-\n-2017-11-01  James Bowman  <james.bowman@ftdichip.com>\n-\n-\t* ft32/interp.c (step_once): Add ft32 shortcode decoder.\n-\n-2017-10-12  James Bowman  <james.bowman@ftdichip.com>\n-\n-\t* ft32/interp.c (step_once): Replace FT32_FLD_K8 with K15.\n \n 2017-10-12  James Bowman  <james.bowman@ftdichip.com>\n \n@@ -557,32 +449,12 @@\n \n \t* README-HACKING: Add more sections.\n \n-2010-02-11  Doug Evans  <dje@sebabeach.org>\n-\n-\t* cris/cpuv10.h, * cris/cpuv32.h, * cris/cris-desc.c,\n-\t* cris/cris-desc.h, * cris/decodev10.c, * cris/decodev32.c,\n-\t* cris/modelv10.c, * cris/modelv32.c, * cris/semcrisv10f-switch.c,\n-\t* cris/semcrisv32f-switch.c: Regenerate.\n-\n 2010-01-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* avr/configure: Regenerate.\n \t* cris/configure: Regenerate.\n \t* microblaze/configure: Regenerate.\n \n-2010-01-02  Doug Evans  <dje@sebabeach.org>\n-\n-\t* cris/arch.c, * cris/arch.h, * cris/cpuall.h, * cris/cpuv10.c,\n-\t* cris/cpuv10.h, * cris/cpuv32.c, * cris/cpuv32.h, * cris/cris-desc.c,\n-\t* cris/cris-desc.h, * cris/cris-opc.h, * cris/decodev10.c,\n-\t* cris/decodev10.h, * cris/decodev32.c, * cris/decodev32.h,\n-\t* cris/modelv10.c, * cris/modelv32.c, * cris/semcrisv10f-switch.c,\n-\t* cris/semcrisv32f-switch.c: Regenerate, update copyright year.\n-\n-2010-01-01  Doug Evans  <dje@sebabeach.org>\n-\n-\t* cris/mloop.in: Fix copyright year update snafu.\n-\n 2009-11-24  Joel Brobecker  <brobecker@adacore.com>\n \n \t* common/aclocal.m4: Add include of ../../config/zlib.m4.\n@@ -602,54 +474,6 @@\n \t* configure.ac: Add entry for Renesas RX.\n \t* configure: Regenerate.\n \n-2009-11-22  Doug Evans  <dje@sebabeach.org>\n-\n-\t* cris/cpuall.h: Regenerate.\n-\t* cris/cpuv10.h: Regenerate.\n-\t* cris/cpuv32.h: Regenerate.\n-\t* cris/decodev10.c: Regenerate.\n-\t* cris/decodev10.h: Regenerate.\n-\t* cris/decodev32.c: Regenerate.\n-\t* cris/decodev32.h: Regenerate.\n-\n-2009-11-12  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* avr/interp.c (sim_write): Allow byte access.\n-\t(sim_read): Ditto.\n-\n-2009-11-12  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* avr/interp.c (sim_load): Clear memory before loading.\n-\n-2009-11-09  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* avr/interp.c (sim_resume): Fix typo for OP_ret.\n-\n-2009-10-23  Doug Evans  <dje@sebabeach.org>\n-\n-\t* cris/arch.c: Regenerate.\n-\t* cris/arch.h: Regenerate.\n-\t* cris/cpuall.h: Regenerate.\n-\t* cris/cpuv10.c: Regenerate.\n-\t* cris/cpuv10.h: Regenerate.\n-\t* cris/cpuv32.c: Regenerate.\n-\t* cris/cpuv32.h: Regenerate.\n-\t* cris/cris-desc.c: Regenerate.\n-\t* cris/cris-desc.h: Regenerate.\n-\t* cris/cris-opc.h: Regenerate.\n-\t* cris/decodev10.c: Regenerate.\n-\t* cris/decodev10.h: Regenerate.\n-\t* cris/decodev32.c: Regenerate.\n-\t* cris/decodev32.h: Regenerate.\n-\t* cris/modelv10.c: Regenerate.\n-\t* cris/modelv32.c: Regenerate.\n-\t* cris/semcrisv10f-switch.c: Regenerate.\n-\t* cris/semcrisv32f-switch.c: Regenerate.\n-\n-2009-10-22  Tristan Gingold  <gingold@adacore.com>\n-\n-\t* avr/interp.c (sim_stop): Return 1.\n-\n 2009-10-16  Doug Evans  <dje@sebabeach.org>\n \n \t* MAINTAINERS: Add myself as m32r maintainer.\n@@ -707,13 +531,6 @@\n \n \t* MAINTAINERS: Orphan ppc.\n \n-2009-05-08  Kevin Buettner  <kevinb@redhat.com>\n-\n-\t* m32c/gdb-if.c (m32c_signal_to_host): Rename to\n-\tm32c_signal_to_target.  Change signal return values from SIGILL,\n-\tSIGTRAP, SIGSEGV, etc. to TARGET_SIGNAL_ILL, TARGET_SIGNAL_TRAP,\n-\tTARGET_SIGNAL_SEGV, etc.  Fix all callers.\n-\n 2009-04-30  Anthony Green  <green@moxielogic.com>\n \n \t* MAINTAINERS: Add myself for the moxie port.\n@@ -724,9 +541,6 @@\n 2009-04-27  Tristan Gingold  <gingold@adacore.com>\n \n \t* avr: New directory.\n-\t* avr/interp.c, avr/Makefile.in, avr/configure.ac: New files.\n-\t* avr/config.in: New file, generated by autoheader.\n-\t* avr/configure: New file generated by autoconf.\n \t* configure.ac: Add avr.\n \t* configure: Regenerated.\n \n@@ -735,121 +549,6 @@\n \t* Makefile.in: Add dummy install-pdf, html, and\n \tinstall-html targets.\n \n-2009-01-18  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/sim-if.c: Include errno.h.\n-\t(cris_start_address, cris_program_offset): New variables.\n-\t(OPTION_CRIS_PROGRAM_OFFSET, OPTION_CRIS_STARTADDR): New option\n-\tenums.\n-\t(cris_options): New options --cris-program-offset and\n-\t--cris-start-address.\n-\t(cris_option_handler): Handle new options.\n-\t(cris_program_offset_write, cris_set_section_offset_iterator)\n-\t(cris_offset_sections, cris_offset_sections): New functions.\n-\t(sim_load): Use cris_program_offset_write as function argument to\n-\tcris_load_elf_file, not sim_write.\n-\t(struct offsetinfo): New struct.\n-\t(cris_handle_interpreter): Fix typo in comment.\n-\t(sim_open): Call cris_offset_sections as soon as the bfd of the\n-\tinfile is available.  Gate bfd validity checks on abfd non-NULL.\n-\t(sim_create_inferior): Let cris_start_address when != -1 override\n-\tother start-address choices.\n-\n-2009-01-06  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/traps.c (abort): Define to call sim_io_error.\n-\t(create_map): Make -1 imply a non-fixed address, not 0.  All\n-\tcallers changed.  Only prefer the next higher unmapped address if\n-\tthe last mapped address is no less than 0x40000000.  Check that\n-\tthe address to be mapped is not already mapped.  Update head\n-\tcomment.\n-\t(unmap_pages): Don't call abort when recursive call fails, just\n-\tnote and return an error if a page in the range couldn't be unmapped.\n-\t(cris_bmod_handler, h_supr_set_handler, h_supr_get_handler)\n-\t(schedule, make_first_thread, cris_pipe_empty): New local variable sd.\n-\t(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle\n-\tnon-MAP_FIXED argument overlapping existing map.  For MAP_FIXED,\n-\tdon't abort on page not being mapped.  Handle non-anon filemap\n-\twith length padded to pagesize.\n-\n-2009-01-03  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/sim-if.c (TARGET_AT_NULL, TARGET_AT_PHDR, TARGET_AT_PHENT)\n-\t(TARGET_AT_PHNUM, TARGET_AT_PAGESZ, TARGET_AT_BASE)\n-\t(TARGET_AT_FLAGS, TARGET_AT_ENTRY, TARGET_AT_UID, TARGET_AT_EUID)\n-\t(TARGET_AT_GID, TARGET_AT_EGID, TARGET_AT_HWCAP)\n-\t(TARGET_AT_CLKTCK): Remove redundant macros.\n-\t(AUX_ENT): Adjust to use standard ELF AT_* macros.\n-\t(AUX_ENTF): Ditto.  Remove always-0 middle argument.  Update all\n-\tcallers.\n-\t(sim_open): Also pass AT_SECURE.\n-\n-\t* cris/sim-main.h (struct _sim_cpu): New member\n-\tset_target_thread_data.\n-\t* cris/crisv32f.c (CRIS_TLS_REGISTER): Define.\n-\t* cris/crisv10f.c: Ditto.\n-\t* cris/cris-tmpl.c (MY (set_target_thread_data)): New function.\n-\t(MY (f_specific_init)): Set new _sim_cpu member to new function.\n-\t* cris/traps.c (TARGET_SYS_set_thread_area): Define.\n-\t(cris_break_13_handler) <case TARGET_SYS_set_thread_area>: New\n-\tcase.\n-\n-\t* cris/traps.c (TARGET_SYS_exit_group): Define.\n-\t(cris_break_13_handler): Handle it like the exit for the last\n-\tthread.\n-\n-\t* cris/traps.c (TARGET_UTSNAME): Update to 2009-01-01.\n-\t(TARGET_EPOCH): Update to match TARGET_UTSNAME.  Correct comment.\n-\t(cris_break_13_handler) <case TARGET_SYS_uname>: Update to\n-\t2.6.27.  Set machine field to the BFD printable name of the\n-\tmachine.\n-\n-\t* cris/traps.c (TARGET_MAP_DENYWRITE): Define.\n-\t(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle\n-\tTARGET_MAP_DENYWRITE.\n-\n-\t* cris/traps.c (TARGET_SYS_access, TARGET_R_OK, TARGET_W_OK)\n-\t(TARGET_X_OK, TARGET_F_OK): Define.\n-\t(cris_break_13_handler) <case TARGET_SYS_access>: New case.\n-\n-\t* cris/semcrisv32f-switch.c: Regenerate.\n-\n-2008-12-30  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/sim-if.c (sim_open): If sim_analyze_program fails, emit\n-\tjust a short CRIS-specific notice.  Tweak the wording for a\n-\tfailing architecture test.\n-\n-\t* cris/traps.c (TARGET_SYS_writev): New macro.\n-\t(is_mapped_only, cris_dump_map): New functions.\n-\t(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle more flags\n-\tand prot combinations and a non-zero page-offset.  If\n-\tTARGET_MAP_FIXED, unmap pages before mapping them.\n-\t<case TARGET_SYS_mprotect>: When checking, allow any length\n-\targument.  Don't actually do anything.\n-\t<case TARGET_SYS_writev>: New case.\n-\n-\t* cris/Makefile.in (SIM_OBJS): Remove sim-hload.o.\n-\t* cris/sim-if.c: Include elf-bfd.h.\n-\t(struct progbounds): New members end_loadmem, start_nonloadmem.\n-\t(xprintf, eprintf): New functions, copied from common/sim-load.c.\n-\t(cris_load_elf_file, sim_load, cris_get_progbounds): New functions.\n-\t(get_progbounds_iterator): Renamed from get_progbounds.  Make\n-\tstatic.  Update head comment.  Set new struct progbounds members.\n-\t(exec_load_addr, interp_load_addr, interp_start_addr): New static\n-\tvariables.\n-\t(aux_ent_phdr, aux_ent_phent, aux_ent_phnum, aux_ent_base)\n-\t(aux_ent_entry, cris_write_interp, cris_handle_interpreter): New\n-\tfunctions.\n-\t(sim_open): New constant array auxv_entries.  Rewrite AUX_ENT\n-\thandling to use auxv_entries.  Improve error message and checking\n-\tfor invalid programs.  Use new variable abfd for the program\n-\tinstead of for each access reaching into sd to get it.\n-\t(sim_create_inferior): If non-zero, use interp_start_addr instead\n-\tof the program start address.\n-\t(cris_disassemble_insn): Remove incorrect and unclear, supposedly\n-\tstale comment.  Always specify little-endian.\n-\n 2008-07-29  Nick Clifton  <nickc@redhat.com>\n \n \t* common/genmloop.sh: Add new parameter: -shell to specify the\n@@ -866,17 +565,6 @@\n \n \t* frv/mloop.in: Add missing start of line comment marker.\n \n-2008-07-11  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/configure: Regenerate to track ../common/common.m4 changes.\n-\t* cris/config.in: Ditto.\n-\n-2008-06-06  Vladimir Prus  <vladimir@codesourcery.com>\n-\t    Daniel Jacobowitz  <dan@codesourcery.com>\n-\t    Joseph Myers  <joseph@codesourcery.com>\n-\n-\t* cris/configure: Regenerate.\n-\n 2008-05-09  Olivier Hainque  <hainque@adacore.com>\n \n \t* ppc/altivec.igen (vperm): Latch inputs into temporaries.\n@@ -906,15 +594,6 @@\n \t* frv/frv.c (frvbf_cut): Only look at the six LSBs of\n \tcut_point.\n \n-2007-10-22  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,\n-\tcris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,\n-\tcris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,\n-\tcris/decodev10.h, cris/decodev32.c, cris/decodev32.h,\n-\tcris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,\n-\tcris/semcrisv32f-switch.c: Regenerate.\n-\n 2007-08-24  Joel Brobecker  <brobecker@adacore.com>\n \n \tSwitch the license of all files explicitly copyright the FSF\n@@ -924,11 +603,6 @@\n \n \t* Makefile.in: Add dummy \"pdf\" target.\n \n-2007-02-20  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/traps.c (dump_statistics): Change format for cycle numbers\n-\tto %llu and cast parameters to unsigned long long.\n-\n 2007-02-16  Thiemo Seufer  <ths@mips.com>\n \n \t* Makefile.in (FLAGS_TO_PASS, TARGET_FLAGS_TO_PASS): Add RUNTEST.\n@@ -958,54 +632,16 @@\n \n \t* MAINTAINERS: Add self as authorized committer for *.\n \n-2006-10-02  Edgar E. Iglesias  <edgar@axis.com>\n-\t    Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/cris-sim.h (enum cris_unknown_syscall_action_type)\n-\t(cris_unknown_syscall_action): Declare.\n-\t* cris/sim-if.c (cris_unknown_syscall_action): Define.\n-\t(cris_options): Add cris-unknown-syscall option.\n-\t(cris_option_handler): Correct comment about and error message for\n-\tinvalid --cris-cycles argument.  Handle --cris-unknown-syscall.\n-\t* cris/traps.c: Include stdarg.h\n-\t(cris_unknown_syscall): New function.\n-\t(cris_break_13_handler): Instead of sim_io_eprintf and\n-\tsim_engine_halt, call cris_unknown_syscall to handle more or less\n-\tunknown syscalls.  Adjust code as necessary to handle return\n-\tvalue.\n-\n 2006-09-30  Daniel Jacobowitz  <dan@codesourcery.com>\n \n \t* MAINTAINERS: Add Dave Brolley for sh64.\n \n-2006-09-30  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/traps.c (TARGET_PIPE_BUF): New macro.\n-\t(cris_pipe_empty): Correct initialization of \"remaining\".  Only\n-\tadjust the \"write\" return value if more than TARGET_PIPE_BUF bytes\n-\tare written.\n-\n-2006-09-29  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/configure.ac: Check for limits.h and sys/param.h.\n-\t* cris/configure, cris/config.in: Rebuild.\n-\t* cris/traps.c (SIM_PATHMAX): New macro.\n-\t(cris_break_13_handler): Use SIM_PATHMAX, not MAXPATHLEN.\n-\n 2006-08-08  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \t* configure.ac (sparc-*-rtems*|sparc-*-elf*): Enable erc32 simulator.\n \t* Makefile.in (FLAGS_TO_PASS): Include libdir.\n \t* configure: Regenerated.\n \n-2006-06-05  Daniel Jacobowitz  <dan@codesourcery.com>\n-\n-\t* cris/configure: Regenerated.\n-\n-2006-05-31  Daniel Jacobowitz  <dan@codesourcery.com>\n-\n-\t* cris/configure: Regenerated.\n-\n 2006-05-05  Andreas Schwab  <schwab@suse.de>\n \n \t* configure.ac (CFLAGS_FOR_BUILD): Set and substitute.\n@@ -1020,57 +656,10 @@\n \t* MAINTAINERS: Add an \"Authorized committers\" section, and list\n \tDJ Delorie for v850.\n \n-2006-04-08  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/crisv32f.c (MY (deliver_interrupt)): Set CCS to new_ccs.\n-\n-2006-04-03  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/dv-cris.c, cris/dv-rv.c, cris/rvdummy.c: New files.\n-\t* cris/Makefile.in (CONFIG_DEVICES): Remove redundant setting.\n-\t(dv-cris.o, dv-rv.o rvdummy$(EXEEXT), rvdummy.o): New rules.\n-\t(all): Depend on rvdummy$(EXEEXT).\n-\t* cris/configure.ac: Call SIM_AC_OPTION_WARNINGS.  Check for\n-\tsys/socket.h and sys/select.h.  Call SIM_AC_OPTION_HARDWARE,\n-\tdefault off.\n-\t* cris/configure: Regenerate.\n-\t* cris/cris-sim.h (cris_have_900000xxif): Declare here.\n-\t(enum cris_interrupt_type, crisv10deliver_interrupt)\n-\t(crisv32deliver_interrupt: New declarations.\n-\t* cris/cris-tmpl.c [WITH_HW] (MY (f_model_insn_after)): Call\n-\tsim_events_tickn and set state-events member work_pending when it's\n-\ttime for the next event.\n-\t[WITH_HW] (MY (f_specific_init)): Set CPU-model-specific\n-\tinterrupt-delivery function.\n-\t* cris/crisv10f.c (MY (deliver_interrupt)): New function.\n-\t* cris/crisv32f.c (MY (deliver_interrupt)): New function.\n-\t* cris/devices.c: Include hw-device.h.\n-\t(device_io_read_buffer) [WITH_HW]: Call hw_io_read_buffer.\n-\t(device_io_write_buffer): Only perform 0x900000xx-functions if\n-\tcris_have_900000xxif is nonzero.  Else if WITH_HW defined,\n-\tcall hw_io_write_buffer.  Add return 0 last in function.\n-\t* cris/sim-if.c (cris_have_900000xxif): Now global.\n-\t(sim_open) [WITH_HW]: Clear deliver_interrupt cpu member.\n-\tForce \"-model\" option, effectively.\n-\t* cris/sim-main.h (cris_interrupt_delivery_fn): New type.\n-\t(struct _sim_cpu) [WITH_HW]: New member deliver_interrupt.\n-\n-2006-04-02  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/Makefile.in (CRISV10F_OBJS): Remove semcrisv10f-switch.o.\n-\t(CRISV32F_OBJS): Remove semcrisv32f-switch.o.\n-\t(semcrisv10f-switch.o, semcrisv32f-switch.o: Remove dependency rules.\n-\n 2006-03-13  DJ Delorie  <dj@redhat.com>\n \n \t* MAINTAINERS: Add self as m32c sim maintainer.\n \n-2006-02-23  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/traps.c (syscall_map): Remove CB_SYS_time / TARGET_SYS_time\n-\tmapping.\n-\t(cris_break_13_handler) <case TARGET_SYS_time>: New case.\n-\n 2006-01-23  Jim Blandy  <jimb@redhat.com>\n \n \tAdd simulator for Renesas M32C and M16C.\n@@ -1079,59 +668,6 @@\n \t* configure.ac: Add entry for Renesas M32C.\n \t* configure: Regenerate.\n \n-2006-01-10  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/cris-tmpl.c (MY (f_model_insn_before)): Only display basic\n-\tcycle count for the current insn.\n-\n-2005-12-06  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/cpuv10.h, cris/cpuv32.h, cris/cris-desc.c, cris/cris-opc.h,\n-\tcris/decodev10.c, cris/decodev10.h, cris/decodev32.c,\n-\tcris/decodev32.h, cris/modelv10.c, cris/modelv32.c,\n-\tcris/semcrisv10f-switch.c, cris/semcrisv32f-switch.c: Regenerate.\n-\n-2005-12-05  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,\n-\tcris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,\n-\tcris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,\n-\tcris/decodev10.h, cris/decodev32.c, cris/decodev32.h,\n-\tcris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,\n-\tcris/semcrisv32f-switch.c: Regenerate.\n-\n-2005-11-20  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/traps.c (TARGET_O_RDONLY, TARGET_O_WRONLY): Define.\n-\t(open_map): Use TARGET_O_ACCMODE, TARGET_O_RDONLY and\n-\tTARGET_O_WRONLY.\n-\t(cris_break_13_handler) <case TARGET_SYS_fcntl>: Add support for\n-\tF_GETFL on fd 0, 1 and 2.\n-\n-2005-11-17  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/sim-main.h (struct _sim_cpu): New members last_syscall,\n-\tlast_open_fd, last_open_flags.\n-\t* cris/traps.c: Don't include targ-vals.h.\n-\t(TARGET_O_ACCMODE): Define.\n-\t(cris_break_13_handler): Set new _sim_cpu members.\n-\t<case TARGET_SYS_fcntl>: Support special case of F_GETFL.\n-\tRearrange code as switch.  Emit \"unimplemented\" abort for\n-\tunimplemented fcntl calls.\n-\n-\t* cris/traps.c (TARGET_SYS_stat): Define.\n-\t(syscall_stat32_map): Add entry for TARGET_SYS_stat.\n-\t(cris_break_13_handler) <case TARGET_SYS_stat>: New case.\n-\n-2005-11-16  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/cris-tmpl.c (MY (f_model_insn_before)): Make sure only the\n-\tlow 32 bits are used after an unsigned long cast.\n-\n-2005-05-28  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/Makefile.in (stamp-v32fmloop): Depend on stamp-v10fmloop.\n-\n 2005-05-26  Chris Demetriou  <cgd@netbsd.org>\n \n \t* MAINTAINERS: Update my mail address, move myself to the\n@@ -1156,12 +692,6 @@\n \n \t* common/Make-common.in: Add $(EXEEXT) to \"run\".\n \n-2005-04-18  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/traps.c (cris_break_13_handler) <case TARGET_SYS_mmap2>:\n-\tFor ((len & 8191) != 0 && fd == (USI) -1), don't say this isn't\n-\timplemented.  In call to create_map, pad length argument to 8k.\n-\n 2005-04-15  Corinna Vinschen  <vinschen@redhat.com>\n \n \t* configure.ac: Add explicit sh64 case.\n@@ -1171,26 +701,6 @@\n \n \t* arm/wrapper.c: Provide SIGTRAP and SIGBUS.\n \n-2005-03-24  Hans-Peter Nilsson  <hp@axis.com>\n-\n-\t* cris/Makefile.in (stamp-v10fcpu, stamp-v32fcpu): Add kludge to\n-\tinclude cgen-ops.h in decodev10.c and decodev32.c.\n-\t* cris/sim-main.h: Don't include cgen-ops.h here.\n-\t* cris/arch.c, cris/arch.h, cris/cpuall.h, cris/cpuv10.c,\n-\tcris/cpuv10.h, cris/cpuv32.c, cris/cpuv32.h, cris/cris-desc.c,\n-\tcris/cris-desc.h, cris/cris-opc.h, cris/decodev10.c,\n-\tcris/decodev10.h, cris/decodev32.c, cris/decodev32.h,\n-\tcris/modelv10.c, cris/modelv32.c, cris/semcrisv10f-switch.c,\n-\tcris/semcrisv32f-switch.c: Regenerate.\n-\n-\t* cris/traps.c (cris_break_13_handler) <case\n-\tTARGET_SYS_rt_sigaction>: Rename sa_handler, sa_flags,\n-\tsa_restorer, sa_mask_low, sa_mask_high to target_sa_handler etc.\n-\n-2005-03-23  Mark Kettenis  <kettenis@gnu.org>\n-\n-\t* cris/configure: Regenerate.\n-\n 2005-02-28  Jim Blandy  <jimb@redhat.com>\n \n \t* d10v/configure.ac, igen/configure.ac, m68hc11/configure.ac,"
    },
    {
      "sha": "d03bc95a7e079f681049601e056ff77c8675ff2c",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -282,3 +282,26 @@\n 2010-04-14  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c (sim_write): Add const to buffer arg.\n+\n+2009-11-12  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* interp.c (sim_write): Allow byte access.\n+\t(sim_read): Ditto.\n+\n+2009-11-12  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* interp.c (sim_load): Clear memory before loading.\n+\n+2009-11-09  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* interp.c (sim_resume): Fix typo for OP_ret.\n+\n+2009-10-22  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* interp.c (sim_stop): Return 1.\n+\n+2009-04-27  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* interp.c, Makefile.in, configure.ac: New files.\n+\t* config.in: New file, generated by autoheader.\n+\t* configure: New file generated by autoconf."
    },
    {
      "sha": "e5d820c5a14282feca107ed1865da2d5585cd41d",
      "filename": "sim/bpf/ChangeLog",
      "status": "added",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -0,0 +1,54 @@\n+2020-11-01  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* configure: Re-generate.\n+\n+2020-09-08  David Faust  <david.faust@oracle.com>\n+\n+\t* sem-be.c: Regenerate.\n+\t* sem-le.c: Likewise.\n+\n+2020-09-03  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf.c: Include bpf-helpers.h.\n+\t* bpf-helpers.h: Provide a prototype for bpf_trace_printk.\n+\t* configure.ac: Set simulator bitsize to 64.\n+\t* configure (includedir): Regenerate.\n+\t* sim-if.c: Include stdlib.h.\n+\t* traps.c: Likewise.\n+\n+2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\t    David Faust <david.faust@oracle.com>\n+\n+\t* arch.c: Likewise.\n+\t* arch.h: Likewise.\n+\t* cpu.c: Likewise.\n+\t* cpu.h: Likewise.\n+\t* cpuall.h: Likewise.\n+\t* decode-be.c: Likewise.\n+\t* decode-be.h: Likewise.\n+\t* decode-le.c: Likewise.\n+\t* decode-le.h: Likewise.\n+\t* defs-be.h: Likewise.\n+\t* defs-le.h: Likewise.\n+\t* sem-be.c: Likewise.\n+\t* sem-le.c: Likewise.\n+\n+2020-08-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\t    David Faust <david.faust@oracle.com>\n+\n+\t* Makefile.in: New file.\n+\t* bpf-helpers.c: Likewise.\n+\t* bpf-helpers.def: Likewise.\n+\t* bpf-helpers.h: Likewise.\n+\t* bpf-sim.h: Likewise.\n+\t* bpf.c: Likewise.\n+\t* config.in: Likewise.\n+\t* configure.ac: Likewise.\n+\t* decode.h: Likewise.\n+\t* eng.h: Likewise.\n+\t* mloop.in: Likewise.\n+\t* sim-if.c: Likewise.\n+\t* sim-main.h: Likewise.\n+\t* traps.c: Likewise.\n+\t* configure: Generate.\n+\t* aclocal.m4: Likewise."
    },
    {
      "sha": "81f707d1af4bcb04c16b0ee1d55001c67822e83c",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 355,
      "deletions": 0,
      "changes": 355,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -384,3 +384,358 @@\n 2010-03-30  Mike Frysinger  <vapier@gentoo.org>\n \n \t* devices.c (device_error): Add const to message.\n+\n+2010-02-11  Doug Evans  <dje@sebabeach.org>\n+\n+\t* cpuv10.h, * cpuv32.h, * cris-desc.c,\n+\t* cris-desc.h, * decodev10.c, * decodev32.c,\n+\t* modelv10.c, * modelv32.c, * semcrisv10f-switch.c,\n+\t* semcrisv32f-switch.c: Regenerate.\n+\n+2010-01-02  Doug Evans  <dje@sebabeach.org>\n+\n+\t* arch.c, * arch.h, * cpuall.h, * cpuv10.c,\n+\t* cpuv10.h, * cpuv32.c, * cpuv32.h, * cris-desc.c,\n+\t* cris-desc.h, * cris-opc.h, * decodev10.c,\n+\t* decodev10.h, * decodev32.c, * decodev32.h,\n+\t* modelv10.c, * modelv32.c, * semcrisv10f-switch.c,\n+\t* semcrisv32f-switch.c: Regenerate, update copyright year.\n+\n+2010-01-01  Doug Evans  <dje@sebabeach.org>\n+\n+\t* mloop.in: Fix copyright year update snafu.\n+\n+2009-11-22  Doug Evans  <dje@sebabeach.org>\n+\n+\t* cpuall.h: Regenerate.\n+\t* cpuv10.h: Regenerate.\n+\t* cpuv32.h: Regenerate.\n+\t* decodev10.c: Regenerate.\n+\t* decodev10.h: Regenerate.\n+\t* decodev32.c: Regenerate.\n+\t* decodev32.h: Regenerate.\n+\n+2009-10-23  Doug Evans  <dje@sebabeach.org>\n+\n+\t* arch.c: Regenerate.\n+\t* arch.h: Regenerate.\n+\t* cpuall.h: Regenerate.\n+\t* cpuv10.c: Regenerate.\n+\t* cpuv10.h: Regenerate.\n+\t* cpuv32.c: Regenerate.\n+\t* cpuv32.h: Regenerate.\n+\t* cris-desc.c: Regenerate.\n+\t* cris-desc.h: Regenerate.\n+\t* cris-opc.h: Regenerate.\n+\t* decodev10.c: Regenerate.\n+\t* decodev10.h: Regenerate.\n+\t* decodev32.c: Regenerate.\n+\t* decodev32.h: Regenerate.\n+\t* modelv10.c: Regenerate.\n+\t* modelv32.c: Regenerate.\n+\t* semcrisv10f-switch.c: Regenerate.\n+\t* semcrisv32f-switch.c: Regenerate.\n+\n+2009-01-18  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* sim-if.c: Include errno.h.\n+\t(cris_start_address, cris_program_offset): New variables.\n+\t(OPTION_CRIS_PROGRAM_OFFSET, OPTION_CRIS_STARTADDR): New option\n+\tenums.\n+\t(cris_options): New options --cris-program-offset and\n+\t--cris-start-address.\n+\t(cris_option_handler): Handle new options.\n+\t(cris_program_offset_write, cris_set_section_offset_iterator)\n+\t(cris_offset_sections, cris_offset_sections): New functions.\n+\t(sim_load): Use cris_program_offset_write as function argument to\n+\tcris_load_elf_file, not sim_write.\n+\t(struct offsetinfo): New struct.\n+\t(cris_handle_interpreter): Fix typo in comment.\n+\t(sim_open): Call cris_offset_sections as soon as the bfd of the\n+\tinfile is available.  Gate bfd validity checks on abfd non-NULL.\n+\t(sim_create_inferior): Let cris_start_address when != -1 override\n+\tother start-address choices.\n+\n+2009-01-06  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* traps.c (abort): Define to call sim_io_error.\n+\t(create_map): Make -1 imply a non-fixed address, not 0.  All\n+\tcallers changed.  Only prefer the next higher unmapped address if\n+\tthe last mapped address is no less than 0x40000000.  Check that\n+\tthe address to be mapped is not already mapped.  Update head\n+\tcomment.\n+\t(unmap_pages): Don't call abort when recursive call fails, just\n+\tnote and return an error if a page in the range couldn't be unmapped.\n+\t(cris_bmod_handler, h_supr_set_handler, h_supr_get_handler)\n+\t(schedule, make_first_thread, cris_pipe_empty): New local variable sd.\n+\t(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle\n+\tnon-MAP_FIXED argument overlapping existing map.  For MAP_FIXED,\n+\tdon't abort on page not being mapped.  Handle non-anon filemap\n+\twith length padded to pagesize.\n+\n+2009-01-03  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* sim-if.c (TARGET_AT_NULL, TARGET_AT_PHDR, TARGET_AT_PHENT)\n+\t(TARGET_AT_PHNUM, TARGET_AT_PAGESZ, TARGET_AT_BASE)\n+\t(TARGET_AT_FLAGS, TARGET_AT_ENTRY, TARGET_AT_UID, TARGET_AT_EUID)\n+\t(TARGET_AT_GID, TARGET_AT_EGID, TARGET_AT_HWCAP)\n+\t(TARGET_AT_CLKTCK): Remove redundant macros.\n+\t(AUX_ENT): Adjust to use standard ELF AT_* macros.\n+\t(AUX_ENTF): Ditto.  Remove always-0 middle argument.  Update all\n+\tcallers.\n+\t(sim_open): Also pass AT_SECURE.\n+\n+\t* sim-main.h (struct _sim_cpu): New member\n+\tset_target_thread_data.\n+\t* crisv32f.c (CRIS_TLS_REGISTER): Define.\n+\t* crisv10f.c: Ditto.\n+\t* cris-tmpl.c (MY (set_target_thread_data)): New function.\n+\t(MY (f_specific_init)): Set new _sim_cpu member to new function.\n+\t* traps.c (TARGET_SYS_set_thread_area): Define.\n+\t(cris_break_13_handler) <case TARGET_SYS_set_thread_area>: New\n+\tcase.\n+\n+\t* traps.c (TARGET_SYS_exit_group): Define.\n+\t(cris_break_13_handler): Handle it like the exit for the last\n+\tthread.\n+\n+\t* traps.c (TARGET_UTSNAME): Update to 2009-01-01.\n+\t(TARGET_EPOCH): Update to match TARGET_UTSNAME.  Correct comment.\n+\t(cris_break_13_handler) <case TARGET_SYS_uname>: Update to\n+\t2.6.27.  Set machine field to the BFD printable name of the\n+\tmachine.\n+\n+\t* traps.c (TARGET_MAP_DENYWRITE): Define.\n+\t(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle\n+\tTARGET_MAP_DENYWRITE.\n+\n+\t* traps.c (TARGET_SYS_access, TARGET_R_OK, TARGET_W_OK)\n+\t(TARGET_X_OK, TARGET_F_OK): Define.\n+\t(cris_break_13_handler) <case TARGET_SYS_access>: New case.\n+\n+\t* semcrisv32f-switch.c: Regenerate.\n+\n+2008-12-30  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* sim-if.c (sim_open): If sim_analyze_program fails, emit\n+\tjust a short CRIS-specific notice.  Tweak the wording for a\n+\tfailing architecture test.\n+\n+\t* traps.c (TARGET_SYS_writev): New macro.\n+\t(is_mapped_only, cris_dump_map): New functions.\n+\t(cris_break_13_handler) <case TARGET_SYS_mmap2>: Handle more flags\n+\tand prot combinations and a non-zero page-offset.  If\n+\tTARGET_MAP_FIXED, unmap pages before mapping them.\n+\t<case TARGET_SYS_mprotect>: When checking, allow any length\n+\targument.  Don't actually do anything.\n+\t<case TARGET_SYS_writev>: New case.\n+\n+\t* Makefile.in (SIM_OBJS): Remove sim-hload.o.\n+\t* sim-if.c: Include elf-bfd.h.\n+\t(struct progbounds): New members end_loadmem, start_nonloadmem.\n+\t(xprintf, eprintf): New functions, copied from common/sim-load.c.\n+\t(cris_load_elf_file, sim_load, cris_get_progbounds): New functions.\n+\t(get_progbounds_iterator): Renamed from get_progbounds.  Make\n+\tstatic.  Update head comment.  Set new struct progbounds members.\n+\t(exec_load_addr, interp_load_addr, interp_start_addr): New static\n+\tvariables.\n+\t(aux_ent_phdr, aux_ent_phent, aux_ent_phnum, aux_ent_base)\n+\t(aux_ent_entry, cris_write_interp, cris_handle_interpreter): New\n+\tfunctions.\n+\t(sim_open): New constant array auxv_entries.  Rewrite AUX_ENT\n+\thandling to use auxv_entries.  Improve error message and checking\n+\tfor invalid programs.  Use new variable abfd for the program\n+\tinstead of for each access reaching into sd to get it.\n+\t(sim_create_inferior): If non-zero, use interp_start_addr instead\n+\tof the program start address.\n+\t(cris_disassemble_insn): Remove incorrect and unclear, supposedly\n+\tstale comment.  Always specify little-endian.\n+\n+2008-07-11  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* configure: Regenerate to track ../common/common.m4 changes.\n+\t* config.in: Ditto.\n+\n+2008-06-06  Vladimir Prus  <vladimir@codesourcery.com>\n+\t    Daniel Jacobowitz  <dan@codesourcery.com>\n+\t    Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure: Regenerate.\n+\n+2007-10-22  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* arch.c, arch.h, cpuall.h, cpuv10.c,\n+\tcpuv10.h, cpuv32.c, cpuv32.h, cris-desc.c,\n+\tcris-desc.h, cris-opc.h, decodev10.c,\n+\tdecodev10.h, decodev32.c, decodev32.h,\n+\tmodelv10.c, modelv32.c, semcrisv10f-switch.c,\n+\tsemcrisv32f-switch.c: Regenerate.\n+\n+2007-02-20  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* traps.c (dump_statistics): Change format for cycle numbers\n+\tto %llu and cast parameters to unsigned long long.\n+\n+2006-10-02  Edgar E. Iglesias  <edgar@axis.com>\n+\t    Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* cris-sim.h (enum cris_unknown_syscall_action_type)\n+\t(cris_unknown_syscall_action): Declare.\n+\t* sim-if.c (cris_unknown_syscall_action): Define.\n+\t(cris_options): Add cris-unknown-syscall option.\n+\t(cris_option_handler): Correct comment about and error message for\n+\tinvalid --cris-cycles argument.  Handle --cris-unknown-syscall.\n+\t* traps.c: Include stdarg.h\n+\t(cris_unknown_syscall): New function.\n+\t(cris_break_13_handler): Instead of sim_io_eprintf and\n+\tsim_engine_halt, call cris_unknown_syscall to handle more or less\n+\tunknown syscalls.  Adjust code as necessary to handle return\n+\tvalue.\n+\n+2006-09-30  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* traps.c (TARGET_PIPE_BUF): New macro.\n+\t(cris_pipe_empty): Correct initialization of \"remaining\".  Only\n+\tadjust the \"write\" return value if more than TARGET_PIPE_BUF bytes\n+\tare written.\n+\n+2006-09-29  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* configure.ac: Check for limits.h and sys/param.h.\n+\t* configure, config.in: Rebuild.\n+\t* traps.c (SIM_PATHMAX): New macro.\n+\t(cris_break_13_handler): Use SIM_PATHMAX, not MAXPATHLEN.\n+\n+2006-06-05  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* configure: Regenerated.\n+\n+2006-05-31  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\t* configure: Regenerated.\n+\n+2006-04-08  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* crisv32f.c (MY (deliver_interrupt)): Set CCS to new_ccs.\n+\n+2006-04-03  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* dv-cris.c, dv-rv.c, rvdummy.c: New files.\n+\t* Makefile.in (CONFIG_DEVICES): Remove redundant setting.\n+\t(dv-cris.o, dv-rv.o rvdummy$(EXEEXT), rvdummy.o): New rules.\n+\t(all): Depend on rvdummy$(EXEEXT).\n+\t* configure.ac: Call SIM_AC_OPTION_WARNINGS.  Check for\n+\tsys/socket.h and sys/select.h.  Call SIM_AC_OPTION_HARDWARE,\n+\tdefault off.\n+\t* configure: Regenerate.\n+\t* cris-sim.h (cris_have_900000xxif): Declare here.\n+\t(enum cris_interrupt_type, crisv10deliver_interrupt)\n+\t(crisv32deliver_interrupt: New declarations.\n+\t* cris-tmpl.c [WITH_HW] (MY (f_model_insn_after)): Call\n+\tsim_events_tickn and set state-events member work_pending when it's\n+\ttime for the next event.\n+\t[WITH_HW] (MY (f_specific_init)): Set CPU-model-specific\n+\tinterrupt-delivery function.\n+\t* crisv10f.c (MY (deliver_interrupt)): New function.\n+\t* crisv32f.c (MY (deliver_interrupt)): New function.\n+\t* devices.c: Include hw-device.h.\n+\t(device_io_read_buffer) [WITH_HW]: Call hw_io_read_buffer.\n+\t(device_io_write_buffer): Only perform 0x900000xx-functions if\n+\tcris_have_900000xxif is nonzero.  Else if WITH_HW defined,\n+\tcall hw_io_write_buffer.  Add return 0 last in function.\n+\t* sim-if.c (cris_have_900000xxif): Now global.\n+\t(sim_open) [WITH_HW]: Clear deliver_interrupt cpu member.\n+\tForce \"-model\" option, effectively.\n+\t* sim-main.h (cris_interrupt_delivery_fn): New type.\n+\t(struct _sim_cpu) [WITH_HW]: New member deliver_interrupt.\n+\n+2006-04-02  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* Makefile.in (CRISV10F_OBJS): Remove semcrisv10f-switch.o.\n+\t(CRISV32F_OBJS): Remove semcrisv32f-switch.o.\n+\t(semcrisv10f-switch.o, semcrisv32f-switch.o: Remove dependency rules.\n+\n+2006-02-23  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* traps.c (syscall_map): Remove CB_SYS_time / TARGET_SYS_time\n+\tmapping.\n+\t(cris_break_13_handler) <case TARGET_SYS_time>: New case.\n+\n+2006-01-10  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* cris-tmpl.c (MY (f_model_insn_before)): Only display basic\n+\tcycle count for the current insn.\n+\n+2005-12-06  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* cpuv10.h, cpuv32.h, cris-desc.c, cris-opc.h,\n+\tdecodev10.c, decodev10.h, decodev32.c,\n+\tdecodev32.h, modelv10.c, modelv32.c,\n+\tsemcrisv10f-switch.c, semcrisv32f-switch.c: Regenerate.\n+\n+2005-12-05  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* arch.c, arch.h, cpuall.h, cpuv10.c,\n+\tcpuv10.h, cpuv32.c, cpuv32.h, cris-desc.c,\n+\tcris-desc.h, cris-opc.h, decodev10.c,\n+\tdecodev10.h, decodev32.c, decodev32.h,\n+\tmodelv10.c, modelv32.c, semcrisv10f-switch.c,\n+\tsemcrisv32f-switch.c: Regenerate.\n+\n+2005-11-20  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* traps.c (TARGET_O_RDONLY, TARGET_O_WRONLY): Define.\n+\t(open_map): Use TARGET_O_ACCMODE, TARGET_O_RDONLY and\n+\tTARGET_O_WRONLY.\n+\t(cris_break_13_handler) <case TARGET_SYS_fcntl>: Add support for\n+\tF_GETFL on fd 0, 1 and 2.\n+\n+2005-11-17  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* sim-main.h (struct _sim_cpu): New members last_syscall,\n+\tlast_open_fd, last_open_flags.\n+\t* traps.c: Don't include targ-vals.h.\n+\t(TARGET_O_ACCMODE): Define.\n+\t(cris_break_13_handler): Set new _sim_cpu members.\n+\t<case TARGET_SYS_fcntl>: Support special case of F_GETFL.\n+\tRearrange code as switch.  Emit \"unimplemented\" abort for\n+\tunimplemented fcntl calls.\n+\n+\t* traps.c (TARGET_SYS_stat): Define.\n+\t(syscall_stat32_map): Add entry for TARGET_SYS_stat.\n+\t(cris_break_13_handler) <case TARGET_SYS_stat>: New case.\n+\n+2005-11-16  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* cris-tmpl.c (MY (f_model_insn_before)): Make sure only the\n+\tlow 32 bits are used after an unsigned long cast.\n+\n+2005-05-28  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* Makefile.in (stamp-v32fmloop): Depend on stamp-v10fmloop.\n+\n+2005-04-18  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* traps.c (cris_break_13_handler) <case TARGET_SYS_mmap2>:\n+\tFor ((len & 8191) != 0 && fd == (USI) -1), don't say this isn't\n+\timplemented.  In call to create_map, pad length argument to 8k.\n+\n+2005-03-24  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* Makefile.in (stamp-v10fcpu, stamp-v32fcpu): Add kludge to\n+\tinclude cgen-ops.h in decodev10.c and decodev32.c.\n+\t* sim-main.h: Don't include cgen-ops.h here.\n+\t* arch.c, arch.h, cpuall.h, cpuv10.c,\n+\tcpuv10.h, cpuv32.c, cpuv32.h, cris-desc.c,\n+\tcris-desc.h, cris-opc.h, decodev10.c,\n+\tdecodev10.h, decodev32.c, decodev32.h,\n+\tmodelv10.c, modelv32.c, semcrisv10f-switch.c,\n+\tsemcrisv32f-switch.c: Regenerate.\n+\n+\t* traps.c (cris_break_13_handler) <case\n+\tTARGET_SYS_rt_sigaction>: Rename sa_handler, sa_flags,\n+\tsa_restorer, sa_mask_low, sa_mask_high to target_sa_handler etc.\n+\n+2005-03-23  Mark Kettenis  <kettenis@gnu.org>\n+\n+\t* configure: Regenerate."
    },
    {
      "sha": "bc768d5e421396fec2c62e23a50a4a12e651e909",
      "filename": "sim/ft32/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/ft32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/ft32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -2,6 +2,14 @@\n \n \t* configure: Regenerate.\n \n+2017-11-01  James Bowman  <james.bowman@ftdichip.com>\n+\n+\t* interp.c (step_once): Add ft32 shortcode decoder.\n+\n+2017-10-12  James Bowman  <james.bowman@ftdichip.com>\n+\n+\t* interp.c (step_once): Replace FT32_FLD_K8 with K15.\n+\n 2017-09-06  John Baldwin  <jhb@FreeBSD.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "86cd750eede3fd093917b3364a00f4f81461b743",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -269,6 +269,13 @@\n \t(m32c_sim_restore_console): Disable if no termios.\n \t(mem_get_byte): Disable console input if no termios.\n \n+2009-05-08  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* gdb-if.c (m32c_signal_to_host): Rename to\n+\tm32c_signal_to_target.  Change signal return values from SIGILL,\n+\tSIGTRAP, SIGSEGV, etc. to TARGET_SIGNAL_ILL, TARGET_SIGNAL_TRAP,\n+\tTARGET_SIGNAL_SEGV, etc.  Fix all callers.\n+\n 2009-01-06  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \t* r8c.opc, m32c.opc: Add parentheses to remove warnings.\n@@ -406,5 +413,3 @@\n \t* syscalls.h: New.\n \t* trace.c: New.\n \t* trace.h: New.\n-\n-"
    },
    {
      "sha": "c4b103298eddb8b94f7522671f0adaa34f0f8b06",
      "filename": "sim/or1k/ChangeLog",
      "status": "added",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -0,0 +1,52 @@\n+2019-06-13  Stafford Horne  <shorne@gmail.com>\n+\n+\t* cpu.c: Regenerate.\n+\t* cpu.h: Regenerate.\n+\t* decode.c: Regenerate.\n+\t* decode.h: Regenerate.\n+\t* model.c: Regenerate.\n+\t* sem-switch.c: Regenerate.\n+\t* sem.c: Regenerate.\n+\n+2018-10-05  Stafford Horne  <shorne@gmail.com>\n+\n+\t* cpu.h: Regenerate.\n+\t* decode.c: Regenerate.\n+\t* decode.h: Regenerate.\n+\t* model.c: Regenerate.\n+\t* sem-switch.c: Regenerate.\n+\t* sem.c: Regenerate:\n+\n+2017-12-12  Stafford Horne  <shorne@gmail.com>\n+\t    Peter Gavin  <pgavin@gmail.com>\n+\n+\t* aclocal.m4: Generated.\n+\t* config.in: Generated.\n+\t* configure: Generated.\n+\n+2017-12-12  Stafford Horne  <shorne@gmail.com>\n+\t    Peter Gavin  <pgavin@gmail.com>\n+\n+\t* arch.c: Generated.\n+\t* arch.h: Generated.\n+\t* cpu.c: Generated.\n+\t* cpu.h: Generated.\n+\t* cpuall.h: Generated.\n+\t* decode.c: Generated.\n+\t* decode.h: Generated.\n+\t* model.c: Generated.\n+\t* sem-switch.c: Generated.\n+\t* sem.c: Generated.\n+\n+2017-12-12  Stafford Horne  <shorne@gmail.com>\n+\t    Peter Gavin  <pgavin@gmail.com>\n+\n+\t* README: New file.\n+\t* Makefile.in: New file.\n+\t* configure.ac: New file.\n+\t* mloop.in: New file.\n+\t* or1k-sim.h: New file.\n+\t* or1k.c: New file.\n+\t* sim-if.c: New file.\n+\t* sim-main.h: New file.\n+\t* traps.c: New file."
    },
    {
      "sha": "d0d96941d646606b75780bbf9697c874f28ead22",
      "filename": "sim/ppc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/ppc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/ppc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -37,6 +37,10 @@\n \tPR build/24572:\n \t* Makefile.in (install-strip): New target.\n \n+2019-09-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* emul_generic.c (emul_add_tree_options): Delete old bfd code.\n+\n 2019-01-26  Tom Tromey  <tom@tromey.com>\n \n \t* Makefile.in (version.c): Use sim's create-version.sh."
    },
    {
      "sha": "4767062a9bf2b4b15fd9c3a3453eb781e8d88a80",
      "filename": "sim/testsuite/ChangeLog",
      "status": "modified",
      "additions": 1,
      "deletions": 17,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -15,27 +15,11 @@\n \t* configure: Regnerate.\n \t* configure.ac (AC_CONFIG_AUX_DIR): Update.\n \n-2020-09-08  David Faust  <david.faust@oracle.com>\n-\n-\t* sim/bpf/alu.s: Correct div and mod tests.\n-\t* sim/bpf/alu32.s: Likewise.\n-\n 2020-08-04  David Faust  <david.faust@oracle.com>\n \t    Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* configure: Regenerate.\n-\t* sim/bpf/allinsn.exp: New file.\n-\t* sim/bpf/alu.s: Likewise.\n-\t* sim/bpf/alu32.s: Likewise.\n-\t* sim/bpf/endbe.s: Likewise.\n-\t* sim/bpf/endle.s: Likewise.\n-\t* sim/bpf/jmp.s: Likewise.\n-\t* sim/bpf/jmp32.s: Likewise.\n-\t* sim/bpf/ldabs.s: Likewise.\n-\t* sim/bpf/mem.s: Likewise.\n-\t* sim/bpf/mov.s: Likewise.\n-\t* sim/bpf/testutils.inc: Likewise.\n-\t* sim/bpf/xadd.s: Likewise.\n+\t* sim/bpf: New directory.\n \n 2020-07-29  Simon Marchi  <simon.marchi@efficios.com>\n "
    },
    {
      "sha": "17dd79b468a75c88e0a40cfd56aa4bc391d14571",
      "filename": "sim/testsuite/sim/bpf/ChangeLog",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8e278da2d58c48b59d79b9f23229412d964848/sim/testsuite/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8e278da2d58c48b59d79b9f23229412d964848/sim/testsuite/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/bpf/ChangeLog?ref=0f8e278da2d58c48b59d79b9f23229412d964848",
      "patch": "@@ -0,0 +1,20 @@\n+2020-09-08  David Faust  <david.faust@oracle.com>\n+\n+\t* alu.s: Correct div and mod tests.\n+\t* alu32.s: Likewise.\n+\n+2020-08-04  David Faust  <david.faust@oracle.com>\n+\t    Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* allinsn.exp: New file.\n+\t* alu.s: Likewise.\n+\t* alu32.s: Likewise.\n+\t* endbe.s: Likewise.\n+\t* endle.s: Likewise.\n+\t* jmp.s: Likewise.\n+\t* jmp32.s: Likewise.\n+\t* ldabs.s: Likewise.\n+\t* mem.s: Likewise.\n+\t* mov.s: Likewise.\n+\t* testutils.inc: Likewise.\n+\t* xadd.s: Likewise."
    }
  ]
}