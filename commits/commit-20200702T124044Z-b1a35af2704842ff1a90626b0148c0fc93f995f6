{
  "sha": "b1a35af2704842ff1a90626b0148c0fc93f995f6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjFhMzVhZjI3MDQ4NDJmZjFhOTA2MjZiMDE0OGMwZmM5M2Y5OTVmNg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-07-02T12:37:26Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-07-02T12:40:44Z"
    },
    "message": "gdb: remove unused fetch_inferior_event and inferior_event_handler parameters\n\nI noticed that fetch_inferior_event receives the client_data parameter\nfrom its caller, inferior_event_handler, but doesn't actually need it.\nThis patch removes it.  In turn, inferior_event_handler doesn't use its\nparameter, so remove it too.\n\nThe `data` argument used when registering\nremote_async_inferior_event_handler is changed to NULL, to avoid\nconfusion.  It could make people think that the value passed is used\nsomewhere, when in fact it's not.\n\ngdb/ChangeLog:\n\n\t* inf-loop.c (inferior_event_handler): Remove client_data param.\n\t* inf-loop.h (inferior_event_handler): Likewise.\n\t* infcmd.c (step_1): Adjust.\n\t* infrun.c (proceed): Adjust.\n\t(fetch_inferior_event): Remove client_data param.\n\t(infrun_async_inferior_event_handler): Adjust.\n\t* infrun.h (fetch_inferior_event): Remove `void *` param.\n\t* linux-nat.c (handle_target_event): Adjust.\n\t* record-btrace.c (record_btrace_handle_async_inferior_event):\n\tAdjust.\n\t* record-full.c (record_full_async_inferior_event_handler):\n\tAdjust.\n\t* remote.c (remote_async_inferior_event_handler): Adjust.\n\nChange-Id: I3c2aa1eb0ea3e0985df096660d2dcd794674f2ea",
    "tree": {
      "sha": "fb09d71b294283fbdf1238486ffe0a35fe8bb884",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fb09d71b294283fbdf1238486ffe0a35fe8bb884"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b1a35af2704842ff1a90626b0148c0fc93f995f6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1a35af2704842ff1a90626b0148c0fc93f995f6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b1a35af2704842ff1a90626b0148c0fc93f995f6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1a35af2704842ff1a90626b0148c0fc93f995f6/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0942c7ab94e554657c3e11ab85ae7f15373ee80d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0942c7ab94e554657c3e11ab85ae7f15373ee80d"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 31,
    "deletions": 18
  },
  "files": [
    {
      "sha": "3d67327ea5144e49a3b698d7bba7732428d6f127",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -1,3 +1,19 @@\n+2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* inf-loop.c (inferior_event_handler): Remove client_data param.\n+\t* inf-loop.h (inferior_event_handler): Likewise.\n+\t* infcmd.c (step_1): Adjust.\n+\t* infrun.c (proceed): Adjust.\n+\t(fetch_inferior_event): Remove client_data param.\n+\t(infrun_async_inferior_event_handler): Adjust.\n+\t* infrun.h (fetch_inferior_event): Remove `void *` param.\n+\t* linux-nat.c (handle_target_event): Adjust.\n+\t* record-btrace.c (record_btrace_handle_async_inferior_event):\n+\tAdjust.\n+\t* record-full.c (record_full_async_inferior_event_handler):\n+\tAdjust.\n+\t* remote.c (remote_async_inferior_event_handler): Adjust.\n+\n 2020-07-01  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-data.h (struct tui_win_info) <name>: Now pure virtual."
    },
    {
      "sha": "cf746b8588cc231e5467f29164bc5ee785032681",
      "filename": "gdb/inf-loop.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/inf-loop.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/inf-loop.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-loop.c?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -34,13 +34,12 @@\n /* General function to handle events in the inferior.  */\n \n void\n-inferior_event_handler (enum inferior_event_type event_type, \n-\t\t\tgdb_client_data client_data)\n+inferior_event_handler (enum inferior_event_type event_type)\n {\n   switch (event_type)\n     {\n     case INF_REG_EVENT:\n-      fetch_inferior_event (client_data);\n+      fetch_inferior_event ();\n       break;\n \n     case INF_EXEC_COMPLETE:"
    },
    {
      "sha": "ed27f5279dd1da7395aba482296750ef804dc1c7",
      "filename": "gdb/inf-loop.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/inf-loop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/inf-loop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-loop.h?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -22,7 +22,6 @@\n \n #include \"target.h\"             /* For enum inferior_event_type.  */\n \n-extern void inferior_event_handler (enum inferior_event_type event_type, \n-\t\t\t\t    void* client_data);\n+extern void inferior_event_handler (enum inferior_event_type event_type);\n \n #endif /* #ifndef INF_LOOP_H */"
    },
    {
      "sha": "cfc3169992544597a4e3b9eace310e431e5a6a07",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -907,7 +907,7 @@ step_1 (int skip_subroutines, int single_inst, const char *count_string)\n       thr->thread_fsm->clean_up (thr);\n       proceeded = normal_stop ();\n       if (!proceeded)\n-\tinferior_event_handler (INF_EXEC_COMPLETE, NULL);\n+\tinferior_event_handler (INF_EXEC_COMPLETE);\n       all_uis_check_sync_execution_done ();\n     }\n }"
    },
    {
      "sha": "6b655d4430164268ee3aff92c9b1db2436e2131c",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -2968,7 +2968,7 @@ proceed (CORE_ADDR addr, enum gdb_signal siggnal)\n       /* The target for some reason decided not to resume.  */\n       normal_stop ();\n       if (target_can_async_p ())\n-\tinferior_event_handler (INF_EXEC_COMPLETE, NULL);\n+\tinferior_event_handler (INF_EXEC_COMPLETE);\n       return;\n     }\n \n@@ -3933,7 +3933,7 @@ all_uis_on_sync_execution_starting (void)\n    necessary cleanups.  */\n \n void\n-fetch_inferior_event (void *client_data)\n+fetch_inferior_event ()\n {\n   struct execution_control_state ecss;\n   struct execution_control_state *ecs = &ecss;\n@@ -4050,7 +4050,7 @@ fetch_inferior_event (void *client_data)\n \n \t    if (!proceeded)\n \t      {\n-\t\tinferior_event_handler (INF_EXEC_COMPLETE, NULL);\n+\t\tinferior_event_handler (INF_EXEC_COMPLETE);\n \t\tcmd_done = 1;\n \t      }\n \n@@ -9422,7 +9422,7 @@ static const struct internalvar_funcs siginfo_funcs =\n static void\n infrun_async_inferior_event_handler (gdb_client_data data)\n {\n-  inferior_event_handler (INF_REG_EVENT, NULL);\n+  inferior_event_handler (INF_REG_EVENT);\n }\n \n void _initialize_infrun ();"
    },
    {
      "sha": "49b28f01b6897fe341d753ecf57340245d96192d",
      "filename": "gdb/infrun.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/infrun.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/infrun.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.h?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -130,7 +130,7 @@ extern void stop_all_threads (void);\n \n extern void prepare_for_detach (void);\n \n-extern void fetch_inferior_event (void *);\n+extern void fetch_inferior_event ();\n \n extern void init_wait_for_inferior (void);\n "
    },
    {
      "sha": "fde360f5080afaa5de2fe0bbba2c362dc5710144",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -4232,7 +4232,7 @@ sigchld_handler (int signo)\n static void\n handle_target_event (int error, gdb_client_data client_data)\n {\n-  inferior_event_handler (INF_REG_EVENT, NULL);\n+  inferior_event_handler (INF_REG_EVENT);\n }\n \n /* Create/destroy the target events pipe.  Returns previous state.  */"
    },
    {
      "sha": "718de62f28084bc093545af408f5431bd71789a4",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -325,7 +325,7 @@ record_btrace_auto_disable (void)\n static void\n record_btrace_handle_async_inferior_event (gdb_client_data data)\n {\n-  inferior_event_handler (INF_REG_EVENT, NULL);\n+  inferior_event_handler (INF_REG_EVENT);\n }\n \n /* See record-btrace.h.  */"
    },
    {
      "sha": "1d8f1930a5b7fd67d427e85ee5bb2fb8d8cf3b73",
      "filename": "gdb/record-full.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/record-full.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/record-full.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-full.c?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -905,7 +905,7 @@ static struct async_event_handler *record_full_async_inferior_event_token;\n static void\n record_full_async_inferior_event_handler (gdb_client_data data)\n {\n-  inferior_event_handler (INF_REG_EVENT, NULL);\n+  inferior_event_handler (INF_REG_EVENT);\n }\n \n /* Open the process record target for 'core' files.  */"
    },
    {
      "sha": "f7f99dc24fe8acc081de437368f7737d0cb337f6",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1a35af2704842ff1a90626b0148c0fc93f995f6/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "patch": "@@ -5605,8 +5605,7 @@ remote_target::open_1 (const char *name, int from_tty, int extended_p)\n \n   /* Register extra event sources in the event loop.  */\n   rs->remote_async_inferior_event_token\n-    = create_async_event_handler (remote_async_inferior_event_handler,\n-\t\t\t\t  remote);\n+    = create_async_event_handler (remote_async_inferior_event_handler, NULL);\n   rs->notif_state = remote_notif_state_allocate (remote);\n \n   /* Reset the target state; these things will be queried either by\n@@ -14158,13 +14157,13 @@ remote_async_serial_handler (struct serial *scb, void *context)\n {\n   /* Don't propogate error information up to the client.  Instead let\n      the client find out about the error by querying the target.  */\n-  inferior_event_handler (INF_REG_EVENT, NULL);\n+  inferior_event_handler (INF_REG_EVENT);\n }\n \n static void\n remote_async_inferior_event_handler (gdb_client_data data)\n {\n-  inferior_event_handler (INF_REG_EVENT, data);\n+  inferior_event_handler (INF_REG_EVENT);\n }\n \n int"
    }
  ]
}