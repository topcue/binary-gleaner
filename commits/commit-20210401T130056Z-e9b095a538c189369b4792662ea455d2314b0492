{
  "sha": "e9b095a538c189369b4792662ea455d2314b0492",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTliMDk1YTUzOGMxODkzNjliNDc5MjY2MmVhNDU1ZDIzMTRiMDQ5Mg==",
  "commit": {
    "author": {
      "name": "Martin Liska",
      "email": "mliska@suse.cz",
      "date": "2021-03-22T13:56:16Z"
    },
    "committer": {
      "name": "Martin Liska",
      "email": "mliska@suse.cz",
      "date": "2021-04-01T13:00:56Z"
    },
    "message": "Remove strneq macro and use startswith.\n\nbfd/ChangeLog:\n\n\t* ecoff.c (strneq): Remove strneq and use startswith.\n\t(_bfd_ecoff_slurp_armap): Likewise.\n\nbinutils/ChangeLog:\n\n\t* elfcomm.h (strneq): Remove strneq and use startswith.\n\t* readelf.c (ia64_process_unwind): Likewise.\n\t(process_note): Likewise.\n\ngas/ChangeLog:\n\n\t* config/obj-coff.c (strneq): Remove strneq and use startswith.\n\t(weak_is_altname): Likewise.\n\t(obj_coff_section): Likewise.\n\t* config/tc-cr16.c (process_label_constant): Likewise.\n\t* config/tc-crx.c (strneq): Likewise.\n\ninclude/ChangeLog:\n\n\t* opcode/cr16.h (strneq): Remove strneq and use startswith.\n\nld/ChangeLog:\n\n\t* ldbuildid.c (strneq): Remove strneq and use startswith.\n\t(validate_build_id_style): Likewise.\n\t(compute_build_id_size): Likewise.\n\nopcodes/ChangeLog:\n\n\t* arm-dis.c (strneq): Remove strneq and use startswith.\n\t* cr16-dis.c (print_insn_cr16): Likewise.\n\t* score-dis.c (streq): Likewise.\n\t(strneq): Likewise.\n\t* score7-dis.c (strneq): Likewise.",
    "tree": {
      "sha": "8a6918add18cd366abcee7964b40605471ce18df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8a6918add18cd366abcee7964b40605471ce18df"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e9b095a538c189369b4792662ea455d2314b0492",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9b095a538c189369b4792662ea455d2314b0492",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e9b095a538c189369b4792662ea455d2314b0492",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9b095a538c189369b4792662ea455d2314b0492/comments",
  "author": {
    "login": "marxin",
    "id": 2658545,
    "node_id": "MDQ6VXNlcjI2NTg1NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marxin",
    "html_url": "https://github.com/marxin",
    "followers_url": "https://api.github.com/users/marxin/followers",
    "following_url": "https://api.github.com/users/marxin/following{/other_user}",
    "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marxin/subscriptions",
    "organizations_url": "https://api.github.com/users/marxin/orgs",
    "repos_url": "https://api.github.com/users/marxin/repos",
    "events_url": "https://api.github.com/users/marxin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marxin/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "marxin",
    "id": 2658545,
    "node_id": "MDQ6VXNlcjI2NTg1NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marxin",
    "html_url": "https://github.com/marxin",
    "followers_url": "https://api.github.com/users/marxin/followers",
    "following_url": "https://api.github.com/users/marxin/following{/other_user}",
    "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marxin/subscriptions",
    "organizations_url": "https://api.github.com/users/marxin/orgs",
    "repos_url": "https://api.github.com/users/marxin/repos",
    "events_url": "https://api.github.com/users/marxin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marxin/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d34049e8bb32ae2dd717dbac88dbcebefe2d6c09"
    }
  ],
  "stats": {
    "total": 116,
    "additions": 65,
    "deletions": 51
  },
  "files": [
    {
      "sha": "4977dc92aa61e11753e93b440902e5c4f8f84a45",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* ecoff.c (strneq): Remove strneq and use startswith.\n+\t(_bfd_ecoff_slurp_armap): Likewise.\n+\n 2021-04-01  Martin Liska  <mliska@suse.cz>\n \n \t* elf-bfd.h (bfd_section_is_ctf): Use startswith function."
    },
    {
      "sha": "7844a50b39d93319c7312dad551b615e45afc88a",
      "filename": "bfd/ecoff.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/bfd/ecoff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/bfd/ecoff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ecoff.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -46,7 +46,6 @@\n #include \"libiberty.h\"\n \n #define streq(a, b)\t(strcmp ((a), (b)) == 0)\n-#define strneq(a, b, n)\t(strncmp ((a), (b), (n)) == 0)\n \n \f\n /* This stuff is somewhat copied from coffcode.h.  */\n@@ -2870,14 +2869,14 @@ _bfd_ecoff_slurp_armap (bfd *abfd)\n     return bfd_slurp_armap (abfd);\n \n   /* See if the first element is an armap.  */\n-  if (! strneq (nextname, ecoff_backend (abfd)->armap_start, ARMAP_START_LENGTH)\n+  if (strncmp (nextname, ecoff_backend (abfd)->armap_start, ARMAP_START_LENGTH) != 0\n       || nextname[ARMAP_HEADER_MARKER_INDEX] != ARMAP_MARKER\n       || (nextname[ARMAP_HEADER_ENDIAN_INDEX] != ARMAP_BIG_ENDIAN\n \t  && nextname[ARMAP_HEADER_ENDIAN_INDEX] != ARMAP_LITTLE_ENDIAN)\n       || nextname[ARMAP_OBJECT_MARKER_INDEX] != ARMAP_MARKER\n       || (nextname[ARMAP_OBJECT_ENDIAN_INDEX] != ARMAP_BIG_ENDIAN\n \t  && nextname[ARMAP_OBJECT_ENDIAN_INDEX] != ARMAP_LITTLE_ENDIAN)\n-      || ! strneq (nextname + ARMAP_END_INDEX, ARMAP_END, sizeof ARMAP_END - 1))\n+      || strncmp (nextname + ARMAP_END_INDEX, ARMAP_END, sizeof ARMAP_END - 1) != 0)\n     {\n       abfd->has_armap = false;\n       return true;"
    },
    {
      "sha": "844dbf493a3bd75fc139f42998c54c1ca493510a",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* elfcomm.h (strneq): Remove strneq and use startswith.\n+\t* readelf.c (ia64_process_unwind): Likewise.\n+\t(process_note): Likewise.\n+\n 2021-04-01  Martin Liska  <mliska@suse.cz>\n \n \t* dllwrap.c: Use startswith function."
    },
    {
      "sha": "921d42ca42598368f638fa29e093dc20ac32cfb2",
      "filename": "binutils/elfcomm.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/binutils/elfcomm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/binutils/elfcomm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/elfcomm.h?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -47,7 +47,6 @@ extern void byte_get_64 (const unsigned char *, elf_vma *, elf_vma *);\n \n /* This is just a bit of syntatic sugar.  */\n #define streq(a,b)\t  (strcmp ((a), (b)) == 0)\n-#define strneq(a,b,n)\t  (strncmp ((a), (b), (n)) == 0)\n \n /* Structure to hold information about an archive file.  */\n "
    },
    {
      "sha": "5bc59e4c5e285e5cca3d8dc58fd97e53418fc94c",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -8235,8 +8235,8 @@ ia64_process_unwind (Filedata * filedata)\n \t    }\n \t}\n       else if (SECTION_NAME_VALID (unwsec)\n-\t       && strneq (SECTION_NAME (unwsec),\n-\t\t\t  ELF_STRING_ia64_unwind_once, len))\n+\t       && startswith (SECTION_NAME (unwsec),\n+\t\t\t      ELF_STRING_ia64_unwind_once))\n \t{\n \t  /* .gnu.linkonce.ia64unw.FOO -> .gnu.linkonce.ia64unwi.FOO.  */\n \t  len2 = sizeof (ELF_STRING_ia64_unwind_info_once) - 1;\n@@ -8245,8 +8245,8 @@ ia64_process_unwind (Filedata * filedata)\n \t       i < filedata->file_header.e_shnum;\n \t       ++i, ++sec)\n \t    if (SECTION_NAME_VALID (sec)\n-\t\t&& strneq (SECTION_NAME (sec),\n-\t\t\t   ELF_STRING_ia64_unwind_info_once, len2)\n+\t\t&& startswith (SECTION_NAME (sec),\n+\t\t\t       ELF_STRING_ia64_unwind_info_once)\n \t\t&& streq (SECTION_NAME (sec) + len2, suffix))\n \t      break;\n \t}\n@@ -8258,13 +8258,13 @@ ia64_process_unwind (Filedata * filedata)\n \t  len2 = sizeof (ELF_STRING_ia64_unwind_info) - 1;\n \t  suffix = \"\";\n \t  if (SECTION_NAME_VALID (unwsec)\n-\t      && strneq (SECTION_NAME (unwsec), ELF_STRING_ia64_unwind, len))\n+\t      && startswith (SECTION_NAME (unwsec), ELF_STRING_ia64_unwind))\n \t    suffix = SECTION_NAME (unwsec) + len;\n \t  for (i = 0, sec = filedata->section_headers;\n \t       i < filedata->file_header.e_shnum;\n \t       ++i, ++sec)\n \t    if (SECTION_NAME_VALID (sec)\n-\t\t&& strneq (SECTION_NAME (sec), ELF_STRING_ia64_unwind_info, len2)\n+\t\t&& startswith (SECTION_NAME (sec), ELF_STRING_ia64_unwind_info)\n \t\t&& streq (SECTION_NAME (sec) + len2, suffix))\n \t      break;\n \t}\n@@ -20449,7 +20449,7 @@ process_note (Elf_Internal_Note *  pnote,\n     /* NetBSD-specific core file notes.  */\n     return process_netbsd_elf_note (pnote);\n \n-  else if (strneq (pnote->namedata, \"SPU/\", 4))\n+  else if (startswith (pnote->namedata, \"SPU/\"))\n     {\n       /* SPU-specific core file notes.  */\n       nt = pnote->namedata + 4;"
    },
    {
      "sha": "b011f1cab1a73802d0cc6c172c24af34229d1276",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -1,3 +1,11 @@\n+2021-04-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/obj-coff.c (strneq): Remove strneq and use startswith.\n+\t(weak_is_altname): Likewise.\n+\t(obj_coff_section): Likewise.\n+\t* config/tc-cr16.c (process_label_constant): Likewise.\n+\t* config/tc-crx.c (strneq): Likewise.\n+\n 2021-04-01  Martin Liska  <mliska@suse.cz>\n \n \t* as.c (select_emulation_mode): Use startswith."
    },
    {
      "sha": "f3cc3273a4bb7b0f678a9d603e371094ca4eeda9",
      "filename": "gas/config/obj-coff.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/gas/config/obj-coff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/gas/config/obj-coff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-coff.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -33,7 +33,6 @@\n #endif\n \n #define streq(a,b)     (strcmp ((a), (b)) == 0)\n-#define strneq(a,b,n)  (strncmp ((a), (b), (n)) == 0)\n \n /* I think this is probably always correct.  */\n #ifndef KEEP_RELOC_INFO\n@@ -1058,7 +1057,7 @@ obj_coff_val (int ignore ATTRIBUTE_UNUSED)\n static int\n weak_is_altname (const char * name)\n {\n-  return strneq (name, weak_altprefix, sizeof (weak_altprefix) - 1);\n+  return startswith (name, weak_altprefix);\n }\n \n /* Return the name of the alternate symbol\n@@ -1667,7 +1666,7 @@ obj_coff_section (int ignore ATTRIBUTE_UNUSED)\n       /* Add SEC_LINK_ONCE and SEC_LINK_DUPLICATES_DISCARD to .gnu.linkonce\n          sections so adjust_reloc_syms in write.c will correctly handle\n          relocs which refer to non-local symbols in these sections.  */\n-      if (strneq (name, \".gnu.linkonce\", sizeof (\".gnu.linkonce\") - 1))\n+      if (startswith (name, \".gnu.linkonce\"))\n \tflags |= SEC_LINK_ONCE | SEC_LINK_DUPLICATES_DISCARD;\n #endif\n "
    },
    {
      "sha": "1f6b1fe8b6d08f5e43517b3ccda9416f8648426c",
      "filename": "gas/config/tc-cr16.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/gas/config/tc-cr16.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/gas/config/tc-cr16.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-cr16.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -905,34 +905,34 @@ process_label_constant (char *str, ins * cr16_ins)\n       cr16_ins->rtype = BFD_RELOC_NONE;\n       relocatable = 1;\n \n-      if (strneq (input_line_pointer, \"@c\", 2))\n+      if (startswith (input_line_pointer, \"@c\"))\n \tsymbol_with_at = 1;\n \n-      if (strneq (input_line_pointer, \"@l\", 2)\n-\t  || strneq (input_line_pointer, \":l\", 2))\n+      if (startswith (input_line_pointer, \"@l\")\n+\t  || startswith (input_line_pointer, \":l\"))\n \tsymbol_with_l = 1;\n \n-      if (strneq (input_line_pointer, \"@m\", 2)\n-\t  || strneq (input_line_pointer, \":m\", 2))\n+      if (startswith (input_line_pointer, \"@m\")\n+\t  || startswith (input_line_pointer, \":m\"))\n \tsymbol_with_m = 1;\n \n-      if (strneq (input_line_pointer, \"@s\", 2)\n-\t  || strneq (input_line_pointer, \":s\", 2))\n+      if (startswith (input_line_pointer, \"@s\")\n+\t  || startswith (input_line_pointer, \":s\"))\n \tsymbol_with_s = 1;\n \n-      if (strneq (input_line_pointer, \"@cGOT\", 5)\n-\t  || strneq (input_line_pointer, \"@cgot\", 5))\n+      if (startswith (input_line_pointer, \"@cGOT\")\n+\t  || startswith (input_line_pointer, \"@cgot\"))\n \t{\n \t  if (GOT_symbol == NULL)\n \t    GOT_symbol = symbol_find_or_make (GLOBAL_OFFSET_TABLE_NAME);\n \n \t  symbol_with_at_gotc = 1;\n \t}\n-      else if (strneq (input_line_pointer, \"@GOT\", 4)\n-\t       || strneq (input_line_pointer, \"@got\", 4))\n+      else if (startswith (input_line_pointer, \"@GOT\")\n+\t       || startswith (input_line_pointer, \"@got\"))\n \t{\n-\t  if ((strneq (input_line_pointer, \"+\", 1))\n-\t      || (strneq (input_line_pointer, \"-\", 1)))\n+\t  if ((startswith (input_line_pointer, \"+\"))\n+\t      || (startswith (input_line_pointer, \"-\")))\n \t    as_warn (_(\"GOT bad expression with %s.\"), input_line_pointer);\n \n \t  if (GOT_symbol == NULL)"
    },
    {
      "sha": "d33a0bf076657de368b766dfb93e557175238ad5",
      "filename": "gas/config/tc-crx.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/gas/config/tc-crx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/gas/config/tc-crx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-crx.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -43,7 +43,6 @@\n \n /* Utility macros for string comparison.  */\n #define streq(a, b)           (strcmp (a, b) == 0)\n-#define strneq(a, b, c)       (strncmp (a, b, c) == 0)\n \n /* Assign a number NUM, shifted by SHIFT bytes, into a location\n    pointed by index BYTE of array 'output_opcode'.  */"
    },
    {
      "sha": "9eb5f0a7bedefe72e0b9f6c4e64999c0b1a397e7",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* opcode/cr16.h (strneq): Remove strneq and use startswith.\n+\n 2021-03-31  Alan Modra  <amodra@gmail.com>\n \n \t* bfdlink.h: Replace bfd_boolean with bool throughout."
    },
    {
      "sha": "09e27122a17b53cd6da04f9fab9f9d1cd37bc7ed",
      "filename": "include/opcode/cr16.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/include/opcode/cr16.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/include/opcode/cr16.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/cr16.h?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -425,7 +425,6 @@ extern const char * cr16_no_op_insn[];\n \n /* Utility macros for string comparison.  */\n #define streq(a, b)           (strcmp (a, b) == 0)\n-#define strneq(a, b, c)       (strncmp (a, b, c) == 0)\n \n /* Long long type handling.  */\n /* Replace all appearances of 'long long int' with LONGLONG.  */"
    },
    {
      "sha": "7b8e411b7983a3949793aad294d4322cbc5acc73",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* ldbuildid.c (strneq): Remove strneq and use startswith.\n+\t(validate_build_id_style): Likewise.\n+\t(compute_build_id_size): Likewise.\n+\n 2021-03-31  Alan Modra  <amodra@gmail.com>\n \n \t* sysdep.h (POISON_BFD_BOOLEAN): Define."
    },
    {
      "sha": "0642ec07aa94a30b870c43544cf1b59a938d689b",
      "filename": "ld/ldbuildid.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/ld/ldbuildid.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/ld/ldbuildid.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldbuildid.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -30,13 +30,12 @@\n #endif\n \n #define streq(a,b)     strcmp ((a), (b)) == 0\n-#define strneq(a,b,n)  strncmp ((a), (b), (n)) == 0\n \n bool\n validate_build_id_style (const char *style)\n {\n   if ((streq (style, \"md5\")) || (streq (style, \"sha1\"))\n-      || (streq (style, \"uuid\")) || (strneq (style, \"0x\", 2)))\n+      || (streq (style, \"uuid\")) || (startswith (style, \"0x\")))\n     return true;\n \n   return false;\n@@ -51,7 +50,7 @@ compute_build_id_size (const char *style)\n   if (streq (style, \"sha1\"))\n     return 160 / 8;\n \n-  if (strneq (style, \"0x\", 2))\n+  if (startswith (style, \"0x\"))\n     {\n       bfd_size_type size = 0;\n       /* ID is in string form (hex).  Count the bytes.  */\n@@ -156,7 +155,7 @@ generate_build_id (bfd *abfd,\n \t      (size_t) size < sizeof (UUID) ? (size_t) size : sizeof (UUID));\n #endif /* __MINGW32__ */\n     }\n-  else if (strneq (style, \"0x\", 2))\n+  else if (startswith (style, \"0x\"))\n     {\n       /* ID is in string form (hex).  Convert to bits.  */\n       const char *id = style + 2;"
    },
    {
      "sha": "a08e57abe73300e8d04ee694af9b78966022df2c",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -1,3 +1,11 @@\n+2021-04-01  Martin Liska  <mliska@suse.cz>\n+\n+\t* arm-dis.c (strneq): Remove strneq and use startswith.\n+\t* cr16-dis.c (print_insn_cr16): Likewise.\n+\t* score-dis.c (streq): Likewise.\n+\t(strneq): Likewise.\n+\t* score7-dis.c (strneq): Likewise.\n+\n 2021-04-01  Alan Modra  <amodra@gmail.com>\n \n \tPR 27675"
    },
    {
      "sha": "413091983b6718c719e36df865bb9e78275ed68c",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -39,11 +39,6 @@\n #include \"elf/arm.h\"\n #include \"mach-o.h\"\n \n-/* FIXME: Belongs in global header.  */\n-#ifndef strneq\n-#define strneq(a,b,n)\t(strncmp ((a), (b), (n)) == 0)\n-#endif\n-\n /* Cached mapping symbol state.  */\n enum map_type\n {"
    },
    {
      "sha": "ac855523fa9858a5824f7228f095122a04246242",
      "filename": "opcodes/cr16-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/opcodes/cr16-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/opcodes/cr16-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/cr16-dis.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -800,7 +800,7 @@ print_insn_cr16 (bfd_vma memaddr, struct disassemble_info *info)\n   /* If found, print the instruction's mnemonic and arguments.  */\n   if (is_decoded > 0 && (cr16_words[0] != 0 || cr16_words[1] != 0))\n     {\n-      if (strneq (instruction->mnemonic, \"cinv\", 4))\n+      if (startswith (instruction->mnemonic, \"cinv\"))\n \tinfo->fprintf_func (info->stream,\"%s\",\n \t\t\t    getcinvstring (instruction->mnemonic));\n       else"
    },
    {
      "sha": "3ec5c6a36eba141dc1186f3e925d484849a00eee",
      "filename": "opcodes/score-dis.c",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/opcodes/score-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/opcodes/score-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/score-dis.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -477,14 +477,6 @@ static struct score_opcode score_opcodes[] =\n };\n \f\n \n-#ifndef streq\n-#define streq(a,b)    (strcmp ((a), (b)) == 0)\n-#endif\n-\n-#ifndef strneq\n-#define strneq(a,b,n)    (strncmp ((a), (b), (n)) == 0)\n-#endif\n-\n #ifndef NUM_ELEM\n #define NUM_ELEM(a)     (sizeof (a) / sizeof (a)[0])\n #endif"
    },
    {
      "sha": "6ffc7f6fa7390f1aa28ce7fc9bd81ec25fc160ea",
      "filename": "opcodes/score7-dis.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9b095a538c189369b4792662ea455d2314b0492/opcodes/score7-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9b095a538c189369b4792662ea455d2314b0492/opcodes/score7-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/score7-dis.c?ref=e9b095a538c189369b4792662ea455d2314b0492",
      "patch": "@@ -37,10 +37,6 @@\n #define streq(a,b)    (strcmp ((a), (b)) == 0)\n #endif\n \n-#ifndef strneq\n-#define strneq(a,b,n)    (strncmp ((a), (b), (n)) == 0)\n-#endif\n-\n #ifndef NUM_ELEM\n #define NUM_ELEM(a)     (sizeof (a) / sizeof (a)[0])\n #endif"
    }
  ]
}