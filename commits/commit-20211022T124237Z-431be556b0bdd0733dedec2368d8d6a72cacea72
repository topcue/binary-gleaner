{
  "sha": "431be556b0bdd0733dedec2368d8d6a72cacea72",
  "node_id": "C_kwDOANOeidoAKDQzMWJlNTU2YjBiZGQwNzMzZGVkZWMyMzY4ZDhkNmE3MmNhY2VhNzI",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-10-13T17:18:12Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-10-22T12:42:37Z"
    },
    "message": "gdb: make disassembler fprintf callback a static member function\n\nThe disassemble_info structure has four callbacks, we have three of\nthem as static member functions within gdb_disassembler, the fourth is\njust a global static function.\n\nHowever, this fourth callback, is still only used from the\ndisassemble_info struct, so there's no real reason for its special\nhandling.\n\nThis commit makes fprintf_disasm a static method within\ngdb_disassembler.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "830c93f1f139e82ca3b830cbb8f7f001aa229a31",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/830c93f1f139e82ca3b830cbb8f7f001aa229a31"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/431be556b0bdd0733dedec2368d8d6a72cacea72",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/431be556b0bdd0733dedec2368d8d6a72cacea72",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/431be556b0bdd0733dedec2368d8d6a72cacea72",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/431be556b0bdd0733dedec2368d8d6a72cacea72/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c628f812eba820e11ef83033b38becca1b148dc5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c628f812eba820e11ef83033b38becca1b148dc5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c628f812eba820e11ef83033b38becca1b148dc5"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 18,
    "deletions": 16
  },
  "files": [
    {
      "sha": "c045dfc94a68e7241b688838c058e8c7a47c9ab7",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 15,
      "deletions": 16,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/431be556b0bdd0733dedec2368d8d6a72cacea72/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/431be556b0bdd0733dedec2368d8d6a72cacea72/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=431be556b0bdd0733dedec2368d8d6a72cacea72",
      "patch": "@@ -163,6 +163,20 @@ gdb_disassembler::dis_asm_print_address (bfd_vma addr,\n   print_address (self->arch (), addr, self->stream ());\n }\n \n+/* Format disassembler output to STREAM.  */\n+\n+int\n+gdb_disassembler::dis_asm_fprintf (void *stream, const char *format, ...)\n+{\n+  va_list args;\n+\n+  va_start (args, format);\n+  vfprintf_filtered ((struct ui_file *) stream, format, args);\n+  va_end (args);\n+  /* Something non -ve.  */\n+  return 0;\n+}\n+\n static bool\n line_is_less_than (const deprecated_dis_line_entry &mle1,\n \t\t   const deprecated_dis_line_entry &mle2)\n@@ -711,21 +725,6 @@ do_assembly_only (struct gdbarch *gdbarch, struct ui_out *uiout,\n   dump_insns (gdbarch, uiout, low, high, how_many, flags, NULL);\n }\n \n-/* Initialize the disassemble info struct ready for the specified\n-   stream.  */\n-\n-static int ATTRIBUTE_PRINTF (2, 3)\n-fprintf_disasm (void *stream, const char *format, ...)\n-{\n-  va_list args;\n-\n-  va_start (args, format);\n-  vfprintf_filtered ((struct ui_file *) stream, format, args);\n-  va_end (args);\n-  /* Something non -ve.  */\n-  return 0;\n-}\n-\n /* Combine implicit and user disassembler options and return them\n    in a newly-created string.  */\n \n@@ -756,7 +755,7 @@ gdb_disassembler::gdb_disassembler (struct gdbarch *gdbarch,\n \t\t\t\t    di_read_memory_ftype read_memory_func)\n   : m_gdbarch (gdbarch)\n {\n-  init_disassemble_info (&m_di, file, fprintf_disasm);\n+  init_disassemble_info (&m_di, file, dis_asm_fprintf);\n   m_di.flavour = bfd_target_unknown_flavour;\n   m_di.memory_error_func = dis_asm_memory_error;\n   m_di.print_address_func = dis_asm_print_address;"
    },
    {
      "sha": "f6de33e3db8118eb1a918d45970c3edffb1ad73d",
      "filename": "gdb/disasm.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/431be556b0bdd0733dedec2368d8d6a72cacea72/gdb/disasm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/431be556b0bdd0733dedec2368d8d6a72cacea72/gdb/disasm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.h?ref=431be556b0bdd0733dedec2368d8d6a72cacea72",
      "patch": "@@ -82,6 +82,9 @@ class gdb_disassembler\n      non-memory error.  */\n   gdb::optional<CORE_ADDR> m_err_memaddr;\n \n+  static int dis_asm_fprintf (void *stream, const char *format, ...)\n+    ATTRIBUTE_PRINTF(2,3);\n+\n   static int dis_asm_read_memory (bfd_vma memaddr, gdb_byte *myaddr,\n \t\t\t\t  unsigned int len,\n \t\t\t\t  struct disassemble_info *info);"
    }
  ]
}