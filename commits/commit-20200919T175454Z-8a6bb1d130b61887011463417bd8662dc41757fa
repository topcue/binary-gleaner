{
  "sha": "8a6bb1d130b61887011463417bd8662dc41757fa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGE2YmIxZDEzMGI2MTg4NzAxMTQ2MzQxN2JkODY2MmRjNDE3NTdmYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-19T17:54:49Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-19T17:54:54Z"
    },
    "message": "Use gdb_bfd_sections in build_section_table\n\nThis changes build_section_table to avoid bfd_map_over_sections, in\nfavor of iteration.  In this situation it seemed simple to just remove\nthe helper function entirely.\n\ngdb/ChangeLog\n2020-09-19  Tom Tromey  <tom@tromey.com>\n\n\t* exec.c (add_to_section_table): Remove.\n\t(build_section_table): Use foreach.",
    "tree": {
      "sha": "d4f44793c4af6a5dfdacce0e6a8ec225f6ab603e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d4f44793c4af6a5dfdacce0e6a8ec225f6ab603e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8a6bb1d130b61887011463417bd8662dc41757fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a6bb1d130b61887011463417bd8662dc41757fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8a6bb1d130b61887011463417bd8662dc41757fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a6bb1d130b61887011463417bd8662dc41757fa/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "08f93a1a93f9b344a92dc9e411c83d70acfdf857",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/08f93a1a93f9b344a92dc9e411c83d70acfdf857",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/08f93a1a93f9b344a92dc9e411c83d70acfdf857"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 25,
    "deletions": 30
  },
  "files": [
    {
      "sha": "7a5e122983da6b5417a2ced5b961cb5d92b6eab5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a6bb1d130b61887011463417bd8662dc41757fa/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a6bb1d130b61887011463417bd8662dc41757fa/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8a6bb1d130b61887011463417bd8662dc41757fa",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-19  Tom Tromey  <tom@tromey.com>\n+\n+\t* exec.c (add_to_section_table): Remove.\n+\t(build_section_table): Use foreach.\n+\n 2020-09-19  Tom Tromey  <tom@tromey.com>\n \n \t* elfread.c (elf_locate_sections): Change parameters."
    },
    {
      "sha": "14cc6af7de0726674d02f976776d08bfcc488ed9",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 20,
      "deletions": 30,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a6bb1d130b61887011463417bd8662dc41757fa/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a6bb1d130b61887011463417bd8662dc41757fa/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=8a6bb1d130b61887011463417bd8662dc41757fa",
      "patch": "@@ -587,35 +587,6 @@ file_command (const char *arg, int from_tty)\n }\n \f\n \n-/* Locate all mappable sections of a BFD file.\n-   table_pp_char is a char * to get it through bfd_map_over_sections;\n-   we cast it back to its proper type.  */\n-\n-static void\n-add_to_section_table (bfd *abfd, struct bfd_section *asect,\n-\t\t      void *table_pp_char)\n-{\n-  struct target_section **table_pp = (struct target_section **) table_pp_char;\n-  flagword aflag;\n-\n-  gdb_assert (abfd == asect->owner);\n-\n-  /* Check the section flags, but do not discard zero-length sections, since\n-     some symbols may still be attached to this section.  For instance, we\n-     encountered on sparc-solaris 2.10 a shared library with an empty .bss\n-     section to which a symbol named \"_end\" was attached.  The address\n-     of this symbol still needs to be relocated.  */\n-  aflag = bfd_section_flags (asect);\n-  if (!(aflag & SEC_ALLOC))\n-    return;\n-\n-  (*table_pp)->owner = NULL;\n-  (*table_pp)->the_bfd_section = asect;\n-  (*table_pp)->addr = bfd_section_vma (asect);\n-  (*table_pp)->endaddr = (*table_pp)->addr + bfd_section_size (asect);\n-  (*table_pp)++;\n-}\n-\n /* See exec.h.  */\n \n void\n@@ -665,7 +636,26 @@ build_section_table (struct bfd *some_bfd, struct target_section **start,\n   xfree (*start);\n   *start = XNEWVEC (struct target_section, count);\n   *end = *start;\n-  bfd_map_over_sections (some_bfd, add_to_section_table, (char *) end);\n+  for (asection *asect : gdb_bfd_sections (some_bfd))\n+    {\n+      flagword aflag;\n+\n+      /* Check the section flags, but do not discard zero-length\n+\t sections, since some symbols may still be attached to this\n+\t section.  For instance, we encountered on sparc-solaris 2.10\n+\t a shared library with an empty .bss section to which a symbol\n+\t named \"_end\" was attached.  The address of this symbol still\n+\t needs to be relocated.  */\n+      aflag = bfd_section_flags (asect);\n+      if (!(aflag & SEC_ALLOC))\n+\tcontinue;\n+\n+      (*end)->owner = NULL;\n+      (*end)->the_bfd_section = asect;\n+      (*end)->addr = bfd_section_vma (asect);\n+      (*end)->endaddr = (*end)->addr + bfd_section_size (asect);\n+      (*end)++;\n+    }\n \n   gdb_assert (*end <= *start + count);\n "
    }
  ]
}