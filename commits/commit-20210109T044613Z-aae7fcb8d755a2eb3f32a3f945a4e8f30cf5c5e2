{
  "sha": "aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWFlN2ZjYjhkNzU1YTJlYjNmMzJhM2Y5NDVhNGU4ZjMwY2Y1YzVlMg==",
  "commit": {
    "author": {
      "name": "Peter Bergner",
      "email": "bergner@linux.ibm.com",
      "date": "2021-01-08T22:07:12Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-09T04:46:13Z"
    },
    "message": "POWER10: Add Return-Oriented Programming instructions\n\nPOWER10 adds some return-oriented programming (ROP) instructions and\nthis patch adds support for them.  You will notice that they are enabled\nfor POWER8 and later, not just POWER10 and later.  This is on purpose.\nThis allows the instructions to be added to POWER8 binaries that can be\nrun on POWER8, POWER9 and POWER10 cpus.  On POWER8 and POWER9, these\ninstructions just act as nop's.\n\nopcodes/\n\t* ppc-opc.c (insert_dw, (extract_dw): New functions.\n\t(DW, (XRC_MASK): Define.\n\t(powerpc_opcodes) <hashchk, hashchkp, hashst, haststp>: New mnemonics.\ngas/\n\t* testsuite/gas/ppc/rop-checks.d,\n\t* testsuite/gas/ppc/rop-checks.l,\n\t* testsuite/gas/ppc/rop-checks.s,\n\t* testsuite/gas/ppc/rop.d,\n\t* testsuite/gas/ppc/rop.s: New tests.\n\t* testsuite/gas/ppc/ppc.exp: Run them.",
    "tree": {
      "sha": "42165a09c958a6884c90a9126b87c3c9b3b4358a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/42165a09c958a6884c90a9126b87c3c9b3b4358a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/comments",
  "author": {
    "login": "peter-bergner",
    "id": 17504345,
    "node_id": "MDQ6VXNlcjE3NTA0MzQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/peter-bergner",
    "html_url": "https://github.com/peter-bergner",
    "followers_url": "https://api.github.com/users/peter-bergner/followers",
    "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}",
    "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions",
    "organizations_url": "https://api.github.com/users/peter-bergner/orgs",
    "repos_url": "https://api.github.com/users/peter-bergner/repos",
    "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/peter-bergner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6430704567c6c3f838ad7d01d5dfcf3fcb8d6b24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6430704567c6c3f838ad7d01d5dfcf3fcb8d6b24",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6430704567c6c3f838ad7d01d5dfcf3fcb8d6b24"
    }
  ],
  "stats": {
    "total": 149,
    "additions": 148,
    "deletions": 1
  },
  "files": [
    {
      "sha": "cb38110d417b52b862c2b35e72ca909764e556db",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -1,3 +1,12 @@\n+2021-01-08  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* testsuite/gas/ppc/rop-checks.d,\n+\t* testsuite/gas/ppc/rop-checks.l,\n+\t* testsuite/gas/ppc/rop-checks.s,\n+\t* testsuite/gas/ppc/rop.d,\n+\t* testsuite/gas/ppc/rop.s: New tests.\n+\t* testsuite/gas/ppc/ppc.exp: Run them.\n+\n 2021-01-09  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "6f61ad09f41f19f53fb3ab7fdf61f2c0cebf213a",
      "filename": "gas/testsuite/gas/ppc/ppc.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/ppc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/ppc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/ppc.exp?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -146,5 +146,7 @@ run_dump_test \"stringop\"\n run_dump_test \"xvtlsbb\"\n run_dump_test \"rightmost\"\n run_dump_test \"scalarquad\"\n+run_dump_test \"rop\"\n+run_dump_test \"rop-checks\"\n \n run_dump_test \"dcbt\""
    },
    {
      "sha": "b7ef25eed2163251ea44d20c2077661f2808c111",
      "filename": "gas/testsuite/gas/ppc/rop-checks.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop-checks.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop-checks.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/rop-checks.d?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -0,0 +1,3 @@\n+#as: -mpower10\n+#name: Test Return-Oriented Programming checks\n+#error_output: rop-checks.l"
    },
    {
      "sha": "83ffbee8ee820f0cf6edc0dec3ce8cc5725641f7",
      "filename": "gas/testsuite/gas/ppc/rop-checks.l",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop-checks.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop-checks.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/rop-checks.l?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -0,0 +1,17 @@\n+[^:]*: Assembler messages:\n+[^:]*:3: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:4: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:5: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:6: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:7: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:8: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:9: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:10: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:11: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:12: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:13: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:14: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:15: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:16: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:17: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8\n+[^:]*:18: Error: invalid offset: must be in the range \\[-512, -8\\] and be a multiple of 8"
    },
    {
      "sha": "83ca35a819c42b8540ef2cb3ae6d8cf57dbddaa4",
      "filename": "gas/testsuite/gas/ppc/rop-checks.s",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop-checks.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop-checks.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/rop-checks.s?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -0,0 +1,18 @@\n+\t.text\n+_start:\n+\thashst   20,8(1)\n+\thashst   21,0(1)\n+\thashst   22,-12(1)\n+\thashst   23,-520(1)\n+\thashchk  20,8(1)\n+\thashchk  21,0(1)\n+\thashchk  22,-12(1)\n+\thashchk  23,-520(1)\n+\thashstp  20,8(1)\n+\thashstp  21,0(1)\n+\thashstp  22,-12(1)\n+\thashstp  23,-520(1)\n+\thashchkp 20,8(1)\n+\thashchkp 21,0(1)\n+\thashchkp 22,-12(1)\n+\thashchkp 23,-520(1)"
    },
    {
      "sha": "2671dd6bbd555adc8032ea1fd016f6a8d763d65e",
      "filename": "gas/testsuite/gas/ppc/rop.d",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/rop.d?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -0,0 +1,27 @@\n+#as: -mpower8\n+#objdump: -d -Mpower8\n+#name: Return-Oriented Programming tests\n+\n+.*\n+\n+\n+Disassembly of section \\.text:\n+\n+0+0 <_start>:\n+.*:\t(7f e1 a5 a5|a5 a5 e1 7f) \thashst  r20,-8\\(r1\\)\n+.*:\t(7f c1 ad a5|a5 ad c1 7f) \thashst  r21,-16\\(r1\\)\n+.*:\t(7c 01 b5 a5|a5 b5 01 7c) \thashst  r22,-256\\(r1\\)\n+.*:\t(7c 01 bd a4|a4 bd 01 7c) \thashst  r23,-512\\(r1\\)\n+.*:\t(7f e1 a5 e5|e5 a5 e1 7f) \thashchk r20,-8\\(r1\\)\n+.*:\t(7f c1 ad e5|e5 ad c1 7f) \thashchk r21,-16\\(r1\\)\n+.*:\t(7c 01 b5 e5|e5 b5 01 7c) \thashchk r22,-256\\(r1\\)\n+.*:\t(7c 01 bd e4|e4 bd 01 7c) \thashchk r23,-512\\(r1\\)\n+.*:\t(7f e1 a5 25|25 a5 e1 7f) \thashstp r20,-8\\(r1\\)\n+.*:\t(7f c1 ad 25|25 ad c1 7f) \thashstp r21,-16\\(r1\\)\n+.*:\t(7c 01 b5 25|25 b5 01 7c) \thashstp r22,-256\\(r1\\)\n+.*:\t(7c 01 bd 24|24 bd 01 7c) \thashstp r23,-512\\(r1\\)\n+.*:\t(7f e1 a5 65|65 a5 e1 7f) \thashchkp r20,-8\\(r1\\)\n+.*:\t(7f c1 ad 65|65 ad c1 7f) \thashchkp r21,-16\\(r1\\)\n+.*:\t(7c 01 b5 65|65 b5 01 7c) \thashchkp r22,-256\\(r1\\)\n+.*:\t(7c 01 bd 64|64 bd 01 7c) \thashchkp r23,-512\\(r1\\)\n+#pass"
    },
    {
      "sha": "22e45f49aa9fbda92c0eed001f13350f4ff1ccbc",
      "filename": "gas/testsuite/gas/ppc/rop.s",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/gas/testsuite/gas/ppc/rop.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/rop.s?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -0,0 +1,21 @@\n+# These instructions are new in POWER10, but enabled for POWER8 and\n+# later cpus.  On POWER8 and POWER9, these instructions behave as\n+# nop's.\n+\t.text\n+_start:\n+\thashst   20,-8(1)\n+\thashst   21,-16(1)\n+\thashst   22,-256(1)\n+\thashst   23,-512(1)\n+\thashchk  20,-8(1)\n+\thashchk  21,-16(1)\n+\thashchk  22,-256(1)\n+\thashchk  23,-512(1)\n+\thashstp  20,-8(1)\n+\thashstp  21,-16(1)\n+\thashstp  22,-256(1)\n+\thashstp  23,-512(1)\n+\thashchkp 20,-8(1)\n+\thashchkp 21,-16(1)\n+\thashchkp 22,-256(1)\n+\thashchkp 23,-512(1)"
    },
    {
      "sha": "6b48181d887f71e45586487d519947934b301e20",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-08  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* ppc-opc.c (insert_dw, (extract_dw): New functions.\n+\t(DW, (XRC_MASK): Define.\n+\t(powerpc_opcodes) <hashchk, hashchkp, hashst, haststp>: New mnemonics.\n+\n 2021-01-09  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "bbbadffad8f62f867c53630b9bf67cfe72ecfed6",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 45,
      "deletions": 1,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=aae7fcb8d755a2eb3f32a3f945a4e8f30cf5c5e2",
      "patch": "@@ -558,6 +558,34 @@ extract_dcmxs (uint64_t insn,\n   return (insn & 0x40) | ((insn << 3) & 0x20) | ((insn >> 16) & 0x1f);\n }\n \n+/* The DW field in a X form instruction when the field is split\n+   into separate D and DX fields.  */\n+\n+static uint64_t\n+insert_dw (uint64_t insn,\n+\t   int64_t value,\n+\t   ppc_cpu_t dialect ATTRIBUTE_UNUSED,\n+\t   const char **errmsg ATTRIBUTE_UNUSED)\n+{\n+  /* DW offsets must be in the range [-512, -8] and be a multiple of 8.  */\n+  if (value < -512\n+      || value > -8\n+      || (value & 0x7) != 0)\n+    *errmsg = _(\"invalid offset: must be in the range [-512, -8] \"\n+\t\t\"and be a multiple of 8\");\n+\n+  return insn | ((value & 0xf8) << 18) | ((value >> 8) & 1);\n+}\n+\n+static int64_t\n+extract_dw (uint64_t insn,\n+\t     ppc_cpu_t dialect ATTRIBUTE_UNUSED,\n+\t     int *invalid ATTRIBUTE_UNUSED)\n+{\n+  int64_t dw = ((insn & 1) << 8) | ((insn >> 18) & 0xf8);\n+  return dw - 512;\n+}\n+\n /* The D field in a DX form instruction when the field is split\n    into separate D0, D1 and D2 fields.  */\n \n@@ -2497,8 +2525,13 @@ const struct powerpc_operand powerpc_operands[] =\n #define BHRBE DUIS\n   { 0x3ff, 11, NULL, NULL, 0 },\n \n+  /* The split DW field in a X form instruction.  */\n+#define DW DUIS + 1\n+  { -1, PPC_OPSHIFT_INV, insert_dw, extract_dw,\n+    PPC_OPERAND_PARENS | PPC_OPERAND_SIGNED},\n+\n   /* The split D field in a DX form instruction.  */\n-#define DXD DUIS + 1\n+#define DXD DW + 1\n   { 0xffff, PPC_OPSHIFT_INV, insert_dxd, extract_dxd,\n     PPC_OPERAND_SIGNED | PPC_OPERAND_SIGNOPT},\n \n@@ -3750,6 +3783,9 @@ const unsigned int num_powerpc_operands = (sizeof (powerpc_operands)\n /* The mask for an X form instruction with the BF bits specified.  */\n #define XBF_MASK (X_MASK | (3 << 21))\n \n+/* An X form instruction without the RC field specified.  */\n+#define XRC_MASK XRC (0x3f, 0x3ff, 0)\n+\n /* An X form wait instruction with everything filled in except the WC\n    field.  */\n #define XWC_MASK (XRC (0x3f, 0x3ff, 1) | (7 << 23) | RA_MASK | RB_MASK)\n@@ -7656,6 +7692,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"addeo.\",\tXO(31,138,1,1),\tXO_MASK,     PPCCOM,\t0,\t\t{RT, RA, RB}},\n {\"aeo.\",\tXO(31,138,1,1),\tXO_MASK,     PWRCOM,\t0,\t\t{RT, RA, RB}},\n \n+{\"hashstp\",\tX(31,658),\tXRC_MASK,    POWER8,\t0,\t\t{RB, DW, RA0}},\n+\n {\"mfsrin\",\tX(31,659),\tXRA_MASK,    PPC,\tNON32,\t\t{RT, RB}},\n \n {\"stdbrx\",\tX(31,660),\tX_MASK, CELL|POWER7|PPCA2, 0,\t\t{RS, RA0, RB}},\n@@ -7685,6 +7723,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"tendall.\",\tXRC(31,686,1)|(1<<25), XRTRARB_MASK, PPCHTM, 0,\t\t{0}},\n {\"tend.\",\tXRC(31,686,1), XRTARARB_MASK, PPCHTM,\t0,\t\t{HTM_A}},\n \n+{\"hashchkp\",\tX(31,690),\tXRC_MASK,    POWER8,\t0,\t\t{RB, DW, RA0}},\n+\n {\"stbcx.\",\tXRC(31,694,1),\tX_MASK,\t  POWER8|E6500, 0,\t\t{RS, RA0, RB}},\n \n {\"stfsux\",\tX(31,695),\tX_MASK,\t     COM,\tPPCEFS,\t\t{FRS, RAS, RB}},\n@@ -7715,6 +7755,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"addzeo.\",\tXO(31,202,1,1),\tXORB_MASK,   PPCCOM,\t0,\t\t{RT, RA}},\n {\"azeo.\",\tXO(31,202,1,1),\tXORB_MASK,   PWRCOM,\t0,\t\t{RT, RA}},\n \n+{\"hashst\",\tX(31,722),\tXRC_MASK,    POWER8,\t0,\t\t{RB, DW, RA0}},\n+\n {\"stswi\",\tX(31,725),\tX_MASK,\t     PPCCOM,\tE500|E500MC,\t{RS, RA0, NB}},\n {\"stsi\",\tX(31,725),\tX_MASK,\t     PWRCOM,\t0,\t\t{RS, RA0, NB}},\n \n@@ -7761,6 +7803,8 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"tresume.\",\tXRCL(31,750,1,1), XRTRARB_MASK,PPCHTM,\t0,\t\t{0}},\n {\"tsr.\",\tXRC(31,750,1),\t  XRTLRARB_MASK,PPCHTM,\t0,\t\t{L}},\n \n+{\"hashchk\",\tX(31,754),\tXRC_MASK,    POWER8,\t0,\t\t{RB, DW, RA0}},\n+\n {\"darn\",\tX(31,755),\tXLRAND_MASK, POWER9,\t0,\t\t{RT, LRAND}},\n \n {\"dcba\",\tX(31,758), XRT_MASK, PPC405|PPC7450|BOOKE|PPCA2|PPC476, 0, {RA0, RB}},"
    }
  ]
}