{
  "sha": "168671c14cc88e0c47a2b7d56fdede7d6604f14d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTY4NjcxYzE0Y2M4OGUwYzQ3YTJiN2Q1NmZkZWRlN2Q2NjA0ZjE0ZA==",
  "commit": {
    "author": {
      "name": "Faraz Shahbazker",
      "email": "fshahbazker@wavecomp.com",
      "date": "2021-05-04T23:21:17Z"
    },
    "committer": {
      "name": "Faraz Shahbazker",
      "email": "fshahbazker@wavecomp.com",
      "date": "2021-05-22T06:02:35Z"
    },
    "message": "sim: mips: Add shadow mappings for 32-bit memory address space\n\n32-bit MIPS programs run on the 64-bit simulator model in 64-bit\nsign-extended space. The mapping from 64-bit sign-extended addresses to\n32-bit addresses was removed by commit\n26f8bf63bf36f9062a5cc1afacf71462a4abe0c8, breaking the 64-bit simulator\nmodel. Add shadow mappings from 64-bit sign extended address space to\n32-bit address spaces, in lieu of the AddressTranslation function.\n\n2021-05-04  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n\nsim/mips/ChangeLog:\n\t* interp.c (sim_open): Add shadow mappings from 32-bit\n\taddress space to 64-bit sign-extended address space.",
    "tree": {
      "sha": "2138d04ffeb0e58865490c1382bc28510825b34f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2138d04ffeb0e58865490c1382bc28510825b34f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/168671c14cc88e0c47a2b7d56fdede7d6604f14d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/168671c14cc88e0c47a2b7d56fdede7d6604f14d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/168671c14cc88e0c47a2b7d56fdede7d6604f14d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/168671c14cc88e0c47a2b7d56fdede7d6604f14d/comments",
  "author": {
    "login": "farazs-github",
    "id": 57776434,
    "node_id": "MDQ6VXNlcjU3Nzc2NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/57776434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/farazs-github",
    "html_url": "https://github.com/farazs-github",
    "followers_url": "https://api.github.com/users/farazs-github/followers",
    "following_url": "https://api.github.com/users/farazs-github/following{/other_user}",
    "gists_url": "https://api.github.com/users/farazs-github/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/farazs-github/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/farazs-github/subscriptions",
    "organizations_url": "https://api.github.com/users/farazs-github/orgs",
    "repos_url": "https://api.github.com/users/farazs-github/repos",
    "events_url": "https://api.github.com/users/farazs-github/events{/privacy}",
    "received_events_url": "https://api.github.com/users/farazs-github/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "farazs-github",
    "id": 57776434,
    "node_id": "MDQ6VXNlcjU3Nzc2NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/57776434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/farazs-github",
    "html_url": "https://github.com/farazs-github",
    "followers_url": "https://api.github.com/users/farazs-github/followers",
    "following_url": "https://api.github.com/users/farazs-github/following{/other_user}",
    "gists_url": "https://api.github.com/users/farazs-github/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/farazs-github/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/farazs-github/subscriptions",
    "organizations_url": "https://api.github.com/users/farazs-github/orgs",
    "repos_url": "https://api.github.com/users/farazs-github/repos",
    "events_url": "https://api.github.com/users/farazs-github/events{/privacy}",
    "received_events_url": "https://api.github.com/users/farazs-github/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b312488f1046a1b837561a4adf4323e29377cf12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b312488f1046a1b837561a4adf4323e29377cf12",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b312488f1046a1b837561a4adf4323e29377cf12"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 17,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0d687a9313c198dfad7ca0a8ab9ed3fe5ee22f6f",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/168671c14cc88e0c47a2b7d56fdede7d6604f14d/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/168671c14cc88e0c47a2b7d56fdede7d6604f14d/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=168671c14cc88e0c47a2b7d56fdede7d6604f14d",
      "patch": "@@ -1,5 +1,11 @@\n 2021-05-22  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n \n+sim/mips/ChangeLog:\n+\t* interp.c (sim_open): Add shadow mappings from 32-bit\n+\taddress space to 64-bit sign-extended address space.\n+\n+2021-05-22  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n+\n sim/mips/ChangeLog:\n \t* interp.c (sim_create_inferior): Only truncate sign extension\n \tbits for 32-bit target models."
    },
    {
      "sha": "00c1b632889549c3cd902469f6e12a0641970215",
      "filename": "sim/mips/interp.c",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/168671c14cc88e0c47a2b7d56fdede7d6604f14d/sim/mips/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/168671c14cc88e0c47a2b7d56fdede7d6604f14d/sim/mips/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/interp.c?ref=168671c14cc88e0c47a2b7d56fdede7d6604f14d",
      "patch": "@@ -438,6 +438,9 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \t  /* memory alias K1BASE@1,K1SIZE%MEMSIZE,K0BASE */\n \t  sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx%%0x%lx,0x%0x\",\n \t\t\t   K1BASE, K1SIZE, (long)mem_size, K0BASE);\n+\t  if (WITH_TARGET_WORD_BITSIZE == 64)\n+\t    sim_do_commandf (sd, \"memory alias 0x%x,0x%\" PRIxTW \",0x%\" PRIxTA,\n+\t\t\t     (K0BASE), mem_size, EXTENDED(K0BASE));\n \t}\n \n       device_init(sd);\n@@ -696,11 +699,16 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n   if (idt_monitor_base != 0)\n     {\n       unsigned loop;\n-      unsigned idt_monitor_size = 1 << 11;\n+      address_word idt_monitor_size = 1 << 11;\n \n       /* the default monitor region */\n-      sim_do_commandf (sd, \"memory region 0x%x,0x%x\",\n-\t\t       idt_monitor_base, idt_monitor_size);\n+      if (WITH_TARGET_WORD_BITSIZE == 64)\n+\tsim_do_commandf (sd, \"memory alias 0x%x,0x%\" PRIxTW \",0x%\" PRIxTA,\n+\t\t\t idt_monitor_base, idt_monitor_size,\n+\t\t\t EXTENDED (idt_monitor_base));\n+      else\n+\tsim_do_commandf (sd, \"memory region 0x%x,0x%x\",\n+\t\t\t idt_monitor_base, idt_monitor_size);\n \n       /* Entry into the IDT monitor is via fixed address vectors, and\n \t not using machine instructions. To avoid clashing with use of"
    }
  ]
}