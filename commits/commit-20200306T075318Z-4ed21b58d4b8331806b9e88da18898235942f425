{
  "sha": "4ed21b58d4b8331806b9e88da18898235942f425",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGVkMjFiNThkNGI4MzMxODA2YjllODhkYTE4ODk4MjM1OTQyZjQyNQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-03-06T07:53:18Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-03-06T07:53:18Z"
    },
    "message": "x86: replace NoRex64 on VEX-encoded insns\n\nWhen the template specifies any of the possible VexW settings, we can\nuse this instead of a separate NoRex64 to suppress the setting of REX_W.\nNote that this ends up addressing an inconsistency between VEX- and\nEVEX-encoded VEXTRACTPS, VPEXTR{B,W}, and VPINSR{B,W} - while the former\navoided setting VEX.W, the latter pointlessly set EVEX.W when there is a\n64-bit GPR operand. Adjust the testcase to cover both cases.\n\nConvert VexW= to their respective VexW* on lines touched anyway.",
    "tree": {
      "sha": "a2b3fed5c08bba659f20f0a434f517517fd171dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a2b3fed5c08bba659f20f0a434f517517fd171dc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ed21b58d4b8331806b9e88da18898235942f425",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ed21b58d4b8331806b9e88da18898235942f425",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ed21b58d4b8331806b9e88da18898235942f425",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ed21b58d4b8331806b9e88da18898235942f425/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "643bb87079dd96aed99ff1572375a88179afcd15",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/643bb87079dd96aed99ff1572375a88179afcd15",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/643bb87079dd96aed99ff1572375a88179afcd15"
    }
  ],
  "stats": {
    "total": 226,
    "additions": 126,
    "deletions": 100
  },
  "files": [
    {
      "sha": "5ba026e429c6d32e9f9f8e879d6d0ffa22a912c5",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -1,3 +1,16 @@\n+2020-03-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (process_suffix): Exlucde !vexw insns\n+\talongside !norex64 ones.\n+\t* testsuite/gas/i386/x86-64-avx512bw.s: Test VPEXTR* and VPINSR*\n+\twith both 32- and 64-bit GPR operands.\n+\t* testsuite/gas/i386/x86-64-avx512f.s: Test VEXTRACTPS with both\n+\t32- and 64-bit GPR operands.\n+\t* testsuite/gas/i386/x86-64-avx512bw-intel.d,\n+\ttestsuite/gas/i386/x86-64-avx512bw.d,\n+\ttestsuite/gas/i386/x86-64-avx512f-intel.d,\n+\ttestsuite/gas/i386/x86-64-avx512f.d: Adjust expectations.\n+\n 2020-03-06  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (md_assemble): Drop use of rex64."
    },
    {
      "sha": "c5858f4c53e6d48f03d3139036a7b4de975c9986",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -6667,6 +6667,7 @@ process_suffix (void)\n       if (i.suffix == QWORD_MNEM_SUFFIX\n \t  && flag_code == CODE_64BIT\n \t  && !i.tm.opcode_modifier.norex64\n+\t  && !i.tm.opcode_modifier.vexw\n \t  /* Special case for xchg %rax,%rax.  It is NOP and doesn't\n \t     need rex64. */\n \t  && ! (i.operands == 2"
    },
    {
      "sha": "530db0e2d428b4c68d168017671c7b0b4d4df292",
      "filename": "gas/testsuite/gas/i386/x86-64-avx512bw-intel.d",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512bw-intel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512bw-intel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-avx512bw-intel.d?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -229,9 +229,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 00 20 00 00[ \t]*vpblendmw zmm30,zmm29,ZMMWORD PTR \\[rdx\\+0x2000\\]\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 72 80[ \t]*vpblendmw zmm30,zmm29,ZMMWORD PTR \\[rdx-0x2000\\]\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 c0 df ff ff[ \t]*vpblendmw zmm30,zmm29,ZMMWORD PTR \\[rdx-0x2040\\]\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 ab[ \t]*vpextrb rax,xmm29,0xab\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 7b[ \t]*vpextrb rax,xmm29,0x7b\n-[ \t]*[a-f0-9]+:[ \t]*62 43 fd 08 14 e8 7b[ \t]*vpextrb r8,xmm29,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 ab[ \t]*vpextrb eax,xmm29,0xab\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 7b[ \t]*vpextrb eax,xmm29,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 43 7d 08 14 e8 7b[ \t]*vpextrb r8d,xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 29 7b[ \t]*vpextrb BYTE PTR \\[rcx\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 23 7d 08 14 ac f0 23 01 00 00 7b[ \t]*vpextrb BYTE PTR \\[rax\\+r14\\*8\\+0x123\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 6a 7f 7b[ \t]*vpextrb BYTE PTR \\[rdx\\+0x7f\\],xmm29,0x7b\n@@ -244,9 +244,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa 00 01 00 00 7b[ \t]*vpextrw WORD PTR \\[rdx\\+0x100\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 6a 80 7b[ \t]*vpextrw WORD PTR \\[rdx-0x100\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa fe fe ff ff 7b[ \t]*vpextrw WORD PTR \\[rdx-0x102\\],xmm29,0x7b\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 ab[ \t]*vpextrw rax,xmm30,0xab\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 7b[ \t]*vpextrw rax,xmm30,0x7b\n-[ \t]*[a-f0-9]+:[ \t]*62 11 fd 08 c5 c6 7b[ \t]*vpextrw r8,xmm30,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 ab[ \t]*vpextrw eax,xmm30,0xab\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 7b[ \t]*vpextrw eax,xmm30,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 11 7d 08 c5 c6 7b[ \t]*vpextrw r8d,xmm30,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 ab[ \t]*vpinsrb xmm30,xmm29,eax,0xab\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 7b[ \t]*vpinsrb xmm30,xmm29,eax,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f5 7b[ \t]*vpinsrb xmm30,xmm29,ebp,0x7b\n@@ -1076,9 +1076,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 00 20 00 00[ \t]*vpblendmw zmm30,zmm29,ZMMWORD PTR \\[rdx\\+0x2000\\]\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 72 80[ \t]*vpblendmw zmm30,zmm29,ZMMWORD PTR \\[rdx-0x2000\\]\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 c0 df ff ff[ \t]*vpblendmw zmm30,zmm29,ZMMWORD PTR \\[rdx-0x2040\\]\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 ab[ \t]*vpextrb rax,xmm29,0xab\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 7b[ \t]*vpextrb rax,xmm29,0x7b\n-[ \t]*[a-f0-9]+:[ \t]*62 43 fd 08 14 e8 7b[ \t]*vpextrb r8,xmm29,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 ab[ \t]*vpextrb eax,xmm29,0xab\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 7b[ \t]*vpextrb eax,xmm29,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 43 7d 08 14 e8 7b[ \t]*vpextrb r8d,xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 29 7b[ \t]*vpextrb BYTE PTR \\[rcx\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 23 7d 08 14 ac f0 34 12 00 00 7b[ \t]*vpextrb BYTE PTR \\[rax\\+r14\\*8\\+0x1234\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 6a 7f 7b[ \t]*vpextrb BYTE PTR \\[rdx\\+0x7f\\],xmm29,0x7b\n@@ -1091,9 +1091,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa 00 01 00 00 7b[ \t]*vpextrw WORD PTR \\[rdx\\+0x100\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 6a 80 7b[ \t]*vpextrw WORD PTR \\[rdx-0x100\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa fe fe ff ff 7b[ \t]*vpextrw WORD PTR \\[rdx-0x102\\],xmm29,0x7b\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 ab[ \t]*vpextrw rax,xmm30,0xab\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 7b[ \t]*vpextrw rax,xmm30,0x7b\n-[ \t]*[a-f0-9]+:[ \t]*62 11 fd 08 c5 c6 7b[ \t]*vpextrw r8,xmm30,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 ab[ \t]*vpextrw eax,xmm30,0xab\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 7b[ \t]*vpextrw eax,xmm30,0x7b\n+[ \t]*[a-f0-9]+:[ \t]*62 11 7d 08 c5 c6 7b[ \t]*vpextrw r8d,xmm30,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 ab[ \t]*vpinsrb xmm30,xmm29,eax,0xab\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 7b[ \t]*vpinsrb xmm30,xmm29,eax,0x7b\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f5 7b[ \t]*vpinsrb xmm30,xmm29,ebp,0x7b"
    },
    {
      "sha": "ee3385a95aa260b37d65eb5ae6bad46412c672ee",
      "filename": "gas/testsuite/gas/i386/x86-64-avx512bw.d",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512bw.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512bw.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-avx512bw.d?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -229,9 +229,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 00 20 00 00[ \t]*vpblendmw 0x2000\\(%rdx\\),%zmm29,%zmm30\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 72 80[ \t]*vpblendmw -0x2000\\(%rdx\\),%zmm29,%zmm30\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 c0 df ff ff[ \t]*vpblendmw -0x2040\\(%rdx\\),%zmm29,%zmm30\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 ab[ \t]*vpextrb \\$0xab,%xmm29,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 43 fd 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%r8\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 ab[ \t]*vpextrb \\$0xab,%xmm29,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 43 7d 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%r8d\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 29 7b[ \t]*vpextrb \\$0x7b,%xmm29,\\(%rcx\\)\n [ \t]*[a-f0-9]+:[ \t]*62 23 7d 08 14 ac f0 23 01 00 00 7b[ \t]*vpextrb \\$0x7b,%xmm29,0x123\\(%rax,%r14,8\\)\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 6a 7f 7b[ \t]*vpextrb \\$0x7b,%xmm29,0x7f\\(%rdx\\)\n@@ -244,9 +244,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa 00 01 00 00 7b[ \t]*vpextrw \\$0x7b,%xmm29,0x100\\(%rdx\\)\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 6a 80 7b[ \t]*vpextrw \\$0x7b,%xmm29,-0x100\\(%rdx\\)\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa fe fe ff ff 7b[ \t]*vpextrw \\$0x7b,%xmm29,-0x102\\(%rdx\\)\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 ab[ \t]*vpextrw \\$0xab,%xmm30,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 11 fd 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%r8\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 ab[ \t]*vpextrw \\$0xab,%xmm30,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 11 7d 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%r8d\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 ab[ \t]*vpinsrb \\$0xab,%eax,%xmm29,%xmm30\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 7b[ \t]*vpinsrb \\$0x7b,%eax,%xmm29,%xmm30\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f5 7b[ \t]*vpinsrb \\$0x7b,%ebp,%xmm29,%xmm30\n@@ -1076,9 +1076,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 00 20 00 00[ \t]*vpblendmw 0x2000\\(%rdx\\),%zmm29,%zmm30\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 72 80[ \t]*vpblendmw -0x2000\\(%rdx\\),%zmm29,%zmm30\n [ \t]*[a-f0-9]+:[ \t]*62 62 95 40 66 b2 c0 df ff ff[ \t]*vpblendmw -0x2040\\(%rdx\\),%zmm29,%zmm30\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 ab[ \t]*vpextrb \\$0xab,%xmm29,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 63 fd 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 43 fd 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%r8\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 ab[ \t]*vpextrb \\$0xab,%xmm29,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 43 7d 08 14 e8 7b[ \t]*vpextrb \\$0x7b,%xmm29,%r8d\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 29 7b[ \t]*vpextrb \\$0x7b,%xmm29,\\(%rcx\\)\n [ \t]*[a-f0-9]+:[ \t]*62 23 7d 08 14 ac f0 34 12 00 00 7b[ \t]*vpextrb \\$0x7b,%xmm29,0x1234\\(%rax,%r14,8\\)\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 14 6a 7f 7b[ \t]*vpextrb \\$0x7b,%xmm29,0x7f\\(%rdx\\)\n@@ -1091,9 +1091,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa 00 01 00 00 7b[ \t]*vpextrw \\$0x7b,%xmm29,0x100\\(%rdx\\)\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 6a 80 7b[ \t]*vpextrw \\$0x7b,%xmm29,-0x100\\(%rdx\\)\n [ \t]*[a-f0-9]+:[ \t]*62 63 7d 08 15 aa fe fe ff ff 7b[ \t]*vpextrw \\$0x7b,%xmm29,-0x102\\(%rdx\\)\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 ab[ \t]*vpextrw \\$0xab,%xmm30,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 91 fd 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%rax\n-[ \t]*[a-f0-9]+:[ \t]*62 11 fd 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%r8\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 ab[ \t]*vpextrw \\$0xab,%xmm30,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 91 7d 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%eax\n+[ \t]*[a-f0-9]+:[ \t]*62 11 7d 08 c5 c6 7b[ \t]*vpextrw \\$0x7b,%xmm30,%r8d\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 ab[ \t]*vpinsrb \\$0xab,%eax,%xmm29,%xmm30\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f0 7b[ \t]*vpinsrb \\$0x7b,%eax,%xmm29,%xmm30\n [ \t]*[a-f0-9]+:[ \t]*62 63 15 00 20 f5 7b[ \t]*vpinsrb \\$0x7b,%ebp,%xmm29,%xmm30"
    },
    {
      "sha": "d04ddfb68d5347c4d60ea44aeb83021d73582a9a",
      "filename": "gas/testsuite/gas/i386/x86-64-avx512bw.s",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512bw.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512bw.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-avx512bw.s?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -223,7 +223,7 @@ _start:\n \tvpblendmw\t8192(%rdx), %zmm29, %zmm30\t # AVX512BW\n \tvpblendmw\t-8192(%rdx), %zmm29, %zmm30\t # AVX512BW Disp8\n \tvpblendmw\t-8256(%rdx), %zmm29, %zmm30\t # AVX512BW\n-\tvpextrb\t$0xab, %xmm29, %rax\t # AVX512BW\n+\tvpextrb\t$0xab, %xmm29, %eax\t # AVX512BW\n \tvpextrb\t$123, %xmm29, %rax\t # AVX512BW\n \tvpextrb\t$123, %xmm29, %r8\t # AVX512BW\n \tvpextrb\t$123, %xmm29, (%rcx)\t # AVX512BW\n@@ -238,23 +238,23 @@ _start:\n \tvpextrw\t$123, %xmm29, 256(%rdx)\t # AVX512BW\n \tvpextrw\t$123, %xmm29, -256(%rdx)\t # AVX512BW Disp8\n \tvpextrw\t$123, %xmm29, -258(%rdx)\t # AVX512BW\n-\tvpextrw\t$0xab, %xmm30, %rax\t # AVX512BW\n+\tvpextrw\t$0xab, %xmm30, %eax\t # AVX512BW\n \tvpextrw\t$123, %xmm30, %rax\t # AVX512BW\n \tvpextrw\t$123, %xmm30, %r8\t # AVX512BW\n \tvpinsrb\t$0xab, %eax, %xmm29, %xmm30\t # AVX512BW\n-\tvpinsrb\t$123, %eax, %xmm29, %xmm30\t # AVX512BW\n+\tvpinsrb\t$123, %rax, %xmm29, %xmm30\t # AVX512BW\n \tvpinsrb\t$123, %ebp, %xmm29, %xmm30\t # AVX512BW\n-\tvpinsrb\t$123, %r13d, %xmm29, %xmm30\t # AVX512BW\n+\tvpinsrb\t$123, %r13, %xmm29, %xmm30\t # AVX512BW\n \tvpinsrb\t$123, (%rcx), %xmm29, %xmm30\t # AVX512BW\n \tvpinsrb\t$123, 0x123(%rax,%r14,8), %xmm29, %xmm30\t # AVX512BW\n \tvpinsrb\t$123, 127(%rdx), %xmm29, %xmm30\t # AVX512BW Disp8\n \tvpinsrb\t$123, 128(%rdx), %xmm29, %xmm30\t # AVX512BW\n \tvpinsrb\t$123, -128(%rdx), %xmm29, %xmm30\t # AVX512BW Disp8\n \tvpinsrb\t$123, -129(%rdx), %xmm29, %xmm30\t # AVX512BW\n \tvpinsrw\t$0xab, %eax, %xmm29, %xmm30\t # AVX512BW\n-\tvpinsrw\t$123, %eax, %xmm29, %xmm30\t # AVX512BW\n+\tvpinsrw\t$123, %rax, %xmm29, %xmm30\t # AVX512BW\n \tvpinsrw\t$123, %ebp, %xmm29, %xmm30\t # AVX512BW\n-\tvpinsrw\t$123, %r13d, %xmm29, %xmm30\t # AVX512BW\n+\tvpinsrw\t$123, %r13, %xmm29, %xmm30\t # AVX512BW\n \tvpinsrw\t$123, (%rcx), %xmm29, %xmm30\t # AVX512BW\n \tvpinsrw\t$123, 0x123(%rax,%r14,8), %xmm29, %xmm30\t # AVX512BW\n \tvpinsrw\t$123, 254(%rdx), %xmm29, %xmm30\t # AVX512BW Disp8\n@@ -1072,7 +1072,7 @@ _start:\n \tvpblendmw\tzmm30, zmm29, ZMMWORD PTR [rdx+8192]\t # AVX512BW\n \tvpblendmw\tzmm30, zmm29, ZMMWORD PTR [rdx-8192]\t # AVX512BW Disp8\n \tvpblendmw\tzmm30, zmm29, ZMMWORD PTR [rdx-8256]\t # AVX512BW\n-\tvpextrb\trax, xmm29, 0xab\t # AVX512BW\n+\tvpextrb\teax, xmm29, 0xab\t # AVX512BW\n \tvpextrb\trax, xmm29, 123\t # AVX512BW\n \tvpextrb\tr8, xmm29, 123\t # AVX512BW\n \tvpextrb\tBYTE PTR [rcx], xmm29, 123\t # AVX512BW\n@@ -1087,23 +1087,23 @@ _start:\n \tvpextrw\tWORD PTR [rdx+256], xmm29, 123\t # AVX512BW\n \tvpextrw\tWORD PTR [rdx-256], xmm29, 123\t # AVX512BW Disp8\n \tvpextrw\tWORD PTR [rdx-258], xmm29, 123\t # AVX512BW\n-\tvpextrw\trax, xmm30, 0xab\t # AVX512BW\n+\tvpextrw\teax, xmm30, 0xab\t # AVX512BW\n \tvpextrw\trax, xmm30, 123\t # AVX512BW\n \tvpextrw\tr8, xmm30, 123\t # AVX512BW\n \tvpinsrb\txmm30, xmm29, eax, 0xab\t # AVX512BW\n-\tvpinsrb\txmm30, xmm29, eax, 123\t # AVX512BW\n+\tvpinsrb\txmm30, xmm29, rax, 123\t # AVX512BW\n \tvpinsrb\txmm30, xmm29, ebp, 123\t # AVX512BW\n-\tvpinsrb\txmm30, xmm29, r13d, 123\t # AVX512BW\n+\tvpinsrb\txmm30, xmm29, r13, 123\t # AVX512BW\n \tvpinsrb\txmm30, xmm29, BYTE PTR [rcx], 123\t # AVX512BW\n \tvpinsrb\txmm30, xmm29, BYTE PTR [rax+r14*8+0x1234], 123\t # AVX512BW\n \tvpinsrb\txmm30, xmm29, BYTE PTR [rdx+127], 123\t # AVX512BW Disp8\n \tvpinsrb\txmm30, xmm29, BYTE PTR [rdx+128], 123\t # AVX512BW\n \tvpinsrb\txmm30, xmm29, BYTE PTR [rdx-128], 123\t # AVX512BW Disp8\n \tvpinsrb\txmm30, xmm29, BYTE PTR [rdx-129], 123\t # AVX512BW\n \tvpinsrw\txmm30, xmm29, eax, 0xab\t # AVX512BW\n-\tvpinsrw\txmm30, xmm29, eax, 123\t # AVX512BW\n+\tvpinsrw\txmm30, xmm29, rax, 123\t # AVX512BW\n \tvpinsrw\txmm30, xmm29, ebp, 123\t # AVX512BW\n-\tvpinsrw\txmm30, xmm29, r13d, 123\t # AVX512BW\n+\tvpinsrw\txmm30, xmm29, r13, 123\t # AVX512BW\n \tvpinsrw\txmm30, xmm29, WORD PTR [rcx], 123\t # AVX512BW\n \tvpinsrw\txmm30, xmm29, WORD PTR [rax+r14*8+0x1234], 123\t # AVX512BW\n \tvpinsrw\txmm30, xmm29, WORD PTR [rdx+254], 123\t # AVX512BW Disp8"
    },
    {
      "sha": "867be88826fa86346cf4c258b32841e60588f548",
      "filename": "gas/testsuite/gas/i386/x86-64-avx512f-intel.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512f-intel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512f-intel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-avx512f-intel.d?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -2709,9 +2709,9 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee ab \tvextracti64x4 ymm30\\{k7\\},zmm29,0xab\n [ \t]*[a-f0-9]+:\t62 03 fd cf 3b ee ab \tvextracti64x4 ymm30\\{k7\\}\\{z\\},zmm29,0xab\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee 7b \tvextracti64x4 ymm30\\{k7\\},zmm29,0x7b\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 ab \tvextractps rax,xmm29,0xab\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 7b \tvextractps rax,xmm29,0x7b\n-[ \t]*[a-f0-9]+:\t62 43 fd 08 17 e8 7b \tvextractps r8,xmm29,0x7b\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 ab \tvextractps eax,xmm29,0xab\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 7b \tvextractps eax,xmm29,0x7b\n+[ \t]*[a-f0-9]+:\t62 43 7d 08 17 e8 7b \tvextractps r8d,xmm29,0x7b\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 29 7b \tvextractps DWORD PTR \\[rcx\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:\t62 23 7d 08 17 ac f0 23 01 00 00 7b \tvextractps DWORD PTR \\[rax\\+r14\\*8\\+0x123\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 6a 7f 7b \tvextractps DWORD PTR \\[rdx\\+0x1fc\\],xmm29,0x7b\n@@ -9730,9 +9730,9 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee ab \tvextracti64x4 ymm30\\{k7\\},zmm29,0xab\n [ \t]*[a-f0-9]+:\t62 03 fd cf 3b ee ab \tvextracti64x4 ymm30\\{k7\\}\\{z\\},zmm29,0xab\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee 7b \tvextracti64x4 ymm30\\{k7\\},zmm29,0x7b\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 ab \tvextractps rax,xmm29,0xab\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 7b \tvextractps rax,xmm29,0x7b\n-[ \t]*[a-f0-9]+:\t62 43 fd 08 17 e8 7b \tvextractps r8,xmm29,0x7b\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 ab \tvextractps eax,xmm29,0xab\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 7b \tvextractps eax,xmm29,0x7b\n+[ \t]*[a-f0-9]+:\t62 43 7d 08 17 e8 7b \tvextractps r8d,xmm29,0x7b\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 29 7b \tvextractps DWORD PTR \\[rcx\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:\t62 23 7d 08 17 ac f0 34 12 00 00 7b \tvextractps DWORD PTR \\[rax\\+r14\\*8\\+0x1234\\],xmm29,0x7b\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 6a 7f 7b \tvextractps DWORD PTR \\[rdx\\+0x1fc\\],xmm29,0x7b"
    },
    {
      "sha": "9ca2c1ededd628a7af42e891be939806249d9b3b",
      "filename": "gas/testsuite/gas/i386/x86-64-avx512f.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512f.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512f.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-avx512f.d?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -2708,9 +2708,9 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee ab \tvextracti64x4 \\$0xab,%zmm29,%ymm30\\{%k7\\}\n [ \t]*[a-f0-9]+:\t62 03 fd cf 3b ee ab \tvextracti64x4 \\$0xab,%zmm29,%ymm30\\{%k7\\}\\{z\\}\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee 7b \tvextracti64x4 \\$0x7b,%zmm29,%ymm30\\{%k7\\}\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 ab \tvextractps \\$0xab,%xmm29,%rax\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%rax\n-[ \t]*[a-f0-9]+:\t62 43 fd 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%r8\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 ab \tvextractps \\$0xab,%xmm29,%eax\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%eax\n+[ \t]*[a-f0-9]+:\t62 43 7d 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%r8d\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 29 7b \tvextractps \\$0x7b,%xmm29,\\(%rcx\\)\n [ \t]*[a-f0-9]+:\t62 23 7d 08 17 ac f0 23 01 00 00 7b \tvextractps \\$0x7b,%xmm29,0x123\\(%rax,%r14,8\\)\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 6a 7f 7b \tvextractps \\$0x7b,%xmm29,0x1fc\\(%rdx\\)\n@@ -9729,9 +9729,9 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee ab \tvextracti64x4 \\$0xab,%zmm29,%ymm30\\{%k7\\}\n [ \t]*[a-f0-9]+:\t62 03 fd cf 3b ee ab \tvextracti64x4 \\$0xab,%zmm29,%ymm30\\{%k7\\}\\{z\\}\n [ \t]*[a-f0-9]+:\t62 03 fd 4f 3b ee 7b \tvextracti64x4 \\$0x7b,%zmm29,%ymm30\\{%k7\\}\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 ab \tvextractps \\$0xab,%xmm29,%rax\n-[ \t]*[a-f0-9]+:\t62 63 fd 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%rax\n-[ \t]*[a-f0-9]+:\t62 43 fd 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%r8\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 ab \tvextractps \\$0xab,%xmm29,%eax\n+[ \t]*[a-f0-9]+:\t62 63 7d 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%eax\n+[ \t]*[a-f0-9]+:\t62 43 7d 08 17 e8 7b \tvextractps \\$0x7b,%xmm29,%r8d\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 29 7b \tvextractps \\$0x7b,%xmm29,\\(%rcx\\)\n [ \t]*[a-f0-9]+:\t62 23 7d 08 17 ac f0 34 12 00 00 7b \tvextractps \\$0x7b,%xmm29,0x1234\\(%rax,%r14,8\\)\n [ \t]*[a-f0-9]+:\t62 63 7d 08 17 6a 7f 7b \tvextractps \\$0x7b,%xmm29,0x1fc\\(%rdx\\)"
    },
    {
      "sha": "f259525b14cc03c4696ea9d932436d9d2f44baf0",
      "filename": "gas/testsuite/gas/i386/x86-64-avx512f.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512f.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/gas/testsuite/gas/i386/x86-64-avx512f.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-avx512f.s?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -2953,7 +2953,7 @@ _start:\n \tvextracti64x4\t$0xab, %zmm29, %ymm30{%k7}{z}\t # AVX512F\n \tvextracti64x4\t$123, %zmm29, %ymm30{%k7}\t # AVX512F\n \n-\tvextractps\t$0xab, %xmm29, %rax\t # AVX512F\n+\tvextractps\t$0xab, %xmm29, %eax\t # AVX512F\n \tvextractps\t$123, %xmm29, %rax\t # AVX512F\n \tvextractps\t$123, %xmm29, %r8\t # AVX512F\n \tvextractps\t$123, %xmm29, (%rcx)\t # AVX512F\n@@ -10611,7 +10611,7 @@ _start:\n \tvextracti64x4\tymm30{k7}{z}, zmm29, 0xab\t # AVX512F\n \tvextracti64x4\tymm30{k7}, zmm29, 123\t # AVX512F\n \n-\tvextractps\trax, xmm29, 0xab\t # AVX512F\n+\tvextractps\teax, xmm29, 0xab\t # AVX512F\n \tvextractps\trax, xmm29, 123\t # AVX512F\n \tvextractps\tr8, xmm29, 123\t # AVX512F\n \tvextractps\tDWORD PTR [rcx], xmm29, 123\t # AVX512F"
    },
    {
      "sha": "487e3df64202e100ae2a5c04e56b82d228e0e922",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -1,3 +1,15 @@\n+2020-03-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (movq): Drop NoRex64 from XMM/XMM SSE2AVX variants.\n+\t(movmskps, pextrw, pinsrw, pmovmskb, movmskpd, extractps,\n+\tpextrb, pinsrb, roundsd): Drop NoRex64 and where applicable use\n+\tVexW0 on SSE2AVX variants.\n+\t(vmovq): Drop NoRex64 from XMM/XMM variants.\n+\t(vextractps, vmovmskpd, vmovmskps, vpextrb, vpextrw, vpinsrb,\n+\tvpinsrw, vpmovmskb, vroundsd, vpmovmskb): Drop NoRex64 and where\n+\tapplicable use VexW0.\n+\t* i386-tbl.h: Re-generate.\n+\n 2020-03-06  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-gen.c (opcode_modifiers): Remove Rex64 field."
    },
    {
      "sha": "0b3d9dfc1ca6d51ced946b222eb9f496ac642d11",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 25,
      "deletions": 25,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -1026,8 +1026,8 @@ movq, 2, 0xa1, None, 1, Cpu64, D|Size64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|\n movq, 2, 0x89, None, 1, Cpu64, D|Modrm|Size64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|HLEPrefixOk=3, { Reg64, Reg64|Unspecified|Qword|BaseIndex }\n movq, 2, 0xc7, 0x0, 1, Cpu64, Modrm|Size64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|HLEPrefixOk=3|Optimize, { Imm32S, Reg64|Qword|Unspecified|BaseIndex }\n movq, 2, 0xb8, None, 1, Cpu64, Size64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|Optimize, { Imm64, Reg64 }\n-movq, 2, 0xf37e, None, 1, CpuAVX, Load|Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64|SSE2AVX, { Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n-movq, 2, 0x66d6, None, 1, CpuAVX, Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64|SSE2AVX, { RegXMM, Qword|Unspecified|BaseIndex|RegXMM }\n+movq, 2, 0xf37e, None, 1, CpuAVX, Load|Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n+movq, 2, 0x66d6, None, 1, CpuAVX, Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM, Qword|Unspecified|BaseIndex|RegXMM }\n movq, 2, 0x666e, None, 1, CpuAVX|Cpu64, D|Modrm|Vex=1|VexOpcode=0|VexW=2|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|Size64|SSE2AVX, { Reg64|Unspecified|BaseIndex, RegXMM }\n movq, 2, 0xf30f7e, None, 2, CpuSSE2, Load|Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Unspecified|Qword|BaseIndex|RegXMM, RegXMM }\n movq, 2, 0x660fd6, None, 2, CpuSSE2, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { RegXMM, Unspecified|Qword|BaseIndex|RegXMM }\n@@ -1293,7 +1293,7 @@ movlhps, 2, 0xf16, None, 2, CpuSSE, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSu\n movlps, 2, 0x12, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Qword|Unspecified|BaseIndex, RegXMM }\n movlps, 2, 0x13, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM, Qword|Unspecified|BaseIndex }\n movlps, 2, 0xf12, None, 2, CpuSSE, D|Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex, RegXMM }\n-movmskps, 2, 0x50, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64|SSE2AVX, { RegXMM, Reg32|Reg64 }\n+movmskps, 2, 0x50, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW0|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|SSE2AVX, { RegXMM, Reg32|Reg64 }\n movmskps, 2, 0xf50, None, 2, CpuSSE, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { RegXMM, Reg32|Reg64 }\n movntps, 2, 0x2b, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM, Xmmword|Unspecified|BaseIndex }\n movntps, 2, 0xf2b, None, 2, CpuSSE, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, Xmmword|Unspecified|BaseIndex }\n@@ -1317,14 +1317,14 @@ pavgb, 2, 0x660fe0, None, 2, CpuSSE2, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_q\n pavgw, 2, 0xfe3, None, 2, CpuSSE|Cpu3dnowA, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoAVX, { Qword|Unspecified|BaseIndex|RegMMX, RegMMX }\n pavgw, 2, 0x66e3, None, 1, CpuAVX, Modrm|C|Vex|VexOpcode=0|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM|Unspecified|BaseIndex, RegXMM }\n pavgw, 2, 0x660fe3, None, 2, CpuSSE2, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Unspecified|BaseIndex, RegXMM }\n-pextrw, 3, 0x66c5, None, 1, CpuAVX, Load|Modrm|Vex|VexOpcode=0|VexW=1|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64|SSE2AVX, { Imm8, RegXMM, Reg32|Reg64 }\n-pextrw, 3, 0x6615, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64|SSE2AVX, { Imm8, RegXMM, Reg32|Reg64 }\n+pextrw, 3, 0x66c5, None, 1, CpuAVX, Load|Modrm|Vex|VexOpcode=0|VexW0|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM, Reg32|Reg64 }\n+pextrw, 3, 0x6615, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM, Reg32|Reg64 }\n pextrw, 3, 0x6615, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM, Word|Unspecified|BaseIndex }\n pextrw, 3, 0x660fc5, None, 2, CpuSSE2, Load|Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg32|Reg64 }\n pextrw, 3, 0x660f3a15, None, 3, CpuSSE4_1, RegMem|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg32|Reg64 }\n pextrw, 3, 0x660f3a15, None, 3, CpuSSE4_1, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Word|Unspecified|BaseIndex }\n pextrw, 3, 0xfc5, None, 2, CpuSSE|Cpu3dnowA, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64|NoAVX, { Imm8, RegMMX, Reg32|Reg64 }\n-pinsrw, 3, 0x66c4, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64|SSE2AVX, { Imm8, Reg32|Reg64, RegXMM }\n+pinsrw, 3, 0x66c4, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexW0|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|SSE2AVX, { Imm8, Reg32|Reg64, RegXMM }\n pinsrw, 3, 0x66c4, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|SSE2AVX, { Imm8, Word|Unspecified|BaseIndex, RegXMM }\n pinsrw, 3, 0x660fc4, None, 2, CpuSSE2, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { Imm8, Reg32|Reg64, RegXMM }\n pinsrw, 3, 0x660fc4, None, 2, CpuSSE2, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { Imm8, Word|Unspecified|BaseIndex, RegXMM }\n@@ -1342,7 +1342,7 @@ pminsw, 2, 0xfea, None, 2, CpuSSE|Cpu3dnowA, Modrm|IgnoreSize|No_bSuf|No_wSuf|No\n pminub, 2, 0x66da, None, 1, CpuAVX, Modrm|C|Vex|VexOpcode=0|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM|Unspecified|BaseIndex, RegXMM }\n pminub, 2, 0x660fda, None, 2, CpuSSE2, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Unspecified|BaseIndex, RegXMM }\n pminub, 2, 0xfda, None, 2, CpuSSE|Cpu3dnowA, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoAVX, { Qword|Unspecified|BaseIndex|RegMMX, RegMMX }\n-pmovmskb, 2, 0x66d7, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64|SSE2AVX, { RegXMM, Reg32|Reg64 }\n+pmovmskb, 2, 0x66d7, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW0|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|SSE2AVX, { RegXMM, Reg32|Reg64 }\n pmovmskb, 2, 0x660fd7, None, 2, CpuSSE2, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { RegXMM, Reg32|Reg64 }\n pmovmskb, 2, 0xfd7, None, 2, CpuSSE|Cpu3dnowA, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64|NoAVX, { RegMMX, Reg32|Reg64 }\n pmulhuw, 2, 0x66e4, None, 1, CpuAVX, Modrm|C|Vex|VexOpcode=0|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM|Unspecified|BaseIndex, RegXMM }\n@@ -1464,7 +1464,7 @@ movhpd, 2, 0x660f16, None, 2, CpuSSE2, D|Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSu\n movlpd, 2, 0x6612, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Qword|Unspecified|BaseIndex, RegXMM }\n movlpd, 2, 0x6613, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM, Qword|Unspecified|BaseIndex }\n movlpd, 2, 0x660f12, None, 2, CpuSSE2, D|Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex, RegXMM }\n-movmskpd, 2, 0x6650, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64|SSE2AVX, { RegXMM, Reg32|Reg64 }\n+movmskpd, 2, 0x6650, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW0|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|SSE2AVX, { RegXMM, Reg32|Reg64 }\n movmskpd, 2, 0x660f50, None, 2, CpuSSE2, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { RegXMM, Reg32|Reg64 }\n movntpd, 2, 0x662b, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM, Xmmword|Unspecified|BaseIndex }\n movntpd, 2, 0x660f2b, None, 2, CpuSSE2, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, Xmmword|Unspecified|BaseIndex }\n@@ -1695,7 +1695,7 @@ dppd, 3, 0x660f3a41, None, 3, CpuSSE4_1, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|N\n dpps, 3, 0x6640, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM|Unspecified|BaseIndex, RegXMM }\n dpps, 3, 0x660f3a40, None, 3, CpuSSE4_1, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Unspecified|BaseIndex, RegXMM }\n extractps, 3, 0x6617, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM, Reg32|Dword|Unspecified|BaseIndex }\n-extractps, 3, 0x6617, None, 1, CpuAVX|Cpu64, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64|SSE2AVX, { Imm8, RegXMM, Reg64 }\n+extractps, 3, 0x6617, None, 1, CpuAVX|Cpu64, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM, Reg64 }\n extractps, 3, 0x660f3a17, None, 3, CpuSSE4_1, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg32|Dword|Unspecified|BaseIndex }\n extractps, 3, 0x660f3a17, None, 3, CpuSSE4_1|Cpu64, RegMem|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg64 }\n insertps, 3, 0x6621, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, Dword|Unspecified|BaseIndex|RegXMM, RegXMM }\n@@ -1714,7 +1714,7 @@ pblendw, 3, 0x660e, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexW=1|No_b\n pblendw, 3, 0x660f3a0e, None, 3, CpuSSE4_1, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Unspecified|BaseIndex, RegXMM }\n pcmpeqq, 2, 0x6629, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM|Unspecified|BaseIndex, RegXMM }\n pcmpeqq, 2, 0x660f3829, None, 3, CpuSSE4_1, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Unspecified|BaseIndex, RegXMM }\n-pextrb, 3, 0x6614, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64|SSE2AVX, { Imm8, RegXMM, Reg32|Reg64 }\n+pextrb, 3, 0x6614, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM, Reg32|Reg64 }\n pextrb, 3, 0x6614, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM, Byte|Unspecified|BaseIndex }\n pextrb, 3, 0x660f3a14, None, 3, CpuSSE4_1, RegMem|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg32|Reg64 }\n pextrb, 3, 0x660f3a14, None, 3, CpuSSE4_1, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Byte|Unspecified|BaseIndex }\n@@ -1724,7 +1724,7 @@ pextrq, 3, 0x6616, None, 1, CpuAVX|Cpu64, Modrm|Vex|VexOpcode=2|VexW1|No_bSuf|No\n pextrq, 3, 0x660f3a16, None, 3, CpuSSE4_1|Cpu64, Modrm|Size64|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg64|Unspecified|BaseIndex }\n phminposuw, 2, 0x6641, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM|Unspecified|BaseIndex, RegXMM }\n phminposuw, 2, 0x660f3841, None, 3, CpuSSE4_1, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Unspecified|BaseIndex, RegXMM }\n-pinsrb, 3, 0x6620, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64|SSE2AVX, { Imm8, Reg32|Reg64, RegXMM }\n+pinsrb, 3, 0x6620, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, Reg32|Reg64, RegXMM }\n pinsrb, 3, 0x6620, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, Byte|Unspecified|BaseIndex, RegXMM }\n pinsrb, 3, 0x660f3a20, None, 3, CpuSSE4_1, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, Reg32|Reg64, RegXMM }\n pinsrb, 3, 0x660f3a20, None, 3, CpuSSE4_1, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Byte|Unspecified|BaseIndex, RegXMM }\n@@ -1782,7 +1782,7 @@ roundpd, 3, 0x6609, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexW=1|No_bSuf|No_wSu\n roundpd, 3, 0x660f3a09, None, 3, CpuSSE4_1, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Unspecified|BaseIndex, RegXMM }\n roundps, 3, 0x6608, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, RegXMM|Unspecified|BaseIndex, RegXMM }\n roundps, 3, 0x660f3a08, None, 3, CpuSSE4_1, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Unspecified|BaseIndex, RegXMM }\n-roundsd, 3, 0x660b, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=2|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64|SSE2AVX, { Imm8, Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n+roundsd, 3, 0x660b, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=2|VexVVVV=1|VexW0|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n roundsd, 3, 0x660f3a0b, None, 3, CpuSSE4_1, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n roundss, 3, 0x660a, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=2|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, Dword|Unspecified|BaseIndex|RegXMM, RegXMM }\n roundss, 3, 0x660f3a0a, None, 3, CpuSSE4_1, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Dword|Unspecified|BaseIndex|RegXMM, RegXMM }\n@@ -2055,7 +2055,7 @@ vdppd, 4, 0x6641, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexWIG|No_bSu\n vdpps, 4, 0x6640, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }\n vextractf128, 3, 0x6619, None, 1, CpuAVX, Modrm|Vex=2|VexOpcode=2|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegYMM, Unspecified|BaseIndex|RegXMM }\n vextractps, 3, 0x6617, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg32|Dword|Unspecified|BaseIndex }\n-vextractps, 3, 0x6617, None, 1, CpuAVX|Cpu64, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg64 }\n+vextractps, 3, 0x6617, None, 1, CpuAVX|Cpu64, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg64 }\n vhaddpd, 3, 0x667c, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }\n vhaddps, 3, 0xf27c, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }\n vhsubpd, 3, 0x667d, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }\n@@ -2100,14 +2100,14 @@ vmovlpd, 3, 0x6612, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|Igno\n vmovlpd, 2, 0x6613, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, Qword|Unspecified|BaseIndex }\n vmovlps, 3, 0x12, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex, RegXMM, RegXMM }\n vmovlps, 2, 0x13, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, Qword|Unspecified|BaseIndex }\n-vmovmskpd, 2, 0x6650, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { RegXMM|RegYMM, Reg32|Reg64 }\n-vmovmskps, 2, 0x50, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { RegXMM|RegYMM, Reg32|Reg64 }\n+vmovmskpd, 2, 0x6650, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { RegXMM|RegYMM, Reg32|Reg64 }\n+vmovmskps, 2, 0x50, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { RegXMM|RegYMM, Reg32|Reg64 }\n vmovntdq, 2, 0x66e7, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM, Xmmword|Ymmword|Unspecified|BaseIndex }\n vmovntdqa, 2, 0x662a, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Xmmword|Unspecified|BaseIndex, RegXMM }\n vmovntpd, 2, 0x662b, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM, Xmmword|Ymmword|Unspecified|BaseIndex }\n vmovntps, 2, 0x2b, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM, Xmmword|Ymmword|Unspecified|BaseIndex }\n-vmovq, 2, 0xf37e, None, 1, CpuAVX, Load|Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n-vmovq, 2, 0x66d6, None, 1, CpuAVX, Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { RegXMM, Qword|Unspecified|BaseIndex|RegXMM }\n+vmovq, 2, 0xf37e, None, 1, CpuAVX, Load|Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n+vmovq, 2, 0x66d6, None, 1, CpuAVX, Modrm|Vex=1|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, Qword|Unspecified|BaseIndex|RegXMM }\n vmovq, 2, 0x666e, None, 1, CpuAVX|Cpu64, D|Modrm|Vex=1|VexOpcode=0|VexW=2|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|Size64, { Reg64|Unspecified|BaseIndex, RegXMM }\n vmovsd, 2, 0xf210, None, 1, CpuAVX, D|Modrm|Vex=3|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex, RegXMM }\n vmovsd, 3, 0xf210, None, 1, CpuAVX, D|Modrm|Vex=3|VexOpcode=0|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, RegXMM, RegXMM }\n@@ -2165,12 +2165,12 @@ vpermilpd, 3, 0x660d, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexW=1|Ch\n vpermilpd, 3, 0x6605, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexW=1|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM }\n vpermilps, 3, 0x660c, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexW=1|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }\n vpermilps, 3, 0x6604, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexW=1|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM }\n-vpextrb, 3, 0x6614, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg32|Reg64 }\n+vpextrb, 3, 0x6614, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg32|Reg64 }\n vpextrb, 3, 0x6614, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Byte|Unspecified|BaseIndex }\n vpextrd, 3, 0x6616, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg32|Dword|Unspecified|BaseIndex }\n vpextrq, 3, 0x6616, None, 1, CpuAVX|Cpu64, Modrm|Vex|VexOpcode=2|VexW1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg64|Unspecified|BaseIndex }\n-vpextrw, 3, 0x66c5, None, 1, CpuAVX, Load|Modrm|Vex|VexOpcode=0|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg32|Reg64 }\n-vpextrw, 3, 0x6615, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, RegXMM, Reg32|Reg64 }\n+vpextrw, 3, 0x66c5, None, 1, CpuAVX, Load|Modrm|Vex|VexOpcode=0|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { Imm8, RegXMM, Reg32|Reg64 }\n+vpextrw, 3, 0x6615, None, 1, CpuAVX, RegMem|Vex|VexOpcode=2|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Reg32|Reg64 }\n vpextrw, 3, 0x6615, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM, Word|Unspecified|BaseIndex }\n vphaddd, 3, 0x6602, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vphaddsw, 3, 0x6603, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n@@ -2179,11 +2179,11 @@ vphminposuw, 2, 0x6641, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexWIG|No_bSuf|No\n vphsubd, 3, 0x6606, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vphsubsw, 3, 0x6607, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vphsubw, 3, 0x6605, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n-vpinsrb, 4, 0x6620, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, Reg32|Reg64, RegXMM, RegXMM }\n+vpinsrb, 4, 0x6620, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Reg32|Reg64, RegXMM, RegXMM }\n vpinsrb, 4, 0x6620, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Byte|Unspecified|BaseIndex, RegXMM, RegXMM }\n vpinsrd, 4, 0x6622, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexVVVV=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Reg32|Dword|Unspecified|BaseIndex, RegXMM, RegXMM }\n vpinsrq, 4, 0x6622, None, 1, CpuAVX|Cpu64, Modrm|Vex|VexOpcode=2|VexVVVV=1|VexW1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Reg64|Unspecified|BaseIndex, RegXMM, RegXMM }\n-vpinsrw, 4, 0x66c4, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { Imm8, Reg32|Reg64, RegXMM, RegXMM }\n+vpinsrw, 4, 0x66c4, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { Imm8, Reg32|Reg64, RegXMM, RegXMM }\n vpinsrw, 4, 0x66c4, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { Imm8, Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n vpmaddubsw, 3, 0x6604, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vpmaddwd, 3, 0x66f5, None, 1, CpuAVX, Modrm|C|Vex|VexOpcode=0|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n@@ -2199,7 +2199,7 @@ vpminsw, 3, 0x66ea, None, 1, CpuAVX, Modrm|C|Vex|VexOpcode=0|VexVVVV=1|VexWIG|No\n vpminub, 3, 0x66da, None, 1, CpuAVX, Modrm|C|Vex|VexOpcode=0|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vpminud, 3, 0x663b, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vpminuw, 3, 0x663a, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n-vpmovmskb, 2, 0x66d7, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { RegXMM, Reg32|Reg64 }\n+vpmovmskb, 2, 0x66d7, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { RegXMM, Reg32|Reg64 }\n vpmovsxbd, 2, 0x6621, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Unspecified|BaseIndex|RegXMM, RegXMM }\n vpmovsxbq, 2, 0x6622, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Word|Unspecified|BaseIndex|RegXMM, RegXMM }\n vpmovsxbw, 2, 0x6620, None, 1, CpuAVX, Modrm|Vex|VexOpcode=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n@@ -2268,7 +2268,7 @@ vrcpps, 2, 0x53, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|CheckRegSize|No_b\n vrcpss, 3, 0xf353, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=0|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vroundpd, 3, 0x6609, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM }\n vroundps, 3, 0x6608, None, 1, CpuAVX, Modrm|Vex|VexOpcode=2|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM }\n-vroundsd, 4, 0x660b, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=2|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|NoRex64, { Imm8, Qword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n+vroundsd, 4, 0x660b, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=2|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Qword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vroundss, 4, 0x660a, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=2|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Dword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n vrsqrtps, 2, 0x52, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexWIG|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM }\n vrsqrtss, 3, 0xf352, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=0|VexVVVV=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }\n@@ -2350,7 +2350,7 @@ vpminsw, 3, 0x66ea, None, 1, CpuAVX2, Modrm|C|Vex=2|VexOpcode=0|VexVVVV=1|VexWIG\n vpminub, 3, 0x66da, None, 1, CpuAVX2, Modrm|C|Vex=2|VexOpcode=0|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegYMM, RegYMM, RegYMM }\n vpminud, 3, 0x663b, None, 1, CpuAVX2, Modrm|Vex=2|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegYMM, RegYMM, RegYMM }\n vpminuw, 3, 0x663a, None, 1, CpuAVX2, Modrm|Vex=2|VexOpcode=1|VexVVVV=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegYMM, RegYMM, RegYMM }\n-vpmovmskb, 2, 0x66d7, None, 1, CpuAVX2, Modrm|Vex=2|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|NoRex64, { RegYMM, Reg32|Reg64 }\n+vpmovmskb, 2, 0x66d7, None, 1, CpuAVX2, Modrm|Vex=2|VexOpcode=0|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf, { RegYMM, Reg32|Reg64 }\n vpmovsxbd, 2, 0x6621, None, 1, CpuAVX2, Modrm|Vex=2|VexOpcode=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex|RegXMM, RegYMM }\n vpmovsxbq, 2, 0x6622, None, 1, CpuAVX2, Modrm|Vex=2|VexOpcode=1|VexWIG|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Unspecified|BaseIndex|RegXMM, RegYMM }\n vpmovsxbw, 2, 0x6620, None, 1, CpuAVX2, Modrm|Vex=2|VexOpcode=1|VexWIG|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex|RegXMM, RegYMM }"
    },
    {
      "sha": "74bb964cac1ef8e244ee95f7742bbdc22d176661",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 25,
      "deletions": 25,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ed21b58d4b8331806b9e88da18898235942f425/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ed21b58d4b8331806b9e88da18898235942f425/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=4ed21b58d4b8331806b9e88da18898235942f425",
      "patch": "@@ -9052,7 +9052,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n \t  0, 1, 0, 0, 1, 0 } },\n@@ -9066,7 +9066,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 0, 0, 0, 0 } },\n@@ -12682,7 +12682,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 0, 0, 0, 0 } },\n@@ -13018,7 +13018,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -13034,7 +13034,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -13130,7 +13130,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -13394,7 +13394,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 0, 0, 0, 0 } },\n@@ -15044,7 +15044,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 0, 0, 0, 0 } },\n@@ -17862,7 +17862,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -18150,7 +18150,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -18306,7 +18306,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -19142,7 +19142,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 1, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 2, 0, 0,\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -28906,7 +28906,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -30062,7 +30062,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 1, 0, 0, 0 } },\n@@ -30076,7 +30076,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 1, 0, 0, 0 } },\n@@ -30216,7 +30216,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n \t  0, 1, 0, 0, 1, 0 } },\n@@ -30230,7 +30230,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 0, 0, 0, 0 } },\n@@ -32510,7 +32510,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -32638,7 +32638,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -32654,7 +32654,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -32940,7 +32940,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 3, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 2, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -33084,7 +33084,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },\n@@ -33828,7 +33828,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 1, 0, 0, 0, 0 } },\n@@ -33842,7 +33842,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 1, 0, 0, 0 } },\n@@ -37268,7 +37268,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 1, 3, 2, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 2, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0 } },"
    }
  ]
}