{
  "sha": "af1bd771fc1e719df4c834f9f2d12b879a9de712",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWYxYmQ3NzFmYzFlNzE5ZGY0YzgzNGY5ZjJkMTJiODc5YTlkZTcxMg==",
  "commit": {
    "author": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-11-06T13:09:51Z"
    },
    "committer": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-11-06T13:14:14Z"
    },
    "message": "aarch64: Extract Pointer Authentication feature from Armv8.3-A\n\nExtract PAC (Pointer Authentication) feature from Armv8.3-A.\nPlease note that PAC stays a Armv8.3-A feature but now can be\nassigned to other architectures or CPUs.",
    "tree": {
      "sha": "60029bb611a49ba7ec2e64e8008ef7b98df2bd14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/60029bb611a49ba7ec2e64e8008ef7b98df2bd14"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/af1bd771fc1e719df4c834f9f2d12b879a9de712",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af1bd771fc1e719df4c834f9f2d12b879a9de712",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/af1bd771fc1e719df4c834f9f2d12b879a9de712",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af1bd771fc1e719df4c834f9f2d12b879a9de712/comments",
  "author": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fa63ba779d425b18cd93b3a1a34659869fa67c92",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa63ba779d425b18cd93b3a1a34659869fa67c92",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fa63ba779d425b18cd93b3a1a34659869fa67c92"
    }
  ],
  "stats": {
    "total": 85,
    "additions": 52,
    "deletions": 33
  },
  "files": [
    {
      "sha": "846b3d168e20d656fb386cfcd83e70a662fd16d5",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af1bd771fc1e719df4c834f9f2d12b879a9de712/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af1bd771fc1e719df4c834f9f2d12b879a9de712/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=af1bd771fc1e719df4c834f9f2d12b879a9de712",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-06  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_PAC): Add new feature.\n+\t(AARCH64_ARCH_V8_3): Add back PAC to Armv8.3-A.\n+\n 2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n \t* opcode/aarch64.h (AARCH64_ARCH_V8): Add RAS to Armv8-A."
    },
    {
      "sha": "ffde1ba374d360a5e6d94e7721474e414e8e9e22",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af1bd771fc1e719df4c834f9f2d12b879a9de712/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af1bd771fc1e719df4c834f9f2d12b879a9de712/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=af1bd771fc1e719df4c834f9f2d12b879a9de712",
      "patch": "@@ -53,6 +53,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_V8_7\t     (1ULL << 13) /* Armv8.7 processors.  */\n #define AARCH64_FEATURE_CSRE\t     (1ULL << 14) /* CSRE feature.  */\n #define AARCH64_FEATURE_LS64\t     (1ULL << 15) /* Atomic 64-byte load/store.  */\n+#define AARCH64_FEATURE_PAC\t     (1ULL << 16) /* v8.3 Pointer Authentication.  */\n #define AARCH64_FEATURE_FP\t     (1ULL << 17) /* FP instructions.  */\n #define AARCH64_FEATURE_SIMD\t     (1ULL << 18) /* SIMD instructions.  */\n #define AARCH64_FEATURE_CRC\t     (1ULL << 19) /* CRC instructions.  */\n@@ -110,6 +111,7 @@ typedef uint32_t aarch64_insn;\n \t\t\t\t\t\t AARCH64_FEATURE_V8_2)\n #define AARCH64_ARCH_V8_3\tAARCH64_FEATURE (AARCH64_ARCH_V8_2,\t\\\n \t\t\t\t\t\t AARCH64_FEATURE_V8_3\t\\\n+\t\t\t\t\t\t | AARCH64_FEATURE_PAC\t\\\n \t\t\t\t\t\t | AARCH64_FEATURE_RCPC\t\\\n \t\t\t\t\t\t | AARCH64_FEATURE_COMPNUM)\n #define AARCH64_ARCH_V8_4\tAARCH64_FEATURE (AARCH64_ARCH_V8_3,\t\\"
    },
    {
      "sha": "fb6c79e6299aa1cb089babb21c27290a1605bc58",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af1bd771fc1e719df4c834f9f2d12b879a9de712/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af1bd771fc1e719df4c834f9f2d12b879a9de712/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=af1bd771fc1e719df4c834f9f2d12b879a9de712",
      "patch": "@@ -1,3 +1,10 @@\n+2020-11-06  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* aarch64-tbl.h (PAC): Handle for PAC feature.\n+\t(PAC_INSN): New PAC instruction.\n+\t(struct aarch64_opcode):  Move PAC instructions from V8_3_INSN to\n+\tPAC_INSN.\n+\n 2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n \t* aarch64-opc.c: Add RAS 1.1 new system registers: ERXPFGCTL_EL1,"
    },
    {
      "sha": "f86dde5564492d212e723077c622d29da6d08208",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 38,
      "deletions": 33,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af1bd771fc1e719df4c834f9f2d12b879a9de712/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af1bd771fc1e719df4c834f9f2d12b879a9de712/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=af1bd771fc1e719df4c834f9f2d12b879a9de712",
      "patch": "@@ -2350,6 +2350,8 @@ static const aarch64_feature_set aarch64_feature_v8_3 =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_3, 0);\n static const aarch64_feature_set aarch64_feature_fp_v8_3 =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_3 | AARCH64_FEATURE_FP, 0);\n+static const aarch64_feature_set aarch64_feature_pac =\n+  AARCH64_FEATURE (AARCH64_FEATURE_PAC, 0);\n static const aarch64_feature_set aarch64_feature_compnum =\n   AARCH64_FEATURE (AARCH64_FEATURE_COMPNUM, 0);\n static const aarch64_feature_set aarch64_feature_rcpc =\n@@ -2434,6 +2436,7 @@ static const aarch64_feature_set aarch64_feature_ls64 =\n #define SVE\t\t&aarch64_feature_sve\n #define ARMV8_3\t\t&aarch64_feature_v8_3\n #define FP_V8_3\t\t&aarch64_feature_fp_v8_3\n+#define PAC\t\t&aarch64_feature_pac\n #define COMPNUM\t\t&aarch64_feature_compnum\n #define RCPC\t\t&aarch64_feature_rcpc\n #define SHA2\t\t&aarch64_feature_sha2\n@@ -2498,6 +2501,8 @@ static const aarch64_feature_set aarch64_feature_ls64 =\n     FLAGS | F_STRICT, CONSTRAINTS, TIED, NULL }\n #define V8_3_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, ARMV8_3, OPS, QUALS, FLAGS, 0, 0, NULL }\n+#define PAC_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n+  { NAME, OPCODE, MASK, CLASS, 0, PAC, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define CNUM_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, OP, COMPNUM, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define RCPC_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n@@ -3255,18 +3260,18 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   CORE_INSN (\"ret\", 0xd65f0000, 0xfffffc1f, branch_reg, 0, OP1 (Rn), QL_I1X, F_OPD0_OPT | F_DEFAULT (30)),\n   CORE_INSN (\"eret\", 0xd69f03e0, 0xffffffff, branch_reg, 0, OP0 (), {}, 0),\n   CORE_INSN (\"drps\", 0xd6bf03e0, 0xffffffff, branch_reg, 0, OP0 (), {}, 0),\n-  V8_3_INSN (\"braa\", 0xd71f0800, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"brab\", 0xd71f0c00, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"blraa\", 0xd73f0800, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"blrab\", 0xd73f0c00, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"braaz\", 0xd61f081f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n-  V8_3_INSN (\"brabz\", 0xd61f0c1f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n-  V8_3_INSN (\"blraaz\", 0xd63f081f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n-  V8_3_INSN (\"blrabz\", 0xd63f0c1f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n-  V8_3_INSN (\"retaa\", 0xd65f0bff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n-  V8_3_INSN (\"retab\", 0xd65f0fff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n-  V8_3_INSN (\"eretaa\", 0xd69f0bff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n-  V8_3_INSN (\"eretab\", 0xd69f0fff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n+  PAC_INSN (\"braa\", 0xd71f0800, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"brab\", 0xd71f0c00, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"blraa\", 0xd73f0800, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"blrab\", 0xd73f0c00, 0xfffffc00, branch_reg, OP2 (Rn, Rd_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"braaz\", 0xd61f081f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n+  PAC_INSN (\"brabz\", 0xd61f0c1f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n+  PAC_INSN (\"blraaz\", 0xd63f081f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n+  PAC_INSN (\"blrabz\", 0xd63f0c1f, 0xfffffc1f, branch_reg, OP1 (Rn), QL_I1X, 0),\n+  PAC_INSN (\"retaa\", 0xd65f0bff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n+  PAC_INSN (\"retab\", 0xd65f0fff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n+  PAC_INSN (\"eretaa\", 0xd69f0bff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n+  PAC_INSN (\"eretab\", 0xd69f0fff, 0xffffffff, branch_reg, OP0 (), {}, 0),\n   /* Compare & branch (immediate).  */\n   CORE_INSN (\"cbz\", 0x34000000, 0x7f000000, compbranch, 0, OP2 (Rt, ADDR_PCREL19), QL_R_PCREL, F_SF),\n   CORE_INSN (\"cbnz\", 0x35000000, 0x7f000000, compbranch, 0, OP2 (Rt, ADDR_PCREL19), QL_R_PCREL, F_SF),\n@@ -3314,24 +3319,24 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   CORE_INSN (\"clz\",   0x5ac01000, 0x7ffffc00, dp_1src, 0, OP2 (Rd, Rn), QL_I2SAME, F_SF),\n   CORE_INSN (\"cls\",   0x5ac01400, 0x7ffffc00, dp_1src, 0, OP2 (Rd, Rn), QL_I2SAME, F_SF),\n   CORE_INSN (\"rev32\", 0xdac00800, 0xfffffc00, dp_1src, 0, OP2 (Rd, Rn), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"pacia\", 0xdac10000, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"pacib\", 0xdac10400, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"pacda\", 0xdac10800, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"pacdb\", 0xdac10c00, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"autia\", 0xdac11000, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"autib\", 0xdac11400, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"autda\", 0xdac11800, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"autdb\", 0xdac11c00, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n-  V8_3_INSN (\"paciza\", 0xdac123e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"pacizb\", 0xdac127e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"pacdza\", 0xdac12be0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"pacdzb\", 0xdac12fe0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"autiza\", 0xdac133e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"autizb\", 0xdac137e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"autdza\", 0xdac13be0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"autdzb\", 0xdac13fe0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"xpaci\", 0xdac143e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n-  V8_3_INSN (\"xpacd\", 0xdac147e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"pacia\", 0xdac10000, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"pacib\", 0xdac10400, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"pacda\", 0xdac10800, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"pacdb\", 0xdac10c00, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"autia\", 0xdac11000, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"autib\", 0xdac11400, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"autda\", 0xdac11800, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"autdb\", 0xdac11c00, 0xfffffc00, dp_1src, OP2 (Rd, Rn_SP), QL_I2SAMEX, 0),\n+  PAC_INSN (\"paciza\", 0xdac123e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"pacizb\", 0xdac127e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"pacdza\", 0xdac12be0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"pacdzb\", 0xdac12fe0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"autiza\", 0xdac133e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"autizb\", 0xdac137e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"autdza\", 0xdac13be0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"autdzb\", 0xdac13fe0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"xpaci\", 0xdac143e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n+  PAC_INSN (\"xpacd\", 0xdac147e0, 0xffffffe0, dp_1src, OP1 (Rd), QL_I1X, 0),\n   /* Data-processing (2 source).  */\n   CORE_INSN (\"udiv\",  0x1ac00800, 0x7fe0fc00, dp_2src, 0, OP3 (Rd, Rn, Rm), QL_I3SAMER, F_SF),\n   CORE_INSN (\"sdiv\",  0x1ac00c00, 0x7fe0fc00, dp_2src, 0, OP3 (Rd, Rn, Rm), QL_I3SAMER, F_SF),\n@@ -3348,7 +3353,7 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   MEMTAG_INSN (\"cmpp\",   0xbac0001f, 0xffe0fc1f, dp_2src, OP2 (Rn_SP, Rm_SP), QL_I2SAMEX, F_ALIAS),\n   MEMTAG_INSN (\"irg\",    0x9ac01000, 0xffe0fc00, dp_2src, OP3 (Rd_SP, Rn_SP, Rm), QL_I3SAMEX, F_OPD2_OPT | F_DEFAULT (0x1f)),\n   MEMTAG_INSN (\"gmi\",    0x9ac01400, 0xffe0fc00, dp_2src, OP3 (Rd, Rn_SP, Rm), QL_I3SAMEX, 0),\n-  V8_3_INSN (\"pacga\", 0x9ac03000, 0xffe0fc00, dp_2src, OP3 (Rd, Rn, Rm_SP), QL_I3SAMEX, 0),\n+  PAC_INSN (\"pacga\", 0x9ac03000, 0xffe0fc00, dp_2src, OP3 (Rd, Rn, Rm_SP), QL_I3SAMEX, 0),\n   /* CRC instructions.  */\n   _CRC_INSN (\"crc32b\", 0x1ac04000, 0xffe0fc00, dp_2src, OP3 (Rd, Rn, Rm), QL_I3SAMEW, 0),\n   _CRC_INSN (\"crc32h\", 0x1ac04400, 0xffe0fc00, dp_2src, OP3 (Rd, Rn, Rm), QL_I3SAMEW, 0),\n@@ -3578,8 +3583,8 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   CORE_INSN (\"prfum\", 0xf8800000, 0xffe00c00, ldst_unscaled, OP_PRFUM, OP2 (PRFOP, ADDR_SIMM9), QL_LDST_PRFM, 0),\n   MEMTAG_INSN (\"ldg\",  0xd9600000, 0xffe00c00, ldst_unscaled, OP2 (Rt, ADDR_SIMM13), QL_LDG, 0),\n   /* Load/store register (scaled signed immediate).  */\n-  V8_3_INSN (\"ldraa\", 0xf8200400, 0xffa00400, ldst_imm10, OP2 (Rt, ADDR_SIMM10), QL_X1NIL, 0),\n-  V8_3_INSN (\"ldrab\", 0xf8a00400, 0xffa00400, ldst_imm10, OP2 (Rt, ADDR_SIMM10), QL_X1NIL, 0),\n+  PAC_INSN (\"ldraa\", 0xf8200400, 0xffa00400, ldst_imm10, OP2 (Rt, ADDR_SIMM10), QL_X1NIL, 0),\n+  PAC_INSN (\"ldrab\", 0xf8a00400, 0xffa00400, ldst_imm10, OP2 (Rt, ADDR_SIMM10), QL_X1NIL, 0),\n   /* Load/store exclusive.  */\n   CORE_INSN (\"stxrb\", 0x8007c00, 0xffe08000, ldstexcl, 0, OP3 (Rs, Rt, ADDR_SIMPLE), QL_W2_LDST_EXC, 0),\n   CORE_INSN (\"stlxrb\", 0x800fc00, 0xffe08000, ldstexcl, 0, OP3 (Rs, Rt, ADDR_SIMPLE), QL_W2_LDST_EXC, 0),"
    }
  ]
}