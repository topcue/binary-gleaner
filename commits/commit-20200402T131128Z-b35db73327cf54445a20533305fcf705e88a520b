{
  "sha": "b35db73327cf54445a20533305fcf705e88a520b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjM1ZGI3MzMyN2NmNTQ0NDVhMjA1MzMzMDVmY2Y3MDVlODhhNTIwYg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:28Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:28Z"
    },
    "message": "gdbserver/linux-low: turn '{collect, supply}_ptrace_register' into methods\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn the 'collect_ptrace_register' and 'supply_ptrace_register'\n\tlinux target ops into methods of linux_process_target.\n\n\t* linux-low.h (struct linux_target_ops): Remove the ops.\n\t(class linux_process_target) <low_collect_ptrace_register>\n\t<low_store_ptrace_register>: Declare.\n\t* linux-low.cc (linux_process_target::low_collect_ptrace_register)\n\t(linux_process_target::low_supply_ptrace_register): Define.\n\n\tUpdate the callers below.\n\n\t(linux_process_target::fetch_register)\n\t(linux_process_target::store_register)\n\n\t* linux-x86-low.cc (the_low_target): Remove the op fields.\n\t* linux-aarch64-low.cc (the_low_target): Ditto.\n\t* linux-arm-low.cc (the_low_target): Ditto.\n\t* linux-bfin-low.cc (the_low_target): Ditto.\n\t* linux-crisv32-low.cc (the_low_target): Ditto.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-sparc-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.\n\t* linux-mips-low.cc (class mips_target)\n\t<low_collect_ptrace_register>\n\t<low_supply_ptrace_register>: Declare.\n\t(mips_collect_ptrace_register): Turn into ...\n\t(mips_target::low_collect_ptrace_register): ...this.\n\t(mips_supply_ptrace_register): Turn into...\n\t(mips_target::low_supply_ptrace_register): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-ppc-low.cc (class ppc_target)\n\t<low_collect_ptrace_register>\n\t<low_supply_ptrace_register>: Declare.\n\t(ppc_collect_ptrace_register): Turn into ...\n\t(ppc_target::low_collect_ptrace_register): ...this.\n\t(ppc_supply_ptrace_register): Turn into ...\n\t(ppc_target::low_supply_ptrace_register): ...this.\n\t(ppc_fill_gregset): Update for the calls to\n\tlow_collect_ptrace_register.\n\t(the_low_target): Remove the op fields.\n\t* linux-s390-low.cc (class s390_target)\n\t<low_collect_ptrace_register>\n\t<low_supply_ptrace_register>: Declare.\n\t(s390_collect_ptrace_register): Turn into ...\n\t(s390_target::low_collect_ptrace_register): ...this.\n\t(s390_supply_ptrace_register): Turn into ...\n\t(s390_target::low_supply_ptrace_register): ...this.\n\t(s390_fill_gregset): Update for the calls to\n\tlow_collect_ptrace_register.\n\t(the_low_target): Remove the op fields.",
    "tree": {
      "sha": "c58b7a0bfc8322f8a8093adfb95968bf3580e5c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c58b7a0bfc8322f8a8093adfb95968bf3580e5c2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b35db73327cf54445a20533305fcf705e88a520b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b35db73327cf54445a20533305fcf705e88a520b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b35db73327cf54445a20533305fcf705e88a520b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b35db73327cf54445a20533305fcf705e88a520b/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ac1bbaca10666fc85572a6deeaa6f1debcd4c129",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac1bbaca10666fc85572a6deeaa6f1debcd4c129",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ac1bbaca10666fc85572a6deeaa6f1debcd4c129"
    }
  ],
  "stats": {
    "total": 203,
    "additions": 133,
    "deletions": 70
  },
  "files": [
    {
      "sha": "f8a2bd802b3b0736b2dcaaf010fce1eaa0abeb1c",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -1,3 +1,60 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn the 'collect_ptrace_register' and 'supply_ptrace_register'\n+\tlinux target ops into methods of linux_process_target.\n+\n+\t* linux-low.h (struct linux_target_ops): Remove the ops.\n+\t(class linux_process_target) <low_collect_ptrace_register>\n+\t<low_store_ptrace_register>: Declare.\n+\t* linux-low.cc (linux_process_target::low_collect_ptrace_register)\n+\t(linux_process_target::low_supply_ptrace_register): Define.\n+\n+\tUpdate the callers below.\n+\n+\t(linux_process_target::fetch_register)\n+\t(linux_process_target::store_register)\n+\n+\t* linux-x86-low.cc (the_low_target): Remove the op fields.\n+\t* linux-aarch64-low.cc (the_low_target): Ditto.\n+\t* linux-arm-low.cc (the_low_target): Ditto.\n+\t* linux-bfin-low.cc (the_low_target): Ditto.\n+\t* linux-crisv32-low.cc (the_low_target): Ditto.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-sparc-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\t* linux-mips-low.cc (class mips_target)\n+\t<low_collect_ptrace_register>\n+\t<low_supply_ptrace_register>: Declare.\n+\t(mips_collect_ptrace_register): Turn into ...\n+\t(mips_target::low_collect_ptrace_register): ...this.\n+\t(mips_supply_ptrace_register): Turn into...\n+\t(mips_target::low_supply_ptrace_register): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-ppc-low.cc (class ppc_target)\n+\t<low_collect_ptrace_register>\n+\t<low_supply_ptrace_register>: Declare.\n+\t(ppc_collect_ptrace_register): Turn into ...\n+\t(ppc_target::low_collect_ptrace_register): ...this.\n+\t(ppc_supply_ptrace_register): Turn into ...\n+\t(ppc_target::low_supply_ptrace_register): ...this.\n+\t(ppc_fill_gregset): Update for the calls to\n+\tlow_collect_ptrace_register.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-s390-low.cc (class s390_target)\n+\t<low_collect_ptrace_register>\n+\t<low_supply_ptrace_register>: Declare.\n+\t(s390_collect_ptrace_register): Turn into ...\n+\t(s390_target::low_collect_ptrace_register): ...this.\n+\t(s390_supply_ptrace_register): Turn into ...\n+\t(s390_target::low_supply_ptrace_register): ...this.\n+\t(s390_fill_gregset): Update for the calls to\n+\tlow_collect_ptrace_register.\n+\t(the_low_target): Remove the op fields.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn the 'stopped_by_watchpoint' and 'stopped_data_address' linux"
    },
    {
      "sha": "dfbfa59cba1a6c9a9a2d5ba888dfc68d3fcc2ce5",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -3113,8 +3113,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   aarch64_linux_siginfo_fixup,\n   aarch64_linux_new_process,\n   aarch64_linux_delete_process,"
    },
    {
      "sha": "78e93d304f505ac77aafd379903fcd5b7690883d",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -1105,8 +1105,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   arm_new_process,\n   arm_delete_process,"
    },
    {
      "sha": "5f0d72fed74383f753314a7fb0064c1fe260e029",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -171,8 +171,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "fe4b68ef4d84c6d7c211c3a29fbf1bdfd14ec806",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -468,8 +468,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "658ea32f1353f9523c653922f15247035fa4b030",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 16,
      "deletions": 8,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -5408,10 +5408,7 @@ linux_process_target::fetch_register (const usrregs_info *usrregs,\n \t}\n     }\n \n-  if (the_low_target.supply_ptrace_register)\n-    the_low_target.supply_ptrace_register (regcache, regno, buf);\n-  else\n-    supply_register (regcache, regno, buf);\n+  low_supply_ptrace_register (regcache, regno, buf);\n }\n \n void\n@@ -5438,10 +5435,7 @@ linux_process_target::store_register (const usrregs_info *usrregs,\n   buf = (char *) alloca (size);\n   memset (buf, 0, size);\n \n-  if (the_low_target.collect_ptrace_register)\n-    the_low_target.collect_ptrace_register (regcache, regno, buf);\n-  else\n-    collect_register (regcache, regno, buf);\n+  low_collect_ptrace_register (regcache, regno, buf);\n \n   pid = lwpid_of (current_thread);\n   for (i = 0; i < size; i += sizeof (PTRACE_XFER_TYPE))\n@@ -5470,6 +5464,20 @@ linux_process_target::store_register (const usrregs_info *usrregs,\n }\n #endif /* HAVE_LINUX_USRREGS */\n \n+void\n+linux_process_target::low_collect_ptrace_register (regcache *regcache,\n+\t\t\t\t\t\t   int regno, char *buf)\n+{\n+  collect_register (regcache, regno, buf);\n+}\n+\n+void\n+linux_process_target::low_supply_ptrace_register (regcache *regcache,\n+\t\t\t\t\t\t  int regno, const char *buf)\n+{\n+  supply_register (regcache, regno, buf);\n+}\n+\n void\n linux_process_target::usr_fetch_inferior_registers (const regs_info *regs_info,\n \t\t\t\t\t\t    regcache *regcache,"
    },
    {
      "sha": "ca6cf3edc1cef5dfa956f600aa011e5195d871c8",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -131,13 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Hooks to reformat register data for PEEKUSR/POKEUSR (in particular\n-     for registers smaller than an xfer unit).  */\n-  void (*collect_ptrace_register) (struct regcache *regcache,\n-\t\t\t\t   int regno, char *buf);\n-  void (*supply_ptrace_register) (struct regcache *regcache,\n-\t\t\t\t  int regno, const char *buf);\n-\n   /* Hook to convert from target format to ptrace format and back.\n      Returns true if any conversion was done; false otherwise.\n      If DIRECTION is 1, then copy from INF to NATIVE.\n@@ -682,6 +675,14 @@ class linux_process_target : public process_stratum_target\n \n   virtual CORE_ADDR low_stopped_data_address ();\n \n+  /* Hooks to reformat register data for PEEKUSR/POKEUSR (in particular\n+     for registers smaller than an xfer unit).  */\n+  virtual void low_collect_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\t    char *buf);\n+\n+  virtual void low_supply_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\t   const char *buf);\n+\n   /* How many bytes the PC should be decremented after a break.  */\n   virtual int low_decr_pc_after_break ();\n };"
    },
    {
      "sha": "2dc25f7c66835795507502e7d87ba85aab16334c",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -161,8 +161,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "84eccbc14ef5e27d2dbb025b0e161adaabcd30a9",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -265,8 +265,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "78e243c3d4024370a5280593b5cce9fcbf1a3855",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -64,6 +64,12 @@ class mips_target : public linux_process_target\n   bool low_stopped_by_watchpoint () override;\n \n   CORE_ADDR low_stopped_data_address () override;\n+\n+  void low_collect_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t    char *buf) override;\n+\n+  void low_supply_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t   const char *buf) override;\n };\n \n /* The singleton target ops object.  */\n@@ -891,9 +897,9 @@ mips_store_fpregset (struct regcache *regcache, const void *buf)\n \n /* Take care of 32-bit registers with 64-bit ptrace, POKEUSER side.  */\n \n-static void\n-mips_collect_ptrace_register (struct regcache *regcache,\n-\t\t\t      int regno, char *buf)\n+void\n+mips_target::low_collect_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\t  char *buf)\n {\n   int use_64bit = sizeof (PTRACE_XFER_TYPE) == 8;\n \n@@ -910,9 +916,9 @@ mips_collect_ptrace_register (struct regcache *regcache,\n \n /* Take care of 32-bit registers with 64-bit ptrace, PEEKUSER side.  */\n \n-static void\n-mips_supply_ptrace_register (struct regcache *regcache,\n-\t\t\t     int regno, const char *buf)\n+void\n+mips_target::low_supply_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\t const char *buf)\n {\n   int use_64bit = sizeof (PTRACE_XFER_TYPE) == 8;\n \n@@ -980,8 +986,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  mips_collect_ptrace_register,\n-  mips_supply_ptrace_register,\n   NULL, /* siginfo_fixup */\n   mips_linux_new_process,\n   mips_linux_delete_process,"
    },
    {
      "sha": "e0310856c2098903173815fe605adbc987a99863",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 20,
      "deletions": 10,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -56,6 +56,12 @@ class ppc_target : public linux_process_target\n \n   bool supports_z_point_type (char z_type) override;\n \n+\n+  void low_collect_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t    char *buf) override;\n+\n+  void low_supply_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t   const char *buf) override;\n protected:\n \n   void low_arch_setup () override;\n@@ -208,8 +214,9 @@ ppc_target::low_cannot_fetch_register (int regno)\n   return false;\n }\n \n-static void\n-ppc_collect_ptrace_register (struct regcache *regcache, int regno, char *buf)\n+void\n+ppc_target::low_collect_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\t char *buf)\n {\n   memset (buf, 0, sizeof (long));\n \n@@ -234,9 +241,9 @@ ppc_collect_ptrace_register (struct regcache *regcache, int regno, char *buf)\n     perror_with_name (\"Unexpected byte order\");\n }\n \n-static void\n-ppc_supply_ptrace_register (struct regcache *regcache,\n-\t\t\t    int regno, const char *buf)\n+void\n+ppc_target::low_supply_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\tconst char *buf)\n {\n   if (__BYTE_ORDER == __LITTLE_ENDIAN)\n     {\n@@ -401,14 +408,19 @@ static void ppc_fill_gregset (struct regcache *regcache, void *buf)\n {\n   int i;\n \n+  ppc_target *my_ppc_target = (ppc_target *) the_linux_target;\n+\n   for (i = 0; i < 32; i++)\n-    ppc_collect_ptrace_register (regcache, i, (char *) buf + ppc_regmap[i]);\n+    my_ppc_target->low_collect_ptrace_register (regcache, i,\n+\t\t\t\t\t\t(char *) buf + ppc_regmap[i]);\n \n   for (i = 64; i < 70; i++)\n-    ppc_collect_ptrace_register (regcache, i, (char *) buf + ppc_regmap[i]);\n+    my_ppc_target->low_collect_ptrace_register (regcache, i,\n+\t\t\t\t\t\t(char *) buf + ppc_regmap[i]);\n \n   for (i = 71; i < 73; i++)\n-    ppc_collect_ptrace_register (regcache, i, (char *) buf + ppc_regmap[i]);\n+    my_ppc_target->low_collect_ptrace_register (regcache, i,\n+\t\t\t\t\t\t(char *) buf + ppc_regmap[i]);\n }\n \n /* Program Priority Register regset fill function.  */\n@@ -3416,8 +3428,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  ppc_collect_ptrace_register,\n-  ppc_supply_ptrace_register,\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "f7e439ac612ca26c93c4e42359f21ccfba214cfc",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 16,
      "deletions": 11,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -63,6 +63,12 @@ class s390_target : public linux_process_target\n \n   bool supports_z_point_type (char z_type) override;\n \n+  void low_collect_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t    char *buf) override;\n+\n+  void low_supply_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t   const char *buf) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -187,11 +193,12 @@ s390_target::low_cannot_store_register (int regno)\n   return false;\n }\n \n-static void\n-s390_collect_ptrace_register (struct regcache *regcache, int regno, char *buf)\n+void\n+s390_target::low_collect_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\t  char *buf)\n {\n   int size = register_size (regcache->tdesc, regno);\n-  const struct regs_info *regs_info = the_linux_target->get_regs_info ();\n+  const struct regs_info *regs_info = get_regs_info ();\n   struct usrregs_info *usr = regs_info->usrregs;\n   int regaddr = usr->regmap[regno];\n \n@@ -233,12 +240,12 @@ s390_collect_ptrace_register (struct regcache *regcache, int regno, char *buf)\n     collect_register (regcache, regno, buf);\n }\n \n-static void\n-s390_supply_ptrace_register (struct regcache *regcache,\n-\t\t\t     int regno, const char *buf)\n+void\n+s390_target::low_supply_ptrace_register (regcache *regcache, int regno,\n+\t\t\t\t\t const char *buf)\n {\n   int size = register_size (regcache->tdesc, regno);\n-  const struct regs_info *regs_info = the_linux_target->get_regs_info ();\n+  const struct regs_info *regs_info = get_regs_info ();\n   struct usrregs_info *usr = regs_info->usrregs;\n   int regaddr = usr->regmap[regno];\n \n@@ -305,8 +312,8 @@ s390_fill_gregset (struct regcache *regcache, void *buf)\n \t  || usr->regmap[i] > PT_ACR15)\n \tcontinue;\n \n-      s390_collect_ptrace_register (regcache, i,\n-\t\t\t\t    (char *) buf + usr->regmap[i]);\n+      ((s390_target *) the_linux_target)->low_collect_ptrace_register\n+\t(regcache, i, (char *) buf + usr->regmap[i]);\n     }\n }\n \n@@ -2838,8 +2845,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  s390_collect_ptrace_register,\n-  s390_supply_ptrace_register,\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "08985338db329ceda3d594bdd655689b8229bda1",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -192,8 +192,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "e77ebe52805aeb13b8829963e43e81670f81fb69",
      "filename": "gdbserver/linux-sparc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-sparc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-sparc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sparc-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -341,7 +341,6 @@ sparc_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, NULL\n };\n \n /* The linux target ops object.  */"
    },
    {
      "sha": "8f5eff7fdb55dbe9768770c4f50fa690714ff7b6",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -423,8 +423,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "72697649fbcd67dbe4dd719970ff934a98dd2c06",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -224,8 +224,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    },
    {
      "sha": "d33833daa6c466d0c291010603a49ecb214b80fe",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -137,6 +137,10 @@ class x86_target : public linux_process_target\n   bool low_stopped_by_watchpoint () override;\n \n   CORE_ADDR low_stopped_data_address () override;\n+\n+  /* collect_ptrace_register/supply_ptrace_register are not needed in the\n+     native i386 case (no registers smaller than an xfer unit), and are not\n+     used in the biarch case (HAVE_LINUX_USRREGS is not defined).  */\n };\n \n /* The singleton target ops object.  */\n@@ -2922,11 +2926,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  /* collect_ptrace_register/supply_ptrace_register are not needed in the\n-     native i386 case (no registers smaller than an xfer unit), and are not\n-     used in the biarch case (HAVE_LINUX_USRREGS is not defined).  */\n-  NULL,\n-  NULL,\n   /* need to fix up i386 siginfo if host is amd64 */\n   x86_siginfo_fixup,\n   x86_linux_new_process,"
    },
    {
      "sha": "08487145337c130404a03d5b850f228d2e99eefc",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b35db73327cf54445a20533305fcf705e88a520b/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=b35db73327cf54445a20533305fcf705e88a520b",
      "patch": "@@ -329,8 +329,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* collect_ptrace_register */\n-  NULL, /* supply_ptrace_register */\n   NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */"
    }
  ]
}