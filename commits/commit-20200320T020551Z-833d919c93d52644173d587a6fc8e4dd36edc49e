{
  "sha": "833d919c93d52644173d587a6fc8e4dd36edc49e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODMzZDkxOWM5M2Q1MjY0NDE3M2Q1ODdhNmZjOGU0ZGQzNmVkYzQ5ZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-19T23:46:28Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-20T02:05:51Z"
    },
    "message": "PowerPC disassembly of odd sized sections\n\nWe shouldn't really decode a 2-byte left-over at the end of a section\nas if the section contains two more bytes of zeros.  Not that it\nmatters very much, but this patch tidies the corner case.\n\n\t* ppc-dis.c (print_insn_powerpc): Only clear needed bytes of\n\tpartially filled buffer.  Prevent lookup of 4-byte insns when\n\tonly VLE 2-byte insns are possible due to section size.  Print\n\t\".word\" rather than \".long\" for 2-byte leftovers.",
    "tree": {
      "sha": "84c6ed121c7730946bb995184cc572f44628de33",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/84c6ed121c7730946bb995184cc572f44628de33"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/833d919c93d52644173d587a6fc8e4dd36edc49e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/833d919c93d52644173d587a6fc8e4dd36edc49e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/833d919c93d52644173d587a6fc8e4dd36edc49e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/833d919c93d52644173d587a6fc8e4dd36edc49e/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a859124df20f6544dbef96084e4e024bccebd853",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a859124df20f6544dbef96084e4e024bccebd853",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a859124df20f6544dbef96084e4e024bccebd853"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 25,
    "deletions": 10
  },
  "files": [
    {
      "sha": "98f5d54bb3e055a728d8b16d4047918b49a000ae",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/833d919c93d52644173d587a6fc8e4dd36edc49e/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/833d919c93d52644173d587a6fc8e4dd36edc49e/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=833d919c93d52644173d587a6fc8e4dd36edc49e",
      "patch": "@@ -1,3 +1,10 @@\n+2020-03-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (print_insn_powerpc): Only clear needed bytes of\n+\tpartially filled buffer.  Prevent lookup of 4-byte insns when\n+\tonly VLE 2-byte insns are possible due to section size.  Print\n+\t\".word\" rather than \".long\" for 2-byte leftovers.\n+\n 2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \tPR 25641"
    },
    {
      "sha": "b437fafa374899aa1f4b1c649856f7e08f652d87",
      "filename": "opcodes/ppc-dis.c",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/833d919c93d52644173d587a6fc8e4dd36edc49e/opcodes/ppc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/833d919c93d52644173d587a6fc8e4dd36edc49e/opcodes/ppc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-dis.c?ref=833d919c93d52644173d587a6fc8e4dd36edc49e",
      "patch": "@@ -750,8 +750,9 @@ print_insn_powerpc (bfd_vma memaddr,\n   if (status != 0 && (dialect & PPC_OPCODE_VLE) != 0)\n     {\n       /* Clear buffer so unused bytes will not have garbage in them.  */\n-      buffer[0] = buffer[1] = buffer[2] = buffer[3] = 0;\n+      buffer[2] = buffer[3] = 0;\n       status = (*info->read_memory_func) (memaddr, buffer, 2, info);\n+      insn_length = 2;\n     }\n \n   if (status != 0)\n@@ -801,12 +802,15 @@ print_insn_powerpc (bfd_vma memaddr,\n \t  insn_length = 2;\n \t}\n     }\n-  if (opcode == NULL && (dialect & PPC_OPCODE_SPE2) != 0)\n-    opcode = lookup_spe2 (insn);\n-  if (opcode == NULL)\n-    opcode = lookup_powerpc (insn, dialect & ~PPC_OPCODE_ANY);\n-  if (opcode == NULL && (dialect & PPC_OPCODE_ANY) != 0)\n-    opcode = lookup_powerpc (insn, dialect);\n+  if (opcode == NULL && insn_length == 4)\n+    {\n+      if ((dialect & PPC_OPCODE_SPE2) != 0)\n+\topcode = lookup_spe2 (insn);\n+      if (opcode == NULL)\n+\topcode = lookup_powerpc (insn, dialect & ~PPC_OPCODE_ANY);\n+      if (opcode == NULL && (dialect & PPC_OPCODE_ANY) != 0)\n+\topcode = lookup_powerpc (insn, dialect);\n+    }\n \n   if (opcode != NULL)\n     {\n@@ -918,9 +922,13 @@ print_insn_powerpc (bfd_vma memaddr,\n     }\n \n   /* We could not find a match.  */\n-  (*info->fprintf_func) (info->stream, \".long 0x%\" PRIx64, insn);\n-\n-  return 4;\n+  if (insn_length == 4)\n+    (*info->fprintf_func) (info->stream, \".long 0x%x\",\n+\t\t\t   (unsigned int) insn);\n+  else\n+    (*info->fprintf_func) (info->stream, \".word 0x%x\",\n+\t\t\t   (unsigned int) insn >> 16);\n+  return insn_length;\n }\n \n const disasm_options_and_args_t *"
    }
  ]
}