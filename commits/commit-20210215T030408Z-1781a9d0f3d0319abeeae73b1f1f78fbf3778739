{
  "sha": "1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTc4MWE5ZDBmM2QwMzE5YWJlZWFlNzNiMWYxZjc4ZmJmMzc3ODczOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-14T23:18:50Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-15T03:04:08Z"
    },
    "message": "nds32_elf_get_relocated_section_contents\n\nnds32_elf_get_relocated_section_contents uses nds32_get_section_contents\nto read sections contents, but nds32_get_section_contents has the wrong\nbehaviour as it calls bfd_malloc_and_get_section.  That function always\nmallocs its output buffer, whereas get_relocated_section_contents must\nsupport an already allocated buffer.\n\nbfd/\n\t* elf32-nds32.c (nds32_get_section_contents): Replace\n\tbfd_malloc_and_get_section with bfd_get_full_section_contents.\n\t(nds32_elf_relax_delete_blanks): Init contents.\n\t(nds32_elf_relax_section, nds32_relax_fp_as_gp): Likewise.\nbinutils/\n\t* testsuite/binutils-all/compress.exp: Remove nds32 xfails.\n\t* testsuite/binutils-all/objdump.exp: Likewise.",
    "tree": {
      "sha": "9284cb96c03408b02e12dfb7c006f251a43d3a5b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9284cb96c03408b02e12dfb7c006f251a43d3a5b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8b78cbec3191c7f153d116fb2184ea6400b3a7b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8b78cbec3191c7f153d116fb2184ea6400b3a7b1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8b78cbec3191c7f153d116fb2184ea6400b3a7b1"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 17,
    "deletions": 6
  },
  "files": [
    {
      "sha": "cd018fec3b7d1fc603ec89b115d7815541f95685",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
      "patch": "@@ -1,3 +1,10 @@\n+2021-02-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf32-nds32.c (nds32_get_section_contents): Replace\n+\tbfd_malloc_and_get_section with bfd_get_full_section_contents.\n+\t(nds32_elf_relax_delete_blanks): Init contents.\n+\t(nds32_elf_relax_section, nds32_relax_fp_as_gp): Likewise.\n+\n 2021-02-15  Alan Modra  <amodra@gmail.com>\n \n \t* coff-alpha.c (alpha_ecoff_get_relocated_section_contents): Use"
    },
    {
      "sha": "01d0702255a84f8aefcd099795f53d65317651e3",
      "filename": "bfd/elf32-nds32.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/bfd/elf32-nds32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/bfd/elf32-nds32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-nds32.c?ref=1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
      "patch": "@@ -9201,6 +9201,7 @@ nds32_elf_relax_delete_blanks (bfd *abfd, asection *sec,\n       if (!(sect->flags & SEC_RELOC))\n \tcontinue;\n \n+      contents = NULL;\n       nds32_get_section_contents (abfd, sect, &contents, TRUE);\n \n       for (irel = internal_relocs; irel < irelend; irel++)\n@@ -9457,7 +9458,7 @@ nds32_get_section_contents (bfd *abfd, asection *sec,\n     *contents_p = elf_section_data (sec)->this_hdr.contents;\n   else\n     {\n-      if (!bfd_malloc_and_get_section (abfd, sec, contents_p))\n+      if (!bfd_get_full_section_contents (abfd, sec, contents_p))\n \treturn FALSE;\n       if (cache)\n \telf_section_data (sec)->this_hdr.contents = *contents_p;\n@@ -12157,6 +12158,7 @@ nds32_elf_relax_section (bfd *abfd, asection *sec,\n   load_store_relax = table->load_store_relax;\n \n   /* Get symbol table and section content.  */\n+  contents = NULL;\n   if (!nds32_get_section_contents (abfd, sec, &contents, TRUE)\n       || !nds32_get_local_syms (abfd, sec, &isymbuf))\n     goto error_return;\n@@ -12814,6 +12816,7 @@ nds32_relax_fp_as_gp (struct bfd_link_info *link_info,\n \n   symtab_hdr = &elf_tdata (abfd)->symtab_hdr;\n \n+  contents = NULL;\n   if (!nds32_get_section_contents (abfd, sec, &contents, TRUE)\n       || !nds32_get_local_syms (abfd, sec, &isymbuf))\n     return FALSE;"
    },
    {
      "sha": "a7a9cae080e17a20d1b9c092d234b42be7ca45db",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/compress.exp: Remove nds32 xfails.\n+\t* testsuite/binutils-all/objdump.exp: Likewise.\n+\n 2021-02-14  Alan Modra  <amodra@gmail.com>\n \n \t* objdump.c (slurp_symtab): Don't add an extra entry for NULL"
    },
    {
      "sha": "98daf67155222500b7358793a6b4aee2fcf02277",
      "filename": "binutils/testsuite/binutils-all/compress.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/binutils/testsuite/binutils-all/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/binutils/testsuite/binutils-all/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/compress.exp?ref=1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
      "patch": "@@ -162,7 +162,6 @@ if ![string match \"\" $got] then {\n     }\n }\n \n-setup_xfail \"nds32*-*-*\"\n set testname \"objdump compress debug sections\"\n set got [remote_exec host \"$OBJDUMP -W ${compressedfile}.o\" \"\" \"/dev/null\" \"objdump.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n@@ -175,7 +174,6 @@ if { [regexp_diff objdump.out $srcdir/$subdir/dw2-1.W] } then {\n     pass \"$testname\"\n }\n \n-setup_xfail \"nds32*-*-*\"\n set testname \"objdump compress debug sections 3\"\n set got [remote_exec host \"$OBJDUMP -W ${compressedfile3}.o\" \"\" \"/dev/null\" \"objdump.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n@@ -546,7 +544,6 @@ if ![string match \"\" $got] then {\n     }\n }\n \n-setup_xfail \"nds32*-*-*\"\n set testname \"objcopy compress debug sections in archive with zlib-gabi\"\n set got [binutils_run $OBJCOPY \"--compress-debug-sections=zlib-gabi ${copyfile}gabi.a ${compressedcopyfile}gabi.a\"]\n if ![string match \"\" $got] then {\n@@ -567,7 +564,6 @@ if ![string match \"\" $got] then {\n     }\n }\n \n-setup_xfail \"nds32*-*-*\"\n set testname \"objdump compress debug sections 3 with zlib-gabi\"\n set got [remote_exec host \"$OBJDUMP -W ${compressedfile3}gabi.o\" \"\" \"/dev/null\" \"objdump.out\"]\n if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {"
    },
    {
      "sha": "9a0720f95aa879f06c5482cd8fe3b7a37ce575cf",
      "filename": "binutils/testsuite/binutils-all/objdump.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/binutils/testsuite/binutils-all/objdump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1781a9d0f3d0319abeeae73b1f1f78fbf3778739/binutils/testsuite/binutils-all/objdump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objdump.exp?ref=1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
      "patch": "@@ -503,7 +503,7 @@ if { ![is_elf_format] } then {\n \tsend_log \"\\n\"\n     }\n \n-    setup_xfail \"msp430-*-*\" \"nds32*-*-*\"\n+    setup_xfail \"msp430-*-*\"\n     if { [regexp_diff objdump.out $srcdir/$subdir/dw2-ranges.W] } then {\n \tfail \"objdump -W for debug_ranges\"\n     } else {"
    }
  ]
}