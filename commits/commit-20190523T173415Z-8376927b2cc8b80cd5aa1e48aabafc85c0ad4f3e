{
  "sha": "8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODM3NjkyN2IyY2M4YjgwY2Q1YWExZTQ4YWFiYWZjODVjMGFkNGYzZQ==",
  "commit": {
    "author": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-05-23T17:05:42Z"
    },
    "committer": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-05-23T17:34:15Z"
    },
    "message": "ld: add support for eBPF\n\nThis patch adds support to the linker for the Linux eBPF architecture.\nA minimal testsuite is included.\n\nld/ChangeLog:\n\n2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* Makefile.am (ALL_64_EMULATION_SOURCES): Add eelf64bpf.c.\n\t* Makefile.in (prefix): Regenerate.\n\t* configure.tgt (targ_extra_ofiles): Add case for bpf-*-* targets.\n\t* emulparams/elf64bpf.sh: New file.\n\t* testsuite/lib/ld-lib.exp (check_gc_sections_available): Add\n\tbpf-*-* to the list of targets not supporting gc-sections.\n\t* testsuite/ld-bpf/bar.s: New file.\n\t* testsuite/ld-bpf/jump-1.d: Likewise.\n\t* testsuite/ld-bpf/foo.s: Likewise.\n\t* testsuite/ld-bpf/call-1.d: Likewise.\n\t* testsuite/ld-bpf/bpf.exp: Likewise.\n\t* testsuite/ld-bpf/baz.s: Likewise.",
    "tree": {
      "sha": "ea438d902286e53cdacd4ff6a5bd29ebf9bd5fea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ea438d902286e53cdacd4ff6a5bd29ebf9bd5fea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/comments",
  "author": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f8861f5dc2391e0c46dd118370195e7730ec46ca",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f8861f5dc2391e0c46dd118370195e7730ec46ca"
    }
  ],
  "stats": {
    "total": 151,
    "additions": 143,
    "deletions": 8
  },
  "files": [
    {
      "sha": "0965cd79b5fbe1ad09e049d1e18456f50d3d633a",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -1,3 +1,18 @@\n+2019-05-23  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* Makefile.am (ALL_64_EMULATION_SOURCES): Add eelf64bpf.c.\n+\t* Makefile.in (prefix): Regenerate.\n+\t* configure.tgt (targ_extra_ofiles): Add case for bpf-*-* targets.\n+\t* emulparams/elf64bpf.sh: New file.\n+\t* testsuite/lib/ld-lib.exp (check_gc_sections_available): Add\n+\tbpf-*-* to the list of targets not supporting gc-sections.\n+\t* testsuite/ld-bpf/bar.s: New file.\n+\t* testsuite/ld-bpf/jump-1.d: Likewise.\n+\t* testsuite/ld-bpf/foo.s: Likewise.\n+\t* testsuite/ld-bpf/call-1.d: Likewise.\n+\t* testsuite/ld-bpf/bpf.exp: Likewise.\n+\t* testsuite/ld-bpf/baz.s: Likewise.\n+\n 2019-05-23  Alan Modra  <amodra@gmail.com>\n \n \tPR 24576"
    },
    {
      "sha": "0509c2e50f1b49ea9354510e2a9fe723451201df",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -423,6 +423,7 @@ ALL_64_EMULATION_SOURCES = \\\n \teelf32ltsmipn32_fbsd.c \\\n \teelf32mipswindiss.c \\\n \teelf64_aix.c \\\n+\teelf64bpf.c \\\n \teelf64_ia64.c \\\n \teelf64_ia64_fbsd.c \\\n \teelf64_ia64_vms.c \\\n@@ -907,6 +908,7 @@ $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32_fbsd.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mipswindiss.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_aix.Pc@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bpf.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_fbsd.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_vms.Pc@am__quote@"
    },
    {
      "sha": "9bc14f76c8670b665637aca7edb9d8a4a0d10eb8",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -521,6 +521,7 @@ pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+runstatedir = @runstatedir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -909,6 +910,7 @@ ALL_64_EMULATION_SOURCES = \\\n \teelf32ltsmipn32_fbsd.c \\\n \teelf32mipswindiss.c \\\n \teelf64_aix.c \\\n+\teelf64bpf.c \\\n \teelf64_ia64.c \\\n \teelf64_ia64_fbsd.c \\\n \teelf64_ia64_vms.c \\\n@@ -1359,6 +1361,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_fbsd.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64alpha_nbsd.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bmip.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bpf.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64btsmip_fbsd.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64hppa.Po@am__quote@\n@@ -2507,6 +2510,7 @@ $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ltsmipn32_fbsd.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32mipswindiss.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_aix.Pc@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64bpf.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_fbsd.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_vms.Pc@am__quote@"
    },
    {
      "sha": "9952489f8c95004062848da2cb2f22e25d515269",
      "filename": "ld/configure",
      "status": "modified",
      "additions": 20,
      "deletions": 8,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -786,6 +786,7 @@ infodir\n docdir\n oldincludedir\n includedir\n+runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -888,6 +889,7 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n+runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\n@@ -1140,6 +1142,15 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n+  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n+  | --runstate | --runstat | --runsta | --runst | --runs \\\n+  | --run | --ru | --r)\n+    ac_prev=runstatedir ;;\n+  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n+  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n+  | --run=* | --ru=* | --r=*)\n+    runstatedir=$ac_optarg ;;\n+\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1277,7 +1288,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir\n+\t\tlibdir localedir mandir runstatedir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1430,6 +1441,7 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n+  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -12027,7 +12039,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12030 \"configure\"\n+#line 12042 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12133,7 +12145,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12136 \"configure\"\n+#line 12148 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15536,7 +15548,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -15582,7 +15594,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -15606,7 +15618,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -15651,7 +15663,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -15675,7 +15687,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n+#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];"
    },
    {
      "sha": "c81bc8a7d847537a7c30ad41ba84e75847bb3e84",
      "filename": "ld/configure.tgt",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.tgt?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -182,6 +182,7 @@ bfin-*-linux-uclibc*)\ttarg_emul=elf32bfinfd;\n \t\t\ttarg_extra_emuls=\"elf32bfin\"\n \t\t\ttarg_extra_libpath=$targ_extra_emuls\n \t\t\t;;\n+bpf-*-*)\t\ttarg_emul=elf64bpf ;;\n cr16-*-elf*)\t\ttarg_emul=elf32cr16 ;;\n cr16c-*-elf*)\t\ttarg_emul=elf32cr16c\n \t\t\t;;"
    },
    {
      "sha": "39b23f045159898c90c90a25a96eee61d06c6a7b",
      "filename": "ld/emulparams/elf64bpf.sh",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/emulparams/elf64bpf.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/emulparams/elf64bpf.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf64bpf.sh?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -0,0 +1,10 @@\n+TEMPLATE_NAME=elf32\n+SCRIPT_NAME=elf\n+BIG_OUTPUT_FORMAT=\"elf64-bpfbe\"\n+LITTLE_OUTPUT_FORMAT=\"elf64-bpfle\"\n+OUTPUT_FORMAT=\"$LITTLE_OUTPUT_FORMAT\"\n+ARCH=bpf\n+MACHINE=\n+TARGET_PAGE_SIZE=0x1000\n+# XXX this is arbitrary, for now\n+TEXT_START_ADDR=0x00400000"
    },
    {
      "sha": "b577d87d7472fd1a7d9647601e5f3283f25a427e",
      "filename": "ld/testsuite/ld-bpf/bar.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/bar.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/bar.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bpf/bar.s?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -0,0 +1,5 @@\n+        .global bar\n+bar:\n+        mov\t%r1,%r2\n+        mov\t%r3,%r1\n+        exit"
    },
    {
      "sha": "2e159a8829be4f45e497407ad7f35d6f3659ef92",
      "filename": "ld/testsuite/ld-bpf/baz.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/baz.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/baz.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bpf/baz.s?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -0,0 +1,5 @@\n+        mov %r1,1\n+        mov %r2,2\n+        mov %r3,3\n+        ja bar\n+        exit"
    },
    {
      "sha": "02b2e03021fe157f956340cfd0f68d867d7f8007",
      "filename": "ld/testsuite/ld-bpf/bpf.exp",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/bpf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/bpf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bpf/bpf.exp?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -0,0 +1,29 @@\n+# Copyright (C) 2019 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+#\n+\n+if { ![istarget bpf*-*-*] } {\n+    return\n+}\n+\n+set bpf_test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]\n+foreach bpf_test $bpf_test_list {\n+    verbose [file rootname $bpf_test]\n+    run_dump_test [file rootname $bpf_test]\n+}"
    },
    {
      "sha": "f408cd4db9b47ab91edba6c97e2e029bcf28f306",
      "filename": "ld/testsuite/ld-bpf/call-1.d",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/call-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/call-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bpf/call-1.d?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -0,0 +1,23 @@\n+#as: --EL\n+#source: foo.s\n+#source: bar.s\n+#objdump: -dr\n+#ld: -EL\n+#warning: .*cannot find entry symbol _start.*\n+#name: CALL with disp32 reloc\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+[0-9a-f]+ <.*>:\n+ *[0-9a-f]+:\tb7 01 00 00 01 00 00 00 \tmov %r1,1\n+ *[0-9a-f]+:\tb7 02 00 00 02 00 00 00 \tmov %r2,2\n+ *[0-9a-f]+:\tb7 03 00 00 03 00 00 00 \tmov %r3,3\n+ *[0-9a-f]+:\t85 10 00 00 01 00 00 00 \tcall 1\n+ *[0-9a-f]+:\t95 00 00 00 00 00 00 00 \texit\n+\n+[0-9a-f]+ <bar>:\n+ *[0-9a-f]+:\tbf 21 00 00 00 00 00 00 \tmov %r1,%r2\n+ *[0-9a-f]+:\tbf 13 00 00 00 00 00 00 \tmov %r3,%r1\n+ *[0-9a-f]+:\t95 00 00 00 00 00 00 00 \texit"
    },
    {
      "sha": "0958bbf67c65c3db4231ebd12a86878797d642ba",
      "filename": "ld/testsuite/ld-bpf/foo.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/foo.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/foo.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bpf/foo.s?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -0,0 +1,5 @@\n+        mov %r1,1\n+        mov %r2,2\n+        mov %r3,3\n+        call bar\n+        exit"
    },
    {
      "sha": "b57bcf1f40961984d883e300871011013800085b",
      "filename": "ld/testsuite/ld-bpf/jump-1.d",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/jump-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/ld-bpf/jump-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bpf/jump-1.d?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -0,0 +1,23 @@\n+#as: --EL\n+#source: baz.s\n+#source: bar.s\n+#objdump: -dr\n+#ld: -EL\n+#warning: .*cannot find entry symbol _start.*\n+#name: jump with disp16 reloc\n+\n+.*: +file format .*bpf.*\n+\n+Disassembly of section .text:\n+\n+[0-9a-f]+ <.*>:\n+ *[0-9a-f]+:\tb7 01 00 00 01 00 00 00 \tmov %r1,1\n+ *[0-9a-f]+:\tb7 02 00 00 02 00 00 00 \tmov %r2,2\n+ *[0-9a-f]+:\tb7 03 00 00 03 00 00 00 \tmov %r3,3\n+ *[0-9a-f]+:\t05 00 01 00 00 00 00 00 \tja 1\n+ *[0-9a-f]+:\t95 00 00 00 00 00 00 00 \texit\n+\n+[0-9a-f]+ <bar>:\n+ *[0-9a-f]+:\tbf 21 00 00 00 00 00 00 \tmov %r1,%r2\n+ *[0-9a-f]+:\tbf 13 00 00 00 00 00 00 \tmov %r3,%r1\n+ *[0-9a-f]+:\t95 00 00 00 00 00 00 00 \texit"
    },
    {
      "sha": "5ebb7fa35fa512802a1b5a5581e499fcbc7a6c85",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=8376927b2cc8b80cd5aa1e48aabafc85c0ad4f3e",
      "patch": "@@ -1045,6 +1045,7 @@ proc check_gc_sections_available { } {\n \t# Some targets don't support gc-sections despite whatever's\n \t# advertised by ld's options.\n \tif {   [istarget alpha-*-*]\n+            || [istarget bpf-*-*]\n \t    || [istarget d30v-*-*]\n \t    || [istarget dlx-*-*]\n \t    || [istarget hppa*64-*-*]"
    }
  ]
}