{
  "sha": "f405494f214315091fb0864827b07b5e6f12ee84",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQwNTQ5NGYyMTQzMTUwOTFmYjA4NjQ4MjdiMDdiNWU2ZjEyZWU4NA==",
  "commit": {
    "author": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-07-02T12:53:07Z"
    },
    "committer": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-07-02T12:53:07Z"
    },
    "message": "aarch64: Fix segfault on unicode symbols\n\nThis patch fixes a segfault which occurs when the AArch64 backend parses\na symbol operand that begins with a register name and ends with a\nunicode byte (byte value > 127).\n\nFor example, the following input causes the crash:\n\nx0\u00e9: udf x0\u00e9\n\ngas/ChangeLog:\n\n2020-07-02  Alex Coplan  <alex.coplan@arm.com>\n\n\t* config/tc-aarch64.c (reg_name_p): Fix cast so that we don't\n\tsegfault on negative chars.\n\t* testsuite/gas/aarch64/reglike-label-unicode-segv.d: New test.\n\t* testsuite/gas/aarch64/reglike-label-unicode-segv.s: Input.",
    "tree": {
      "sha": "bf96219255effe72b24ec8217213a71f1a26908e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bf96219255effe72b24ec8217213a71f1a26908e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f405494f214315091fb0864827b07b5e6f12ee84",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f405494f214315091fb0864827b07b5e6f12ee84",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f405494f214315091fb0864827b07b5e6f12ee84",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f405494f214315091fb0864827b07b5e6f12ee84/comments",
  "author": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1a35af2704842ff1a90626b0148c0fc93f995f6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b1a35af2704842ff1a90626b0148c0fc93f995f6"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 18,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c4b04f02bdf841339efcbb044cddb4801824c959",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f405494f214315091fb0864827b07b5e6f12ee84/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f405494f214315091fb0864827b07b5e6f12ee84/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f405494f214315091fb0864827b07b5e6f12ee84",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-02  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/tc-aarch64.c (reg_name_p): Fix cast so that we don't\n+\tsegfault on negative chars.\n+\t* testsuite/gas/aarch64/reglike-label-unicode-segv.d: New test.\n+\t* testsuite/gas/aarch64/reglike-label-unicode-segv.s: Input.\n+\n 2020-07-02  Nick Clifton  <nickc@redhat.com>\n \n \tPR 26028"
    },
    {
      "sha": "ecb15d2343740426a4c867a9e1a03a3414fbbc45",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f405494f214315091fb0864827b07b5e6f12ee84/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f405494f214315091fb0864827b07b5e6f12ee84/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=f405494f214315091fb0864827b07b5e6f12ee84",
      "patch": "@@ -2190,7 +2190,7 @@ reg_name_p (char *str, aarch64_reg_type reg_type)\n     return FALSE;\n \n   skip_whitespace (str);\n-  if (*str == ',' || is_end_of_line[(unsigned int) *str])\n+  if (*str == ',' || is_end_of_line[(unsigned char) *str])\n     return TRUE;\n \n   return FALSE;"
    },
    {
      "sha": "f262e6f75ab99d2d781b7c87d4253930a372d1f3",
      "filename": "gas/testsuite/gas/aarch64/reglike-label-unicode-segv.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f405494f214315091fb0864827b07b5e6f12ee84/gas/testsuite/gas/aarch64/reglike-label-unicode-segv.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f405494f214315091fb0864827b07b5e6f12ee84/gas/testsuite/gas/aarch64/reglike-label-unicode-segv.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/reglike-label-unicode-segv.d?ref=f405494f214315091fb0864827b07b5e6f12ee84",
      "patch": "@@ -0,0 +1,8 @@\n+#objdump: -dr\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+0+ <x0\u00e9>:\n+.*:\t00000000 \tudf\t#0"
    },
    {
      "sha": "18f1e92957122b8d62391326fb7dc8455126eeea",
      "filename": "gas/testsuite/gas/aarch64/reglike-label-unicode-segv.s",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f405494f214315091fb0864827b07b5e6f12ee84/gas/testsuite/gas/aarch64/reglike-label-unicode-segv.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f405494f214315091fb0864827b07b5e6f12ee84/gas/testsuite/gas/aarch64/reglike-label-unicode-segv.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/reglike-label-unicode-segv.s?ref=f405494f214315091fb0864827b07b5e6f12ee84",
      "patch": "@@ -0,0 +1,2 @@\n+x0\u00e9:\n+udf x0\u00e9"
    }
  ]
}