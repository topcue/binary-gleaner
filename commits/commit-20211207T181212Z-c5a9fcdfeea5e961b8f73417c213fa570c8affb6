{
  "sha": "c5a9fcdfeea5e961b8f73417c213fa570c8affb6",
  "node_id": "C_kwDOANOeidoAKGM1YTlmY2RmZWVhNWU5NjFiOGY3MzQxN2MyMTNmYTU3MGM4YWZmYjY",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-12-06T19:20:28Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-12-07T18:12:12Z"
    },
    "message": "Avoid extra work in global_symbol_searcher::expand_symtabs\n\nI noticed that global_symbol_searcher::expand_symtabs always passes a\nfile matcher to expand_symtabs_matching.  However, if 'filenames' is\nempty, then this always returns true.  It's slightly more efficient to\npass a null file matcher in this case, because that lets the \"quick\"\nsymbol implementations skip any filename checks.\n\nRegression tested on x86-64 Fedora 34.",
    "tree": {
      "sha": "380f7224b155f21b5e1142a494790618b9d83fb8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/380f7224b155f21b5e1142a494790618b9d83fb8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c5a9fcdfeea5e961b8f73417c213fa570c8affb6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5a9fcdfeea5e961b8f73417c213fa570c8affb6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c5a9fcdfeea5e961b8f73417c213fa570c8affb6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5a9fcdfeea5e961b8f73417c213fa570c8affb6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4281b0c8fcb19325496094491ce1e046a6401a36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4281b0c8fcb19325496094491ce1e046a6401a36",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4281b0c8fcb19325496094491ce1e046a6401a36"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 9,
    "deletions": 4
  },
  "files": [
    {
      "sha": "68b6267f87897e406602be5ebe7c8f12ee1ed987",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5a9fcdfeea5e961b8f73417c213fa570c8affb6/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5a9fcdfeea5e961b8f73417c213fa570c8affb6/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=c5a9fcdfeea5e961b8f73417c213fa570c8affb6",
      "patch": "@@ -4678,11 +4678,16 @@ global_symbol_searcher::expand_symtabs\n   enum search_domain kind = m_kind;\n   bool found_msymbol = false;\n \n+  auto do_file_match = [&] (const char *filename, bool basenames)\n+    {\n+      return file_matches (filename, filenames, basenames);\n+    };\n+  gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher = nullptr;\n+  if (!filenames.empty ())\n+    file_matcher = do_file_match;\n+\n   objfile->expand_symtabs_matching\n-    ([&] (const char *filename, bool basenames)\n-     {\n-       return file_matches (filename, filenames, basenames);\n-     },\n+    (file_matcher,\n      &lookup_name_info::match_any (),\n      [&] (const char *symname)\n      {"
    }
  ]
}