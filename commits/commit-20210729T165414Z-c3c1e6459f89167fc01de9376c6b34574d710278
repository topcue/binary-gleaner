{
  "sha": "c3c1e6459f89167fc01de9376c6b34574d710278",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzNjMWU2NDU5Zjg5MTY3ZmMwMWRlOTM3NmM2YjM0NTc0ZDcxMDI3OA==",
  "commit": {
    "author": {
      "name": "George Barrett",
      "email": "bob@bob131.so",
      "date": "2021-07-29T15:12:03Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-29T16:54:14Z"
    },
    "message": "gdbtypes: return value from get_unsigned_type_max\n\nChanges the signature of get_unsigned_type_max to return the computed\nvalue rather than returning void and writing the value into a pointer\npassed by the caller.\n\ngdb/ChangeLog:\n\n2021-07-30  George Barrett  <bob@bob131.so>\n\n\t* gdbtypes.h (get_unsigned_type_max): Change signature to\n\treturn the result instead of accepting a pointer argument in\n\twhich to store the result.\n\t* gdbtypes.c (get_unsigned_type_max): Likewise.\n\t* guile/scm-math.c (vlscm_convert_typed_number): Update caller\n\tof get_unsigned_type_max.\n\t(vlscm_integer_fits_p): Likewise.\n\nChange-Id: Ibb1bf0c0fa181fac7853147dfde082a7d1ae2323",
    "tree": {
      "sha": "9887eca9da6342468431adc210fe7e88e9dd473e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9887eca9da6342468431adc210fe7e88e9dd473e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c3c1e6459f89167fc01de9376c6b34574d710278",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3c1e6459f89167fc01de9376c6b34574d710278",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c3c1e6459f89167fc01de9376c6b34574d710278",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3c1e6459f89167fc01de9376c6b34574d710278/comments",
  "author": {
    "login": "Bob131",
    "id": 4337852,
    "node_id": "MDQ6VXNlcjQzMzc4NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4337852?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Bob131",
    "html_url": "https://github.com/Bob131",
    "followers_url": "https://api.github.com/users/Bob131/followers",
    "following_url": "https://api.github.com/users/Bob131/following{/other_user}",
    "gists_url": "https://api.github.com/users/Bob131/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Bob131/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Bob131/subscriptions",
    "organizations_url": "https://api.github.com/users/Bob131/orgs",
    "repos_url": "https://api.github.com/users/Bob131/repos",
    "events_url": "https://api.github.com/users/Bob131/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Bob131/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cd026728f3bcba878293f9c38f8760512755ed73",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd026728f3bcba878293f9c38f8760512755ed73",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd026728f3bcba878293f9c38f8760512755ed73"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 8,
    "deletions": 12
  },
  "files": [
    {
      "sha": "609de23ee44a4c7a87955da8d3b4f8029b5113d7",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3c1e6459f89167fc01de9376c6b34574d710278/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3c1e6459f89167fc01de9376c6b34574d710278/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=c3c1e6459f89167fc01de9376c6b34574d710278",
      "patch": "@@ -1891,11 +1891,10 @@ lookup_struct_elt_type (struct type *type, const char *name, int noerr)\n     return NULL;\n }\n \n-/* Store in *MAX the largest number representable by unsigned integer type\n-   TYPE.  */\n+/* Return the largest number representable by unsigned integer type TYPE.  */\n \n-void\n-get_unsigned_type_max (struct type *type, ULONGEST *max)\n+ULONGEST\n+get_unsigned_type_max (struct type *type)\n {\n   unsigned int n;\n \n@@ -1905,7 +1904,7 @@ get_unsigned_type_max (struct type *type, ULONGEST *max)\n \n   /* Written this way to avoid overflow.  */\n   n = TYPE_LENGTH (type) * TARGET_CHAR_BIT;\n-  *max = ((((ULONGEST) 1 << (n - 1)) - 1) << 1) | 1;\n+  return ((((ULONGEST) 1 << (n - 1)) - 1) << 1) | 1;\n }\n \n /* Store in *MIN, *MAX the smallest and largest numbers representable by"
    },
    {
      "sha": "b47644b210eeac7fe32c5f8c562050717f622779",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3c1e6459f89167fc01de9376c6b34574d710278/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3c1e6459f89167fc01de9376c6b34574d710278/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=c3c1e6459f89167fc01de9376c6b34574d710278",
      "patch": "@@ -2519,7 +2519,7 @@ extern struct type *lookup_unsigned_typename (const struct language_defn *,\n extern struct type *lookup_signed_typename (const struct language_defn *,\n \t\t\t\t\t    const char *);\n \n-extern void get_unsigned_type_max (struct type *, ULONGEST *);\n+extern ULONGEST get_unsigned_type_max (struct type *);\n \n extern void get_signed_type_minmax (struct type *, LONGEST *, LONGEST *);\n "
    },
    {
      "sha": "15b7247c78028da6859fa14e3ddec402cbcc10f3",
      "filename": "gdb/guile/scm-math.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3c1e6459f89167fc01de9376c6b34574d710278/gdb/guile/scm-math.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3c1e6459f89167fc01de9376c6b34574d710278/gdb/guile/scm-math.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-math.c?ref=c3c1e6459f89167fc01de9376c6b34574d710278",
      "patch": "@@ -529,9 +529,7 @@ vlscm_convert_typed_number (const char *func_name, int obj_arg_pos, SCM obj,\n     {\n       if (type->is_unsigned ())\n \t{\n-\t  ULONGEST max;\n-\n-\t  get_unsigned_type_max (type, &max);\n+\t  ULONGEST max = get_unsigned_type_max (type);\n \t  if (!scm_is_unsigned_integer (obj, 0, max))\n \t    {\n \t      *except_scmp\n@@ -575,12 +573,11 @@ vlscm_integer_fits_p (SCM obj, struct type *type)\n {\n   if (type->is_unsigned ())\n     {\n-      ULONGEST max;\n-\n       /* If scm_is_unsigned_integer can't work with this type, just punt.  */\n       if (TYPE_LENGTH (type) > sizeof (uintmax_t))\n \treturn 0;\n-      get_unsigned_type_max (type, &max);\n+\n+      ULONGEST max = get_unsigned_type_max (type);\n       return scm_is_unsigned_integer (obj, 0, max);\n     }\n   else"
    }
  ]
}