{
  "sha": "8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGY1OTVlOWI0ZmQwYTNhNzRkNTNkZGZmZDY5ZjI4MjU2MjdhZTVjNg==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-05-20T16:22:48Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-20T16:22:48Z"
    },
    "message": "[PATCH v2 0/9] RISC-V: Support version controling for ISA standard extensions and CSR\n\n1. Remove the -mriscv-isa-version and --with-riscv-isa-version options.\nWe can still use -march to choose the version for each extensions, so there is\nno need to add these.\n\n2. Change the arguments of options from [1p9|1p9p1|...] to [1.9|1.9.1|...].\nUnlike the architecture string has specified by spec, ther is no need to do\nthe same thing for options.\n\n3. Spilt the patches to reduce the burdens of review.\n\n[PATCH 3/7] RISC-V: Support new GAS options and configure options to set ISA versions\nto\n[PATCH v2 3/9] RISC-V: Support GAS option -misa-spec to set ISA versions\n[PATCH v2 4/9] RISC-V: Support configure options to set ISA versions by default.\n\n[PATCH 4/7] RISC-V: Support version checking for CSR according to privilege version.\nto\n[PATCH v2 5/9] RISC-V: Support version checking for CSR according to privilege spec version.\n[PATCH v2 6/9] RISC-V: Support configure option to choose the privilege spec version.\n\n4. Use enum class rather than string to compare the choosen ISA spec in opcodes/riscv-opc.c.\nThe behavior is same as comparing the choosen privilege spec.\n\ninclude\t* opcode/riscv.h: Include \"bfd.h\" to support bfd_boolean.\n\t(enum riscv_isa_spec_class): New enum class.  All supported ISA spec\n\tbelong to one of the class\n\t(struct riscv_ext_version): New structure holds version information\n\tfor the specific ISA.\n\t* opcode/riscv-opc.h (DECLARE_CSR): There are two version information,\n\tdefine_version and abort_version.  The define_version means which\n\tprivilege spec is started to define the CSR, and the abort_version\n\tmeans which privilege spec is started to abort the CSR.  If the CSR is\n\tvalid for the newest spec, then the abort_version should be\n\tPRIV_SPEC_CLASS_DRAFT.\n\t(DECLARE_CSR_ALIAS): Same as DECLARE_CSR, but only for the obselete CSR.\n\t* opcode/riscv.h (enum riscv_priv_spec_class): New enum class.  Define\n\tthe current supported privilege spec versions.\n\t(struct riscv_csr_extra): Add new fields to store more information\n\tabout the CSR.  We use these information to find the suitable CSR\n\taddress when user choosing a specific privilege spec.\n\nbinutils * dwarf.c: Updated since DECLARE_CSR is changed.\n\nopcodes\t* riscv-opc.c (riscv_ext_version_table): The table used to store\n\tall information about the supported spec and the corresponding ISA\n\tversions.  Currently, only Zicsr is supported to verify the\n\tcorrectness of Z sub extension settings.  Others will be supported\n\tin the future patches.\n\t(struct isa_spec_t, isa_specs): List for all supported ISA spec\n\tclasses and the corresponding strings.\n\t(riscv_get_isa_spec_class): New function.  Get the corresponding ISA\n\tspec class by giving a ISA spec string.\n\t* riscv-opc.c (struct priv_spec_t): New structure.\n\t(struct priv_spec_t priv_specs): List for all supported privilege spec\n\tclasses and the corresponding strings.\n\t(riscv_get_priv_spec_class): New function.  Get the corresponding\n\tprivilege spec class by giving a spec string.\n\t(riscv_get_priv_spec_name): New function.  Get the corresponding\n\tprivilege spec string by giving a CSR version class.\n\t* riscv-dis.c: Updated since DECLARE_CSR is changed.\n\t* riscv-dis.c: Add new disassembler option -Mpriv-spec to dump the CSR\n\taccording to the chosen version.  Build a hash table riscv_csr_hash to\n\tstore the valid CSR for the chosen pirv verison.  Dump the direct\n\tCSR address rather than it's name if it is invalid.\n\t(parse_riscv_dis_option_without_args): New function.  Parse the options\n\twithout arguments.\n\t(parse_riscv_dis_option): Call parse_riscv_dis_option_without_args to\n\tparse the options without arguments first, and then handle the options\n\twith arguments.  Add the new option -Mpriv-spec, which has argument.\n\t* riscv-dis.c (print_riscv_disassembler_options): Add description\n\tabout the new OBJDUMP option.\n\nld\t* testsuite/ld-riscv-elf/attr-merge-arch-01.d: Updated\n        priv attributes according to the -mpriv-spec option.\n\t* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.\n\t* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.\n\nbfd \t* elfxx-riscv.h (riscv_parse_subset_t): Add new callback function\n\tget_default_version.  It is used to find the default version for\n\tthe specific extension.\n\t* elfxx-riscv.c (riscv_parsing_subset_version): Remove the parameters\n\tdefault_major_version and default_minor_version.  Add new bfd_boolean\n\tparameter *use_default_version.  Set it to TRUE if we need to call\n\tthe callback rps->get_default_version to find the default version.\n\t(riscv_parse_std_ext): Call rps->get_default_version if we fail to find\n\tthe default version in riscv_parsing_subset_version, and then call\n\triscv_add_subset to add the subset into subset list.\n\t(riscv_parse_prefixed_ext): Likewise.\n\t(riscv_std_z_ext_strtab): Support Zicsr extensions.\n\t* elfnn-riscv.c (riscv_merge_std_ext): Use strcasecmp to compare the\n\tstrings rather than characters.\n\triscv_merge_arch_attr_info): The callback function get_default_version\n\tis only needed for assembler, so set it to NULL int the linker.\n\t* elfxx-riscv.c (riscv_estimate_digit): Remove the static.\n\t* elfxx-riscv.h: Updated.\n\ngas\t* testsuite/gas/riscv/priv-reg-fail-read-only-01.s: Updated.\n\t* config/tc-riscv.c (default_arch_with_ext, default_isa_spec):\n\tStatic variables which are used to set the ISA extensions. You can\n\tuse -march (or ELF build attributes) and -misa-spec to set them,\n\trespectively.\n\t(ext_version_hash): The hash table used to handle the extensions\n\twith versions.\n\t(init_ext_version_hash): Initialize the ext_version_hash according\n\tto riscv_ext_version_table.\n\t(riscv_get_default_ext_version): The callback function of\n\triscv_parse_subset_t.  According to the choosed ISA spec,\n\tget the default version for the specific extension.\n\t(riscv_set_arch): Set the callback function.\n\t(enum options, struct option md_longopts): Add new option -misa-spec.\n\t(md_parse_option): Do not call riscv_set_arch for -march.  We will\n\tcall it later in riscv_after_parse_args.  Call riscv_get_isa_spec_class\n\tto set default_isa_spec class.\n\t(riscv_after_parse_args): Call init_ext_version_hash to initialize the\n\text_version_hash, and then call riscv_set_arch to set the architecture\n\twith versions according to default_arch_with_ext.\n\t* testsuite/gas/riscv/attribute-02.d: Set 0p0 as default version for\n\tx extensions.\n\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n\t* testsuite/gas/riscv/attribute-09.d: New testcase.  For i-ext, we\n\talready set it's version to 2p1 by march, so no need to use the default\n\t2p2 version.  For m-ext, we do not set the version by -march and ELF arch\n\tattribute, so set the default 2p0 to it.  For zicsr, it is not defined in\n\tISA spec 2p2, so set 0p0 to it.\n\t* testsuite/gas/riscv/attribute-10.d: New testcase.  The version of\n\tzicsr is 2p0 according to ISA spec 20191213.\n\t* config/tc-riscv.c (DEFAULT_RISCV_ARCH_WITH_EXT)\n\t(DEFAULT_RISCV_ISA_SPEC): Default configure option settings.\n\tYou can set them by configure options --with-arch and\n\t--with-isa-spec, respectively.\n\t(riscv_set_default_isa_spec): New function used to set the\n\tdefault ISA spec.\n\t(md_parse_option): Call riscv_set_default_isa_spec rather than\n\tcall riscv_get_isa_spec_class directly.\n\t(riscv_after_parse_args): If the -isa-spec is not set, then we\n\tset the default ISA spec according to DEFAULT_RISCV_ISA_SPEC by\n\tcalling riscv_set_default_isa_spec.\n\t* testsuite/gas/riscv/attribute-01.d: Add -misa-spec=2.2, since\n\tthe --with-isa-spec may be set to different ISA spec.\n\t* testsuite/gas/riscv/attribute-02.d: Likewise.\n\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n\t* testsuite/gas/riscv/attribute-04.d: Likewise.\n\t* testsuite/gas/riscv/attribute-05.d: Likewise.\n\t* testsuite/gas/riscv/attribute-06.d: Likewise.\n\t* testsuite/gas/riscv/attribute-07.d: Likewise.\n\t* configure.ac: Add configure options, --with-arch and\n\t--with-isa-spec.\n\t* configure: Regenerated.\n\t* config.in: Regenerated.\n\t* config/tc-riscv.c (default_priv_spec): Static variable which is\n\tused to check if the CSR is valid for the chosen privilege spec. You\n\tcan use -mpriv-spec to set it.\n\t(enum reg_class): We now get the CSR address from csr_extra_hash rather\n\tthan reg_names_hash.  Therefore, move RCLASS_CSR behind RCLASS_MAX.\n\t(riscv_init_csr_hashes): Only need to initialize one hash table\n\tcsr_extra_hash.\n\t(riscv_csr_class_check): Change the return type to void.  Don't check\n\tthe ISA dependency if -mcsr-check isn't set.\n\t(riscv_csr_version_check): New function.  Check and find the CSR address\n\tfrom csr_extra_hash, according to default_priv_spec.  Report warning\n\tfor the invalid CSR if -mcsr-check is set.\n\t(reg_csr_lookup_internal): Updated.\n\t(reg_lookup_internal): Likewise.\n\t(md_begin): Updated since DECLARE_CSR and DECLARE_CSR_ALIAS are changed.\n\t(enum options, struct option md_longopts): Add new GAS option -mpriv-spec.\n\t(md_parse_option): Call riscv_set_default_priv_version to set\n\tdefault_priv_spec.\n\t(riscv_after_parse_args): If -mpriv-spec isn't set, then set the default\n\tprivilege spec to the newest one.\n\t(enum riscv_csr_class, struct riscv_csr_extra): Move them to\n\tinclude/opcode/riscv.h.\n\t* testsuite/gas/riscv/priv-reg-fail-fext.d: This test case just want\n\tto check the ISA dependency for CSR, so fix the spec version by adding\n\t-mpriv-spec=1.11.\n\t* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.  There are some\n\tversion warnings for the test case.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d: New test case.\n\tCheck whether the CSR is valid when privilege version 1.9 is choosed.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: New test case.\n\tCheck whether the CSR is valid when privilege version 1.9.1 is choosed.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d: New test case.\n\tCheck whether the CSR is valid when privilege version 1.10 is choosed.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d: New test case.\n\tCheck whether the CSR is valid when privilege version 1.11 is choosed.\n\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.\n\t* config/tc-riscv.c (DEFAULT_RISCV_ISA_SPEC): Default configure option\n\tsetting.  You can set it by configure option --with-priv-spec.\n\t(riscv_set_default_priv_spec): New function used to set the default\n\tprivilege spec.\n\t(md_parse_option): Call riscv_set_default_priv_spec rather than\n\tcall riscv_get_priv_spec_class directly.\n\t(riscv_after_parse_args): If -mpriv-spec isn't set, then we set the\n\tdefault privilege spec according to DEFAULT_RISCV_PRIV_SPEC by\n\tcalling riscv_set_default_priv_spec.\n\t* testsuite/gas/riscv/csr-dw-regnums.d: Add -mpriv-spec=1.11, since\n\tthe --with-priv-spec may be set to different privilege spec.\n\t* testsuite/gas/riscv/priv-reg.d: Likewise.\n\t* configure.ac: Add configure option --with-priv-spec.\n\t* configure: Regenerated.\n\t* config.in: Regenerated.\n\t* config/tc-riscv.c (explicit_attr): Rename explicit_arch_attr to\n\texplicit_attr.  Set it to TRUE if any ELF attribute is found.\n\t(riscv_set_default_priv_spec): Try to set the default_priv_spec if\n\tthe priv attributes are set.\n\t(md_assemble): Set the default_priv_spec according to the priv\n\tattributes when we start to assemble instruction.\n\t(riscv_write_out_attrs): Rename riscv_write_out_arch_attr to\n\triscv_write_out_attrs.  Update the arch and priv attributes.  If we\n\tdon't set the corresponding ELF attributes, then try to output the\n\tdefault ones.\n\t(riscv_set_public_attributes): If any ELF attribute or -march-attr\n\toptions is set (explicit_attr is TRUE), then call riscv_write_out_attrs\n\tto update the arch and priv attributes.\n\t(s_riscv_attribute): Make sure all arch and priv attributes are set\n\tbefore any instruction.\n\t* testsuite/gas/riscv/attribute-01.d: Update the priv attributes if any\n\tELF attribute or -march-attr is set.  If the priv attributes are not\n\tset, then try to update them by the default setting (-mpriv-spec or\n\t--with-priv-spec).\n\t* testsuite/gas/riscv/attribute-02.d: Likewise.\n\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n\t* testsuite/gas/riscv/attribute-04.d: Likewise.\n\t* testsuite/gas/riscv/attribute-06.d: Likewise.\n\t* testsuite/gas/riscv/attribute-07.d: Likewise.\n\t* testsuite/gas/riscv/attribute-08.d: Likewise.\n\t* testsuite/gas/riscv/attribute-09.d: Likewise.\n\t* testsuite/gas/riscv/attribute-10.d: Likewise.\n\t* testsuite/gas/riscv/attribute-unknown.d: Likewise.\n\t* testsuite/gas/riscv/attribute-05.d: Likewise.  Also, the priv spec\n\tset by priv attributes must be supported.\n\t* testsuite/gas/riscv/attribute-05.s: Likewise.\n\t* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: Likewise.  Updated\n\tpriv attributes according to the -mpriv-spec option.\n\t* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: Likewise.\n\t* testsuite/gas/riscv/priv-reg-fail-version-1p10.d: Likewise.\n\t* testsuite/gas/riscv/priv-reg-fail-version-1p11.d: Likewise.\n\t* testsuite/gas/riscv/priv-reg.d: Removed.\n\t* testsuite/gas/riscv/priv-reg-version-1p9.d: New test case.  Dump the\n\tCSR according to the priv spec 1.9.\n\t* testsuite/gas/riscv/priv-reg-version-1p9p1.d: New test case.  Dump the\n\tCSR according to the priv spec 1.9.1.\n\t* testsuite/gas/riscv/priv-reg-version-1p10.d: New test case.  Dump the\n\tCSR according to the priv spec 1.10.\n\t* testsuite/gas/riscv/priv-reg-version-1p11.d: New test case.  Dump the\n\tCSR according to the priv spec 1.11.\n\t* config/tc-riscv.c (md_show_usage): Add descriptions about\n\tthe new GAS options.\n\t* doc/c-riscv.texi: Likewise.",
    "tree": {
      "sha": "3668cb480143c82412d9050ad70d4a0e2786a7e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3668cb480143c82412d9050ad70d4a0e2786a7e7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541"
    }
  ],
  "stats": {
    "total": 11359,
    "additions": 7015,
    "deletions": 4344
  },
  "files": [
    {
      "sha": "b3dabb3f33a3993654996887967cb203ce9e7b24",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,24 @@\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* elfxx-riscv.h (riscv_parse_subset_t): Add new callback function\n+\tget_default_version.  It is used to find the default version for\n+\tthe specific extension.\n+\t* elfxx-riscv.c (riscv_parsing_subset_version): Remove the parameters\n+\tdefault_major_version and default_minor_version.  Add new bfd_boolean\n+\tparameter *use_default_version.  Set it to TRUE if we need to call\n+\tthe callback rps->get_default_version to find the default version.\n+\t(riscv_parse_std_ext): Call rps->get_default_version if we fail to find\n+\tthe default version in riscv_parsing_subset_version, and then call\n+\triscv_add_subset to add the subset into subset list.\n+\t(riscv_parse_prefixed_ext): Likewise.\n+\t(riscv_std_z_ext_strtab): Support Zicsr extensions.\n+\t* elfnn-riscv.c (riscv_merge_std_ext): Use strcasecmp to compare the\n+\tstrings rather than characters.\n+\triscv_merge_arch_attr_info): The callback function get_default_version\n+\tis only needed for assembler, so set it to NULL int the linker.\n+\t* elfxx-riscv.c (riscv_estimate_digit): Remove the static.\n+\t* elfxx-riscv.h: Updated.\n+\n 2020-05-20  Alan Modra  <amodra@gmail.com>\n \n \tPR 25993"
    },
    {
      "sha": "e8e377e32572237b107ec92ecbfd856ef31da95b",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -2810,7 +2810,7 @@ riscv_merge_std_ext (bfd *ibfd,\n   if (!riscv_i_or_e_p (ibfd, out_arch, out))\n     return FALSE;\n \n-  if (in->name[0] != out->name[0])\n+  if (strcasecmp (in->name, out->name) != 0)\n     {\n       /* TODO: We might allow merge 'i' with 'e'.  */\n       _bfd_error_handler\n@@ -2983,13 +2983,17 @@ riscv_merge_arch_attr_info (bfd *ibfd, char *in_arch, char *out_arch)\n   riscv_parse_subset_t rpe_in;\n   riscv_parse_subset_t rpe_out;\n \n+  /* Only assembler needs to check the default version of ISA, so just set\n+     the rpe_in.get_default_version and rpe_out.get_default_version to NULL.  */\n   rpe_in.subset_list = &in_subsets;\n   rpe_in.error_handler = _bfd_error_handler;\n   rpe_in.xlen = &xlen_in;\n+  rpe_in.get_default_version = NULL;\n \n   rpe_out.subset_list = &out_subsets;\n   rpe_out.error_handler = _bfd_error_handler;\n   rpe_out.xlen = &xlen_out;\n+  rpe_out.get_default_version = NULL;\n \n   if (in_arch == NULL && out_arch == NULL)\n     return NULL;"
    },
    {
      "sha": "5dd36ab965a9e56fe778d3c408faa2ec289c1c2c",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 166,
      "deletions": 119,
      "changes": 285,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1025,27 +1025,25 @@ riscv_elf_add_sub_reloc (bfd *abfd,\n      `minor_version`: Parsing result of minor version, set to 0 if version is\n      not present in arch string, but set to `default_minor_version` if\n      `major_version` using default_major_version.\n-     `default_major_version`: Default major version.\n-     `default_minor_version`: Default minor version.\n-     `std_ext_p`: True if parsing std extension.  */\n+     `std_ext_p`: True if parsing std extension.\n+     `use_default_version`: Set it to True if we need the default version.  */\n \n static const char *\n riscv_parsing_subset_version (riscv_parse_subset_t *rps,\n \t\t\t      const char *march,\n \t\t\t      const char *p,\n \t\t\t      unsigned *major_version,\n \t\t\t      unsigned *minor_version,\n-\t\t\t      unsigned default_major_version,\n-\t\t\t      unsigned default_minor_version,\n-\t\t\t      bfd_boolean std_ext_p)\n+\t\t\t      bfd_boolean std_ext_p,\n+\t\t\t      bfd_boolean *use_default_version)\n {\n   bfd_boolean major_p = TRUE;\n   unsigned version = 0;\n-  unsigned major = 0;\n-  unsigned minor = 0;\n   char np;\n \n-  for (;*p; ++p)\n+  *major_version = 0;\n+  *minor_version = 0;\n+  for (; *p; ++p)\n     {\n       if (*p == 'p')\n \t{\n@@ -1062,13 +1060,14 @@ riscv_parsing_subset_version (riscv_parse_subset_t *rps,\n \t\t}\n \t      else\n \t\t{\n-\t\t  rps->error_handler (\"-march=%s: Expect number after `%dp'.\",\n-\t\t\t\t      march, version);\n+\t\t  rps->error_handler\n+\t\t    (_(\"-march=%s: Expect number after `%dp'.\"),\n+\t\t     march, version);\n \t\t  return NULL;\n \t\t}\n \t    }\n \n-\t  major = version;\n+\t  *major_version = version;\n \t  major_p = FALSE;\n \t  version = 0;\n \t}\n@@ -1079,21 +1078,15 @@ riscv_parsing_subset_version (riscv_parse_subset_t *rps,\n     }\n \n   if (major_p)\n-    major = version;\n+    *major_version = version;\n   else\n-    minor = version;\n+    *minor_version = version;\n \n-  if (major == 0 && minor == 0)\n-    {\n-      /* We don't found any version string, use default version.  */\n-      *major_version = default_major_version;\n-      *minor_version = default_minor_version;\n-    }\n-  else\n-    {\n-      *major_version = major;\n-      *minor_version = minor;\n-    }\n+  /* We can not find any version in string, need to parse default version.  */\n+  if (use_default_version != NULL\n+      && *major_version == 0\n+      && *minor_version == 0)\n+    *use_default_version = TRUE;\n   return p;\n }\n \n@@ -1118,78 +1111,114 @@ riscv_supported_std_ext (void)\n \n static const char *\n riscv_parse_std_ext (riscv_parse_subset_t *rps,\n-\t\t     const char *march, const char *p)\n+\t\t     const char *march,\n+\t\t     const char *p)\n {\n   const char *all_std_exts = riscv_supported_std_ext ();\n   const char *std_exts = all_std_exts;\n-\n   unsigned major_version = 0;\n   unsigned minor_version = 0;\n   char std_ext = '\\0';\n+  bfd_boolean use_default_version = FALSE;\n \n   /* First letter must start with i, e or g.  */\n   switch (*p)\n     {\n       case 'i':\n-\tp++;\n-\tp = riscv_parsing_subset_version (\n-\t      rps,\n-\t      march,\n-\t      p, &major_version, &minor_version,\n-\t      /* default_major_version= */ 2,\n-\t      /* default_minor_version= */ 0,\n-\t      /* std_ext_p= */TRUE);\n-\triscv_add_subset (rps->subset_list, \"i\", major_version, minor_version);\n+\tp = riscv_parsing_subset_version (rps,\n+\t\t\t\t\t  march,\n+\t\t\t\t\t  ++p,\n+\t\t\t\t\t  &major_version,\n+\t\t\t\t\t  &minor_version,\n+\t\t\t\t\t  /* std_ext_p= */TRUE,\n+\t\t\t\t\t  &use_default_version);\n+\n+\t/* Find the default version if needed.  */\n+\tif (use_default_version\n+\t    && rps->get_default_version != NULL)\n+\t  rps->get_default_version (\"i\",\n+\t\t\t\t    &major_version,\n+\t\t\t\t    &minor_version);\n+\triscv_add_subset (rps->subset_list, \"i\",\n+\t\t\t  major_version, minor_version);\n \tbreak;\n \n       case 'e':\n-\tp++;\n-\tp = riscv_parsing_subset_version (\n-\t      rps,\n-\t      march,\n-\t      p, &major_version, &minor_version,\n-\t      /* default_major_version= */ 1,\n-\t      /* default_minor_version= */ 9,\n-\t      /* std_ext_p= */TRUE);\n-\n-\triscv_add_subset (rps->subset_list, \"e\", major_version, minor_version);\n-\triscv_add_subset (rps->subset_list, \"i\", 2, 0);\n+\tp = riscv_parsing_subset_version (rps,\n+\t\t\t\t\t  march,\n+\t\t\t\t\t  ++p,\n+\t\t\t\t\t  &major_version,\n+\t\t\t\t\t  &minor_version,\n+\t\t\t\t\t  /* std_ext_p= */TRUE,\n+\t\t\t\t\t  &use_default_version);\n+\n+\t/* Find the default version if needed.  */\n+\tif (use_default_version\n+\t    && rps->get_default_version != NULL)\n+\t  rps->get_default_version (\"e\",\n+\t\t\t\t    &major_version,\n+\t\t\t\t    &minor_version);\n+\triscv_add_subset (rps->subset_list, \"e\",\n+\t\t\t  major_version, minor_version);\n+\n+\t/* i-ext must be enabled.  */\n+\tif (rps->get_default_version != NULL)\n+\t  rps->get_default_version (\"i\",\n+\t\t\t\t    &major_version,\n+\t\t\t\t    &minor_version);\n+\triscv_add_subset (rps->subset_list, \"i\",\n+\t\t\t  major_version, minor_version);\n \n \tif (*rps->xlen > 32)\n \t  {\n-\t    rps->error_handler (\"-march=%s: rv%de is not a valid base ISA\",\n-\t\t\t\tmarch, *rps->xlen);\n+\t    rps->error_handler\n+\t      (_(\"-march=%s: rv%de is not a valid base ISA\"),\n+\t       march, *rps->xlen);\n \t    return NULL;\n \t  }\n-\n \tbreak;\n \n       case 'g':\n-\tp++;\n-\tp = riscv_parsing_subset_version (\n-\t      rps,\n-\t      march,\n-\t      p, &major_version, &minor_version,\n-\t      /* default_major_version= */ 2,\n-\t      /* default_minor_version= */ 0,\n-\t      /* std_ext_p= */TRUE);\n-\triscv_add_subset (rps->subset_list, \"i\", major_version, minor_version);\n+\t/* The g-ext shouldn't has the version, so we just\n+\t   skip the setting if user set a version to it.  */\n+\tp = riscv_parsing_subset_version (rps,\n+\t\t\t\t\t  march,\n+\t\t\t\t\t  ++p,\n+\t\t\t\t\t  &major_version,\n+\t\t\t\t\t  &minor_version,\n+\t\t\t\t\t  TRUE,\n+\t\t\t\t\t  &use_default_version);\n+\n+\t/* i-ext must be enabled.  */\n+\tif (rps->get_default_version != NULL)\n+\t  rps->get_default_version (\"i\",\n+\t\t\t\t    &major_version,\n+\t\t\t\t    &minor_version);\n+\triscv_add_subset (rps->subset_list, \"i\",\n+\t\t\t  major_version, minor_version);\n \n \tfor ( ; *std_exts != 'q'; std_exts++)\n \t  {\n \t    const char subset[] = {*std_exts, '\\0'};\n-\t    riscv_add_subset (\n-\t      rps->subset_list, subset, major_version, minor_version);\n+\n+\t    if (rps->get_default_version != NULL)\n+\t      rps->get_default_version (subset,\n+\t\t\t\t\t&major_version,\n+\t\t\t\t\t&minor_version);\n+\t    riscv_add_subset (rps->subset_list, subset,\n+\t\t\t      major_version, minor_version);\n \t  }\n \tbreak;\n \n       default:\n-\trps->error_handler (\n-\t  \"-march=%s: first ISA subset must be `e', `i' or `g'\", march);\n+\trps->error_handler\n+\t  (_(\"-march=%s: first ISA subset must be `e', `i' or `g'\"), march);\n \treturn NULL;\n     }\n \n-  while (*p)\n+  /* The riscv_parsing_subset_version may set `p` to NULL, so I think we should\n+     skip parsing the string if `p` is NULL or value of `p` is `\\0`.  */\n+  while (p != NULL && *p != '\\0')\n     {\n       char subset[2] = {0, 0};\n \n@@ -1210,29 +1239,35 @@ riscv_parse_std_ext (riscv_parse_subset_t *rps,\n       if (std_ext != *std_exts)\n \t{\n \t  if (strchr (all_std_exts, std_ext) == NULL)\n-\t    rps->error_handler (\n-\t      \"-march=%s: unsupported ISA subset `%c'\", march, *p);\n+\t    rps->error_handler\n+\t      (_(\"-march=%s: unsupported ISA subset `%c'\"), march, *p);\n \t  else\n-\t    rps->error_handler (\n-\t      \"-march=%s: ISA string is not in canonical order. `%c'\",\n-\t      march, *p);\n+\t    rps->error_handler\n+\t      (_(\"-march=%s: ISA string is not in canonical order. `%c'\"),\n+\t       march, *p);\n \t  return NULL;\n \t}\n \n       std_exts++;\n \n-      p++;\n-      p = riscv_parsing_subset_version (\n-\t    rps,\n-\t    march,\n-\t    p, &major_version, &minor_version,\n-\t    /* default_major_version= */ 2,\n-\t    /* default_minor_version= */ 0,\n-\t    /* std_ext_p= */TRUE);\n-\n+      use_default_version = FALSE;\n       subset[0] = std_ext;\n-\n-      riscv_add_subset (rps->subset_list, subset, major_version, minor_version);\n+      p = riscv_parsing_subset_version (rps,\n+\t\t\t\t\tmarch,\n+\t\t\t\t\t++p,\n+\t\t\t\t\t&major_version,\n+\t\t\t\t\t&minor_version,\n+\t\t\t\t\tTRUE,\n+\t\t\t\t\t&use_default_version);\n+\n+      /* Find the default version if needed.  */\n+      if (use_default_version\n+\t  && rps->get_default_version != NULL)\n+\trps->get_default_version (subset,\n+\t\t\t\t  &major_version,\n+\t\t\t\t  &minor_version);\n+      riscv_add_subset (rps->subset_list, subset,\n+\t\t\tmajor_version, minor_version);\n     }\n   return p;\n }\n@@ -1272,9 +1307,10 @@ typedef struct riscv_parse_config\n } riscv_parse_config_t;\n \n /* Parse a generic prefixed extension.\n-   march: The full architecture string as passed in by \"-march=...\".\n-   p: Point from which to start parsing the -march string.\n-   config: What class of extensions to parse, predicate funcs,\n+   `rps`: Hooks and status for parsing subset.\n+   `march`: The full architecture string as passed in by \"-march=...\".\n+   `p`: Point from which to start parsing the -march string.\n+   `config`: What class of extensions to parse, predicate funcs,\n    and strings to use in error reporting.  */\n \n static const char *\n@@ -1287,6 +1323,7 @@ riscv_parse_prefixed_ext (riscv_parse_subset_t *rps,\n   unsigned minor_version = 0;\n   const char *last_name;\n   riscv_isa_ext_class_t class;\n+  bfd_boolean use_default_version;\n \n   while (*p)\n     {\n@@ -1309,15 +1346,11 @@ riscv_parse_prefixed_ext (riscv_parse_subset_t *rps,\n       while (*++q != '\\0' && *q != '_' && !ISDIGIT (*q))\n \t;\n \n+      use_default_version = FALSE;\n       end_of_version =\n-\triscv_parsing_subset_version (\n-\t  rps,\n-\t  march,\n-\t  q, &major_version, &minor_version,\n-\t  /* default_major_version= */ 2,\n-\t  /* default_minor_version= */ 0,\n-\t  /* std_ext_p= */FALSE);\n-\n+\triscv_parsing_subset_version (rps, march, q, &major_version,\n+\t\t\t\t      &minor_version, FALSE,\n+\t\t\t\t      &use_default_version);\n       *q = '\\0';\n \n       /* Check that the name is valid.\n@@ -1329,19 +1362,19 @@ riscv_parse_prefixed_ext (riscv_parse_subset_t *rps,\n       if (!config->ext_valid_p (subset))\n \t{\n \t  rps->error_handler\n-\t    (\"-march=%s: Invalid or unknown %s ISA extension: '%s'\",\n+\t    (_(\"-march=%s: Invalid or unknown %s ISA extension: '%s'\"),\n \t     march, config->prefix, subset);\n \t  free (subset);\n \t  return NULL;\n \t}\n \n       /* Check that the last item is not the same as this.  */\n       last_name = rps->subset_list->tail->name;\n-\n       if (!strcasecmp (last_name, subset))\n \t{\n-\t  rps->error_handler (\"-march=%s: Duplicate %s ISA extension: \\'%s\\'\",\n-\t\t\t      march, config->prefix, subset);\n+\t  rps->error_handler\n+\t    (_(\"-march=%s: Duplicate %s ISA extension: \\'%s\\'\"),\n+\t     march, config->prefix, subset);\n \t  free (subset);\n \t  return NULL;\n \t}\n@@ -1350,20 +1383,29 @@ riscv_parse_prefixed_ext (riscv_parse_subset_t *rps,\n       if (!strncasecmp (last_name, config->prefix, 1)\n \t  && strcasecmp (last_name, subset) > 0)\n \t{\n-\t  rps->error_handler (\"-march=%s: %s ISA extension not in alphabetical \"\n-\t\t\t      \"order: \\'%s\\' must come before \\'%s\\'.\",\n-\t\t\t      march, config->prefix, subset, last_name);\n+\t  rps->error_handler\n+\t    (_(\"\\\n+-march=%s: %s ISA extension not in alphabetical order: \\'%s\\' must come before \\'%s\\'.\"),\n+\t     march, config->prefix, subset, last_name);\n \t  free (subset);\n \t  return NULL;\n \t}\n \n-      riscv_add_subset (rps->subset_list, subset, major_version, minor_version);\n+      /* Find the default version if needed.  */\n+      if (use_default_version\n+         && rps->get_default_version != NULL)\n+       rps->get_default_version (subset,\n+                                 &major_version,\n+                                 &minor_version);\n+      riscv_add_subset (rps->subset_list, subset,\n+                       major_version, minor_version);\n+\n       free (subset);\n       p += end_of_version - subset;\n \n       if (*p != '\\0' && *p != '_')\n \t{\n-\t  rps->error_handler (\"-march=%s: %s must separate with _\",\n+\t  rps->error_handler (_(\"-march=%s: %s must separate with _\"),\n \t\t\t      march, config->prefix);\n \t  return NULL;\n \t}\n@@ -1384,7 +1426,7 @@ riscv_parse_prefixed_ext (riscv_parse_subset_t *rps,\n \n static const char * const riscv_std_z_ext_strtab[] =\n   {\n-    NULL\n+    \"zicsr\", NULL\n   };\n \n /* Same as `riscv_std_z_ext_strtab', but for S-class extensions.  */\n@@ -1478,8 +1520,9 @@ riscv_parse_subset (riscv_parse_subset_t *rps,\n     }\n   else\n     {\n-      rps->error_handler (\"-march=%s: ISA string must begin with rv32 or rv64\",\n-\t\t\t  arch);\n+      rps->error_handler\n+\t(_(\"-march=%s: ISA string must begin with rv32 or rv64\"),\n+\t arch);\n       return FALSE;\n     }\n \n@@ -1490,7 +1533,6 @@ riscv_parse_subset (riscv_parse_subset_t *rps,\n     return FALSE;\n \n   /* Parse the different classes of extensions in the specified order.  */\n-\n   for (i = 0; i < ARRAY_SIZE (parse_config); ++i) {\n     p = riscv_parse_prefixed_ext (rps, arch, p, &parse_config[i]);\n \n@@ -1500,39 +1542,43 @@ riscv_parse_subset (riscv_parse_subset_t *rps,\n \n   if (*p != '\\0')\n     {\n-      rps->error_handler (\"-march=%s: unexpected ISA string at end: %s\",\n+      rps->error_handler (_(\"-march=%s: unexpected ISA string at end: %s\"),\n \t\t\t  arch, p);\n       return FALSE;\n     }\n \n   if (riscv_lookup_subset (rps->subset_list, \"e\")\n       && riscv_lookup_subset (rps->subset_list, \"f\"))\n     {\n-      rps->error_handler (\"-march=%s: rv32e does not support the `f' extension\",\n-\t\t\t  arch);\n+      rps->error_handler\n+\t(_(\"-march=%s: rv32e does not support the `f' extension\"),\n+\t arch);\n       return FALSE;\n     }\n \n   if (riscv_lookup_subset (rps->subset_list, \"d\")\n       && !riscv_lookup_subset (rps->subset_list, \"f\"))\n     {\n-      rps->error_handler (\"-march=%s: `d' extension requires `f' extension\",\n-\t\t\t  arch);\n+      rps->error_handler\n+\t(_(\"-march=%s: `d' extension requires `f' extension\"),\n+\t arch);\n       return FALSE;\n     }\n \n   if (riscv_lookup_subset (rps->subset_list, \"q\")\n       && !riscv_lookup_subset (rps->subset_list, \"d\"))\n     {\n-      rps->error_handler (\"-march=%s: `q' extension requires `d' extension\",\n-\t\t\t  arch);\n+      rps->error_handler\n+\t(_(\"-march=%s: `q' extension requires `d' extension\"),\n+\t arch);\n       return FALSE;\n     }\n \n   if (riscv_lookup_subset (rps->subset_list, \"q\") && *rps->xlen < 64)\n     {\n-      rps->error_handler (\"-march=%s: rv32 does not support the `q' extension\",\n-\t\t\t  arch);\n+      rps->error_handler\n+\t(_(\"-march=%s: rv32 does not support the `q' extension\"),\n+\t arch);\n       return FALSE;\n     }\n   return TRUE;\n@@ -1543,7 +1589,8 @@ riscv_parse_subset (riscv_parse_subset_t *rps,\n void\n riscv_add_subset (riscv_subset_list_t *subset_list,\n \t\t  const char *subset,\n-\t\t  int major, int minor)\n+\t\t  int major,\n+\t\t  int minor)\n {\n   riscv_subset_t *s = xmalloc (sizeof *s);\n \n@@ -1567,10 +1614,10 @@ riscv_subset_t *\n riscv_lookup_subset (const riscv_subset_list_t *subset_list,\n \t\t     const char *subset)\n {\n-  return riscv_lookup_subset_version (\n-\t   subset_list, subset,\n-\t   RISCV_DONT_CARE_VERSION,\n-\t   RISCV_DONT_CARE_VERSION);\n+  return riscv_lookup_subset_version\n+    (subset_list, subset,\n+     RISCV_DONT_CARE_VERSION,\n+     RISCV_DONT_CARE_VERSION);\n }\n \n /* Find subset in list with version checking, return NULL if not found.  */\n@@ -1617,7 +1664,7 @@ riscv_release_subset_list (riscv_subset_list_t *subset_list)\n \n /* Return the number of digits for the input.  */\n \n-static size_t\n+size_t\n riscv_estimate_digit (unsigned num)\n {\n   size_t digit = 0;"
    },
    {
      "sha": "7b8f09b82c4b11a2986ff958f4c839203369b561",
      "filename": "bfd/elfxx-riscv.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/elfxx-riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/elfxx-riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.h?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -72,6 +72,9 @@ typedef struct {\n   void (*error_handler) (const char *,\n \t\t\t ...) ATTRIBUTE_PRINTF_1;\n   unsigned *xlen;\n+  void (*get_default_version) (const char *,\n+                              unsigned int *,\n+                              unsigned int *);\n } riscv_parse_subset_t;\n \n extern bfd_boolean\n@@ -87,6 +90,9 @@ riscv_release_subset_list (riscv_subset_list_t *);\n extern char *\n riscv_arch_str (unsigned, const riscv_subset_list_t *);\n \n+extern size_t\n+riscv_estimate_digit (unsigned);\n+\n /* ISA extension name class. E.g. \"zbb\" corresponds to RV_ISA_CLASS_Z,\n    \"xargs\" corresponds to RV_ISA_CLASS_X, etc.  Order is important\n    here.  */"
    },
    {
      "sha": "3b4f0afba351327392df56b10d8395b9ba01ede6",
      "filename": "bfd/po/bfd.pot",
      "status": "modified",
      "additions": 1660,
      "deletions": 1455,
      "changes": 3115,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/po/bfd.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/bfd/po/bfd.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/po/bfd.pot?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6"
    },
    {
      "sha": "2b903512bf56381e0560ba5c1444757e278d50df",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,7 @@\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* dwarf.c: Updated since DECLARE_CSR is changed.\n+\n 2020-05-19  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR binutils/25809"
    },
    {
      "sha": "598f8562abf2bee8b8a9240ec3cf118f6ba12fc2",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -7409,7 +7409,8 @@ regname_internal_riscv (unsigned int regno)\n \t document.  */\n       switch (regno)\n \t{\n-#define DECLARE_CSR(NAME,VALUE,CLASS) case VALUE + 4096: name = #NAME; break;\n+#define DECLARE_CSR(NAME,VALUE,CLASS,DEFINE_VER,ABORT_VER) \\\n+  case VALUE + 4096: name = #NAME; break;\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n "
    },
    {
      "sha": "05ba3e9ce6dafba8f47f4f5b965d491d93f376a9",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 163,
      "deletions": 0,
      "changes": 163,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,166 @@\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* testsuite/gas/riscv/priv-reg-fail-read-only-01.s: Updated.\n+\t* config/tc-riscv.c (default_arch_with_ext, default_isa_spec):\n+\tStatic variables which are used to set the ISA extensions. You can\n+\tuse -march (or ELF build attributes) and -misa-spec to set them,\n+\trespectively.\n+\t(ext_version_hash): The hash table used to handle the extensions\n+\twith versions.\n+\t(init_ext_version_hash): Initialize the ext_version_hash according\n+\tto riscv_ext_version_table.\n+\t(riscv_get_default_ext_version): The callback function of\n+\triscv_parse_subset_t.  According to the choosed ISA spec,\n+\tget the default version for the specific extension.\n+\t(riscv_set_arch): Set the callback function.\n+\t(enum options, struct option md_longopts): Add new option -misa-spec.\n+\t(md_parse_option): Do not call riscv_set_arch for -march.  We will\n+\tcall it later in riscv_after_parse_args.  Call riscv_get_isa_spec_class\n+\tto set default_isa_spec class.\n+\t(riscv_after_parse_args): Call init_ext_version_hash to initialize the\n+\text_version_hash, and then call riscv_set_arch to set the architecture\n+\twith versions according to default_arch_with_ext.\n+\t* testsuite/gas/riscv/attribute-02.d: Set 0p0 as default version for\n+\tx extensions.\n+\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-09.d: New testcase.  For i-ext, we\n+\talready set it's version to 2p1 by march, so no need to use the default\n+\t2p2 version.  For m-ext, we do not set the version by -march and ELF arch\n+\tattribute, so set the default 2p0 to it.  For zicsr, it is not defined in\n+\tISA spec 2p2, so set 0p0 to it.\n+\t* testsuite/gas/riscv/attribute-10.d: New testcase.  The version of\n+\tzicsr is 2p0 according to ISA spec 20191213.\n+\t* config/tc-riscv.c (DEFAULT_RISCV_ARCH_WITH_EXT)\n+\t(DEFAULT_RISCV_ISA_SPEC): Default configure option settings.\n+\tYou can set them by configure options --with-arch and\n+\t--with-isa-spec, respectively.\n+\t(riscv_set_default_isa_spec): New function used to set the\n+\tdefault ISA spec.\n+\t(md_parse_option): Call riscv_set_default_isa_spec rather than\n+\tcall riscv_get_isa_spec_class directly.\n+\t(riscv_after_parse_args): If the -isa-spec is not set, then we\n+\tset the default ISA spec according to DEFAULT_RISCV_ISA_SPEC by\n+\tcalling riscv_set_default_isa_spec.\n+\t* testsuite/gas/riscv/attribute-01.d: Add -misa-spec=2.2, since\n+\tthe --with-isa-spec may be set to different ISA spec.\n+\t* testsuite/gas/riscv/attribute-02.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-04.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-05.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-06.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-07.d: Likewise.\n+\t* configure.ac: Add configure options, --with-arch and\n+\t--with-isa-spec.\n+\t* configure: Regenerated.\n+\t* config.in: Regenerated.\n+\t* config/tc-riscv.c (default_priv_spec): Static variable which is\n+\tused to check if the CSR is valid for the chosen privilege spec. You\n+\tcan use -mpriv-spec to set it.\n+\t(enum reg_class): We now get the CSR address from csr_extra_hash rather\n+\tthan reg_names_hash.  Therefore, move RCLASS_CSR behind RCLASS_MAX.\n+\t(riscv_init_csr_hashes): Only need to initialize one hash table\n+\tcsr_extra_hash.\n+\t(riscv_csr_class_check): Change the return type to void.  Don't check\n+\tthe ISA dependency if -mcsr-check isn't set.\n+\t(riscv_csr_version_check): New function.  Check and find the CSR address\n+\tfrom csr_extra_hash, according to default_priv_spec.  Report warning\n+\tfor the invalid CSR if -mcsr-check is set.\n+\t(reg_csr_lookup_internal): Updated.\n+\t(reg_lookup_internal): Likewise.\n+\t(md_begin): Updated since DECLARE_CSR and DECLARE_CSR_ALIAS are changed.\n+\t(enum options, struct option md_longopts): Add new GAS option -mpriv-spec.\n+\t(md_parse_option): Call riscv_set_default_priv_version to set\n+\tdefault_priv_spec.\n+\t(riscv_after_parse_args): If -mpriv-spec isn't set, then set the default\n+\tprivilege spec to the newest one.\n+\t(enum riscv_csr_class, struct riscv_csr_extra): Move them to\n+\tinclude/opcode/riscv.h.\n+\t* testsuite/gas/riscv/priv-reg-fail-fext.d: This test case just want\n+\tto check the ISA dependency for CSR, so fix the spec version by adding\n+\t-mpriv-spec=1.11.\n+\t* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.  There are some\n+\tversion warnings for the test case.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d: New test case.\n+\tCheck whether the CSR is valid when privilege version 1.9 is choosed.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: New test case.\n+\tCheck whether the CSR is valid when privilege version 1.9.1 is choosed.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d: New test case.\n+\tCheck whether the CSR is valid when privilege version 1.10 is choosed.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l: Likewise.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d: New test case.\n+\tCheck whether the CSR is valid when privilege version 1.11 is choosed.\n+\t* gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l: Likewise.\n+\t* config/tc-riscv.c (DEFAULT_RISCV_ISA_SPEC): Default configure option\n+\tsetting.  You can set it by configure option --with-priv-spec.\n+\t(riscv_set_default_priv_spec): New function used to set the default\n+\tprivilege spec.\n+\t(md_parse_option): Call riscv_set_default_priv_spec rather than\n+\tcall riscv_get_priv_spec_class directly.\n+\t(riscv_after_parse_args): If -mpriv-spec isn't set, then we set the\n+\tdefault privilege spec according to DEFAULT_RISCV_PRIV_SPEC by\n+\tcalling riscv_set_default_priv_spec.\n+\t* testsuite/gas/riscv/csr-dw-regnums.d: Add -mpriv-spec=1.11, since\n+\tthe --with-priv-spec may be set to different privilege spec.\n+\t* testsuite/gas/riscv/priv-reg.d: Likewise.\n+\t* configure.ac: Add configure option --with-priv-spec.\n+\t* configure: Regenerated.\n+\t* config.in: Regenerated.\n+\t* config/tc-riscv.c (explicit_attr): Rename explicit_arch_attr to\n+\texplicit_attr.  Set it to TRUE if any ELF attribute is found.\n+\t(riscv_set_default_priv_spec): Try to set the default_priv_spec if\n+\tthe priv attributes are set.\n+\t(md_assemble): Set the default_priv_spec according to the priv\n+\tattributes when we start to assemble instruction.\n+\t(riscv_write_out_attrs): Rename riscv_write_out_arch_attr to\n+\triscv_write_out_attrs.  Update the arch and priv attributes.  If we\n+\tdon't set the corresponding ELF attributes, then try to output the\n+\tdefault ones.\n+\t(riscv_set_public_attributes): If any ELF attribute or -march-attr\n+\toptions is set (explicit_attr is TRUE), then call riscv_write_out_attrs\n+\tto update the arch and priv attributes.\n+\t(s_riscv_attribute): Make sure all arch and priv attributes are set\n+\tbefore any instruction.\n+\t* testsuite/gas/riscv/attribute-01.d: Update the priv attributes if any\n+\tELF attribute or -march-attr is set.  If the priv attributes are not\n+\tset, then try to update them by the default setting (-mpriv-spec or\n+\t--with-priv-spec).\n+\t* testsuite/gas/riscv/attribute-02.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-03.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-04.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-06.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-07.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-08.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-09.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-10.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-unknown.d: Likewise.\n+\t* testsuite/gas/riscv/attribute-05.d: Likewise.  Also, the priv spec\n+\tset by priv attributes must be supported.\n+\t* testsuite/gas/riscv/attribute-05.s: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p9.d: Likewise.  Updated\n+\tpriv attributes according to the -mpriv-spec option.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p10.d: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-version-1p11.d: Likewise.\n+\t* testsuite/gas/riscv/priv-reg.d: Removed.\n+\t* testsuite/gas/riscv/priv-reg-version-1p9.d: New test case.  Dump the\n+\tCSR according to the priv spec 1.9.\n+\t* testsuite/gas/riscv/priv-reg-version-1p9p1.d: New test case.  Dump the\n+\tCSR according to the priv spec 1.9.1.\n+\t* testsuite/gas/riscv/priv-reg-version-1p10.d: New test case.  Dump the\n+\tCSR according to the priv spec 1.10.\n+\t* testsuite/gas/riscv/priv-reg-version-1p11.d: New test case.  Dump the\n+\tCSR according to the priv spec 1.11.\n+\t* config/tc-riscv.c (md_show_usage): Add descriptions about\n+\tthe new GAS options.\n+\t* doc/c-riscv.texi: Likewise.\n+\n 2020-05-19  Peter Bergner  <bergner@linux.ibm.com>\n \n \t* testsuite/gas/ppc/power9.s <dcbf, dcbfl, dcbflp>: Add tests."
    },
    {
      "sha": "bd125047d56585d712aab9a8c85bc21f28dc1371",
      "filename": "gas/config.in",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config.in?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -53,9 +53,18 @@\n /* Define to 1 if you want to fix Loongson3 LLSC Errata by default. */\n #undef DEFAULT_MIPS_FIX_LOONGSON3_LLSC\n \n+/* Define default value for RISC-V -march. */\n+#undef DEFAULT_RISCV_ARCH_WITH_EXT\n+\n /* Define to 1 if you want to generate RISC-V arch attribute by default. */\n #undef DEFAULT_RISCV_ATTR\n \n+/* Define default value for RISC-V -misa-spec. */\n+#undef DEFAULT_RISCV_ISA_SPEC\n+\n+/* Define default value for RISC-V -mpriv-spec */\n+#undef DEFAULT_RISCV_PRIV_SPEC\n+\n /* Define to 1 if you want to generate GNU x86 used ISA and feature properties\n    by default. */\n #undef DEFAULT_X86_USED_NOTE"
    },
    {
      "sha": "04df0884f372fc9f8bd7b3c286a9777c9a4e8474",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 425,
      "deletions": 89,
      "changes": 514,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -63,7 +63,30 @@ struct riscv_cl_insn\n #define DEFAULT_RISCV_ATTR 0\n #endif\n \n+/* Let riscv_after_parse_args set the default value according to xlen.  */\n+\n+#ifndef DEFAULT_RISCV_ARCH_WITH_EXT\n+#define DEFAULT_RISCV_ARCH_WITH_EXT NULL\n+#endif\n+\n+/* The default ISA spec is set to 2.2 rather than the lastest version.\n+   The reason is that compiler generates the ISA string with fixed 2p0\n+   verisons only for the RISCV ELF architecture attributes, but not for\n+   the -march option.  Therefore, we should update the compiler or linker\n+   to resolve this problem.  */\n+\n+#ifndef DEFAULT_RISCV_ISA_SPEC\n+#define DEFAULT_RISCV_ISA_SPEC \"2.2\"\n+#endif\n+\n+#ifndef DEFAULT_RISCV_PRIV_SPEC\n+#define DEFAULT_RISCV_PRIV_SPEC \"1.11\"\n+#endif\n+\n static const char default_arch[] = DEFAULT_ARCH;\n+static const char *default_arch_with_ext = DEFAULT_RISCV_ARCH_WITH_EXT;\n+static enum riscv_isa_spec_class default_isa_spec = ISA_SPEC_CLASS_NONE;\n+static enum riscv_priv_spec_class default_priv_spec = PRIV_SPEC_CLASS_NONE;\n \n static unsigned xlen = 0; /* width of an x-register */\n static unsigned abi_xlen = 0; /* width of a pointer in the ABI */\n@@ -74,6 +97,95 @@ static bfd_boolean rve_abi = FALSE;\n \n static unsigned elf_flags = 0;\n \n+/* Set the default_isa_spec.  Return 0 if the input spec string isn't\n+   supported.  Otherwise, return 1.  */\n+\n+static int\n+riscv_set_default_isa_spec (const char *s)\n+{\n+  enum riscv_isa_spec_class class;\n+  if (!riscv_get_isa_spec_class (s, &class))\n+    {\n+      as_bad (\"Unknown default ISA spec `%s' set by \"\n+             \"-misa-spec or --with-isa-spec\", s);\n+      return 0;\n+    }\n+  else\n+    default_isa_spec = class;\n+  return 1;\n+}\n+\n+/* Set the default_priv_spec, assembler will find the suitable CSR address\n+   according to default_priv_spec.  We will try to check priv attributes if\n+   the input string is NULL.  Return 0 if the input priv spec string isn't\n+   supported.  Otherwise, return 1.  */\n+\n+static int\n+riscv_set_default_priv_spec (const char *s)\n+{\n+  enum riscv_priv_spec_class class;\n+  unsigned major, minor, revision;\n+  obj_attribute *attr;\n+  size_t buf_size;\n+  char *buf;\n+\n+  /* Find the corresponding priv spec class.  */\n+  if (riscv_get_priv_spec_class (s, &class))\n+    {\n+      default_priv_spec = class;\n+      return 1;\n+    }\n+\n+  if (s != NULL)\n+    {\n+      as_bad (_(\"Unknown default privilege spec `%s' set by \"\n+               \"-mpriv-spec or --with-priv-spec\"), s);\n+      return 0;\n+    }\n+\n+  /* Try to set the default_priv_spec according to the priv attributes.  */\n+  attr = elf_known_obj_attributes_proc (stdoutput);\n+  major = (unsigned) attr[Tag_RISCV_priv_spec].i;\n+  minor = (unsigned) attr[Tag_RISCV_priv_spec_minor].i;\n+  revision = (unsigned) attr[Tag_RISCV_priv_spec_revision].i;\n+\n+  /* The priv attributes setting 0.0.0 is meaningless.  We should have set\n+     the default_priv_spec by md_parse_option and riscv_after_parse_args,\n+     so just skip the following setting.  */\n+  if (major == 0 && minor == 0 && revision == 0)\n+    return 1;\n+\n+  buf_size = riscv_estimate_digit (major)\n+            + 1 /* '.' */\n+            + riscv_estimate_digit (minor)\n+            + 1; /* string terminator */\n+  if (revision != 0)\n+    {\n+      buf_size += 1 /* '.' */\n+                 + riscv_estimate_digit (revision);\n+      buf = xmalloc (buf_size);\n+      snprintf (buf, buf_size, \"%d.%d.%d\", major, minor, revision);\n+    }\n+  else\n+    {\n+      buf = xmalloc (buf_size);\n+      snprintf (buf, buf_size, \"%d.%d\", major, minor);\n+    }\n+\n+  if (riscv_get_priv_spec_class (buf, &class))\n+    {\n+      default_priv_spec = class;\n+      free (buf);\n+      return 1;\n+    }\n+\n+  /* Still can not find the priv spec class.  */\n+  as_bad (_(\"Unknown default privilege spec `%d.%d.%d' set by  \"\n+           \"privilege attributes\"),  major, minor, revision);\n+  free (buf);\n+  return 0;\n+}\n+\n /* This is the set of options which the .option pseudo-op may modify.  */\n \n struct riscv_set_options\n@@ -147,6 +259,67 @@ riscv_multi_subset_supports (enum riscv_insn_class insn_class)\n     }\n }\n \n+/* Handle of the extension with version hash table.  */\n+static struct hash_control *ext_version_hash = NULL;\n+\n+static struct hash_control *\n+init_ext_version_hash (const struct riscv_ext_version *table)\n+{\n+  int i = 0;\n+  struct hash_control *hash = hash_new ();\n+\n+  while (table[i].name)\n+    {\n+      const char *name = table[i].name;\n+      const char *hash_error =\n+       hash_insert (hash, name, (void *) &table[i]);\n+\n+      if (hash_error != NULL)\n+       {\n+         fprintf (stderr, _(\"internal error: can't hash `%s': %s\\n\"),\n+                  table[i].name, hash_error);\n+         /* Probably a memory allocation problem?  Give up now.  */\n+         as_fatal (_(\"Broken assembler.  No assembly attempted.\"));\n+         return NULL;\n+       }\n+\n+      i++;\n+      while (table[i].name\n+            && strcmp (table[i].name, name) == 0)\n+       i++;\n+    }\n+\n+  return hash;\n+}\n+\n+static void\n+riscv_get_default_ext_version (const char *name,\n+                              unsigned int *major_version,\n+                              unsigned int *minor_version)\n+{\n+  struct riscv_ext_version *ext;\n+\n+  *major_version = 0;\n+  *minor_version = 0;\n+\n+  if (name == NULL || default_isa_spec == ISA_SPEC_CLASS_NONE)\n+    return;\n+\n+  ext = (struct riscv_ext_version *) hash_find (ext_version_hash, name);\n+  while (ext\n+        && ext->name\n+        && strcmp (ext->name, name) == 0)\n+    {\n+      if (ext->isa_spec_class == default_isa_spec)\n+       {\n+         *major_version = ext->major_version;\n+         *minor_version = ext->minor_version;\n+         return;\n+       }\n+      ext++;\n+    }\n+}\n+\n /* Set which ISA and extensions are available.  */\n \n static void\n@@ -156,6 +329,10 @@ riscv_set_arch (const char *s)\n   rps.subset_list = &riscv_subsets;\n   rps.error_handler = as_fatal;\n   rps.xlen = &xlen;\n+  rps.get_default_version = riscv_get_default_ext_version;\n+\n+  if (s == NULL)\n+    return;\n \n   riscv_release_subset_list (&riscv_subsets);\n   riscv_parse_subset (&rps, s);\n@@ -194,8 +371,8 @@ const char FLT_CHARS[] = \"rRsSfFdDxXpP\";\n /* Indicate we are already assemble any instructions or not.  */\n static bfd_boolean start_assemble = FALSE;\n \n-/* Indicate arch attribute is explictly set.  */\n-static bfd_boolean explicit_arch_attr = FALSE;\n+/* Indicate ELF attributes are explictly set.  */\n+static bfd_boolean explicit_attr = FALSE;\n \n /* Macros for encoding relaxation state for RVC branches and far jumps.  */\n #define RELAX_BRANCH_ENCODE(uncond, rvc, length)\t\\\n@@ -452,8 +629,9 @@ enum reg_class\n {\n   RCLASS_GPR,\n   RCLASS_FPR,\n-  RCLASS_CSR,\n-  RCLASS_MAX\n+  RCLASS_MAX,\n+\n+  RCLASS_CSR\n };\n \n static struct hash_control *reg_names_hash = NULL;\n@@ -483,102 +661,165 @@ hash_reg_names (enum reg_class class, const char * const names[], unsigned n)\n     hash_reg_name (class, names[i], i);\n }\n \n-/* All RISC-V CSRs belong to one of these classes.  */\n-\n-enum riscv_csr_class\n-{\n-  CSR_CLASS_NONE,\n-\n-  CSR_CLASS_I,\n-  CSR_CLASS_I_32,\t/* rv32 only */\n-  CSR_CLASS_F,\t\t/* f-ext only */\n-};\n-\n-/* This structure holds all restricted conditions for a CSR.  */\n+/* Init hash table csr_extra_hash to handle CSR.  */\n+static void\n+riscv_init_csr_hash (const char *name,\n+                    unsigned address,\n+                    enum riscv_csr_class class,\n+                    enum riscv_priv_spec_class define_version,\n+                    enum riscv_priv_spec_class abort_version)\n+{\n+  struct riscv_csr_extra *entry, *pre_entry;\n+  const char *hash_error = NULL;\n+  bfd_boolean need_enrty = TRUE;\n+\n+  pre_entry = NULL;\n+  entry = (struct riscv_csr_extra *) hash_find (csr_extra_hash, name);\n+  while (need_enrty && entry != NULL)\n+    {\n+      if (entry->csr_class == class\n+         && entry->address == address\n+         && entry->define_version == define_version\n+         && entry->abort_version == abort_version)\n+       need_enrty = FALSE;\n+      pre_entry = entry;\n+      entry = entry->next;\n+    }\n+ \n+  /* Duplicate setting for the CSR, just return and do nothing.  */\n+  if (!need_enrty)\n+    return;\n \n-struct riscv_csr_extra\n-{\n-  /* Class to which this CSR belongs.  Used to decide whether or\n-     not this CSR is legal in the current -march context.  */\n-  enum riscv_csr_class csr_class;\n-};\n+  entry = XNEW (struct riscv_csr_extra);\n+  entry->csr_class = class;\n+  entry->address = address;\n+  entry->define_version = define_version;\n+  entry->abort_version = abort_version;\n+\n+  /* If the CSR hasn't been inserted in the hash table, then insert it.\n+     Otherwise, attach the extra information to the entry which is already\n+     in the hash table.  */\n+  if (pre_entry == NULL)\n+    {\n+      hash_error = hash_insert (csr_extra_hash, name, (void *) entry);\n+      if (hash_error != NULL)\n+       {\n+         fprintf (stderr, _(\"internal error: can't hash `%s': %s\\n\"),\n+                  name, hash_error);\n+         /* Probably a memory allocation problem?  Give up now.  */\n+         as_fatal (_(\"Broken assembler.  No assembly attempted.\"));\n+       }\n+    }\n+  else\n+    pre_entry->next = entry;\n+}\n \n-/* Init two hashes, csr_extra_hash and reg_names_hash, for CSR.  */\n+/* Check wether the CSR is valid according to the ISA.  */\n \n static void\n-riscv_init_csr_hashes (const char *name,\n-\t\t       unsigned address,\n-\t\t       enum riscv_csr_class class)\n+riscv_csr_class_check (const char *s,\n+\t\t       enum riscv_csr_class csr_class)\n {\n-  struct riscv_csr_extra *entry = XNEW (struct riscv_csr_extra);\n-  entry->csr_class = class;\n+  bfd_boolean result = TRUE;\n+\n+  /* Don't check the ISA dependency when -mcsr-check isn't set.  */\n+  if (!riscv_opts.csr_check)\n+    return;\n \n-  const char *hash_error =\n-    hash_insert (csr_extra_hash, name, (void *) entry);\n-  if (hash_error != NULL)\n+  switch (csr_class)\n     {\n-      fprintf (stderr, _(\"internal error: can't hash `%s': %s\\n\"),\n-\t\t      name, hash_error);\n-      /* Probably a memory allocation problem?  Give up now.  */\n-\tas_fatal (_(\"Broken assembler.  No assembly attempted.\"));\n+    case CSR_CLASS_I:\n+      result = riscv_subset_supports (\"i\");\n+      break;\n+    case CSR_CLASS_F:\n+      result = riscv_subset_supports (\"f\");\n+      break;\n+    case CSR_CLASS_I_32:\n+      result = (xlen == 32 && riscv_subset_supports (\"i\"));\n+      break;\n+    default:\n+      as_bad (_(\"internal: bad RISC-V CSR class (0x%x)\"), csr_class);\n     }\n \n-  hash_reg_name (RCLASS_CSR, name, address);\n+  if (!result)\n+    as_warn (_(\"Invalid CSR `%s' for the current ISA\"), s);\n }\n \n-/* Check wether the CSR is valid according to the ISA.  */\n+/* Check and find the CSR address according to the privilege spec version.  */\n \n-static bfd_boolean\n-riscv_csr_class_check (enum riscv_csr_class csr_class)\n+static void\n+riscv_csr_version_check (const char *csr_name,\n+\t\t\t struct riscv_csr_extra **entryP)\n {\n-  switch (csr_class)\n+  struct riscv_csr_extra *entry = *entryP;\n+\n+  while (entry != NULL)\n     {\n-    case CSR_CLASS_I: return riscv_subset_supports (\"i\");\n-    case CSR_CLASS_F: return riscv_subset_supports (\"f\");\n-    case CSR_CLASS_I_32:\n-      return (xlen == 32 && riscv_subset_supports (\"i\"));\n+      if (default_priv_spec >= entry->define_version\n+\t  && default_priv_spec < entry->abort_version)\n+       {\n+         /* Find the suitable CSR according to the specific version.  */\n+         *entryP = entry;\n+         return;\n+       }\n+      entry = entry->next;\n+    }\n \n-    default:\n-      return FALSE;\n+  /* We can not find the suitable CSR address according to the privilege\n+     version.  Therefore, we use the last defined value.  Report the warning\n+     only when the -mcsr-check is set.  Enable the -mcsr-check is recommended,\n+     otherwise, you may get the unexpected CSR address.  */\n+  if (riscv_opts.csr_check)\n+    {\n+      const char *priv_name = riscv_get_priv_spec_name (default_priv_spec);\n+\n+      if (priv_name != NULL)\n+\tas_warn (_(\"Invalid CSR `%s' for the privilege spec `%s'\"),\n+\t\t csr_name, priv_name);\n     }\n }\n \n-/* If the CSR is defined, then we call `riscv_csr_class_check` to do the\n-   further checking.  Return FALSE if the CSR is not defined.  Otherwise,\n-   return TRUE.  */\n+/* Once the CSR is defined, including the old privilege spec, then we call\n+   riscv_csr_class_check and riscv_csr_version_check to do the further checking\n+   and get the corresponding address.  Return -1 if the CSR is never been\n+   defined.  Otherwise, return the address.  */\n \n-static bfd_boolean\n+static unsigned int\n reg_csr_lookup_internal (const char *s)\n {\n   struct riscv_csr_extra *r =\n     (struct riscv_csr_extra *) hash_find (csr_extra_hash, s);\n \n   if (r == NULL)\n-    return FALSE;\n+    return -1U;\n \n-  /* We just report the warning when the CSR is invalid.  */\n-  if (!riscv_csr_class_check (r->csr_class))\n-    as_warn (_(\"Invalid CSR `%s' for the current ISA\"), s);\n+  /* We just report the warning when the CSR is invalid.  \"Invalid CSR\" means\n+     the CSR was defined, but isn't allowed for the current ISA setting or\n+     the privilege spec.  If the CSR is never been defined, then assembler\n+     will regard it as a \"Unknown CSR\" and report error.  If user use number\n+     to set the CSR, but over the range (> 0xfff), then assembler will report\n+     \"Improper CSR\" error for it.  */\n+  riscv_csr_class_check (s, r->csr_class);\n+  riscv_csr_version_check (s, &r);\n \n-  return TRUE;\n+  return r->address;\n }\n \n static unsigned int\n reg_lookup_internal (const char *s, enum reg_class class)\n {\n-  void *r = hash_find (reg_names_hash, s);\n+  void *r;\n+\n+  if (class == RCLASS_CSR)\n+    return reg_csr_lookup_internal (s);\n \n+  r = hash_find (reg_names_hash, s);\n   if (r == NULL || DECODE_REG_CLASS (r) != class)\n     return -1;\n \n   if (riscv_opts.rve && class == RCLASS_GPR && DECODE_REG_NUM (r) > 15)\n     return -1;\n \n-  if (class == RCLASS_CSR\n-      && riscv_opts.csr_check\n-      && !reg_csr_lookup_internal (s))\n-    return -1;\n-\n   return DECODE_REG_NUM (r);\n }\n \n@@ -862,8 +1103,10 @@ md_begin (void)\n \n   /* Create and insert CSR hash tables.  */\n   csr_extra_hash = hash_new ();\n-#define DECLARE_CSR(name, num, class) riscv_init_csr_hashes (#name, num, class);\n-#define DECLARE_CSR_ALIAS(name, num, class) DECLARE_CSR(name, num, class);\n+#define DECLARE_CSR(name, num, class, define_version, abort_version) \\\n+  riscv_init_csr_hash (#name, num, class, define_version, abort_version);\n+#define DECLARE_CSR_ALIAS(name, num, class, define_version, abort_version) \\\n+  DECLARE_CSR(name, num, class, define_version, abort_version);\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n \n@@ -2306,9 +2549,17 @@ md_assemble (char *str)\n   expressionS imm_expr;\n   bfd_reloc_code_real_type imm_reloc = BFD_RELOC_UNUSED;\n \n-  const char *error = riscv_ip (str, &insn, &imm_expr, &imm_reloc, op_hash);\n+  /* The arch and priv attributes should be set before assembling.  */\n+  if (!start_assemble)\n+    {\n+      start_assemble = TRUE;\n \n-  start_assemble = TRUE;\n+      /* Set the default_priv_spec according to the priv attributes.  */\n+      if (!riscv_set_default_priv_spec (NULL))\n+       return;\n+    }\n+\n+  const char *error = riscv_ip (str, &insn, &imm_expr, &imm_reloc, op_hash);\n \n   if (error)\n     {\n@@ -2348,6 +2599,8 @@ enum options\n   OPTION_NO_ARCH_ATTR,\n   OPTION_CSR_CHECK,\n   OPTION_NO_CSR_CHECK,\n+  OPTION_MISA_SPEC,\n+  OPTION_MPRIV_SPEC,\n   OPTION_END_OF_ENUM\n };\n \n@@ -2364,6 +2617,8 @@ struct option md_longopts[] =\n   {\"mno-arch-attr\", no_argument, NULL, OPTION_NO_ARCH_ATTR},\n   {\"mcsr-check\", no_argument, NULL, OPTION_CSR_CHECK},\n   {\"mno-csr-check\", no_argument, NULL, OPTION_NO_CSR_CHECK},\n+  {\"misa-spec\", required_argument, NULL, OPTION_MISA_SPEC},\n+  {\"mpriv-spec\", required_argument, NULL, OPTION_MPRIV_SPEC},\n \n   {NULL, no_argument, NULL, 0}\n };\n@@ -2392,7 +2647,9 @@ md_parse_option (int c, const char *arg)\n   switch (c)\n     {\n     case OPTION_MARCH:\n-      riscv_set_arch (arg);\n+      /* riscv_after_parse_args will call riscv_set_arch to parse\n+        the architecture.  */\n+      default_arch_with_ext = arg;\n       break;\n \n     case OPTION_NO_PIC:\n@@ -2450,6 +2707,12 @@ md_parse_option (int c, const char *arg)\n       riscv_opts.csr_check = FALSE;\n       break;\n \n+    case OPTION_MISA_SPEC:\n+      return riscv_set_default_isa_spec (arg);\n+\n+    case OPTION_MPRIV_SPEC:\n+      return riscv_set_default_priv_spec (arg);\n+\n     default:\n       return 0;\n     }\n@@ -2460,6 +2723,10 @@ md_parse_option (int c, const char *arg)\n void\n riscv_after_parse_args (void)\n {\n+  /* The --with-arch is optional for now, so we have to set the xlen\n+     according to the default_arch, which is set by the --targte, first.\n+     Then, we use the xlen to set the default_arch_with_ext if the\n+     -march and --with-arch are not set.  */\n   if (xlen == 0)\n     {\n       if (strcmp (default_arch, \"riscv32\") == 0)\n@@ -2469,9 +2736,19 @@ riscv_after_parse_args (void)\n       else\n \tas_bad (\"unknown default architecture `%s'\", default_arch);\n     }\n+  if (default_arch_with_ext == NULL)\n+    default_arch_with_ext = xlen == 64 ? \"rv64g\" : \"rv32g\";\n+\n+  /* Initialize the hash table for extensions with default version.  */\n+  ext_version_hash = init_ext_version_hash (riscv_ext_version_table);\n+\n+  /* If the -misa-spec isn't set, then we set the default ISA spec according\n+     to DEFAULT_RISCV_ISA_SPEC.  */\n+  if (default_isa_spec == ISA_SPEC_CLASS_NONE)\n+    riscv_set_default_isa_spec (DEFAULT_RISCV_ISA_SPEC);\n \n-  if (riscv_subsets.head == NULL)\n-    riscv_set_arch (xlen == 64 ? \"rv64g\" : \"rv32g\");\n+  /* Set the architecture according to -march or or --with-arch.  */\n+  riscv_set_arch (default_arch_with_ext);\n \n   /* Add the RVC extension, regardless of -march, to support .option rvc.  */\n   riscv_set_rvc (FALSE);\n@@ -2483,6 +2760,11 @@ riscv_after_parse_args (void)\n   if (riscv_subset_supports (\"e\"))\n     riscv_set_rve (TRUE);\n \n+  /* If the -mpriv-spec isn't set, then we set the default privilege spec\n+     according to DEFAULT_PRIV_SPEC.  */\n+  if (default_priv_spec == PRIV_SPEC_CLASS_NONE)\n+    riscv_set_default_priv_spec (DEFAULT_RISCV_PRIV_SPEC);\n+\n   /* Infer ABI from ISA if not specified on command line.  */\n   if (abi_xlen == 0)\n     abi_xlen = xlen;\n@@ -3189,14 +3471,16 @@ md_show_usage (FILE *stream)\n {\n   fprintf (stream, _(\"\\\n RISC-V options:\\n\\\n-  -fpic          generate position-independent code\\n\\\n-  -fno-pic       don't generate position-independent code (default)\\n\\\n-  -march=ISA     set the RISC-V architecture\\n\\\n-  -mabi=ABI      set the RISC-V ABI\\n\\\n-  -mrelax        enable relax (default)\\n\\\n-  -mno-relax     disable relax\\n\\\n-  -march-attr    generate RISC-V arch attribute\\n\\\n-  -mno-arch-attr don't generate RISC-V arch attribute\\n\\\n+  -fpic                       generate position-independent code\\n\\\n+  -fno-pic                    don't generate position-independent code (default)\\n\\\n+  -march=ISA                  set the RISC-V architecture\\n\\\n+  -misa-spec=ISAspec          set the RISC-V ISA spec (2.2, 20190608, 20191213)\\n\\\n+  -mpriv-spec=PRIVspec        set the RISC-V privilege spec (1.9, 1.9.1, 1.10, 1.11)\\n\\\n+  -mabi=ABI                   set the RISC-V ABI\\n\\\n+  -mrelax                     enable relax (default)\\n\\\n+  -mno-relax                  disable relax\\n\\\n+  -march-attr                 generate RISC-V arch attribute\\n\\\n+  -mno-arch-attr              don't generate RISC-V arch attribute\\n\\\n \"));\n }\n \n@@ -3284,26 +3568,66 @@ s_riscv_insn (int x ATTRIBUTE_UNUSED)\n   demand_empty_rest_of_line ();\n }\n \n-/* Update arch attributes.  */\n+/* Update arch and priv attributes.  If we don't set the corresponding ELF\n+   attributes, then try to output the default ones.  */\n \n static void\n-riscv_write_out_arch_attr (void)\n+riscv_write_out_attrs (void)\n {\n-  const char *arch_str = riscv_arch_str (xlen, &riscv_subsets);\n+  const char *arch_str, *priv_str, *p;\n+  /* versions[0] is major, versions[1] is minor,\n+     and versions[3] is revision.  */\n+  unsigned versions[3] = {0}, number = 0;\n+  unsigned int i;\n \n+  /* Re-write arch attribute to normalize the arch string.  */\n+  arch_str = riscv_arch_str (xlen, &riscv_subsets);\n   bfd_elf_add_proc_attr_string (stdoutput, Tag_RISCV_arch, arch_str);\n-\n   xfree ((void *)arch_str);\n+\n+  /* For the file without any instruction, we don't set the default_priv_spec\n+     according to the priv attributes since the md_assemble isn't called.\n+     Call riscv_set_default_priv_spec here for the above case, although\n+     it seems strange.  */\n+  if (!start_assemble\n+      && !riscv_set_default_priv_spec (NULL))\n+    return;\n+\n+  /* Re-write priv attributes by default_priv_spec.  */\n+  priv_str = riscv_get_priv_spec_name (default_priv_spec);\n+  p = priv_str;\n+  for (i = 0; *p; ++p)\n+    {\n+      if (*p == '.' && i < 3)\n+       {\n+         versions[i++] = number;\n+         number = 0;\n+       }\n+      else if (ISDIGIT (*p))\n+       number = (number * 10) + (*p - '0');\n+      else\n+       {\n+         as_bad (_(\"internal: bad RISC-V priv spec string (%s)\"), priv_str);\n+         return;\n+       }\n+    }\n+  versions[i] = number;\n+\n+  /* Set the priv attributes.  */\n+  bfd_elf_add_proc_attr_int (stdoutput, Tag_RISCV_priv_spec, versions[0]);\n+  bfd_elf_add_proc_attr_int (stdoutput, Tag_RISCV_priv_spec_minor, versions[1]);\n+  bfd_elf_add_proc_attr_int (stdoutput, Tag_RISCV_priv_spec_revision, versions[2]);\n }\n \n-/* Add the default contents for the .riscv.attributes section.  */\n+/* Add the default contents for the .riscv.attributes section.  If any\n+   ELF attribute or -march-attr options is set, call riscv_write_out_attrs\n+   to update the arch and priv attributes.  */\n \n static void\n riscv_set_public_attributes (void)\n {\n-  if (riscv_opts.arch_attr || explicit_arch_attr)\n-    /* Re-write arch attribute to normalize the arch string.  */\n-    riscv_write_out_arch_attr ();\n+  if (riscv_opts.arch_attr || explicit_attr)\n+    riscv_write_out_attrs ();\n }\n \n /* Called after all assembly has been done.  */\n@@ -3357,13 +3681,14 @@ static void\n s_riscv_attribute (int ignored ATTRIBUTE_UNUSED)\n {\n   int tag = obj_elf_vendor_attribute (OBJ_ATTR_PROC);\n+  unsigned old_xlen;\n+  obj_attribute *attr;\n \n-  if (tag == Tag_RISCV_arch)\n+  explicit_attr = TRUE;\n+  switch (tag)\n     {\n-      unsigned old_xlen = xlen;\n-\n-      explicit_arch_attr = TRUE;\n-      obj_attribute *attr;\n+    case Tag_RISCV_arch:\n+      old_xlen = xlen;\n       attr = elf_known_obj_attributes_proc (stdoutput);\n       if (!start_assemble)\n \triscv_set_arch (attr[Tag_RISCV_arch].s);\n@@ -3379,6 +3704,17 @@ s_riscv_attribute (int ignored ATTRIBUTE_UNUSED)\n \t  if (! bfd_set_arch_mach (stdoutput, bfd_arch_riscv, mach))\n \t    as_warn (_(\"Could not set architecture and machine\"));\n \t}\n+      break;\n+\n+    case Tag_RISCV_priv_spec:\n+    case Tag_RISCV_priv_spec_minor:\n+    case Tag_RISCV_priv_spec_revision:\n+      if (start_assemble)\n+       as_fatal (_(\".attribute priv spec must set before any instructions\"));\n+      break;\n+\n+    default:\n+      break;\n     }\n }\n "
    },
    {
      "sha": "e480b1d9971a9de2b26f2778b87457dae4e0c108",
      "filename": "gas/configure",
      "status": "modified",
      "additions": 51,
      "deletions": 1,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -13009,7 +13009,7 @@ $as_echo \"#define NDS32_DEFAULT_ZOL_EXT 1\" >>confdefs.h\n $as_echo \"$enable_zol_ext\" >&6; }\n \t;;\n \n-      aarch64 | i386 | riscv | s390 | sparc)\n+      aarch64 | i386 | s390 | sparc)\n \tif test $this_target = $target ; then\n \n cat >>confdefs.h <<_ACEOF\n@@ -13019,6 +13019,56 @@ _ACEOF\n \tfi\n \t;;\n \n+      riscv)\n+        # --target=riscv[32|64]-*-*.  */\n+        if test $this_target = $target ; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_ARCH \"${arch}\"\n+_ACEOF\n+\n+        fi\n+\n+        # --with-arch=<value>.  The syntax of <value> is same as Gas option -march.\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for default configuration of --with-arch\" >&5\n+$as_echo_n \"checking for default configuration of --with-arch... \" >&6; }\n+        if test \"x${with_arch}\" != x; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_RISCV_ARCH_WITH_EXT \"$with_arch\"\n+_ACEOF\n+\n+        fi\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_arch\" >&5\n+$as_echo \"$with_arch\" >&6; }\n+\n+        # --with-isa-spec=[2.2|20190608|20191213].\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for default configuration of --with-isa-spec\" >&5\n+$as_echo_n \"checking for default configuration of --with-isa-spec... \" >&6; }\n+        if test \"x${with_isa_spec}\" != x; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_RISCV_ISA_SPEC \"$with_isa_spec\"\n+_ACEOF\n+\n+        fi\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_isa_spec\" >&5\n+$as_echo \"$with_isa_spec\" >&6; }\n+\n+        # --with-priv-spec=[1.9|1.9.1|1.10|1.11].\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for default configuration of --with-priv-spec\" >&5\n+$as_echo_n \"checking for default configuration of --with-priv-spec... \" >&6; }\n+        if test \"x${with_priv_spec}\" != x; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_RISCV_PRIV_SPEC \"$with_priv_spec\"\n+_ACEOF\n+\n+        fi\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_priv_spec\" >&5\n+$as_echo \"$with_priv_spec\" >&6; }\n+        ;;\n+\n       rl78)\n \tf=rl78-parse.o\n \tcase \" $extra_objects \" in"
    },
    {
      "sha": "b65108fecb21e81768c94659f04a6fb46bfb6bc5",
      "filename": "gas/configure.ac",
      "status": "modified",
      "additions": 32,
      "deletions": 1,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure.ac?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -569,12 +569,43 @@ changequote([,])dnl\n \tAC_MSG_RESULT($enable_zol_ext)\n \t;;\n \n-      aarch64 | i386 | riscv | s390 | sparc)\n+      aarch64 | i386 | s390 | sparc)\n \tif test $this_target = $target ; then\n \t  AC_DEFINE_UNQUOTED(DEFAULT_ARCH, \"${arch}\", [Default architecture.])\n \tfi\n \t;;\n \n+      riscv)\n+        # --target=riscv[32|64]-*-*.  */\n+        if test $this_target = $target ; then\n+          AC_DEFINE_UNQUOTED(DEFAULT_ARCH, \"${arch}\", [Default architecture.])\n+        fi\n+\n+        # --with-arch=<value>.  The syntax of <value> is same as Gas option -march.\n+        AC_MSG_CHECKING(for default configuration of --with-arch)\n+        if test \"x${with_arch}\" != x; then\n+        AC_DEFINE_UNQUOTED(DEFAULT_RISCV_ARCH_WITH_EXT, \"$with_arch\",\n+                           [Define default value for RISC-V -march.])\n+        fi\n+        AC_MSG_RESULT($with_arch)\n+\n+        # --with-isa-spec=[2.2|20190608|20191213].\n+        AC_MSG_CHECKING(for default configuration of --with-isa-spec)\n+        if test \"x${with_isa_spec}\" != x; then\n+          AC_DEFINE_UNQUOTED(DEFAULT_RISCV_ISA_SPEC, \"$with_isa_spec\",\n+                             [Define default value for RISC-V -misa-spec.])\n+        fi\n+        AC_MSG_RESULT($with_isa_spec)\n+\n+        # --with-priv-spec=[1.9|1.9.1|1.10|1.11].\n+        AC_MSG_CHECKING(for default configuration of --with-priv-spec)\n+        if test \"x${with_priv_spec}\" != x; then\n+          AC_DEFINE_UNQUOTED(DEFAULT_RISCV_PRIV_SPEC, \"$with_priv_spec\",\n+                             [Define default value for RISC-V -mpriv-spec])\n+        fi\n+        AC_MSG_RESULT($with_priv_spec)\n+        ;;\n+\n       rl78)\n \tf=rl78-parse.o\n \tcase \" $extra_objects \" in"
    },
    {
      "sha": "bf942c3b7e93ea4ffc788cf0b33ea7ace89beaee",
      "filename": "gas/doc/c-riscv.texi",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/doc/c-riscv.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/doc/c-riscv.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-riscv.texi?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -42,6 +42,22 @@ Don't generate position-independent code (default)\n @cindex @samp{-march=ISA} option, RISC-V\n @item -march=ISA\n Select the base isa, as specified by ISA.  For example -march=rv32ima.\n+If this option and the architecture attributes aren\u2019t set, then assembler\n+will check the default configure setting --with-arch=ISA.\n+\n+@cindex @samp{-misa-spec=ISAspec} option, RISC-V\n+@item -misa-spec=ISAspec\n+Select the default isa spec version.  If the version of ISA isn't set\n+by -march, then assembler helps to set the version according to\n+the default chosen spec.  If this option isn't set, then assembler will\n+check the default configure setting --with-isa-spec=ISAspec.\n+\n+@cindex @samp{-mpriv-spec=PRIVspec} option, RISC-V\n+@item -mpriv-spec=PRIVspec\n+Select the privileged spec version.  We can decide whether the CSR is valid or\n+not according to the chosen spec.  If this option and the privilege attributes\n+aren't set, then assembler will check the default configure setting\n+--with-priv-spec=PRIVspec.\n \n @cindex @samp{-mabi=ABI} option, RISC-V\n @item -mabi=ABI"
    },
    {
      "sha": "f93cfac6dde3fbdb77415529dca84f60ec135fbb",
      "filename": "gas/po/gas.pot",
      "status": "modified",
      "additions": 2350,
      "deletions": 2010,
      "changes": 4360,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/po/gas.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/po/gas.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/po/gas.pot?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6"
    },
    {
      "sha": "f02734744e1a9549fa89ca9a7d719e2d153166dc",
      "filename": "gas/testsuite/gas/riscv/attribute-01.d",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-01.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-01.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-01.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,6 +1,9 @@\n-#as: -march=rv32g -march-attr\n+#as: -march=rv32g -march-attr -misa-spec=2.2\n #readelf: -A\n #source: empty.s\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "02b532d0a88c92703bd0877f5f6f0f0d2296e7a0",
      "filename": "gas/testsuite/gas/riscv/attribute-02.d",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-02.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-02.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-02.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,6 +1,9 @@\n-#as: -march=rv32gxargle -march-attr\n+#as: -march=rv32gxargle -march-attr -misa-spec=2.2\n #readelf: -A\n #source: empty.s\n Attribute Section: riscv\n File Attributes\n-  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0_xargle2p0\"\n+  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0_xargle0p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "ded529aa61768088f9e1eecba801677b965fd5be",
      "filename": "gas/testsuite/gas/riscv/attribute-03.d",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-03.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-03.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-03.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,6 +1,9 @@\n-#as: -march=rv32gxargle_xfoo -march-attr\n+#as: -march=rv32gxargle_xfoo -march-attr -misa-spec=2.2\n #readelf: -A\n #source: empty.s\n Attribute Section: riscv\n File Attributes\n-  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0_xargle2p0_xfoo2p0\"\n+  Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0_xargle0p0_xfoo0p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "df6c8182d5b96650d6b17b0d3460306a85185b4a",
      "filename": "gas/testsuite/gas/riscv/attribute-04.d",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-04.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-04.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-04.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,6 +1,9 @@\n-#as: -march-attr\n+#as: -march-attr -misa-spec=2.2\n #readelf: -A\n #source: attribute-04.s\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "247f52e0ed87259fc10e9ffc1ba724450fd03750",
      "filename": "gas/testsuite/gas/riscv/attribute-05.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-05.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-05.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-05.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -march-attr\n+#as: -march-attr -misa-spec=2.2\n #readelf: -A\n #source: attribute-05.s\n Attribute Section: riscv\n@@ -7,5 +7,5 @@ File Attributes\n   Tag_RISCV_arch: \"rv32i2p0_m2p0_a2p0_f2p0_d2p0\"\n   Tag_RISCV_unaligned_access: Unaligned access\n   Tag_RISCV_priv_spec: 1\n-  Tag_RISCV_priv_spec_minor: 2\n-  Tag_RISCV_priv_spec_revision: 3\n+  Tag_RISCV_priv_spec_minor: 9\n+  Tag_RISCV_priv_spec_revision: 1"
    },
    {
      "sha": "492030979949f9502e3648c905fb55bacd1c4501",
      "filename": "gas/testsuite/gas/riscv/attribute-05.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-05.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-05.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-05.s?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,6 +1,6 @@\n \t.attribute arch, \"rv32g\"\n \t.attribute priv_spec, 1\n-\t.attribute priv_spec_minor, 2\n-\t.attribute priv_spec_revision, 3\n+\t.attribute priv_spec_minor, 9\n+\t.attribute priv_spec_revision, 1\n \t.attribute unaligned_access, 1\n \t.attribute stack_align, 16"
    },
    {
      "sha": "e1d62c45db76709657555a2136e2beb1bb5c0ed1",
      "filename": "gas/testsuite/gas/riscv/attribute-06.d",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-06.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-06.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-06.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,6 +1,9 @@\n-#as: -march=rv32g2p0 -march-attr\n+#as: -march=rv32g2p0 -march-attr -misa-spec=2.2\n #readelf: -A\n #source: attribute-06.s\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32i2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "59f02b4c4e3526e00b7acf5486cb72d7ea827608",
      "filename": "gas/testsuite/gas/riscv/attribute-07.d",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-07.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-07.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-07.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,6 +1,9 @@\n-#as: -march=rv64g2p0 -march-attr\n+#as: -march=rv64g2p0 -march-attr -misa-spec=2.2\n #readelf: -A\n #source: attribute-07.s\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv64i2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "13b82a97a63aee118ae6816f3040d94c248b44e5",
      "filename": "gas/testsuite/gas/riscv/attribute-08.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-08.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-08.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-08.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -4,3 +4,6 @@\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32e1p9\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "53945a27ebc0611d788ee9d69bc39686ea70c2e1",
      "filename": "gas/testsuite/gas/riscv/attribute-09.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-09.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-09.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-09.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,9 @@\n+#as: -march-attr -march=rv32i2p1m_zicsr -misa-spec=2.2\n+#readelf: -A\n+#source: empty.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p1_m2p0_zicsr0p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "91691fda77a8b4bf8e06edccc8c4004bec1c53e9",
      "filename": "gas/testsuite/gas/riscv/attribute-10.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-10.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-10.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-10.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,9 @@\n+#as: -march-attr -march=rv32gc_zicsr -misa-spec=20191213\n+#readelf: -A\n+#source: empty.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p1_m2p0_a2p1_f2p2_d2p2_c2p0_zicsr2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "120e3dee6ca740312de6dd3eaba3f338e1ce4a9d",
      "filename": "gas/testsuite/gas/riscv/attribute-unknown.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-unknown.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/attribute-unknown.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/attribute-unknown.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -4,5 +4,8 @@\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#...\n   Tag_unknown_255: \"test\"\n   Tag_unknown_256: 123 \\(0x7b\\)"
    },
    {
      "sha": "c03d45986e854c6f3d796e87d4389dfdd4720878",
      "filename": "gas/testsuite/gas/riscv/csr-dw-regnums.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/csr-dw-regnums.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/csr-dw-regnums.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/csr-dw-regnums.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -march=rv32if\n+#as: -march=rv32if -mpriv-spec=1.11\n #objdump: --dwarf=frames\n \n "
    },
    {
      "sha": "a514d4aec76ace617e20c9d3da9433523b71d6dc",
      "filename": "gas/testsuite/gas/riscv/march-fail-s-with-version",
      "status": "removed",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gas/testsuite/gas/riscv/march-fail-s-with-version",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gas/testsuite/gas/riscv/march-fail-s-with-version",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-fail-s-with-version?ref=41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "patch": "@@ -1,2 +0,0 @@\n-Assembler messages:\n-.*: Invalid or unknown s ISA extension: 'sfoo'\n\\ No newline at end of file"
    },
    {
      "sha": "d9939eb7f124853a1973cf69e987f51ebd116932",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-fext.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,3 @@\n-#as: -march=rv32i -mcsr-check\n+#as: -march=rv32i -mcsr-check -mpriv-spec=1.11\n #source: priv-reg.s\n #warning_output: priv-reg-fail-fext.l"
    },
    {
      "sha": "d74863ef444a7b700bbba0c069269db8abd3484d",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-fext.l",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-fext.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-fext.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-fext.l?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -2,3 +2,28 @@\n .*Warning: Invalid CSR `fflags' for the current ISA\n .*Warning: Invalid CSR `frm' for the current ISA\n .*Warning: Invalid CSR `fcsr' for the current ISA\n+\n+.*Warning: Invalid CSR `ubadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sptbr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mucounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `dscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hstatus' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hedeleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hideleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hie' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `htvec' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hepc' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hcause' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hip' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mscounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mhcounteren' for the privilege spec `1.11'"
    },
    {
      "sha": "b0f67264f2e06452dcc0e0ba53b4d2869a476091",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,3 @@\n-#as: -march=rv32if -mcsr-check\n+#as: -march=rv32if -mcsr-check -mpriv-spec=1.11\n #source: priv-reg-fail-read-only-01.s\n #warning_output: priv-reg-fail-read-only-01.l"
    },
    {
      "sha": "2dc82f4ec03aeb3895435c278f7635420a8e3643",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.l?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -67,3 +67,28 @@\n .*Warning: Read-only CSR is written `csrw marchid,a1'\n .*Warning: Read-only CSR is written `csrw mimpid,a1'\n .*Warning: Read-only CSR is written `csrw mhartid,a1'\n+\n+.*Warning: Invalid CSR `ubadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sptbr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mucounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `dscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hstatus' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hedeleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hideleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hie' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `htvec' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hepc' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hcause' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hip' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mscounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mhcounteren' for the privilege spec `1.11'"
    },
    {
      "sha": "af0fc4e14a42b4b44fe58db96f194a76e2c156e6",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.s",
      "status": "modified",
      "additions": 57,
      "deletions": 57,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-read-only-01.s?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,15 +1,16 @@\n \t.macro csr val\n \tcsrw \\val, a1\n \t.endm\n-# 1.9.1 registers\n+\n+       # Supported the current priv spec 1.11.\n \tcsr ustatus\n \tcsr uie\n \tcsr utvec\n \n \tcsr uscratch\n \tcsr uepc\n \tcsr ucause\n-\tcsr ubadaddr\n+\tcsr utval               # Added in 1.10\n \tcsr uip\n \n \tcsr fflags\n@@ -86,51 +87,55 @@\n \tcsr sideleg\n \tcsr sie\n \tcsr stvec\n+\tcsr scounteren          # Added in 1.10\n \n \tcsr sscratch\n \tcsr sepc\n \tcsr scause\n-\tcsr sbadaddr\n+\tcsr stval               # Added in 1.10\n \tcsr sip\n \n-\tcsr sptbr\n-\n-\tcsr hstatus\n-\tcsr hedeleg\n-\tcsr hideleg\n-\tcsr hie\n-\tcsr htvec\n-\n-\tcsr hscratch\n-\tcsr hepc\n-\tcsr hcause\n-\tcsr hbadaddr\n-\tcsr hip\n+\tcsr satp                # Added in 1.10\n \n \tcsr mvendorid\n \tcsr marchid\n \tcsr mimpid\n \tcsr mhartid\n \n \tcsr mstatus\n-\tcsr misa\n+\tcsr misa                # 0xf10 in 1.9, but changed to 0x301 since 1.9.1.\n \tcsr medeleg\n \tcsr mideleg\n \tcsr mie\n \tcsr mtvec\n+\tcsr mcounteren          # Added in 1.10\n \n \tcsr mscratch\n \tcsr mepc\n \tcsr mcause\n-\tcsr mbadaddr\n+\tcsr mtval               # Added in 1.10\n \tcsr mip\n \n-\tcsr mbase\n-\tcsr mbound\n-\tcsr mibase\n-\tcsr mibound\n-\tcsr mdbase\n-\tcsr mdbound\n+\tcsr pmpcfg0             # Added in 1.10\n+\tcsr pmpcfg1             # Added in 1.10\n+\tcsr pmpcfg2             # Added in 1.10\n+\tcsr pmpcfg3             # Added in 1.10\n+\tcsr pmpaddr0            # Added in 1.10\n+\tcsr pmpaddr1            # Added in 1.10\n+\tcsr pmpaddr2            # Added in 1.10\n+\tcsr pmpaddr3            # Added in 1.10\n+\tcsr pmpaddr4            # Added in 1.10\n+\tcsr pmpaddr5            # Added in 1.10\n+\tcsr pmpaddr6            # Added in 1.10\n+\tcsr pmpaddr7            # Added in 1.10\n+\tcsr pmpaddr8            # Added in 1.10\n+\tcsr pmpaddr9            # Added in 1.10\n+\tcsr pmpaddr10           # Added in 1.10\n+\tcsr pmpaddr11           # Added in 1.10\n+\tcsr pmpaddr12           # Added in 1.10\n+\tcsr pmpaddr13           # Added in 1.10\n+\tcsr pmpaddr14           # Added in 1.10\n+\tcsr pmpaddr15           # Added in 1.10\n \n \tcsr mcycle\n \tcsr minstret\n@@ -195,10 +200,7 @@\n \tcsr mhpmcounter30h\n \tcsr mhpmcounter31h\n \n-\tcsr mucounteren\n-\tcsr mscounteren\n-\tcsr mhcounteren\n-\n+\tcsr mcountinhibit       # Added in 1.11\n \tcsr mhpmevent3\n \tcsr mhpmevent4\n \tcsr mhpmevent5\n@@ -236,34 +238,32 @@\n \n \tcsr dcsr\n \tcsr dpc\n-\tcsr dscratch\n-# 1.10 registers\n-\tcsr utval\n-\n-\tcsr scounteren\n-\tcsr stval\n-\tcsr satp\n+\tcsr dscratch0           # Added in 1.11\n+\tcsr dscratch1           # Added in 1.11\n \n-\tcsr mcounteren\n-\tcsr mtval\n+\t# Supported in previous priv spec, but dropped now.\n+\tcsr ubadaddr            # 0x043 in 1.9.1, but the value is utval since 1.10\n+\tcsr sbadaddr            # 0x143 in 1.9.1, but the value is stval since 1.10\n+\tcsr sptbr               # 0x180 in 1.9.1, but the value is satp since 1.10\n+\tcsr mbadaddr            # 0x343 in 1.9.1, but the value is mtval since 1.10\n+\tcsr mucounteren         # 0x320 in 1.9.1, dropped in 1.10, but the value is mcountinhibit since 1.11\n+\tcsr dscratch            # 0x7b2 in 1.10,  but the value is dscratch0 since 1.11\n \n-\tcsr pmpcfg0\n-\tcsr pmpcfg1\n-\tcsr pmpcfg2\n-\tcsr pmpcfg3\n-\tcsr pmpaddr0\n-\tcsr pmpaddr1\n-\tcsr pmpaddr2\n-\tcsr pmpaddr3\n-\tcsr pmpaddr4\n-\tcsr pmpaddr5\n-\tcsr pmpaddr6\n-\tcsr pmpaddr7\n-\tcsr pmpaddr8\n-\tcsr pmpaddr9\n-\tcsr pmpaddr10\n-\tcsr pmpaddr11\n-\tcsr pmpaddr12\n-\tcsr pmpaddr13\n-\tcsr pmpaddr14\n-\tcsr pmpaddr15\n+\tcsr hstatus             # 0x200, dropped in 1.10\n+\tcsr hedeleg             # 0x202, dropped in 1.10\n+\tcsr hideleg             # 0x203, dropped in 1.10\n+\tcsr hie                 # 0x204, dropped in 1.10\n+\tcsr htvec               # 0x205, dropped in 1.10\n+\tcsr hscratch            # 0x240, dropped in 1.10\n+\tcsr hepc                # 0x241, dropped in 1.10\n+\tcsr hcause              # 0x242, dropped in 1.10\n+\tcsr hbadaddr            # 0x243, dropped in 1.10\n+\tcsr hip                 # 0x244, dropped in 1.10\n+\tcsr mbase               # 0x380, dropped in 1.10\n+\tcsr mbound              # 0x381, dropped in 1.10\n+\tcsr mibase              # 0x382, dropped in 1.10\n+\tcsr mibound             # 0x383, dropped in 1.10\n+\tcsr mdbase              # 0x384, dropped in 1.10\n+\tcsr mdbound             # 0x385, dropped in 1.10\n+\tcsr mscounteren         # 0x321, dropped in 1.10\n+\tcsr mhcounteren         # 0x322, dropped in 1.10"
    },
    {
      "sha": "ec206e4d6d1bcb620fe8c46bed23e807147c1dad",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-read-only-02.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,3 @@\n-#as: -march=rv32if -mcsr-check\n+#as: -march=rv32if -mcsr-check -mpriv-spec=1.11\n #source: priv-reg-fail-read-only-02.s\n #warning_output: priv-reg-fail-read-only-02.l"
    },
    {
      "sha": "eced438ea47ffdbb0c829efd99aadee0c75c5e68",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,3 @@\n-#as: -march=rv64if -mcsr-check\n+#as: -march=rv64if -mcsr-check -mpriv-spec=1.11\n #source: priv-reg.s\n #warning_output: priv-reg-fail-rv32-only.l"
    },
    {
      "sha": "19f13a0ee5cce4d072108549d586197ac6ecf6c8",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -64,3 +64,28 @@\n .*Warning: Invalid CSR `mhpmcounter29h' for the current ISA\n .*Warning: Invalid CSR `mhpmcounter30h' for the current ISA\n .*Warning: Invalid CSR `mhpmcounter31h' for the current ISA\n+\n+.*Warning: Invalid CSR `ubadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sptbr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mucounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `dscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hstatus' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hedeleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hideleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hie' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `htvec' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hepc' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hcause' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hip' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mscounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mhcounteren' for the privilege spec `1.11'"
    },
    {
      "sha": "07cf05a9c29922eca8cd039af1aa51eb34561e9d",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,11 @@\n+#as: -march=rv32if -mcsr-check -mpriv-spec=1.10 -march-attr\n+#source: priv-reg.s\n+#warning_output: priv-reg-fail-version-1p10.l\n+#readelf: -A\n+\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_RISCV_priv_spec: 1\n+  Tag_RISCV_priv_spec_minor: 10\n+#..."
    },
    {
      "sha": "414617490c996f27adc1f510a0b89ffe304e5d25",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.l?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,27 @@\n+.*Assembler messages:\n+.*Warning: Invalid CSR `mcountinhibit' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `dscratch0' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `dscratch1' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `ubadaddr' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `sbadaddr' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `sptbr' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mbadaddr' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mucounteren' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hstatus' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hedeleg' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hideleg' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hie' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `htvec' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hscratch' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hepc' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hcause' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hbadaddr' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `hip' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mbase' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mbound' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mibase' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mibound' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mdbase' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mdbound' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mscounteren' for the privilege spec `1.10'\n+.*Warning: Invalid CSR `mhcounteren' for the privilege spec `1.10'"
    },
    {
      "sha": "bf4b1db3ed6321f3d073d062c7f74a4d9a8dd842",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,11 @@\n+#as: -march=rv32if -mcsr-check -mpriv-spec=1.11 -march-attr\n+#source: priv-reg.s\n+#warning_output: priv-reg-fail-version-1p11.l\n+#readelf: -A\n+\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_RISCV_priv_spec: 1\n+  Tag_RISCV_priv_spec_minor: 11\n+#..."
    },
    {
      "sha": "eadcb5cc79df06cc2156a50130498e5194ca23d7",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.l?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,25 @@\n+.*Assembler messages:\n+.*Warning: Invalid CSR `ubadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `sptbr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mucounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `dscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hstatus' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hedeleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hideleg' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hie' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `htvec' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hscratch' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hepc' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hcause' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hbadaddr' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `hip' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mibound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbase' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mdbound' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mscounteren' for the privilege spec `1.11'\n+.*Warning: Invalid CSR `mhcounteren' for the privilege spec `1.11'"
    },
    {
      "sha": "c9143341813cd2ac0db779799a491fe68c63b2cb",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,11 @@\n+#as: -march=rv32if -mcsr-check -mpriv-spec=1.9 -march-attr\n+#source: priv-reg.s\n+#warning_output: priv-reg-fail-version-1p9.l\n+#readelf: -A\n+\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_RISCV_priv_spec: 1\n+  Tag_RISCV_priv_spec_minor: 9\n+#..."
    },
    {
      "sha": "d7cee80a7d080f3e15cc4e248b79bff3fb0fa97a",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9.l?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,30 @@\n+.*Assembler messages:\n+.*Warning: Invalid CSR `utval' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `scounteren' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `stval' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `satp' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `mcounteren' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `mtval' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpcfg0' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpcfg1' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpcfg2' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpcfg3' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr0' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr1' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr2' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr3' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr4' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr5' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr6' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr7' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr8' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr9' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr10' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr11' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr12' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr13' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr14' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `pmpaddr15' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `mcountinhibit' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `dscratch0' for the privilege spec `1.9'\n+.*Warning: Invalid CSR `dscratch1' for the privilege spec `1.9'"
    },
    {
      "sha": "e2c33d81dc874b0440d020371e437e0e839007b5",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,12 @@\n+#as: -march=rv32if -mcsr-check -mpriv-spec=1.9.1 -march-attr\n+#source: priv-reg.s\n+#warning_output: priv-reg-fail-version-1p9p1.l\n+#readelf: -A\n+\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_RISCV_priv_spec: 1\n+  Tag_RISCV_priv_spec_minor: 9\n+  Tag_RISCV_priv_spec_revision: 1\n+#..."
    },
    {
      "sha": "907ed7339a08fdd98b97a9fbbcd41dd951b3276e",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.l?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,30 @@\n+.*Assembler messages:\n+.*Warning: Invalid CSR `utval' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `scounteren' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `stval' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `satp' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `mcounteren' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `mtval' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpcfg0' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpcfg1' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpcfg2' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpcfg3' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr0' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr1' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr2' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr3' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr4' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr5' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr6' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr7' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr8' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr9' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr10' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr11' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr12' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr13' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr14' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `pmpaddr15' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `mcountinhibit' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `dscratch0' for the privilege spec `1.9.1'\n+.*Warning: Invalid CSR `dscratch1' for the privilege spec `1.9.1'"
    },
    {
      "sha": "0071f75c30e47ea9807544526c97b4bb7b410839",
      "filename": "gas/testsuite/gas/riscv/priv-reg-version-1p10.d",
      "status": "added",
      "additions": 257,
      "deletions": 0,
      "changes": 257,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p10.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p10.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-version-1p10.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,257 @@\n+#as: -march=rv32if -mpriv-spec=1.10\n+#source: priv-reg.s\n+#objdump: -dr -Mpriv-spec=1.10\n+\n+.*:[   ]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[ \t]+[0-9a-f]+:[  \t]+00002573[    \t]+csrr[        \t]+a0,ustatus\n+[ \t]+[0-9a-f]+:[  \t]+00402573[    \t]+csrr[        \t]+a0,uie\n+[ \t]+[0-9a-f]+:[  \t]+00502573[    \t]+csrr[        \t]+a0,utvec\n+[ \t]+[0-9a-f]+:[  \t]+04002573[    \t]+csrr[        \t]+a0,uscratch\n+[ \t]+[0-9a-f]+:[  \t]+04102573[    \t]+csrr[        \t]+a0,uepc\n+[ \t]+[0-9a-f]+:[  \t]+04202573[    \t]+csrr[        \t]+a0,ucause\n+[ \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,utval\n+[ \t]+[0-9a-f]+:[  \t]+04402573[    \t]+csrr[        \t]+a0,uip\n+[ \t]+[0-9a-f]+:[  \t]+00102573[    \t]+frflags[ \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+00202573[    \t]+frrm[        \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+00302573[    \t]+frcsr[       \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+c0002573[    \t]+rdcycle[ \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+c0102573[    \t]+rdtime[      \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+c0202573[    \t]+rdinstret[   \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+c0302573[    \t]+csrr[        \t]+a0,hpmcounter3\n+[ \t]+[0-9a-f]+:[  \t]+c0402573[    \t]+csrr[        \t]+a0,hpmcounter4\n+[ \t]+[0-9a-f]+:[  \t]+c0502573[    \t]+csrr[        \t]+a0,hpmcounter5\n+[ \t]+[0-9a-f]+:[  \t]+c0602573[    \t]+csrr[        \t]+a0,hpmcounter6\n+[ \t]+[0-9a-f]+:[  \t]+c0702573[    \t]+csrr[        \t]+a0,hpmcounter7\n+[ \t]+[0-9a-f]+:[  \t]+c0802573[    \t]+csrr[        \t]+a0,hpmcounter8\n+[ \t]+[0-9a-f]+:[  \t]+c0902573[    \t]+csrr[        \t]+a0,hpmcounter9\n+[ \t]+[0-9a-f]+:[  \t]+c0a02573[    \t]+csrr[        \t]+a0,hpmcounter10\n+[ \t]+[0-9a-f]+:[  \t]+c0b02573[    \t]+csrr[        \t]+a0,hpmcounter11\n+[ \t]+[0-9a-f]+:[  \t]+c0c02573[    \t]+csrr[        \t]+a0,hpmcounter12\n+[ \t]+[0-9a-f]+:[  \t]+c0d02573[    \t]+csrr[        \t]+a0,hpmcounter13\n+[ \t]+[0-9a-f]+:[  \t]+c0e02573[    \t]+csrr[        \t]+a0,hpmcounter14\n+[ \t]+[0-9a-f]+:[  \t]+c0f02573[    \t]+csrr[        \t]+a0,hpmcounter15\n+[ \t]+[0-9a-f]+:[  \t]+c1002573[    \t]+csrr[        \t]+a0,hpmcounter16\n+[ \t]+[0-9a-f]+:[  \t]+c1102573[    \t]+csrr[        \t]+a0,hpmcounter17\n+[ \t]+[0-9a-f]+:[  \t]+c1202573[    \t]+csrr[        \t]+a0,hpmcounter18\n+[ \t]+[0-9a-f]+:[  \t]+c1302573[    \t]+csrr[        \t]+a0,hpmcounter19\n+[ \t]+[0-9a-f]+:[  \t]+c1402573[    \t]+csrr[        \t]+a0,hpmcounter20\n+[ \t]+[0-9a-f]+:[  \t]+c1502573[    \t]+csrr[        \t]+a0,hpmcounter21\n+[ \t]+[0-9a-f]+:[  \t]+c1602573[    \t]+csrr[        \t]+a0,hpmcounter22\n+[ \t]+[0-9a-f]+:[  \t]+c1702573[    \t]+csrr[        \t]+a0,hpmcounter23\n+[ \t]+[0-9a-f]+:[  \t]+c1802573[    \t]+csrr[        \t]+a0,hpmcounter24\n+[ \t]+[0-9a-f]+:[  \t]+c1902573[    \t]+csrr[        \t]+a0,hpmcounter25\n+[ \t]+[0-9a-f]+:[  \t]+c1a02573[    \t]+csrr[        \t]+a0,hpmcounter26\n+[ \t]+[0-9a-f]+:[  \t]+c1b02573[    \t]+csrr[        \t]+a0,hpmcounter27\n+[ \t]+[0-9a-f]+:[  \t]+c1c02573[    \t]+csrr[        \t]+a0,hpmcounter28\n+[ \t]+[0-9a-f]+:[  \t]+c1d02573[    \t]+csrr[        \t]+a0,hpmcounter29\n+[ \t]+[0-9a-f]+:[  \t]+c1e02573[    \t]+csrr[        \t]+a0,hpmcounter30\n+[ \t]+[0-9a-f]+:[  \t]+c1f02573[    \t]+csrr[        \t]+a0,hpmcounter31\n+[ \t]+[0-9a-f]+:[  \t]+c8002573[    \t]+rdcycleh[    \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+c8102573[    \t]+rdtimeh[ \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+c8202573[    \t]+rdinstreth[  \t]+a0\n+[ \t]+[0-9a-f]+:[  \t]+c8302573[    \t]+csrr[        \t]+a0,hpmcounter3h\n+[ \t]+[0-9a-f]+:[  \t]+c8402573[    \t]+csrr[        \t]+a0,hpmcounter4h\n+[ \t]+[0-9a-f]+:[  \t]+c8502573[    \t]+csrr[        \t]+a0,hpmcounter5h\n+[ \t]+[0-9a-f]+:[  \t]+c8602573[    \t]+csrr[        \t]+a0,hpmcounter6h\n+[ \t]+[0-9a-f]+:[  \t]+c8702573[    \t]+csrr[        \t]+a0,hpmcounter7h\n+[ \t]+[0-9a-f]+:[  \t]+c8802573[    \t]+csrr[        \t]+a0,hpmcounter8h\n+[ \t]+[0-9a-f]+:[  \t]+c8902573[    \t]+csrr[        \t]+a0,hpmcounter9h\n+[ \t]+[0-9a-f]+:[  \t]+c8a02573[    \t]+csrr[        \t]+a0,hpmcounter10h\n+[ \t]+[0-9a-f]+:[  \t]+c8b02573[    \t]+csrr[        \t]+a0,hpmcounter11h\n+[ \t]+[0-9a-f]+:[  \t]+c8c02573[    \t]+csrr[        \t]+a0,hpmcounter12h\n+[ \t]+[0-9a-f]+:[  \t]+c8d02573[    \t]+csrr[        \t]+a0,hpmcounter13h\n+[ \t]+[0-9a-f]+:[  \t]+c8e02573[    \t]+csrr[        \t]+a0,hpmcounter14h\n+[ \t]+[0-9a-f]+:[  \t]+c8f02573[    \t]+csrr[        \t]+a0,hpmcounter15h\n+[ \t]+[0-9a-f]+:[  \t]+c9002573[    \t]+csrr[        \t]+a0,hpmcounter16h\n+[ \t]+[0-9a-f]+:[  \t]+c9102573[    \t]+csrr[        \t]+a0,hpmcounter17h\n+[ \t]+[0-9a-f]+:[  \t]+c9202573[    \t]+csrr[        \t]+a0,hpmcounter18h\n+[ \t]+[0-9a-f]+:[  \t]+c9302573[    \t]+csrr[        \t]+a0,hpmcounter19h\n+[ \t]+[0-9a-f]+:[  \t]+c9402573[    \t]+csrr[        \t]+a0,hpmcounter20h\n+[ \t]+[0-9a-f]+:[  \t]+c9502573[    \t]+csrr[        \t]+a0,hpmcounter21h\n+[ \t]+[0-9a-f]+:[  \t]+c9602573[    \t]+csrr[        \t]+a0,hpmcounter22h\n+[ \t]+[0-9a-f]+:[  \t]+c9702573[    \t]+csrr[        \t]+a0,hpmcounter23h\n+[ \t]+[0-9a-f]+:[  \t]+c9802573[    \t]+csrr[        \t]+a0,hpmcounter24h\n+[ \t]+[0-9a-f]+:[  \t]+c9902573[    \t]+csrr[        \t]+a0,hpmcounter25h\n+[ \t]+[0-9a-f]+:[  \t]+c9a02573[    \t]+csrr[        \t]+a0,hpmcounter26h\n+[ \t]+[0-9a-f]+:[  \t]+c9b02573[    \t]+csrr[        \t]+a0,hpmcounter27h\n+[ \t]+[0-9a-f]+:[  \t]+c9c02573[    \t]+csrr[        \t]+a0,hpmcounter28h\n+[ \t]+[0-9a-f]+:[  \t]+c9d02573[    \t]+csrr[        \t]+a0,hpmcounter29h\n+[ \t]+[0-9a-f]+:[  \t]+c9e02573[    \t]+csrr[        \t]+a0,hpmcounter30h\n+[ \t]+[0-9a-f]+:[  \t]+c9f02573[    \t]+csrr[        \t]+a0,hpmcounter31h\n+[ \t]+[0-9a-f]+:[  \t]+10002573[    \t]+csrr[        \t]+a0,sstatus\n+[ \t]+[0-9a-f]+:[  \t]+10202573[    \t]+csrr[        \t]+a0,sedeleg\n+[ \t]+[0-9a-f]+:[  \t]+10302573[    \t]+csrr[        \t]+a0,sideleg\n+[ \t]+[0-9a-f]+:[  \t]+10402573[    \t]+csrr[        \t]+a0,sie\n+[ \t]+[0-9a-f]+:[  \t]+10502573[    \t]+csrr[        \t]+a0,stvec\n+[ \t]+[0-9a-f]+:[  \t]+10602573[    \t]+csrr[        \t]+a0,scounteren\n+[ \t]+[0-9a-f]+:[  \t]+14002573[    \t]+csrr[        \t]+a0,sscratch\n+[ \t]+[0-9a-f]+:[  \t]+14102573[    \t]+csrr[        \t]+a0,sepc\n+[ \t]+[0-9a-f]+:[  \t]+14202573[    \t]+csrr[        \t]+a0,scause\n+[ \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,stval\n+[ \t]+[0-9a-f]+:[  \t]+14402573[    \t]+csrr[        \t]+a0,sip\n+[ \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,satp\n+[ \t]+[0-9a-f]+:[  \t]+f1102573[    \t]+csrr[        \t]+a0,mvendorid\n+[ \t]+[0-9a-f]+:[  \t]+f1202573[    \t]+csrr[        \t]+a0,marchid\n+[ \t]+[0-9a-f]+:[  \t]+f1302573[    \t]+csrr[        \t]+a0,mimpid\n+[ \t]+[0-9a-f]+:[  \t]+f1402573[    \t]+csrr[        \t]+a0,mhartid\n+[ \t]+[0-9a-f]+:[  \t]+30002573[    \t]+csrr[        \t]+a0,mstatus\n+[ \t]+[0-9a-f]+:[  \t]+30102573[    \t]+csrr[        \t]+a0,misa\n+[ \t]+[0-9a-f]+:[  \t]+30202573[    \t]+csrr[        \t]+a0,medeleg\n+[ \t]+[0-9a-f]+:[  \t]+30302573[    \t]+csrr[        \t]+a0,mideleg\n+[ \t]+[0-9a-f]+:[  \t]+30402573[    \t]+csrr[        \t]+a0,mie\n+[ \t]+[0-9a-f]+:[  \t]+30502573[    \t]+csrr[        \t]+a0,mtvec\n+[ \t]+[0-9a-f]+:[  \t]+30602573[    \t]+csrr[        \t]+a0,mcounteren\n+[ \t]+[0-9a-f]+:[  \t]+34002573[    \t]+csrr[        \t]+a0,mscratch\n+[ \t]+[0-9a-f]+:[  \t]+34102573[    \t]+csrr[        \t]+a0,mepc\n+[ \t]+[0-9a-f]+:[  \t]+34202573[    \t]+csrr[        \t]+a0,mcause\n+[ \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mtval\n+[ \t]+[0-9a-f]+:[  \t]+34402573[    \t]+csrr[        \t]+a0,mip\n+[ \t]+[0-9a-f]+:[  \t]+3a002573[    \t]+csrr[        \t]+a0,pmpcfg0\n+[ \t]+[0-9a-f]+:[  \t]+3a102573[    \t]+csrr[        \t]+a0,pmpcfg1\n+[ \t]+[0-9a-f]+:[  \t]+3a202573[    \t]+csrr[        \t]+a0,pmpcfg2\n+[ \t]+[0-9a-f]+:[  \t]+3a302573[    \t]+csrr[        \t]+a0,pmpcfg3\n+[ \t]+[0-9a-f]+:[  \t]+3b002573[    \t]+csrr[        \t]+a0,pmpaddr0\n+[ \t]+[0-9a-f]+:[  \t]+3b102573[    \t]+csrr[        \t]+a0,pmpaddr1\n+[ \t]+[0-9a-f]+:[  \t]+3b202573[    \t]+csrr[        \t]+a0,pmpaddr2\n+[ \t]+[0-9a-f]+:[  \t]+3b302573[    \t]+csrr[        \t]+a0,pmpaddr3\n+[ \t]+[0-9a-f]+:[  \t]+3b402573[    \t]+csrr[        \t]+a0,pmpaddr4\n+[ \t]+[0-9a-f]+:[  \t]+3b502573[    \t]+csrr[        \t]+a0,pmpaddr5\n+[ \t]+[0-9a-f]+:[  \t]+3b602573[    \t]+csrr[        \t]+a0,pmpaddr6\n+[ \t]+[0-9a-f]+:[  \t]+3b702573[    \t]+csrr[        \t]+a0,pmpaddr7\n+[ \t]+[0-9a-f]+:[  \t]+3b802573[    \t]+csrr[        \t]+a0,pmpaddr8\n+[ \t]+[0-9a-f]+:[  \t]+3b902573[    \t]+csrr[        \t]+a0,pmpaddr9\n+[ \t]+[0-9a-f]+:[  \t]+3ba02573[    \t]+csrr[        \t]+a0,pmpaddr10\n+[ \t]+[0-9a-f]+:[  \t]+3bb02573[    \t]+csrr[        \t]+a0,pmpaddr11\n+[ \t]+[0-9a-f]+:[  \t]+3bc02573[    \t]+csrr[        \t]+a0,pmpaddr12\n+[ \t]+[0-9a-f]+:[  \t]+3bd02573[    \t]+csrr[        \t]+a0,pmpaddr13\n+[ \t]+[0-9a-f]+:[  \t]+3be02573[    \t]+csrr[        \t]+a0,pmpaddr14\n+[ \t]+[0-9a-f]+:[  \t]+3bf02573[    \t]+csrr[        \t]+a0,pmpaddr15\n+[ \t]+[0-9a-f]+:[  \t]+b0002573[    \t]+csrr[        \t]+a0,mcycle\n+[ \t]+[0-9a-f]+:[  \t]+b0202573[    \t]+csrr[        \t]+a0,minstret\n+[ \t]+[0-9a-f]+:[  \t]+b0302573[    \t]+csrr[        \t]+a0,mhpmcounter3\n+[ \t]+[0-9a-f]+:[  \t]+b0402573[    \t]+csrr[        \t]+a0,mhpmcounter4\n+[ \t]+[0-9a-f]+:[  \t]+b0502573[    \t]+csrr[        \t]+a0,mhpmcounter5\n+[ \t]+[0-9a-f]+:[  \t]+b0602573[    \t]+csrr[        \t]+a0,mhpmcounter6\n+[ \t]+[0-9a-f]+:[  \t]+b0702573[    \t]+csrr[        \t]+a0,mhpmcounter7\n+[ \t]+[0-9a-f]+:[  \t]+b0802573[    \t]+csrr[        \t]+a0,mhpmcounter8\n+[ \t]+[0-9a-f]+:[  \t]+b0902573[    \t]+csrr[        \t]+a0,mhpmcounter9\n+[ \t]+[0-9a-f]+:[  \t]+b0a02573[    \t]+csrr[        \t]+a0,mhpmcounter10\n+[ \t]+[0-9a-f]+:[  \t]+b0b02573[    \t]+csrr[        \t]+a0,mhpmcounter11\n+[ \t]+[0-9a-f]+:[  \t]+b0c02573[    \t]+csrr[        \t]+a0,mhpmcounter12\n+[ \t]+[0-9a-f]+:[  \t]+b0d02573[    \t]+csrr[        \t]+a0,mhpmcounter13\n+[ \t]+[0-9a-f]+:[  \t]+b0e02573[    \t]+csrr[        \t]+a0,mhpmcounter14\n+[ \t]+[0-9a-f]+:[  \t]+b0f02573[    \t]+csrr[        \t]+a0,mhpmcounter15\n+[ \t]+[0-9a-f]+:[  \t]+b1002573[    \t]+csrr[        \t]+a0,mhpmcounter16\n+[ \t]+[0-9a-f]+:[  \t]+b1102573[    \t]+csrr[        \t]+a0,mhpmcounter17\n+[ \t]+[0-9a-f]+:[  \t]+b1202573[    \t]+csrr[        \t]+a0,mhpmcounter18\n+[ \t]+[0-9a-f]+:[  \t]+b1302573[    \t]+csrr[        \t]+a0,mhpmcounter19\n+[ \t]+[0-9a-f]+:[  \t]+b1402573[    \t]+csrr[        \t]+a0,mhpmcounter20\n+[ \t]+[0-9a-f]+:[  \t]+b1502573[    \t]+csrr[        \t]+a0,mhpmcounter21\n+[ \t]+[0-9a-f]+:[  \t]+b1602573[    \t]+csrr[        \t]+a0,mhpmcounter22\n+[ \t]+[0-9a-f]+:[  \t]+b1702573[    \t]+csrr[        \t]+a0,mhpmcounter23\n+[ \t]+[0-9a-f]+:[  \t]+b1802573[    \t]+csrr[        \t]+a0,mhpmcounter24\n+[ \t]+[0-9a-f]+:[  \t]+b1902573[    \t]+csrr[        \t]+a0,mhpmcounter25\n+[ \t]+[0-9a-f]+:[  \t]+b1a02573[    \t]+csrr[        \t]+a0,mhpmcounter26\n+[ \t]+[0-9a-f]+:[  \t]+b1b02573[    \t]+csrr[        \t]+a0,mhpmcounter27\n+[ \t]+[0-9a-f]+:[  \t]+b1c02573[    \t]+csrr[        \t]+a0,mhpmcounter28\n+[ \t]+[0-9a-f]+:[  \t]+b1d02573[    \t]+csrr[        \t]+a0,mhpmcounter29\n+[ \t]+[0-9a-f]+:[  \t]+b1e02573[    \t]+csrr[        \t]+a0,mhpmcounter30\n+[ \t]+[0-9a-f]+:[  \t]+b1f02573[    \t]+csrr[        \t]+a0,mhpmcounter31\n+[ \t]+[0-9a-f]+:[  \t]+b8002573[    \t]+csrr[        \t]+a0,mcycleh\n+[ \t]+[0-9a-f]+:[  \t]+b8202573[    \t]+csrr[        \t]+a0,minstreth\n+[ \t]+[0-9a-f]+:[  \t]+b8302573[    \t]+csrr[        \t]+a0,mhpmcounter3h\n+[ \t]+[0-9a-f]+:[  \t]+b8402573[    \t]+csrr[        \t]+a0,mhpmcounter4h\n+[ \t]+[0-9a-f]+:[  \t]+b8502573[    \t]+csrr[        \t]+a0,mhpmcounter5h\n+[ \t]+[0-9a-f]+:[  \t]+b8602573[    \t]+csrr[        \t]+a0,mhpmcounter6h\n+[ \t]+[0-9a-f]+:[  \t]+b8702573[    \t]+csrr[        \t]+a0,mhpmcounter7h\n+[ \t]+[0-9a-f]+:[  \t]+b8802573[    \t]+csrr[        \t]+a0,mhpmcounter8h\n+[ \t]+[0-9a-f]+:[  \t]+b8902573[    \t]+csrr[        \t]+a0,mhpmcounter9h\n+[ \t]+[0-9a-f]+:[  \t]+b8a02573[    \t]+csrr[        \t]+a0,mhpmcounter10h\n+[ \t]+[0-9a-f]+:[  \t]+b8b02573[    \t]+csrr[        \t]+a0,mhpmcounter11h\n+[ \t]+[0-9a-f]+:[  \t]+b8c02573[    \t]+csrr[        \t]+a0,mhpmcounter12h\n+[ \t]+[0-9a-f]+:[  \t]+b8d02573[    \t]+csrr[        \t]+a0,mhpmcounter13h\n+[ \t]+[0-9a-f]+:[  \t]+b8e02573[    \t]+csrr[        \t]+a0,mhpmcounter14h\n+[ \t]+[0-9a-f]+:[  \t]+b8f02573[    \t]+csrr[        \t]+a0,mhpmcounter15h\n+[ \t]+[0-9a-f]+:[  \t]+b9002573[    \t]+csrr[        \t]+a0,mhpmcounter16h\n+[ \t]+[0-9a-f]+:[  \t]+b9102573[    \t]+csrr[        \t]+a0,mhpmcounter17h\n+[ \t]+[0-9a-f]+:[  \t]+b9202573[    \t]+csrr[        \t]+a0,mhpmcounter18h\n+[ \t]+[0-9a-f]+:[  \t]+b9302573[    \t]+csrr[        \t]+a0,mhpmcounter19h\n+[ \t]+[0-9a-f]+:[  \t]+b9402573[    \t]+csrr[        \t]+a0,mhpmcounter20h\n+[ \t]+[0-9a-f]+:[  \t]+b9502573[    \t]+csrr[        \t]+a0,mhpmcounter21h\n+[ \t]+[0-9a-f]+:[  \t]+b9602573[    \t]+csrr[        \t]+a0,mhpmcounter22h\n+[ \t]+[0-9a-f]+:[  \t]+b9702573[    \t]+csrr[        \t]+a0,mhpmcounter23h\n+[ \t]+[0-9a-f]+:[  \t]+b9802573[    \t]+csrr[        \t]+a0,mhpmcounter24h\n+[ \t]+[0-9a-f]+:[  \t]+b9902573[    \t]+csrr[        \t]+a0,mhpmcounter25h\n+[ \t]+[0-9a-f]+:[  \t]+b9a02573[    \t]+csrr[        \t]+a0,mhpmcounter26h\n+[ \t]+[0-9a-f]+:[  \t]+b9b02573[    \t]+csrr[        \t]+a0,mhpmcounter27h\n+[ \t]+[0-9a-f]+:[  \t]+b9c02573[    \t]+csrr[        \t]+a0,mhpmcounter28h\n+[ \t]+[0-9a-f]+:[  \t]+b9d02573[    \t]+csrr[        \t]+a0,mhpmcounter29h\n+[ \t]+[0-9a-f]+:[  \t]+b9e02573[    \t]+csrr[        \t]+a0,mhpmcounter30h\n+[ \t]+[0-9a-f]+:[  \t]+b9f02573[    \t]+csrr[        \t]+a0,mhpmcounter31h\n+[ \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,0x320\n+[ \t]+[0-9a-f]+:[  \t]+32302573[    \t]+csrr[        \t]+a0,mhpmevent3\n+[ \t]+[0-9a-f]+:[  \t]+32402573[    \t]+csrr[        \t]+a0,mhpmevent4\n+[ \t]+[0-9a-f]+:[  \t]+32502573[    \t]+csrr[        \t]+a0,mhpmevent5\n+[ \t]+[0-9a-f]+:[  \t]+32602573[    \t]+csrr[        \t]+a0,mhpmevent6\n+[ \t]+[0-9a-f]+:[  \t]+32702573[    \t]+csrr[        \t]+a0,mhpmevent7\n+[ \t]+[0-9a-f]+:[  \t]+32802573[    \t]+csrr[        \t]+a0,mhpmevent8\n+[ \t]+[0-9a-f]+:[  \t]+32902573[    \t]+csrr[        \t]+a0,mhpmevent9\n+[ \t]+[0-9a-f]+:[  \t]+32a02573[    \t]+csrr[        \t]+a0,mhpmevent10\n+[ \t]+[0-9a-f]+:[  \t]+32b02573[    \t]+csrr[        \t]+a0,mhpmevent11\n+[ \t]+[0-9a-f]+:[  \t]+32c02573[    \t]+csrr[        \t]+a0,mhpmevent12\n+[ \t]+[0-9a-f]+:[  \t]+32d02573[    \t]+csrr[        \t]+a0,mhpmevent13\n+[ \t]+[0-9a-f]+:[  \t]+32e02573[    \t]+csrr[        \t]+a0,mhpmevent14\n+[ \t]+[0-9a-f]+:[  \t]+32f02573[    \t]+csrr[        \t]+a0,mhpmevent15\n+[ \t]+[0-9a-f]+:[  \t]+33002573[    \t]+csrr[        \t]+a0,mhpmevent16\n+[ \t]+[0-9a-f]+:[  \t]+33102573[    \t]+csrr[        \t]+a0,mhpmevent17\n+[ \t]+[0-9a-f]+:[  \t]+33202573[    \t]+csrr[        \t]+a0,mhpmevent18\n+[ \t]+[0-9a-f]+:[  \t]+33302573[    \t]+csrr[        \t]+a0,mhpmevent19\n+[ \t]+[0-9a-f]+:[  \t]+33402573[    \t]+csrr[        \t]+a0,mhpmevent20\n+[ \t]+[0-9a-f]+:[  \t]+33502573[    \t]+csrr[        \t]+a0,mhpmevent21\n+[ \t]+[0-9a-f]+:[  \t]+33602573[    \t]+csrr[        \t]+a0,mhpmevent22\n+[ \t]+[0-9a-f]+:[  \t]+33702573[    \t]+csrr[        \t]+a0,mhpmevent23\n+[ \t]+[0-9a-f]+:[  \t]+33802573[    \t]+csrr[        \t]+a0,mhpmevent24\n+[ \t]+[0-9a-f]+:[  \t]+33902573[    \t]+csrr[        \t]+a0,mhpmevent25\n+[ \t]+[0-9a-f]+:[  \t]+33a02573[    \t]+csrr[        \t]+a0,mhpmevent26\n+[ \t]+[0-9a-f]+:[  \t]+33b02573[    \t]+csrr[        \t]+a0,mhpmevent27\n+[ \t]+[0-9a-f]+:[  \t]+33c02573[    \t]+csrr[        \t]+a0,mhpmevent28\n+[ \t]+[0-9a-f]+:[  \t]+33d02573[    \t]+csrr[        \t]+a0,mhpmevent29\n+[ \t]+[0-9a-f]+:[  \t]+33e02573[    \t]+csrr[        \t]+a0,mhpmevent30\n+[ \t]+[0-9a-f]+:[  \t]+33f02573[    \t]+csrr[        \t]+a0,mhpmevent31\n+[ \t]+[0-9a-f]+:[  \t]+7a002573[    \t]+csrr[        \t]+a0,tselect\n+[ \t]+[0-9a-f]+:[  \t]+7a102573[    \t]+csrr[        \t]+a0,tdata1\n+[ \t]+[0-9a-f]+:[  \t]+7a202573[    \t]+csrr[        \t]+a0,tdata2\n+[ \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n+[ \t]+[0-9a-f]+:[  \t]+7b002573[    \t]+csrr[        \t]+a0,dcsr\n+[ \t]+[0-9a-f]+:[  \t]+7b102573[    \t]+csrr[        \t]+a0,dpc\n+[ \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch\n+[ \t]+[0-9a-f]+:[  \t]+7b302573[    \t]+csrr[        \t]+a0,0x7b3\n+[ \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,utval\n+[ \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,stval\n+[ \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,satp\n+[ \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mtval\n+[ \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,0x320\n+[ \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch\n+[ \t]+[0-9a-f]+:[  \t]+20002573[    \t]+csrr[        \t]+a0,0x200\n+[ \t]+[0-9a-f]+:[  \t]+20202573[    \t]+csrr[        \t]+a0,0x202\n+[ \t]+[0-9a-f]+:[  \t]+20302573[    \t]+csrr[        \t]+a0,0x203\n+[ \t]+[0-9a-f]+:[  \t]+20402573[    \t]+csrr[        \t]+a0,0x204\n+[ \t]+[0-9a-f]+:[  \t]+20502573[    \t]+csrr[        \t]+a0,0x205\n+[ \t]+[0-9a-f]+:[  \t]+24002573[    \t]+csrr[        \t]+a0,0x240\n+[ \t]+[0-9a-f]+:[  \t]+24102573[    \t]+csrr[        \t]+a0,0x241\n+[ \t]+[0-9a-f]+:[  \t]+24202573[    \t]+csrr[        \t]+a0,0x242\n+[ \t]+[0-9a-f]+:[  \t]+24302573[    \t]+csrr[        \t]+a0,0x243\n+[ \t]+[0-9a-f]+:[  \t]+24402573[    \t]+csrr[        \t]+a0,0x244\n+[ \t]+[0-9a-f]+:[  \t]+38002573[    \t]+csrr[        \t]+a0,0x380\n+[ \t]+[0-9a-f]+:[  \t]+38102573[    \t]+csrr[        \t]+a0,0x381\n+[ \t]+[0-9a-f]+:[  \t]+38202573[    \t]+csrr[        \t]+a0,0x382\n+[ \t]+[0-9a-f]+:[  \t]+38302573[    \t]+csrr[        \t]+a0,0x383\n+[ \t]+[0-9a-f]+:[  \t]+38402573[    \t]+csrr[        \t]+a0,0x384\n+[ \t]+[0-9a-f]+:[  \t]+38502573[    \t]+csrr[        \t]+a0,0x385\n+[ \t]+[0-9a-f]+:[  \t]+32102573[    \t]+csrr[        \t]+a0,0x321\n+[ \t]+[0-9a-f]+:[  \t]+32202573[    \t]+csrr[        \t]+a0,0x322"
    },
    {
      "sha": "225f4c4aa7e5943e7a506e628c5c83f45379a498",
      "filename": "gas/testsuite/gas/riscv/priv-reg-version-1p11.d",
      "status": "added",
      "additions": 257,
      "deletions": 0,
      "changes": 257,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-version-1p11.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,257 @@\n+#as: -march=rv32if -mpriv-spec=1.11\n+#source: priv-reg.s\n+#objdump: -dr -Mpriv-spec=1.11\n+\n+.*:[  \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[     \t]+[0-9a-f]+:[  \t]+00002573[    \t]+csrr[        \t]+a0,ustatus\n+[     \t]+[0-9a-f]+:[  \t]+00402573[    \t]+csrr[        \t]+a0,uie\n+[     \t]+[0-9a-f]+:[  \t]+00502573[    \t]+csrr[        \t]+a0,utvec\n+[     \t]+[0-9a-f]+:[  \t]+04002573[    \t]+csrr[        \t]+a0,uscratch\n+[     \t]+[0-9a-f]+:[  \t]+04102573[    \t]+csrr[        \t]+a0,uepc\n+[     \t]+[0-9a-f]+:[  \t]+04202573[    \t]+csrr[        \t]+a0,ucause\n+[     \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,utval\n+[     \t]+[0-9a-f]+:[  \t]+04402573[    \t]+csrr[        \t]+a0,uip\n+[     \t]+[0-9a-f]+:[  \t]+00102573[    \t]+frflags[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+00202573[    \t]+frrm[        \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+00302573[    \t]+frcsr[       \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0002573[    \t]+rdcycle[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0102573[    \t]+rdtime[      \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0202573[    \t]+rdinstret[   \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0302573[    \t]+csrr[        \t]+a0,hpmcounter3\n+[     \t]+[0-9a-f]+:[  \t]+c0402573[    \t]+csrr[        \t]+a0,hpmcounter4\n+[     \t]+[0-9a-f]+:[  \t]+c0502573[    \t]+csrr[        \t]+a0,hpmcounter5\n+[     \t]+[0-9a-f]+:[  \t]+c0602573[    \t]+csrr[        \t]+a0,hpmcounter6\n+[     \t]+[0-9a-f]+:[  \t]+c0702573[    \t]+csrr[        \t]+a0,hpmcounter7\n+[     \t]+[0-9a-f]+:[  \t]+c0802573[    \t]+csrr[        \t]+a0,hpmcounter8\n+[     \t]+[0-9a-f]+:[  \t]+c0902573[    \t]+csrr[        \t]+a0,hpmcounter9\n+[     \t]+[0-9a-f]+:[  \t]+c0a02573[    \t]+csrr[        \t]+a0,hpmcounter10\n+[     \t]+[0-9a-f]+:[  \t]+c0b02573[    \t]+csrr[        \t]+a0,hpmcounter11\n+[     \t]+[0-9a-f]+:[  \t]+c0c02573[    \t]+csrr[        \t]+a0,hpmcounter12\n+[     \t]+[0-9a-f]+:[  \t]+c0d02573[    \t]+csrr[        \t]+a0,hpmcounter13\n+[     \t]+[0-9a-f]+:[  \t]+c0e02573[    \t]+csrr[        \t]+a0,hpmcounter14\n+[     \t]+[0-9a-f]+:[  \t]+c0f02573[    \t]+csrr[        \t]+a0,hpmcounter15\n+[     \t]+[0-9a-f]+:[  \t]+c1002573[    \t]+csrr[        \t]+a0,hpmcounter16\n+[     \t]+[0-9a-f]+:[  \t]+c1102573[    \t]+csrr[        \t]+a0,hpmcounter17\n+[     \t]+[0-9a-f]+:[  \t]+c1202573[    \t]+csrr[        \t]+a0,hpmcounter18\n+[     \t]+[0-9a-f]+:[  \t]+c1302573[    \t]+csrr[        \t]+a0,hpmcounter19\n+[     \t]+[0-9a-f]+:[  \t]+c1402573[    \t]+csrr[        \t]+a0,hpmcounter20\n+[     \t]+[0-9a-f]+:[  \t]+c1502573[    \t]+csrr[        \t]+a0,hpmcounter21\n+[     \t]+[0-9a-f]+:[  \t]+c1602573[    \t]+csrr[        \t]+a0,hpmcounter22\n+[     \t]+[0-9a-f]+:[  \t]+c1702573[    \t]+csrr[        \t]+a0,hpmcounter23\n+[     \t]+[0-9a-f]+:[  \t]+c1802573[    \t]+csrr[        \t]+a0,hpmcounter24\n+[     \t]+[0-9a-f]+:[  \t]+c1902573[    \t]+csrr[        \t]+a0,hpmcounter25\n+[     \t]+[0-9a-f]+:[  \t]+c1a02573[    \t]+csrr[        \t]+a0,hpmcounter26\n+[     \t]+[0-9a-f]+:[  \t]+c1b02573[    \t]+csrr[        \t]+a0,hpmcounter27\n+[     \t]+[0-9a-f]+:[  \t]+c1c02573[    \t]+csrr[        \t]+a0,hpmcounter28\n+[     \t]+[0-9a-f]+:[  \t]+c1d02573[    \t]+csrr[        \t]+a0,hpmcounter29\n+[     \t]+[0-9a-f]+:[  \t]+c1e02573[    \t]+csrr[        \t]+a0,hpmcounter30\n+[     \t]+[0-9a-f]+:[  \t]+c1f02573[    \t]+csrr[        \t]+a0,hpmcounter31\n+[     \t]+[0-9a-f]+:[  \t]+c8002573[    \t]+rdcycleh[    \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8102573[    \t]+rdtimeh[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8202573[    \t]+rdinstreth[  \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8302573[    \t]+csrr[        \t]+a0,hpmcounter3h\n+[     \t]+[0-9a-f]+:[  \t]+c8402573[    \t]+csrr[        \t]+a0,hpmcounter4h\n+[     \t]+[0-9a-f]+:[  \t]+c8502573[    \t]+csrr[        \t]+a0,hpmcounter5h\n+[     \t]+[0-9a-f]+:[  \t]+c8602573[    \t]+csrr[        \t]+a0,hpmcounter6h\n+[     \t]+[0-9a-f]+:[  \t]+c8702573[    \t]+csrr[        \t]+a0,hpmcounter7h\n+[     \t]+[0-9a-f]+:[  \t]+c8802573[    \t]+csrr[        \t]+a0,hpmcounter8h\n+[     \t]+[0-9a-f]+:[  \t]+c8902573[    \t]+csrr[        \t]+a0,hpmcounter9h\n+[     \t]+[0-9a-f]+:[  \t]+c8a02573[    \t]+csrr[        \t]+a0,hpmcounter10h\n+[     \t]+[0-9a-f]+:[  \t]+c8b02573[    \t]+csrr[        \t]+a0,hpmcounter11h\n+[     \t]+[0-9a-f]+:[  \t]+c8c02573[    \t]+csrr[        \t]+a0,hpmcounter12h\n+[     \t]+[0-9a-f]+:[  \t]+c8d02573[    \t]+csrr[        \t]+a0,hpmcounter13h\n+[     \t]+[0-9a-f]+:[  \t]+c8e02573[    \t]+csrr[        \t]+a0,hpmcounter14h\n+[     \t]+[0-9a-f]+:[  \t]+c8f02573[    \t]+csrr[        \t]+a0,hpmcounter15h\n+[     \t]+[0-9a-f]+:[  \t]+c9002573[    \t]+csrr[        \t]+a0,hpmcounter16h\n+[     \t]+[0-9a-f]+:[  \t]+c9102573[    \t]+csrr[        \t]+a0,hpmcounter17h\n+[     \t]+[0-9a-f]+:[  \t]+c9202573[    \t]+csrr[        \t]+a0,hpmcounter18h\n+[     \t]+[0-9a-f]+:[  \t]+c9302573[    \t]+csrr[        \t]+a0,hpmcounter19h\n+[     \t]+[0-9a-f]+:[  \t]+c9402573[    \t]+csrr[        \t]+a0,hpmcounter20h\n+[     \t]+[0-9a-f]+:[  \t]+c9502573[    \t]+csrr[        \t]+a0,hpmcounter21h\n+[     \t]+[0-9a-f]+:[  \t]+c9602573[    \t]+csrr[        \t]+a0,hpmcounter22h\n+[     \t]+[0-9a-f]+:[  \t]+c9702573[    \t]+csrr[        \t]+a0,hpmcounter23h\n+[     \t]+[0-9a-f]+:[  \t]+c9802573[    \t]+csrr[        \t]+a0,hpmcounter24h\n+[     \t]+[0-9a-f]+:[  \t]+c9902573[    \t]+csrr[        \t]+a0,hpmcounter25h\n+[     \t]+[0-9a-f]+:[  \t]+c9a02573[    \t]+csrr[        \t]+a0,hpmcounter26h\n+[     \t]+[0-9a-f]+:[  \t]+c9b02573[    \t]+csrr[        \t]+a0,hpmcounter27h\n+[     \t]+[0-9a-f]+:[  \t]+c9c02573[    \t]+csrr[        \t]+a0,hpmcounter28h\n+[     \t]+[0-9a-f]+:[  \t]+c9d02573[    \t]+csrr[        \t]+a0,hpmcounter29h\n+[     \t]+[0-9a-f]+:[  \t]+c9e02573[    \t]+csrr[        \t]+a0,hpmcounter30h\n+[     \t]+[0-9a-f]+:[  \t]+c9f02573[    \t]+csrr[        \t]+a0,hpmcounter31h\n+[     \t]+[0-9a-f]+:[  \t]+10002573[    \t]+csrr[        \t]+a0,sstatus\n+[     \t]+[0-9a-f]+:[  \t]+10202573[    \t]+csrr[        \t]+a0,sedeleg\n+[     \t]+[0-9a-f]+:[  \t]+10302573[    \t]+csrr[        \t]+a0,sideleg\n+[     \t]+[0-9a-f]+:[  \t]+10402573[    \t]+csrr[        \t]+a0,sie\n+[     \t]+[0-9a-f]+:[  \t]+10502573[    \t]+csrr[        \t]+a0,stvec\n+[     \t]+[0-9a-f]+:[  \t]+10602573[    \t]+csrr[        \t]+a0,scounteren\n+[     \t]+[0-9a-f]+:[  \t]+14002573[    \t]+csrr[        \t]+a0,sscratch\n+[     \t]+[0-9a-f]+:[  \t]+14102573[    \t]+csrr[        \t]+a0,sepc\n+[     \t]+[0-9a-f]+:[  \t]+14202573[    \t]+csrr[        \t]+a0,scause\n+[     \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,stval\n+[     \t]+[0-9a-f]+:[  \t]+14402573[    \t]+csrr[        \t]+a0,sip\n+[     \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,satp\n+[     \t]+[0-9a-f]+:[  \t]+f1102573[    \t]+csrr[        \t]+a0,mvendorid\n+[     \t]+[0-9a-f]+:[  \t]+f1202573[    \t]+csrr[        \t]+a0,marchid\n+[     \t]+[0-9a-f]+:[  \t]+f1302573[    \t]+csrr[        \t]+a0,mimpid\n+[     \t]+[0-9a-f]+:[  \t]+f1402573[    \t]+csrr[        \t]+a0,mhartid\n+[     \t]+[0-9a-f]+:[  \t]+30002573[    \t]+csrr[        \t]+a0,mstatus\n+[     \t]+[0-9a-f]+:[  \t]+30102573[    \t]+csrr[        \t]+a0,misa\n+[     \t]+[0-9a-f]+:[  \t]+30202573[    \t]+csrr[        \t]+a0,medeleg\n+[     \t]+[0-9a-f]+:[  \t]+30302573[    \t]+csrr[        \t]+a0,mideleg\n+[     \t]+[0-9a-f]+:[  \t]+30402573[    \t]+csrr[        \t]+a0,mie\n+[     \t]+[0-9a-f]+:[  \t]+30502573[    \t]+csrr[        \t]+a0,mtvec\n+[     \t]+[0-9a-f]+:[  \t]+30602573[    \t]+csrr[        \t]+a0,mcounteren\n+[     \t]+[0-9a-f]+:[  \t]+34002573[    \t]+csrr[        \t]+a0,mscratch\n+[     \t]+[0-9a-f]+:[  \t]+34102573[    \t]+csrr[        \t]+a0,mepc\n+[     \t]+[0-9a-f]+:[  \t]+34202573[    \t]+csrr[        \t]+a0,mcause\n+[     \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mtval\n+[     \t]+[0-9a-f]+:[  \t]+34402573[    \t]+csrr[        \t]+a0,mip\n+[     \t]+[0-9a-f]+:[  \t]+3a002573[    \t]+csrr[        \t]+a0,pmpcfg0\n+[     \t]+[0-9a-f]+:[  \t]+3a102573[    \t]+csrr[        \t]+a0,pmpcfg1\n+[     \t]+[0-9a-f]+:[  \t]+3a202573[    \t]+csrr[        \t]+a0,pmpcfg2\n+[     \t]+[0-9a-f]+:[  \t]+3a302573[    \t]+csrr[        \t]+a0,pmpcfg3\n+[     \t]+[0-9a-f]+:[  \t]+3b002573[    \t]+csrr[        \t]+a0,pmpaddr0\n+[     \t]+[0-9a-f]+:[  \t]+3b102573[    \t]+csrr[        \t]+a0,pmpaddr1\n+[     \t]+[0-9a-f]+:[  \t]+3b202573[    \t]+csrr[        \t]+a0,pmpaddr2\n+[     \t]+[0-9a-f]+:[  \t]+3b302573[    \t]+csrr[        \t]+a0,pmpaddr3\n+[     \t]+[0-9a-f]+:[  \t]+3b402573[    \t]+csrr[        \t]+a0,pmpaddr4\n+[     \t]+[0-9a-f]+:[  \t]+3b502573[    \t]+csrr[        \t]+a0,pmpaddr5\n+[     \t]+[0-9a-f]+:[  \t]+3b602573[    \t]+csrr[        \t]+a0,pmpaddr6\n+[     \t]+[0-9a-f]+:[  \t]+3b702573[    \t]+csrr[        \t]+a0,pmpaddr7\n+[     \t]+[0-9a-f]+:[  \t]+3b802573[    \t]+csrr[        \t]+a0,pmpaddr8\n+[     \t]+[0-9a-f]+:[  \t]+3b902573[    \t]+csrr[        \t]+a0,pmpaddr9\n+[     \t]+[0-9a-f]+:[  \t]+3ba02573[    \t]+csrr[        \t]+a0,pmpaddr10\n+[     \t]+[0-9a-f]+:[  \t]+3bb02573[    \t]+csrr[        \t]+a0,pmpaddr11\n+[     \t]+[0-9a-f]+:[  \t]+3bc02573[    \t]+csrr[        \t]+a0,pmpaddr12\n+[     \t]+[0-9a-f]+:[  \t]+3bd02573[    \t]+csrr[        \t]+a0,pmpaddr13\n+[     \t]+[0-9a-f]+:[  \t]+3be02573[    \t]+csrr[        \t]+a0,pmpaddr14\n+[     \t]+[0-9a-f]+:[  \t]+3bf02573[    \t]+csrr[        \t]+a0,pmpaddr15\n+[     \t]+[0-9a-f]+:[  \t]+b0002573[    \t]+csrr[        \t]+a0,mcycle\n+[     \t]+[0-9a-f]+:[  \t]+b0202573[    \t]+csrr[        \t]+a0,minstret\n+[     \t]+[0-9a-f]+:[  \t]+b0302573[    \t]+csrr[        \t]+a0,mhpmcounter3\n+[     \t]+[0-9a-f]+:[  \t]+b0402573[    \t]+csrr[        \t]+a0,mhpmcounter4\n+[     \t]+[0-9a-f]+:[  \t]+b0502573[    \t]+csrr[        \t]+a0,mhpmcounter5\n+[     \t]+[0-9a-f]+:[  \t]+b0602573[    \t]+csrr[        \t]+a0,mhpmcounter6\n+[     \t]+[0-9a-f]+:[  \t]+b0702573[    \t]+csrr[        \t]+a0,mhpmcounter7\n+[     \t]+[0-9a-f]+:[  \t]+b0802573[    \t]+csrr[        \t]+a0,mhpmcounter8\n+[     \t]+[0-9a-f]+:[  \t]+b0902573[    \t]+csrr[        \t]+a0,mhpmcounter9\n+[     \t]+[0-9a-f]+:[  \t]+b0a02573[    \t]+csrr[        \t]+a0,mhpmcounter10\n+[     \t]+[0-9a-f]+:[  \t]+b0b02573[    \t]+csrr[        \t]+a0,mhpmcounter11\n+[     \t]+[0-9a-f]+:[  \t]+b0c02573[    \t]+csrr[        \t]+a0,mhpmcounter12\n+[     \t]+[0-9a-f]+:[  \t]+b0d02573[    \t]+csrr[        \t]+a0,mhpmcounter13\n+[     \t]+[0-9a-f]+:[  \t]+b0e02573[    \t]+csrr[        \t]+a0,mhpmcounter14\n+[     \t]+[0-9a-f]+:[  \t]+b0f02573[    \t]+csrr[        \t]+a0,mhpmcounter15\n+[     \t]+[0-9a-f]+:[  \t]+b1002573[    \t]+csrr[        \t]+a0,mhpmcounter16\n+[     \t]+[0-9a-f]+:[  \t]+b1102573[    \t]+csrr[        \t]+a0,mhpmcounter17\n+[     \t]+[0-9a-f]+:[  \t]+b1202573[    \t]+csrr[        \t]+a0,mhpmcounter18\n+[     \t]+[0-9a-f]+:[  \t]+b1302573[    \t]+csrr[        \t]+a0,mhpmcounter19\n+[     \t]+[0-9a-f]+:[  \t]+b1402573[    \t]+csrr[        \t]+a0,mhpmcounter20\n+[     \t]+[0-9a-f]+:[  \t]+b1502573[    \t]+csrr[        \t]+a0,mhpmcounter21\n+[     \t]+[0-9a-f]+:[  \t]+b1602573[    \t]+csrr[        \t]+a0,mhpmcounter22\n+[     \t]+[0-9a-f]+:[  \t]+b1702573[    \t]+csrr[        \t]+a0,mhpmcounter23\n+[     \t]+[0-9a-f]+:[  \t]+b1802573[    \t]+csrr[        \t]+a0,mhpmcounter24\n+[     \t]+[0-9a-f]+:[  \t]+b1902573[    \t]+csrr[        \t]+a0,mhpmcounter25\n+[     \t]+[0-9a-f]+:[  \t]+b1a02573[    \t]+csrr[        \t]+a0,mhpmcounter26\n+[     \t]+[0-9a-f]+:[  \t]+b1b02573[    \t]+csrr[        \t]+a0,mhpmcounter27\n+[     \t]+[0-9a-f]+:[  \t]+b1c02573[    \t]+csrr[        \t]+a0,mhpmcounter28\n+[     \t]+[0-9a-f]+:[  \t]+b1d02573[    \t]+csrr[        \t]+a0,mhpmcounter29\n+[     \t]+[0-9a-f]+:[  \t]+b1e02573[    \t]+csrr[        \t]+a0,mhpmcounter30\n+[     \t]+[0-9a-f]+:[  \t]+b1f02573[    \t]+csrr[        \t]+a0,mhpmcounter31\n+[     \t]+[0-9a-f]+:[  \t]+b8002573[    \t]+csrr[        \t]+a0,mcycleh\n+[     \t]+[0-9a-f]+:[  \t]+b8202573[    \t]+csrr[        \t]+a0,minstreth\n+[     \t]+[0-9a-f]+:[  \t]+b8302573[    \t]+csrr[        \t]+a0,mhpmcounter3h\n+[     \t]+[0-9a-f]+:[  \t]+b8402573[    \t]+csrr[        \t]+a0,mhpmcounter4h\n+[     \t]+[0-9a-f]+:[  \t]+b8502573[    \t]+csrr[        \t]+a0,mhpmcounter5h\n+[     \t]+[0-9a-f]+:[  \t]+b8602573[    \t]+csrr[        \t]+a0,mhpmcounter6h\n+[     \t]+[0-9a-f]+:[  \t]+b8702573[    \t]+csrr[        \t]+a0,mhpmcounter7h\n+[     \t]+[0-9a-f]+:[  \t]+b8802573[    \t]+csrr[        \t]+a0,mhpmcounter8h\n+[     \t]+[0-9a-f]+:[  \t]+b8902573[    \t]+csrr[        \t]+a0,mhpmcounter9h\n+[     \t]+[0-9a-f]+:[  \t]+b8a02573[    \t]+csrr[        \t]+a0,mhpmcounter10h\n+[     \t]+[0-9a-f]+:[  \t]+b8b02573[    \t]+csrr[        \t]+a0,mhpmcounter11h\n+[     \t]+[0-9a-f]+:[  \t]+b8c02573[    \t]+csrr[        \t]+a0,mhpmcounter12h\n+[     \t]+[0-9a-f]+:[  \t]+b8d02573[    \t]+csrr[        \t]+a0,mhpmcounter13h\n+[     \t]+[0-9a-f]+:[  \t]+b8e02573[    \t]+csrr[        \t]+a0,mhpmcounter14h\n+[     \t]+[0-9a-f]+:[  \t]+b8f02573[    \t]+csrr[        \t]+a0,mhpmcounter15h\n+[     \t]+[0-9a-f]+:[  \t]+b9002573[    \t]+csrr[        \t]+a0,mhpmcounter16h\n+[     \t]+[0-9a-f]+:[  \t]+b9102573[    \t]+csrr[        \t]+a0,mhpmcounter17h\n+[     \t]+[0-9a-f]+:[  \t]+b9202573[    \t]+csrr[        \t]+a0,mhpmcounter18h\n+[     \t]+[0-9a-f]+:[  \t]+b9302573[    \t]+csrr[        \t]+a0,mhpmcounter19h\n+[     \t]+[0-9a-f]+:[  \t]+b9402573[    \t]+csrr[        \t]+a0,mhpmcounter20h\n+[     \t]+[0-9a-f]+:[  \t]+b9502573[    \t]+csrr[        \t]+a0,mhpmcounter21h\n+[     \t]+[0-9a-f]+:[  \t]+b9602573[    \t]+csrr[        \t]+a0,mhpmcounter22h\n+[     \t]+[0-9a-f]+:[  \t]+b9702573[    \t]+csrr[        \t]+a0,mhpmcounter23h\n+[     \t]+[0-9a-f]+:[  \t]+b9802573[    \t]+csrr[        \t]+a0,mhpmcounter24h\n+[     \t]+[0-9a-f]+:[  \t]+b9902573[    \t]+csrr[        \t]+a0,mhpmcounter25h\n+[     \t]+[0-9a-f]+:[  \t]+b9a02573[    \t]+csrr[        \t]+a0,mhpmcounter26h\n+[     \t]+[0-9a-f]+:[  \t]+b9b02573[    \t]+csrr[        \t]+a0,mhpmcounter27h\n+[     \t]+[0-9a-f]+:[  \t]+b9c02573[    \t]+csrr[        \t]+a0,mhpmcounter28h\n+[     \t]+[0-9a-f]+:[  \t]+b9d02573[    \t]+csrr[        \t]+a0,mhpmcounter29h\n+[     \t]+[0-9a-f]+:[  \t]+b9e02573[    \t]+csrr[        \t]+a0,mhpmcounter30h\n+[     \t]+[0-9a-f]+:[  \t]+b9f02573[    \t]+csrr[        \t]+a0,mhpmcounter31h\n+[     \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,mcountinhibit\n+[     \t]+[0-9a-f]+:[  \t]+32302573[    \t]+csrr[        \t]+a0,mhpmevent3\n+[     \t]+[0-9a-f]+:[  \t]+32402573[    \t]+csrr[        \t]+a0,mhpmevent4\n+[     \t]+[0-9a-f]+:[  \t]+32502573[    \t]+csrr[        \t]+a0,mhpmevent5\n+[     \t]+[0-9a-f]+:[  \t]+32602573[    \t]+csrr[        \t]+a0,mhpmevent6\n+[     \t]+[0-9a-f]+:[  \t]+32702573[    \t]+csrr[        \t]+a0,mhpmevent7\n+[     \t]+[0-9a-f]+:[  \t]+32802573[    \t]+csrr[        \t]+a0,mhpmevent8\n+[     \t]+[0-9a-f]+:[  \t]+32902573[    \t]+csrr[        \t]+a0,mhpmevent9\n+[     \t]+[0-9a-f]+:[  \t]+32a02573[    \t]+csrr[        \t]+a0,mhpmevent10\n+[     \t]+[0-9a-f]+:[  \t]+32b02573[    \t]+csrr[        \t]+a0,mhpmevent11\n+[     \t]+[0-9a-f]+:[  \t]+32c02573[    \t]+csrr[        \t]+a0,mhpmevent12\n+[     \t]+[0-9a-f]+:[  \t]+32d02573[    \t]+csrr[        \t]+a0,mhpmevent13\n+[     \t]+[0-9a-f]+:[  \t]+32e02573[    \t]+csrr[        \t]+a0,mhpmevent14\n+[     \t]+[0-9a-f]+:[  \t]+32f02573[    \t]+csrr[        \t]+a0,mhpmevent15\n+[     \t]+[0-9a-f]+:[  \t]+33002573[    \t]+csrr[        \t]+a0,mhpmevent16\n+[     \t]+[0-9a-f]+:[  \t]+33102573[    \t]+csrr[        \t]+a0,mhpmevent17\n+[     \t]+[0-9a-f]+:[  \t]+33202573[    \t]+csrr[        \t]+a0,mhpmevent18\n+[     \t]+[0-9a-f]+:[  \t]+33302573[    \t]+csrr[        \t]+a0,mhpmevent19\n+[     \t]+[0-9a-f]+:[  \t]+33402573[    \t]+csrr[        \t]+a0,mhpmevent20\n+[     \t]+[0-9a-f]+:[  \t]+33502573[    \t]+csrr[        \t]+a0,mhpmevent21\n+[     \t]+[0-9a-f]+:[  \t]+33602573[    \t]+csrr[        \t]+a0,mhpmevent22\n+[     \t]+[0-9a-f]+:[  \t]+33702573[    \t]+csrr[        \t]+a0,mhpmevent23\n+[     \t]+[0-9a-f]+:[  \t]+33802573[    \t]+csrr[        \t]+a0,mhpmevent24\n+[     \t]+[0-9a-f]+:[  \t]+33902573[    \t]+csrr[        \t]+a0,mhpmevent25\n+[     \t]+[0-9a-f]+:[  \t]+33a02573[    \t]+csrr[        \t]+a0,mhpmevent26\n+[     \t]+[0-9a-f]+:[  \t]+33b02573[    \t]+csrr[        \t]+a0,mhpmevent27\n+[     \t]+[0-9a-f]+:[  \t]+33c02573[    \t]+csrr[        \t]+a0,mhpmevent28\n+[     \t]+[0-9a-f]+:[  \t]+33d02573[    \t]+csrr[        \t]+a0,mhpmevent29\n+[     \t]+[0-9a-f]+:[  \t]+33e02573[    \t]+csrr[        \t]+a0,mhpmevent30\n+[     \t]+[0-9a-f]+:[  \t]+33f02573[    \t]+csrr[        \t]+a0,mhpmevent31\n+[     \t]+[0-9a-f]+:[  \t]+7a002573[    \t]+csrr[        \t]+a0,tselect\n+[     \t]+[0-9a-f]+:[  \t]+7a102573[    \t]+csrr[        \t]+a0,tdata1\n+[     \t]+[0-9a-f]+:[  \t]+7a202573[    \t]+csrr[        \t]+a0,tdata2\n+[     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n+[     \t]+[0-9a-f]+:[  \t]+7b002573[    \t]+csrr[        \t]+a0,dcsr\n+[     \t]+[0-9a-f]+:[  \t]+7b102573[    \t]+csrr[        \t]+a0,dpc\n+[     \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch0\n+[     \t]+[0-9a-f]+:[  \t]+7b302573[    \t]+csrr[        \t]+a0,dscratch1\n+[     \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,utval\n+[     \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,stval\n+[     \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,satp\n+[     \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mtval\n+[     \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,mcountinhibit\n+[     \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch0\n+[     \t]+[0-9a-f]+:[  \t]+20002573[    \t]+csrr[        \t]+a0,0x200\n+[     \t]+[0-9a-f]+:[  \t]+20202573[    \t]+csrr[        \t]+a0,0x202\n+[     \t]+[0-9a-f]+:[  \t]+20302573[    \t]+csrr[        \t]+a0,0x203\n+[     \t]+[0-9a-f]+:[  \t]+20402573[    \t]+csrr[        \t]+a0,0x204\n+[     \t]+[0-9a-f]+:[  \t]+20502573[    \t]+csrr[        \t]+a0,0x205\n+[     \t]+[0-9a-f]+:[  \t]+24002573[    \t]+csrr[        \t]+a0,0x240\n+[     \t]+[0-9a-f]+:[  \t]+24102573[    \t]+csrr[        \t]+a0,0x241\n+[     \t]+[0-9a-f]+:[  \t]+24202573[    \t]+csrr[        \t]+a0,0x242\n+[     \t]+[0-9a-f]+:[  \t]+24302573[    \t]+csrr[        \t]+a0,0x243\n+[     \t]+[0-9a-f]+:[  \t]+24402573[    \t]+csrr[        \t]+a0,0x244\n+[     \t]+[0-9a-f]+:[  \t]+38002573[    \t]+csrr[        \t]+a0,0x380\n+[     \t]+[0-9a-f]+:[  \t]+38102573[    \t]+csrr[        \t]+a0,0x381\n+[     \t]+[0-9a-f]+:[  \t]+38202573[    \t]+csrr[        \t]+a0,0x382\n+[     \t]+[0-9a-f]+:[  \t]+38302573[    \t]+csrr[        \t]+a0,0x383\n+[     \t]+[0-9a-f]+:[  \t]+38402573[    \t]+csrr[        \t]+a0,0x384\n+[     \t]+[0-9a-f]+:[  \t]+38502573[    \t]+csrr[        \t]+a0,0x385\n+[     \t]+[0-9a-f]+:[  \t]+32102573[    \t]+csrr[        \t]+a0,0x321\n+[     \t]+[0-9a-f]+:[  \t]+32202573[    \t]+csrr[        \t]+a0,0x322"
    },
    {
      "sha": "fd2a56b9ca42db88596960e03df029c11ad11c64",
      "filename": "gas/testsuite/gas/riscv/priv-reg-version-1p9.d",
      "status": "added",
      "additions": 257,
      "deletions": 0,
      "changes": 257,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p9.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p9.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-version-1p9.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,257 @@\n+#as: -march=rv32if -mpriv-spec=1.9\n+#source: priv-reg.s\n+#objdump: -dr -Mpriv-spec=1.9\n+\n+.*:[  \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[     \t]+[0-9a-f]+:[  \t]+00002573[    \t]+csrr[        \t]+a0,ustatus\n+[     \t]+[0-9a-f]+:[  \t]+00402573[    \t]+csrr[        \t]+a0,uie\n+[     \t]+[0-9a-f]+:[  \t]+00502573[    \t]+csrr[        \t]+a0,utvec\n+[     \t]+[0-9a-f]+:[  \t]+04002573[    \t]+csrr[        \t]+a0,uscratch\n+[     \t]+[0-9a-f]+:[  \t]+04102573[    \t]+csrr[        \t]+a0,uepc\n+[     \t]+[0-9a-f]+:[  \t]+04202573[    \t]+csrr[        \t]+a0,ucause\n+[     \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,ubadaddr\n+[     \t]+[0-9a-f]+:[  \t]+04402573[    \t]+csrr[        \t]+a0,uip\n+[     \t]+[0-9a-f]+:[  \t]+00102573[    \t]+frflags[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+00202573[    \t]+frrm[        \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+00302573[    \t]+frcsr[       \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0002573[    \t]+rdcycle[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0102573[    \t]+rdtime[      \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0202573[    \t]+rdinstret[   \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0302573[    \t]+csrr[        \t]+a0,hpmcounter3\n+[     \t]+[0-9a-f]+:[  \t]+c0402573[    \t]+csrr[        \t]+a0,hpmcounter4\n+[     \t]+[0-9a-f]+:[  \t]+c0502573[    \t]+csrr[        \t]+a0,hpmcounter5\n+[     \t]+[0-9a-f]+:[  \t]+c0602573[    \t]+csrr[        \t]+a0,hpmcounter6\n+[     \t]+[0-9a-f]+:[  \t]+c0702573[    \t]+csrr[        \t]+a0,hpmcounter7\n+[     \t]+[0-9a-f]+:[  \t]+c0802573[    \t]+csrr[        \t]+a0,hpmcounter8\n+[     \t]+[0-9a-f]+:[  \t]+c0902573[    \t]+csrr[        \t]+a0,hpmcounter9\n+[     \t]+[0-9a-f]+:[  \t]+c0a02573[    \t]+csrr[        \t]+a0,hpmcounter10\n+[     \t]+[0-9a-f]+:[  \t]+c0b02573[    \t]+csrr[        \t]+a0,hpmcounter11\n+[     \t]+[0-9a-f]+:[  \t]+c0c02573[    \t]+csrr[        \t]+a0,hpmcounter12\n+[     \t]+[0-9a-f]+:[  \t]+c0d02573[    \t]+csrr[        \t]+a0,hpmcounter13\n+[     \t]+[0-9a-f]+:[  \t]+c0e02573[    \t]+csrr[        \t]+a0,hpmcounter14\n+[     \t]+[0-9a-f]+:[  \t]+c0f02573[    \t]+csrr[        \t]+a0,hpmcounter15\n+[     \t]+[0-9a-f]+:[  \t]+c1002573[    \t]+csrr[        \t]+a0,hpmcounter16\n+[     \t]+[0-9a-f]+:[  \t]+c1102573[    \t]+csrr[        \t]+a0,hpmcounter17\n+[     \t]+[0-9a-f]+:[  \t]+c1202573[    \t]+csrr[        \t]+a0,hpmcounter18\n+[     \t]+[0-9a-f]+:[  \t]+c1302573[    \t]+csrr[        \t]+a0,hpmcounter19\n+[     \t]+[0-9a-f]+:[  \t]+c1402573[    \t]+csrr[        \t]+a0,hpmcounter20\n+[     \t]+[0-9a-f]+:[  \t]+c1502573[    \t]+csrr[        \t]+a0,hpmcounter21\n+[     \t]+[0-9a-f]+:[  \t]+c1602573[    \t]+csrr[        \t]+a0,hpmcounter22\n+[     \t]+[0-9a-f]+:[  \t]+c1702573[    \t]+csrr[        \t]+a0,hpmcounter23\n+[     \t]+[0-9a-f]+:[  \t]+c1802573[    \t]+csrr[        \t]+a0,hpmcounter24\n+[     \t]+[0-9a-f]+:[  \t]+c1902573[    \t]+csrr[        \t]+a0,hpmcounter25\n+[     \t]+[0-9a-f]+:[  \t]+c1a02573[    \t]+csrr[        \t]+a0,hpmcounter26\n+[     \t]+[0-9a-f]+:[  \t]+c1b02573[    \t]+csrr[        \t]+a0,hpmcounter27\n+[     \t]+[0-9a-f]+:[  \t]+c1c02573[    \t]+csrr[        \t]+a0,hpmcounter28\n+[     \t]+[0-9a-f]+:[  \t]+c1d02573[    \t]+csrr[        \t]+a0,hpmcounter29\n+[     \t]+[0-9a-f]+:[  \t]+c1e02573[    \t]+csrr[        \t]+a0,hpmcounter30\n+[     \t]+[0-9a-f]+:[  \t]+c1f02573[    \t]+csrr[        \t]+a0,hpmcounter31\n+[     \t]+[0-9a-f]+:[  \t]+c8002573[    \t]+rdcycleh[    \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8102573[    \t]+rdtimeh[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8202573[    \t]+rdinstreth[  \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8302573[    \t]+csrr[        \t]+a0,hpmcounter3h\n+[     \t]+[0-9a-f]+:[  \t]+c8402573[    \t]+csrr[        \t]+a0,hpmcounter4h\n+[     \t]+[0-9a-f]+:[  \t]+c8502573[    \t]+csrr[        \t]+a0,hpmcounter5h\n+[     \t]+[0-9a-f]+:[  \t]+c8602573[    \t]+csrr[        \t]+a0,hpmcounter6h\n+[     \t]+[0-9a-f]+:[  \t]+c8702573[    \t]+csrr[        \t]+a0,hpmcounter7h\n+[     \t]+[0-9a-f]+:[  \t]+c8802573[    \t]+csrr[        \t]+a0,hpmcounter8h\n+[     \t]+[0-9a-f]+:[  \t]+c8902573[    \t]+csrr[        \t]+a0,hpmcounter9h\n+[     \t]+[0-9a-f]+:[  \t]+c8a02573[    \t]+csrr[        \t]+a0,hpmcounter10h\n+[     \t]+[0-9a-f]+:[  \t]+c8b02573[    \t]+csrr[        \t]+a0,hpmcounter11h\n+[     \t]+[0-9a-f]+:[  \t]+c8c02573[    \t]+csrr[        \t]+a0,hpmcounter12h\n+[     \t]+[0-9a-f]+:[  \t]+c8d02573[    \t]+csrr[        \t]+a0,hpmcounter13h\n+[     \t]+[0-9a-f]+:[  \t]+c8e02573[    \t]+csrr[        \t]+a0,hpmcounter14h\n+[     \t]+[0-9a-f]+:[  \t]+c8f02573[    \t]+csrr[        \t]+a0,hpmcounter15h\n+[     \t]+[0-9a-f]+:[  \t]+c9002573[    \t]+csrr[        \t]+a0,hpmcounter16h\n+[     \t]+[0-9a-f]+:[  \t]+c9102573[    \t]+csrr[        \t]+a0,hpmcounter17h\n+[     \t]+[0-9a-f]+:[  \t]+c9202573[    \t]+csrr[        \t]+a0,hpmcounter18h\n+[     \t]+[0-9a-f]+:[  \t]+c9302573[    \t]+csrr[        \t]+a0,hpmcounter19h\n+[     \t]+[0-9a-f]+:[  \t]+c9402573[    \t]+csrr[        \t]+a0,hpmcounter20h\n+[     \t]+[0-9a-f]+:[  \t]+c9502573[    \t]+csrr[        \t]+a0,hpmcounter21h\n+[     \t]+[0-9a-f]+:[  \t]+c9602573[    \t]+csrr[        \t]+a0,hpmcounter22h\n+[     \t]+[0-9a-f]+:[  \t]+c9702573[    \t]+csrr[        \t]+a0,hpmcounter23h\n+[     \t]+[0-9a-f]+:[  \t]+c9802573[    \t]+csrr[        \t]+a0,hpmcounter24h\n+[     \t]+[0-9a-f]+:[  \t]+c9902573[    \t]+csrr[        \t]+a0,hpmcounter25h\n+[     \t]+[0-9a-f]+:[  \t]+c9a02573[    \t]+csrr[        \t]+a0,hpmcounter26h\n+[     \t]+[0-9a-f]+:[  \t]+c9b02573[    \t]+csrr[        \t]+a0,hpmcounter27h\n+[     \t]+[0-9a-f]+:[  \t]+c9c02573[    \t]+csrr[        \t]+a0,hpmcounter28h\n+[     \t]+[0-9a-f]+:[  \t]+c9d02573[    \t]+csrr[        \t]+a0,hpmcounter29h\n+[     \t]+[0-9a-f]+:[  \t]+c9e02573[    \t]+csrr[        \t]+a0,hpmcounter30h\n+[     \t]+[0-9a-f]+:[  \t]+c9f02573[    \t]+csrr[        \t]+a0,hpmcounter31h\n+[     \t]+[0-9a-f]+:[  \t]+10002573[    \t]+csrr[        \t]+a0,sstatus\n+[     \t]+[0-9a-f]+:[  \t]+10202573[    \t]+csrr[        \t]+a0,sedeleg\n+[     \t]+[0-9a-f]+:[  \t]+10302573[    \t]+csrr[        \t]+a0,sideleg\n+[     \t]+[0-9a-f]+:[  \t]+10402573[    \t]+csrr[        \t]+a0,sie\n+[     \t]+[0-9a-f]+:[  \t]+10502573[    \t]+csrr[        \t]+a0,stvec\n+[     \t]+[0-9a-f]+:[  \t]+10602573[    \t]+csrr[        \t]+a0,0x106\n+[     \t]+[0-9a-f]+:[  \t]+14002573[    \t]+csrr[        \t]+a0,sscratch\n+[     \t]+[0-9a-f]+:[  \t]+14102573[    \t]+csrr[        \t]+a0,sepc\n+[     \t]+[0-9a-f]+:[  \t]+14202573[    \t]+csrr[        \t]+a0,scause\n+[     \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,sbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+14402573[    \t]+csrr[        \t]+a0,sip\n+[     \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,sptbr\n+[     \t]+[0-9a-f]+:[  \t]+f1102573[    \t]+csrr[        \t]+a0,mvendorid\n+[     \t]+[0-9a-f]+:[  \t]+f1202573[    \t]+csrr[        \t]+a0,marchid\n+[     \t]+[0-9a-f]+:[  \t]+f1302573[    \t]+csrr[        \t]+a0,mimpid\n+[     \t]+[0-9a-f]+:[  \t]+f1402573[    \t]+csrr[        \t]+a0,mhartid\n+[     \t]+[0-9a-f]+:[  \t]+30002573[    \t]+csrr[        \t]+a0,mstatus\n+[     \t]+[0-9a-f]+:[  \t]+f1002573[    \t]+csrr[        \t]+a0,misa\n+[     \t]+[0-9a-f]+:[  \t]+30202573[    \t]+csrr[        \t]+a0,medeleg\n+[     \t]+[0-9a-f]+:[  \t]+30302573[    \t]+csrr[        \t]+a0,mideleg\n+[     \t]+[0-9a-f]+:[  \t]+30402573[    \t]+csrr[        \t]+a0,mie\n+[     \t]+[0-9a-f]+:[  \t]+30502573[    \t]+csrr[        \t]+a0,mtvec\n+[     \t]+[0-9a-f]+:[  \t]+30602573[    \t]+csrr[        \t]+a0,0x306\n+[     \t]+[0-9a-f]+:[  \t]+34002573[    \t]+csrr[        \t]+a0,mscratch\n+[     \t]+[0-9a-f]+:[  \t]+34102573[    \t]+csrr[        \t]+a0,mepc\n+[     \t]+[0-9a-f]+:[  \t]+34202573[    \t]+csrr[        \t]+a0,mcause\n+[     \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+34402573[    \t]+csrr[        \t]+a0,mip\n+[     \t]+[0-9a-f]+:[  \t]+3a002573[    \t]+csrr[        \t]+a0,0x3a0\n+[     \t]+[0-9a-f]+:[  \t]+3a102573[    \t]+csrr[        \t]+a0,0x3a1\n+[     \t]+[0-9a-f]+:[  \t]+3a202573[    \t]+csrr[        \t]+a0,0x3a2\n+[     \t]+[0-9a-f]+:[  \t]+3a302573[    \t]+csrr[        \t]+a0,0x3a3\n+[     \t]+[0-9a-f]+:[  \t]+3b002573[    \t]+csrr[        \t]+a0,0x3b0\n+[     \t]+[0-9a-f]+:[  \t]+3b102573[    \t]+csrr[        \t]+a0,0x3b1\n+[     \t]+[0-9a-f]+:[  \t]+3b202573[    \t]+csrr[        \t]+a0,0x3b2\n+[     \t]+[0-9a-f]+:[  \t]+3b302573[    \t]+csrr[        \t]+a0,0x3b3\n+[     \t]+[0-9a-f]+:[  \t]+3b402573[    \t]+csrr[        \t]+a0,0x3b4\n+[     \t]+[0-9a-f]+:[  \t]+3b502573[    \t]+csrr[        \t]+a0,0x3b5\n+[     \t]+[0-9a-f]+:[  \t]+3b602573[    \t]+csrr[        \t]+a0,0x3b6\n+[     \t]+[0-9a-f]+:[  \t]+3b702573[    \t]+csrr[        \t]+a0,0x3b7\n+[     \t]+[0-9a-f]+:[  \t]+3b802573[    \t]+csrr[        \t]+a0,0x3b8\n+[     \t]+[0-9a-f]+:[  \t]+3b902573[    \t]+csrr[        \t]+a0,0x3b9\n+[     \t]+[0-9a-f]+:[  \t]+3ba02573[    \t]+csrr[        \t]+a0,0x3ba\n+[     \t]+[0-9a-f]+:[  \t]+3bb02573[    \t]+csrr[        \t]+a0,0x3bb\n+[     \t]+[0-9a-f]+:[  \t]+3bc02573[    \t]+csrr[        \t]+a0,0x3bc\n+[     \t]+[0-9a-f]+:[  \t]+3bd02573[    \t]+csrr[        \t]+a0,0x3bd\n+[     \t]+[0-9a-f]+:[  \t]+3be02573[    \t]+csrr[        \t]+a0,0x3be\n+[     \t]+[0-9a-f]+:[  \t]+3bf02573[    \t]+csrr[        \t]+a0,0x3bf\n+[     \t]+[0-9a-f]+:[  \t]+b0002573[    \t]+csrr[        \t]+a0,mcycle\n+[     \t]+[0-9a-f]+:[  \t]+b0202573[    \t]+csrr[        \t]+a0,minstret\n+[     \t]+[0-9a-f]+:[  \t]+b0302573[    \t]+csrr[        \t]+a0,mhpmcounter3\n+[     \t]+[0-9a-f]+:[  \t]+b0402573[    \t]+csrr[        \t]+a0,mhpmcounter4\n+[     \t]+[0-9a-f]+:[  \t]+b0502573[    \t]+csrr[        \t]+a0,mhpmcounter5\n+[     \t]+[0-9a-f]+:[  \t]+b0602573[    \t]+csrr[        \t]+a0,mhpmcounter6\n+[     \t]+[0-9a-f]+:[  \t]+b0702573[    \t]+csrr[        \t]+a0,mhpmcounter7\n+[     \t]+[0-9a-f]+:[  \t]+b0802573[    \t]+csrr[        \t]+a0,mhpmcounter8\n+[     \t]+[0-9a-f]+:[  \t]+b0902573[    \t]+csrr[        \t]+a0,mhpmcounter9\n+[     \t]+[0-9a-f]+:[  \t]+b0a02573[    \t]+csrr[        \t]+a0,mhpmcounter10\n+[     \t]+[0-9a-f]+:[  \t]+b0b02573[    \t]+csrr[        \t]+a0,mhpmcounter11\n+[     \t]+[0-9a-f]+:[  \t]+b0c02573[    \t]+csrr[        \t]+a0,mhpmcounter12\n+[     \t]+[0-9a-f]+:[  \t]+b0d02573[    \t]+csrr[        \t]+a0,mhpmcounter13\n+[     \t]+[0-9a-f]+:[  \t]+b0e02573[    \t]+csrr[        \t]+a0,mhpmcounter14\n+[     \t]+[0-9a-f]+:[  \t]+b0f02573[    \t]+csrr[        \t]+a0,mhpmcounter15\n+[     \t]+[0-9a-f]+:[  \t]+b1002573[    \t]+csrr[        \t]+a0,mhpmcounter16\n+[     \t]+[0-9a-f]+:[  \t]+b1102573[    \t]+csrr[        \t]+a0,mhpmcounter17\n+[     \t]+[0-9a-f]+:[  \t]+b1202573[    \t]+csrr[        \t]+a0,mhpmcounter18\n+[     \t]+[0-9a-f]+:[  \t]+b1302573[    \t]+csrr[        \t]+a0,mhpmcounter19\n+[     \t]+[0-9a-f]+:[  \t]+b1402573[    \t]+csrr[        \t]+a0,mhpmcounter20\n+[     \t]+[0-9a-f]+:[  \t]+b1502573[    \t]+csrr[        \t]+a0,mhpmcounter21\n+[     \t]+[0-9a-f]+:[  \t]+b1602573[    \t]+csrr[        \t]+a0,mhpmcounter22\n+[     \t]+[0-9a-f]+:[  \t]+b1702573[    \t]+csrr[        \t]+a0,mhpmcounter23\n+[     \t]+[0-9a-f]+:[  \t]+b1802573[    \t]+csrr[        \t]+a0,mhpmcounter24\n+[     \t]+[0-9a-f]+:[  \t]+b1902573[    \t]+csrr[        \t]+a0,mhpmcounter25\n+[     \t]+[0-9a-f]+:[  \t]+b1a02573[    \t]+csrr[        \t]+a0,mhpmcounter26\n+[     \t]+[0-9a-f]+:[  \t]+b1b02573[    \t]+csrr[        \t]+a0,mhpmcounter27\n+[     \t]+[0-9a-f]+:[  \t]+b1c02573[    \t]+csrr[        \t]+a0,mhpmcounter28\n+[     \t]+[0-9a-f]+:[  \t]+b1d02573[    \t]+csrr[        \t]+a0,mhpmcounter29\n+[     \t]+[0-9a-f]+:[  \t]+b1e02573[    \t]+csrr[        \t]+a0,mhpmcounter30\n+[     \t]+[0-9a-f]+:[  \t]+b1f02573[    \t]+csrr[        \t]+a0,mhpmcounter31\n+[     \t]+[0-9a-f]+:[  \t]+b8002573[    \t]+csrr[        \t]+a0,mcycleh\n+[     \t]+[0-9a-f]+:[  \t]+b8202573[    \t]+csrr[        \t]+a0,minstreth\n+[     \t]+[0-9a-f]+:[  \t]+b8302573[    \t]+csrr[        \t]+a0,mhpmcounter3h\n+[     \t]+[0-9a-f]+:[  \t]+b8402573[    \t]+csrr[        \t]+a0,mhpmcounter4h\n+[     \t]+[0-9a-f]+:[  \t]+b8502573[    \t]+csrr[        \t]+a0,mhpmcounter5h\n+[     \t]+[0-9a-f]+:[  \t]+b8602573[    \t]+csrr[        \t]+a0,mhpmcounter6h\n+[     \t]+[0-9a-f]+:[  \t]+b8702573[    \t]+csrr[        \t]+a0,mhpmcounter7h\n+[     \t]+[0-9a-f]+:[  \t]+b8802573[    \t]+csrr[        \t]+a0,mhpmcounter8h\n+[     \t]+[0-9a-f]+:[  \t]+b8902573[    \t]+csrr[        \t]+a0,mhpmcounter9h\n+[     \t]+[0-9a-f]+:[  \t]+b8a02573[    \t]+csrr[        \t]+a0,mhpmcounter10h\n+[     \t]+[0-9a-f]+:[  \t]+b8b02573[    \t]+csrr[        \t]+a0,mhpmcounter11h\n+[     \t]+[0-9a-f]+:[  \t]+b8c02573[    \t]+csrr[        \t]+a0,mhpmcounter12h\n+[     \t]+[0-9a-f]+:[  \t]+b8d02573[    \t]+csrr[        \t]+a0,mhpmcounter13h\n+[     \t]+[0-9a-f]+:[  \t]+b8e02573[    \t]+csrr[        \t]+a0,mhpmcounter14h\n+[     \t]+[0-9a-f]+:[  \t]+b8f02573[    \t]+csrr[        \t]+a0,mhpmcounter15h\n+[     \t]+[0-9a-f]+:[  \t]+b9002573[    \t]+csrr[        \t]+a0,mhpmcounter16h\n+[     \t]+[0-9a-f]+:[  \t]+b9102573[    \t]+csrr[        \t]+a0,mhpmcounter17h\n+[     \t]+[0-9a-f]+:[  \t]+b9202573[    \t]+csrr[        \t]+a0,mhpmcounter18h\n+[     \t]+[0-9a-f]+:[  \t]+b9302573[    \t]+csrr[        \t]+a0,mhpmcounter19h\n+[     \t]+[0-9a-f]+:[  \t]+b9402573[    \t]+csrr[        \t]+a0,mhpmcounter20h\n+[     \t]+[0-9a-f]+:[  \t]+b9502573[    \t]+csrr[        \t]+a0,mhpmcounter21h\n+[     \t]+[0-9a-f]+:[  \t]+b9602573[    \t]+csrr[        \t]+a0,mhpmcounter22h\n+[     \t]+[0-9a-f]+:[  \t]+b9702573[    \t]+csrr[        \t]+a0,mhpmcounter23h\n+[     \t]+[0-9a-f]+:[  \t]+b9802573[    \t]+csrr[        \t]+a0,mhpmcounter24h\n+[     \t]+[0-9a-f]+:[  \t]+b9902573[    \t]+csrr[        \t]+a0,mhpmcounter25h\n+[     \t]+[0-9a-f]+:[  \t]+b9a02573[    \t]+csrr[        \t]+a0,mhpmcounter26h\n+[     \t]+[0-9a-f]+:[  \t]+b9b02573[    \t]+csrr[        \t]+a0,mhpmcounter27h\n+[     \t]+[0-9a-f]+:[  \t]+b9c02573[    \t]+csrr[        \t]+a0,mhpmcounter28h\n+[     \t]+[0-9a-f]+:[  \t]+b9d02573[    \t]+csrr[        \t]+a0,mhpmcounter29h\n+[     \t]+[0-9a-f]+:[  \t]+b9e02573[    \t]+csrr[        \t]+a0,mhpmcounter30h\n+[     \t]+[0-9a-f]+:[  \t]+b9f02573[    \t]+csrr[        \t]+a0,mhpmcounter31h\n+[     \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,mucounteren\n+[     \t]+[0-9a-f]+:[  \t]+32302573[    \t]+csrr[        \t]+a0,mhpmevent3\n+[     \t]+[0-9a-f]+:[  \t]+32402573[    \t]+csrr[        \t]+a0,mhpmevent4\n+[     \t]+[0-9a-f]+:[  \t]+32502573[    \t]+csrr[        \t]+a0,mhpmevent5\n+[     \t]+[0-9a-f]+:[  \t]+32602573[    \t]+csrr[        \t]+a0,mhpmevent6\n+[     \t]+[0-9a-f]+:[  \t]+32702573[    \t]+csrr[        \t]+a0,mhpmevent7\n+[     \t]+[0-9a-f]+:[  \t]+32802573[    \t]+csrr[        \t]+a0,mhpmevent8\n+[     \t]+[0-9a-f]+:[  \t]+32902573[    \t]+csrr[        \t]+a0,mhpmevent9\n+[     \t]+[0-9a-f]+:[  \t]+32a02573[    \t]+csrr[        \t]+a0,mhpmevent10\n+[     \t]+[0-9a-f]+:[  \t]+32b02573[    \t]+csrr[        \t]+a0,mhpmevent11\n+[     \t]+[0-9a-f]+:[  \t]+32c02573[    \t]+csrr[        \t]+a0,mhpmevent12\n+[     \t]+[0-9a-f]+:[  \t]+32d02573[    \t]+csrr[        \t]+a0,mhpmevent13\n+[     \t]+[0-9a-f]+:[  \t]+32e02573[    \t]+csrr[        \t]+a0,mhpmevent14\n+[     \t]+[0-9a-f]+:[  \t]+32f02573[    \t]+csrr[        \t]+a0,mhpmevent15\n+[     \t]+[0-9a-f]+:[  \t]+33002573[    \t]+csrr[        \t]+a0,mhpmevent16\n+[     \t]+[0-9a-f]+:[  \t]+33102573[    \t]+csrr[        \t]+a0,mhpmevent17\n+[     \t]+[0-9a-f]+:[  \t]+33202573[    \t]+csrr[        \t]+a0,mhpmevent18\n+[     \t]+[0-9a-f]+:[  \t]+33302573[    \t]+csrr[        \t]+a0,mhpmevent19\n+[     \t]+[0-9a-f]+:[  \t]+33402573[    \t]+csrr[        \t]+a0,mhpmevent20\n+[     \t]+[0-9a-f]+:[  \t]+33502573[    \t]+csrr[        \t]+a0,mhpmevent21\n+[     \t]+[0-9a-f]+:[  \t]+33602573[    \t]+csrr[        \t]+a0,mhpmevent22\n+[     \t]+[0-9a-f]+:[  \t]+33702573[    \t]+csrr[        \t]+a0,mhpmevent23\n+[     \t]+[0-9a-f]+:[  \t]+33802573[    \t]+csrr[        \t]+a0,mhpmevent24\n+[     \t]+[0-9a-f]+:[  \t]+33902573[    \t]+csrr[        \t]+a0,mhpmevent25\n+[     \t]+[0-9a-f]+:[  \t]+33a02573[    \t]+csrr[        \t]+a0,mhpmevent26\n+[     \t]+[0-9a-f]+:[  \t]+33b02573[    \t]+csrr[        \t]+a0,mhpmevent27\n+[     \t]+[0-9a-f]+:[  \t]+33c02573[    \t]+csrr[        \t]+a0,mhpmevent28\n+[     \t]+[0-9a-f]+:[  \t]+33d02573[    \t]+csrr[        \t]+a0,mhpmevent29\n+[     \t]+[0-9a-f]+:[  \t]+33e02573[    \t]+csrr[        \t]+a0,mhpmevent30\n+[     \t]+[0-9a-f]+:[  \t]+33f02573[    \t]+csrr[        \t]+a0,mhpmevent31\n+[     \t]+[0-9a-f]+:[  \t]+7a002573[    \t]+csrr[        \t]+a0,tselect\n+[     \t]+[0-9a-f]+:[  \t]+7a102573[    \t]+csrr[        \t]+a0,tdata1\n+[     \t]+[0-9a-f]+:[  \t]+7a202573[    \t]+csrr[        \t]+a0,tdata2\n+[     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n+[     \t]+[0-9a-f]+:[  \t]+7b002573[    \t]+csrr[        \t]+a0,dcsr\n+[     \t]+[0-9a-f]+:[  \t]+7b102573[    \t]+csrr[        \t]+a0,dpc\n+[     \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch\n+[     \t]+[0-9a-f]+:[  \t]+7b302573[    \t]+csrr[        \t]+a0,0x7b3\n+[     \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,ubadaddr\n+[     \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,sbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,sptbr\n+[     \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,mucounteren\n+[     \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch\n+[     \t]+[0-9a-f]+:[  \t]+20002573[    \t]+csrr[        \t]+a0,hstatus\n+[     \t]+[0-9a-f]+:[  \t]+20202573[    \t]+csrr[        \t]+a0,hedeleg\n+[     \t]+[0-9a-f]+:[  \t]+20302573[    \t]+csrr[        \t]+a0,hideleg\n+[     \t]+[0-9a-f]+:[  \t]+20402573[    \t]+csrr[        \t]+a0,hie\n+[     \t]+[0-9a-f]+:[  \t]+20502573[    \t]+csrr[        \t]+a0,htvec\n+[     \t]+[0-9a-f]+:[  \t]+24002573[    \t]+csrr[        \t]+a0,hscratch\n+[     \t]+[0-9a-f]+:[  \t]+24102573[    \t]+csrr[        \t]+a0,hepc\n+[     \t]+[0-9a-f]+:[  \t]+24202573[    \t]+csrr[        \t]+a0,hcause\n+[     \t]+[0-9a-f]+:[  \t]+24302573[    \t]+csrr[        \t]+a0,hbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+24402573[    \t]+csrr[        \t]+a0,hip\n+[     \t]+[0-9a-f]+:[  \t]+38002573[    \t]+csrr[        \t]+a0,mbase\n+[     \t]+[0-9a-f]+:[  \t]+38102573[    \t]+csrr[        \t]+a0,mbound\n+[     \t]+[0-9a-f]+:[  \t]+38202573[    \t]+csrr[        \t]+a0,mibase\n+[     \t]+[0-9a-f]+:[  \t]+38302573[    \t]+csrr[        \t]+a0,mibound\n+[     \t]+[0-9a-f]+:[  \t]+38402573[    \t]+csrr[        \t]+a0,mdbase\n+[     \t]+[0-9a-f]+:[  \t]+38502573[    \t]+csrr[        \t]+a0,mdbound\n+[     \t]+[0-9a-f]+:[  \t]+32102573[    \t]+csrr[        \t]+a0,mscounteren\n+[     \t]+[0-9a-f]+:[  \t]+32202573[    \t]+csrr[        \t]+a0,mhcounteren"
    },
    {
      "sha": "61628037a6316f2fbfad293902a7cfb74e4b3de3",
      "filename": "gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d",
      "status": "added",
      "additions": 257,
      "deletions": 0,
      "changes": 257,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -0,0 +1,257 @@\n+#as: -march=rv32if -mpriv-spec=1.9.1\n+#source: priv-reg.s\n+#objdump: -dr -Mpriv-spec=1.9.1\n+\n+.*:[  \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[     \t]+[0-9a-f]+:[  \t]+00002573[    \t]+csrr[        \t]+a0,ustatus\n+[     \t]+[0-9a-f]+:[  \t]+00402573[    \t]+csrr[        \t]+a0,uie\n+[     \t]+[0-9a-f]+:[  \t]+00502573[    \t]+csrr[        \t]+a0,utvec\n+[     \t]+[0-9a-f]+:[  \t]+04002573[    \t]+csrr[        \t]+a0,uscratch\n+[     \t]+[0-9a-f]+:[  \t]+04102573[    \t]+csrr[        \t]+a0,uepc\n+[     \t]+[0-9a-f]+:[  \t]+04202573[    \t]+csrr[        \t]+a0,ucause\n+[     \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,ubadaddr\n+[     \t]+[0-9a-f]+:[  \t]+04402573[    \t]+csrr[        \t]+a0,uip\n+[     \t]+[0-9a-f]+:[  \t]+00102573[    \t]+frflags[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+00202573[    \t]+frrm[        \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+00302573[    \t]+frcsr[       \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0002573[    \t]+rdcycle[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0102573[    \t]+rdtime[      \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0202573[    \t]+rdinstret[   \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c0302573[    \t]+csrr[        \t]+a0,hpmcounter3\n+[     \t]+[0-9a-f]+:[  \t]+c0402573[    \t]+csrr[        \t]+a0,hpmcounter4\n+[     \t]+[0-9a-f]+:[  \t]+c0502573[    \t]+csrr[        \t]+a0,hpmcounter5\n+[     \t]+[0-9a-f]+:[  \t]+c0602573[    \t]+csrr[        \t]+a0,hpmcounter6\n+[     \t]+[0-9a-f]+:[  \t]+c0702573[    \t]+csrr[        \t]+a0,hpmcounter7\n+[     \t]+[0-9a-f]+:[  \t]+c0802573[    \t]+csrr[        \t]+a0,hpmcounter8\n+[     \t]+[0-9a-f]+:[  \t]+c0902573[    \t]+csrr[        \t]+a0,hpmcounter9\n+[     \t]+[0-9a-f]+:[  \t]+c0a02573[    \t]+csrr[        \t]+a0,hpmcounter10\n+[     \t]+[0-9a-f]+:[  \t]+c0b02573[    \t]+csrr[        \t]+a0,hpmcounter11\n+[     \t]+[0-9a-f]+:[  \t]+c0c02573[    \t]+csrr[        \t]+a0,hpmcounter12\n+[     \t]+[0-9a-f]+:[  \t]+c0d02573[    \t]+csrr[        \t]+a0,hpmcounter13\n+[     \t]+[0-9a-f]+:[  \t]+c0e02573[    \t]+csrr[        \t]+a0,hpmcounter14\n+[     \t]+[0-9a-f]+:[  \t]+c0f02573[    \t]+csrr[        \t]+a0,hpmcounter15\n+[     \t]+[0-9a-f]+:[  \t]+c1002573[    \t]+csrr[        \t]+a0,hpmcounter16\n+[     \t]+[0-9a-f]+:[  \t]+c1102573[    \t]+csrr[        \t]+a0,hpmcounter17\n+[     \t]+[0-9a-f]+:[  \t]+c1202573[    \t]+csrr[        \t]+a0,hpmcounter18\n+[     \t]+[0-9a-f]+:[  \t]+c1302573[    \t]+csrr[        \t]+a0,hpmcounter19\n+[     \t]+[0-9a-f]+:[  \t]+c1402573[    \t]+csrr[        \t]+a0,hpmcounter20\n+[     \t]+[0-9a-f]+:[  \t]+c1502573[    \t]+csrr[        \t]+a0,hpmcounter21\n+[     \t]+[0-9a-f]+:[  \t]+c1602573[    \t]+csrr[        \t]+a0,hpmcounter22\n+[     \t]+[0-9a-f]+:[  \t]+c1702573[    \t]+csrr[        \t]+a0,hpmcounter23\n+[     \t]+[0-9a-f]+:[  \t]+c1802573[    \t]+csrr[        \t]+a0,hpmcounter24\n+[     \t]+[0-9a-f]+:[  \t]+c1902573[    \t]+csrr[        \t]+a0,hpmcounter25\n+[     \t]+[0-9a-f]+:[  \t]+c1a02573[    \t]+csrr[        \t]+a0,hpmcounter26\n+[     \t]+[0-9a-f]+:[  \t]+c1b02573[    \t]+csrr[        \t]+a0,hpmcounter27\n+[     \t]+[0-9a-f]+:[  \t]+c1c02573[    \t]+csrr[        \t]+a0,hpmcounter28\n+[     \t]+[0-9a-f]+:[  \t]+c1d02573[    \t]+csrr[        \t]+a0,hpmcounter29\n+[     \t]+[0-9a-f]+:[  \t]+c1e02573[    \t]+csrr[        \t]+a0,hpmcounter30\n+[     \t]+[0-9a-f]+:[  \t]+c1f02573[    \t]+csrr[        \t]+a0,hpmcounter31\n+[     \t]+[0-9a-f]+:[  \t]+c8002573[    \t]+rdcycleh[    \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8102573[    \t]+rdtimeh[     \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8202573[    \t]+rdinstreth[  \t]+a0\n+[     \t]+[0-9a-f]+:[  \t]+c8302573[    \t]+csrr[        \t]+a0,hpmcounter3h\n+[     \t]+[0-9a-f]+:[  \t]+c8402573[    \t]+csrr[        \t]+a0,hpmcounter4h\n+[     \t]+[0-9a-f]+:[  \t]+c8502573[    \t]+csrr[        \t]+a0,hpmcounter5h\n+[     \t]+[0-9a-f]+:[  \t]+c8602573[    \t]+csrr[        \t]+a0,hpmcounter6h\n+[     \t]+[0-9a-f]+:[  \t]+c8702573[    \t]+csrr[        \t]+a0,hpmcounter7h\n+[     \t]+[0-9a-f]+:[  \t]+c8802573[    \t]+csrr[        \t]+a0,hpmcounter8h\n+[     \t]+[0-9a-f]+:[  \t]+c8902573[    \t]+csrr[        \t]+a0,hpmcounter9h\n+[     \t]+[0-9a-f]+:[  \t]+c8a02573[    \t]+csrr[        \t]+a0,hpmcounter10h\n+[     \t]+[0-9a-f]+:[  \t]+c8b02573[    \t]+csrr[        \t]+a0,hpmcounter11h\n+[     \t]+[0-9a-f]+:[  \t]+c8c02573[    \t]+csrr[        \t]+a0,hpmcounter12h\n+[     \t]+[0-9a-f]+:[  \t]+c8d02573[    \t]+csrr[        \t]+a0,hpmcounter13h\n+[     \t]+[0-9a-f]+:[  \t]+c8e02573[    \t]+csrr[        \t]+a0,hpmcounter14h\n+[     \t]+[0-9a-f]+:[  \t]+c8f02573[    \t]+csrr[        \t]+a0,hpmcounter15h\n+[     \t]+[0-9a-f]+:[  \t]+c9002573[    \t]+csrr[        \t]+a0,hpmcounter16h\n+[     \t]+[0-9a-f]+:[  \t]+c9102573[    \t]+csrr[        \t]+a0,hpmcounter17h\n+[     \t]+[0-9a-f]+:[  \t]+c9202573[    \t]+csrr[        \t]+a0,hpmcounter18h\n+[     \t]+[0-9a-f]+:[  \t]+c9302573[    \t]+csrr[        \t]+a0,hpmcounter19h\n+[     \t]+[0-9a-f]+:[  \t]+c9402573[    \t]+csrr[        \t]+a0,hpmcounter20h\n+[     \t]+[0-9a-f]+:[  \t]+c9502573[    \t]+csrr[        \t]+a0,hpmcounter21h\n+[     \t]+[0-9a-f]+:[  \t]+c9602573[    \t]+csrr[        \t]+a0,hpmcounter22h\n+[     \t]+[0-9a-f]+:[  \t]+c9702573[    \t]+csrr[        \t]+a0,hpmcounter23h\n+[     \t]+[0-9a-f]+:[  \t]+c9802573[    \t]+csrr[        \t]+a0,hpmcounter24h\n+[     \t]+[0-9a-f]+:[  \t]+c9902573[    \t]+csrr[        \t]+a0,hpmcounter25h\n+[     \t]+[0-9a-f]+:[  \t]+c9a02573[    \t]+csrr[        \t]+a0,hpmcounter26h\n+[     \t]+[0-9a-f]+:[  \t]+c9b02573[    \t]+csrr[        \t]+a0,hpmcounter27h\n+[     \t]+[0-9a-f]+:[  \t]+c9c02573[    \t]+csrr[        \t]+a0,hpmcounter28h\n+[     \t]+[0-9a-f]+:[  \t]+c9d02573[    \t]+csrr[        \t]+a0,hpmcounter29h\n+[     \t]+[0-9a-f]+:[  \t]+c9e02573[    \t]+csrr[        \t]+a0,hpmcounter30h\n+[     \t]+[0-9a-f]+:[  \t]+c9f02573[    \t]+csrr[        \t]+a0,hpmcounter31h\n+[     \t]+[0-9a-f]+:[  \t]+10002573[    \t]+csrr[        \t]+a0,sstatus\n+[     \t]+[0-9a-f]+:[  \t]+10202573[    \t]+csrr[        \t]+a0,sedeleg\n+[     \t]+[0-9a-f]+:[  \t]+10302573[    \t]+csrr[        \t]+a0,sideleg\n+[     \t]+[0-9a-f]+:[  \t]+10402573[    \t]+csrr[        \t]+a0,sie\n+[     \t]+[0-9a-f]+:[  \t]+10502573[    \t]+csrr[        \t]+a0,stvec\n+[     \t]+[0-9a-f]+:[  \t]+10602573[    \t]+csrr[        \t]+a0,0x106\n+[     \t]+[0-9a-f]+:[  \t]+14002573[    \t]+csrr[        \t]+a0,sscratch\n+[     \t]+[0-9a-f]+:[  \t]+14102573[    \t]+csrr[        \t]+a0,sepc\n+[     \t]+[0-9a-f]+:[  \t]+14202573[    \t]+csrr[        \t]+a0,scause\n+[     \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,sbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+14402573[    \t]+csrr[        \t]+a0,sip\n+[     \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,sptbr\n+[     \t]+[0-9a-f]+:[  \t]+f1102573[    \t]+csrr[        \t]+a0,mvendorid\n+[     \t]+[0-9a-f]+:[  \t]+f1202573[    \t]+csrr[        \t]+a0,marchid\n+[     \t]+[0-9a-f]+:[  \t]+f1302573[    \t]+csrr[        \t]+a0,mimpid\n+[     \t]+[0-9a-f]+:[  \t]+f1402573[    \t]+csrr[        \t]+a0,mhartid\n+[     \t]+[0-9a-f]+:[  \t]+30002573[    \t]+csrr[        \t]+a0,mstatus\n+[     \t]+[0-9a-f]+:[  \t]+30102573[    \t]+csrr[        \t]+a0,misa\n+[     \t]+[0-9a-f]+:[  \t]+30202573[    \t]+csrr[        \t]+a0,medeleg\n+[     \t]+[0-9a-f]+:[  \t]+30302573[    \t]+csrr[        \t]+a0,mideleg\n+[     \t]+[0-9a-f]+:[  \t]+30402573[    \t]+csrr[        \t]+a0,mie\n+[     \t]+[0-9a-f]+:[  \t]+30502573[    \t]+csrr[        \t]+a0,mtvec\n+[     \t]+[0-9a-f]+:[  \t]+30602573[    \t]+csrr[        \t]+a0,0x306\n+[     \t]+[0-9a-f]+:[  \t]+34002573[    \t]+csrr[        \t]+a0,mscratch\n+[     \t]+[0-9a-f]+:[  \t]+34102573[    \t]+csrr[        \t]+a0,mepc\n+[     \t]+[0-9a-f]+:[  \t]+34202573[    \t]+csrr[        \t]+a0,mcause\n+[     \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+34402573[    \t]+csrr[        \t]+a0,mip\n+[     \t]+[0-9a-f]+:[  \t]+3a002573[    \t]+csrr[        \t]+a0,0x3a0\n+[     \t]+[0-9a-f]+:[  \t]+3a102573[    \t]+csrr[        \t]+a0,0x3a1\n+[     \t]+[0-9a-f]+:[  \t]+3a202573[    \t]+csrr[        \t]+a0,0x3a2\n+[     \t]+[0-9a-f]+:[  \t]+3a302573[    \t]+csrr[        \t]+a0,0x3a3\n+[     \t]+[0-9a-f]+:[  \t]+3b002573[    \t]+csrr[        \t]+a0,0x3b0\n+[     \t]+[0-9a-f]+:[  \t]+3b102573[    \t]+csrr[        \t]+a0,0x3b1\n+[     \t]+[0-9a-f]+:[  \t]+3b202573[    \t]+csrr[        \t]+a0,0x3b2\n+[     \t]+[0-9a-f]+:[  \t]+3b302573[    \t]+csrr[        \t]+a0,0x3b3\n+[     \t]+[0-9a-f]+:[  \t]+3b402573[    \t]+csrr[        \t]+a0,0x3b4\n+[     \t]+[0-9a-f]+:[  \t]+3b502573[    \t]+csrr[        \t]+a0,0x3b5\n+[     \t]+[0-9a-f]+:[  \t]+3b602573[    \t]+csrr[        \t]+a0,0x3b6\n+[     \t]+[0-9a-f]+:[  \t]+3b702573[    \t]+csrr[        \t]+a0,0x3b7\n+[     \t]+[0-9a-f]+:[  \t]+3b802573[    \t]+csrr[        \t]+a0,0x3b8\n+[     \t]+[0-9a-f]+:[  \t]+3b902573[    \t]+csrr[        \t]+a0,0x3b9\n+[     \t]+[0-9a-f]+:[  \t]+3ba02573[    \t]+csrr[        \t]+a0,0x3ba\n+[     \t]+[0-9a-f]+:[  \t]+3bb02573[    \t]+csrr[        \t]+a0,0x3bb\n+[     \t]+[0-9a-f]+:[  \t]+3bc02573[    \t]+csrr[        \t]+a0,0x3bc\n+[     \t]+[0-9a-f]+:[  \t]+3bd02573[    \t]+csrr[        \t]+a0,0x3bd\n+[     \t]+[0-9a-f]+:[  \t]+3be02573[    \t]+csrr[        \t]+a0,0x3be\n+[     \t]+[0-9a-f]+:[  \t]+3bf02573[    \t]+csrr[        \t]+a0,0x3bf\n+[     \t]+[0-9a-f]+:[  \t]+b0002573[    \t]+csrr[        \t]+a0,mcycle\n+[     \t]+[0-9a-f]+:[  \t]+b0202573[    \t]+csrr[        \t]+a0,minstret\n+[     \t]+[0-9a-f]+:[  \t]+b0302573[    \t]+csrr[        \t]+a0,mhpmcounter3\n+[     \t]+[0-9a-f]+:[  \t]+b0402573[    \t]+csrr[        \t]+a0,mhpmcounter4\n+[     \t]+[0-9a-f]+:[  \t]+b0502573[    \t]+csrr[        \t]+a0,mhpmcounter5\n+[     \t]+[0-9a-f]+:[  \t]+b0602573[    \t]+csrr[        \t]+a0,mhpmcounter6\n+[     \t]+[0-9a-f]+:[  \t]+b0702573[    \t]+csrr[        \t]+a0,mhpmcounter7\n+[     \t]+[0-9a-f]+:[  \t]+b0802573[    \t]+csrr[        \t]+a0,mhpmcounter8\n+[     \t]+[0-9a-f]+:[  \t]+b0902573[    \t]+csrr[        \t]+a0,mhpmcounter9\n+[     \t]+[0-9a-f]+:[  \t]+b0a02573[    \t]+csrr[        \t]+a0,mhpmcounter10\n+[     \t]+[0-9a-f]+:[  \t]+b0b02573[    \t]+csrr[        \t]+a0,mhpmcounter11\n+[     \t]+[0-9a-f]+:[  \t]+b0c02573[    \t]+csrr[        \t]+a0,mhpmcounter12\n+[     \t]+[0-9a-f]+:[  \t]+b0d02573[    \t]+csrr[        \t]+a0,mhpmcounter13\n+[     \t]+[0-9a-f]+:[  \t]+b0e02573[    \t]+csrr[        \t]+a0,mhpmcounter14\n+[     \t]+[0-9a-f]+:[  \t]+b0f02573[    \t]+csrr[        \t]+a0,mhpmcounter15\n+[     \t]+[0-9a-f]+:[  \t]+b1002573[    \t]+csrr[        \t]+a0,mhpmcounter16\n+[     \t]+[0-9a-f]+:[  \t]+b1102573[    \t]+csrr[        \t]+a0,mhpmcounter17\n+[     \t]+[0-9a-f]+:[  \t]+b1202573[    \t]+csrr[        \t]+a0,mhpmcounter18\n+[     \t]+[0-9a-f]+:[  \t]+b1302573[    \t]+csrr[        \t]+a0,mhpmcounter19\n+[     \t]+[0-9a-f]+:[  \t]+b1402573[    \t]+csrr[        \t]+a0,mhpmcounter20\n+[     \t]+[0-9a-f]+:[  \t]+b1502573[    \t]+csrr[        \t]+a0,mhpmcounter21\n+[     \t]+[0-9a-f]+:[  \t]+b1602573[    \t]+csrr[        \t]+a0,mhpmcounter22\n+[     \t]+[0-9a-f]+:[  \t]+b1702573[    \t]+csrr[        \t]+a0,mhpmcounter23\n+[     \t]+[0-9a-f]+:[  \t]+b1802573[    \t]+csrr[        \t]+a0,mhpmcounter24\n+[     \t]+[0-9a-f]+:[  \t]+b1902573[    \t]+csrr[        \t]+a0,mhpmcounter25\n+[     \t]+[0-9a-f]+:[  \t]+b1a02573[    \t]+csrr[        \t]+a0,mhpmcounter26\n+[     \t]+[0-9a-f]+:[  \t]+b1b02573[    \t]+csrr[        \t]+a0,mhpmcounter27\n+[     \t]+[0-9a-f]+:[  \t]+b1c02573[    \t]+csrr[        \t]+a0,mhpmcounter28\n+[     \t]+[0-9a-f]+:[  \t]+b1d02573[    \t]+csrr[        \t]+a0,mhpmcounter29\n+[     \t]+[0-9a-f]+:[  \t]+b1e02573[    \t]+csrr[        \t]+a0,mhpmcounter30\n+[     \t]+[0-9a-f]+:[  \t]+b1f02573[    \t]+csrr[        \t]+a0,mhpmcounter31\n+[     \t]+[0-9a-f]+:[  \t]+b8002573[    \t]+csrr[        \t]+a0,mcycleh\n+[     \t]+[0-9a-f]+:[  \t]+b8202573[    \t]+csrr[        \t]+a0,minstreth\n+[     \t]+[0-9a-f]+:[  \t]+b8302573[    \t]+csrr[        \t]+a0,mhpmcounter3h\n+[     \t]+[0-9a-f]+:[  \t]+b8402573[    \t]+csrr[        \t]+a0,mhpmcounter4h\n+[     \t]+[0-9a-f]+:[  \t]+b8502573[    \t]+csrr[        \t]+a0,mhpmcounter5h\n+[     \t]+[0-9a-f]+:[  \t]+b8602573[    \t]+csrr[        \t]+a0,mhpmcounter6h\n+[     \t]+[0-9a-f]+:[  \t]+b8702573[    \t]+csrr[        \t]+a0,mhpmcounter7h\n+[     \t]+[0-9a-f]+:[  \t]+b8802573[    \t]+csrr[        \t]+a0,mhpmcounter8h\n+[     \t]+[0-9a-f]+:[  \t]+b8902573[    \t]+csrr[        \t]+a0,mhpmcounter9h\n+[     \t]+[0-9a-f]+:[  \t]+b8a02573[    \t]+csrr[        \t]+a0,mhpmcounter10h\n+[     \t]+[0-9a-f]+:[  \t]+b8b02573[    \t]+csrr[        \t]+a0,mhpmcounter11h\n+[     \t]+[0-9a-f]+:[  \t]+b8c02573[    \t]+csrr[        \t]+a0,mhpmcounter12h\n+[     \t]+[0-9a-f]+:[  \t]+b8d02573[    \t]+csrr[        \t]+a0,mhpmcounter13h\n+[     \t]+[0-9a-f]+:[  \t]+b8e02573[    \t]+csrr[        \t]+a0,mhpmcounter14h\n+[     \t]+[0-9a-f]+:[  \t]+b8f02573[    \t]+csrr[        \t]+a0,mhpmcounter15h\n+[     \t]+[0-9a-f]+:[  \t]+b9002573[    \t]+csrr[        \t]+a0,mhpmcounter16h\n+[     \t]+[0-9a-f]+:[  \t]+b9102573[    \t]+csrr[        \t]+a0,mhpmcounter17h\n+[     \t]+[0-9a-f]+:[  \t]+b9202573[    \t]+csrr[        \t]+a0,mhpmcounter18h\n+[     \t]+[0-9a-f]+:[  \t]+b9302573[    \t]+csrr[        \t]+a0,mhpmcounter19h\n+[     \t]+[0-9a-f]+:[  \t]+b9402573[    \t]+csrr[        \t]+a0,mhpmcounter20h\n+[     \t]+[0-9a-f]+:[  \t]+b9502573[    \t]+csrr[        \t]+a0,mhpmcounter21h\n+[     \t]+[0-9a-f]+:[  \t]+b9602573[    \t]+csrr[        \t]+a0,mhpmcounter22h\n+[     \t]+[0-9a-f]+:[  \t]+b9702573[    \t]+csrr[        \t]+a0,mhpmcounter23h\n+[     \t]+[0-9a-f]+:[  \t]+b9802573[    \t]+csrr[        \t]+a0,mhpmcounter24h\n+[     \t]+[0-9a-f]+:[  \t]+b9902573[    \t]+csrr[        \t]+a0,mhpmcounter25h\n+[     \t]+[0-9a-f]+:[  \t]+b9a02573[    \t]+csrr[        \t]+a0,mhpmcounter26h\n+[     \t]+[0-9a-f]+:[  \t]+b9b02573[    \t]+csrr[        \t]+a0,mhpmcounter27h\n+[     \t]+[0-9a-f]+:[  \t]+b9c02573[    \t]+csrr[        \t]+a0,mhpmcounter28h\n+[     \t]+[0-9a-f]+:[  \t]+b9d02573[    \t]+csrr[        \t]+a0,mhpmcounter29h\n+[     \t]+[0-9a-f]+:[  \t]+b9e02573[    \t]+csrr[        \t]+a0,mhpmcounter30h\n+[     \t]+[0-9a-f]+:[  \t]+b9f02573[    \t]+csrr[        \t]+a0,mhpmcounter31h\n+[     \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,mucounteren\n+[     \t]+[0-9a-f]+:[  \t]+32302573[    \t]+csrr[        \t]+a0,mhpmevent3\n+[     \t]+[0-9a-f]+:[  \t]+32402573[    \t]+csrr[        \t]+a0,mhpmevent4\n+[     \t]+[0-9a-f]+:[  \t]+32502573[    \t]+csrr[        \t]+a0,mhpmevent5\n+[     \t]+[0-9a-f]+:[  \t]+32602573[    \t]+csrr[        \t]+a0,mhpmevent6\n+[     \t]+[0-9a-f]+:[  \t]+32702573[    \t]+csrr[        \t]+a0,mhpmevent7\n+[     \t]+[0-9a-f]+:[  \t]+32802573[    \t]+csrr[        \t]+a0,mhpmevent8\n+[     \t]+[0-9a-f]+:[  \t]+32902573[    \t]+csrr[        \t]+a0,mhpmevent9\n+[     \t]+[0-9a-f]+:[  \t]+32a02573[    \t]+csrr[        \t]+a0,mhpmevent10\n+[     \t]+[0-9a-f]+:[  \t]+32b02573[    \t]+csrr[        \t]+a0,mhpmevent11\n+[     \t]+[0-9a-f]+:[  \t]+32c02573[    \t]+csrr[        \t]+a0,mhpmevent12\n+[     \t]+[0-9a-f]+:[  \t]+32d02573[    \t]+csrr[        \t]+a0,mhpmevent13\n+[     \t]+[0-9a-f]+:[  \t]+32e02573[    \t]+csrr[        \t]+a0,mhpmevent14\n+[     \t]+[0-9a-f]+:[  \t]+32f02573[    \t]+csrr[        \t]+a0,mhpmevent15\n+[     \t]+[0-9a-f]+:[  \t]+33002573[    \t]+csrr[        \t]+a0,mhpmevent16\n+[     \t]+[0-9a-f]+:[  \t]+33102573[    \t]+csrr[        \t]+a0,mhpmevent17\n+[     \t]+[0-9a-f]+:[  \t]+33202573[    \t]+csrr[        \t]+a0,mhpmevent18\n+[     \t]+[0-9a-f]+:[  \t]+33302573[    \t]+csrr[        \t]+a0,mhpmevent19\n+[     \t]+[0-9a-f]+:[  \t]+33402573[    \t]+csrr[        \t]+a0,mhpmevent20\n+[     \t]+[0-9a-f]+:[  \t]+33502573[    \t]+csrr[        \t]+a0,mhpmevent21\n+[     \t]+[0-9a-f]+:[  \t]+33602573[    \t]+csrr[        \t]+a0,mhpmevent22\n+[     \t]+[0-9a-f]+:[  \t]+33702573[    \t]+csrr[        \t]+a0,mhpmevent23\n+[     \t]+[0-9a-f]+:[  \t]+33802573[    \t]+csrr[        \t]+a0,mhpmevent24\n+[     \t]+[0-9a-f]+:[  \t]+33902573[    \t]+csrr[        \t]+a0,mhpmevent25\n+[     \t]+[0-9a-f]+:[  \t]+33a02573[    \t]+csrr[        \t]+a0,mhpmevent26\n+[     \t]+[0-9a-f]+:[  \t]+33b02573[    \t]+csrr[        \t]+a0,mhpmevent27\n+[     \t]+[0-9a-f]+:[  \t]+33c02573[    \t]+csrr[        \t]+a0,mhpmevent28\n+[     \t]+[0-9a-f]+:[  \t]+33d02573[    \t]+csrr[        \t]+a0,mhpmevent29\n+[     \t]+[0-9a-f]+:[  \t]+33e02573[    \t]+csrr[        \t]+a0,mhpmevent30\n+[     \t]+[0-9a-f]+:[  \t]+33f02573[    \t]+csrr[        \t]+a0,mhpmevent31\n+[     \t]+[0-9a-f]+:[  \t]+7a002573[    \t]+csrr[        \t]+a0,tselect\n+[     \t]+[0-9a-f]+:[  \t]+7a102573[    \t]+csrr[        \t]+a0,tdata1\n+[     \t]+[0-9a-f]+:[  \t]+7a202573[    \t]+csrr[        \t]+a0,tdata2\n+[     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n+[     \t]+[0-9a-f]+:[  \t]+7b002573[    \t]+csrr[        \t]+a0,dcsr\n+[     \t]+[0-9a-f]+:[  \t]+7b102573[    \t]+csrr[        \t]+a0,dpc\n+[     \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch\n+[     \t]+[0-9a-f]+:[  \t]+7b302573[    \t]+csrr[        \t]+a0,0x7b3\n+[     \t]+[0-9a-f]+:[  \t]+04302573[    \t]+csrr[        \t]+a0,ubadaddr\n+[     \t]+[0-9a-f]+:[  \t]+14302573[    \t]+csrr[        \t]+a0,sbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+18002573[    \t]+csrr[        \t]+a0,sptbr\n+[     \t]+[0-9a-f]+:[  \t]+34302573[    \t]+csrr[        \t]+a0,mbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+32002573[    \t]+csrr[        \t]+a0,mucounteren\n+[     \t]+[0-9a-f]+:[  \t]+7b202573[    \t]+csrr[        \t]+a0,dscratch\n+[     \t]+[0-9a-f]+:[  \t]+20002573[    \t]+csrr[        \t]+a0,hstatus\n+[     \t]+[0-9a-f]+:[  \t]+20202573[    \t]+csrr[        \t]+a0,hedeleg\n+[     \t]+[0-9a-f]+:[  \t]+20302573[    \t]+csrr[        \t]+a0,hideleg\n+[     \t]+[0-9a-f]+:[  \t]+20402573[    \t]+csrr[        \t]+a0,hie\n+[     \t]+[0-9a-f]+:[  \t]+20502573[    \t]+csrr[        \t]+a0,htvec\n+[     \t]+[0-9a-f]+:[  \t]+24002573[    \t]+csrr[        \t]+a0,hscratch\n+[     \t]+[0-9a-f]+:[  \t]+24102573[    \t]+csrr[        \t]+a0,hepc\n+[     \t]+[0-9a-f]+:[  \t]+24202573[    \t]+csrr[        \t]+a0,hcause\n+[     \t]+[0-9a-f]+:[  \t]+24302573[    \t]+csrr[        \t]+a0,hbadaddr\n+[     \t]+[0-9a-f]+:[  \t]+24402573[    \t]+csrr[        \t]+a0,hip\n+[     \t]+[0-9a-f]+:[  \t]+38002573[    \t]+csrr[        \t]+a0,mbase\n+[     \t]+[0-9a-f]+:[  \t]+38102573[    \t]+csrr[        \t]+a0,mbound\n+[     \t]+[0-9a-f]+:[  \t]+38202573[    \t]+csrr[        \t]+a0,mibase\n+[     \t]+[0-9a-f]+:[  \t]+38302573[    \t]+csrr[        \t]+a0,mibound\n+[     \t]+[0-9a-f]+:[  \t]+38402573[    \t]+csrr[        \t]+a0,mdbase\n+[     \t]+[0-9a-f]+:[  \t]+38502573[    \t]+csrr[        \t]+a0,mdbound\n+[     \t]+[0-9a-f]+:[  \t]+32102573[    \t]+csrr[        \t]+a0,mscounteren\n+[     \t]+[0-9a-f]+:[  \t]+32202573[    \t]+csrr[        \t]+a0,mhcounteren"
    },
    {
      "sha": "8fc41d22aa6bd794cfd6f4011fbadaf05c21d73f",
      "filename": "gas/testsuite/gas/riscv/priv-reg.d",
      "status": "removed",
      "additions": 0,
      "deletions": 256,
      "changes": 256,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gas/testsuite/gas/riscv/priv-reg.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gas/testsuite/gas/riscv/priv-reg.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg.d?ref=41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "patch": "@@ -1,256 +0,0 @@\n-#as: -march=rv32if\n-#objdump: -dr\n-\n-.*:[ \t]+file format .*\n-\n-\n-Disassembly of section .text:\n-\n-0+000 <.text>:\n-[ \t]+[0-9a-f]+:[ \t]+00002573[ \t]+csrr[ \t]+a0,ustatus\n-[ \t]+[0-9a-f]+:[ \t]+00402573[ \t]+csrr[ \t]+a0,uie\n-[ \t]+[0-9a-f]+:[ \t]+00502573[ \t]+csrr[ \t]+a0,utvec\n-[ \t]+[0-9a-f]+:[ \t]+04002573[ \t]+csrr[ \t]+a0,uscratch\n-[ \t]+[0-9a-f]+:[ \t]+04102573[ \t]+csrr[ \t]+a0,uepc\n-[ \t]+[0-9a-f]+:[ \t]+04202573[ \t]+csrr[ \t]+a0,ucause\n-[ \t]+[0-9a-f]+:[ \t]+04302573[ \t]+csrr[ \t]+a0,utval\n-[ \t]+[0-9a-f]+:[ \t]+04402573[ \t]+csrr[ \t]+a0,uip\n-[ \t]+[0-9a-f]+:[ \t]+00102573[ \t]+frflags[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+00202573[ \t]+frrm[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+00302573[ \t]+frcsr[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+c0002573[ \t]+rdcycle[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+c0102573[ \t]+rdtime[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+c0202573[ \t]+rdinstret[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+c0302573[ \t]+csrr[ \t]+a0,hpmcounter3\n-[ \t]+[0-9a-f]+:[ \t]+c0402573[ \t]+csrr[ \t]+a0,hpmcounter4\n-[ \t]+[0-9a-f]+:[ \t]+c0502573[ \t]+csrr[ \t]+a0,hpmcounter5\n-[ \t]+[0-9a-f]+:[ \t]+c0602573[ \t]+csrr[ \t]+a0,hpmcounter6\n-[ \t]+[0-9a-f]+:[ \t]+c0702573[ \t]+csrr[ \t]+a0,hpmcounter7\n-[ \t]+[0-9a-f]+:[ \t]+c0802573[ \t]+csrr[ \t]+a0,hpmcounter8\n-[ \t]+[0-9a-f]+:[ \t]+c0902573[ \t]+csrr[ \t]+a0,hpmcounter9\n-[ \t]+[0-9a-f]+:[ \t]+c0a02573[ \t]+csrr[ \t]+a0,hpmcounter10\n-[ \t]+[0-9a-f]+:[ \t]+c0b02573[ \t]+csrr[ \t]+a0,hpmcounter11\n-[ \t]+[0-9a-f]+:[ \t]+c0c02573[ \t]+csrr[ \t]+a0,hpmcounter12\n-[ \t]+[0-9a-f]+:[ \t]+c0d02573[ \t]+csrr[ \t]+a0,hpmcounter13\n-[ \t]+[0-9a-f]+:[ \t]+c0e02573[ \t]+csrr[ \t]+a0,hpmcounter14\n-[ \t]+[0-9a-f]+:[ \t]+c0f02573[ \t]+csrr[ \t]+a0,hpmcounter15\n-[ \t]+[0-9a-f]+:[ \t]+c1002573[ \t]+csrr[ \t]+a0,hpmcounter16\n-[ \t]+[0-9a-f]+:[ \t]+c1102573[ \t]+csrr[ \t]+a0,hpmcounter17\n-[ \t]+[0-9a-f]+:[ \t]+c1202573[ \t]+csrr[ \t]+a0,hpmcounter18\n-[ \t]+[0-9a-f]+:[ \t]+c1302573[ \t]+csrr[ \t]+a0,hpmcounter19\n-[ \t]+[0-9a-f]+:[ \t]+c1402573[ \t]+csrr[ \t]+a0,hpmcounter20\n-[ \t]+[0-9a-f]+:[ \t]+c1502573[ \t]+csrr[ \t]+a0,hpmcounter21\n-[ \t]+[0-9a-f]+:[ \t]+c1602573[ \t]+csrr[ \t]+a0,hpmcounter22\n-[ \t]+[0-9a-f]+:[ \t]+c1702573[ \t]+csrr[ \t]+a0,hpmcounter23\n-[ \t]+[0-9a-f]+:[ \t]+c1802573[ \t]+csrr[ \t]+a0,hpmcounter24\n-[ \t]+[0-9a-f]+:[ \t]+c1902573[ \t]+csrr[ \t]+a0,hpmcounter25\n-[ \t]+[0-9a-f]+:[ \t]+c1a02573[ \t]+csrr[ \t]+a0,hpmcounter26\n-[ \t]+[0-9a-f]+:[ \t]+c1b02573[ \t]+csrr[ \t]+a0,hpmcounter27\n-[ \t]+[0-9a-f]+:[ \t]+c1c02573[ \t]+csrr[ \t]+a0,hpmcounter28\n-[ \t]+[0-9a-f]+:[ \t]+c1d02573[ \t]+csrr[ \t]+a0,hpmcounter29\n-[ \t]+[0-9a-f]+:[ \t]+c1e02573[ \t]+csrr[ \t]+a0,hpmcounter30\n-[ \t]+[0-9a-f]+:[ \t]+c1f02573[ \t]+csrr[ \t]+a0,hpmcounter31\n-[ \t]+[0-9a-f]+:[ \t]+c8002573[ \t]+rdcycleh[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+c8102573[ \t]+rdtimeh[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+c8202573[ \t]+rdinstreth[ \t]+a0\n-[ \t]+[0-9a-f]+:[ \t]+c8302573[ \t]+csrr[ \t]+a0,hpmcounter3h\n-[ \t]+[0-9a-f]+:[ \t]+c8402573[ \t]+csrr[ \t]+a0,hpmcounter4h\n-[ \t]+[0-9a-f]+:[ \t]+c8502573[ \t]+csrr[ \t]+a0,hpmcounter5h\n-[ \t]+[0-9a-f]+:[ \t]+c8602573[ \t]+csrr[ \t]+a0,hpmcounter6h\n-[ \t]+[0-9a-f]+:[ \t]+c8702573[ \t]+csrr[ \t]+a0,hpmcounter7h\n-[ \t]+[0-9a-f]+:[ \t]+c8802573[ \t]+csrr[ \t]+a0,hpmcounter8h\n-[ \t]+[0-9a-f]+:[ \t]+c8902573[ \t]+csrr[ \t]+a0,hpmcounter9h\n-[ \t]+[0-9a-f]+:[ \t]+c8a02573[ \t]+csrr[ \t]+a0,hpmcounter10h\n-[ \t]+[0-9a-f]+:[ \t]+c8b02573[ \t]+csrr[ \t]+a0,hpmcounter11h\n-[ \t]+[0-9a-f]+:[ \t]+c8c02573[ \t]+csrr[ \t]+a0,hpmcounter12h\n-[ \t]+[0-9a-f]+:[ \t]+c8d02573[ \t]+csrr[ \t]+a0,hpmcounter13h\n-[ \t]+[0-9a-f]+:[ \t]+c8e02573[ \t]+csrr[ \t]+a0,hpmcounter14h\n-[ \t]+[0-9a-f]+:[ \t]+c8f02573[ \t]+csrr[ \t]+a0,hpmcounter15h\n-[ \t]+[0-9a-f]+:[ \t]+c9002573[ \t]+csrr[ \t]+a0,hpmcounter16h\n-[ \t]+[0-9a-f]+:[ \t]+c9102573[ \t]+csrr[ \t]+a0,hpmcounter17h\n-[ \t]+[0-9a-f]+:[ \t]+c9202573[ \t]+csrr[ \t]+a0,hpmcounter18h\n-[ \t]+[0-9a-f]+:[ \t]+c9302573[ \t]+csrr[ \t]+a0,hpmcounter19h\n-[ \t]+[0-9a-f]+:[ \t]+c9402573[ \t]+csrr[ \t]+a0,hpmcounter20h\n-[ \t]+[0-9a-f]+:[ \t]+c9502573[ \t]+csrr[ \t]+a0,hpmcounter21h\n-[ \t]+[0-9a-f]+:[ \t]+c9602573[ \t]+csrr[ \t]+a0,hpmcounter22h\n-[ \t]+[0-9a-f]+:[ \t]+c9702573[ \t]+csrr[ \t]+a0,hpmcounter23h\n-[ \t]+[0-9a-f]+:[ \t]+c9802573[ \t]+csrr[ \t]+a0,hpmcounter24h\n-[ \t]+[0-9a-f]+:[ \t]+c9902573[ \t]+csrr[ \t]+a0,hpmcounter25h\n-[ \t]+[0-9a-f]+:[ \t]+c9a02573[ \t]+csrr[ \t]+a0,hpmcounter26h\n-[ \t]+[0-9a-f]+:[ \t]+c9b02573[ \t]+csrr[ \t]+a0,hpmcounter27h\n-[ \t]+[0-9a-f]+:[ \t]+c9c02573[ \t]+csrr[ \t]+a0,hpmcounter28h\n-[ \t]+[0-9a-f]+:[ \t]+c9d02573[ \t]+csrr[ \t]+a0,hpmcounter29h\n-[ \t]+[0-9a-f]+:[ \t]+c9e02573[ \t]+csrr[ \t]+a0,hpmcounter30h\n-[ \t]+[0-9a-f]+:[ \t]+c9f02573[ \t]+csrr[ \t]+a0,hpmcounter31h\n-[ \t]+[0-9a-f]+:[ \t]+10002573[ \t]+csrr[ \t]+a0,sstatus\n-[ \t]+[0-9a-f]+:[ \t]+10202573[ \t]+csrr[ \t]+a0,sedeleg\n-[ \t]+[0-9a-f]+:[ \t]+10302573[ \t]+csrr[ \t]+a0,sideleg\n-[ \t]+[0-9a-f]+:[ \t]+10402573[ \t]+csrr[ \t]+a0,sie\n-[ \t]+[0-9a-f]+:[ \t]+10502573[ \t]+csrr[ \t]+a0,stvec\n-[ \t]+[0-9a-f]+:[ \t]+10602573[ \t]+csrr[ \t]+a0,scounteren\n-[ \t]+[0-9a-f]+:[ \t]+14002573[ \t]+csrr[ \t]+a0,sscratch\n-[ \t]+[0-9a-f]+:[ \t]+14102573[ \t]+csrr[ \t]+a0,sepc\n-[ \t]+[0-9a-f]+:[ \t]+14202573[ \t]+csrr[ \t]+a0,scause\n-[ \t]+[0-9a-f]+:[ \t]+14302573[ \t]+csrr[ \t]+a0,stval\n-[ \t]+[0-9a-f]+:[ \t]+14402573[ \t]+csrr[ \t]+a0,sip\n-[ \t]+[0-9a-f]+:[ \t]+18002573[ \t]+csrr[ \t]+a0,satp\n-[ \t]+[0-9a-f]+:[ \t]+f1102573[ \t]+csrr[ \t]+a0,mvendorid\n-[ \t]+[0-9a-f]+:[ \t]+f1202573[ \t]+csrr[ \t]+a0,marchid\n-[ \t]+[0-9a-f]+:[ \t]+f1302573[ \t]+csrr[ \t]+a0,mimpid\n-[ \t]+[0-9a-f]+:[ \t]+f1402573[ \t]+csrr[ \t]+a0,mhartid\n-[ \t]+[0-9a-f]+:[ \t]+30002573[ \t]+csrr[ \t]+a0,mstatus\n-[ \t]+[0-9a-f]+:[ \t]+30102573[ \t]+csrr[ \t]+a0,misa\n-[ \t]+[0-9a-f]+:[ \t]+30202573[ \t]+csrr[ \t]+a0,medeleg\n-[ \t]+[0-9a-f]+:[ \t]+30302573[ \t]+csrr[ \t]+a0,mideleg\n-[ \t]+[0-9a-f]+:[ \t]+30402573[ \t]+csrr[ \t]+a0,mie\n-[ \t]+[0-9a-f]+:[ \t]+30502573[ \t]+csrr[ \t]+a0,mtvec\n-[ \t]+[0-9a-f]+:[ \t]+30602573[ \t]+csrr[ \t]+a0,mcounteren\n-[ \t]+[0-9a-f]+:[ \t]+34002573[ \t]+csrr[ \t]+a0,mscratch\n-[ \t]+[0-9a-f]+:[ \t]+34102573[ \t]+csrr[ \t]+a0,mepc\n-[ \t]+[0-9a-f]+:[ \t]+34202573[ \t]+csrr[ \t]+a0,mcause\n-[ \t]+[0-9a-f]+:[ \t]+34302573[ \t]+csrr[ \t]+a0,mtval\n-[ \t]+[0-9a-f]+:[ \t]+34402573[ \t]+csrr[ \t]+a0,mip\n-[ \t]+[0-9a-f]+:[ \t]+3a002573[ \t]+csrr[ \t]+a0,pmpcfg0\n-[ \t]+[0-9a-f]+:[ \t]+3a102573[ \t]+csrr[ \t]+a0,pmpcfg1\n-[ \t]+[0-9a-f]+:[ \t]+3a202573[ \t]+csrr[ \t]+a0,pmpcfg2\n-[ \t]+[0-9a-f]+:[ \t]+3a302573[ \t]+csrr[ \t]+a0,pmpcfg3\n-[ \t]+[0-9a-f]+:[ \t]+3b002573[ \t]+csrr[ \t]+a0,pmpaddr0\n-[ \t]+[0-9a-f]+:[ \t]+3b102573[ \t]+csrr[ \t]+a0,pmpaddr1\n-[ \t]+[0-9a-f]+:[ \t]+3b202573[ \t]+csrr[ \t]+a0,pmpaddr2\n-[ \t]+[0-9a-f]+:[ \t]+3b302573[ \t]+csrr[ \t]+a0,pmpaddr3\n-[ \t]+[0-9a-f]+:[ \t]+3b402573[ \t]+csrr[ \t]+a0,pmpaddr4\n-[ \t]+[0-9a-f]+:[ \t]+3b502573[ \t]+csrr[ \t]+a0,pmpaddr5\n-[ \t]+[0-9a-f]+:[ \t]+3b602573[ \t]+csrr[ \t]+a0,pmpaddr6\n-[ \t]+[0-9a-f]+:[ \t]+3b702573[ \t]+csrr[ \t]+a0,pmpaddr7\n-[ \t]+[0-9a-f]+:[ \t]+3b802573[ \t]+csrr[ \t]+a0,pmpaddr8\n-[ \t]+[0-9a-f]+:[ \t]+3b902573[ \t]+csrr[ \t]+a0,pmpaddr9\n-[ \t]+[0-9a-f]+:[ \t]+3ba02573[ \t]+csrr[ \t]+a0,pmpaddr10\n-[ \t]+[0-9a-f]+:[ \t]+3bb02573[ \t]+csrr[ \t]+a0,pmpaddr11\n-[ \t]+[0-9a-f]+:[ \t]+3bc02573[ \t]+csrr[ \t]+a0,pmpaddr12\n-[ \t]+[0-9a-f]+:[ \t]+3bd02573[ \t]+csrr[ \t]+a0,pmpaddr13\n-[ \t]+[0-9a-f]+:[ \t]+3be02573[ \t]+csrr[ \t]+a0,pmpaddr14\n-[ \t]+[0-9a-f]+:[ \t]+3bf02573[ \t]+csrr[ \t]+a0,pmpaddr15\n-[ \t]+[0-9a-f]+:[ \t]+b0002573[ \t]+csrr[ \t]+a0,mcycle\n-[ \t]+[0-9a-f]+:[ \t]+b0202573[ \t]+csrr[ \t]+a0,minstret\n-[ \t]+[0-9a-f]+:[ \t]+b0302573[ \t]+csrr[ \t]+a0,mhpmcounter3\n-[ \t]+[0-9a-f]+:[ \t]+b0402573[ \t]+csrr[ \t]+a0,mhpmcounter4\n-[ \t]+[0-9a-f]+:[ \t]+b0502573[ \t]+csrr[ \t]+a0,mhpmcounter5\n-[ \t]+[0-9a-f]+:[ \t]+b0602573[ \t]+csrr[ \t]+a0,mhpmcounter6\n-[ \t]+[0-9a-f]+:[ \t]+b0702573[ \t]+csrr[ \t]+a0,mhpmcounter7\n-[ \t]+[0-9a-f]+:[ \t]+b0802573[ \t]+csrr[ \t]+a0,mhpmcounter8\n-[ \t]+[0-9a-f]+:[ \t]+b0902573[ \t]+csrr[ \t]+a0,mhpmcounter9\n-[ \t]+[0-9a-f]+:[ \t]+b0a02573[ \t]+csrr[ \t]+a0,mhpmcounter10\n-[ \t]+[0-9a-f]+:[ \t]+b0b02573[ \t]+csrr[ \t]+a0,mhpmcounter11\n-[ \t]+[0-9a-f]+:[ \t]+b0c02573[ \t]+csrr[ \t]+a0,mhpmcounter12\n-[ \t]+[0-9a-f]+:[ \t]+b0d02573[ \t]+csrr[ \t]+a0,mhpmcounter13\n-[ \t]+[0-9a-f]+:[ \t]+b0e02573[ \t]+csrr[ \t]+a0,mhpmcounter14\n-[ \t]+[0-9a-f]+:[ \t]+b0f02573[ \t]+csrr[ \t]+a0,mhpmcounter15\n-[ \t]+[0-9a-f]+:[ \t]+b1002573[ \t]+csrr[ \t]+a0,mhpmcounter16\n-[ \t]+[0-9a-f]+:[ \t]+b1102573[ \t]+csrr[ \t]+a0,mhpmcounter17\n-[ \t]+[0-9a-f]+:[ \t]+b1202573[ \t]+csrr[ \t]+a0,mhpmcounter18\n-[ \t]+[0-9a-f]+:[ \t]+b1302573[ \t]+csrr[ \t]+a0,mhpmcounter19\n-[ \t]+[0-9a-f]+:[ \t]+b1402573[ \t]+csrr[ \t]+a0,mhpmcounter20\n-[ \t]+[0-9a-f]+:[ \t]+b1502573[ \t]+csrr[ \t]+a0,mhpmcounter21\n-[ \t]+[0-9a-f]+:[ \t]+b1602573[ \t]+csrr[ \t]+a0,mhpmcounter22\n-[ \t]+[0-9a-f]+:[ \t]+b1702573[ \t]+csrr[ \t]+a0,mhpmcounter23\n-[ \t]+[0-9a-f]+:[ \t]+b1802573[ \t]+csrr[ \t]+a0,mhpmcounter24\n-[ \t]+[0-9a-f]+:[ \t]+b1902573[ \t]+csrr[ \t]+a0,mhpmcounter25\n-[ \t]+[0-9a-f]+:[ \t]+b1a02573[ \t]+csrr[ \t]+a0,mhpmcounter26\n-[ \t]+[0-9a-f]+:[ \t]+b1b02573[ \t]+csrr[ \t]+a0,mhpmcounter27\n-[ \t]+[0-9a-f]+:[ \t]+b1c02573[ \t]+csrr[ \t]+a0,mhpmcounter28\n-[ \t]+[0-9a-f]+:[ \t]+b1d02573[ \t]+csrr[ \t]+a0,mhpmcounter29\n-[ \t]+[0-9a-f]+:[ \t]+b1e02573[ \t]+csrr[ \t]+a0,mhpmcounter30\n-[ \t]+[0-9a-f]+:[ \t]+b1f02573[ \t]+csrr[ \t]+a0,mhpmcounter31\n-[ \t]+[0-9a-f]+:[ \t]+b8002573[ \t]+csrr[ \t]+a0,mcycleh\n-[ \t]+[0-9a-f]+:[ \t]+b8202573[ \t]+csrr[ \t]+a0,minstreth\n-[ \t]+[0-9a-f]+:[ \t]+b8302573[ \t]+csrr[ \t]+a0,mhpmcounter3h\n-[ \t]+[0-9a-f]+:[ \t]+b8402573[ \t]+csrr[ \t]+a0,mhpmcounter4h\n-[ \t]+[0-9a-f]+:[ \t]+b8502573[ \t]+csrr[ \t]+a0,mhpmcounter5h\n-[ \t]+[0-9a-f]+:[ \t]+b8602573[ \t]+csrr[ \t]+a0,mhpmcounter6h\n-[ \t]+[0-9a-f]+:[ \t]+b8702573[ \t]+csrr[ \t]+a0,mhpmcounter7h\n-[ \t]+[0-9a-f]+:[ \t]+b8802573[ \t]+csrr[ \t]+a0,mhpmcounter8h\n-[ \t]+[0-9a-f]+:[ \t]+b8902573[ \t]+csrr[ \t]+a0,mhpmcounter9h\n-[ \t]+[0-9a-f]+:[ \t]+b8a02573[ \t]+csrr[ \t]+a0,mhpmcounter10h\n-[ \t]+[0-9a-f]+:[ \t]+b8b02573[ \t]+csrr[ \t]+a0,mhpmcounter11h\n-[ \t]+[0-9a-f]+:[ \t]+b8c02573[ \t]+csrr[ \t]+a0,mhpmcounter12h\n-[ \t]+[0-9a-f]+:[ \t]+b8d02573[ \t]+csrr[ \t]+a0,mhpmcounter13h\n-[ \t]+[0-9a-f]+:[ \t]+b8e02573[ \t]+csrr[ \t]+a0,mhpmcounter14h\n-[ \t]+[0-9a-f]+:[ \t]+b8f02573[ \t]+csrr[ \t]+a0,mhpmcounter15h\n-[ \t]+[0-9a-f]+:[ \t]+b9002573[ \t]+csrr[ \t]+a0,mhpmcounter16h\n-[ \t]+[0-9a-f]+:[ \t]+b9102573[ \t]+csrr[ \t]+a0,mhpmcounter17h\n-[ \t]+[0-9a-f]+:[ \t]+b9202573[ \t]+csrr[ \t]+a0,mhpmcounter18h\n-[ \t]+[0-9a-f]+:[ \t]+b9302573[ \t]+csrr[ \t]+a0,mhpmcounter19h\n-[ \t]+[0-9a-f]+:[ \t]+b9402573[ \t]+csrr[ \t]+a0,mhpmcounter20h\n-[ \t]+[0-9a-f]+:[ \t]+b9502573[ \t]+csrr[ \t]+a0,mhpmcounter21h\n-[ \t]+[0-9a-f]+:[ \t]+b9602573[ \t]+csrr[ \t]+a0,mhpmcounter22h\n-[ \t]+[0-9a-f]+:[ \t]+b9702573[ \t]+csrr[ \t]+a0,mhpmcounter23h\n-[ \t]+[0-9a-f]+:[ \t]+b9802573[ \t]+csrr[ \t]+a0,mhpmcounter24h\n-[ \t]+[0-9a-f]+:[ \t]+b9902573[ \t]+csrr[ \t]+a0,mhpmcounter25h\n-[ \t]+[0-9a-f]+:[ \t]+b9a02573[ \t]+csrr[ \t]+a0,mhpmcounter26h\n-[ \t]+[0-9a-f]+:[ \t]+b9b02573[ \t]+csrr[ \t]+a0,mhpmcounter27h\n-[ \t]+[0-9a-f]+:[ \t]+b9c02573[ \t]+csrr[ \t]+a0,mhpmcounter28h\n-[ \t]+[0-9a-f]+:[ \t]+b9d02573[ \t]+csrr[ \t]+a0,mhpmcounter29h\n-[ \t]+[0-9a-f]+:[ \t]+b9e02573[ \t]+csrr[ \t]+a0,mhpmcounter30h\n-[ \t]+[0-9a-f]+:[ \t]+b9f02573[ \t]+csrr[ \t]+a0,mhpmcounter31h\n-[ \t]+[0-9a-f]+:[ \t]+32002573[ \t]+csrr[ \t]+a0,mcountinhibit\n-[ \t]+[0-9a-f]+:[ \t]+32302573[ \t]+csrr[ \t]+a0,mhpmevent3\n-[ \t]+[0-9a-f]+:[ \t]+32402573[ \t]+csrr[ \t]+a0,mhpmevent4\n-[ \t]+[0-9a-f]+:[ \t]+32502573[ \t]+csrr[ \t]+a0,mhpmevent5\n-[ \t]+[0-9a-f]+:[ \t]+32602573[ \t]+csrr[ \t]+a0,mhpmevent6\n-[ \t]+[0-9a-f]+:[ \t]+32702573[ \t]+csrr[ \t]+a0,mhpmevent7\n-[ \t]+[0-9a-f]+:[ \t]+32802573[ \t]+csrr[ \t]+a0,mhpmevent8\n-[ \t]+[0-9a-f]+:[ \t]+32902573[ \t]+csrr[ \t]+a0,mhpmevent9\n-[ \t]+[0-9a-f]+:[ \t]+32a02573[ \t]+csrr[ \t]+a0,mhpmevent10\n-[ \t]+[0-9a-f]+:[ \t]+32b02573[ \t]+csrr[ \t]+a0,mhpmevent11\n-[ \t]+[0-9a-f]+:[ \t]+32c02573[ \t]+csrr[ \t]+a0,mhpmevent12\n-[ \t]+[0-9a-f]+:[ \t]+32d02573[ \t]+csrr[ \t]+a0,mhpmevent13\n-[ \t]+[0-9a-f]+:[ \t]+32e02573[ \t]+csrr[ \t]+a0,mhpmevent14\n-[ \t]+[0-9a-f]+:[ \t]+32f02573[ \t]+csrr[ \t]+a0,mhpmevent15\n-[ \t]+[0-9a-f]+:[ \t]+33002573[ \t]+csrr[ \t]+a0,mhpmevent16\n-[ \t]+[0-9a-f]+:[ \t]+33102573[ \t]+csrr[ \t]+a0,mhpmevent17\n-[ \t]+[0-9a-f]+:[ \t]+33202573[ \t]+csrr[ \t]+a0,mhpmevent18\n-[ \t]+[0-9a-f]+:[ \t]+33302573[ \t]+csrr[ \t]+a0,mhpmevent19\n-[ \t]+[0-9a-f]+:[ \t]+33402573[ \t]+csrr[ \t]+a0,mhpmevent20\n-[ \t]+[0-9a-f]+:[ \t]+33502573[ \t]+csrr[ \t]+a0,mhpmevent21\n-[ \t]+[0-9a-f]+:[ \t]+33602573[ \t]+csrr[ \t]+a0,mhpmevent22\n-[ \t]+[0-9a-f]+:[ \t]+33702573[ \t]+csrr[ \t]+a0,mhpmevent23\n-[ \t]+[0-9a-f]+:[ \t]+33802573[ \t]+csrr[ \t]+a0,mhpmevent24\n-[ \t]+[0-9a-f]+:[ \t]+33902573[ \t]+csrr[ \t]+a0,mhpmevent25\n-[ \t]+[0-9a-f]+:[ \t]+33a02573[ \t]+csrr[ \t]+a0,mhpmevent26\n-[ \t]+[0-9a-f]+:[ \t]+33b02573[ \t]+csrr[ \t]+a0,mhpmevent27\n-[ \t]+[0-9a-f]+:[ \t]+33c02573[ \t]+csrr[ \t]+a0,mhpmevent28\n-[ \t]+[0-9a-f]+:[ \t]+33d02573[ \t]+csrr[ \t]+a0,mhpmevent29\n-[ \t]+[0-9a-f]+:[ \t]+33e02573[ \t]+csrr[ \t]+a0,mhpmevent30\n-[ \t]+[0-9a-f]+:[ \t]+33f02573[ \t]+csrr[ \t]+a0,mhpmevent31\n-[ \t]+[0-9a-f]+:[ \t]+7a002573[ \t]+csrr[ \t]+a0,tselect\n-[ \t]+[0-9a-f]+:[ \t]+7a102573[ \t]+csrr[ \t]+a0,tdata1\n-[ \t]+[0-9a-f]+:[ \t]+7a202573[ \t]+csrr[ \t]+a0,tdata2\n-[ \t]+[0-9a-f]+:[ \t]+7a302573[ \t]+csrr[ \t]+a0,tdata3\n-[ \t]+[0-9a-f]+:[ \t]+7b002573[ \t]+csrr[ \t]+a0,dcsr\n-[ \t]+[0-9a-f]+:[ \t]+7b102573[ \t]+csrr[ \t]+a0,dpc\n-[ \t]+[0-9a-f]+:[ \t]+7b202573[ \t]+csrr[ \t]+a0,dscratch0\n-[ \t]+[0-9a-f]+:[ \t]+7b302573[ \t]+csrr[ \t]+a0,dscratch1\n-[ \t]+[0-9a-f]+:[ \t]+04302573[ \t]+csrr[ \t]+a0,utval\n-[ \t]+[0-9a-f]+:[ \t]+14302573[ \t]+csrr[ \t]+a0,stval\n-[ \t]+[0-9a-f]+:[ \t]+18002573[ \t]+csrr[ \t]+a0,satp\n-[ \t]+[0-9a-f]+:[ \t]+34302573[ \t]+csrr[ \t]+a0,mtval\n-[ \t]+[0-9a-f]+:[ \t]+32002573[ \t]+csrr[ \t]+a0,mcountinhibit\n-[ \t]+[0-9a-f]+:[ \t]+7b202573[ \t]+csrr[ \t]+a0,dscratch0\n-[ \t]+[0-9a-f]+:[ \t]+20002573[ \t]+csrr[ \t]+a0,hstatus\n-[ \t]+[0-9a-f]+:[ \t]+20202573[ \t]+csrr[ \t]+a0,hedeleg\n-[ \t]+[0-9a-f]+:[ \t]+20302573[ \t]+csrr[ \t]+a0,hideleg\n-[ \t]+[0-9a-f]+:[ \t]+20402573[ \t]+csrr[ \t]+a0,hie\n-[ \t]+[0-9a-f]+:[ \t]+20502573[ \t]+csrr[ \t]+a0,htvec\n-[ \t]+[0-9a-f]+:[ \t]+24002573[ \t]+csrr[ \t]+a0,hscratch\n-[ \t]+[0-9a-f]+:[ \t]+24102573[ \t]+csrr[ \t]+a0,hepc\n-[ \t]+[0-9a-f]+:[ \t]+24202573[ \t]+csrr[ \t]+a0,hcause\n-[ \t]+[0-9a-f]+:[ \t]+24302573[ \t]+csrr[ \t]+a0,hbadaddr\n-[ \t]+[0-9a-f]+:[ \t]+24402573[ \t]+csrr[ \t]+a0,hip\n-[ \t]+[0-9a-f]+:[ \t]+38002573[ \t]+csrr[ \t]+a0,mbase\n-[ \t]+[0-9a-f]+:[ \t]+38102573[ \t]+csrr[ \t]+a0,mbound\n-[ \t]+[0-9a-f]+:[ \t]+38202573[ \t]+csrr[ \t]+a0,mibase\n-[ \t]+[0-9a-f]+:[ \t]+38302573[ \t]+csrr[ \t]+a0,mibound\n-[ \t]+[0-9a-f]+:[ \t]+38402573[ \t]+csrr[ \t]+a0,mdbase\n-[ \t]+[0-9a-f]+:[ \t]+38502573[ \t]+csrr[ \t]+a0,mdbound\n-[ \t]+[0-9a-f]+:[ \t]+32102573[ \t]+csrr[ \t]+a0,mscounteren\n-[ \t]+[0-9a-f]+:[ \t]+32202573[ \t]+csrr[ \t]+a0,mhcounteren"
    },
    {
      "sha": "4b0dd025f0badf73a1a7fcf73111a3bef6235f01",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -240,7 +240,7 @@ static struct riscv_register_feature riscv_csr_feature =\n {\n  \"org.gnu.gdb.riscv.csr\",\n  {\n-#define DECLARE_CSR(NAME,VALUE,CLASS) \\\n+#define DECLARE_CSR(NAME,VALUE,CLASS,DEFINE_VER,ABORT_VER) \\\n   { RISCV_ ## VALUE ## _REGNUM, { # NAME }, false },\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n@@ -498,7 +498,7 @@ riscv_register_name (struct gdbarch *gdbarch, int regnum)\n \n   if (regnum >= RISCV_FIRST_CSR_REGNUM && regnum <= RISCV_LAST_CSR_REGNUM)\n     {\n-#define DECLARE_CSR(NAME,VALUE,CLASS) \\\n+#define DECLARE_CSR(NAME,VALUE,CLASS,DEFINE_VER,ABORT_VER) \\\n       case RISCV_ ## VALUE ## _REGNUM: return # NAME;\n \n       switch (regnum)\n@@ -828,7 +828,7 @@ riscv_is_regnum_a_named_csr (int regnum)\n \n   switch (regnum)\n     {\n-#define DECLARE_CSR(name, num, class) case RISCV_ ## num ## _REGNUM:\n+#define DECLARE_CSR(name, num, class, define_ver, abort_ver) case RISCV_ ## num ## _REGNUM:\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n       return true;"
    },
    {
      "sha": "e415fb4a7a1bac1545f7d1dcce6c095ff55eb995",
      "filename": "gdb/riscv-tdep.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gdb/riscv-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/gdb/riscv-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.h?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -44,7 +44,7 @@ enum\n   RISCV_LAST_FP_REGNUM = 64,\t/* Last Floating Point Register */\n \n   RISCV_FIRST_CSR_REGNUM = 65,  /* First CSR */\n-#define DECLARE_CSR(name, num, class) \\\n+#define DECLARE_CSR(name, num, class, define_version, abort_version) \\\n   RISCV_ ## num ## _REGNUM = RISCV_FIRST_CSR_REGNUM + num,\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR"
    },
    {
      "sha": "c309780544e8ef18855eea631b915a108b6497fc",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,23 @@\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h: Include \"bfd.h\" to support bfd_boolean.\n+\t(enum riscv_isa_spec_class): New enum class.  All supported ISA spec\n+\tbelong to one of the class\n+\t(struct riscv_ext_version): New structure holds version information\n+\tfor the specific ISA.\n+\t* opcode/riscv-opc.h (DECLARE_CSR): There are two version information,\n+\tdefine_version and abort_version.  The define_version means which\n+\tprivilege spec is started to define the CSR, and the abort_version\n+\tmeans which privilege spec is started to abort the CSR.  If the CSR is\n+\tvalid for the newest spec, then the abort_version should be\n+\tPRIV_SPEC_CLASS_DRAFT.\n+\t(DECLARE_CSR_ALIAS): Same as DECLARE_CSR, but only for the obselete CSR.\n+\t* opcode/riscv.h (enum riscv_priv_spec_class): New enum class.  Define\n+\tthe current supported privilege spec versions.\n+\t(struct riscv_csr_extra): Add new fields to store more information\n+\tabout the CSR.  We use these information to find the suitable CSR\n+\taddress when user choosing a specific privilege spec.\n+\n 2020-05-19  Alexander Fedotov  <alfedotov@gmail.com>\n \n \tPR 25992"
    },
    {
      "sha": "a6a5de388736c3300b85d91766653ec0079c7f3a",
      "filename": "include/opcode/riscv-opc.h",
      "status": "modified",
      "additions": 248,
      "deletions": 261,
      "changes": 509,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/include/opcode/riscv-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/include/opcode/riscv-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv-opc.h?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -656,7 +656,6 @@\n #define CSR_SIDELEG 0x103\n #define CSR_SIE 0x104\n #define CSR_STVEC 0x105\n-/* scounteren is present int priv spec 1.10.  */\n #define CSR_SCOUNTEREN 0x106\n #define CSR_SSCRATCH 0x140\n #define CSR_SEPC 0x141\n@@ -669,20 +668,17 @@\n #define CSR_MIMPID 0xf13\n #define CSR_MHARTID 0xf14\n #define CSR_MSTATUS 0x300\n-/* misa is 0xf10 in 1.9, but 0x301 in 1.9.1.  */\n #define CSR_MISA 0x301\n #define CSR_MEDELEG 0x302\n #define CSR_MIDELEG 0x303\n #define CSR_MIE 0x304\n #define CSR_MTVEC 0x305\n-/* mcounteren is present in priv spec 1.10.  */\n #define CSR_MCOUNTEREN 0x306\n #define CSR_MSCRATCH 0x340\n #define CSR_MEPC 0x341\n #define CSR_MCAUSE 0x342\n #define CSR_MTVAL 0x343\n #define CSR_MIP 0x344\n-/* pmpcfg0 to pmpcfg3, pmpaddr0 to pmpaddr15 are present in priv spec 1.10.  */\n #define CSR_PMPCFG0 0x3a0\n #define CSR_PMPCFG1 0x3a1\n #define CSR_PMPCFG2 0x3a2\n@@ -765,7 +761,6 @@\n #define CSR_MHPMCOUNTER29H 0xb9d\n #define CSR_MHPMCOUNTER30H 0xb9e\n #define CSR_MHPMCOUNTER31H 0xb9f\n-/* mcountinhibit is present in priv spec 1.11.  */\n #define CSR_MCOUNTINHIBIT 0x320\n #define CSR_MHPMEVENT3 0x323\n #define CSR_MHPMEVENT4 0x324\n@@ -802,10 +797,8 @@\n #define CSR_TDATA3 0x7a3\n #define CSR_DCSR 0x7b0\n #define CSR_DPC 0x7b1\n-/* dscratch0 and dscratch1 are present in priv spec 1.11.  */\n #define CSR_DSCRATCH0 0x7b2\n #define CSR_DSCRATCH1 0x7b3\n-/* These registers are present in priv spec 1.9.1, but are dropped in 1.10.  */\n #define CSR_HSTATUS 0x200\n #define CSR_HEDELEG 0x202\n #define CSR_HIDELEG 0x203\n@@ -1124,262 +1117,256 @@ DECLARE_INSN(custom3_rd_rs1, MATCH_CUSTOM3_RD_RS1, MASK_CUSTOM3_RD_RS1)\n DECLARE_INSN(custom3_rd_rs1_rs2, MATCH_CUSTOM3_RD_RS1_RS2, MASK_CUSTOM3_RD_RS1_RS2)\n #endif\n #ifdef DECLARE_CSR\n-DECLARE_CSR(ustatus, CSR_USTATUS, CSR_CLASS_I)\n-DECLARE_CSR(uie, CSR_UIE, CSR_CLASS_I)\n-DECLARE_CSR(utvec, CSR_UTVEC, CSR_CLASS_I)\n-DECLARE_CSR(uscratch, CSR_USCRATCH, CSR_CLASS_I)\n-DECLARE_CSR(uepc, CSR_UEPC, CSR_CLASS_I)\n-DECLARE_CSR(ucause, CSR_UCAUSE, CSR_CLASS_I)\n-DECLARE_CSR(utval, CSR_UTVAL, CSR_CLASS_I)\n-DECLARE_CSR(uip, CSR_UIP, CSR_CLASS_I)\n-DECLARE_CSR(fflags, CSR_FFLAGS, CSR_CLASS_F)\n-DECLARE_CSR(frm, CSR_FRM, CSR_CLASS_F)\n-DECLARE_CSR(fcsr, CSR_FCSR, CSR_CLASS_F)\n-DECLARE_CSR(cycle, CSR_CYCLE, CSR_CLASS_I)\n-DECLARE_CSR(time, CSR_TIME, CSR_CLASS_I)\n-DECLARE_CSR(instret, CSR_INSTRET, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter3, CSR_HPMCOUNTER3, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter4, CSR_HPMCOUNTER4, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter5, CSR_HPMCOUNTER5, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter6, CSR_HPMCOUNTER6, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter7, CSR_HPMCOUNTER7, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter8, CSR_HPMCOUNTER8, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter9, CSR_HPMCOUNTER9, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter10, CSR_HPMCOUNTER10, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter11, CSR_HPMCOUNTER11, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter12, CSR_HPMCOUNTER12, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter13, CSR_HPMCOUNTER13, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter14, CSR_HPMCOUNTER14, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter15, CSR_HPMCOUNTER15, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter16, CSR_HPMCOUNTER16, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter17, CSR_HPMCOUNTER17, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter18, CSR_HPMCOUNTER18, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter19, CSR_HPMCOUNTER19, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter20, CSR_HPMCOUNTER20, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter21, CSR_HPMCOUNTER21, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter22, CSR_HPMCOUNTER22, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter23, CSR_HPMCOUNTER23, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter24, CSR_HPMCOUNTER24, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter25, CSR_HPMCOUNTER25, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter26, CSR_HPMCOUNTER26, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter27, CSR_HPMCOUNTER27, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter28, CSR_HPMCOUNTER28, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter29, CSR_HPMCOUNTER29, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter30, CSR_HPMCOUNTER30, CSR_CLASS_I)\n-DECLARE_CSR(hpmcounter31, CSR_HPMCOUNTER31, CSR_CLASS_I)\n-DECLARE_CSR(cycleh, CSR_CYCLEH, CSR_CLASS_I_32)\n-DECLARE_CSR(timeh, CSR_TIMEH, CSR_CLASS_I_32)\n-DECLARE_CSR(instreth, CSR_INSTRETH, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter3h, CSR_HPMCOUNTER3H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter4h, CSR_HPMCOUNTER4H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter5h, CSR_HPMCOUNTER5H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter6h, CSR_HPMCOUNTER6H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter7h, CSR_HPMCOUNTER7H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter8h, CSR_HPMCOUNTER8H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter9h, CSR_HPMCOUNTER9H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter10h, CSR_HPMCOUNTER10H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter11h, CSR_HPMCOUNTER11H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter12h, CSR_HPMCOUNTER12H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter13h, CSR_HPMCOUNTER13H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter14h, CSR_HPMCOUNTER14H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter15h, CSR_HPMCOUNTER15H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter16h, CSR_HPMCOUNTER16H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter17h, CSR_HPMCOUNTER17H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter18h, CSR_HPMCOUNTER18H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter19h, CSR_HPMCOUNTER19H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter20h, CSR_HPMCOUNTER20H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter21h, CSR_HPMCOUNTER21H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter22h, CSR_HPMCOUNTER22H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter23h, CSR_HPMCOUNTER23H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter24h, CSR_HPMCOUNTER24H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter25h, CSR_HPMCOUNTER25H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter26h, CSR_HPMCOUNTER26H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter27h, CSR_HPMCOUNTER27H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter28h, CSR_HPMCOUNTER28H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter29h, CSR_HPMCOUNTER29H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter30h, CSR_HPMCOUNTER30H, CSR_CLASS_I_32)\n-DECLARE_CSR(hpmcounter31h, CSR_HPMCOUNTER31H, CSR_CLASS_I_32)\n-DECLARE_CSR(sstatus, CSR_SSTATUS, CSR_CLASS_I)\n-DECLARE_CSR(sedeleg, CSR_SEDELEG, CSR_CLASS_I)\n-DECLARE_CSR(sideleg, CSR_SIDELEG, CSR_CLASS_I)\n-DECLARE_CSR(sie, CSR_SIE, CSR_CLASS_I)\n-DECLARE_CSR(stvec, CSR_STVEC, CSR_CLASS_I)\n-DECLARE_CSR(scounteren, CSR_SCOUNTEREN, CSR_CLASS_I)\n-DECLARE_CSR(sscratch, CSR_SSCRATCH, CSR_CLASS_I)\n-DECLARE_CSR(sepc, CSR_SEPC, CSR_CLASS_I)\n-DECLARE_CSR(scause, CSR_SCAUSE, CSR_CLASS_I)\n-DECLARE_CSR(stval, CSR_STVAL, CSR_CLASS_I)\n-DECLARE_CSR(sip, CSR_SIP, CSR_CLASS_I)\n-DECLARE_CSR(satp, CSR_SATP, CSR_CLASS_I)\n-DECLARE_CSR(mvendorid, CSR_MVENDORID, CSR_CLASS_I)\n-DECLARE_CSR(marchid, CSR_MARCHID, CSR_CLASS_I)\n-DECLARE_CSR(mimpid, CSR_MIMPID, CSR_CLASS_I)\n-DECLARE_CSR(mhartid, CSR_MHARTID, CSR_CLASS_I)\n-DECLARE_CSR(mstatus, CSR_MSTATUS, CSR_CLASS_I)\n-DECLARE_CSR(misa, CSR_MISA, CSR_CLASS_I)\n-DECLARE_CSR(medeleg, CSR_MEDELEG, CSR_CLASS_I)\n-DECLARE_CSR(mideleg, CSR_MIDELEG, CSR_CLASS_I)\n-DECLARE_CSR(mie, CSR_MIE, CSR_CLASS_I)\n-DECLARE_CSR(mtvec, CSR_MTVEC, CSR_CLASS_I)\n-DECLARE_CSR(mcounteren, CSR_MCOUNTEREN, CSR_CLASS_I)\n-DECLARE_CSR(mscratch, CSR_MSCRATCH, CSR_CLASS_I)\n-DECLARE_CSR(mepc, CSR_MEPC, CSR_CLASS_I)\n-DECLARE_CSR(mcause, CSR_MCAUSE, CSR_CLASS_I)\n-DECLARE_CSR(mtval, CSR_MTVAL, CSR_CLASS_I)\n-DECLARE_CSR(mip, CSR_MIP, CSR_CLASS_I)\n-DECLARE_CSR(pmpcfg0, CSR_PMPCFG0, CSR_CLASS_I)\n-DECLARE_CSR(pmpcfg1, CSR_PMPCFG1, CSR_CLASS_I_32)\n-DECLARE_CSR(pmpcfg2, CSR_PMPCFG2, CSR_CLASS_I)\n-DECLARE_CSR(pmpcfg3, CSR_PMPCFG3, CSR_CLASS_I_32)\n-DECLARE_CSR(pmpaddr0, CSR_PMPADDR0, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr1, CSR_PMPADDR1, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr2, CSR_PMPADDR2, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr3, CSR_PMPADDR3, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr4, CSR_PMPADDR4, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr5, CSR_PMPADDR5, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr6, CSR_PMPADDR6, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr7, CSR_PMPADDR7, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr8, CSR_PMPADDR8, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr9, CSR_PMPADDR9, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr10, CSR_PMPADDR10, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr11, CSR_PMPADDR11, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr12, CSR_PMPADDR12, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr13, CSR_PMPADDR13, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr14, CSR_PMPADDR14, CSR_CLASS_I)\n-DECLARE_CSR(pmpaddr15, CSR_PMPADDR15, CSR_CLASS_I)\n-DECLARE_CSR(mcycle, CSR_MCYCLE, CSR_CLASS_I)\n-DECLARE_CSR(minstret, CSR_MINSTRET, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter3, CSR_MHPMCOUNTER3, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter4, CSR_MHPMCOUNTER4, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter5, CSR_MHPMCOUNTER5, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter6, CSR_MHPMCOUNTER6, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter7, CSR_MHPMCOUNTER7, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter8, CSR_MHPMCOUNTER8, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter9, CSR_MHPMCOUNTER9, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter10, CSR_MHPMCOUNTER10, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter11, CSR_MHPMCOUNTER11, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter12, CSR_MHPMCOUNTER12, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter13, CSR_MHPMCOUNTER13, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter14, CSR_MHPMCOUNTER14, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter15, CSR_MHPMCOUNTER15, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter16, CSR_MHPMCOUNTER16, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter17, CSR_MHPMCOUNTER17, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter18, CSR_MHPMCOUNTER18, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter19, CSR_MHPMCOUNTER19, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter20, CSR_MHPMCOUNTER20, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter21, CSR_MHPMCOUNTER21, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter22, CSR_MHPMCOUNTER22, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter23, CSR_MHPMCOUNTER23, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter24, CSR_MHPMCOUNTER24, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter25, CSR_MHPMCOUNTER25, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter26, CSR_MHPMCOUNTER26, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter27, CSR_MHPMCOUNTER27, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter28, CSR_MHPMCOUNTER28, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter29, CSR_MHPMCOUNTER29, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter30, CSR_MHPMCOUNTER30, CSR_CLASS_I)\n-DECLARE_CSR(mhpmcounter31, CSR_MHPMCOUNTER31, CSR_CLASS_I)\n-DECLARE_CSR(mcycleh, CSR_MCYCLEH, CSR_CLASS_I_32)\n-DECLARE_CSR(minstreth, CSR_MINSTRETH, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter3h, CSR_MHPMCOUNTER3H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter4h, CSR_MHPMCOUNTER4H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter5h, CSR_MHPMCOUNTER5H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter6h, CSR_MHPMCOUNTER6H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter7h, CSR_MHPMCOUNTER7H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter8h, CSR_MHPMCOUNTER8H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter9h, CSR_MHPMCOUNTER9H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter10h, CSR_MHPMCOUNTER10H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter11h, CSR_MHPMCOUNTER11H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter12h, CSR_MHPMCOUNTER12H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter13h, CSR_MHPMCOUNTER13H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter14h, CSR_MHPMCOUNTER14H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter15h, CSR_MHPMCOUNTER15H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter16h, CSR_MHPMCOUNTER16H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter17h, CSR_MHPMCOUNTER17H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter18h, CSR_MHPMCOUNTER18H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter19h, CSR_MHPMCOUNTER19H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter20h, CSR_MHPMCOUNTER20H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter21h, CSR_MHPMCOUNTER21H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter22h, CSR_MHPMCOUNTER22H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter23h, CSR_MHPMCOUNTER23H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter24h, CSR_MHPMCOUNTER24H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter25h, CSR_MHPMCOUNTER25H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter26h, CSR_MHPMCOUNTER26H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter27h, CSR_MHPMCOUNTER27H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter28h, CSR_MHPMCOUNTER28H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter29h, CSR_MHPMCOUNTER29H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter30h, CSR_MHPMCOUNTER30H, CSR_CLASS_I_32)\n-DECLARE_CSR(mhpmcounter31h, CSR_MHPMCOUNTER31H, CSR_CLASS_I_32)\n-DECLARE_CSR(mcountinhibit, CSR_MCOUNTINHIBIT, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent3, CSR_MHPMEVENT3, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent4, CSR_MHPMEVENT4, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent5, CSR_MHPMEVENT5, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent6, CSR_MHPMEVENT6, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent7, CSR_MHPMEVENT7, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent8, CSR_MHPMEVENT8, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent9, CSR_MHPMEVENT9, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent10, CSR_MHPMEVENT10, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent11, CSR_MHPMEVENT11, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent12, CSR_MHPMEVENT12, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent13, CSR_MHPMEVENT13, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent14, CSR_MHPMEVENT14, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent15, CSR_MHPMEVENT15, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent16, CSR_MHPMEVENT16, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent17, CSR_MHPMEVENT17, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent18, CSR_MHPMEVENT18, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent19, CSR_MHPMEVENT19, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent20, CSR_MHPMEVENT20, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent21, CSR_MHPMEVENT21, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent22, CSR_MHPMEVENT22, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent23, CSR_MHPMEVENT23, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent24, CSR_MHPMEVENT24, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent25, CSR_MHPMEVENT25, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent26, CSR_MHPMEVENT26, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent27, CSR_MHPMEVENT27, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent28, CSR_MHPMEVENT28, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent29, CSR_MHPMEVENT29, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent30, CSR_MHPMEVENT30, CSR_CLASS_I)\n-DECLARE_CSR(mhpmevent31, CSR_MHPMEVENT31, CSR_CLASS_I)\n-DECLARE_CSR(tselect, CSR_TSELECT, CSR_CLASS_I)\n-DECLARE_CSR(tdata1, CSR_TDATA1, CSR_CLASS_I)\n-DECLARE_CSR(tdata2, CSR_TDATA2, CSR_CLASS_I)\n-DECLARE_CSR(tdata3, CSR_TDATA3, CSR_CLASS_I)\n-DECLARE_CSR(dcsr, CSR_DCSR, CSR_CLASS_I)\n-DECLARE_CSR(dpc, CSR_DPC, CSR_CLASS_I)\n-DECLARE_CSR(dscratch0, CSR_DSCRATCH0, CSR_CLASS_I)\n-DECLARE_CSR(dscratch1, CSR_DSCRATCH1, CSR_CLASS_I)\n-/* These registers are present in priv spec 1.9.1, dropped in 1.10.  */\n-DECLARE_CSR(hstatus, CSR_HSTATUS, CSR_CLASS_I)\n-DECLARE_CSR(hedeleg, CSR_HEDELEG, CSR_CLASS_I)\n-DECLARE_CSR(hideleg, CSR_HIDELEG, CSR_CLASS_I)\n-DECLARE_CSR(hie, CSR_HIE, CSR_CLASS_I)\n-DECLARE_CSR(htvec, CSR_HTVEC, CSR_CLASS_I)\n-DECLARE_CSR(hscratch, CSR_HSCRATCH, CSR_CLASS_I)\n-DECLARE_CSR(hepc, CSR_HEPC, CSR_CLASS_I)\n-DECLARE_CSR(hcause, CSR_HCAUSE, CSR_CLASS_I)\n-DECLARE_CSR(hbadaddr, CSR_HBADADDR, CSR_CLASS_I)\n-DECLARE_CSR(hip, CSR_HIP, CSR_CLASS_I)\n-DECLARE_CSR(mbase, CSR_MBASE, CSR_CLASS_I)\n-DECLARE_CSR(mbound, CSR_MBOUND, CSR_CLASS_I)\n-DECLARE_CSR(mibase, CSR_MIBASE, CSR_CLASS_I)\n-DECLARE_CSR(mibound, CSR_MIBOUND, CSR_CLASS_I)\n-DECLARE_CSR(mdbase, CSR_MDBASE, CSR_CLASS_I)\n-DECLARE_CSR(mdbound, CSR_MDBOUND, CSR_CLASS_I)\n-DECLARE_CSR(mscounteren, CSR_MSCOUNTEREN, CSR_CLASS_I)\n-DECLARE_CSR(mhcounteren, CSR_MHCOUNTEREN, CSR_CLASS_I)\n+DECLARE_CSR(ustatus, CSR_USTATUS, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(uie, CSR_UIE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(utvec, CSR_UTVEC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(uscratch, CSR_USCRATCH, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(uepc, CSR_UEPC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(ucause, CSR_UCAUSE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(utval, CSR_UTVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(uip, CSR_UIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(fflags, CSR_FFLAGS, CSR_CLASS_F, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(frm, CSR_FRM, CSR_CLASS_F, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(fcsr, CSR_FCSR, CSR_CLASS_F, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(cycle, CSR_CYCLE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(time, CSR_TIME, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(instret, CSR_INSTRET, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter3, CSR_HPMCOUNTER3, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter4, CSR_HPMCOUNTER4, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter5, CSR_HPMCOUNTER5, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter6, CSR_HPMCOUNTER6, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter7, CSR_HPMCOUNTER7, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter8, CSR_HPMCOUNTER8, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter9, CSR_HPMCOUNTER9, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter10, CSR_HPMCOUNTER10, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter11, CSR_HPMCOUNTER11, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter12, CSR_HPMCOUNTER12, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter13, CSR_HPMCOUNTER13, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter14, CSR_HPMCOUNTER14, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter15, CSR_HPMCOUNTER15, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter16, CSR_HPMCOUNTER16, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter17, CSR_HPMCOUNTER17, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter18, CSR_HPMCOUNTER18, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter19, CSR_HPMCOUNTER19, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter20, CSR_HPMCOUNTER20, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter21, CSR_HPMCOUNTER21, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter22, CSR_HPMCOUNTER22, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter23, CSR_HPMCOUNTER23, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter24, CSR_HPMCOUNTER24, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter25, CSR_HPMCOUNTER25, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter26, CSR_HPMCOUNTER26, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter27, CSR_HPMCOUNTER27, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter28, CSR_HPMCOUNTER28, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter29, CSR_HPMCOUNTER29, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter30, CSR_HPMCOUNTER30, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter31, CSR_HPMCOUNTER31, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(cycleh, CSR_CYCLEH, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(timeh, CSR_TIMEH, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(instreth, CSR_INSTRETH, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter3h, CSR_HPMCOUNTER3H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter4h, CSR_HPMCOUNTER4H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter5h, CSR_HPMCOUNTER5H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter6h, CSR_HPMCOUNTER6H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter7h, CSR_HPMCOUNTER7H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter8h, CSR_HPMCOUNTER8H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter9h, CSR_HPMCOUNTER9H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter10h, CSR_HPMCOUNTER10H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter11h, CSR_HPMCOUNTER11H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter12h, CSR_HPMCOUNTER12H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter13h, CSR_HPMCOUNTER13H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter14h, CSR_HPMCOUNTER14H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter15h, CSR_HPMCOUNTER15H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter16h, CSR_HPMCOUNTER16H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter17h, CSR_HPMCOUNTER17H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter18h, CSR_HPMCOUNTER18H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter19h, CSR_HPMCOUNTER19H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter20h, CSR_HPMCOUNTER20H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter21h, CSR_HPMCOUNTER21H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter22h, CSR_HPMCOUNTER22H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter23h, CSR_HPMCOUNTER23H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter24h, CSR_HPMCOUNTER24H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter25h, CSR_HPMCOUNTER25H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter26h, CSR_HPMCOUNTER26H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter27h, CSR_HPMCOUNTER27H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter28h, CSR_HPMCOUNTER28H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter29h, CSR_HPMCOUNTER29H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter30h, CSR_HPMCOUNTER30H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hpmcounter31h, CSR_HPMCOUNTER31H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(sstatus, CSR_SSTATUS, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(sedeleg, CSR_SEDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(sideleg, CSR_SIDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(sie, CSR_SIE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(stvec, CSR_STVEC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(scounteren, CSR_SCOUNTEREN, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(sscratch, CSR_SSCRATCH, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(sepc, CSR_SEPC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(scause, CSR_SCAUSE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(stval, CSR_STVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(sip, CSR_SIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(satp, CSR_SATP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mvendorid, CSR_MVENDORID, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(marchid, CSR_MARCHID, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mimpid, CSR_MIMPID, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhartid, CSR_MHARTID, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mstatus, CSR_MSTATUS, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(misa, CSR_MISA, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(medeleg, CSR_MEDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mideleg, CSR_MIDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mie, CSR_MIE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mtvec, CSR_MTVEC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mcounteren, CSR_MCOUNTEREN, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mscratch, CSR_MSCRATCH, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mepc, CSR_MEPC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mcause, CSR_MCAUSE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mtval, CSR_MTVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mip, CSR_MIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpcfg0, CSR_PMPCFG0, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpcfg1, CSR_PMPCFG1, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpcfg2, CSR_PMPCFG2, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpcfg3, CSR_PMPCFG3, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr0, CSR_PMPADDR0, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr1, CSR_PMPADDR1, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr2, CSR_PMPADDR2, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr3, CSR_PMPADDR3, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr4, CSR_PMPADDR4, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr5, CSR_PMPADDR5, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr6, CSR_PMPADDR6, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr7, CSR_PMPADDR7, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr8, CSR_PMPADDR8, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr9, CSR_PMPADDR9, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr10, CSR_PMPADDR10, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr11, CSR_PMPADDR11, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr12, CSR_PMPADDR12, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr13, CSR_PMPADDR13, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr14, CSR_PMPADDR14, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(pmpaddr15, CSR_PMPADDR15, CSR_CLASS_I, PRIV_SPEC_CLASS_1P10, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mcycle, CSR_MCYCLE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(minstret, CSR_MINSTRET, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter3, CSR_MHPMCOUNTER3, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter4, CSR_MHPMCOUNTER4, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter5, CSR_MHPMCOUNTER5, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter6, CSR_MHPMCOUNTER6, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter7, CSR_MHPMCOUNTER7, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter8, CSR_MHPMCOUNTER8, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter9, CSR_MHPMCOUNTER9, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter10, CSR_MHPMCOUNTER10, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter11, CSR_MHPMCOUNTER11, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter12, CSR_MHPMCOUNTER12, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter13, CSR_MHPMCOUNTER13, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter14, CSR_MHPMCOUNTER14, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter15, CSR_MHPMCOUNTER15, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter16, CSR_MHPMCOUNTER16, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter17, CSR_MHPMCOUNTER17, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter18, CSR_MHPMCOUNTER18, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter19, CSR_MHPMCOUNTER19, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter20, CSR_MHPMCOUNTER20, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter21, CSR_MHPMCOUNTER21, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter22, CSR_MHPMCOUNTER22, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter23, CSR_MHPMCOUNTER23, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter24, CSR_MHPMCOUNTER24, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter25, CSR_MHPMCOUNTER25, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter26, CSR_MHPMCOUNTER26, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter27, CSR_MHPMCOUNTER27, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter28, CSR_MHPMCOUNTER28, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter29, CSR_MHPMCOUNTER29, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter30, CSR_MHPMCOUNTER30, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter31, CSR_MHPMCOUNTER31, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mcycleh, CSR_MCYCLEH, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(minstreth, CSR_MINSTRETH, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter3h, CSR_MHPMCOUNTER3H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter4h, CSR_MHPMCOUNTER4H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter5h, CSR_MHPMCOUNTER5H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter6h, CSR_MHPMCOUNTER6H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter7h, CSR_MHPMCOUNTER7H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter8h, CSR_MHPMCOUNTER8H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter9h, CSR_MHPMCOUNTER9H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter10h, CSR_MHPMCOUNTER10H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter11h, CSR_MHPMCOUNTER11H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter12h, CSR_MHPMCOUNTER12H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter13h, CSR_MHPMCOUNTER13H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter14h, CSR_MHPMCOUNTER14H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter15h, CSR_MHPMCOUNTER15H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter16h, CSR_MHPMCOUNTER16H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter17h, CSR_MHPMCOUNTER17H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter18h, CSR_MHPMCOUNTER18H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter19h, CSR_MHPMCOUNTER19H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter20h, CSR_MHPMCOUNTER20H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter21h, CSR_MHPMCOUNTER21H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter22h, CSR_MHPMCOUNTER22H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter23h, CSR_MHPMCOUNTER23H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter24h, CSR_MHPMCOUNTER24H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter25h, CSR_MHPMCOUNTER25H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter26h, CSR_MHPMCOUNTER26H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter27h, CSR_MHPMCOUNTER27H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter28h, CSR_MHPMCOUNTER28H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter29h, CSR_MHPMCOUNTER29H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter30h, CSR_MHPMCOUNTER30H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmcounter31h, CSR_MHPMCOUNTER31H, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mcountinhibit, CSR_MCOUNTINHIBIT, CSR_CLASS_I, PRIV_SPEC_CLASS_1P11, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent3, CSR_MHPMEVENT3, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent4, CSR_MHPMEVENT4, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent5, CSR_MHPMEVENT5, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent6, CSR_MHPMEVENT6, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent7, CSR_MHPMEVENT7, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent8, CSR_MHPMEVENT8, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent9, CSR_MHPMEVENT9, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent10, CSR_MHPMEVENT10, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent11, CSR_MHPMEVENT11, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent12, CSR_MHPMEVENT12, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent13, CSR_MHPMEVENT13, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent14, CSR_MHPMEVENT14, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent15, CSR_MHPMEVENT15, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent16, CSR_MHPMEVENT16, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent17, CSR_MHPMEVENT17, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent18, CSR_MHPMEVENT18, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent19, CSR_MHPMEVENT19, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent20, CSR_MHPMEVENT20, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent21, CSR_MHPMEVENT21, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent22, CSR_MHPMEVENT22, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent23, CSR_MHPMEVENT23, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent24, CSR_MHPMEVENT24, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent25, CSR_MHPMEVENT25, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent26, CSR_MHPMEVENT26, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent27, CSR_MHPMEVENT27, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent28, CSR_MHPMEVENT28, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent29, CSR_MHPMEVENT29, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent30, CSR_MHPMEVENT30, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(mhpmevent31, CSR_MHPMEVENT31, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(tselect, CSR_TSELECT, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(tdata1, CSR_TDATA1, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(tdata2, CSR_TDATA2, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(tdata3, CSR_TDATA3, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(dcsr, CSR_DCSR, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(dpc, CSR_DPC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(dscratch0, CSR_DSCRATCH0, CSR_CLASS_I, PRIV_SPEC_CLASS_1P11, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(dscratch1, CSR_DSCRATCH1, CSR_CLASS_I, PRIV_SPEC_CLASS_1P11, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hstatus, CSR_HSTATUS, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hedeleg, CSR_HEDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hideleg, CSR_HIDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hie, CSR_HIE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(htvec, CSR_HTVEC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hscratch, CSR_HSCRATCH, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hepc, CSR_HEPC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hcause, CSR_HCAUSE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hbadaddr, CSR_HBADADDR, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(hip, CSR_HIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mbase, CSR_MBASE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mbound, CSR_MBOUND, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mibase, CSR_MIBASE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mibound, CSR_MIBOUND, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mdbase, CSR_MDBASE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mdbound, CSR_MDBOUND, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mscounteren, CSR_MSCOUNTEREN, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR(mhcounteren, CSR_MHCOUNTEREN, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n #endif\n #ifdef DECLARE_CSR_ALIAS\n-/* Ubadaddr is 0x043 in 1.9.1, but 0x043 is utval in 1.10.  */\n-DECLARE_CSR_ALIAS(ubadaddr, CSR_UTVAL, CSR_CLASS_I)\n-/* Sbadaddr is 0x143 in 1.9.1, but 0x143 is stval in 1.10.  */\n-DECLARE_CSR_ALIAS(sbadaddr, CSR_STVAL, CSR_CLASS_I)\n-/* Sptbr is 0x180 in 1.9.1, but 0x180 is satp in 1.10.  */\n-DECLARE_CSR_ALIAS(sptbr, CSR_SATP, CSR_CLASS_I)\n-/* Mbadaddr is 0x343 in 1.9.1, but 0x343 is mtval in 1.10.  */\n-DECLARE_CSR_ALIAS(mbadaddr, CSR_MTVAL, CSR_CLASS_I)\n-/* Mucounteren is 0x320 in 1.10, but 0x320 is mcountinhibit in 1.11.  */\n-DECLARE_CSR_ALIAS(mucounteren, CSR_MCOUNTINHIBIT, CSR_CLASS_I)\n-/* Dscratch is 0x7b2 in 1.10, but 0x7b2 is dscratch0 in 1.11.  */\n-DECLARE_CSR_ALIAS(dscratch, CSR_DSCRATCH0, CSR_CLASS_I)\n+DECLARE_CSR_ALIAS(misa, 0xf10, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P9P1)\n+DECLARE_CSR_ALIAS(ubadaddr, CSR_UTVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR_ALIAS(sbadaddr, CSR_STVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR_ALIAS(sptbr, CSR_SATP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR_ALIAS(mbadaddr, CSR_MTVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR_ALIAS(mucounteren, CSR_MCOUNTINHIBIT, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P10)\n+DECLARE_CSR_ALIAS(dscratch, CSR_DSCRATCH0, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9, PRIV_SPEC_CLASS_1P11)\n #endif\n #ifdef DECLARE_CAUSE\n DECLARE_CAUSE(\"misaligned fetch\", CAUSE_MISALIGNED_FETCH)"
    },
    {
      "sha": "feeaa6e8dca63bb2f611671c561ec1750d69c416",
      "filename": "include/opcode/riscv.h",
      "status": "modified",
      "additions": 76,
      "deletions": 0,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/include/opcode/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/include/opcode/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv.h?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -24,6 +24,7 @@\n #include \"riscv-opc.h\"\n #include <stdlib.h>\n #include <stdint.h>\n+#include \"bfd.h\"\n \n typedef uint64_t insn_t;\n \n@@ -343,6 +344,73 @@ struct riscv_opcode\n   unsigned long pinfo;\n };\n \n+/* The current supported ISA spec versions.  */\n+\n+enum riscv_isa_spec_class\n+{\n+  ISA_SPEC_CLASS_NONE,\n+\n+  ISA_SPEC_CLASS_2P2,\n+  ISA_SPEC_CLASS_20190608,\n+  ISA_SPEC_CLASS_20191213\n+};\n+\n+/* This structure holds version information for specific ISA.  */\n+\n+struct riscv_ext_version\n+{\n+  const char *name;\n+  enum riscv_isa_spec_class isa_spec_class;\n+  unsigned int major_version;\n+  unsigned int minor_version;\n+};\n+\n+/* All RISC-V CSR belong to one of these classes.  */\n+\n+enum riscv_csr_class\n+{\n+  CSR_CLASS_NONE,\n+\n+  CSR_CLASS_I,\n+  CSR_CLASS_I_32,      /* rv32 only */\n+  CSR_CLASS_F,         /* f-ext only */\n+};\n+\n+/* The current supported privilege spec versions.  */\n+\n+enum riscv_priv_spec_class\n+{\n+  PRIV_SPEC_CLASS_NONE,\n+\n+  PRIV_SPEC_CLASS_1P9,\n+  PRIV_SPEC_CLASS_1P9P1,\n+  PRIV_SPEC_CLASS_1P10,\n+  PRIV_SPEC_CLASS_1P11,\n+  PRIV_SPEC_CLASS_DRAFT\n+};\n+\n+/* This structure holds all restricted conditions for a CSR.  */\n+\n+struct riscv_csr_extra\n+{\n+  /* Class to which this CSR belongs.  Used to decide whether or\n+     not this CSR is legal in the current -march context.  */\n+  enum riscv_csr_class csr_class;\n+\n+  /* CSR may have differnet numbers in the previous priv spec.  */\n+  unsigned address;\n+\n+  /* Record the CSR is defined/valid in which versions.  */\n+  enum riscv_priv_spec_class define_version;\n+\n+  /* Record the CSR is aborted/invalid from which versions.  If it isn't\n+     aborted in the current version, then it should be CSR_CLASS_VDRAFT.  */\n+  enum riscv_priv_spec_class abort_version;\n+\n+  /* The CSR may have more than one setting.  */\n+  struct riscv_csr_extra *next;\n+};\n+\n /* Instruction is a simple alias (e.g. \"mv\" for \"addi\").  */\n #define\tINSN_ALIAS\t\t0x00000001\n \n@@ -420,5 +488,13 @@ extern const char * const riscv_fpr_names_abi[NFPR];\n \n extern const struct riscv_opcode riscv_opcodes[];\n extern const struct riscv_opcode riscv_insn_types[];\n+extern const struct riscv_ext_version riscv_ext_version_table[];\n+\n+extern bfd_boolean\n+riscv_get_isa_spec_class (const char *, enum riscv_isa_spec_class *);\n+extern bfd_boolean\n+riscv_get_priv_spec_class (const char *, enum riscv_priv_spec_class *);\n+extern const char *\n+riscv_get_priv_spec_name (enum riscv_priv_spec_class);\n \n #endif /* _RISCV_H_ */"
    },
    {
      "sha": "d95d5cfc2171edc4874b961e98b8269aeb749d4b",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,19 @@\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* testsuite/ld-riscv-elf/attr-merge-arch-01.d: Updated\n+        priv attributes according to the -mpriv-spec option.\n+\t* testsuite/ld-riscv-elf/attr-merge-arch-02.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-arch-03.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-priv-spec.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-stack-align.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-strict-align-01.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-strict-align-02.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-strict-align-03.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-strict-align-04.d: Likewise.\n+\t* testsuite/ld-riscv-elf/attr-merge-strict-align-05.d: Likewise.\n+\n 2020-05-20  Alan Modra  <amodra@gmail.com>\n \n \tPR 25993"
    },
    {
      "sha": "032f9641ad23dbac98f091f6031e2638d2f9eb41",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-arch-01.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-arch-01.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-arch-01.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-arch-01.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -7,3 +7,6 @@\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32i2p0_m2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "54a7621f2c378b948df46876f332adb17439e969",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-arch-02.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-arch-02.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-arch-02.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-arch-02.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -7,3 +7,6 @@\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32i2p0_m2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "67f0437e32875e72124e6e1192ca6b55e284cd28",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-arch-03.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-arch-03.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-arch-03.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-arch-03.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -7,3 +7,6 @@\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: \"rv32i2p0_m2p0_xbar2p0_xfoo2p0\"\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "0b7ffea1fc2ef9b09f7c017d097b6c2eace8524b",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-a.s?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,3 @@\n \t.attribute priv_spec, 1\n-\t.attribute priv_spec_minor, 2\n-\t.attribute priv_spec_revision, 3\n+\t.attribute priv_spec_minor, 9\n+\t.attribute priv_spec_revision, 1"
    },
    {
      "sha": "0b7ffea1fc2ef9b09f7c017d097b6c2eace8524b",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec-b.s?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,3 @@\n \t.attribute priv_spec, 1\n-\t.attribute priv_spec_minor, 2\n-\t.attribute priv_spec_revision, 3\n+\t.attribute priv_spec_minor, 9\n+\t.attribute priv_spec_revision, 1"
    },
    {
      "sha": "0aa6fe0701bb1083ce42584261e0af5256edca17",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-priv-spec.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-priv-spec.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -8,5 +8,5 @@ Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n   Tag_RISCV_priv_spec: 1\n-  Tag_RISCV_priv_spec_minor: 2\n-  Tag_RISCV_priv_spec_revision: 3\n+  Tag_RISCV_priv_spec_minor: 9\n+  Tag_RISCV_priv_spec_revision: 1"
    },
    {
      "sha": "5585fac3b7b96a3e7bed24a80962ec8696ab6332",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-stack-align.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-stack-align.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-stack-align.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-stack-align.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -8,3 +8,6 @@ Attribute Section: riscv\n File Attributes\n   Tag_RISCV_stack_align: 16-bytes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "91011a2ba4ddf934337adf55668f5cedcfa4f348",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-strict-align-01.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-01.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-01.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-01.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -8,3 +8,6 @@ Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n   Tag_RISCV_unaligned_access: Unaligned access\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "5bdea27948b6e621ae0ec38f7c9d5adb0fd8e1e5",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-strict-align-02.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-02.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-02.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-02.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -8,3 +8,6 @@ Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n   Tag_RISCV_unaligned_access: Unaligned access\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "ac886fb768180a1166527c478cc5288ae0f2fac4",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-strict-align-03.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-03.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-03.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-03.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -8,3 +8,6 @@ Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n   Tag_RISCV_unaligned_access: Unaligned access\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "dd45f76317ad82cec81c710e6eab86d275454710",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-strict-align-04.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-04.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-04.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-04.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -7,3 +7,6 @@\n Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "ef0c154a1210da8e04f3665f51d836f94b3ba4c8",
      "filename": "ld/testsuite/ld-riscv-elf/attr-merge-strict-align-05.d",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-05.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-05.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/attr-merge-strict-align-05.d?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -8,3 +8,6 @@ Attribute Section: riscv\n File Attributes\n   Tag_RISCV_arch: [a-zA-Z0-9_\\\"].*\n   Tag_RISCV_unaligned_access: Unaligned access\n+  Tag_RISCV_priv_spec: [0-9_\\\"].*\n+  Tag_RISCV_priv_spec_minor: [0-9_\\\"].*\n+#..."
    },
    {
      "sha": "d788d8c35af2734c7cf6d624df9d8ab08cda4bcf",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -1,3 +1,34 @@\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* riscv-opc.c (riscv_ext_version_table): The table used to store\n+\tall information about the supported spec and the corresponding ISA\n+\tversions.  Currently, only Zicsr is supported to verify the\n+\tcorrectness of Z sub extension settings.  Others will be supported\n+\tin the future patches.\n+\t(struct isa_spec_t, isa_specs): List for all supported ISA spec\n+\tclasses and the corresponding strings.\n+\t(riscv_get_isa_spec_class): New function.  Get the corresponding ISA\n+\tspec class by giving a ISA spec string.\n+\t* riscv-opc.c (struct priv_spec_t): New structure.\n+\t(struct priv_spec_t priv_specs): List for all supported privilege spec\n+\tclasses and the corresponding strings.\n+\t(riscv_get_priv_spec_class): New function.  Get the corresponding\n+\tprivilege spec class by giving a spec string.\n+\t(riscv_get_priv_spec_name): New function.  Get the corresponding\n+\tprivilege spec string by giving a CSR version class.\n+\t* riscv-dis.c: Updated since DECLARE_CSR is changed.\n+\t* riscv-dis.c: Add new disassembler option -Mpriv-spec to dump the CSR\n+\taccording to the chosen version.  Build a hash table riscv_csr_hash to\n+\tstore the valid CSR for the chosen pirv verison.  Dump the direct\n+\tCSR address rather than it's name if it is invalid.\n+\t(parse_riscv_dis_option_without_args): New function.  Parse the options\n+\twithout arguments.\n+\t(parse_riscv_dis_option): Call parse_riscv_dis_option_without_args to\n+\tparse the options without arguments first, and then handle the options\n+\twith arguments.  Add the new option -Mpriv-spec, which has argument.\n+\t* riscv-dis.c (print_riscv_disassembler_options): Add description\n+\tabout the new OBJDUMP option.\n+\n 2020-05-19  Peter Bergner  <bergner@linux.ibm.com>\n \n \t* ppc-opc.c (insert_ls, extract_ls): Handle 3-bit L fields and new"
    },
    {
      "sha": "8ff1e9c975151802ad6a870e25269467c7b37c4d",
      "filename": "opcodes/po/opcodes.pot",
      "status": "modified",
      "additions": 86,
      "deletions": 53,
      "changes": 139,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/po/opcodes.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/po/opcodes.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/po/opcodes.pot?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: bug-binutils@gnu.org\\n\"\n-\"POT-Creation-Date: 2020-04-30 13:57+0100\\n\"\n+\"POT-Creation-Date: 2020-05-20 15:53+0100\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -75,7 +75,7 @@ msgid \"\"\n msgstr \"\"\n \n #: aarch64-dis.c:3552 mips-dis.c:2778 mips-dis.c:2788 mips-dis.c:2791\n-#: nfp-dis.c:2981 riscv-dis.c:556\n+#: nfp-dis.c:2981 riscv-dis.c:616\n #, c-format\n msgid \"\\n\"\n msgstr \"\"\n@@ -663,15 +663,15 @@ msgstr \"\"\n \n #: bpf-asm.c:181 epiphany-asm.c:456 fr30-asm.c:311 frv-asm.c:1264\n #: ip2k-asm.c:512 iq2000-asm.c:460 lm32-asm.c:350 m32c-asm.c:1585\n-#: m32r-asm.c:329 mep-asm.c:1288 mt-asm.c:596 or1k-asm.c:580 xc16x-asm.c:377\n+#: m32r-asm.c:329 mep-asm.c:1288 mt-asm.c:596 or1k-asm.c:571 xc16x-asm.c:377\n #: xstormy16-asm.c:277\n #, c-format\n msgid \"internal error: unrecognized field %d while parsing\"\n msgstr \"\"\n \n #: bpf-asm.c:233 epiphany-asm.c:508 fr30-asm.c:363 frv-asm.c:1316\n #: ip2k-asm.c:564 iq2000-asm.c:512 lm32-asm.c:402 m32c-asm.c:1637\n-#: m32r-asm.c:381 mep-asm.c:1340 mt-asm.c:648 or1k-asm.c:632 xc16x-asm.c:429\n+#: m32r-asm.c:381 mep-asm.c:1340 mt-asm.c:648 or1k-asm.c:623 xc16x-asm.c:429\n #: xstormy16-asm.c:329\n msgid \"missing mnemonic in syntax string\"\n msgstr \"\"\n@@ -686,54 +686,54 @@ msgstr \"\"\n #: m32c-asm.c:1772 m32c-asm.c:1776 m32c-asm.c:1865 m32c-asm.c:1972\n #: m32r-asm.c:516 m32r-asm.c:520 m32r-asm.c:609 m32r-asm.c:716 mep-asm.c:1475\n #: mep-asm.c:1479 mep-asm.c:1568 mep-asm.c:1675 mt-asm.c:783 mt-asm.c:787\n-#: mt-asm.c:876 mt-asm.c:983 or1k-asm.c:767 or1k-asm.c:771 or1k-asm.c:860\n-#: or1k-asm.c:967 xc16x-asm.c:564 xc16x-asm.c:568 xc16x-asm.c:657\n+#: mt-asm.c:876 mt-asm.c:983 or1k-asm.c:758 or1k-asm.c:762 or1k-asm.c:851\n+#: or1k-asm.c:958 xc16x-asm.c:564 xc16x-asm.c:568 xc16x-asm.c:657\n #: xc16x-asm.c:764 xstormy16-asm.c:464 xstormy16-asm.c:468 xstormy16-asm.c:557\n #: xstormy16-asm.c:664\n msgid \"unrecognized instruction\"\n msgstr \"\"\n \n #: bpf-asm.c:415 epiphany-asm.c:690 fr30-asm.c:545 frv-asm.c:1498\n #: ip2k-asm.c:746 iq2000-asm.c:694 lm32-asm.c:584 m32c-asm.c:1819\n-#: m32r-asm.c:563 mep-asm.c:1522 mt-asm.c:830 or1k-asm.c:814 xc16x-asm.c:611\n+#: m32r-asm.c:563 mep-asm.c:1522 mt-asm.c:830 or1k-asm.c:805 xc16x-asm.c:611\n #: xstormy16-asm.c:511\n #, c-format\n msgid \"syntax error (expected char `%c', found `%c')\"\n msgstr \"\"\n \n #: bpf-asm.c:425 epiphany-asm.c:700 fr30-asm.c:555 frv-asm.c:1508\n #: ip2k-asm.c:756 iq2000-asm.c:704 lm32-asm.c:594 m32c-asm.c:1829\n-#: m32r-asm.c:573 mep-asm.c:1532 mt-asm.c:840 or1k-asm.c:824 xc16x-asm.c:621\n+#: m32r-asm.c:573 mep-asm.c:1532 mt-asm.c:840 or1k-asm.c:815 xc16x-asm.c:621\n #: xstormy16-asm.c:521\n #, c-format\n msgid \"syntax error (expected char `%c', found end of instruction)\"\n msgstr \"\"\n \n #: bpf-asm.c:455 epiphany-asm.c:730 fr30-asm.c:585 frv-asm.c:1538\n #: ip2k-asm.c:786 iq2000-asm.c:734 lm32-asm.c:624 m32c-asm.c:1859\n-#: m32r-asm.c:603 mep-asm.c:1562 mt-asm.c:870 or1k-asm.c:854 xc16x-asm.c:651\n+#: m32r-asm.c:603 mep-asm.c:1562 mt-asm.c:870 or1k-asm.c:845 xc16x-asm.c:651\n #: xstormy16-asm.c:551\n msgid \"junk at end of line\"\n msgstr \"\"\n \n #: bpf-asm.c:567 epiphany-asm.c:842 fr30-asm.c:697 frv-asm.c:1650\n #: ip2k-asm.c:898 iq2000-asm.c:846 lm32-asm.c:736 m32c-asm.c:1971\n-#: m32r-asm.c:715 mep-asm.c:1674 mt-asm.c:982 or1k-asm.c:966 xc16x-asm.c:763\n+#: m32r-asm.c:715 mep-asm.c:1674 mt-asm.c:982 or1k-asm.c:957 xc16x-asm.c:763\n #: xstormy16-asm.c:663\n msgid \"unrecognized form of instruction\"\n msgstr \"\"\n \n #: bpf-asm.c:581 epiphany-asm.c:856 fr30-asm.c:711 frv-asm.c:1664\n #: ip2k-asm.c:912 iq2000-asm.c:860 lm32-asm.c:750 m32c-asm.c:1985\n-#: m32r-asm.c:729 mep-asm.c:1688 mt-asm.c:996 or1k-asm.c:980 xc16x-asm.c:777\n+#: m32r-asm.c:729 mep-asm.c:1688 mt-asm.c:996 or1k-asm.c:971 xc16x-asm.c:777\n #: xstormy16-asm.c:677\n #, c-format\n msgid \"bad instruction `%.50s...'\"\n msgstr \"\"\n \n #: bpf-asm.c:584 epiphany-asm.c:859 fr30-asm.c:714 frv-asm.c:1667\n #: ip2k-asm.c:915 iq2000-asm.c:863 lm32-asm.c:753 m32c-asm.c:1988\n-#: m32r-asm.c:732 mep-asm.c:1691 mt-asm.c:999 or1k-asm.c:983 xc16x-asm.c:780\n+#: m32r-asm.c:732 mep-asm.c:1691 mt-asm.c:999 or1k-asm.c:974 xc16x-asm.c:780\n #: xstormy16-asm.c:680\n #, c-format\n msgid \"bad instruction `%.50s'\"\n@@ -766,7 +766,7 @@ msgstr \"\"\n \n #: bpf-dis.c:203 epiphany-dis.c:279 fr30-dis.c:300 frv-dis.c:397 ip2k-dis.c:289\n #: iq2000-dis.c:190 lm32-dis.c:148 m32c-dis.c:892 m32r-dis.c:280 mep-dis.c:1188\n-#: mt-dis.c:291 or1k-dis.c:184 xc16x-dis.c:421 xstormy16-dis.c:169\n+#: mt-dis.c:291 or1k-dis.c:175 xc16x-dis.c:421 xstormy16-dis.c:169\n #, c-format\n msgid \"internal error: unrecognized field %d while printing insn\"\n msgstr \"\"\n@@ -797,47 +797,47 @@ msgstr \"\"\n \n #: bpf-ibld.c:628 epiphany-ibld.c:883 fr30-ibld.c:738 frv-ibld.c:864\n #: ip2k-ibld.c:615 iq2000-ibld.c:721 lm32-ibld.c:642 m32c-ibld.c:1739\n-#: m32r-ibld.c:673 mep-ibld.c:1216 mt-ibld.c:757 or1k-ibld.c:745\n+#: m32r-ibld.c:673 mep-ibld.c:1216 mt-ibld.c:757 or1k-ibld.c:736\n #: xc16x-ibld.c:760 xstormy16-ibld.c:686\n #, c-format\n msgid \"internal error: unrecognized field %d while building insn\"\n msgstr \"\"\n \n #: bpf-ibld.c:712 epiphany-ibld.c:1178 fr30-ibld.c:944 frv-ibld.c:1182\n #: ip2k-ibld.c:691 iq2000-ibld.c:897 lm32-ibld.c:747 m32c-ibld.c:2901\n-#: m32r-ibld.c:811 mep-ibld.c:1816 mt-ibld.c:978 or1k-ibld.c:913\n+#: m32r-ibld.c:811 mep-ibld.c:1816 mt-ibld.c:978 or1k-ibld.c:895\n #: xc16x-ibld.c:981 xstormy16-ibld.c:833\n #, c-format\n msgid \"internal error: unrecognized field %d while decoding insn\"\n msgstr \"\"\n \n #: bpf-ibld.c:781 epiphany-ibld.c:1322 fr30-ibld.c:1091 frv-ibld.c:1461\n #: ip2k-ibld.c:766 iq2000-ibld.c:1029 lm32-ibld.c:837 m32c-ibld.c:3519\n-#: m32r-ibld.c:925 mep-ibld.c:2287 mt-ibld.c:1179 or1k-ibld.c:1018\n+#: m32r-ibld.c:925 mep-ibld.c:2287 mt-ibld.c:1179 or1k-ibld.c:991\n #: xc16x-ibld.c:1203 xstormy16-ibld.c:944\n #, c-format\n msgid \"internal error: unrecognized field %d while getting int operand\"\n msgstr \"\"\n \n #: bpf-ibld.c:832 epiphany-ibld.c:1448 fr30-ibld.c:1220 frv-ibld.c:1722\n #: ip2k-ibld.c:823 iq2000-ibld.c:1143 lm32-ibld.c:909 m32c-ibld.c:4119\n-#: m32r-ibld.c:1021 mep-ibld.c:2740 mt-ibld.c:1362 or1k-ibld.c:1105\n+#: m32r-ibld.c:1021 mep-ibld.c:2740 mt-ibld.c:1362 or1k-ibld.c:1069\n #: xc16x-ibld.c:1407 xstormy16-ibld.c:1037\n #, c-format\n msgid \"internal error: unrecognized field %d while getting vma operand\"\n msgstr \"\"\n \n #: bpf-ibld.c:890 epiphany-ibld.c:1581 fr30-ibld.c:1352 frv-ibld.c:1990\n #: ip2k-ibld.c:883 iq2000-ibld.c:1264 lm32-ibld.c:988 m32c-ibld.c:4707\n-#: m32r-ibld.c:1123 mep-ibld.c:3154 mt-ibld.c:1552 or1k-ibld.c:1199\n+#: m32r-ibld.c:1123 mep-ibld.c:3154 mt-ibld.c:1552 or1k-ibld.c:1154\n #: xc16x-ibld.c:1612 xstormy16-ibld.c:1137\n #, c-format\n msgid \"internal error: unrecognized field %d while setting int operand\"\n msgstr \"\"\n \n #: bpf-ibld.c:938 epiphany-ibld.c:1704 fr30-ibld.c:1474 frv-ibld.c:2248\n #: ip2k-ibld.c:933 iq2000-ibld.c:1375 lm32-ibld.c:1057 m32c-ibld.c:5285\n-#: m32r-ibld.c:1215 mep-ibld.c:3558 mt-ibld.c:1732 or1k-ibld.c:1283\n+#: m32r-ibld.c:1215 mep-ibld.c:3558 mt-ibld.c:1732 or1k-ibld.c:1229\n #: xc16x-ibld.c:1807 xstormy16-ibld.c:1227\n #, c-format\n msgid \"internal error: unrecognized field %d while setting vma operand\"\n@@ -1881,29 +1881,29 @@ msgstr \"\"\n msgid \"internal relocation type invalid\"\n msgstr \"\"\n \n-#: or1k-desc.c:2213\n+#: or1k-desc.c:2040\n #, c-format\n msgid \"\"\n \"internal error: or1k_cgen_rebuild_tables: conflicting insn-chunk-bitsize \"\n \"values: `%d' vs. `%d'\"\n msgstr \"\"\n \n-#: or1k-desc.c:2296\n+#: or1k-desc.c:2123\n #, c-format\n msgid \"internal error: or1k_cgen_cpu_open: unsupported argument `%d'\"\n msgstr \"\"\n \n-#: or1k-desc.c:2315\n+#: or1k-desc.c:2142\n #, c-format\n msgid \"internal error: or1k_cgen_cpu_open: no endianness specified\"\n msgstr \"\"\n \n-#: ppc-dis.c:376\n+#: ppc-dis.c:381\n #, c-format\n msgid \"warning: ignoring unknown -M%s option\"\n msgstr \"\"\n \n-#: ppc-dis.c:965\n+#: ppc-dis.c:972\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -1935,121 +1935,154 @@ msgstr \"\"\n msgid \"attempt to set 'at' bits when using + or - modifier\"\n msgstr \"\"\n \n-#: ppc-opc.c:658\n+#: ppc-opc.c:677\n msgid \"invalid R operand\"\n msgstr \"\"\n \n-#: ppc-opc.c:713\n+#: ppc-opc.c:732\n msgid \"invalid mask field\"\n msgstr \"\"\n \n-#: ppc-opc.c:736\n+#: ppc-opc.c:755\n msgid \"invalid mfcr mask\"\n msgstr \"\"\n \n-#: ppc-opc.c:812\n+#: ppc-opc.c:873 ppc-opc.c:891\n msgid \"illegal L operand value\"\n msgstr \"\"\n \n-#: ppc-opc.c:851\n+#: ppc-opc.c:914\n+msgid \"illegal WC operand value\"\n+msgstr \"\"\n+\n+#: ppc-opc.c:1011\n msgid \"incompatible L operand value\"\n msgstr \"\"\n \n-#: ppc-opc.c:891 ppc-opc.c:926\n+#: ppc-opc.c:1051 ppc-opc.c:1086\n msgid \"illegal bitmask\"\n msgstr \"\"\n \n-#: ppc-opc.c:1013\n+#: ppc-opc.c:1173\n msgid \"address register in load range\"\n msgstr \"\"\n \n-#: ppc-opc.c:1079\n+#: ppc-opc.c:1213\n+msgid \"illegal PL operand value\"\n+msgstr \"\"\n+\n+#: ppc-opc.c:1274\n msgid \"index register in load range\"\n msgstr \"\"\n \n-#: ppc-opc.c:1108 ppc-opc.c:1194\n+#: ppc-opc.c:1303 ppc-opc.c:1389\n msgid \"source and target register operands must be different\"\n msgstr \"\"\n \n-#: ppc-opc.c:1139\n+#: ppc-opc.c:1334\n msgid \"invalid register operand when updating\"\n msgstr \"\"\n \n-#: ppc-opc.c:1257\n+#: ppc-opc.c:1452\n msgid \"illegal immediate value\"\n msgstr \"\"\n \n-#: ppc-opc.c:1362\n+#: ppc-opc.c:1557\n msgid \"invalid bat number\"\n msgstr \"\"\n \n-#: ppc-opc.c:1397\n+#: ppc-opc.c:1592\n msgid \"invalid sprg number\"\n msgstr \"\"\n \n-#: ppc-opc.c:1434\n+#: ppc-opc.c:1629\n msgid \"invalid tbr number\"\n msgstr \"\"\n \n-#: ppc-opc.c:1581\n+#: ppc-opc.c:1715 ppc-opc.c:1761\n+msgid \"VSR overlaps ACC operand\"\n+msgstr \"\"\n+\n+#: ppc-opc.c:1868\n msgid \"invalid constant\"\n msgstr \"\"\n \n-#: ppc-opc.c:1683 ppc-opc.c:1706 ppc-opc.c:1729 ppc-opc.c:1752\n+#: ppc-opc.c:1970 ppc-opc.c:1993 ppc-opc.c:2016 ppc-opc.c:2039\n msgid \"UIMM = 00000 is illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1775\n+#: ppc-opc.c:2062\n msgid \"UIMM values >7 are illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1798\n+#: ppc-opc.c:2085\n msgid \"UIMM values >15 are illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1821\n+#: ppc-opc.c:2108\n msgid \"GPR odd is illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1844 ppc-opc.c:1867\n+#: ppc-opc.c:2131 ppc-opc.c:2154\n msgid \"invalid offset\"\n msgstr \"\"\n \n-#: ppc-opc.c:1890\n+#: ppc-opc.c:2177\n msgid \"invalid Ddd value\"\n msgstr \"\"\n \n-#: riscv-dis.c:68\n+#. The option without '=' should be defined above.\n+#: riscv-dis.c:84 riscv-dis.c:108\n #, c-format\n msgid \"unrecognized disassembler option: %s\"\n msgstr \"\"\n \n-#: riscv-dis.c:346\n+#. Invalid options with '=', no option name before '=',\n+#. and no value after '='.\n+#: riscv-dis.c:92\n+#, c-format\n+msgid \"unrecognized disassembler option with '=': %s\"\n+msgstr \"\"\n+\n+#: riscv-dis.c:102\n+#, c-format\n+msgid \"unknown privilege spec set by %s=%s\"\n+msgstr \"\"\n+\n+#: riscv-dis.c:402\n #, c-format\n msgid \"# internal error, undefined modifier (%c)\"\n msgstr \"\"\n \n-#: riscv-dis.c:545\n+#: riscv-dis.c:601\n #, c-format\n msgid \"\"\n \"\\n\"\n \"The following RISC-V-specific disassembler options are supported for use\\n\"\n \"with the -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: riscv-dis.c:549\n+#: riscv-dis.c:605\n+#, c-format\n+msgid \"\"\n+\"\\n\"\n+\"  numeric         Print numeric register names, rather than ABI names.\\n\"\n+msgstr \"\"\n+\n+#: riscv-dis.c:608\n #, c-format\n msgid \"\"\n \"\\n\"\n-\"  numeric       Print numeric register names, rather than ABI names.\\n\"\n+\"  no-aliases      Disassemble only into canonical instructions, rather\\n\"\n+\"                  than into pseudoinstructions.\\n\"\n msgstr \"\"\n \n-#: riscv-dis.c:552\n+#: riscv-dis.c:612\n #, c-format\n msgid \"\"\n \"\\n\"\n-\"  no-aliases    Disassemble only into canonical instructions, rather\\n\"\n-\"                than into pseudoinstructions.\\n\"\n+\"  priv-spec=PRIV  Print the CSR according to the chosen privilege spec\\n\"\n+\"                  (1.9, 1.9.1, 1.10, 1.11).\\n\"\n msgstr \"\"\n \n #: rx-dis.c:139 rx-dis.c:163 rx-dis.c:171 rx-dis.c:179 rx-dis.c:187"
    },
    {
      "sha": "f26a46e0b34aa8c2e59530714f18d1126317a92b",
      "filename": "opcodes/riscv-dis.c",
      "status": "modified",
      "additions": 70,
      "deletions": 10,
      "changes": 80,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/riscv-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/riscv-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-dis.c?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -31,6 +31,8 @@\n #include \"bfd_stdint.h\"\n #include <ctype.h>\n \n+static enum riscv_priv_spec_class default_priv_spec = PRIV_SPEC_CLASS_NONE;\n+\n struct riscv_private_data\n {\n   bfd_vma gp;\n@@ -52,8 +54,8 @@ set_default_riscv_dis_options (void)\n   no_aliases = 0;\n }\n \n-static void\n-parse_riscv_dis_option (const char *option)\n+static bfd_boolean\n+parse_riscv_dis_option_without_args (const char *option)\n {\n   if (strcmp (option, \"no-aliases\") == 0)\n     no_aliases = 1;\n@@ -62,6 +64,44 @@ parse_riscv_dis_option (const char *option)\n       riscv_gpr_names = riscv_gpr_names_numeric;\n       riscv_fpr_names = riscv_fpr_names_numeric;\n     }\n+  else\n+    return FALSE;\n+  return TRUE;\n+}\n+\n+static void\n+parse_riscv_dis_option (const char *option)\n+{\n+  char *equal, *value;\n+\n+  if (parse_riscv_dis_option_without_args (option))\n+    return;\n+\n+  equal = strchr (option, '=');\n+  if (equal == NULL)\n+    {\n+      /* The option without '=' should be defined above.  */\n+      opcodes_error_handler (_(\"unrecognized disassembler option: %s\"), option);\n+      return;\n+    }\n+  if (equal == option\n+      || *(equal + 1) == '\\0')\n+    {\n+      /* Invalid options with '=', no option name before '=',\n+       and no value after '='.  */\n+      opcodes_error_handler (_(\"unrecognized disassembler option with '=': %s\"),\n+                            option);\n+      return;\n+    }\n+\n+  *equal = '\\0';\n+  value = equal + 1;\n+  if (strcmp (option, \"priv-spec\") == 0)\n+    {\n+      if (!riscv_get_priv_spec_class (value, &default_priv_spec))\n+       opcodes_error_handler (_(\"unknown privilege spec set by %s=%s\"),\n+                              option, value);\n+    }\n   else\n     {\n       /* xgettext:c-format */\n@@ -322,16 +362,32 @@ print_insn_args (const char *d, insn_t l, bfd_vma pc, disassemble_info *info)\n \n \tcase 'E':\n \t  {\n-\t    const char* csr_name = NULL;\n+\t    static const char *riscv_csr_hash[4096];    /* Total 2^12 CSR.  */\n+\t    static bfd_boolean init_csr = FALSE;\n \t    unsigned int csr = EXTRACT_OPERAND (CSR, l);\n-\t    switch (csr)\n+\n+\t    if (!init_csr)\n \t      {\n-#define DECLARE_CSR(name, num, class) case num: csr_name = #name; break;\n+\t\tunsigned int i;\n+\t\tfor (i = 0; i < 4096; i++)\n+\t\t  riscv_csr_hash[i] = NULL;\n+\n+\t\t/* Set to the newest privilege version.  */\n+\t\tif (default_priv_spec == PRIV_SPEC_CLASS_NONE)\n+\t\t  default_priv_spec = PRIV_SPEC_CLASS_DRAFT - 1;\n+\n+#define DECLARE_CSR(name, num, class, define_version, abort_version) \\\n+\t\tif (default_priv_spec >= define_version\t\t     \\\n+\t\t    && default_priv_spec < abort_version)\t     \\\n+\t\t  riscv_csr_hash[num] = #name;\n+#define DECLARE_CSR_ALIAS(name, num, class, define_version, abort_version) \\\n+\t\tDECLARE_CSR (name, num, class, define_version, abort_version)\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n \t      }\n-\t    if (csr_name)\n-\t      print (info->stream, \"%s\", csr_name);\n+\n+\t    if (riscv_csr_hash[csr] != NULL)\n+\t      print (info->stream, \"%s\", riscv_csr_hash[csr]);\n \t    else\n \t      print (info->stream, \"0x%x\", csr);\n \t    break;\n@@ -547,11 +603,15 @@ The following RISC-V-specific disassembler options are supported for use\\n\\\n with the -M switch (multiple options should be separated by commas):\\n\"));\n \n   fprintf (stream, _(\"\\n\\\n-  numeric       Print numeric register names, rather than ABI names.\\n\"));\n+  numeric         Print numeric register names, rather than ABI names.\\n\"));\n+\n+  fprintf (stream, _(\"\\n\\\n+  no-aliases      Disassemble only into canonical instructions, rather\\n\\\n+                  than into pseudoinstructions.\\n\"));\n \n   fprintf (stream, _(\"\\n\\\n-  no-aliases    Disassemble only into canonical instructions, rather\\n\\\n-                than into pseudoinstructions.\\n\"));\n+  priv-spec=PRIV  Print the CSR according to the chosen privilege spec\\n\\\n+                  (1.9, 1.9.1, 1.10, 1.11).\\n\"));\n \n   fprintf (stream, _(\"\\n\"));\n }"
    },
    {
      "sha": "f011f1bbb7e8dea0ee0b58d356c1e56402d8f30a",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 144,
      "deletions": 0,
      "changes": 144,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=8f595e9b4fd0a3a74d53ddffd69f2825627ae5c6",
      "patch": "@@ -884,3 +884,147 @@ const struct riscv_opcode riscv_insn_types[] =\n /* Terminate the list.  */\n {0, 0, INSN_CLASS_NONE, 0, 0, 0, 0, 0}\n };\n+\n+/* All standard extensions defined in all supported ISA spec.  */\n+const struct riscv_ext_version riscv_ext_version_table[] =\n+{\n+/* name, ISA spec, major version, minor_version.  */\n+{\"e\", ISA_SPEC_CLASS_20191213, 1, 9},\n+{\"e\", ISA_SPEC_CLASS_20190608, 1, 9},\n+{\"e\", ISA_SPEC_CLASS_2P2,      1, 9},\n+\n+{\"i\", ISA_SPEC_CLASS_20191213, 2, 1},\n+{\"i\", ISA_SPEC_CLASS_20190608, 2, 1},\n+{\"i\", ISA_SPEC_CLASS_2P2,      2, 0},\n+\n+{\"m\", ISA_SPEC_CLASS_20191213, 2, 0},\n+{\"m\", ISA_SPEC_CLASS_20190608, 2, 0},\n+{\"m\", ISA_SPEC_CLASS_2P2,      2, 0},\n+\n+{\"a\", ISA_SPEC_CLASS_20191213, 2, 1},\n+{\"a\", ISA_SPEC_CLASS_20190608, 2, 0},\n+{\"a\", ISA_SPEC_CLASS_2P2,      2, 0},\n+\n+{\"f\", ISA_SPEC_CLASS_20191213, 2, 2},\n+{\"f\", ISA_SPEC_CLASS_20190608, 2, 2},\n+{\"f\", ISA_SPEC_CLASS_2P2,      2, 0},\n+\n+{\"d\", ISA_SPEC_CLASS_20191213, 2, 2},\n+{\"d\", ISA_SPEC_CLASS_20190608, 2, 2},\n+{\"d\", ISA_SPEC_CLASS_2P2,      2, 0},\n+\n+{\"q\", ISA_SPEC_CLASS_20191213, 2, 2},\n+{\"q\", ISA_SPEC_CLASS_20190608, 2, 2},\n+{\"q\", ISA_SPEC_CLASS_2P2,      2, 0},\n+\n+{\"c\", ISA_SPEC_CLASS_20191213, 2, 0},\n+{\"c\", ISA_SPEC_CLASS_20190608, 2, 0},\n+{\"c\", ISA_SPEC_CLASS_2P2,      2, 0},\n+\n+{\"p\", ISA_SPEC_CLASS_20191213, 0, 2},\n+{\"p\", ISA_SPEC_CLASS_20190608, 0, 2},\n+{\"p\", ISA_SPEC_CLASS_2P2,      0, 1},\n+\n+{\"v\", ISA_SPEC_CLASS_20191213, 0, 7},\n+{\"v\", ISA_SPEC_CLASS_20190608, 0, 7},\n+{\"v\", ISA_SPEC_CLASS_2P2,      0, 7},\n+\n+{\"n\", ISA_SPEC_CLASS_20190608, 1, 1},\n+{\"n\", ISA_SPEC_CLASS_2P2,      1, 1},\n+\n+{\"zicsr\", ISA_SPEC_CLASS_20191213, 2, 0},\n+{\"zicsr\", ISA_SPEC_CLASS_20190608, 2, 0},\n+\n+/* Terminate the list.  */\n+{NULL, 0, 0, 0}\n+};\n+\n+struct isa_spec_t\n+{\n+  const char *name;\n+  enum riscv_isa_spec_class class;\n+};\n+\n+/* List for all supported ISA spec versions.  */\n+static const struct isa_spec_t isa_specs[] =\n+{\n+  {\"2.2\",      ISA_SPEC_CLASS_2P2},\n+  {\"20190608\", ISA_SPEC_CLASS_20190608},\n+  {\"20191213\", ISA_SPEC_CLASS_20191213},\n+\n+/* Terminate the list.  */\n+  {NULL, 0}\n+};\n+\n+/* Get the corresponding ISA spec class by giving a ISA spec string.  */\n+\n+bfd_boolean\n+riscv_get_isa_spec_class (const char *s,\n+                         enum riscv_isa_spec_class *class)\n+{\n+  const struct isa_spec_t *version;\n+\n+  if (s == NULL)\n+    return FALSE;\n+\n+  for (version = &isa_specs[0]; version->name != NULL; ++version)\n+    if (strcmp (version->name, s) == 0)\n+      {\n+       *class = version->class;\n+       return TRUE;\n+      }\n+\n+  /* Can not find the supported ISA spec.  */\n+  return FALSE;\n+}\n+\n+struct priv_spec_t\n+{\n+  const char *name;\n+  enum riscv_priv_spec_class class;\n+};\n+\n+/* List for all supported privilege versions.  */\n+static const struct priv_spec_t priv_specs[] =\n+{\n+  {\"1.9\",   PRIV_SPEC_CLASS_1P9},\n+  {\"1.9.1\", PRIV_SPEC_CLASS_1P9P1},\n+  {\"1.10\",  PRIV_SPEC_CLASS_1P10},\n+  {\"1.11\",  PRIV_SPEC_CLASS_1P11},\n+\n+/* Terminate the list.  */\n+  {NULL, 0}\n+};\n+\n+/* Get the corresponding CSR version class by giving a privilege\n+   version string.  */\n+\n+bfd_boolean\n+riscv_get_priv_spec_class (const char *s,\n+                          enum riscv_priv_spec_class *class)\n+{\n+  const struct priv_spec_t *version;\n+\n+  if (s == NULL)\n+    return FALSE;\n+\n+  for (version = &priv_specs[0]; version->name != NULL; ++version)\n+    if (strcmp (version->name, s) == 0)\n+      {\n+       *class = version->class;\n+       return TRUE;\n+      }\n+\n+  /* Can not find the supported privilege version.  */\n+  return FALSE;\n+}\n+\n+/* Get the corresponding privilege version string by giving a CSR\n+   version class.  */\n+\n+const char *\n+riscv_get_priv_spec_name (enum riscv_priv_spec_class class)\n+{\n+  /* The first enum is PRIV_SPEC_CLASS_NONE.  */\n+  return priv_specs[class - 1].name;\n+}"
    }
  ]
}