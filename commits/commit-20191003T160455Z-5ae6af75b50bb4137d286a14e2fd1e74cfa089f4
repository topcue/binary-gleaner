{
  "sha": "5ae6af75b50bb4137d286a14e2fd1e74cfa089f4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWFlNmFmNzViNTBiYjQxMzdkMjg2YTE0ZTJmZDFlNzRjZmEwODlmNA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-07-25T18:59:32Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-10-03T16:04:55Z"
    },
    "message": "libctf: eschew C99 for loop initial declarations\n\nWe shouldn't use these, since binutils doesn't require a C99-capable\ncompiler yet.\n\nNew in v3.\nv5: fix tabdamage.\n\nlibctf/\n\t* ctf-open.c (flip_lbls): Eschew for-loop initial declarations.\n\t(flip_objts): Likewise.\n\t(flip_vars): Likewise.\n\t(flip_types): Likewise.",
    "tree": {
      "sha": "a5c15eef747e10458d56fd78816f29bbf9d5049c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a5c15eef747e10458d56fd78816f29bbf9d5049c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1820745a0af0768d9dcd515b98ad038ff9f15f23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1820745a0af0768d9dcd515b98ad038ff9f15f23",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1820745a0af0768d9dcd515b98ad038ff9f15f23"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 21,
    "deletions": 7
  },
  "files": [
    {
      "sha": "83b316701b2aff171999d17140a666ffecdef523",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=5ae6af75b50bb4137d286a14e2fd1e74cfa089f4",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (flip_lbls): Eschew for-loop initial declarations.\n+\t(flip_objts): Likewise.\n+\t(flip_vars): Likewise.\n+\t(flip_types): Likewise.\n+\n 2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value"
    },
    {
      "sha": "9dcd274d31a750fc9a9bf1135b2a46a3dc9a4174",
      "filename": "libctf/ctf-open.c",
      "status": "modified",
      "additions": 14,
      "deletions": 7,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4/libctf/ctf-open.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ae6af75b50bb4137d286a14e2fd1e74cfa089f4/libctf/ctf-open.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-open.c?ref=5ae6af75b50bb4137d286a14e2fd1e74cfa089f4",
      "patch": "@@ -986,8 +986,9 @@ static void\n flip_lbls (void *start, size_t len)\n {\n   ctf_lblent_t *lbl = start;\n+  ssize_t i;\n \n-  for (ssize_t i = len / sizeof (struct ctf_lblent); i > 0; lbl++, i--)\n+  for (i = len / sizeof (struct ctf_lblent); i > 0; lbl++, i--)\n     {\n       swap_thing (lbl->ctl_label);\n       swap_thing (lbl->ctl_type);\n@@ -1003,8 +1004,9 @@ static void\n flip_objts (void *start, size_t len)\n {\n   uint32_t *obj = start;\n+  ssize_t i;\n \n-  for (ssize_t i = len / sizeof (uint32_t); i > 0; obj++, i--)\n+  for (i = len / sizeof (uint32_t); i > 0; obj++, i--)\n       swap_thing (*obj);\n }\n \n@@ -1014,8 +1016,9 @@ static void\n flip_vars (void *start, size_t len)\n {\n   ctf_varent_t *var = start;\n+  ssize_t i;\n \n-  for (ssize_t i = len / sizeof (struct ctf_varent); i > 0; var++, i--)\n+  for (i = len / sizeof (struct ctf_varent); i > 0; var++, i--)\n     {\n       swap_thing (var->ctv_name);\n       swap_thing (var->ctv_type);\n@@ -1080,8 +1083,9 @@ flip_types (void *start, size_t len)\n \t    /* This type has a bunch of uint32_ts.  */\n \n \t    uint32_t *item = (uint32_t *) t;\n+\t    ssize_t i;\n \n-\t    for (ssize_t i = vlen; i > 0; item++, i--)\n+\t    for (i = vlen; i > 0; item++, i--)\n \t      swap_thing (*item);\n \t    break;\n \t  }\n@@ -1125,7 +1129,8 @@ flip_types (void *start, size_t len)\n \t    if (_libctf_unlikely_ (size >= CTF_LSTRUCT_THRESH))\n \t      {\n \t\tctf_lmember_t *lm = (ctf_lmember_t *) t;\n-\t\tfor (ssize_t i = vlen; i > 0; i--, lm++)\n+\t\tssize_t i;\n+\t\tfor (i = vlen; i > 0; i--, lm++)\n \t\t  {\n \t\t    swap_thing (lm->ctlm_name);\n \t\t    swap_thing (lm->ctlm_offsethi);\n@@ -1136,7 +1141,8 @@ flip_types (void *start, size_t len)\n \t    else\n \t      {\n \t\tctf_member_t *m = (ctf_member_t *) t;\n-\t\tfor (ssize_t i = vlen; i > 0; i--, m++)\n+\t\tssize_t i;\n+\t\tfor (i = vlen; i > 0; i--, m++)\n \t\t  {\n \t\t    swap_thing (m->ctm_name);\n \t\t    swap_thing (m->ctm_offset);\n@@ -1151,8 +1157,9 @@ flip_types (void *start, size_t len)\n \t    /* This has an array of ctf_enum_t.  */\n \n \t    ctf_enum_t *item = (ctf_enum_t *) t;\n+\t    ssize_t i;\n \n-\t    for (ssize_t i = vlen; i > 0; item++, i--)\n+\t    for (i = vlen; i > 0; item++, i--)\n \t      {\n \t\tswap_thing (item->cte_name);\n \t\tswap_thing (item->cte_value);"
    }
  ]
}