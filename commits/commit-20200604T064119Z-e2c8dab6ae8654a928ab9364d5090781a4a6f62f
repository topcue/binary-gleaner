{
  "sha": "e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTJjOGRhYjZhZTg2NTRhOTI4YWI5MzY0ZDUwOTA3ODFhNGE2ZjYyZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-04T05:27:12Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-04T06:41:19Z"
    },
    "message": "tcl global directive outside proc body does nothing (ld)\n\n\t* testsuite/config/default.exp: Remove global directive outside\n\tproc body.\n\t* testsuite/ld-bootstrap/bootstrap.exp: Likewise.\n\t* testsuite/ld-elf/compress.exp: Likewise.\n\t* testsuite/ld-elf/elf.exp: Likewise.\n\t* testsuite/ld-elf/exclude.exp: Likewise.\n\t* testsuite/ld-elf/frame.exp: Likewise.\n\t* testsuite/ld-elf/indirect.exp: Likewise.\n\t* testsuite/ld-elf/linux-x86.exp: Likewise.\n\t* testsuite/ld-elf/shared.exp: Likewise.\n\t* testsuite/ld-elf/tls.exp: Likewise.\n\t* testsuite/ld-elf/tls_common.exp: Likewise.\n\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n\t* testsuite/ld-frv/fdpic.exp: Likewise.\n\t* testsuite/ld-frv/tls.exp: Likewise.\n\t* testsuite/ld-gc/gc.exp: Likewise.\n\t* testsuite/ld-i386/i386.exp: Likewise.\n\t* testsuite/ld-i386/no-plt.exp: Likewise.\n\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n\t* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.\n\t* testsuite/ld-nios2/nios2.exp: Likewise.\n\t* testsuite/ld-plugin/lto.exp: Likewise.\n\t* testsuite/ld-plugin/plugin.exp: Likewise.\n\t* testsuite/ld-powerpc/export-class.exp: Likewise.\n\t* testsuite/ld-scripts/align.exp: Likewise.\n\t* testsuite/ld-scripts/crossref.exp: Likewise.\n\t* testsuite/ld-scripts/defined.exp: Likewise.\n\t* testsuite/ld-scripts/overlay-size.exp: Likewise.\n\t* testsuite/ld-scripts/provide.exp: Likewise.\n\t* testsuite/ld-scripts/weak.exp: Likewise.\n\t* testsuite/ld-selective/selective.exp: Likewise.\n\t* testsuite/ld-sh/rd-sh.exp: Likewise.\n\t* testsuite/ld-size/size.exp: Likewise.\n\t* testsuite/ld-srec/srec.exp: Likewise.\n\t* testsuite/ld-x86-64/mpx.exp: Likewise.\n\t* testsuite/ld-x86-64/no-plt.exp: Likewise.\n\t* testsuite/ld-x86-64/x86-64.exp: Likewise.",
    "tree": {
      "sha": "9874a5e68d410fc356b47ef4e1ff4380c66b6ff0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9874a5e68d410fc356b47ef4e1ff4380c66b6ff0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0c0ad56704002e6438bdd077378de8d8cc1e1a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0c0ad56704002e6438bdd077378de8d8cc1e1a9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0c0ad56704002e6438bdd077378de8d8cc1e1a9"
    }
  ],
  "stats": {
    "total": 152,
    "additions": 41,
    "deletions": 111
  },
  "files": [
    {
      "sha": "d8e7e001f76baa303ccc9e53eac42d3beae284a4",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -1,3 +1,44 @@\n+2020-06-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/config/default.exp: Remove global directive outside\n+\tproc body.\n+\t* testsuite/ld-bootstrap/bootstrap.exp: Likewise.\n+\t* testsuite/ld-elf/compress.exp: Likewise.\n+\t* testsuite/ld-elf/elf.exp: Likewise.\n+\t* testsuite/ld-elf/exclude.exp: Likewise.\n+\t* testsuite/ld-elf/frame.exp: Likewise.\n+\t* testsuite/ld-elf/indirect.exp: Likewise.\n+\t* testsuite/ld-elf/linux-x86.exp: Likewise.\n+\t* testsuite/ld-elf/shared.exp: Likewise.\n+\t* testsuite/ld-elf/tls.exp: Likewise.\n+\t* testsuite/ld-elf/tls_common.exp: Likewise.\n+\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n+\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n+\t* testsuite/ld-frv/fdpic.exp: Likewise.\n+\t* testsuite/ld-frv/tls.exp: Likewise.\n+\t* testsuite/ld-gc/gc.exp: Likewise.\n+\t* testsuite/ld-i386/i386.exp: Likewise.\n+\t* testsuite/ld-i386/no-plt.exp: Likewise.\n+\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n+\t* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.\n+\t* testsuite/ld-nios2/nios2.exp: Likewise.\n+\t* testsuite/ld-plugin/lto.exp: Likewise.\n+\t* testsuite/ld-plugin/plugin.exp: Likewise.\n+\t* testsuite/ld-powerpc/export-class.exp: Likewise.\n+\t* testsuite/ld-scripts/align.exp: Likewise.\n+\t* testsuite/ld-scripts/crossref.exp: Likewise.\n+\t* testsuite/ld-scripts/defined.exp: Likewise.\n+\t* testsuite/ld-scripts/overlay-size.exp: Likewise.\n+\t* testsuite/ld-scripts/provide.exp: Likewise.\n+\t* testsuite/ld-scripts/weak.exp: Likewise.\n+\t* testsuite/ld-selective/selective.exp: Likewise.\n+\t* testsuite/ld-sh/rd-sh.exp: Likewise.\n+\t* testsuite/ld-size/size.exp: Likewise.\n+\t* testsuite/ld-srec/srec.exp: Likewise.\n+\t* testsuite/ld-x86-64/mpx.exp: Likewise.\n+\t* testsuite/ld-x86-64/no-plt.exp: Likewise.\n+\t* testsuite/ld-x86-64/x86-64.exp: Likewise.\n+\n 2020-06-04  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-dynamic/export-dynamic-symbol-2.d: Match output for"
    },
    {
      "sha": "b2097ce7af25a02f29c3a791e3f263ba616982d3",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -121,7 +121,6 @@ if {![info exists CXXFLAGS]} {\n # \\param Edit - The override command to perform.\n # \\param SavedStrings - Set to use for storing string representations.\n \n-global env\n # Only set up the environment variable if the user has not already provided one.\n if {! [info exists env(CCC_OVERRIDE_OPTIONS)]} {\n     set env(CCC_OVERRIDE_OPTIONS) \"#\\"
    },
    {
      "sha": "43928fb6483fd2d2f11dbb03c27686bf281d6543",
      "filename": "ld/testsuite/ld-bootstrap/bootstrap.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-bootstrap/bootstrap.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-bootstrap/bootstrap.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bootstrap/bootstrap.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -29,8 +29,6 @@ if ![isnative] {\n     return\n }\n \n-global STATIC_LDFLAGS\n-\n # Determine if plugin support is present.\n remote_exec host \"$nm --help\" \"\" \"/dev/null\" \"plugin-support\"\n set tmp [file_contents \"plugin-support\"]"
    },
    {
      "sha": "8b55f86ea9a0b580cd6c7940b3dd04e552bfdf73",
      "filename": "ld/testsuite/ld-elf/compress.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/compress.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -36,7 +36,6 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-global as\n if { ![ld_assemble $as \"--compress-debug-sections $srcdir/$subdir/empty.s\" tmpdir/empty.o ] } {\n     fail \"linker compressed debug sections\"\n }\n@@ -124,8 +123,6 @@ if { [catch {exec cmp tmpdir/libfoo.so tmpdir/libfoozlib.so}] } then {\n     pass \"$test_name\"\n }\n \n-global READELF\n-\n set test_name \"Link -r with zlib compressed debug output\"\n set test zlibbegin\n send_log \"$READELF -S -W tmpdir/$test.o > tmpdir/$test.out\\n\""
    },
    {
      "sha": "3ae769e3bf9d133f59f612c4f59431851c420a85",
      "filename": "ld/testsuite/ld-elf/elf.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/elf.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -121,7 +121,6 @@ if [is_underscore_target] {\n     set ASFLAGS \"$ASFLAGS --defsym UNDERSCORE=1\"\n }\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n if { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n     set ASFLAGS \"$ASFLAGS -mx86-used-note=no\""
    },
    {
      "sha": "b9d24c2d4aad8e1fed59a95f3a983817088fd47d",
      "filename": "ld/testsuite/ld-elf/exclude.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/exclude.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/exclude.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/exclude.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -39,12 +39,6 @@ if { [istarget \"tic6x-*-*\"] } {\n     set as_opt \"-mpic -mpid=near\"\n }\n \n-global ar\n-global as\n-global ld\n-global nm\n-global nm_output\n-\n set test1 \"ld link shared library\"\n set test2 \"ld export symbols from archive\"\n set test3 \"ld link shared library with --exclude-libs\""
    },
    {
      "sha": "0bd0fb2d4c7c80a11ac69ab99c64386f76872df4",
      "filename": "ld/testsuite/ld-elf/frame.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/frame.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/frame.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/frame.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -55,9 +55,6 @@ if { [istarget \"tic6x-*-*\"] } {\n set test1\t\"read-only .eh_frame section\"\n set test2\t\"read-only .gcc_except_table section\"\n \n-global as\n-global ld\n-\n if { ![ld_assemble_flags $as $as_opt $srcdir/$subdir/tbss.s tmpdir/tbss.o ]\n      || ![ld_assemble_flags $as $as_opt $srcdir/$subdir/frame.s tmpdir/frame.o] } {\n     unresolved \"$test1\""
    },
    {
      "sha": "acda39ef38f7ba2b74242158dd52a28e200b77f6",
      "filename": "ld/testsuite/ld-elf/indirect.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/indirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/indirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/indirect.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -110,8 +110,6 @@ set build_tests {\n \n run_cc_link_tests $build_tests\n \n-global ld\n-\n set string \": final link failed: bad value\"\n set string1 \": local symbol \\`foo\\' in tmpdir/indirect1b.o is referenced by DSO\"\n \n@@ -128,8 +126,6 @@ set testname \"Indirect symbol 2\"\n set cmd \"$ld -shared  -o tmpdir/indirect2.so tmpdir/indirect2.o\"\n check_link_message \"$cmd\" [list $string2] \"$testname\"\n \n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-\n set run_tests {\n     {\"Run with libindirect3c.so 1\"\n      \"-Wl,--no-as-needed tmpdir/indirect3a.o tmpdir/indirect3b.o tmpdir/libindirect3c.so\" \"\""
    },
    {
      "sha": "eeaf4590e3835bad77ec89adef40dcf73acf0bf4",
      "filename": "ld/testsuite/ld-elf/linux-x86.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/linux-x86.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/linux-x86.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/linux-x86.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -52,12 +52,6 @@ if { ![isnative] || ![check_compiler_available] } {\n     return\n }\n \n-# Add $PLT_CFLAGS if PLT is expected.\n-global PLT_CFLAGS\n-# Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-global NOSANTIZE_CFLAGS\n-\n run_ld_link_exec_tests [list \\\n     [list \\\n \t\"Run PR ld/23428 test\" \\"
    },
    {
      "sha": "da750b224a8bc37672fdbb0e3e606b7a2922fbb0",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -31,10 +31,6 @@ if ![check_shared_lib_support] {\n     return\n }\n \n-# Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-global NOSANTIZE_CFLAGS\n-\n set old_ASFLAGS $ASFLAGS\n \n # This target requires extra GAS options when building code for shared"
    },
    {
      "sha": "15c382fcb4f9869d25b01811745c6475c787daee",
      "filename": "ld/testsuite/ld-elf/tls.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/tls.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -39,8 +39,6 @@ if [istarget \"sparc*-*-*\"] {\n     append AFLAGS_PIC \" -K PIC\"\n }\n \n-global NOSANTIZE_CFLAGS\n-\n run_ld_link_tests [list \\\n     [list \\\n \t\"Build pr22263-1\" \\"
    },
    {
      "sha": "3e14ccfc21565bd2719b519d4a54674d104744cf",
      "filename": "ld/testsuite/ld-elf/tls_common.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/tls_common.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elf/tls_common.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/tls_common.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -30,13 +30,6 @@ if { ![istarget *-*-linux*]\n     return\n }\n \n-global as\n-global ld\n-global READELF\n-global srcdir\n-global subdir\n-global link_output\n-\n if { ![ld_assemble $as \"--elf-stt-common=no $srcdir/$subdir/tls_common.s\" tmpdir/tls_commona.o]\n       || ![ld_assemble $as \"--elf-stt-common=yes $srcdir/$subdir/tls_common.s\" tmpdir/tls_commonb.o] } {\n     unresolved \"tls_common\""
    },
    {
      "sha": "d23929ea0b1a46adb848aa33a855b1cf103a489a",
      "filename": "ld/testsuite/ld-elfcomm/elfcomm.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfcomm/elfcomm.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -177,9 +177,6 @@ if {   ![ld_compile \"$CC $CFLAGS -fcommon\" $srcdir/$subdir/common1a.c tmpdir/com\n     return\n }\n \n-global ld\n-global link_output\n-\n set options \"-r tmpdir/common1a.o tmpdir/common1b.o\"\n \n if { [ld_link $ld tmpdir/common1.o $options] } {"
    },
    {
      "sha": "dbc0c0321b8af45bad487854d709d02fe3e11550",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -65,8 +65,6 @@ set DOBJDUMP_FLAGS --dynamic-syms\n set SOBJDUMP_FLAGS --syms\n set shared \"--shared -Wl,--no-as-needed\"\n \n-global NOSANTIZE_CFLAGS\n-\n #\n # objdump_symstuff\n #\tDump non-dynamic symbol stuff and make sure that it is sane."
    },
    {
      "sha": "8d7e9176c56ed5663661a28ff0008b5c143aa1bc",
      "filename": "ld/testsuite/ld-frv/fdpic.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-frv/fdpic.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-frv/fdpic.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-frv/fdpic.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -23,11 +23,9 @@ if {![istarget frv*-*-*] || ![is_elf_format]} {\n     return\n }\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n set ASFLAGS \"$ASFLAGS -mfdpic\"\n \n-global LDFLAGS\n set saved_LDFLAGS \"$LDFLAGS\"\n set LDFLAGS \"$LDFLAGS -melf32frvfd\"\n "
    },
    {
      "sha": "85eb370c69958e0b49c8a35dc2ce4c67316809ea",
      "filename": "ld/testsuite/ld-frv/tls.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-frv/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-frv/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-frv/tls.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -23,11 +23,9 @@ if {![istarget frv*-*-*] || ![is_elf_format]} {\n     return\n }\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n set ASFLAGS \"$ASFLAGS -mfdpic\"\n \n-global LDFLAGS\n set saved_LDFLAGS \"$LDFLAGS\"\n set LDFLAGS \"$LDFLAGS -melf32frvfd\"\n "
    },
    {
      "sha": "97ccf6a7a9be658793c7af9e5d99564992e3e05a",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -23,14 +23,9 @@ if ![check_gc_sections_available] {\n     return\n }\n \n-global NOSANTIZE_CFLAGS\n-\n set cflags \"-ffunction-sections -fdata-sections $NOSANTIZE_CFLAGS\"\n set objfile \"tmpdir/gc.o\"\n \n-# Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-\n if [istarget powerpc64*-*-*] {\n     # otherwise with -mcmodel=medium gcc we get XPASSes.\n     set cflags \"$cflags -mminimal-toc\""
    },
    {
      "sha": "e1bbcddcd315d71051a94951960bd988b105f28a",
      "filename": "ld/testsuite/ld-i386/i386.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/i386.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -19,7 +19,6 @@\n # MA 02110-1301, USA.\n #\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n if { [is_elf_format] \\\n      && ([istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"]) } {\n@@ -581,9 +580,6 @@ proc undefined_weak {cflags ldflags} {\n     }\n }\n \n-# Add $PLT_CFLAGS if PLT is expected.\n-global PLT_CFLAGS\n-\n # Must be Linux native with the C compiler\n if { [isnative]\n      && [istarget \"i?86-*-linux*\"]\n@@ -1193,8 +1189,6 @@ if { [isnative]\n     undefined_weak \"-fPIE\" \"-pie -z nodynamic-undefined-weak\"\n }\n \n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-\n # Must be native with the C compiler and working IFUNC support,\n if { [isnative]\n      && [check_ifunc_available]"
    },
    {
      "sha": "44d1a398c53289415514444ba141fdff864400ce",
      "filename": "ld/testsuite/ld-i386/no-plt.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-i386/no-plt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-i386/no-plt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/no-plt.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -39,9 +39,6 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-# Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-\n run_cc_link_tests [list \\\n     [list \\\n \t\"Build no-plt-func1.o no-plt-main1.o\" \\"
    },
    {
      "sha": "ce3434b30fa33350682053b6800aec6c91276520",
      "filename": "ld/testsuite/ld-ifunc/ifunc.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-ifunc/ifunc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-ifunc/ifunc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ifunc/ifunc.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -54,7 +54,6 @@ if ![check_shared_lib_support] {\n     return\n }\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n if { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n     set ASFLAGS \"$ASFLAGS -mx86-used-note=no\""
    },
    {
      "sha": "5160d67d2437b35f67721182965b71aaf1937f13",
      "filename": "ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/mips-elf-flags.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -21,7 +21,6 @@ if {![istarget mips*-*-*] || ![is_elf_format]} {\n     return\n }\n \n-global ldemul\n if {[istarget mips*-*-irix6*]} {\n     set ldemul \"-melf32bsmip\"\n } elseif {[istarget mips*el-*-linux*]} {"
    },
    {
      "sha": "1af0c9212e23a29a133945afa8f53ba8bec6dd44",
      "filename": "ld/testsuite/ld-nios2/nios2.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-nios2/nios2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-nios2/nios2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-nios2/nios2.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -6,9 +6,6 @@ foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.d]] {\n     run_dump_test [file rootname $test]\n }\n \n-global link_output\n-global ld\n-\n set test_name \"NIOS2 Mixed R1 and R2 objects\"\n set test mixed1\n "
    },
    {
      "sha": "383b1950bbd33679b0d63c35120359369c71002d",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -29,17 +29,11 @@ if { ![check_plugin_api_available]\n     return\n }\n \n-global INT128_CFLAGS\n-\n-global CFLAGS\n-global CXXFLAGS\n set saved_CFLAGS \"$CFLAGS\"\n set saved_CXXFLAGS \"$CXXFLAGS\"\n regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CFLAGS \"\" CFLAGS\n regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CXXFLAGS \"\" CXXFLAGS\n \n-global NOSANTIZE_CFLAGS\n-\n proc restore_notify { } {\n   global saved_CFLAGS\n   global saved_CXXFLAGS"
    },
    {
      "sha": "dc8f007397a00642537115a3ef75eea1f6a9c947",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -34,8 +34,6 @@ if { ![check_compiler_available] } {\n \n pass \"plugin API enabled\"\n \n-global base_dir\n-\n # Look for the name we can dlopen in the test plugin's libtool control script.\n set plugin_name [file_contents \"$base_dir/libldtestplug.la\"]\n set plugin_name [regsub \"'.*\" [regsub \".*dlname='\" \"$plugin_name\" \"\"] \"\"]\n@@ -95,7 +93,6 @@ if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] || [istarget m9s12x*-*-*] }\n set failed_compile 0\n set _ \"\"\n set plugin_nm_output \"\"\n-global NOSANTIZE_CFLAGS\n set old_CFLAGS \"$CFLAGS\"\n append CFLAGS \" $NOSANTIZE_CFLAGS\"\n if { $can_compile && \\"
    },
    {
      "sha": "884c4ebd79abd04ecf3fa7ea436a23f1e57f5794",
      "filename": "ld/testsuite/ld-powerpc/export-class.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-powerpc/export-class.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-powerpc/export-class.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/export-class.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -87,7 +87,6 @@ proc powerpc_export_class_test { abi endian emul } {\n \n set abis { 32 be elf32ppclinux 32 le elf32lppclinux 64 be elf64ppc 64 le elf64lppc }\n \n-global ld\n catch \"exec $ld --help | grep emulations\" ldemul\n \n foreach { abi endian emul } $abis {"
    },
    {
      "sha": "1520fa333d2dce52151fef4504e4cbec13de7623",
      "filename": "ld/testsuite/ld-scripts/align.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/align.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/align.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/align.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -32,7 +32,6 @@ if ![ld_assemble $as $srcdir/$subdir/align.s tmpdir/align.o] {\n }\n \n # mingw on x86_64 targets need to set the image base to 0 to avoid auto image-basing.\n-global LDFLAGS\n set saved_LDFLAGS \"$LDFLAGS\"\n if [istarget \"x86_64-*-mingw*\"] then {\n   set LDFLAGS \"$LDFLAGS --image-base 0\""
    },
    {
      "sha": "b2f72313e39df5654f1893cc5efdbd6d095f5891",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -38,12 +38,10 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-global CFLAGS\n set old_CFLAGS \"$CFLAGS\"\n \n # Pass -fplt to CC since -fno-plt doesn't work with NOCROSSREFS tests.\n # Also add $NOPIE_CFLAGS since PIE doesn't work NOCROSSREFS tests.\n-global PLT_CFLAGS NOPIE_CFLAGS\n set old_CC \"$CC\"\n set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS\"\n "
    },
    {
      "sha": "404333fb8c2530f9eac25ce2f2c11e4207bd07cc",
      "filename": "ld/testsuite/ld-scripts/defined.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/defined.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/defined.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/defined.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -27,7 +27,6 @@ if ![ld_assemble $as $srcdir/$subdir/defined.s tmpdir/def.o] {\n     return\n }\n \n-global LDFLAGS\n set saved_LDFLAGS \"$LDFLAGS\"\n if [istarget \"x86_64-*-mingw*\"] then {\n   set LDFLAGS \"$LDFLAGS --image-base 0\"\n@@ -62,7 +61,6 @@ if ![ld_link $ld tmpdir/def \"$LDFLAGS -T $srcdir/$subdir/defined.t tmpdir/def.o\"\n     }\n }\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n if { [is_elf_format] \\\n      && ([istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"]) } {"
    },
    {
      "sha": "ad7e0e442b42a7a80dac0be5227686bc0925c666",
      "filename": "ld/testsuite/ld-scripts/overlay-size.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/overlay-size.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/overlay-size.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/overlay-size.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -22,7 +22,6 @@ if ![is_elf_format] {\n     return\n }\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n if { [is_elf_format] \\\n      && ([istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"]) } {"
    },
    {
      "sha": "a4aee5205b191aa805f4c2b6b4eed12ac254396f",
      "filename": "ld/testsuite/ld-scripts/provide.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/provide.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/provide.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -30,7 +30,6 @@ if {[istarget \"powerpc*-*-aix*\"] || [istarget \"rs6000-*-aix*\"] || [is_aout_forma\n     return\n }\n \n-global LDFLAGS\n set saved_LDFLAGS \"$LDFLAGS\"\n if [istarget \"x86_64-*-mingw*\"] then {\n   set LDFLAGS \"$LDFLAGS --image-base 0\""
    },
    {
      "sha": "b0ca4ab66e7a6437079d73dea62fc3ec33dc6e8f",
      "filename": "ld/testsuite/ld-scripts/weak.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/weak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-scripts/weak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/weak.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -43,7 +43,6 @@ if {! [ld_assemble $as $srcdir/$subdir/weak1.s tmpdir/weak1.o]\n     return\n }\n \n-global LDFLAGS\n set saved_LDFLAGS \"$LDFLAGS\"\n if [istarget \"x86_64-*-mingw*\"] then {\n   set LDFLAGS \"$LDFLAGS --image-base 0\""
    },
    {
      "sha": "bb16140ef2bfea8e8b1ad06739be2d4c759dd712",
      "filename": "ld/testsuite/ld-selective/selective.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-selective/selective.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-selective/selective.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-selective/selective.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -46,7 +46,6 @@ set seltests {\n     {A::foo() B::foo() dropme1() dropme2()} {*-*-*}}\n }\n \n-global NOSANTIZE_CFLAGS\n set cflags \"-w -O -ffunction-sections -fdata-sections $NOSANTIZE_CFLAGS\"\n set cxxflags \"-fno-exceptions -fno-rtti $NOSANTIZE_CFLAGS\"\n set ldflags \"--gc-sections -Bstatic\""
    },
    {
      "sha": "c01d50d6a90c34236f2104b8b73eff85d46a05f9",
      "filename": "ld/testsuite/ld-sh/rd-sh.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-sh/rd-sh.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-sh/rd-sh.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-sh/rd-sh.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -31,8 +31,6 @@ if ![istarget sh*-*-*] {\n     return\n }\n \n-global ASFLAGS\n-global LDFLAGS\n set asflags_save \"$ASFLAGS\"\n set ldflags_save \"$LDFLAGS\"\n "
    },
    {
      "sha": "8a9459993a084a55e41c5eb225ee9fee86c88ca0",
      "filename": "ld/testsuite/ld-size/size.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-size/size.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-size/size.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-size/size.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -53,9 +53,6 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-# Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-\n run_cc_link_tests [list \\\n     [list \\\n \t\"Build libsize-1.so\" \\"
    },
    {
      "sha": "69570a8a91c958bbff8ba40a59b5d38822301b79",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -352,7 +352,6 @@ if { ![check_compiler_available] } {\n # tests. Also add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if PIE doesn't work\n # with S-records.  Also add $NOCF_PROTECTION_CFLAGS for S-records.\n # Also add $NOSANTIZE_CFLAGS for S-records.\n-global PLT_CFLAGS NOPIE_CFLAGS NOPIE_LDFLAGS NOCF_PROTECTION_CFLAGS NOSANTIZE_CFLAGS\n set old_CC \"$CC\"\n set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANTIZE_CFLAGS\"\n set old_CXX \"$CXX\""
    },
    {
      "sha": "3a0f4b1469578657a53e6a5e12cd9321fb4aeca9",
      "filename": "ld/testsuite/ld-x86-64/mpx.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-x86-64/mpx.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-x86-64/mpx.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/mpx.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -36,9 +36,6 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-# Add $PLT_CFLAGS if PLT is expected.\n-global PLT_CFLAGS\n-\n run_cc_link_tests [list \\\n     [list \\\n \t\"Build libmpx1a.a\" \\"
    },
    {
      "sha": "8a1667ba53d387ef8b893497d7648abe9e42c837",
      "filename": "ld/testsuite/ld-x86-64/no-plt.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-x86-64/no-plt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-x86-64/no-plt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/no-plt.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -39,9 +39,6 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-# Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-\n run_cc_link_tests [list \\\n     [list \\\n \t\"Build no-plt-func1.o no-plt-main1.o\" \\"
    },
    {
      "sha": "fd8fd34a7798c270171b1bc8ceea817d3ccac2e8",
      "filename": "ld/testsuite/ld-x86-64/x86-64.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2c8dab6ae8654a928ab9364d5090781a4a6f62f/ld/testsuite/ld-x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/x86-64.exp?ref=e2c8dab6ae8654a928ab9364d5090781a4a6f62f",
      "patch": "@@ -34,7 +34,6 @@ if [istarget \"*-*-nacl*\"] {\n     set emul \"elf_x86_64\"\n }\n \n-global ASFLAGS\n set saved_ASFLAGS \"$ASFLAGS\"\n set ASFLAGS \"$ASFLAGS -mx86-used-note=no\"\n \n@@ -265,9 +264,6 @@ if [istarget \"*-*-nacl*\"] {\n \n run_ld_link_tests $x86_64tests\n \n-global link_output\n-global ld\n-\n set test_name \"Mixed x86_64 and i386 input test 1\"\n set test mixed1\n if { ![ld_link $ld tmpdir/$test \"-m$emul tmpdir/${test}a.o tmpdir/${test}b.o\"] } {\n@@ -742,14 +738,6 @@ proc undefined_weak {cflags ldflags} {\n     }\n }\n \n-# Add $PLT_CFLAGS if PLT is expected.\n-global PLT_CFLAGS\n-# Add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if non-PIE is required.\n-global NOPIE_CFLAGS NOPIE_LDFLAGS\n-# Add $NOCF_PROTECTION_CFLAGS if -fcf-protection=none is required.\n-global NOCF_PROTECTION_CFLAGS\n-global NOSANTIZE_CFLAGS\n-\n # Must be native with the C compiler\n if { [isnative] && [check_compiler_available] } {\n     run_cc_link_tests [list \\\n@@ -2148,7 +2136,6 @@ run_ld_link_tests [list \\\n ]\n \n # Linux only tests\n-global LD_CLASS\n if { \"$LD_CLASS\" == \"64bit\" } then {\n     # This test needs 64-bit linker.\n     run_dump_test \"pr17618\""
    }
  ]
}