{
  "sha": "740480b88afd4f2b01d117525f534ddce28530f3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzQwNDgwYjg4YWZkNGYyYjAxZDExNzUyNWY1MzRkZGNlMjg1MzBmMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-04-23T12:26:31Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-23T12:26:31Z"
    },
    "message": "Remove iterate_over_inferiors\n\nThe last caller of iterate_over_inferiors is darwin-nat.c.  This patch\nremoves the calls from this file, and then remove\niterate_over_inferiors.\n\nIn general I think \"external iteration\" is to be preferred in gdb, the\nmain benefit being that the code is easier to read.\n\nI rebuilt this on Darwin.  I seem to only have access to Darwin\nsystems where gdb does not yet work :-(, so I can't run the test\nsuite.\n\ngdb/ChangeLog\n2020-04-23  Tom Tromey  <tom@tromey.com>\n\n\t* inferior.h (iterate_over_inferiors): Don't declare.\n\t* inferior.c (iterate_over_inferiors): Remove.\n\t* darwin-nat.c (find_inferior_task_it, find_inferior_pid_it):\n\tRemove.\n\t(darwin_find_inferior_by_task, darwin_find_inferior_by_pid): Don't\n\tuse iterate_over_inferiors.\n\t(darwin_resume_inferior_it)\n\t(struct resume_inferior_threads_param)\n\t(darwin_resume_inferior_threads_it): Remove.\n\t(darwin_nat_target::resume): Don't use iterate_over_inferiors.\n\nChange-Id: Ib2fdf2c98e40f13156ff869ed3173d5f1fdae7ea",
    "tree": {
      "sha": "0c1b273c1f4d927ef0c469829855926cc5438ffb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c1b273c1f4d927ef0c469829855926cc5438ffb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/740480b88afd4f2b01d117525f534ddce28530f3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/740480b88afd4f2b01d117525f534ddce28530f3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/740480b88afd4f2b01d117525f534ddce28530f3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/740480b88afd4f2b01d117525f534ddce28530f3/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2745674244d6aecddcf636475034bdb9c0a6b4a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2745674244d6aecddcf636475034bdb9c0a6b4a0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2745674244d6aecddcf636475034bdb9c0a6b4a0"
    }
  ],
  "stats": {
    "total": 106,
    "additions": 32,
    "deletions": 74
  },
  "files": [
    {
      "sha": "f5b4095083bcdc10de000434679bb9997dd42c5d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/740480b88afd4f2b01d117525f534ddce28530f3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/740480b88afd4f2b01d117525f534ddce28530f3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=740480b88afd4f2b01d117525f534ddce28530f3",
      "patch": "@@ -1,3 +1,16 @@\n+2020-04-23  Tom Tromey  <tom@tromey.com>\n+\n+\t* inferior.h (iterate_over_inferiors): Don't declare.\n+\t* inferior.c (iterate_over_inferiors): Remove.\n+\t* darwin-nat.c (find_inferior_task_it, find_inferior_pid_it):\n+\tRemove.\n+\t(darwin_find_inferior_by_task, darwin_find_inferior_by_pid): Don't\n+\tuse iterate_over_inferiors.\n+\t(darwin_resume_inferior_it)\n+\t(struct resume_inferior_threads_param)\n+\t(darwin_resume_inferior_threads_it): Remove.\n+\t(darwin_nat_target::resume): Don't use iterate_over_inferiors.\n+\n 2020-04-23  Tom de Vries  <tdevries@suse.de>\n \n \t* blockframe.c (find_pc_partial_function): Use"
    },
    {
      "sha": "2d74bc010c35e29a3048b880355b3be5d55d9706",
      "filename": "gdb/darwin-nat.c",
      "status": "modified",
      "additions": 19,
      "deletions": 49,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/740480b88afd4f2b01d117525f534ddce28530f3/gdb/darwin-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/740480b88afd4f2b01d117525f534ddce28530f3/gdb/darwin-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat.c?ref=740480b88afd4f2b01d117525f534ddce28530f3",
      "patch": "@@ -378,32 +378,30 @@ darwin_nat_target::check_new_threads (inferior *inf)\n   MACH_CHECK_ERROR (kret);\n }\n \n-static int\n-find_inferior_task_it (struct inferior *inf, void *port_ptr)\n-{\n-  darwin_inferior *priv = get_darwin_inferior (inf);\n-\n-  return priv != nullptr && priv->task == *(task_t *)port_ptr;\n-}\n-\n-static int\n-find_inferior_pid_it (struct inferior *inf, void *pid_ptr)\n-{\n-  return inf->pid == *(int *)pid_ptr;\n-}\n-\n /* Return an inferior by task port.  */\n static struct inferior *\n darwin_find_inferior_by_task (task_t port)\n {\n-  return iterate_over_inferiors (&find_inferior_task_it, &port);\n+  for (inferior *inf : all_inferiors ())\n+    {\n+      darwin_inferior *priv = get_darwin_inferior (inf);\n+\n+      if (priv != nullptr && priv->task == port)\n+\treturn inf;\n+    }\n+  return nullptr;\n }\n \n /* Return an inferior by pid port.  */\n static struct inferior *\n darwin_find_inferior_by_pid (int pid)\n {\n-  return iterate_over_inferiors (&find_inferior_pid_it, &pid);\n+  for (inferior *inf : all_inferiors ())\n+    {\n+      if (inf->pid == pid)\n+\treturn inf;\n+    }\n+  return nullptr;\n }\n \n /* Return a thread by port.  */\n@@ -458,15 +456,6 @@ darwin_resume_inferior (struct inferior *inf)\n     }\n }\n \n-/* Iterator functions.  */\n-\n-static int\n-darwin_resume_inferior_it (struct inferior *inf, void *arg)\n-{\n-  darwin_resume_inferior (inf);\n-  return 0;\n-}\n-\n static void\n darwin_dump_message (mach_msg_header_t *hdr, int disp_body)\n {\n@@ -886,23 +875,6 @@ darwin_resume_inferior_threads (struct inferior *inf, int step, int nsignal)\n       darwin_resume_thread (inf, thread, step, nsignal);\n }\n \n-struct resume_inferior_threads_param\n-{\n-  int step;\n-  int nsignal;\n-};\n-\n-static int\n-darwin_resume_inferior_threads_it (struct inferior *inf, void *param)\n-{\n-  int step = ((struct resume_inferior_threads_param *)param)->step;\n-  int nsignal = ((struct resume_inferior_threads_param *)param)->nsignal;\n-\n-  darwin_resume_inferior_threads (inf, step, nsignal);\n-\n-  return 0;\n-}\n-\n /* Suspend all threads of INF.  */\n \n static void\n@@ -951,15 +923,13 @@ darwin_nat_target::resume (ptid_t ptid, int step, enum gdb_signal signal)\n   /* minus_one_ptid is RESUME_ALL.  */\n   if (ptid == minus_one_ptid)\n     {\n-      struct resume_inferior_threads_param param;\n-\n-      param.nsignal = nsignal;\n-      param.step = step;\n-\n       /* Resume threads.  */\n-      iterate_over_inferiors (darwin_resume_inferior_threads_it, &param);\n+      for (inferior *inf : all_inferiors ())\n+\tdarwin_resume_inferior_threads (inf, step, nsignal);\n+\n       /* Resume tasks.  */\n-      iterate_over_inferiors (darwin_resume_inferior_it, NULL);\n+      for (inferior *inf : all_inferiors ())\n+\tdarwin_resume_inferior (inf);\n     }\n   else\n     {"
    },
    {
      "sha": "2f4ced0788d5cb32260bf51c8112925401c128f0",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/740480b88afd4f2b01d117525f534ddce28530f3/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/740480b88afd4f2b01d117525f534ddce28530f3/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=740480b88afd4f2b01d117525f534ddce28530f3",
      "patch": "@@ -310,17 +310,6 @@ find_inferior_for_program_space (struct program_space *pspace)\n   return NULL;\n }\n \n-struct inferior *\n-iterate_over_inferiors (int (*callback) (struct inferior *, void *),\n-\t\t\tvoid *data)\n-{\n-  for (inferior *inf : all_inferiors_safe ())\n-    if ((*callback) (inf, data))\n-      return inf;\n-\n-  return NULL;\n-}\n-\n int\n have_inferiors (void)\n {"
    },
    {
      "sha": "1ac51369dff26a24a6cf68b97a8775fece6492c2",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/740480b88afd4f2b01d117525f534ddce28530f3/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/740480b88afd4f2b01d117525f534ddce28530f3/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=740480b88afd4f2b01d117525f534ddce28530f3",
      "patch": "@@ -589,20 +589,6 @@ extern struct inferior *find_inferior_id (int num);\n extern struct inferior *\n   find_inferior_for_program_space (struct program_space *pspace);\n \n-/* Inferior iterator function.\n-\n-   Calls a callback function once for each inferior, so long as the\n-   callback function returns false.  If the callback function returns\n-   true, the iteration will end and the current inferior will be\n-   returned.  This can be useful for implementing a search for a\n-   inferior with arbitrary attributes, or for applying some operation\n-   to every inferior.\n-\n-   It is safe to delete the iterated inferior from the callback.  */\n-extern struct inferior *iterate_over_inferiors (int (*) (struct inferior *,\n-\t\t\t\t\t\t\t void *),\n-\t\t\t\t\t\tvoid *);\n-\n /* Returns true if the inferior list is not empty.  */\n extern int have_inferiors (void);\n "
    }
  ]
}