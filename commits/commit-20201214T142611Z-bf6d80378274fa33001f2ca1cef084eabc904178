{
  "sha": "bf6d80378274fa33001f2ca1cef084eabc904178",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmY2ZDgwMzc4Mjc0ZmEzMzAwMWYyY2ExY2VmMDg0ZWFiYzkwNDE3OA==",
  "commit": {
    "author": {
      "name": "Howard Chu",
      "email": "hyc@symas.com",
      "date": "2020-12-14T14:26:11Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-12-14T14:26:11Z"
    },
    "message": "Add a plugin for processing static library dependencies.\n\n\t* libdep_plugin.c: New file: Processes archives that contain a\n\tspecial library dependencies element.\n\t* Makefile.am: Add build rules for libdep_plugin.\n\t* Makefile.in: Regenerate.\n\t* NEWS: Mention the new plugin.\n\t* ld.texi: Document the new plugin.",
    "tree": {
      "sha": "165b359b2cc01df91fe2a090ddc3bbf5475c0f38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/165b359b2cc01df91fe2a090ddc3bbf5475c0f38"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bf6d80378274fa33001f2ca1cef084eabc904178",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf6d80378274fa33001f2ca1cef084eabc904178",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bf6d80378274fa33001f2ca1cef084eabc904178",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf6d80378274fa33001f2ca1cef084eabc904178/comments",
  "author": {
    "login": "hyc",
    "id": 306354,
    "node_id": "MDQ6VXNlcjMwNjM1NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/306354?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hyc",
    "html_url": "https://github.com/hyc",
    "followers_url": "https://api.github.com/users/hyc/followers",
    "following_url": "https://api.github.com/users/hyc/following{/other_user}",
    "gists_url": "https://api.github.com/users/hyc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hyc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hyc/subscriptions",
    "organizations_url": "https://api.github.com/users/hyc/orgs",
    "repos_url": "https://api.github.com/users/hyc/repos",
    "events_url": "https://api.github.com/users/hyc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hyc/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a86c6c19643e9ac795b17846e5b0db8b3e4c54de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a86c6c19643e9ac795b17846e5b0db8b3e4c54de",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a86c6c19643e9ac795b17846e5b0db8b3e4c54de"
    }
  ],
  "stats": {
    "total": 3706,
    "additions": 2181,
    "deletions": 1525
  },
  "files": [
    {
      "sha": "b649e6870b401aff70ec274271a84325902e95ab",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6d80378274fa33001f2ca1cef084eabc904178/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6d80378274fa33001f2ca1cef084eabc904178/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=bf6d80378274fa33001f2ca1cef084eabc904178",
      "patch": "@@ -1,3 +1,12 @@\n+2020-12-14  Howard Chu  <hyc@symas.com>\n+\n+\t* libdep_plugin.c: New file: Processes archives that contain a\n+\tspecial library dependencies element.\n+\t* Makefile.am: Add build rules for libdep_plugin.\n+\t* Makefile.in: Regenerate.\n+\t* NEWS: Mention the new plugin.\n+\t* ld.texi: Document the new plugin.\n+\n 2020-12-14  Alan Modra  <amodra@gmail.com>\n \n \tPR 26836"
    },
    {
      "sha": "2f59ee61697211434b380966e309ffa691c5f74d",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6d80378274fa33001f2ca1cef084eabc904178/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6d80378274fa33001f2ca1cef084eabc904178/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=bf6d80378274fa33001f2ca1cef084eabc904178",
      "patch": "@@ -998,6 +998,11 @@ libldtestplug4_la_SOURCES = testplug4.c\n libldtestplug4_la_CFLAGS= -g -O2\n libldtestplug4_la_LDFLAGS = -no-undefined -rpath /nowhere\n \n+bfdplugindir = $(libdir)/bfd-plugins\n+bfdplugin_LTLIBRARIES = libdep.la\n+libdep_la_SOURCES = libdep_plugin.c\n+libdep_la_LDFLAGS = -no-undefined -rpath /nowhere\n+\n # DOCUMENTATION TARGETS\n # Manual configuration file; not usually attached to normal configuration,\n # because almost all configs use \"gen\" version of manual."
    },
    {
      "sha": "c744701e0e44113704beed1971a02bd5c0304125",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 106,
      "deletions": 52,
      "changes": 158,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6d80378274fa33001f2ca1cef084eabc904178/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6d80378274fa33001f2ca1cef084eabc904178/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=bf6d80378274fa33001f2ca1cef084eabc904178",
      "patch": "@@ -137,14 +137,49 @@ mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = config.h\n CONFIG_CLEAN_FILES = po/Makefile.in\n CONFIG_CLEAN_VPATH_FILES =\n-LTLIBRARIES = $(noinst_LTLIBRARIES)\n-libldtestplug_la_LIBADD =\n-am_libldtestplug_la_OBJECTS = libldtestplug_la-testplug.lo\n-libldtestplug_la_OBJECTS = $(am_libldtestplug_la_OBJECTS)\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__uninstall_files_from_dir = { \\\n+  test -z \"$$files\" \\\n+    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n+    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n+         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n+  }\n+am__installdirs = \"$(DESTDIR)$(bfdplugindir)\" \"$(DESTDIR)$(bindir)\" \\\n+\t\"$(DESTDIR)$(infodir)\" \"$(DESTDIR)$(man1dir)\"\n+LTLIBRARIES = $(bfdplugin_LTLIBRARIES) $(noinst_LTLIBRARIES)\n+libdep_la_LIBADD =\n+am_libdep_la_OBJECTS = libdep_plugin.lo\n+libdep_la_OBJECTS = $(am_libdep_la_OBJECTS)\n AM_V_lt = $(am__v_lt_@AM_V@)\n am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\n am__v_lt_0 = --silent\n am__v_lt_1 = \n+libdep_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n+\t$(libdep_la_LDFLAGS) $(LDFLAGS) -o $@\n+libldtestplug_la_LIBADD =\n+am_libldtestplug_la_OBJECTS = libldtestplug_la-testplug.lo\n+libldtestplug_la_OBJECTS = $(am_libldtestplug_la_OBJECTS)\n libldtestplug_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n \t$(libldtestplug_la_CFLAGS) $(CFLAGS) \\\n@@ -170,8 +205,6 @@ libldtestplug4_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n \t$(libldtestplug4_la_CFLAGS) $(CFLAGS) \\\n \t$(libldtestplug4_la_LDFLAGS) $(LDFLAGS) -o $@\n-am__installdirs = \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(infodir)\" \\\n-\t\"$(DESTDIR)$(man1dir)\"\n PROGRAMS = $(bin_PROGRAMS)\n am_ld_new_OBJECTS = ldgram.$(OBJEXT) ldlex-wrapper.$(OBJEXT) \\\n \tlexsup.$(OBJEXT) ldlang.$(OBJEXT) mri.$(OBJEXT) \\\n@@ -235,9 +268,10 @@ AM_V_YACC = $(am__v_YACC_@AM_V@)\n am__v_YACC_ = $(am__v_YACC_@AM_DEFAULT_V@)\n am__v_YACC_0 = @echo \"  YACC    \" $@;\n am__v_YACC_1 = \n-SOURCES = $(libldtestplug_la_SOURCES) $(libldtestplug2_la_SOURCES) \\\n-\t$(libldtestplug3_la_SOURCES) $(libldtestplug4_la_SOURCES) \\\n-\t$(ld_new_SOURCES) $(EXTRA_ld_new_SOURCES)\n+SOURCES = $(libdep_la_SOURCES) $(libldtestplug_la_SOURCES) \\\n+\t$(libldtestplug2_la_SOURCES) $(libldtestplug3_la_SOURCES) \\\n+\t$(libldtestplug4_la_SOURCES) $(ld_new_SOURCES) \\\n+\t$(EXTRA_ld_new_SOURCES)\n AM_V_DVIPS = $(am__v_DVIPS_@AM_V@)\n am__v_DVIPS_ = $(am__v_DVIPS_@AM_DEFAULT_V@)\n am__v_DVIPS_0 = @echo \"  DVIPS   \" $@;\n@@ -290,33 +324,6 @@ am__can_run_installinfo = \\\n     n|no|NO) false;; \\\n     *) (install-info --version) >/dev/null 2>&1;; \\\n   esac\n-am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n-am__vpath_adj = case $$p in \\\n-    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n-    *) f=$$p;; \\\n-  esac;\n-am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n-am__install_max = 40\n-am__nobase_strip_setup = \\\n-  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n-am__nobase_strip = \\\n-  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n-am__nobase_list = $(am__nobase_strip_setup); \\\n-  for p in $$list; do echo \"$$p $$p\"; done | \\\n-  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n-  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n-    if (++n[$$2] == $(am__install_max)) \\\n-      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n-    END { for (dir in files) print dir, files[dir] }'\n-am__base_list = \\\n-  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n-  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n-am__uninstall_files_from_dir = { \\\n-  test -z \"$$files\" \\\n-    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n-    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n-         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n-  }\n man1dir = $(mandir)/man1\n NROFF = nroff\n MANS = $(man_MANS)\n@@ -1013,6 +1020,10 @@ libldtestplug3_la_LDFLAGS = -no-undefined -rpath /nowhere\n libldtestplug4_la_SOURCES = testplug4.c\n libldtestplug4_la_CFLAGS = -g -O2\n libldtestplug4_la_LDFLAGS = -no-undefined -rpath /nowhere\n+bfdplugindir = $(libdir)/bfd-plugins\n+bfdplugin_LTLIBRARIES = libdep.la\n+libdep_la_SOURCES = libdep_plugin.c\n+libdep_la_LDFLAGS = -no-undefined -rpath /nowhere\n MAINTAINERCLEANFILES = configdoc.texi ld.1 ld.info\n \n # We want to reconfigure if configure.host or configure.tgt changes.\n@@ -1088,6 +1099,41 @@ distclean-hdr:\n po/Makefile.in: $(top_builddir)/config.status $(top_srcdir)/po/Make-in\n \tcd $(top_builddir) && $(SHELL) ./config.status $@\n \n+install-bfdpluginLTLIBRARIES: $(bfdplugin_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\t@list='$(bfdplugin_LTLIBRARIES)'; test -n \"$(bfdplugindir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(MKDIR_P) '$(DESTDIR)$(bfdplugindir)'\"; \\\n+\t  $(MKDIR_P) \"$(DESTDIR)$(bfdplugindir)\" || exit 1; \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(bfdplugindir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(bfdplugindir)\"; \\\n+\t}\n+\n+uninstall-bfdpluginLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(bfdplugin_LTLIBRARIES)'; test -n \"$(bfdplugindir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(bfdplugindir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(bfdplugindir)/$$f\"; \\\n+\tdone\n+\n+clean-bfdpluginLTLIBRARIES:\n+\t-test -z \"$(bfdplugin_LTLIBRARIES)\" || rm -f $(bfdplugin_LTLIBRARIES)\n+\t@list='$(bfdplugin_LTLIBRARIES)'; \\\n+\tlocs=`for p in $$list; do echo $$p; done | \\\n+\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n+\t      sort -u`; \\\n+\ttest -z \"$$locs\" || { \\\n+\t  echo rm -f $${locs}; \\\n+\t  rm -f $${locs}; \\\n+\t}\n+\n clean-noinstLTLIBRARIES:\n \t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n \t@list='$(noinst_LTLIBRARIES)'; \\\n@@ -1099,6 +1145,9 @@ clean-noinstLTLIBRARIES:\n \t  rm -f $${locs}; \\\n \t}\n \n+libdep.la: $(libdep_la_OBJECTS) $(libdep_la_DEPENDENCIES) $(EXTRA_libdep_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(libdep_la_LINK) -rpath $(bfdplugindir) $(libdep_la_OBJECTS) $(libdep_la_LIBADD) $(LIBS)\n+\n libldtestplug.la: $(libldtestplug_la_OBJECTS) $(libldtestplug_la_DEPENDENCIES) $(EXTRA_libldtestplug_la_DEPENDENCIES) \n \t$(AM_V_CCLD)$(libldtestplug_la_LINK)  $(libldtestplug_la_OBJECTS) $(libldtestplug_la_LIBADD) $(LIBS)\n \n@@ -1492,6 +1541,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldver.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ldwrite.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexsup.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libdep_plugin.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libldtestplug2_la-testplug2.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libldtestplug3_la-testplug3.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libldtestplug4_la-testplug4.Plo@am__quote@\n@@ -1886,7 +1936,7 @@ all-am: Makefile $(INFO_DEPS) $(LTLIBRARIES) $(PROGRAMS) $(MANS) \\\n \t\tconfig.h\n installdirs: installdirs-recursive\n installdirs-am:\n-\tfor dir in \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(infodir)\" \"$(DESTDIR)$(man1dir)\"; do \\\n+\tfor dir in \"$(DESTDIR)$(bfdplugindir)\" \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(infodir)\" \"$(DESTDIR)$(man1dir)\"; do \\\n \t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n \tdone\n install: $(BUILT_SOURCES)\n@@ -1932,8 +1982,9 @@ maintainer-clean-generic:\n \t-test -z \"$(MAINTAINERCLEANFILES)\" || rm -f $(MAINTAINERCLEANFILES)\n clean: clean-recursive\n \n-clean-am: clean-aminfo clean-binPROGRAMS clean-generic clean-libtool \\\n-\tclean-noinstLTLIBRARIES mostlyclean-am\n+clean-am: clean-aminfo clean-bfdpluginLTLIBRARIES clean-binPROGRAMS \\\n+\tclean-generic clean-libtool clean-noinstLTLIBRARIES \\\n+\tmostlyclean-am\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n@@ -1955,7 +2006,8 @@ info: info-recursive\n \n info-am: $(INFO_DEPS)\n \n-install-data-am: install-data-local install-info-am install-man\n+install-data-am: install-bfdpluginLTLIBRARIES install-data-local \\\n+\tinstall-info-am install-man\n \n install-dvi: install-dvi-recursive\n \n@@ -2095,9 +2147,9 @@ ps: ps-recursive\n \n ps-am: $(PSS)\n \n-uninstall-am: uninstall-binPROGRAMS uninstall-dvi-am uninstall-html-am \\\n-\tuninstall-info-am uninstall-man uninstall-pdf-am \\\n-\tuninstall-ps-am\n+uninstall-am: uninstall-bfdpluginLTLIBRARIES uninstall-binPROGRAMS \\\n+\tuninstall-dvi-am uninstall-html-am uninstall-info-am \\\n+\tuninstall-man uninstall-pdf-am uninstall-ps-am\n \n uninstall-man: uninstall-man1\n \n@@ -2106,12 +2158,13 @@ uninstall-man: uninstall-man1\n \n .PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \\\n \tam--refresh check check-DEJAGNU check-am clean clean-aminfo \\\n-\tclean-binPROGRAMS clean-cscope clean-generic clean-libtool \\\n-\tclean-noinstLTLIBRARIES cscope cscopelist-am ctags ctags-am \\\n-\tdist-info distclean distclean-DEJAGNU distclean-compile \\\n-\tdistclean-generic distclean-hdr distclean-libtool \\\n-\tdistclean-local distclean-tags dvi dvi-am html html-am info \\\n-\tinfo-am install install-am install-binPROGRAMS install-data \\\n+\tclean-bfdpluginLTLIBRARIES clean-binPROGRAMS clean-cscope \\\n+\tclean-generic clean-libtool clean-noinstLTLIBRARIES cscope \\\n+\tcscopelist-am ctags ctags-am dist-info distclean \\\n+\tdistclean-DEJAGNU distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-local distclean-tags \\\n+\tdvi dvi-am html html-am info info-am install install-am \\\n+\tinstall-bfdpluginLTLIBRARIES install-binPROGRAMS install-data \\\n \tinstall-data-am install-data-local install-dvi install-dvi-am \\\n \tinstall-exec install-exec-am install-exec-local install-html \\\n \tinstall-html-am install-info install-info-am install-man \\\n@@ -2121,9 +2174,10 @@ uninstall-man: uninstall-man1\n \tmaintainer-clean-aminfo maintainer-clean-generic mostlyclean \\\n \tmostlyclean-aminfo mostlyclean-compile mostlyclean-generic \\\n \tmostlyclean-libtool mostlyclean-local pdf pdf-am ps ps-am tags \\\n-\ttags-am uninstall uninstall-am uninstall-binPROGRAMS \\\n-\tuninstall-dvi-am uninstall-html-am uninstall-info-am \\\n-\tuninstall-man uninstall-man1 uninstall-pdf-am uninstall-ps-am\n+\ttags-am uninstall uninstall-am uninstall-bfdpluginLTLIBRARIES \\\n+\tuninstall-binPROGRAMS uninstall-dvi-am uninstall-html-am \\\n+\tuninstall-info-am uninstall-man uninstall-man1 \\\n+\tuninstall-pdf-am uninstall-ps-am\n \n .PRECIOUS: Makefile\n "
    },
    {
      "sha": "1c3f9c156e4640497e184c14a1eb6f07bd7e7619",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6d80378274fa33001f2ca1cef084eabc904178/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6d80378274fa33001f2ca1cef084eabc904178/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=bf6d80378274fa33001f2ca1cef084eabc904178",
      "patch": "@@ -1,5 +1,8 @@\n -*- text -*-\n \n+* Add libdep plugin, for linking dependencies of static libraries that\n+  were recorded by ar in the __.LIBDEP archive member.\n+\n * Add --error-handling-script=<NAME> command line option to allow a helper\n   script to be invoked when an undefined symbol or a missing library is\n   encountered.  This option can be suppressed via the configure time"
    },
    {
      "sha": "51c51a3ec1f9874d533c4a93061f58b0ad45fac2",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6d80378274fa33001f2ca1cef084eabc904178/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6d80378274fa33001f2ca1cef084eabc904178/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=bf6d80378274fa33001f2ca1cef084eabc904178",
      "patch": "@@ -126,6 +126,7 @@ in the section entitled ``GNU Free Documentation License''.\n * Overview::                    Overview\n * Invocation::                  Invocation\n * Scripts::                     Linker Scripts\n+* Plugins::                     Linker Plugins\n @ifset GENERIC\n * Machine Dependent::           Machine Dependent Features\n @end ifset\n@@ -6954,6 +6955,58 @@ Any input files read because of an implicit linker script will be read\n at the position in the command line where the implicit linker script was\n read.  This can affect archive searching.\n \n+@node Plugins\n+@chapter Linker Plugins\n+\n+@cindex plugins\n+@cindex linker plugins\n+The linker can use dynamically loaded plugins to modify its behavior.\n+For example, the link-time optimization feature that some compilers\n+support is implemented with a linker plugin.\n+\n+Currently there is only one plugin shipped by default, but more may\n+be added here later.\n+\n+@menu\n+* libdep Plugin::\tStatic Library Dependencies Plugin\n+@end menu\n+\n+@node libdep Plugin\n+@section Static Library Dependencies Plugin\n+@cindex static library dependencies\n+Originally, static libraries were contained in an archive file consisting\n+just of a collection of relocatable object files.  Later they evolved to\n+optionally include a symbol table, to assist in finding the needed objects\n+within a library.  There their evolution ended, and dynamic libraries\n+rose to ascendance.\n+\n+One useful feature of dynamic libraries was that, more than just collecting\n+multiple objects into a single file, they also included a list of their\n+dependencies, such that one could specify just the name of a single dynamic\n+library at link time, and all of its dependencies would be implicitly\n+referenced as well.  But static libraries lacked this feature, so if a\n+link invocation was switched from using dynamic libraries to static\n+libraries, the link command would usually fail unless it was rewritten to\n+explicitly list the dependencies of the static library.\n+\n+The GNU @command{ar} utility now supports a @option{--record-libdeps} option\n+to embed dependency lists into static libraries as well, and the @file{libdep}\n+plugin may be used to read this dependency information at link time.  The\n+dependency information is stored as a single string, carrying @option{-l}\n+and @option{-L} arguments as they would normally appear in a linker\n+command line.  As such, the information can be written with any text\n+utility and stored into any archive, even if GNU @command{ar} is not\n+being used to create the archive.  The information is stored in an\n+archive member named @samp{__.LIBDEP}.\n+\n+For example, given a library @file{libssl.a} that depends on another\n+library @file{libcrypto.a} which may be found in @file{/usr/local/lib},\n+the @samp{__.LIBDEP} member of @file{libssl.a} would contain\n+\n+@smallexample\n+-L/usr/local/lib -lcrypto\n+@end smallexample\n+\n @ifset GENERIC\n @node Machine Dependent\n @chapter Machine Dependent Features"
    },
    {
      "sha": "2a7fdc4d0bf5d8d4b8a47f90aef1843a552e7095",
      "filename": "ld/libdep_plugin.c",
      "status": "added",
      "additions": 366,
      "deletions": 0,
      "changes": 366,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6d80378274fa33001f2ca1cef084eabc904178/ld/libdep_plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6d80378274fa33001f2ca1cef084eabc904178/ld/libdep_plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/libdep_plugin.c?ref=bf6d80378274fa33001f2ca1cef084eabc904178",
      "patch": "@@ -0,0 +1,366 @@\n+/* libdeps plugin for the GNU linker.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of the GNU Binutils.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+   MA 02110-1301, USA.  */\n+\n+#include \"sysdep.h\"\n+#include \"bfd.h\"\n+#if BFD_SUPPORTS_PLUGINS\n+#include \"plugin-api.h\"\n+\n+#include <ctype.h> /* For isspace.  */\n+\n+extern enum ld_plugin_status onload (struct ld_plugin_tv *tv);\n+\n+/* Helper for calling plugin api message function.  */\n+#define TV_MESSAGE if (tv_message) (*tv_message)\n+\n+/* Function pointers to cache hooks passed at onload time.  */\n+static ld_plugin_register_claim_file tv_register_claim_file = 0;\n+static ld_plugin_register_all_symbols_read tv_register_all_symbols_read = 0;\n+static ld_plugin_register_cleanup tv_register_cleanup = 0;\n+static ld_plugin_message tv_message = 0;\n+static ld_plugin_add_input_library tv_add_input_library = 0;\n+static ld_plugin_set_extra_library_path tv_set_extra_library_path = 0;\n+\n+/* Handle/record information received in a transfer vector entry.  */\n+static enum ld_plugin_status\n+parse_tv_tag (struct ld_plugin_tv *tv)\n+{\n+#define SETVAR(x) x = tv->tv_u.x\n+  switch (tv->tv_tag)\n+    {\n+      case LDPT_REGISTER_CLAIM_FILE_HOOK:\n+\tSETVAR(tv_register_claim_file);\n+\tbreak;\n+      case LDPT_REGISTER_ALL_SYMBOLS_READ_HOOK:\n+\tSETVAR(tv_register_all_symbols_read);\n+\tbreak;\n+      case LDPT_REGISTER_CLEANUP_HOOK:\n+\tSETVAR(tv_register_cleanup);\n+\tbreak;\n+      case LDPT_MESSAGE:\n+\tSETVAR(tv_message);\n+\tbreak;\n+      case LDPT_ADD_INPUT_LIBRARY:\n+\tSETVAR(tv_add_input_library);\n+\tbreak;\n+      case LDPT_SET_EXTRA_LIBRARY_PATH:\n+\tSETVAR(tv_set_extra_library_path);\n+\tbreak;\n+      default:\n+\tbreak;\n+    }\n+#undef SETVAR\n+  return LDPS_OK;\n+}\n+\n+/* Defs for archive parsing.  */\n+#define ARMAGSIZE\t8\n+typedef struct arhdr\n+{\n+  char ar_name[16];\n+  char ar_date[12];\n+  char ar_uid[6];\n+  char ar_gid[6];\n+  char ar_mode[8];\n+  char ar_size[10];\n+  char ar_fmag[2];\n+} arhdr;\n+\n+typedef struct linerec\n+{\n+  struct linerec *next;\n+  char line[];\n+} linerec;\n+\n+#define LIBDEPS \"__.LIBDEP/ \"\n+\n+static linerec *line_head, **line_tail = &line_head;\n+\n+static enum ld_plugin_status\n+get_libdeps (int fd)\n+{\n+  arhdr ah;\n+  int len;\n+  unsigned long mlen;\n+  linerec *lr;\n+  enum ld_plugin_status rc = LDPS_NO_SYMS;\n+\n+  lseek (fd, ARMAGSIZE, SEEK_SET);\n+  for (;;)\n+    {\n+      len = read (fd, (void *) &ah, sizeof (ah));\n+      if (len != sizeof (ah))\n+\tbreak;\n+      mlen = strtoul (ah.ar_size, NULL, 10);\n+      if (!mlen || strncmp (ah.ar_name, LIBDEPS, sizeof (LIBDEPS)-1))\n+\t{\n+\t  lseek (fd, mlen, SEEK_CUR);\n+\t  continue;\n+\t}\n+      lr = malloc (sizeof (linerec) + mlen);\n+      if (!lr)\n+\treturn LDPS_ERR;\n+      lr->next = NULL;\n+      len = read (fd, lr->line, mlen);\n+      lr->line[mlen-1] = '\\0';\n+      *line_tail = lr;\n+      line_tail = &lr->next;\n+      rc = LDPS_OK;\n+      break;\n+    }\n+  return rc;\n+}\n+\n+/* Turn a string into an argvec.  */\n+static char **\n+str2vec (char *in)\n+{\n+  char **res;\n+  char *s, *first, *end;\n+  char *sq, *dq;\n+  int i;\n+\n+  end = in + strlen (in);\n+  s = in;\n+  while (isspace (*s)) s++;\n+  first = s;\n+\n+  i = 1;\n+  while ((s = strchr (s, ' ')))\n+    {\n+      s++;\n+      i++;\n+    }\n+  res = (char **)malloc ((i+1) * sizeof (char *));\n+  if (!res)\n+    return res;\n+\n+  i = 0;\n+  sq = NULL;\n+  dq = NULL;\n+  res[0] = first;\n+  for (s = first; *s; s++)\n+    {\n+      if (*s == '\\\\')\n+\t{\n+\t  memmove (s, s+1, end-s-1);\n+\t  end--;\n+\t}\n+      if (isspace (*s))\n+\t{\n+\t  if (sq || dq)\n+\t    continue;\n+\t  *s++ = '\\0';\n+\t  while (isspace (*s)) s++;\n+\t  if (*s)\n+\t    res[++i] = s;\n+\t}\n+      if (*s == '\\'' && !dq)\n+\t{\n+\t  if (sq)\n+\t    {\n+\t      memmove (sq, sq+1, s-sq-1);\n+\t      memmove (s-2, s+1, end-s-1);\n+\t      end -= 2;\n+\t      s--;\n+\t      sq = NULL;\n+\t    }\n+\t  else\n+\t    {\n+\t      sq = s;\n+\t    }\n+\t}\n+      if (*s == '\"' && !sq)\n+\t{\n+\t  if (dq)\n+\t    {\n+\t      memmove (dq, dq+1, s-dq-1);\n+\t      memmove (s-2, s+1, end-s-1);\n+\t      end -= 2;\n+\t      s--;\n+\t      dq = NULL;\n+\t    }\n+\t  else\n+\t    {\n+\t      dq = s;\n+\t    }\n+\t}\n+    }\n+  res[++i] = NULL;\n+  return res;\n+}\n+\n+static char *prevfile;\n+\n+/* Standard plugin API registerable hook.  */\n+static enum ld_plugin_status\n+onclaim_file (const struct ld_plugin_input_file *file, int *claimed)\n+{\n+  enum ld_plugin_status rv;\n+\n+  *claimed = 0;\n+\n+  /* If we've already seen this file, ignore it.  */\n+  if (prevfile && !strcmp (file->name, prevfile))\n+    return LDPS_OK;\n+\n+  /* If it's not an archive member, ignore it.  */\n+  if (!file->offset)\n+    return LDPS_OK;\n+\n+  if (prevfile)\n+    free (prevfile);\n+\n+  prevfile = strdup (file->name);\n+  if (!prevfile)\n+    return LDPS_ERR;\n+\n+  /* This hook only gets called on actual object files.\n+   * We have to examine the archive ourselves, to find\n+   * our LIBDEPS member.  */\n+  rv = get_libdeps (file->fd);\n+  if (rv == LDPS_ERR)\n+    return rv;\n+\n+  if (rv == LDPS_OK)\n+    {\n+      linerec *lr = (linerec *)line_tail;\n+      /* Inform the user/testsuite.  */\n+      TV_MESSAGE (LDPL_INFO, \"got deps for library %s: %s\",\n+\t\t  file->name, lr->line);\n+      fflush (NULL);\n+    }\n+\n+  return LDPS_OK;\n+}\n+\n+/* Standard plugin API registerable hook.  */\n+static enum ld_plugin_status\n+onall_symbols_read (void)\n+{\n+  linerec *lr;\n+  char **vec;\n+  enum ld_plugin_status rv = LDPS_OK;\n+\n+  while ((lr = line_head))\n+    {\n+      line_head = lr->next;\n+      vec = str2vec (lr->line);\n+      if (vec)\n+\t{\n+\t  int i;\n+\t  for (i = 0; vec[i]; i++)\n+\t    {\n+\t      if (vec[i][0] != '-')\n+\t\t{\n+\t\t  TV_MESSAGE (LDPL_WARNING, \"ignoring libdep argument %s\",\n+\t\t\t      vec[i]);\n+\t\t  fflush (NULL);\n+\t\t  continue;\n+\t\t}\n+\t      if (vec[i][1] == 'l')\n+\t\trv = tv_add_input_library (vec[i]+2);\n+\t      else if (vec[i][1] == 'L')\n+\t\trv = tv_set_extra_library_path (vec[i]+2);\n+\t      else\n+\t\t{\n+\t\t  TV_MESSAGE (LDPL_WARNING, \"ignoring libdep argument %s\",\n+\t\t\t      vec[i]);\n+\t\t  fflush (NULL);\n+\t\t}\n+\t      if (rv != LDPS_OK)\n+\t\tbreak;\n+\t    }\n+\t  free (vec);\n+\t}\n+      free (lr);\n+    }\n+  line_tail = NULL;\n+  return rv;\n+}\n+\n+/* Standard plugin API registerable hook.  */\n+static enum ld_plugin_status\n+oncleanup (void)\n+{\n+  if (prevfile)\n+    {\n+      free (prevfile);\n+      prevfile = NULL;\n+    }\n+  if (line_head)\n+    {\n+      linerec *lr;\n+      while ((lr = line_head))\n+\t{\n+\t  line_head = lr->next;\n+\t  free (lr);\n+\t}\n+      line_tail = NULL;\n+    }\n+  return LDPS_OK;\n+}\n+\n+/* Standard plugin API entry point.  */\n+enum ld_plugin_status\n+onload (struct ld_plugin_tv *tv)\n+{\n+  enum ld_plugin_status rv;\n+\n+  /* This plugin requires a valid tv array.  */\n+  if (!tv)\n+    return LDPS_ERR;\n+\n+  /* First entry should always be LDPT_MESSAGE, letting us get\n+     hold of it easily so we can send output straight away.  */\n+  if (tv[0].tv_tag == LDPT_MESSAGE)\n+    tv_message = tv[0].tv_u.tv_message;\n+\n+  do\n+    if ((rv = parse_tv_tag (tv)) != LDPS_OK)\n+      return rv;\n+  while ((tv++)->tv_tag != LDPT_NULL);\n+\n+  /* Register hooks.  */\n+  if (!tv_register_claim_file)\n+    {\n+      TV_MESSAGE (LDPL_FATAL, \"No register_claim_file hook\");\n+      fflush (NULL);\n+      return LDPS_ERR;\n+    }\n+  (*tv_register_claim_file) (onclaim_file);\n+  if (!tv_register_all_symbols_read)\n+    {\n+      TV_MESSAGE (LDPL_FATAL, \"No register_all_symbols_read hook\");\n+      fflush (NULL);\n+      return LDPS_ERR;\n+    }\n+  (*tv_register_all_symbols_read) (onall_symbols_read);\n+  if (!tv_register_cleanup)\n+    {\n+      TV_MESSAGE (LDPL_FATAL, \"No register_cleanup hook\");\n+      fflush (NULL);\n+      return LDPS_ERR;\n+    }\n+  (*tv_register_cleanup) (oncleanup);\n+  fflush (NULL);\n+  return LDPS_OK;\n+}\n+#endif /* BFD_SUPPORTS_PLUGINS */"
    },
    {
      "sha": "c619dffb23c0a1393e14f7cf0d5794db8dc9b9f7",
      "filename": "ld/po/ld.pot",
      "status": "modified",
      "additions": 1639,
      "deletions": 1473,
      "changes": 3112,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6d80378274fa33001f2ca1cef084eabc904178/ld/po/ld.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6d80378274fa33001f2ca1cef084eabc904178/ld/po/ld.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/po/ld.pot?ref=bf6d80378274fa33001f2ca1cef084eabc904178"
    }
  ]
}