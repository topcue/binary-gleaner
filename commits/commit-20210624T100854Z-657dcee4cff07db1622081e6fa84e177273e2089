{
  "sha": "657dcee4cff07db1622081e6fa84e177273e2089",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjU3ZGNlZTRjZmYwN2RiMTYyMjA4MWU2ZmE4NGUxNzcyNzNlMjA4OQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-06-24T10:08:54Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-06-24T10:08:54Z"
    },
    "message": "[gdb/testsuite] Fix duplicate in gdb.base/argv0-symlink.exp\n\nI found the following duplicates in gdb.base/argv0-symlink.exp:\n...\nDUPLICATE: gdb.base/argv0-symlink.exp: set print repeats 10000\nDUPLICATE: gdb.base/argv0-symlink.exp: set print elements 10000\n...\n\nFix these by using with_test_prefix \"file symlink\" / \"dir symlink\".\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-06-24  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/argv0-symlink.exp: Use with_test_prefix.",
    "tree": {
      "sha": "2fd6ff0b95e4f7fed58753e9ac082542ed2935fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2fd6ff0b95e4f7fed58753e9ac082542ed2935fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/657dcee4cff07db1622081e6fa84e177273e2089",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/657dcee4cff07db1622081e6fa84e177273e2089",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/657dcee4cff07db1622081e6fa84e177273e2089",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/657dcee4cff07db1622081e6fa84e177273e2089/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1daf786ba3db83455d4d2a9661d0715f433f8a3f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1daf786ba3db83455d4d2a9661d0715f433f8a3f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1daf786ba3db83455d4d2a9661d0715f433f8a3f"
    }
  ],
  "stats": {
    "total": 123,
    "additions": 68,
    "deletions": 55
  },
  "files": [
    {
      "sha": "73035a906dac650d20e235cd7824660330b7f890",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/657dcee4cff07db1622081e6fa84e177273e2089/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/657dcee4cff07db1622081e6fa84e177273e2089/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=657dcee4cff07db1622081e6fa84e177273e2089",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-24  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/argv0-symlink.exp: Use with_test_prefix.\n+\n 2021-06-23  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (gdb_test_lines): Rewrite to accept single"
    },
    {
      "sha": "f55d9861603109ea75809860d3ae603abfa0f752",
      "filename": "gdb/testsuite/gdb.base/argv0-symlink.exp",
      "status": "modified",
      "additions": 64,
      "deletions": 55,
      "changes": 119,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/657dcee4cff07db1622081e6fa84e177273e2089/gdb/testsuite/gdb.base/argv0-symlink.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/657dcee4cff07db1622081e6fa84e177273e2089/gdb/testsuite/gdb.base/argv0-symlink.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/argv0-symlink.exp?ref=657dcee4cff07db1622081e6fa84e177273e2089",
      "patch": "@@ -38,73 +38,82 @@ if { [build_executable ${testfile}.exp ${testfile} ${srcfile}] == -1 } {\n     return -1\n }\n \n-set test \"kept file symbolic link name\"\n-set filelink \"${testfile}-filelink\"\n-\n-remote_file host delete [standard_output_file $filelink]\n-set status [remote_exec host \"ln -sf ${testfile} [standard_output_file $filelink]\"]\n-if {[lindex $status 0] != 0} {\n-    unsupported \"$test (host does not support symbolic links)\"\n-    return 0\n-}\n-\n-clean_restart \"$filelink\"\n+with_test_prefix \"file symlink\" {\n \n-if ![runto_main] {\n-    untested \"could not run to main\"\n-    return -1\n-}\n+    set test \"kept name\"\n+    set filelink \"${testfile}-filelink\"\n \n-gdb_test_no_output \"set print repeats 10000\"\n-gdb_test_no_output \"set print elements 10000\"\n+    remote_file host delete [standard_output_file $filelink]\n+    set status [remote_exec host \\\n+\t\t    \"ln -sf ${testfile} [standard_output_file $filelink]\"]\n+    if {[lindex $status 0] != 0} {\n+\tunsupported \"$test (host does not support symbolic links)\"\n+\treturn 0\n+    }\n \n-if { $has_argv0 } {\n-    gdb_test {print argv[0]} \"/$filelink\\\"\" $test\n-} else {\n-    unsupported $test\n-}\n+    clean_restart \"$filelink\"\n \n-# For a link named /PATH/TO/DIR/LINK, we want to check the output\n-# against \"/DIR/LINK\", but computed in a way that doesn't make\n-# assumptions about the test directory layout.\n-set full_filelink [standard_output_file $filelink]\n-set lastdir [file tail [file dirname $full_filelink]]\n+    if ![runto_main] {\n+\tuntested \"could not run to main\"\n+\treturn -1\n+    }\n \n-gdb_test \"info inferiors\" \"/$lastdir/$filelink *\" \"$test for info inferiors\"\n+    gdb_test_no_output \"set print repeats 10000\"\n+    gdb_test_no_output \"set print elements 10000\"\n \n+    if { $has_argv0 } {\n+\tgdb_test {print argv[0]} \"/$filelink\\\"\" $test\n+    } else {\n+\tunsupported $test\n+    }\n \n-set test \"kept directory symbolic link name\"\n-set dirlink \"${testfile}-dirlink\"\n+    # For a link named /PATH/TO/DIR/LINK, we want to check the output\n+    # against \"/DIR/LINK\", but computed in a way that doesn't make\n+    # assumptions about the test directory layout.\n+    set full_filelink [standard_output_file $filelink]\n+    set lastdir [file tail [file dirname $full_filelink]]\n \n-# 'ln -sf' does not overwrite symbol link to a directory.\n-# 'remote_file host delete' uses stat (not lstat), therefore it refuses to\n-# delete a directory.\n-remote_exec host \"rm -f [standard_output_file $dirlink]\"\n-set status [remote_exec host \"ln -sf . [standard_output_file $dirlink]\"]\n-if {[lindex $status 0] != 0} {\n-    unsupported \"$test (host does not support symbolic links)\"\n-    return 0\n+    gdb_test \"info inferiors\" \"/$lastdir/$filelink *\" \\\n+\t\"$test for info inferiors\"\n }\n \n-clean_restart \"$dirlink/$filelink\"\n+with_test_prefix \"dir symlink\" {\n \n-if ![runto_main] {\n-    untested \"could not run to main\"\n-    return -1\n-}\n+    set test \"kept name\"\n+    set dirlink \"${testfile}-dirlink\"\n+\n+    # 'ln -sf' does not overwrite symbol link to a directory.\n+    # 'remote_file host delete' uses stat (not lstat), therefore it refuses to\n+    # delete a directory.\n+    remote_exec host \"rm -f [standard_output_file $dirlink]\"\n+    set status [remote_exec host \"ln -sf . [standard_output_file $dirlink]\"]\n+    if {[lindex $status 0] != 0} {\n+\tunsupported \"$test (host does not support symbolic links)\"\n+\treturn 0\n+    }\n \n-gdb_test_no_output \"set print repeats 10000\"\n-gdb_test_no_output \"set print elements 10000\"\n+    clean_restart \"$dirlink/$filelink\"\n \n-if { $has_argv0 } {\n-    # gdbserver in extended-remote mode does not have this issue.\n-    # Plain remote does, however.\n-    if {[target_info gdb_protocol] != \"extended-remote\" || ![target_is_gdbserver]} {\n-\tsetup_kfail \"*-*-*\" gdb/15934\n+    if ![runto_main] {\n+\tuntested \"could not run to main\"\n+\treturn -1\n+    }\n+\n+    gdb_test_no_output \"set print repeats 10000\"\n+    gdb_test_no_output \"set print elements 10000\"\n+\n+    if { $has_argv0 } {\n+\t# gdbserver in extended-remote mode does not have this issue.\n+\t# Plain remote does, however.\n+\tif { [target_info gdb_protocol] != \"extended-remote\"\n+\t     || ![target_is_gdbserver] } {\n+\t    setup_kfail \"*-*-*\" gdb/15934\n+\t}\n+\tgdb_test {print argv[0]} \"/$dirlink/$filelink\\\"\" $test\n+    } else {\n+\tunsupported $test\n     }\n-    gdb_test {print argv[0]} \"/$dirlink/$filelink\\\"\" $test\n-} else {\n-    unsupported $test\n-}\n \n-gdb_test \"info inferiors\" \"/$lastdir/$filelink *\" \"$test for info inferiors\"\n+    gdb_test \"info inferiors\" \"/$lastdir/$filelink *\" \\\n+\t\"$test for info inferiors\"\n+}"
    }
  ]
}