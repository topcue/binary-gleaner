{
  "sha": "9409233b0ec8a052eacc5846ee054f224f7e7213",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTQwOTIzM2IwZWM4YTA1MmVhY2M1ODQ2ZWUwNTRmMjI0ZjdlNzIxMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-02-08T08:40:39Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-02-17T23:28:38Z"
    },
    "message": "Change macro_source_fullname to return a std::string\n\nWhile working on the previous patch, I noticed that if\nmacro_source_fullname returned a std::string, then the callers would\nbe simplified.  This patch implements this idea.\n\ngdb/ChangeLog\n2019-02-17  Tom Tromey  <tom@tromey.com>\n\n\t* macrotab.h (macro_source_fullname): Return a std::string.\n\t* macrotab.c (macro_include, check_for_redefinition)\n\t(macro_undef, macro_lookup_definition, foreach_macro)\n\t(foreach_macro_in_scope): Update.\n\t(macro_source_fullname): Return a std::string.\n\t* macrocmd.c (show_pp_source_pos): Update.",
    "tree": {
      "sha": "2074b48076d95b6f37bad36ddba994e03af6bf83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2074b48076d95b6f37bad36ddba994e03af6bf83"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9409233b0ec8a052eacc5846ee054f224f7e7213",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9409233b0ec8a052eacc5846ee054f224f7e7213",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9409233b0ec8a052eacc5846ee054f224f7e7213",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9409233b0ec8a052eacc5846ee054f224f7e7213/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6506371f0671dd5ca11127fee4db8d8d7fec157f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6506371f0671dd5ca11127fee4db8d8d7fec157f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6506371f0671dd5ca11127fee4db8d8d7fec157f"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 37,
    "deletions": 50
  },
  "files": [
    {
      "sha": "ac29a3279ee345773209afa32f41702a3a29aaf8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9409233b0ec8a052eacc5846ee054f224f7e7213",
      "patch": "@@ -1,3 +1,12 @@\n+2019-02-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* macrotab.h (macro_source_fullname): Return a std::string.\n+\t* macrotab.c (macro_include, check_for_redefinition)\n+\t(macro_undef, macro_lookup_definition, foreach_macro)\n+\t(foreach_macro_in_scope): Update.\n+\t(macro_source_fullname): Return a std::string.\n+\t* macrocmd.c (show_pp_source_pos): Update.\n+\n 2019-02-17  Tom Tromey  <tom@tromey.com>\n \n \t* macrocmd.c (show_pp_source_pos): Style the file names."
    },
    {
      "sha": "0f81c3d5da4475f47299bd97c71f030c212e093a",
      "filename": "gdb/macrocmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/macrocmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/macrocmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macrocmd.c?ref=9409233b0ec8a052eacc5846ee054f224f7e7213",
      "patch": "@@ -119,20 +119,16 @@ show_pp_source_pos (struct ui_file *stream,\n                     struct macro_source_file *file,\n                     int line)\n {\n-  char *fullname;\n-\n-  fullname = macro_source_fullname (file);\n-  fputs_styled (fullname, file_name_style.style (), stream);\n+  std::string fullname = macro_source_fullname (file);\n+  fputs_styled (fullname.c_str (), file_name_style.style (), stream);\n   fprintf_filtered (stream, \":%d\\n\", line);\n-  xfree (fullname);\n \n   while (file->included_by)\n     {\n       fullname = macro_source_fullname (file->included_by);\n       fputs_filtered (_(\"  included at \"), stream);\n-      fputs_styled (fullname, file_name_style.style (), stream);\n+      fputs_styled (fullname.c_str (), file_name_style.style (), stream);\n       fprintf_filtered (stream, \":%d\\n\", file->included_at_line);\n-      xfree (fullname);\n       file = file->included_by;\n     }\n }"
    },
    {
      "sha": "fa3061616bd9237ccd0179d89ad9974ef830311e",
      "filename": "gdb/macrotab.c",
      "status": "modified",
      "additions": 23,
      "deletions": 40,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/macrotab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/macrotab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macrotab.c?ref=9409233b0ec8a052eacc5846ee054f224f7e7213",
      "patch": "@@ -466,8 +466,6 @@ macro_include (struct macro_source_file *source,\n      the new one?  */\n   if (*link && line == (*link)->included_at_line)\n     {\n-      char *link_fullname, *source_fullname;\n-\n       /* This means the compiler is emitting bogus debug info.  (GCC\n          circa March 2002 did this.)  It also means that the splay\n          tree ordering function, macro_tree_compare, will abort,\n@@ -476,12 +474,11 @@ macro_include (struct macro_source_file *source,\n \n          First, squawk.  */\n \n-      link_fullname = macro_source_fullname (*link);\n-      source_fullname = macro_source_fullname (source);\n+      std::string link_fullname = macro_source_fullname (*link);\n+      std::string source_fullname = macro_source_fullname (source);\n       complaint (_(\"both `%s' and `%s' allegedly #included at %s:%d\"),\n-\t\t included, link_fullname, source_fullname, line);\n-      xfree (source_fullname);\n-      xfree (link_fullname);\n+\t\t included, link_fullname.c_str (), source_fullname.c_str (),\n+\t\t line);\n \n       /* Now, choose a new, unoccupied line number for this\n          #inclusion, after the alleged #inclusion line.  */\n@@ -725,16 +722,14 @@ check_for_redefinition (struct macro_source_file *source, int line,\n \n       if (! same)\n         {\n-\t  char *source_fullname, *found_key_fullname;\n-\t  \n-\t  source_fullname = macro_source_fullname (source);\n-\t  found_key_fullname = macro_source_fullname (found_key->start_file);\n+\t  std::string source_fullname = macro_source_fullname (source);\n+\t  std::string found_key_fullname\n+\t    = macro_source_fullname (found_key->start_file);\n \t  complaint (_(\"macro `%s' redefined at %s:%d; \"\n \t\t       \"original definition at %s:%d\"),\n-\t\t     name, source_fullname, line, found_key_fullname,\n+\t\t     name, source_fullname.c_str (), line,\n+\t\t     found_key_fullname.c_str (),\n \t\t     found_key->start_line);\n-\t  xfree (found_key_fullname);\n-\t  xfree (source_fullname);\n         }\n \n       return found_key;\n@@ -854,16 +849,13 @@ macro_undef (struct macro_source_file *source, int line,\n              #definition.  */\n           if (key->end_file)\n             {\n-\t      char *source_fullname, *key_fullname;\n-\n-\t      source_fullname = macro_source_fullname (source);\n-\t      key_fullname = macro_source_fullname (key->end_file);\n+\t      std::string source_fullname = macro_source_fullname (source);\n+\t      std::string key_fullname = macro_source_fullname (key->end_file);\n               complaint (_(\"macro '%s' is #undefined twice,\"\n                            \" at %s:%d and %s:%d\"),\n-\t\t\t name, source_fullname, line, key_fullname,\n+\t\t\t name, source_fullname.c_str (), line,\n+\t\t\t key_fullname.c_str (),\n \t\t\t key->end_line);\n-\t      xfree (key_fullname);\n-\t      xfree (source_fullname);\n             }\n \n           /* Whether or not we've seen a prior #undefinition, wipe out\n@@ -923,14 +915,9 @@ macro_lookup_definition (struct macro_source_file *source,\n \n   if (n)\n     {\n-      struct macro_definition *retval;\n-      char *source_fullname;\n-\n-      source_fullname = macro_source_fullname (source);\n-      retval = fixup_definition (source_fullname, line,\n-\t\t\t\t (struct macro_definition *) n->value);\n-      xfree (source_fullname);\n-      return retval;\n+      std::string source_fullname = macro_source_fullname (source);\n+      return fixup_definition (source_fullname.c_str (), line,\n+\t\t\t       (struct macro_definition *) n->value);\n     }\n   else\n     return 0;\n@@ -974,12 +961,10 @@ foreach_macro (splay_tree_node node, void *arg)\n   struct macro_for_each_data *datum = (struct macro_for_each_data *) arg;\n   struct macro_key *key = (struct macro_key *) node->key;\n   struct macro_definition *def;\n-  char *key_fullname;\n \n-  key_fullname = macro_source_fullname (key->start_file);\n-  def = fixup_definition (key_fullname, key->start_line,\n+  std::string key_fullname = macro_source_fullname (key->start_file);\n+  def = fixup_definition (key_fullname.c_str (), key->start_line,\n \t\t\t  (struct macro_definition *) node->value);\n-  xfree (key_fullname);\n \n   datum->fn (key->name, def, key->start_file, key->start_line);\n   return 0;\n@@ -1004,12 +989,10 @@ foreach_macro_in_scope (splay_tree_node node, void *info)\n   struct macro_for_each_data *datum = (struct macro_for_each_data *) info;\n   struct macro_key *key = (struct macro_key *) node->key;\n   struct macro_definition *def;\n-  char *datum_fullname;\n \n-  datum_fullname = macro_source_fullname (datum->file);\n-  def = fixup_definition (datum_fullname, datum->line,\n+  std::string datum_fullname = macro_source_fullname (datum->file);\n+  def = fixup_definition (datum_fullname.c_str (), datum->line,\n \t\t\t  (struct macro_definition *) node->value);\n-  xfree (datum_fullname);\n \n   /* See if this macro is defined before the passed-in line, and\n      extends past that line.  */\n@@ -1083,7 +1066,7 @@ free_macro_table (struct macro_table *table)\n \n /* See macrotab.h for the comment.  */\n \n-char *\n+std::string\n macro_source_fullname (struct macro_source_file *file)\n {\n   const char *comp_dir = NULL;\n@@ -1092,7 +1075,7 @@ macro_source_fullname (struct macro_source_file *file)\n     comp_dir = COMPUNIT_DIRNAME (file->table->compunit_symtab);\n \n   if (comp_dir == NULL || IS_ABSOLUTE_PATH (file->filename))\n-    return xstrdup (file->filename);\n+    return file->filename;\n \n-  return concat (comp_dir, SLASH_STRING, file->filename, (char *) NULL);\n+  return std::string (comp_dir) + SLASH_STRING + file->filename;\n }"
    },
    {
      "sha": "d1e14537bd3f4200aadfabdb600935d7edcef2d6",
      "filename": "gdb/macrotab.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/macrotab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9409233b0ec8a052eacc5846ee054f224f7e7213/gdb/macrotab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macrotab.h?ref=9409233b0ec8a052eacc5846ee054f224f7e7213",
      "patch": "@@ -351,12 +351,11 @@ void macro_for_each_in_scope (struct macro_source_file *file, int line,\n \n /* Return FILE->filename with possibly prepended compilation directory name.\n    This is raw concatenation without the \"set substitute-path\" and gdb_realpath\n-   applications done by symtab_to_fullname.  Returned string must be freed by\n-   xfree.\n+   applications done by symtab_to_fullname.\n \n    THis function ignores the \"set filename-display\" setting.  Its default\n    setting is \"relative\" which is backward compatible but the former behavior\n    of macro filenames printing was \"absolute\".  */\n-extern char *macro_source_fullname (struct macro_source_file *file);\n+extern std::string macro_source_fullname (struct macro_source_file *file);\n \n #endif /* MACROTAB_H */"
    }
  ]
}