{
  "sha": "b88e456f7e3e6d8c354da57d3e77a98575070ee8",
  "node_id": "C_kwDOANOeidoAKGI4OGU0NTZmN2UzZTZkOGMzNTRkYTU3ZDNlNzdhOTg1NzUwNzBlZTg",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-29T12:11:08Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-29T12:11:08Z"
    },
    "message": "[gdb/build] Fix build with --disable-unit-tests\n\nA build with --disable-unit-tests currently run into:\n...\nld: maint.o: in function \\\n  `maintenance_selftest_completer(cmd_list_element*, completion_tracker&,\n                                  char const*, char const*)':\nsrc/gdb/maint.c:1183: undefined reference to \\\n  `selftests::for_each_selftest(\n    gdb::function_view<\n      void (std::__cxx11::basic_string<char,std::char_traits<char>,\n                                       std::allocator<char> > const&)>)'\n...\n\nFix this by guarding the call to selftests::for_each_selftest in\nmaintenance_selftest_completer with GDB_SELF_TEST, such that the \"-verbose\"\ncompletion still works.\n\nRebuild on x86_64-linux and ran gdb.gdb/unittest.exp.",
    "tree": {
      "sha": "ae039d8d59040b4948105511f21e612d143c3ee4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ae039d8d59040b4948105511f21e612d143c3ee4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b88e456f7e3e6d8c354da57d3e77a98575070ee8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b88e456f7e3e6d8c354da57d3e77a98575070ee8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b88e456f7e3e6d8c354da57d3e77a98575070ee8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b88e456f7e3e6d8c354da57d3e77a98575070ee8/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "91b7c7e522802371f07cf614e5e5b24c1911a6d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/91b7c7e522802371f07cf614e5e5b24c1911a6d8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/91b7c7e522802371f07cf614e5e5b24c1911a6d8"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 19,
    "deletions": 4
  },
  "files": [
    {
      "sha": "bcc71aab579f8b1bcd7161491856224c9aff66c2",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b88e456f7e3e6d8c354da57d3e77a98575070ee8/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b88e456f7e3e6d8c354da57d3e77a98575070ee8/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=b88e456f7e3e6d8c354da57d3e77a98575070ee8",
      "patch": "@@ -1180,11 +1180,13 @@ maintenance_selftest_completer (cmd_list_element *cmd,\n \t(tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_ERROR, grp))\n     return;\n \n+#if GDB_SELF_TEST\n   selftests::for_each_selftest ([&tracker, text] (const std::string &name)\n     {\n       if (startswith (name.c_str (), text))\n \ttracker.add_completion (make_unique_xstrdup (name.c_str ()));\n     });\n+#endif\n }\n \n static void"
    },
    {
      "sha": "bcb4bbd2a821ae7a177c6b2a0a386ec25cb7c2ac",
      "filename": "gdb/testsuite/gdb.gdb/unittest.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 4,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b88e456f7e3e6d8c354da57d3e77a98575070ee8/gdb/testsuite/gdb.gdb/unittest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b88e456f7e3e6d8c354da57d3e77a98575070ee8/gdb/testsuite/gdb.gdb/unittest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/unittest.exp?ref=b88e456f7e3e6d8c354da57d3e77a98575070ee8",
      "patch": "@@ -40,6 +40,7 @@ proc run_selftests { binfile } {\n \tclean_restart ${binfile}\n     }\n \n+    set enabled 1\n     set test \"maintenance selftest\"\n     gdb_test_multiple $test $test {\n \t-re \".*Running selftest \\[^\\n\\r\\]+\\.\" {\n@@ -57,23 +58,35 @@ proc run_selftests { binfile } {\n \t}\n \t-re \"Selftests have been disabled for this build.\\r\\n$gdb_prompt $\" {\n \t    unsupported $test\n+\t    set enabled 0\n \t}\n     }\n+\n+    return $enabled\n }\n \n # Test completion of command \"maintenance selftest\".\n \n proc_with_prefix test_completion {} {\n+    global self_tests_enabled\n+\n     clean_restart\n-    test_gdb_complete_tab_multiple \"maintenance selftest string_v\" \"\" \\\n-\t{string_vappendf string_view string_vprintf}\n-    test_gdb_complete_tab_unique \"maintenance selftest string_vie\" \"maintenance selftest string_view\" \" \"\n+\n+    if { $self_tests_enabled } {\n+\ttest_gdb_complete_tab_multiple \"maintenance selftest string_v\" \"\" \\\n+\t    {string_vappendf string_view string_vprintf}\n+\ttest_gdb_complete_tab_unique \"maintenance selftest string_vie\" \\\n+\t    \"maintenance selftest string_view\" \" \"\n+    } else {\n+\ttest_gdb_complete_tab_none \"maintenance selftest string_v\"\n+\ttest_gdb_complete_tab_none \"maintenance selftest string_vie\"\n+    }\n     test_gdb_complete_tab_unique \"maintenance selftest -ver\" \"maintenance selftest -verbose\" \" \"\n     test_gdb_complete_tab_none \"maintenance selftest name_that_does_not_exist\"\n }\n \n with_test_prefix \"no executable loaded\" {\n-    run_selftests \"\"\n+    set self_tests_enabled [run_selftests \"\"]\n }\n \n with_test_prefix \"executable loaded\" {"
    }
  ]
}