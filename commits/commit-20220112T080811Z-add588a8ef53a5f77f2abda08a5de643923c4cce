{
  "sha": "add588a8ef53a5f77f2abda08a5de643923c4cce",
  "node_id": "C_kwDOANOeidoAKGFkZDU4OGE4ZWY1M2E1Zjc3ZjJhYmRhMDhhNWRlNjQzOTIzYzRjY2U",
  "commit": {
    "author": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-11-16T13:02:16Z"
    },
    "committer": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2022-01-12T08:08:11Z"
    },
    "message": "gas: add visibility support for XCOFF\n\nXCOFF assembly defines the visibility using an additional argument\non several pseudo-ops: .globl, .weak, .extern and .comm.\nThis implies that .globl and .weak syntax is different than the\nusual GNU syntax. But we want to provide compatibility with AIX\nassembler, especially because GCC is generating the visibility\nusing this XCOFF syntax.\n\nPR 22085\n\nbfd/ChangeLog:\n\n        * coffcode.h (coff_write_object_contents): Change XCOFF header\n        vstamp field to 2.\n        * coffgen.c (coff_print_symbol): Increase the size for n_type.\n\ngas/ChangeLog:\n\n        * config/tc-ppc.c (ppc_xcoff_get_visibility): New function.\n        (ppc_globl): New function.\n        (ppc_weak): New function.\n        (ppc_comm): Add visibility field support.\n        (ppc_extern): Likewise.\n        * testsuite/gas/all/cofftag.d: Adjust to new n_type size\n        providing by objdump.\n        * testsuite/gas/ppc/test1xcoff32.d: Likewise.\n        * testsuite/gas/ppc/aix.exp: Add new tests.\n        * testsuite/gas/ppc/xcoff-visibility-1-32.d: New test.\n        * testsuite/gas/ppc/xcoff-visibility-1-64.d: New test.\n        * testsuite/gas/ppc/xcoff-visibility-1.s: New test.\n\ninclude/ChangeLog:\n\n        * coff/internal.h (SYM_V_INTERNAL, SYM_V_HIDDEN,\n        SYM_V_PROTECTED, SYM_V_EXPORTED, SYM_V_MASK): New defines.\n        * coff/xcoff.h (struct xcoff_link_hash_entry): Add visibility\n        field.\n\nld/ChangeLog:\n\n        * testsuite/ld-pe/pr19803.d: Adjust to new n_type size\n        providing by objdump.",
    "tree": {
      "sha": "f5b85c033c265d175ec30c4de2d7568ac9751f8e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f5b85c033c265d175ec30c4de2d7568ac9751f8e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/add588a8ef53a5f77f2abda08a5de643923c4cce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/add588a8ef53a5f77f2abda08a5de643923c4cce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/add588a8ef53a5f77f2abda08a5de643923c4cce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/add588a8ef53a5f77f2abda08a5de643923c4cce/comments",
  "author": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c4f5871457222f2c4a99e662dfa16b7c662f750a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4f5871457222f2c4a99e662dfa16b7c662f750a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c4f5871457222f2c4a99e662dfa16b7c662f750a"
    }
  ],
  "stats": {
    "total": 462,
    "additions": 423,
    "deletions": 39
  },
  "files": [
    {
      "sha": "31bd97542d0337ad9922ff2a4aaaa97484789f6b",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -3994,8 +3994,13 @@ coff_write_object_contents (bfd * abfd)\n #endif\n   }\n \n+#ifdef RS6000COFF_C\n+  /* XCOFF 32bit needs this to have new behaviour for n_type field.  */\n+  internal_a.vstamp = 2;\n+#else\n   /* FIXME: Does anybody ever set this to another value?  */\n   internal_a.vstamp = 0;\n+#endif\n \n   /* Now should write relocs, strings, syms.  */\n   obj_sym_filepos (abfd) = sym_base;\n@@ -4070,7 +4075,7 @@ coff_write_object_contents (bfd * abfd)\n       bfd_vma toc;\n       asection *loader_sec;\n \n-      internal_a.vstamp = 1;\n+      internal_a.vstamp = 2;\n \n       internal_a.o_snentry = xcoff_data (abfd)->snentry;\n       if (internal_a.o_snentry == 0)"
    },
    {
      "sha": "293fce2baf34952efd63479a4eb28f17ad6d1f69",
      "filename": "bfd/coffgen.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/bfd/coffgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/bfd/coffgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffgen.c?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -2185,7 +2185,7 @@ coff_print_symbol (bfd *abfd,\n \t\t    - (bfd_hostptr_t) root)\n \t\t   / sizeof (combined_entry_type));\n \n-\t  fprintf (file, \"(sec %2d)(fl 0x%02x)(ty %3x)(scl %3d) (nx %d) 0x\",\n+\t  fprintf (file, \"(sec %2d)(fl 0x%02x)(ty %4x)(scl %3d) (nx %d) 0x\",\n \t\t   combined->u.syment.n_scnum,\n \t\t   combined->u.syment.n_flags,\n \t\t   combined->u.syment.n_type,"
    },
    {
      "sha": "4a1d394b2069035b6c50d00de4a6614a6f25aeb2",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 152,
      "deletions": 4,
      "changes": 156,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -110,6 +110,7 @@ static void ppc_change_csect (symbolS *, offsetT);\n static void ppc_file (int);\n static void ppc_function (int);\n static void ppc_extern (int);\n+static void ppc_globl (int);\n static void ppc_lglobl (int);\n static void ppc_ref (int);\n static void ppc_section (int);\n@@ -119,6 +120,7 @@ static void ppc_rename (int);\n static void ppc_toc (int);\n static void ppc_xcoff_cons (int);\n static void ppc_vbyte (int);\n+static void ppc_weak (int);\n #endif\n \n #ifdef OBJ_ELF\n@@ -230,6 +232,7 @@ const pseudo_typeS md_pseudo_table[] =\n   { \"extern\",\tppc_extern,\t0 },\n   { \"file\",\tppc_file,\t0 },\n   { \"function\",\tppc_function,\t0 },\n+  { \"globl\",    ppc_globl,\t0 },\n   { \"lglobl\",\tppc_lglobl,\t0 },\n   { \"ref\",\tppc_ref,\t0 },\n   { \"rename\",\tppc_rename,\t0 },\n@@ -242,6 +245,7 @@ const pseudo_typeS md_pseudo_table[] =\n   { \"word\",\tppc_xcoff_cons,\t1 },\n   { \"short\",\tppc_xcoff_cons,\t1 },\n   { \"vbyte\",    ppc_vbyte,\t0 },\n+  { \"weak\",     ppc_weak,\t0 },\n #endif\n \n #ifdef OBJ_ELF\n@@ -4285,6 +4289,39 @@ ppc_byte (int ignore ATTRIBUTE_UNUSED)\n    to handle symbol suffixes for such symbols.  */\n static bool ppc_stab_symbol;\n \n+/* Retrieve the visiblity input for pseudo-ops having ones.  */\n+static unsigned short\n+ppc_xcoff_get_visibility (void) {\n+  SKIP_WHITESPACE();\n+\n+  if (startswith (input_line_pointer, \"exported\"))\n+    {\n+      input_line_pointer += 8;\n+      return SYM_V_EXPORTED;\n+    }\n+\n+  if (startswith (input_line_pointer, \"hidden\"))\n+    {\n+      input_line_pointer += 6;\n+      return SYM_V_HIDDEN;\n+    }\n+\n+  if (startswith (input_line_pointer, \"internal\"))\n+    {\n+      input_line_pointer += 8;\n+      return SYM_V_INTERNAL;\n+    }\n+\n+  if (startswith (input_line_pointer, \"protected\"))\n+    {\n+      input_line_pointer += 9;\n+      return SYM_V_PROTECTED;\n+    }\n+\n+  return 0;\n+}\n+\n+\n /* The .comm and .lcomm pseudo-ops for XCOFF.  XCOFF puts common\n    symbols in the .bss segment as though they were local common\n    symbols, and uses a different smclas.  The native Aix 4.3.3 assembler\n@@ -4305,6 +4342,7 @@ ppc_comm (int lcomm)\n   symbolS *lcomm_sym = NULL;\n   symbolS *sym;\n   char *pfrag;\n+  unsigned short visibility;\n   struct ppc_xcoff_section *section;\n \n   endc = get_symbol_name (&name);\n@@ -4341,6 +4379,19 @@ ppc_comm (int lcomm)\n \t      as_warn (_(\"ignoring bad alignment\"));\n \t      align = 2;\n \t    }\n+\n+\t  /* The fourth argument to .comm is the visibility.  */\n+\t  if (*input_line_pointer == ',')\n+\t    {\n+\t      input_line_pointer++;\n+\t      visibility = ppc_xcoff_get_visibility ();\n+\t      if (!visibility)\n+\t\t{\n+\t\t  as_bad (_(\"Unknown visibility field in .comm\"));\n+\t\t  ignore_rest_of_line ();\n+\t\t  return;\n+\t\t}\n+\t    }\n \t}\n     }\n   else\n@@ -4463,6 +4514,14 @@ ppc_comm (int lcomm)\n       symbol_get_frag (lcomm_sym)->fr_offset += size;\n     }\n \n+  if (!lcomm && visibility)\n+    {\n+      /* Add visibility to .comm symbol.  */\n+      coff_symbol_type *coffsym = coffsymbol (symbol_get_bfdsym (sym));\n+      coffsym->native->u.syment.n_type &= ~SYM_V_MASK;\n+      coffsym->native->u.syment.n_type |= visibility;\n+    }\n+\n   subseg_set (current_seg, current_subseg);\n \n   demand_empty_rest_of_line ();\n@@ -4842,13 +4901,102 @@ static void\n ppc_extern (int ignore ATTRIBUTE_UNUSED)\n {\n   char *name;\n-  char endc;\n+  symbolS *sym;\n \n-  endc = get_symbol_name (&name);\n+  if ((name = read_symbol_name ()) == NULL)\n+    return;\n \n-  (void) symbol_find_or_make (name);\n+  sym = symbol_find_or_make (name);\n \n-  (void) restore_line_pointer (endc);\n+  if (*input_line_pointer == ',')\n+    {\n+      unsigned short visibility;\n+      coff_symbol_type *coffsym = coffsymbol (symbol_get_bfdsym (sym));\n+\n+      input_line_pointer++;\n+      visibility = ppc_xcoff_get_visibility ();\n+      if (!visibility)\n+\t{\n+\t  as_bad (_(\"Unknown visibility field in .extern\"));\n+\t  ignore_rest_of_line ();\n+\t  return;\n+\t}\n+\n+      coffsym->native->u.syment.n_type &= ~SYM_V_MASK;\n+      coffsym->native->u.syment.n_type |= visibility;\n+    }\n+\n+  demand_empty_rest_of_line ();\n+}\n+\n+/* XCOFF semantic for .globl says that the second parameter is\n+   the symbol visibility.  */\n+\n+static void\n+ppc_globl (int ignore ATTRIBUTE_UNUSED)\n+{\n+  char *name;\n+  symbolS *sym;\n+\n+  if ((name = read_symbol_name ()) == NULL)\n+    return;\n+\n+  sym = symbol_find_or_make (name);\n+  S_SET_EXTERNAL (sym);\n+\n+  if (*input_line_pointer == ',')\n+    {\n+      unsigned short visibility;\n+      coff_symbol_type *coffsym = coffsymbol (symbol_get_bfdsym (sym));\n+\n+      input_line_pointer++;\n+      visibility = ppc_xcoff_get_visibility ();\n+      if (!visibility)\n+\t{\n+\t  as_bad (_(\"Unknown visibility field in .globl\"));\n+\t  ignore_rest_of_line ();\n+\t  return;\n+\t}\n+\n+      coffsym->native->u.syment.n_type &= ~SYM_V_MASK;\n+      coffsym->native->u.syment.n_type |= visibility;\n+    }\n+\n+  demand_empty_rest_of_line ();\n+}\n+\n+/* XCOFF semantic for .weak says that the second parameter is\n+   the symbol visibility.  */\n+\n+static void\n+ppc_weak (int ignore ATTRIBUTE_UNUSED)\n+{\n+  char *name;\n+  symbolS *sym;\n+\n+  if ((name = read_symbol_name ()) == NULL)\n+    return;\n+\n+  sym = symbol_find_or_make (name);\n+  S_SET_WEAK (sym);\n+\n+  if (*input_line_pointer == ',')\n+    {\n+      unsigned short visibility;\n+      coff_symbol_type *coffsym = coffsymbol (symbol_get_bfdsym (sym));\n+\n+      input_line_pointer++;\n+      visibility = ppc_xcoff_get_visibility ();\n+      if (!visibility)\n+\t{\n+\t  as_bad (_(\"Unknown visibility field in .weak\"));\n+\t  ignore_rest_of_line ();\n+\t  return;\n+\t}\n+\n+      coffsym->native->u.syment.n_type &= ~SYM_V_MASK;\n+      coffsym->native->u.syment.n_type |= visibility;\n+    }\n \n   demand_empty_rest_of_line ();\n }"
    },
    {
      "sha": "2d2a4ccfdb81a8eebea1866d8eef78e4bebc07c8",
      "filename": "gas/testsuite/gas/all/cofftag.d",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/all/cofftag.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/all/cofftag.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/cofftag.d?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -4,22 +4,22 @@\n .*:     file format .*\n \n SYMBOL TABLE:\n-\\[  0\\]\\(sec -2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 103\\) \\(nx 1\\) 0x0+0000 foo.c\n+\\[  0\\]\\(sec -2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 103\\) \\(nx 1\\) 0x0+0000 foo.c\n File \n-\\[  2\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   6\\) \\(nx 0\\) 0x0+0000 gcc2_compiled.\n-\\[  3\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   6\\) \\(nx 0\\) 0x0+0000 ___gnu_compiled_c\n-\\[  4\\]\\(sec -2\\)\\(fl 0x00\\)\\(ty   a\\)\\(scl  15\\) \\(nx 1\\) 0x0+0000 _token\n+\\[  2\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   6\\) \\(nx 0\\) 0x0+0000 gcc2_compiled.\n+\\[  3\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   6\\) \\(nx 0\\) 0x0+0000 ___gnu_compiled_c\n+\\[  4\\]\\(sec -2\\)\\(fl 0x00\\)\\(ty    a\\)\\(scl  15\\) \\(nx 1\\) 0x0+0000 _token\n AUX lnno 0 size 0x4 tagndx 0 endndx 10\n-\\[  6\\]\\(sec -(1|2)\\)\\(fl 0x00\\)\\(ty   b\\)\\(scl  16\\) \\(nx 0\\) 0x0+0000 _operator\n-\\[  7\\]\\(sec -(1|2)\\)\\(fl 0x00\\)\\(ty   b\\)\\(scl  16\\) \\(nx 0\\) 0x0+0001 _flags\n-\\[  8\\]\\(sec -(1|2)\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 102\\) \\(nx 1\\) 0x0+0004 .eos\n+\\[  6\\]\\(sec -(1|2)\\)\\(fl 0x00\\)\\(ty    b\\)\\(scl  16\\) \\(nx 0\\) 0x0+0000 _operator\n+\\[  7\\]\\(sec -(1|2)\\)\\(fl 0x00\\)\\(ty    b\\)\\(scl  16\\) \\(nx 0\\) 0x0+0001 _flags\n+\\[  8\\]\\(sec -(1|2)\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 102\\) \\(nx 1\\) 0x0+0004 .eos\n AUX lnno 0 size 0x4 tagndx 4\n-\\[ 10\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   3\\) \\(nx 1\\) 0x[0-9a-f]+ .text\n+\\[ 10\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   3\\) \\(nx 1\\) 0x[0-9a-f]+ .text\n AUX scnlen 0x[0-9a-f]+ nreloc 0 nlnno 0\n-\\[ 12\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   3\\) \\(nx 1\\) 0x[0-9a-f]+ .data\n+\\[ 12\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   3\\) \\(nx 1\\) 0x[0-9a-f]+ .data\n AUX scnlen 0x[0-9a-f]+ nreloc 0 nlnno 0\n-\\[ 14\\]\\(sec  3\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   3\\) \\(nx 1\\) 0x[0-9a-f]+ .bss\n+\\[ 14\\]\\(sec  3\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   3\\) \\(nx 1\\) 0x[0-9a-f]+ .bss\n AUX scnlen 0x[0-9a-f]+ nreloc 0 nlnno 0\n-\\[ 16\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   2\\)\\(scl   2\\) \\(nx 0\\) 0x0+0000 _token\n-\\[ 17\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   a\\)\\(scl   2\\) \\(nx 1\\) 0x[0-9a-f]+ _what\n+\\[ 16\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    2\\)\\(scl   2\\) \\(nx 0\\) 0x0+0000 _token\n+\\[ 17\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    a\\)\\(scl   2\\) \\(nx 1\\) 0x[0-9a-f]+ _what\n AUX lnno 0 size 0x4 tagndx 4"
    },
    {
      "sha": "d74d5e864357177b4146f9c900ecc904a9eca8ee",
      "filename": "gas/testsuite/gas/ppc/aix.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/aix.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/aix.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/aix.exp?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -87,4 +87,7 @@ if { [istarget \"powerpc*-*-aix*\"] || [istarget \"rs6000-*-aix*\"] } then {\n \n     run_dump_test \"xcoff-file-32\"\n     run_dump_test \"xcoff-file-64\"\n+\n+    run_dump_test \"xcoff-visibility-1-32\"\n+    run_dump_test \"xcoff-visibility-1-64\"\n }"
    },
    {
      "sha": "a0e48dee5d0f5729518b83e1d150153aad216d93",
      "filename": "gas/testsuite/gas/ppc/test1xcoff32.d",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/test1xcoff32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/test1xcoff32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/test1xcoff32.d?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -17,45 +17,45 @@ Idx Name +Size +VMA +LMA +File off +Algn\n   2 \\.bss  +00000000  0+0090  0+0090  00000000  2\\*\\*3\n  +ALLOC\n SYMBOL TABLE:\n-\\[  0\\]\\(sec -2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 103\\) \\(nx 1\\) 0x00000000 fake\n+\\[  0\\]\\(sec -2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 103\\) \\(nx 1\\) 0x00000000 fake\n File \n-\\[  2\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000000 \\.crazy_table\n+\\[  2\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000000 \\.crazy_table\n AUX val     8 prmhsh 0 snhsh 0 typ 1 algn 2 clss 1 stb 0 snstb 0\n-\\[  4\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000008 \n+\\[  4\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000008 \n AUX val    96 prmhsh 0 snhsh 0 typ 1 algn 2 clss 0 stb 0 snstb 0\n-\\[  6\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000008 reference_csect_relative_symbols\n+\\[  6\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000008 reference_csect_relative_symbols\n AUX indx    4 prmhsh 0 snhsh 0 typ 2 algn 0 clss 0 stb 0 snstb 0\n-\\[  8\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000018 dubious_references_to_default_RW_csect\n+\\[  8\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000018 dubious_references_to_default_RW_csect\n AUX indx    4 prmhsh 0 snhsh 0 typ 2 algn 0 clss 0 stb 0 snstb 0\n-\\[ 10\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000028 reference_via_toc\n+\\[ 10\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000028 reference_via_toc\n AUX indx    4 prmhsh 0 snhsh 0 typ 2 algn 0 clss 0 stb 0 snstb 0\n-\\[ 12\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000040 subtract_symbols\n+\\[ 12\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000040 subtract_symbols\n AUX indx    4 prmhsh 0 snhsh 0 typ 2 algn 0 clss 0 stb 0 snstb 0\n-\\[ 14\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x0000005c load_addresses\n+\\[ 14\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x0000005c load_addresses\n AUX indx    4 prmhsh 0 snhsh 0 typ 2 algn 0 clss 0 stb 0 snstb 0\n-\\[ 16\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000068 \n+\\[ 16\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000068 \n AUX val    12 prmhsh 0 snhsh 0 typ 1 algn 2 clss 5 stb 0 snstb 0\n-\\[ 18\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000074 TOC\n+\\[ 18\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000074 TOC\n AUX val     0 prmhsh 0 snhsh 0 typ 1 algn 2 clss 15 stb 0 snstb 0\n-\\[ 20\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000074 ignored0\n+\\[ 20\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000074 ignored0\n AUX val     4 prmhsh 0 snhsh 0 typ 1 algn 2 clss 3 stb 0 snstb 0\n-\\[ 22\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000078 ignored1\n+\\[ 22\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000078 ignored1\n AUX val     4 prmhsh 0 snhsh 0 typ 1 algn 2 clss 3 stb 0 snstb 0\n-\\[ 24\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x0000007c ignored2\n+\\[ 24\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x0000007c ignored2\n AUX val     4 prmhsh 0 snhsh 0 typ 1 algn 2 clss 3 stb 0 snstb 0\n-\\[ 26\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000080 ignored3\n+\\[ 26\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000080 ignored3\n AUX val     4 prmhsh 0 snhsh 0 typ 1 algn 2 clss 3 stb 0 snstb 0\n-\\[ 28\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000084 ignored4\n+\\[ 28\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000084 ignored4\n AUX val     4 prmhsh 0 snhsh 0 typ 1 algn 2 clss 3 stb 0 snstb 0\n-\\[ 30\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x00000088 ignored5\n+\\[ 30\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x00000088 ignored5\n AUX val     4 prmhsh 0 snhsh 0 typ 1 algn 2 clss 3 stb 0 snstb 0\n-\\[ 32\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl 107\\) \\(nx 1\\) 0x0000008c ignored6\n+\\[ 32\\]\\(sec  2\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl 107\\) \\(nx 1\\) 0x0000008c ignored6\n AUX val     4 prmhsh 0 snhsh 0 typ 1 algn 2 clss 3 stb 0 snstb 0\n-\\[ 34\\]\\(sec  0\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   2\\) \\(nx 1\\) 0x00000000 esym0\n+\\[ 34\\]\\(sec  0\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   2\\) \\(nx 1\\) 0x00000000 esym0\n AUX val     0 prmhsh 0 snhsh 0 typ 0 algn 0 clss 0 stb 0 snstb 0\n-\\[ 36\\]\\(sec  0\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   2\\) \\(nx 1\\) 0x00000000 esym1\n+\\[ 36\\]\\(sec  0\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   2\\) \\(nx 1\\) 0x00000000 esym1\n AUX val     0 prmhsh 0 snhsh 0 typ 0 algn 0 clss 0 stb 0 snstb 0\n-\\[ 38\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   3\\) \\(nx 1\\) 0x00000000 \\.text\n+\\[ 38\\]\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   3\\) \\(nx 1\\) 0x00000000 \\.text\n AUX scnlen 0x68 nreloc 7 nlnno 0\n \n "
    },
    {
      "sha": "f3d00eb6f24d41d2f1ea52927752ce04db6afa6a",
      "filename": "gas/testsuite/gas/ppc/xcoff-visibility-1-32.d",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/xcoff-visibility-1-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/xcoff-visibility-1-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-visibility-1-32.d?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -0,0 +1,70 @@\n+#as: -a32\n+#source: xcoff-visibility-1.s\n+#objdump: -t\n+#name: XCOFF Visibility 1 (32 bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\n+.*\n+.*\n+.*\n+\\[  4\\].*\\(ty    0\\).*l_novisibility\n+.*\n+\\[  6\\].*\\(ty 1000\\).*l_internal\n+.*\n+\\[  8\\].*\\(ty 2000\\).*l_hidden\n+.*\n+\\[ 10\\].*\\(ty 3000\\).*l_protected\n+.*\n+\\[ 12\\].*\\(ty 4000\\).*l_exported\n+.*\n+\\[ 14\\].*\\(ty 1000\\).*l_dual\n+.*\n+\\[ 16\\].*\\(ty    0\\).*globl_novisibility\n+.*\n+\\[ 18\\].*\\(ty 1000\\).*globl_internal\n+.*\n+\\[ 20\\].*\\(ty 2000\\).*globl_hidden\n+.*\n+\\[ 22\\].*\\(ty 3000\\).*globl_protected\n+.*\n+\\[ 24\\].*\\(ty 4000\\).*globl_exported\n+.*\n+\\[ 26\\].*\\(ty 1000\\).*globl_dual\n+.*\n+\\[ 28\\].*\\(ty    0\\).*weak_novisibility\n+.*\n+\\[ 30\\].*\\(ty 1000\\).*weak_internal\n+.*\n+\\[ 32\\].*\\(ty 2000\\).*weak_hidden\n+.*\n+\\[ 34\\].*\\(ty 3000\\).*weak_protected\n+.*\n+\\[ 36\\].*\\(ty 4000\\).*weak_exported\n+.*\n+\\[ 38\\].*\\(ty 1000\\).*weak_dual\n+.*\n+\\[ 40\\].*\\(ty    0\\).*comm_novisibility\n+.*\n+\\[ 42\\].*\\(ty 1000\\).*comm_internal\n+.*\n+\\[ 44\\].*\\(ty 2000\\).*comm_hidden\n+.*\n+\\[ 46\\].*\\(ty 3000\\).*comm_protected\n+.*\n+\\[ 48\\].*\\(ty 4000\\).*comm_exported\n+.*\n+\\[ 50\\].*\\(ty    0\\).*extern_novisibility\n+.*\n+\\[ 52\\].*\\(ty 1000\\).*extern_internal\n+.*\n+\\[ 54\\].*\\(ty 2000\\).*extern_hidden\n+.*\n+\\[ 56\\].*\\(ty 3000\\).*extern_protected\n+.*\n+\\[ 58\\].*\\(ty 4000\\).*extern_exported\n+.*\n+\\[ 60\\].*\\(ty 1000\\).*extern_dual\n+.*"
    },
    {
      "sha": "fd686e10d932d02bd942e9bbc19a82cc18fdd5ff",
      "filename": "gas/testsuite/gas/ppc/xcoff-visibility-1-64.d",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/xcoff-visibility-1-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/xcoff-visibility-1-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-visibility-1-64.d?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -0,0 +1,70 @@\n+#as: -a64\n+#source: xcoff-visibility-1.s\n+#objdump: -t\n+#name: XCOFF Visibility 1 (64 bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\n+.*\n+.*\n+.*\n+\\[  4\\].*\\(ty    0\\).*l_novisibility\n+.*\n+\\[  6\\].*\\(ty 1000\\).*l_internal\n+.*\n+\\[  8\\].*\\(ty 2000\\).*l_hidden\n+.*\n+\\[ 10\\].*\\(ty 3000\\).*l_protected\n+.*\n+\\[ 12\\].*\\(ty 4000\\).*l_exported\n+.*\n+\\[ 14\\].*\\(ty 1000\\).*l_dual\n+.*\n+\\[ 16\\].*\\(ty    0\\).*globl_novisibility\n+.*\n+\\[ 18\\].*\\(ty 1000\\).*globl_internal\n+.*\n+\\[ 20\\].*\\(ty 2000\\).*globl_hidden\n+.*\n+\\[ 22\\].*\\(ty 3000\\).*globl_protected\n+.*\n+\\[ 24\\].*\\(ty 4000\\).*globl_exported\n+.*\n+\\[ 26\\].*\\(ty 1000\\).*globl_dual\n+.*\n+\\[ 28\\].*\\(ty    0\\).*weak_novisibility\n+.*\n+\\[ 30\\].*\\(ty 1000\\).*weak_internal\n+.*\n+\\[ 32\\].*\\(ty 2000\\).*weak_hidden\n+.*\n+\\[ 34\\].*\\(ty 3000\\).*weak_protected\n+.*\n+\\[ 36\\].*\\(ty 4000\\).*weak_exported\n+.*\n+\\[ 38\\].*\\(ty 1000\\).*weak_dual\n+.*\n+\\[ 40\\].*\\(ty    0\\).*comm_novisibility\n+.*\n+\\[ 42\\].*\\(ty 1000\\).*comm_internal\n+.*\n+\\[ 44\\].*\\(ty 2000\\).*comm_hidden\n+.*\n+\\[ 46\\].*\\(ty 3000\\).*comm_protected\n+.*\n+\\[ 48\\].*\\(ty 4000\\).*comm_exported\n+.*\n+\\[ 50\\].*\\(ty    0\\).*extern_novisibility\n+.*\n+\\[ 52\\].*\\(ty 1000\\).*extern_internal\n+.*\n+\\[ 54\\].*\\(ty 2000\\).*extern_hidden\n+.*\n+\\[ 56\\].*\\(ty 3000\\).*extern_protected\n+.*\n+\\[ 58\\].*\\(ty 4000\\).*extern_exported\n+.*\n+\\[ 60\\].*\\(ty 1000\\).*extern_dual\n+.*"
    },
    {
      "sha": "995c5e51f3f1603991c301ccef4b7c84d4fe6ed7",
      "filename": "gas/testsuite/gas/ppc/xcoff-visibility-1.s",
      "status": "added",
      "additions": 78,
      "deletions": 0,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/xcoff-visibility-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/gas/testsuite/gas/ppc/xcoff-visibility-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-visibility-1.s?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -0,0 +1,78 @@\n+# Tests every possible visibility using XCOFF format.\n+# Ensure that the visibility field is left empty if no\n+# visibility is provided.\n+# Ensure that only the last visibility is taken into\n+# account when several are provided.\n+\n+# Csect visibility\n+  .globl globl_novisibility[RW]\n+  .csect globl_novisibility[RW]\n+  .globl globl_internal[RW], internal\n+  .csect globl_internal[RW]\n+  .globl globl_hidden[RW], hidden\n+  .csect globl_hidden[RW]\n+  .globl globl_protected[RW], protected\n+  .csect globl_protected[RW]\n+  .globl globl_exported[RW], exported\n+  .csect globl_exported[RW]\n+  .globl globl_dual[RW], exported\n+  .globl globl_dual[RW], internal\n+  .csect globl_dual[RW]\n+\n+# Weak csect visibility\n+  .weak weak_novisibility[RW]\n+  .csect weak_novisibility[RW]\n+  .weak weak_internal[RW], internal\n+  .csect weak_internal[RW]\n+  .weak weak_hidden[RW], hidden\n+  .csect weak_hidden[RW]\n+  .weak weak_protected[RW], protected\n+  .csect weak_protected[RW]\n+  .weak weak_exported[RW], exported\n+  .csect weak_exported[RW]\n+  .weak weak_dual[RW], exported\n+  .weak weak_dual[RW], internal\n+  .csect weak_dual[RW]\n+\n+# Comm visibility\n+  .comm comm_novisibility[RW], 8, 4\n+  .comm comm_internal[RW], 8, 4, internal\n+  .comm comm_hidden[RW], 8, 4, hidden\n+  .comm comm_protected[RW], 8, 4, protected\n+  .comm comm_exported[RW], 8, 4, exported\n+\n+# Extern visibility\n+  .extern extern_novisibility[RW]\n+  .extern extern_internal[RW], internal\n+  .extern extern_hidden[RW], hidden\n+  .extern extern_protected[RW], protected\n+  .extern extern_exported[RW], exported\n+  .extern extern_dual[RW], exported\n+  .extern extern_dual[RW], internal\n+\n+# Label visibility\n+  .csect .text[PR]\n+  .globl l_novisibility\n+l_novisibility:\n+  blr\n+\n+  .globl l_internal, internal\n+l_internal:\n+  blr\n+\n+  .globl l_hidden, hidden\n+l_hidden:\n+  blr\n+\n+  .globl l_protected, protected\n+l_protected:\n+  blr\n+\n+  .globl l_exported, exported\n+l_exported:\n+  blr\n+\n+  .globl l_dual, exported\n+  .globl l_dual, internal\n+l_dual:\n+  blr"
    },
    {
      "sha": "f12908b0f6586771cac48ed0cf2cdea6c5bb3185",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -536,6 +536,13 @@ struct internal_syment\n #define DECREF(x) \\\n   ((((x) >> N_TSHIFT) & ~ N_BTMASK) | ((x) & N_BTMASK))\n \n+/* Visibility flag, in XCOFF n_type.  */\n+#define SYM_V_INTERNAL\t\t0x1000\n+#define SYM_V_HIDDEN\t\t0x2000\n+#define SYM_V_PROTECTED \t0x3000\n+#define SYM_V_EXPORTED\t\t0x4000\n+#define SYM_V_MASK\t\t0xF000\n+\n union internal_auxent\n {\n   struct"
    },
    {
      "sha": "acadf54d4a1adbe30d8fcbfbf21dabc81a22e144",
      "filename": "include/coff/xcoff.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/include/coff/xcoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/include/coff/xcoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/xcoff.h?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -349,6 +349,9 @@ struct xcoff_link_hash_entry\n   /* Some linker flags.  */\n   unsigned long flags;\n \n+  /* Symbol visibility, using the same define than n_type.  */\n+  unsigned short visibility;\n+\n   /* The storage mapping class.  */\n   unsigned char smclas;\n };"
    },
    {
      "sha": "1bd7958cf2426f0375e8549b68b3f9f662cd57b9",
      "filename": "ld/testsuite/ld-pe/pr19803.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/add588a8ef53a5f77f2abda08a5de643923c4cce/ld/testsuite/ld-pe/pr19803.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/add588a8ef53a5f77f2abda08a5de643923c4cce/ld/testsuite/ld-pe/pr19803.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pr19803.d?ref=add588a8ef53a5f77f2abda08a5de643923c4cce",
      "patch": "@@ -9,5 +9,5 @@\n # collection.\n \n #...\n-.*\\(sec  1\\)\\(fl 0x00\\)\\(ty   0\\)\\(scl   2\\) \\(nx 0\\) 0x0+000 .*Startup.*\n+.*\\(sec  1\\)\\(fl 0x00\\)\\(ty    0\\)\\(scl   2\\) \\(nx 0\\) 0x0+000 .*Startup.*\n #pass"
    }
  ]
}