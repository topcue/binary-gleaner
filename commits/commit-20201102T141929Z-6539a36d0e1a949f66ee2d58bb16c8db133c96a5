{
  "sha": "6539a36d0e1a949f66ee2d58bb16c8db133c96a5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjUzOWEzNmQwZTFhOTQ5ZjY2ZWUyZDU4YmIxNmM4ZGIxMzNjOTZhNQ==",
  "commit": {
    "author": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-11-02T14:19:29Z"
    },
    "committer": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-11-02T14:19:29Z"
    },
    "message": "Detect and report incompatible gdb_compile options\n\nIn commits 221db974e653659edb280787af1b3efdd1615083 and\n68d654afdfcff840ebb3ae432ed72dca0521d670, these patches:\n\n    2020-06-24  Pedro Alves  <palves@redhat.com>\n\n\t* lib/gdb.exp (gdb_compile): Pass \"-x c++\" explicitly when\n\tcompiling C++ programs.\n\n    2020-09-25  Gary Benson <gbenson@redhat.com>\n\n\t* lib/gdb.exp (gdb_compile): Pass \"-x c++\" earlier, and only\n\tfor .c files.\n\nattempted to fix problems with testcases that compile .c files\nusing the C++ compiler.  These patches cause gdb_compile to add\n\"-x c++\" to the compiler options when using Clang.  This fix does\nnot work for gdb.base/print-file-var.exp, however, which attempts\nto compile a .c input file to an executable linked with shared\nlibraries: the resulting command caused the compiler to attempt\nto parse the .so files as C++.  This commit causes gdb_compile\nto reject this combination of options.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (gdb_compile): Inhibit passing \"-x c++\"\n\tfor .c files compiled as C++ with Clang if any shared\n\tlibraries are specified.",
    "tree": {
      "sha": "3e4a8174d3156bf3d6443caf5261c861ba77aff3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e4a8174d3156bf3d6443caf5261c861ba77aff3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6539a36d0e1a949f66ee2d58bb16c8db133c96a5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6539a36d0e1a949f66ee2d58bb16c8db133c96a5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6539a36d0e1a949f66ee2d58bb16c8db133c96a5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6539a36d0e1a949f66ee2d58bb16c8db133c96a5/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "7ea44a51faeb81644eeb14f06db15cfb4a65d59e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ea44a51faeb81644eeb14f06db15cfb4a65d59e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7ea44a51faeb81644eeb14f06db15cfb4a65d59e"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 20,
    "deletions": 3
  },
  "files": [
    {
      "sha": "330a5eb79ee0163fa104446cab31ef5452e72bfe",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6539a36d0e1a949f66ee2d58bb16c8db133c96a5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6539a36d0e1a949f66ee2d58bb16c8db133c96a5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6539a36d0e1a949f66ee2d58bb16c8db133c96a5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-02  Gary Benson <gbenson@redhat.com>\n+\n+\t* lib/gdb.exp (gdb_compile): Inhibit passing \"-x c++\"\n+\tfor .c files compiled as C++ with Clang if any shared\n+\tlibraries are specified.\n+\n 2020-11-02  Gary Benson <gbenson@redhat.com>\n \n \t* lib/attributes.h: New header."
    },
    {
      "sha": "6c98ae0729b3928376438ed6aa5aa36be34c7df0",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 3,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6539a36d0e1a949f66ee2d58bb16c8db133c96a5/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6539a36d0e1a949f66ee2d58bb16c8db133c96a5/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=6539a36d0e1a949f66ee2d58bb16c8db133c96a5",
      "patch": "@@ -3960,9 +3960,20 @@ proc gdb_compile {source dest type options} {\n     # explicitly force C++ language.\n     if { [lsearch -exact $options getting_compiler_info] == -1\n \t && [lsearch -exact $options c++] != -1\n-\t && [string match *.c $source] != 0\n-\t && [test_compiler_info \"clang-*\"] } {\n-\tlappend new_options early_flags=-x\\ c++\n+\t && [string match *.c $source] != 0 } {\n+\n+\t# gdb_compile cannot handle this combination of options, the\n+\t# result is a command like \"clang -x c++ foo.c bar.so -o baz\"\n+\t# which tells Clang to treat bar.so as C++.  The solution is\n+\t# to call gdb_compile twice--once to compile, once to link--\n+\t# either directly, or via build_executable_from_specs.\n+\tif { [lsearch $options shlib=*] != -1 } {\n+\t    error \"incompatible gdb_compile options\"\n+\t}\n+\n+\tif {[test_compiler_info \"clang-*\"]} {\n+\t    lappend new_options early_flags=-x\\ c++\n+\t}\n     }\n \n     # Place (and look for) Fortran `.mod` files in the output"
    }
  ]
}