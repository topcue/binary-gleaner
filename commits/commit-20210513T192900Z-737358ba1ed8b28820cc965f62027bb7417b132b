{
  "sha": "737358ba1ed8b28820cc965f62027bb7417b132b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzM3MzU4YmExZWQ4YjI4ODIwY2M5NjVmNjIwMjdiYjc0MTdiMTMyYg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-05-13T19:28:42Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-13T19:29:00Z"
    },
    "message": "gdb: maybe unpush target from old inferior in inf_child_target::follow_exec\n\nI realized that with \"follow-exec-mode == new\", the process target\nstayed pushed in the original inferior.  This can cause a small\nincoherence:\n\n    $ ./gdb -q -nx --data-directory=data-directory -ex \"set follow-exec-mode new\" --args execer args-for-execer\n    Reading symbols from execer...\n    (gdb) r\n    Starting program: /home/smarchi/build/binutils-gdb/gdb/execer args-for-execer\n    I am execer and my argv[1] is: args-for-execer\n    process 3562426 is executing new program: /home/smarchi/build/binutils-gdb/gdb/execee\n    [New inferior 2]\n    [New process 3562426]\n    I am execee and my argv[1] is: arg-for-execee\n    [Inferior 2 (process 3562426) exited normally]\n    (gdb) info inferiors\n      Num  Description       Connection           Executable\n      1    <null>            1 (native)           /home/smarchi/build/binutils-gdb/gdb/execer\n    * 2    <null>                                 /home/smarchi/build/binutils-gdb/gdb/execee\n    (gdb) maintenance print target-stack\n    The current target stack is:\n      - exec (Local exec file)\n      - None (None)\n    (gdb) inferior 1\n    [Switching to inferior 1 [<null>] (/home/smarchi/build/binutils-gdb/gdb/execer)]\n    (gdb) maintenance print target-stack\n    The current target stack is:\n      - native (Native process)\n      - exec (Local exec file)\n      - None (None)\n\nOn exec, when execution continues into inferior 2, the native target\nisn't unpushed from inferior 1.  When inferior 2's execution finishes\nnormally, inf_child_target::mourn_inferior unpushes the native target,\nbecause the native target has been implicitly opened.\n\nI think that if the native target was implicitly opened, it should be\nunpushed from inferior 1, just like it is unpushed from an inferior\nwhose execution terminate.  This patch implements that.\n\ngdb/ChangeLog:\n\n\t* inf-child.h (inf_child_target) <follow_exec>: New.\n\t* inf-child.c (inf_child_target::follow_exec): New.\n\nChange-Id: I782cc08d73d93a990f4e53611107f68b2cb58af1",
    "tree": {
      "sha": "0f9448334b0cb9a06c42de6b561f30fc7224e5a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f9448334b0cb9a06c42de6b561f30fc7224e5a0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/737358ba1ed8b28820cc965f62027bb7417b132b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/737358ba1ed8b28820cc965f62027bb7417b132b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/737358ba1ed8b28820cc965f62027bb7417b132b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/737358ba1ed8b28820cc965f62027bb7417b132b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "294c36eb6ac9eaf761ec300fd400623ed5175203",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/294c36eb6ac9eaf761ec300fd400623ed5175203",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/294c36eb6ac9eaf761ec300fd400623ed5175203"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 39,
    "deletions": 1
  },
  "files": [
    {
      "sha": "48a0e374729e81dff27e6fe6adf3435af3d71682",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=737358ba1ed8b28820cc965f62027bb7417b132b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-13  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* inf-child.h (inf_child_target) <follow_exec>: New.\n+\t* inf-child.c (inf_child_target::follow_exec): New.\n+\n 2021-05-13  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* target.h (struct target_ops) <follow_exec>: Add ptid_t"
    },
    {
      "sha": "f690aa77913f33d2a53c3ab577b6f1b743980e01",
      "filename": "gdb/inf-child.c",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/inf-child.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/inf-child.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-child.c?ref=737358ba1ed8b28820cc965f62027bb7417b132b",
      "patch": "@@ -409,6 +409,24 @@ inf_child_target::can_use_agent ()\n   return agent_loaded_p ();\n }\n \n+void\n+inf_child_target::follow_exec (inferior *follow_inf, ptid_t ptid,\n+\t\t\t       const char *execd_pathname)\n+{\n+  inferior *orig_inf = current_inferior ();\n+\n+  process_stratum_target::follow_exec (follow_inf, ptid, execd_pathname);\n+\n+  if (orig_inf != follow_inf)\n+    {\n+      /* If the target was implicitly push in the original inferior, unpush\n+         it.  */\n+      scoped_restore_current_thread restore_thread;\n+      switch_to_inferior_no_thread (orig_inf);\n+      maybe_unpush_target ();\n+    }\n+}\n+\n /* See inf-child.h.  */\n \n void"
    },
    {
      "sha": "aa33c5381381103e27cc0ea3f4517fe1239d8894",
      "filename": "gdb/inf-child.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/inf-child.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/inf-child.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-child.h?ref=737358ba1ed8b28820cc965f62027bb7417b132b",
      "patch": "@@ -57,6 +57,9 @@ class inf_child_target\n \n   void post_startup_inferior (ptid_t) override;\n \n+  void follow_exec (inferior *follow_inf, ptid_t ptid,\n+\t\t    const char *execd_pathname) override;\n+\n   void mourn_inferior () override;\n \n   bool can_run () override;"
    },
    {
      "sha": "9087c8baf2c4c10a42661d89ed76aaa78270686f",
      "filename": "gdb/testsuite/gdb.base/foll-exec-mode.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/testsuite/gdb.base/foll-exec-mode.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/737358ba1ed8b28820cc965f62027bb7417b132b/gdb/testsuite/gdb.base/foll-exec-mode.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/foll-exec-mode.exp?ref=737358ba1ed8b28820cc965f62027bb7417b132b",
      "patch": "@@ -113,6 +113,8 @@ proc do_follow_exec_mode_tests { mode cmd infswitch } {\n \t    return\n \t}\n \n+\tset target_is_native [gdb_is_target_native]\n+\n \t# Set the follow-exec mode.\n \t#\n \tgdb_test_no_output \"set follow-exec-mode $mode\"\n@@ -147,8 +149,18 @@ proc do_follow_exec_mode_tests { mode cmd infswitch } {\n \t#\n \tif {$mode == \"same\"} {\n \t    set expected_re \"\\\\* 1.*process.*\"\n+\t} elseif { $mode == \"new\" } {\n+\t    # If using the native target, we want to specifically check that the\n+\t    # process target, which was automatically pushed when running, was\n+\t    # automatically unpushed from inferior 1 on exec.  Use a\n+\t    # different regexp that verifies the Connection field is empty.\n+\t    if { $target_is_native } {\n+\t\tset expected_re \"  1.*<null> +[string_to_regexp $binfile].*\\r\\n\\\\* 2.*process.*$testfile2 .*\"\n+\t    } else {\n+\t\tset expected_re \"  1.*null.*$testfile.*\\r\\n\\\\* 2.*process.*$testfile2 .*\"\n+\t    }\n \t} else {\n-\t    set expected_re \"  1.*null.*$testfile.*\\r\\n\\\\* 2.*process.*$testfile2 .*\"\n+\t    error \"Invalid mode: $mode\"\n \t}\n \n \t# Check that the inferior list is correct:"
    }
  ]
}