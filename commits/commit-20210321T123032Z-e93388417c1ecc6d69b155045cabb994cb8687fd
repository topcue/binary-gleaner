{
  "sha": "e93388417c1ecc6d69b155045cabb994cb8687fd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTkzMzg4NDE3YzFlY2M2ZDY5YjE1NTA0NWNhYmI5OTRjYjg2ODdmZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-19T07:09:24Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-21T12:30:32Z"
    },
    "message": "Provide an inline startswith function in bfd.h\n\nbfd/\n\t* bfd-in.h (startswith): New inline.\n\t(CONST_STRNEQ): Use startswith.\n\t* bfd-in2.h: Regenerate.\ngdbsupport/\n\t* common-utils.h (startswith): Delete version now supplied by bfd.h.\nlibctf/\n\t* ctf-impl.h: Include string.h.",
    "tree": {
      "sha": "24fa2ed727efd5a1775e4c8b76b8d92a5ae0ea10",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/24fa2ed727efd5a1775e4c8b76b8d92a5ae0ea10"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e93388417c1ecc6d69b155045cabb994cb8687fd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e93388417c1ecc6d69b155045cabb994cb8687fd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e93388417c1ecc6d69b155045cabb994cb8687fd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e93388417c1ecc6d69b155045cabb994cb8687fd/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "38e41a88457d2fcab42596c5d0183e410868c813",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38e41a88457d2fcab42596c5d0183e410868c813",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/38e41a88457d2fcab42596c5d0183e410868c813"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 35,
    "deletions": 12
  },
  "files": [
    {
      "sha": "bb273426eb36e64ef71139659ae68563c6ee516b",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e93388417c1ecc6d69b155045cabb994cb8687fd/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e93388417c1ecc6d69b155045cabb994cb8687fd/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=e93388417c1ecc6d69b155045cabb994cb8687fd",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfd-in.h (startswith): New inline.\n+\t(CONST_STRNEQ): Use startswith.\n+\t* bfd-in2.h: Regenerate.\n+\n 2021-03-20  Alan Modra  <amodra@gmail.com>\n \n \tPR 27590"
    },
    {
      "sha": "453ac48e262e99110c1b62903d7c5a74b6cf94dd",
      "filename": "bfd/bfd-in.h",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e93388417c1ecc6d69b155045cabb994cb8687fd/bfd/bfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e93388417c1ecc6d69b155045cabb994cb8687fd/bfd/bfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in.h?ref=e93388417c1ecc6d69b155045cabb994cb8687fd",
      "patch": "@@ -65,7 +65,6 @@ extern \"C\" {\n    definition of strncmp is provided here.\n \n    Note - these macros do NOT work if STR2 is not a constant string.  */\n-#define CONST_STRNEQ(STR1,STR2) (strncmp ((STR1), (STR2), sizeof (STR2) - 1) == 0)\n   /* strcpy() can have a similar problem, but since we know we are\n      copying a constant string, we can use memcpy which will be faster\n      since there is no need to check for a NUL byte inside STR.  We\n@@ -564,3 +563,12 @@ struct ecoff_debug_swap;\n struct ecoff_extr;\n struct bfd_link_info;\n struct bfd_link_hash_entry;\n+\n+/* Return TRUE if the start of STR matches PREFIX, FALSE otherwise.  */\n+\n+static inline bfd_boolean\n+startswith (const char *str, const char *prefix)\n+{\n+  return strncmp (str, prefix, strlen (prefix)) == 0;\n+}\n+#define CONST_STRNEQ(STR1,STR2) startswith (STR1, STR2)"
    },
    {
      "sha": "c8bf687ba2db54c02daa1fe6d2deff33c965f0ea",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e93388417c1ecc6d69b155045cabb994cb8687fd/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e93388417c1ecc6d69b155045cabb994cb8687fd/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=e93388417c1ecc6d69b155045cabb994cb8687fd",
      "patch": "@@ -72,7 +72,6 @@ extern \"C\" {\n    definition of strncmp is provided here.\n \n    Note - these macros do NOT work if STR2 is not a constant string.  */\n-#define CONST_STRNEQ(STR1,STR2) (strncmp ((STR1), (STR2), sizeof (STR2) - 1) == 0)\n   /* strcpy() can have a similar problem, but since we know we are\n      copying a constant string, we can use memcpy which will be faster\n      since there is no need to check for a NUL byte inside STR.  We\n@@ -571,6 +570,15 @@ struct ecoff_debug_swap;\n struct ecoff_extr;\n struct bfd_link_info;\n struct bfd_link_hash_entry;\n+\n+/* Return TRUE if the start of STR matches PREFIX, FALSE otherwise.  */\n+\n+static inline bfd_boolean\n+startswith (const char *str, const char *prefix)\n+{\n+  return strncmp (str, prefix, strlen (prefix)) == 0;\n+}\n+#define CONST_STRNEQ(STR1,STR2) startswith (STR1, STR2)\n /* Extracted from init.c.  */\n unsigned int bfd_init (void);\n "
    },
    {
      "sha": "a838cfc999199b948a7862df33d1d31ee543f0b9",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e93388417c1ecc6d69b155045cabb994cb8687fd/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e93388417c1ecc6d69b155045cabb994cb8687fd/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=e93388417c1ecc6d69b155045cabb994cb8687fd",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* common-utils.h (startswith): Delete version now supplied by bfd.h.\n+\n 2021-02-05  Paul E. Murphy  <murphy@linux.ibm.com>\n \n \t* common-defs.h (ATTRIBUTE_PRINTF): Rename"
    },
    {
      "sha": "1de747f186d04d01dc3b4bc2865fff86a5bd59be",
      "filename": "gdbsupport/common-utils.h",
      "status": "modified",
      "additions": 2,
      "deletions": 10,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e93388417c1ecc6d69b155045cabb994cb8687fd/gdbsupport/common-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e93388417c1ecc6d69b155045cabb994cb8687fd/gdbsupport/common-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common-utils.h?ref=e93388417c1ecc6d69b155045cabb994cb8687fd",
      "patch": "@@ -116,16 +116,8 @@ std::string extract_string_maybe_quoted (const char **arg);\n \n extern const char *safe_strerror (int);\n \n-/* Return true if the start of STRING matches PATTERN, false otherwise.  */\n-\n-static inline bool\n-startswith (const char *string, const char *pattern)\n-{\n-  return strncmp (string, pattern, strlen (pattern)) == 0;\n-}\n-\n-/* Version of startswith that takes string_view arguments.  See comment\n-   above.  */\n+/* Version of startswith that takes string_view arguments.  Return\n+   true if the start of STRING matches PATTERN, false otherwise.  */\n \n static inline bool\n startswith (gdb::string_view string, gdb::string_view pattern)"
    },
    {
      "sha": "59f6fb042a0210df344a1d36e5f81b58543c7b75",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e93388417c1ecc6d69b155045cabb994cb8687fd/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e93388417c1ecc6d69b155045cabb994cb8687fd/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=e93388417c1ecc6d69b155045cabb994cb8687fd",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* ctf-impl.h: Include string.h.\n+\n 2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-types.c (ctf_type_encoding): Support, after a fashion, for enums."
    },
    {
      "sha": "342d2ff23e2d038c929311121aab67956d957bc9",
      "filename": "libctf/ctf-impl.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e93388417c1ecc6d69b155045cabb994cb8687fd/libctf/ctf-impl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e93388417c1ecc6d69b155045cabb994cb8687fd/libctf/ctf-impl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-impl.h?ref=e93388417c1ecc6d69b155045cabb994cb8687fd",
      "patch": "@@ -32,6 +32,7 @@\n #include <stddef.h>\n #include <stdio.h>\n #include <stdint.h>\n+#include <string.h>\n #include <limits.h>\n #include <ctype.h>\n #include <elf.h>"
    }
  ]
}