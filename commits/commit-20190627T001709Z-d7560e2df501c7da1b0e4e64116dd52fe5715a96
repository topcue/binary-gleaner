{
  "sha": "d7560e2df501c7da1b0e4e64116dd52fe5715a96",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDc1NjBlMmRmNTAxYzdkYTFiMGU0ZTY0MTE2ZGQ1MmZlNTcxNWE5Ng==",
  "commit": {
    "author": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2019-06-27T00:17:09Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2019-06-27T00:17:09Z"
    },
    "message": "RISC-V: Make objdump disassembly work right for binary files.\n\nWithout the ELF header to set info->endian, it ends up as BFD_UNKNOWN_ENDIAN\nwhich gets printed as big-endian.  But RISC-V instructions are always little\nendian, so we can set endian_code correctly, and then set display_endian from\nthat.  This is similar to how the aarch64 support works, but without the\nsupport for constant pools, as we don't have that on RISC-V.\n\n\topcodes/\n\tPR binutils/24739\n\t* riscv-dis.c (riscv_disasemble_insn): Set info->endian_code.\n\tSet info->display_endian to info->endian_code.",
    "tree": {
      "sha": "ffcd2ca790a3e0937d93ba4dbd9101dc46a5f247",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ffcd2ca790a3e0937d93ba4dbd9101dc46a5f247"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d7560e2df501c7da1b0e4e64116dd52fe5715a96",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7560e2df501c7da1b0e4e64116dd52fe5715a96",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d7560e2df501c7da1b0e4e64116dd52fe5715a96",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7560e2df501c7da1b0e4e64116dd52fe5715a96/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "696d5b3801a0e9d6514a92734bde09985f968a2f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/696d5b3801a0e9d6514a92734bde09985f968a2f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/696d5b3801a0e9d6514a92734bde09985f968a2f"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 12,
    "deletions": 2
  },
  "files": [
    {
      "sha": "d467c979a9faf8e998c57bad2197e3106c91640e",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7560e2df501c7da1b0e4e64116dd52fe5715a96/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7560e2df501c7da1b0e4e64116dd52fe5715a96/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=d7560e2df501c7da1b0e4e64116dd52fe5715a96",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-26  Jim Wilson  <jimw@sifive.com>\n+\n+\tPR binutils/24739\n+\t* riscv-dis.c (riscv_disasemble_insn): Set info->endian_code.\n+\tSet info->display_endian to info->endian_code.\n+\n 2019-06-25  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-gen.c (operand_type_init): Correct OPERAND_TYPE_DEBUG\n@@ -27,7 +33,7 @@\n \t* i386-dis.c (prefix_table): Use Edq for cvtsi2ss and cvtsi2sd.\n \tUse Gdq for cvttss2si, cvttsd2si, cvtss2si, and cvtsd2si, and\n \tmovnti.\n-\t* i386-opc.tbl (movnti): Add IgnoreSize. \n+\t* i386-opc.tbl (movnti): Add IgnoreSize.\n \t* i386-tbl.h: Re-generate.\n \n 2019-06-25  Jan Beulich  <jbeulich@suse.com>"
    },
    {
      "sha": "40893c3dcb013eef4f067a300af136e013a4ef6f",
      "filename": "opcodes/riscv-dis.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7560e2df501c7da1b0e4e64116dd52fe5715a96/opcodes/riscv-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7560e2df501c7da1b0e4e64116dd52fe5715a96/opcodes/riscv-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-dis.c?ref=d7560e2df501c7da1b0e4e64116dd52fe5715a96",
      "patch": "@@ -395,9 +395,13 @@ riscv_disassemble_insn (bfd_vma memaddr, insn_t word, disassemble_info *info)\n \n   insnlen = riscv_insn_length (word);\n \n+  /* RISC-V instructions are always little-endian.  */\n+  info->endian_code = BFD_ENDIAN_LITTLE;\n+\n   info->bytes_per_chunk = insnlen % 4 == 0 ? 4 : 2;\n   info->bytes_per_line = 8;\n-  info->display_endian = info->endian;\n+  /* We don't support constant pools, so this must be code.  */\n+  info->display_endian = info->endian_code;\n   info->insn_info_valid = 1;\n   info->branch_delay_insns = 0;\n   info->data_size = 0;"
    }
  ]
}