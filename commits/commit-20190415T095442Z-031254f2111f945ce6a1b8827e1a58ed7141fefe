{
  "sha": "031254f2111f945ce6a1b8827e1a58ed7141fefe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDMxMjU0ZjIxMTFmOTQ1Y2U2YTFiODgyN2UxYTU4ZWQ3MTQxZmVmZQ==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-04-15T09:54:42Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-04-15T09:54:42Z"
    },
    "message": "[binutils, ARM, 1/16] Add support for Armv8.1-M Mainline CLI\n\nThe patch is straightforward, it does the following:\n\n- support the new Tag_CPU_arch build attribute value, ie.:\n   + declare the new value\n   + update all the asserts forcing logic to be reviewed for new\n     architectures\n   + create a corresponding bfd_mach_arm_8_1M_MAIN enumerator in bfd and\n     add mapping from Tag_CPU_arch to it\n   + teach readelf about new Tag_CPU_arch value\n- declare armv8.1-m.main as a supported architecture value\n- define Armv8.1-M Mainline in terms of feature bits available\n- tell objdump mapping from bfd_mach_arm_8_1M_MAIN enumerator to feature\n   bits available\n- update architecture-specific logic in gas and bfd guarded by the\n   asserts mentioned above.\n- tests for all the above\n\nChangeLog entries are as follows:\n\n*** bfd/ChangeLog ***\n\n2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* archures.c (bfd_mach_arm_8_1M_MAIN): Define.\n\t* bfd-in2.h: Regenerate.\n\t* cpu-arm.c (arch_info_struct): Add entry for Armv8.1-M Mainline.\n\t* elf32-arm.c (using_thumb_only): Return true for Armv8.1-M Mainline\n\tand update assert.\n\t(using_thumb2): Likewise.\n\t(using_thumb2_bl): Update assert.\n\t(arch_has_arm_nop): Likewise.\n\t(bfd_arm_get_mach_from_attributes): Add case for Armv8.1-M Mainline.\n\t(tag_cpu_arch_combine): Add logic for Armv8.1-M Mainline merging.\n\n*** binutils/ChangeLog ***\n\n2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* readelf.c (arm_attr_tag_CPU_arch): Add entry for Armv8.1-M Mainline.\n\n*** gas/ChangeLog ***\n\n2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* config/tc-arm.c (cpu_arch_ver): Add entry for Armv8.1-M Mainline\n\tTag_CPU_arch build attribute value.  Reindent.\n\t(get_aeabi_cpu_arch_from_fset): Update assert.\n\t(aeabi_set_public_attributes): Update assert for Tag_DIV_use logic.\n\t* testsuite/gas/arm/attr-march-armv8_1-m.main.d: New test.\n\n*** include/ChangeLog ***\n\n2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* elf/arm.h (TAG_CPU_ARCH_V8_1M_MAIN): new macro.\n\t(MAX_TAG_CPU_ARCH): Set value to above macro.\n\t* opcode/arm.h (ARM_EXT2_V8_1M_MAIN): New macro.\n\t(ARM_AEXT_V8_1M_MAIN): Likewise.\n\t(ARM_AEXT2_V8_1M_MAIN): Likewise.\n\t(ARM_ARCH_V8_1M_MAIN): Likewise.\n\n*** ld/ChangeLog ***\n\n2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* testsuite/ld-arm/attr-merge-13.attr: New test.\n\t* testsuite/ld-arm/attr-merge-13a.s: New test.\n\t* testsuite/ld-arm/attr-merge-13b.s: New test.\n\n*** opcodes/ChangeLog ***\n\n2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* arm-dis.c (select_arm_features): Add logic for Armv8.1-M Mainline.",
    "tree": {
      "sha": "fb46a87cfb24602225e6ee42ef76764e305f1b6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fb46a87cfb24602225e6ee42ef76764e305f1b6f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/031254f2111f945ce6a1b8827e1a58ed7141fefe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/031254f2111f945ce6a1b8827e1a58ed7141fefe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/031254f2111f945ce6a1b8827e1a58ed7141fefe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/031254f2111f945ce6a1b8827e1a58ed7141fefe/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8669f96f0d1fee8eddc4cb56ba68125abfe61f56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8669f96f0d1fee8eddc4cb56ba68125abfe61f56",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8669f96f0d1fee8eddc4cb56ba68125abfe61f56"
    }
  ],
  "stats": {
    "total": 229,
    "additions": 176,
    "deletions": 53
  },
  "files": [
    {
      "sha": "d9d1e9b3067f9f5b66e692e57a246360997c852f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -1,3 +1,16 @@\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* archures.c (bfd_mach_arm_8_1M_MAIN): Define.\n+\t* bfd-in2.h: Regenerate.\n+\t* cpu-arm.c (arch_info_struct): Add entry for Armv8.1-M Mainline.\n+\t* elf32-arm.c (using_thumb_only): Return true for Armv8.1-M Mainline\n+\tand update assert.\n+\t(using_thumb2): Likewise.\n+\t(using_thumb2_bl): Update assert.\n+\t(arch_has_arm_nop): Likewise.\n+\t(bfd_arm_get_mach_from_attributes): Add case for Armv8.1-M Mainline.\n+\t(tag_cpu_arch_combine): Add logic for Armv8.1-M Mainline merging.\n+\n 2019-04-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* elf-linker-x86.h (elf_x86_cet_report): New."
    },
    {
      "sha": "aaf2e112cf9413aebd16484b0ab9fda87ea438c2",
      "filename": "bfd/archures.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/archures.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/archures.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archures.c?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -341,6 +341,7 @@ DESCRIPTION\n .#define bfd_mach_arm_8R        24\n .#define bfd_mach_arm_8M_BASE   25\n .#define bfd_mach_arm_8M_MAIN   26\n+.#define bfd_mach_arm_8_1M_MAIN 27\n .  bfd_arch_nds32,     {* Andes NDS32.  *}\n .#define bfd_mach_n1\t\t1\n .#define bfd_mach_n1h\t\t2"
    },
    {
      "sha": "4f63fe50e6bf8003fb25beec9e64927a672e444b",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -2274,6 +2274,7 @@ enum bfd_architecture\n #define bfd_mach_arm_8R        24\n #define bfd_mach_arm_8M_BASE   25\n #define bfd_mach_arm_8M_MAIN   26\n+#define bfd_mach_arm_8_1M_MAIN 27\n   bfd_arch_nds32,     /* Andes NDS32.  */\n #define bfd_mach_n1            1\n #define bfd_mach_n1h           2"
    },
    {
      "sha": "5a5da93cb4df61cc9bced426bb58622b5ef627c6",
      "filename": "bfd/cpu-arm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/cpu-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/cpu-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-arm.c?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -248,6 +248,7 @@ static const bfd_arch_info_type arch_info_struct[] =\n   N (bfd_mach_arm_8R,        \"armv8-r\",        FALSE, & arch_info_struct[24]),\n   N (bfd_mach_arm_8M_BASE,   \"armv8-m.base\",   FALSE, & arch_info_struct[25]),\n   N (bfd_mach_arm_8M_MAIN,   \"armv8-m.main\",   FALSE, & arch_info_struct[26]),\n+  N (bfd_mach_arm_8_1M_MAIN, \"armv8.1-m.main\", FALSE, & arch_info_struct[27]),\n   N (bfd_mach_arm_unknown,   \"arm_any\",        FALSE, NULL)\n };\n "
    },
    {
      "sha": "23bfbcb089aee4af88b971a2f0fb77de23b8c575",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 43,
      "deletions": 6,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -3835,13 +3835,14 @@ using_thumb_only (struct elf32_arm_link_hash_table *globals)\n   arch = bfd_elf_get_obj_attr_int (globals->obfd, OBJ_ATTR_PROC, Tag_CPU_arch);\n \n   /* Force return logic to be reviewed for each new architecture.  */\n-  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8M_MAIN);\n+  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8_1M_MAIN);\n \n   if (arch == TAG_CPU_ARCH_V6_M\n       || arch == TAG_CPU_ARCH_V6S_M\n       || arch == TAG_CPU_ARCH_V7E_M\n       || arch == TAG_CPU_ARCH_V8M_BASE\n-      || arch == TAG_CPU_ARCH_V8M_MAIN)\n+      || arch == TAG_CPU_ARCH_V8M_MAIN\n+      || arch == TAG_CPU_ARCH_V8_1M_MAIN)\n     return TRUE;\n \n   return FALSE;\n@@ -3862,14 +3863,15 @@ using_thumb2 (struct elf32_arm_link_hash_table *globals)\n   arch = bfd_elf_get_obj_attr_int (globals->obfd, OBJ_ATTR_PROC, Tag_CPU_arch);\n \n   /* Force return logic to be reviewed for each new architecture.  */\n-  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8M_MAIN);\n+  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8_1M_MAIN);\n \n   return (arch == TAG_CPU_ARCH_V6T2\n \t  || arch == TAG_CPU_ARCH_V7\n \t  || arch == TAG_CPU_ARCH_V7E_M\n \t  || arch == TAG_CPU_ARCH_V8\n \t  || arch == TAG_CPU_ARCH_V8R\n-\t  || arch == TAG_CPU_ARCH_V8M_MAIN);\n+\t  || arch == TAG_CPU_ARCH_V8M_MAIN\n+\t  || arch == TAG_CPU_ARCH_V8_1M_MAIN);\n }\n \n /* Determine whether Thumb-2 BL instruction is available.  */\n@@ -3881,7 +3883,7 @@ using_thumb2_bl (struct elf32_arm_link_hash_table *globals)\n     bfd_elf_get_obj_attr_int (globals->obfd, OBJ_ATTR_PROC, Tag_CPU_arch);\n \n   /* Force return logic to be reviewed for each new architecture.  */\n-  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8M_MAIN);\n+  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8_1M_MAIN);\n \n   /* Architecture was introduced after ARMv6T2 (eg. ARMv6-M).  */\n   return (arch == TAG_CPU_ARCH_V6T2\n@@ -4101,7 +4103,7 @@ arch_has_arm_nop (struct elf32_arm_link_hash_table *globals)\n \t\t\t\t\t     Tag_CPU_arch);\n \n   /* Force return logic to be reviewed for each new architecture.  */\n-  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8M_MAIN);\n+  BFD_ASSERT (arch <= TAG_CPU_ARCH_V8_1M_MAIN);\n \n   return (arch == TAG_CPU_ARCH_V6T2\n \t  || arch == TAG_CPU_ARCH_V6K\n@@ -13719,6 +13721,8 @@ bfd_arm_get_mach_from_attributes (bfd * abfd)\n \treturn bfd_mach_arm_8M_BASE;\n     case TAG_CPU_ARCH_V8M_MAIN:\n \treturn bfd_mach_arm_8M_MAIN;\n+    case TAG_CPU_ARCH_V8_1M_MAIN:\n+\treturn bfd_mach_arm_8_1M_MAIN;\n \n     default:\n       /* Force entry to be added for any new known Tag_CPU_arch value.  */\n@@ -14131,6 +14135,31 @@ tag_cpu_arch_combine (bfd *ibfd, int oldtag, int *secondary_compat_out,\n       T(V8M_MAIN),\t/* V8-M BASELINE.  */\n       T(V8M_MAIN)\t/* V8-M MAINLINE.  */\n     };\n+  const int v8_1m_mainline[] =\n+    {\n+      -1,\t\t/* PRE_V4.  */\n+      -1,\t\t/* V4.  */\n+      -1,\t\t/* V4T.  */\n+      -1,\t\t/* V5T.  */\n+      -1,\t\t/* V5TE.  */\n+      -1,\t\t/* V5TEJ.  */\n+      -1,\t\t/* V6.  */\n+      -1,\t\t/* V6KZ.  */\n+      -1,\t\t/* V6T2.  */\n+      -1,\t\t/* V6K.  */\n+      T(V8_1M_MAIN),\t/* V7.  */\n+      T(V8_1M_MAIN),\t/* V6_M.  */\n+      T(V8_1M_MAIN),\t/* V6S_M.  */\n+      T(V8_1M_MAIN),\t/* V7E_M.  */\n+      -1,\t\t/* V8.  */\n+      -1,\t\t/* V8R.  */\n+      T(V8_1M_MAIN),\t/* V8-M BASELINE.  */\n+      T(V8_1M_MAIN),\t/* V8-M MAINLINE.  */\n+      -1,\t\t/* Unused (18).  */\n+      -1,\t\t/* Unused (19).  */\n+      -1,\t\t/* Unused (20).  */\n+      T(V8_1M_MAIN)\t/* V8.1-M MAINLINE.  */\n+    };\n   const int v4t_plus_v6_m[] =\n     {\n       -1,\t\t/* PRE_V4.  */\n@@ -14151,6 +14180,10 @@ tag_cpu_arch_combine (bfd *ibfd, int oldtag, int *secondary_compat_out,\n       -1,\t\t/* V8R.  */\n       T(V8M_BASE),\t/* V8-M BASELINE.  */\n       T(V8M_MAIN),\t/* V8-M MAINLINE.  */\n+      -1,\t\t/* Unused (18).  */\n+      -1,\t\t/* Unused (19).  */\n+      -1,\t\t/* Unused (20).  */\n+      T(V8_1M_MAIN),\t/* V8.1-M MAINLINE.  */\n       T(V4T_PLUS_V6_M)\t/* V4T plus V6_M.  */\n     };\n   const int *comb[] =\n@@ -14165,6 +14198,10 @@ tag_cpu_arch_combine (bfd *ibfd, int oldtag, int *secondary_compat_out,\n       v8r,\n       v8m_baseline,\n       v8m_mainline,\n+      NULL,\n+      NULL,\n+      NULL,\n+      v8_1m_mainline,\n       /* Pseudo-architecture.  */\n       v4t_plus_v6_m\n     };"
    },
    {
      "sha": "ac547548f218d952c19facc79b89d4a55791aad0",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* readelf.c (arm_attr_tag_CPU_arch): Add entry for Armv8.1-M Mainline.\n+\n 2019-04-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* readelf.c (decode_x86_isa): Handle"
    },
    {
      "sha": "1ea4cef15896543b0b114bbd597136d335b8049d",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -14370,7 +14370,7 @@ typedef struct\n static const char * arm_attr_tag_CPU_arch[] =\n   {\"Pre-v4\", \"v4\", \"v4T\", \"v5T\", \"v5TE\", \"v5TEJ\", \"v6\", \"v6KZ\", \"v6T2\",\n    \"v6K\", \"v7\", \"v6-M\", \"v6S-M\", \"v7E-M\", \"v8\", \"v8-R\", \"v8-M.baseline\",\n-   \"v8-M.mainline\"};\n+   \"v8-M.mainline\", \"\", \"\", \"\", \"v8.1-M.mainline\"};\n static const char * arm_attr_tag_ARM_ISA_use[] = {\"No\", \"Yes\"};\n static const char * arm_attr_tag_THUMB_ISA_use[] =\n   {\"No\", \"Thumb-1\", \"Thumb-2\", \"Yes\"};"
    },
    {
      "sha": "bb30f841e99d104ff3655ab64f11c67dec50ac6a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -1,3 +1,11 @@\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/tc-arm.c (cpu_arch_ver): Add entry for Armv8.1-M Mainline\n+\tTag_CPU_arch build attribute value.  Reindent.\n+\t(get_aeabi_cpu_arch_from_fset): Update assert.\n+\t(aeabi_set_public_attributes): Update assert for Tag_DIV_use logic.\n+\t* testsuite/gas/arm/attr-march-armv8_1-m.main.d: New test.\n+\n 2019-04-09  Matthew Fortune  <matthew.fortune@mips.com>\n \n \t* config/tc-mips.c (mips_cpu_info_table): Add i6500.  Update"
    },
    {
      "sha": "4f96066cc5f32b9a07d2f8b6a146ea2788f61f07",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 47,
      "deletions": 45,
      "changes": 92,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -26570,6 +26570,7 @@ static const struct arm_arch_option_table arm_archs[] =\n   ARM_ARCH_OPT (\"armv8-m.base\",\t  ARM_ARCH_V8M_BASE,\tFPU_ARCH_VFP),\n   ARM_ARCH_OPT2 (\"armv8-m.main\",  ARM_ARCH_V8M_MAIN,\tFPU_ARCH_VFP,\n \t\t armv8m_main),\n+  ARM_ARCH_OPT (\"armv8.1-m.main\", ARM_ARCH_V8_1M_MAIN,\tFPU_ARCH_VFP),\n   ARM_ARCH_OPT2 (\"armv8-a\",\t  ARM_ARCH_V8A,\t\tFPU_ARCH_VFP, armv8a),\n   ARM_ARCH_OPT2 (\"armv8.1-a\",\t  ARM_ARCH_V8_1A,\tFPU_ARCH_VFP, armv81a),\n   ARM_ARCH_OPT2 (\"armv8.2-a\",\t  ARM_ARCH_V8_2A,\tFPU_ARCH_VFP, armv82a),\n@@ -27284,30 +27285,30 @@ typedef struct\n    stable when new architectures are added.  */\n static const cpu_arch_ver_table cpu_arch_ver[] =\n {\n-    {TAG_CPU_ARCH_PRE_V4,   ARM_ARCH_V1},\n-    {TAG_CPU_ARCH_PRE_V4,   ARM_ARCH_V2},\n-    {TAG_CPU_ARCH_PRE_V4,   ARM_ARCH_V2S},\n-    {TAG_CPU_ARCH_PRE_V4,   ARM_ARCH_V3},\n-    {TAG_CPU_ARCH_PRE_V4,   ARM_ARCH_V3M},\n-    {TAG_CPU_ARCH_V4,\t    ARM_ARCH_V4xM},\n-    {TAG_CPU_ARCH_V4,\t    ARM_ARCH_V4},\n-    {TAG_CPU_ARCH_V4T,\t    ARM_ARCH_V4TxM},\n-    {TAG_CPU_ARCH_V4T,\t    ARM_ARCH_V4T},\n-    {TAG_CPU_ARCH_V5T,\t    ARM_ARCH_V5xM},\n-    {TAG_CPU_ARCH_V5T,\t    ARM_ARCH_V5},\n-    {TAG_CPU_ARCH_V5T,\t    ARM_ARCH_V5TxM},\n-    {TAG_CPU_ARCH_V5T,\t    ARM_ARCH_V5T},\n-    {TAG_CPU_ARCH_V5TE,\t    ARM_ARCH_V5TExP},\n-    {TAG_CPU_ARCH_V5TE,\t    ARM_ARCH_V5TE},\n-    {TAG_CPU_ARCH_V5TEJ,    ARM_ARCH_V5TEJ},\n-    {TAG_CPU_ARCH_V6,\t    ARM_ARCH_V6},\n-    {TAG_CPU_ARCH_V6KZ,\t    ARM_ARCH_V6Z},\n-    {TAG_CPU_ARCH_V6KZ,\t    ARM_ARCH_V6KZ},\n-    {TAG_CPU_ARCH_V6K,\t    ARM_ARCH_V6K},\n-    {TAG_CPU_ARCH_V6T2,\t    ARM_ARCH_V6T2},\n-    {TAG_CPU_ARCH_V6T2,\t    ARM_ARCH_V6KT2},\n-    {TAG_CPU_ARCH_V6T2,\t    ARM_ARCH_V6ZT2},\n-    {TAG_CPU_ARCH_V6T2,\t    ARM_ARCH_V6KZT2},\n+    {TAG_CPU_ARCH_PRE_V4,     ARM_ARCH_V1},\n+    {TAG_CPU_ARCH_PRE_V4,     ARM_ARCH_V2},\n+    {TAG_CPU_ARCH_PRE_V4,     ARM_ARCH_V2S},\n+    {TAG_CPU_ARCH_PRE_V4,     ARM_ARCH_V3},\n+    {TAG_CPU_ARCH_PRE_V4,     ARM_ARCH_V3M},\n+    {TAG_CPU_ARCH_V4,\t      ARM_ARCH_V4xM},\n+    {TAG_CPU_ARCH_V4,\t      ARM_ARCH_V4},\n+    {TAG_CPU_ARCH_V4T,\t      ARM_ARCH_V4TxM},\n+    {TAG_CPU_ARCH_V4T,\t      ARM_ARCH_V4T},\n+    {TAG_CPU_ARCH_V5T,\t      ARM_ARCH_V5xM},\n+    {TAG_CPU_ARCH_V5T,\t      ARM_ARCH_V5},\n+    {TAG_CPU_ARCH_V5T,\t      ARM_ARCH_V5TxM},\n+    {TAG_CPU_ARCH_V5T,\t      ARM_ARCH_V5T},\n+    {TAG_CPU_ARCH_V5TE,\t      ARM_ARCH_V5TExP},\n+    {TAG_CPU_ARCH_V5TE,\t      ARM_ARCH_V5TE},\n+    {TAG_CPU_ARCH_V5TEJ,      ARM_ARCH_V5TEJ},\n+    {TAG_CPU_ARCH_V6,\t      ARM_ARCH_V6},\n+    {TAG_CPU_ARCH_V6KZ,\t      ARM_ARCH_V6Z},\n+    {TAG_CPU_ARCH_V6KZ,\t      ARM_ARCH_V6KZ},\n+    {TAG_CPU_ARCH_V6K,\t      ARM_ARCH_V6K},\n+    {TAG_CPU_ARCH_V6T2,\t      ARM_ARCH_V6T2},\n+    {TAG_CPU_ARCH_V6T2,\t      ARM_ARCH_V6KT2},\n+    {TAG_CPU_ARCH_V6T2,\t      ARM_ARCH_V6ZT2},\n+    {TAG_CPU_ARCH_V6T2,\t      ARM_ARCH_V6KZT2},\n \n     /* When assembling a file with only ARMv6-M or ARMv6S-M instruction, GNU as\n        always selected build attributes to match those of ARMv6-M\n@@ -27316,25 +27317,26 @@ static const cpu_arch_ver_table cpu_arch_ver[] =\n        would be selected when fully respecting chronology of architectures.\n        It is thus necessary to make a special case of ARMv6-M and ARMv6S-M and\n        move them before ARMv7 architectures.  */\n-    {TAG_CPU_ARCH_V6_M,\t    ARM_ARCH_V6M},\n-    {TAG_CPU_ARCH_V6S_M,    ARM_ARCH_V6SM},\n-\n-    {TAG_CPU_ARCH_V7,\t    ARM_ARCH_V7},\n-    {TAG_CPU_ARCH_V7,\t    ARM_ARCH_V7A},\n-    {TAG_CPU_ARCH_V7,\t    ARM_ARCH_V7R},\n-    {TAG_CPU_ARCH_V7,\t    ARM_ARCH_V7M},\n-    {TAG_CPU_ARCH_V7,\t    ARM_ARCH_V7VE},\n-    {TAG_CPU_ARCH_V7E_M,    ARM_ARCH_V7EM},\n-    {TAG_CPU_ARCH_V8,\t    ARM_ARCH_V8A},\n-    {TAG_CPU_ARCH_V8,\t    ARM_ARCH_V8_1A},\n-    {TAG_CPU_ARCH_V8,\t    ARM_ARCH_V8_2A},\n-    {TAG_CPU_ARCH_V8,\t    ARM_ARCH_V8_3A},\n-    {TAG_CPU_ARCH_V8M_BASE, ARM_ARCH_V8M_BASE},\n-    {TAG_CPU_ARCH_V8M_MAIN, ARM_ARCH_V8M_MAIN},\n-    {TAG_CPU_ARCH_V8R,\t    ARM_ARCH_V8R},\n-    {TAG_CPU_ARCH_V8,\t    ARM_ARCH_V8_4A},\n-    {TAG_CPU_ARCH_V8,\t    ARM_ARCH_V8_5A},\n-    {-1,\t\t    ARM_ARCH_NONE}\n+    {TAG_CPU_ARCH_V6_M,\t      ARM_ARCH_V6M},\n+    {TAG_CPU_ARCH_V6S_M,      ARM_ARCH_V6SM},\n+\n+    {TAG_CPU_ARCH_V7,\t      ARM_ARCH_V7},\n+    {TAG_CPU_ARCH_V7,\t      ARM_ARCH_V7A},\n+    {TAG_CPU_ARCH_V7,\t      ARM_ARCH_V7R},\n+    {TAG_CPU_ARCH_V7,\t      ARM_ARCH_V7M},\n+    {TAG_CPU_ARCH_V7,\t      ARM_ARCH_V7VE},\n+    {TAG_CPU_ARCH_V7E_M,      ARM_ARCH_V7EM},\n+    {TAG_CPU_ARCH_V8,\t      ARM_ARCH_V8A},\n+    {TAG_CPU_ARCH_V8,\t      ARM_ARCH_V8_1A},\n+    {TAG_CPU_ARCH_V8,\t      ARM_ARCH_V8_2A},\n+    {TAG_CPU_ARCH_V8,\t      ARM_ARCH_V8_3A},\n+    {TAG_CPU_ARCH_V8M_BASE,   ARM_ARCH_V8M_BASE},\n+    {TAG_CPU_ARCH_V8M_MAIN,   ARM_ARCH_V8M_MAIN},\n+    {TAG_CPU_ARCH_V8R,\t      ARM_ARCH_V8R},\n+    {TAG_CPU_ARCH_V8,\t      ARM_ARCH_V8_4A},\n+    {TAG_CPU_ARCH_V8,\t      ARM_ARCH_V8_5A},\n+    {TAG_CPU_ARCH_V8_1M_MAIN, ARM_ARCH_V8_1M_MAIN},\n+    {-1,\t\t      ARM_ARCH_NONE}\n };\n \n /* Set an attribute if it has not already been set by the user.  */\n@@ -27417,7 +27419,7 @@ get_aeabi_cpu_arch_from_fset (const arm_feature_set *arch_ext_fset,\n   if (ARM_FEATURE_EQUAL (*arch_ext_fset, arm_arch_any))\n     {\n       /* Force revisiting of decision for each new architecture.  */\n-      gas_assert (MAX_TAG_CPU_ARCH <= TAG_CPU_ARCH_V8M_MAIN);\n+      gas_assert (MAX_TAG_CPU_ARCH <= TAG_CPU_ARCH_V8_1M_MAIN);\n       *profile = 'A';\n       return TAG_CPU_ARCH_V8;\n     }\n@@ -27688,7 +27690,7 @@ aeabi_set_public_attributes (void)\n      by the base architecture.\n \n      For new architectures we will have to check these tests.  */\n-  gas_assert (arch <= TAG_CPU_ARCH_V8M_MAIN);\n+  gas_assert (arch <= TAG_CPU_ARCH_V8_1M_MAIN);\n   if (ARM_CPU_HAS_FEATURE (flags, arm_ext_v8)\n       || ARM_CPU_HAS_FEATURE (flags, arm_ext_v8m))\n     aeabi_set_attribute_int (Tag_DIV_use, 0);"
    },
    {
      "sha": "acae2e31fe1afed95ee6a9466fbec13f45d05740",
      "filename": "gas/testsuite/gas/arm/attr-march-armv8_1-m.main.d",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/gas/testsuite/gas/arm/attr-march-armv8_1-m.main.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/gas/testsuite/gas/arm/attr-march-armv8_1-m.main.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/attr-march-armv8_1-m.main.d?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -0,0 +1,13 @@\n+# name: attributes for -march=armv8.1-m.main\n+# source: blank.s\n+# as: -march=armv8.1-m.main\n+# readelf: -A\n+# This test is only valid on EABI based ports.\n+# target: *-*-*eabi* *-*-nacl*\n+\n+Attribute Section: aeabi\n+File Attributes\n+  Tag_CPU_name: \"8.1-M.MAIN\"\n+  Tag_CPU_arch: v8.1-M.mainline\n+  Tag_CPU_arch_profile: Microcontroller\n+  Tag_THUMB_ISA_use: Yes"
    },
    {
      "sha": "d33d0b09d7cfbbf923a8100e1e4f86160d03d0dc",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -1,3 +1,12 @@\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* elf/arm.h (TAG_CPU_ARCH_V8_1M_MAIN): new macro.\n+\t(MAX_TAG_CPU_ARCH): Set value to above macro.\n+\t* opcode/arm.h (ARM_EXT2_V8_1M_MAIN): New macro.\n+\t(ARM_AEXT_V8_1M_MAIN): Likewise.\n+\t(ARM_AEXT2_V8_1M_MAIN): Likewise.\n+\t(ARM_ARCH_V8_1M_MAIN): Likewise.\n+\n 2019-04-11  Sudakshina Das  <sudi.das@arm.com>\n \n \t* opcode/aarch64.h (enum aarch64_opnd): Add AARCH64_OPND_Rt_SP."
    },
    {
      "sha": "daf1d94391ea23c49cb646af430d2db8ef46c51e",
      "filename": "include/elf/arm.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/include/elf/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/include/elf/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/arm.h?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -111,7 +111,8 @@\n #define TAG_CPU_ARCH_V8R\t15\n #define TAG_CPU_ARCH_V8M_BASE\t16\n #define TAG_CPU_ARCH_V8M_MAIN\t17\n-#define MAX_TAG_CPU_ARCH\tTAG_CPU_ARCH_V8M_MAIN\n+#define TAG_CPU_ARCH_V8_1M_MAIN 21\n+#define MAX_TAG_CPU_ARCH\tTAG_CPU_ARCH_V8_1M_MAIN\n /* Pseudo-architecture to allow objects to be compatible with the subset of\n    armv4t and armv6-m.  This value should never be stored in object files.  */\n #define TAG_CPU_ARCH_V4T_PLUS_V6_M (MAX_TAG_CPU_ARCH + 1)"
    },
    {
      "sha": "73fb2e3f43c5fd2d77dc796b7decb329c5a8a57f",
      "filename": "include/opcode/arm.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/include/opcode/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/include/opcode/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/arm.h?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -72,6 +72,7 @@\n #define ARM_EXT2_V8_5A\t     0x00001000\t/* ARM V8.5A.\t\t\t     */\n #define ARM_EXT2_SB\t     0x00002000\t/* Speculation Barrier instruction.  */\n #define ARM_EXT2_PREDRES     0x00004000\t/* Prediction Restriction insns.     */\n+#define ARM_EXT2_V8_1M_MAIN  0x00008000 /* ARMv8.1-M Mainline.\t\t     */\n \n /* Co-processor space extensions.  */\n #define ARM_CEXT_XSCALE\t     0x00000001\t/* Allow MIA etc.\t \t   */\n@@ -175,6 +176,9 @@\n #define ARM_AEXT2_V8M_MAIN_DSP\t ARM_AEXT2_V8M_MAIN\n #define ARM_AEXT_V8R\t\t ARM_AEXT_V8A\n #define ARM_AEXT2_V8R\t\t ARM_AEXT2_V8AR\n+#define ARM_AEXT_V8_1M_MAIN\t ARM_AEXT_V8M_MAIN\n+#define ARM_AEXT2_V8_1M_MAIN\t(ARM_AEXT2_V8M_MAIN | ARM_EXT2_V8_1M_MAIN     \\\n+\t\t\t\t\t\t    | ARM_EXT2_FP16_INST)\n \n /* Processors with specific extensions in the co-processor space.  */\n #define ARM_ARCH_XSCALE\tARM_FEATURE_LOW (ARM_AEXT_V5TE, ARM_CEXT_XSCALE)\n@@ -353,6 +357,8 @@\n #define ARM_ARCH_V8M_MAIN_DSP  ARM_FEATURE_CORE (ARM_AEXT_V8M_MAIN_DSP,\t   \\\n \t\t\t\t\t\t ARM_AEXT2_V8M_MAIN_DSP)\n #define ARM_ARCH_V8R\t       ARM_FEATURE_CORE (ARM_AEXT_V8R, ARM_AEXT2_V8R)\n+#define ARM_ARCH_V8_1M_MAIN    ARM_FEATURE_CORE (ARM_AEXT_V8_1M_MAIN,\t   \\\n+\t\t\t\t\t\t ARM_AEXT2_V8_1M_MAIN)\n \n /* Some useful combinations:  */\n #define ARM_ARCH_NONE\tARM_FEATURE_LOW (0, 0)"
    },
    {
      "sha": "08733d07f45ef9a16991617e97c1f8f8fdc15c35",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* testsuite/ld-arm/attr-merge-13.attr: New test.\n+\t* testsuite/ld-arm/attr-merge-13a.s: New test.\n+\t* testsuite/ld-arm/attr-merge-13b.s: New test.\n+\n 2019-04-13  Alan Modra  <amodra@gmail.com>\n \n \t* Makefile.am (GENSCRIPTS): Pass LIB_PATH as a parameter.  Add"
    },
    {
      "sha": "9fabb5b88e5fbba01ce68d40597e69866e11d7f1",
      "filename": "ld/testsuite/ld-arm/attr-merge-13.attr",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/testsuite/ld-arm/attr-merge-13.attr",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/testsuite/ld-arm/attr-merge-13.attr",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-arm/attr-merge-13.attr?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -0,0 +1,6 @@\n+Attribute Section: aeabi\n+File Attributes\n+  Tag_CPU_name: \"8.1-M.MAIN\"\n+  Tag_CPU_arch: v8.1-M.mainline\n+  Tag_CPU_arch_profile: Microcontroller\n+  Tag_THUMB_ISA_use: Yes"
    },
    {
      "sha": "5349f7ff3b5ccb0bb5d226b8deed743335d93e44",
      "filename": "ld/testsuite/ld-arm/attr-merge-13a.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/testsuite/ld-arm/attr-merge-13a.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/testsuite/ld-arm/attr-merge-13a.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-arm/attr-merge-13a.s?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -0,0 +1,5 @@\n+\t.arch armv8-m.main\n+\n+\t@ Tag_CPU_arch & Tag_CPU_arch_profile = v8-M.mainline\n+\t.eabi_attribute Tag_CPU_arch, 17\n+\t.eabi_attribute Tag_CPU_arch_profile, 'M'"
    },
    {
      "sha": "20e075357a94edae8d649f034ab3e17efa3c06d2",
      "filename": "ld/testsuite/ld-arm/attr-merge-13b.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/testsuite/ld-arm/attr-merge-13b.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/ld/testsuite/ld-arm/attr-merge-13b.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-arm/attr-merge-13b.s?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -0,0 +1,5 @@\n+\t.arch armv8.1-m.main\n+\n+\t@ Tag_CPU_arch & Tag_CPU_arch_profile = v8.1-M.mainline\n+\t.eabi_attribute Tag_CPU_arch, 18\n+\t.eabi_attribute Tag_CPU_arch_profile, 'M'"
    },
    {
      "sha": "5027e9a573fb6b7db4b749d94e1068a363f2caa6",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (select_arm_features): Add logic for Armv8.1-M Mainline.\n+\n 2019-04-12  John Darrington <john@darrington.wattle.id.au>\n \n \ts12z-dis.c, s12z-opc.c, s12z-opc.h: Replace \"operator\" with"
    },
    {
      "sha": "e38296edea95749ebfc313c423d2e8147032ba27",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/031254f2111f945ce6a1b8827e1a58ed7141fefe/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/031254f2111f945ce6a1b8827e1a58ed7141fefe/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=031254f2111f945ce6a1b8827e1a58ed7141fefe",
      "patch": "@@ -6525,6 +6525,7 @@ select_arm_features (unsigned long mach,\n     case bfd_mach_arm_8R:\t ARM_SET_FEATURES (ARM_ARCH_V8R); break;\n     case bfd_mach_arm_8M_BASE:\t ARM_SET_FEATURES (ARM_ARCH_V8M_BASE); break;\n     case bfd_mach_arm_8M_MAIN:\t ARM_SET_FEATURES (ARM_ARCH_V8M_MAIN); break;\n+    case bfd_mach_arm_8_1M_MAIN: ARM_SET_FEATURES (ARM_ARCH_V8_1M_MAIN); break;\n       /* If the machine type is unknown allow all architecture types and all\n \t extensions.  */\n     case bfd_mach_arm_unknown:\t ARM_SET_FEATURES (ARM_FEATURE_ALL); break;"
    }
  ]
}