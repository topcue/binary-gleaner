{
  "sha": "17e04eff810ecf1f8392a995876a98361c565ec7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTdlMDRlZmY4MTBlY2YxZjgzOTJhOTk1ODc2YTk4MzYxYzU2NWVjNw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-12T06:35:12Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-12T08:26:05Z"
    },
    "message": "binutils testsuite: replace unresolved with unsupported\n\nYou'd think \"unresolved\" would be correct for an objcopy test when the\nassembler refuses to assemble one of our source files.  After all, the\ntest of objcopy hasn't been run.  However, \"unresolved\" results in\nruntest returning with an error status.  If instead we report\n\"unsupported\", runtest returns success.  Which is a little less\nconfusing to a user who doesn't see any errors reported unless they\nlook in log files.\n\n\t* testsuite/binutils-all/objcopy.exp: Report \"unsupported\" when\n\tgas or ld fails to build a testcase rather than \"unresolved\".\n\tReport \"fail\" when readelf returns an error status rather than\n\t\"unresolved\".\n\t* testsuite/binutils-all/ar.exp: Likewise.\n\t* testsuite/binutils-all/compress.exp: Likewise.\n\t* testsuite/binutils-all/readelf.exp: Likewise.",
    "tree": {
      "sha": "534b89c06a3df24e8f61d556b71156992f256b0f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/534b89c06a3df24e8f61d556b71156992f256b0f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/17e04eff810ecf1f8392a995876a98361c565ec7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17e04eff810ecf1f8392a995876a98361c565ec7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/17e04eff810ecf1f8392a995876a98361c565ec7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17e04eff810ecf1f8392a995876a98361c565ec7/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8f054a7a5a973ffc590e90b8cec3d622a8da6c5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f054a7a5a973ffc590e90b8cec3d622a8da6c5c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8f054a7a5a973ffc590e90b8cec3d622a8da6c5c"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 50,
    "deletions": 40
  },
  "files": [
    {
      "sha": "73b25e862103b9c8c7e62262b05a85057ff275c3",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=17e04eff810ecf1f8392a995876a98361c565ec7",
      "patch": "@@ -1,3 +1,13 @@\n+2021-02-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp: Report \"unsupported\" when\n+\tgas or ld fails to build a testcase rather than \"unresolved\".\n+\tReport \"fail\" when readelf returns an error status rather than\n+\t\"unresolved\".\n+\t* testsuite/binutils-all/ar.exp: Likewise.\n+\t* testsuite/binutils-all/compress.exp: Likewise.\n+\t* testsuite/binutils-all/readelf.exp: Likewise.\n+\n 2021-02-12  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/binutils-all/pr25662.s: Replace \"a\" with \"aaa\" and"
    },
    {
      "sha": "86f84242b28fde037b612026a2c38a60af29e06d",
      "filename": "binutils/testsuite/binutils-all/ar.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/ar.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/ar.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/ar.exp?ref=17e04eff810ecf1f8392a995876a98361c565ec7",
      "patch": "@@ -195,7 +195,7 @@ proc symbol_table { } {\n     set testname \"ar symbol table\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -244,7 +244,7 @@ proc thin_archive { bfdtests } {\n     set testname \"ar thin archive\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -302,7 +302,7 @@ proc thin_archive_with_nested { bfdtests } {\n     set testname \"ar thin archive with nested archive\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -375,7 +375,7 @@ proc argument_parsing { } {\n     set testname \"ar argument parsing\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -412,7 +412,7 @@ proc deterministic_archive { } {\n     set testname \"ar deterministic archive\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -461,7 +461,7 @@ proc unique_symbol { } {\n     set testname \"ar unique symbol in archive\"\n \n     if ![binutils_assemble $srcdir/$subdir/unique.s tmpdir/unique.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -503,7 +503,7 @@ proc delete_an_element { } {\n     set testname \"ar deleting an element\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -545,7 +545,7 @@ proc move_an_element { } {\n     set testname \"ar moving an element\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -626,7 +626,7 @@ proc extract_an_element { } {\n     set testname \"ar extracting an element\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n \n@@ -686,7 +686,7 @@ proc many_files { } {\n \n \tset ofile \"tmpdir/d-$i.${obj}\"\n \tif ![binutils_assemble $sfile $ofile] {\n-\t    unresolved $testname\n+\t    unsupported $testname\n \t    return\n \t}\n \n@@ -725,7 +725,7 @@ proc test_add_dependencies { } {\n     set testname \"ar adding library dependencies\"\n \n     if ![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.${obj}] {\n-\tunresolved $testname\n+\tunsupported $testname\n \treturn\n     }\n "
    },
    {
      "sha": "e0e04f072e57c8537f222b09619b826b507e852d",
      "filename": "binutils/testsuite/binutils-all/compress.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/compress.exp?ref=17e04eff810ecf1f8392a995876a98361c565ec7",
      "patch": "@@ -589,7 +589,7 @@ proc convert_test { testname  as_flags  objcop_flags } {\n     global OBJDUMP\n \n     if { ![binutils_assemble_flags $srcdir/$subdir/dw2-3.S ${testfile3}.o \"$as_flags\"] } then {\n-       unresolved \"$testname\"\n+       unsupported \"$testname\"\n        return\n     }\n "
    },
    {
      "sha": "ef251876a0234f8cedb6abccccb32bd250eea39e",
      "filename": "binutils/testsuite/binutils-all/objcopy.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/objcopy.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/objcopy.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objcopy.exp?ref=17e04eff810ecf1f8392a995876a98361c565ec7",
      "patch": "@@ -54,7 +54,7 @@ proc objcopy_test {testname srcfile type asflags ldflags} {\n     }\n \n     if {![binutils_assemble_flags $srcdir/$subdir/${srcfile} $t_tempfile \"$asflags\"]} then {\n-\tunresolved \"objcopy $type ($testname)\"\n+\tunsupported \"objcopy $type ($testname)\"\n \tremote_file host delete $t_tempfile\n \treturn\n     }\n@@ -73,7 +73,7 @@ proc objcopy_test {testname srcfile type asflags ldflags} {\n \tset t_copyfile $copyfile\n \tset got [binutils_run $LD \"$tempfile -o $t_tempfile $ldflags\"]\n \tif { ![string equal \"\" $got] } then {\n-\t    unresolved \"objcopy $type ($testname)\"\n+\t    unsupported \"objcopy $type ($testname)\"\n \t    return\n \t}\n \tset xflags \"--preserve-dates\"\n@@ -133,7 +133,7 @@ proc objcopy_test_verilog {testname} {\n \n     set got [binutils_assemble $srcdir/$subdir/verilogtest.s $binfile]\n     if {![binutils_assemble $srcdir/$subdir/verilogtest.s $binfile]} then {\n-\tunresolved \"objcopy ($testname)\"\n+\tunsupported \"objcopy ($testname)\"\n \treturn\n     }\n \n@@ -484,7 +484,7 @@ proc strip_test { } {\n \tverbose -log \"$READELF -a tmpdir/testprog.o > tmpdir/osabi.in\"\n \tset exec_output [remote_exec host \"$READELF -h tmpdir/testprog.o\" \"\" \"/dev/null\" \"tmpdir/osabi.in\"]\n \tif { [lindex $exec_output 0] != 0 } then {\n-\t    unresolved \"$test preserving OS/ABI\"\n+\t    fail \"$test preserving OS/ABI\"\n \t    set osabi_fail \"true\"\n \t} else {\n \t    verbose -log \"grep OS/ABI tmpdir/osabi.in\"\n@@ -531,7 +531,7 @@ proc strip_test { } {\n \tverbose -log \"$READELF -a tmpdir/testprog.o > tmpdir/osabi.out\"\n \tset exec_output [remote_exec host \"$READELF -h tmpdir/testprog.o\" \"\" \"/dev/null\" \"tmpdir/osabi.out\"]\n \tif { [lindex $exec_output 0] != 0 } then {\n-\t    unresolved \"$test preserving OS/ABI\"\n+\t    fail \"$test preserving OS/ABI\"\n \t} else {\n \t    verbose -log \"grep OS/ABI tmpdir/osabi.out\"\n \t    catch \"exec grep OS/ABI tmpdir/osabi.out\" osabi_out\n@@ -762,7 +762,7 @@ proc strip_executable { prog flags test1 test2 } {\n \tverbose -log \"$READELF -a ${copyfile} > tmpdir/osabi.in\"\n \tset exec_output [remote_exec host \"$READELF -h ${copyfile}\" \"\" \"/dev/null\" \"tmpdir/osabi.in\"]\n \tif { [lindex $exec_output 0] != 0 } then {\n-\t    unresolved \"$test1 preserving OS/ABI\"\n+\t    fail \"$test1 preserving OS/ABI\"\n \t    set osabi_fail \"true\"\n \t} else {\n \t    verbose -log \"grep OS/ABI tmpdir/osabi.in\"\n@@ -788,7 +788,7 @@ proc strip_executable { prog flags test1 test2 } {\n \tverbose -log \"$READELF -a ${copyfile} > tmpdir/osabi.out\"\n \tset exec_output [remote_exec host \"$READELF -h ${copyfile}\" \"\" \"/dev/null\" \"tmpdir/osabi.out\"]\n \tif { [lindex $exec_output 0] != 0 } then {\n-\t    unresolved \"$test1 preserving OS/ABI\"\n+\t    fail \"$test1 preserving OS/ABI\"\n \t} else {\n \t    verbose -log \"grep OS/ABI tmpdir/osabi.out\"\n \t    catch \"exec grep OS/ABI tmpdir/osabi.out\" osabi_out\n@@ -1021,7 +1021,7 @@ proc objcopy_test_readelf {testname srcfile} {\n     global subdir\n \n     if {![binutils_assemble $srcdir/$subdir/${srcfile} tmpdir/bintest.o]} then {\n-\tunresolved \"objcopy ($testname)\"\n+\tunsupported \"objcopy ($testname)\"\n \treturn\n     }\n \n@@ -1036,7 +1036,7 @@ proc objcopy_test_readelf {testname srcfile} {\n     verbose -log \"$READELF -a tmpdir/bintest.o > tmpdir/bintest.o.out\"\n     set exec_output [remote_exec host \"$READELF -a tmpdir/bintest.o\" \"\" \"/dev/null\" \"tmpdir/bintest.o.out\"]\n     if { [lindex $exec_output 0] != 0 } then {\n-\tunresolved \"objcopy ($testname)\"\n+\tfail \"objcopy ($testname)\"\n \treturn\n     }\n     set exec_output [prune_warnings [lindex $exec_output 1]]\n@@ -1048,7 +1048,7 @@ proc objcopy_test_readelf {testname srcfile} {\n     verbose -log \"$READELF -a tmpdir/copy.o > tmpdir/copy.o.out\"\n     set exec_output [remote_exec host \"$READELF -a tmpdir/copy.o\" \"\" \"/dev/null\" \"tmpdir/copy.o.out\"]\n     if { [lindex $exec_output 0] != 0 } then {\n-\tunresolved \"objcopy ($testname)\"\n+\tfail \"objcopy ($testname)\"\n \treturn\n     }\n     set exec_output [prune_warnings [lindex $exec_output 1]]\n@@ -1216,7 +1216,7 @@ if [is_elf_format] {\n \tset srcfile $srcdir/$subdir/needed-by-reloc.s\n \n \tif {![binutils_assemble $srcfile tmpdir/bintest.o]} then {\n-\t    unresolved $test\n+\t    unsupported $test\n \t} else {\n \t    set got [binutils_run $OBJCOPY \"$OBJCOPYFLAGS --strip-symbol=foo tmpdir/bintest.o ${copyfile}.o\"]\n "
    },
    {
      "sha": "948323c06bb5565bab44e3739081d4f99e62f6cf",
      "filename": "binutils/testsuite/binutils-all/readelf.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/readelf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e04eff810ecf1f8392a995876a98361c565ec7/binutils/testsuite/binutils-all/readelf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.exp?ref=17e04eff810ecf1f8392a995876a98361c565ec7",
      "patch": "@@ -264,7 +264,7 @@ proc readelf_dump_test {} {\n \n     # Assemble the dump test file.\n     if {![binutils_assemble $srcdir/$subdir/dumptest.s tmpdir/dumptest.o]} then {\n-      unresolved \"readelf -p: failed to assemble dump test file\"\n+      unsupported \"readelf -p: failed to assemble dump test file\"\n       return\n     }\n     # Download it.\n@@ -324,10 +324,10 @@ send_user \"Version [binutil_version $READELF]\"\n \n # Assemble the test file.\n if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {\n-    unresolved \"readelf -h bintest (failed to assemble)\"\n-    unresolved \"readelf -S bintest (failed to assemble)\"\n-    unresolved \"readelf -s bintest (failed to assemble)\"\n-    unresolved \"readelf -r bintest (failed to assemble)\"\n+    unsupported \"readelf -h bintest (failed to assemble)\"\n+    unsupported \"readelf -S bintest (failed to assemble)\"\n+    unsupported \"readelf -s bintest (failed to assemble)\"\n+    unsupported \"readelf -r bintest (failed to assemble)\"\n     global readelf_size\n     set readelf_size \"\"\n } else {\n@@ -351,7 +351,7 @@ if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {\n \n # Test demangling symbol names.\n if {![binutils_assemble $srcdir/$subdir/mangled.s tmpdir/mangled.o]} then {\n-    unresolved \"readelf -s -C bintest (failed to assemble)\"\n+    unsupported \"readelf -s -C bintest (failed to assemble)\"\n } else {\n \n     if ![is_remote host] {\n@@ -380,7 +380,7 @@ if {[which $AS] != 0} then {\n \n # PR 13482 - Check for off-by-one errors when dumping .note sections.\n if {![binutils_assemble $srcdir/$subdir/version.s tmpdir/version.o]} then {\n-    unresolved \"readelf -n version (failed to assemble)\"\n+    unsupported \"readelf -n version (failed to assemble)\"\n } else {\n \n     if ![is_remote host] {\n@@ -396,7 +396,7 @@ if {![binutils_assemble $srcdir/$subdir/version.s tmpdir/version.o]} then {\n # PR 18374 - Check that relocations against the .debug_loc section\n # do not prevent readelf from displaying all the location lists.\n if {![binutils_assemble $srcdir/$subdir/pr18374.s tmpdir/pr18374.o]} then {\n-    unresolved \"readelf --debug-dump=loc pr18374 (failed to assemble)\"\n+    unsupported \"readelf --debug-dump=loc pr18374 (failed to assemble)\"\n } else {\n \n     if ![is_remote host] {\n@@ -411,7 +411,7 @@ if {![binutils_assemble $srcdir/$subdir/pr18374.s tmpdir/pr18374.o]} then {\n \n # locview - Check dumping of location lists with location views.\n if {![binutils_assemble $srcdir/$subdir/locview-1.s tmpdir/locview-1.o]} then {\n-    unresolved \"readelf --debug-dump=loc locview-1 (failed to assemble)\"\n+    unsupported \"readelf --debug-dump=loc locview-1 (failed to assemble)\"\n } else {\n \n     if ![is_remote host] {\n@@ -423,7 +423,7 @@ if {![binutils_assemble $srcdir/$subdir/locview-1.s tmpdir/locview-1.o]} then {\n     readelf_test --debug-dump=loc $tempfile readelf.locview-1  {}\n }\n if {![binutils_assemble $srcdir/$subdir/locview-2.s tmpdir/locview-2.o]} then {\n-    unresolved \"readelf --debug-dump=loc locview-2 (failed to assemble)\"\n+    unsupported \"readelf --debug-dump=loc locview-2 (failed to assemble)\"\n } else {\n \n     if ![is_remote host] {\n@@ -438,7 +438,7 @@ if {![binutils_assemble $srcdir/$subdir/locview-2.s tmpdir/locview-2.o]} then {\n \n # Check that decompressed dumps work.\n if {![binutils_assemble $srcdir/$subdir/z.s tmpdir/z.o]} then {\n-    unresolved \"readelf --decompress --hex-dump .debug_loc z (failed to assemble)\"\n+    unsupported \"readelf --decompress --hex-dump .debug_loc z (failed to assemble)\"\n } else {\n \n     if ![is_remote host] {\n@@ -461,7 +461,7 @@ if ![istarget \"riscv*-*-*\"] then {\n \n     # Assemble the DWARF-5 test file.\n     if {![binutils_assemble_flags $srcdir/$subdir/dw5.S tmpdir/dw5.o $hpux]} then {\n-\tunresolved \"readelf -wiaoRlL dw5 (failed to assemble)\"\n+\tunsupported \"readelf -wiaoRlL dw5 (failed to assemble)\"\n     } else {\n \n \t# Download it.\n@@ -481,7 +481,7 @@ if ![istarget \"riscv*-*-*\"] then {\n \n # Assemble the DWARF-5 attributes test file.\n if {![binutils_assemble_flags $srcdir/$subdir/dwarf-attributes.S tmpdir/dwarf-attributes.o \"\"]} then {\n-    unresolved \"readelf -wi dwarf-attributes (failed to assemble)\"\n+    unsupported \"readelf -wi dwarf-attributes (failed to assemble)\"\n } else {\n     # Download it.\n     if ![is_remote host] {\n@@ -499,7 +499,7 @@ if {![binutils_assemble_flags $srcdir/$subdir/dwarf-attributes.S tmpdir/dwarf-at\n \n # Check that debug link sections can be dumped.\n if {![binutils_assemble $srcdir/$subdir/debuglink.s tmpdir/debuglink.o]} then {\n-    unresolved \"readelf --debug-dump=links (failed to assemble debuglink.s)\"\n+    unsupported \"readelf --debug-dump=links (failed to assemble debuglink.s)\"\n } else {\n     if ![is_remote host] {\n \tset tempfile tmpdir/debuglink.o\n@@ -511,7 +511,7 @@ if {![binutils_assemble $srcdir/$subdir/debuglink.s tmpdir/debuglink.o]} then {\n \n     # Check that debug link sections can be followed.\n     if {![binutils_assemble $srcdir/$subdir/linkdebug.s tmpdir/linkdebug.debug]} then {\n-\tunresolved \"readelf --debug-dump=follow-links (failed to assemble linkdebug.s)\"\n+\tunsupported \"readelf --debug-dump=follow-links (failed to assemble linkdebug.s)\"\n     } else {\n \tif [is_remote host] {\n \t    set tempfile2 [remote_download host tmpdir/linkdebug.debug]\n@@ -522,7 +522,7 @@ if {![binutils_assemble $srcdir/$subdir/debuglink.s tmpdir/debuglink.o]} then {\n }\n \n if {![binutils_assemble $srcdir/$subdir/dwo.s tmpdir/dwo.o]} then {\n-    unresolved \"readelf --debug-dump=links (failed to assemble dwo.s)\"\n+    unsupported \"readelf --debug-dump=links (failed to assemble dwo.s)\"\n } else {\n     if ![is_remote host] {\n \tset tempfile tmpdir/dwo.o\n@@ -534,7 +534,7 @@ if {![binutils_assemble $srcdir/$subdir/dwo.s tmpdir/dwo.o]} then {\n }\n \n if {![binutils_assemble $srcdir/$subdir/zero-sec.s tmpdir/zero-sec.o]} then {\n-    unresolved \"readelf --enable-checks (failed to assemble zero-sec.s)\"\n+    unsupported \"readelf --enable-checks (failed to assemble zero-sec.s)\"\n } else {\n     if ![is_remote host] {\n \tset tempfile tmpdir/zero-sec.o"
    }
  ]
}