{
  "sha": "1ab139e5bedfec2bb277287574cc0322c21a252b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWFiMTM5ZTViZWRmZWMyYmIyNzcyODc1NzRjYzAzMjJjMjFhMjUyYg==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-01-09T19:19:31Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-01-21T13:25:54Z"
    },
    "message": "Add more debugging output to aarch64_displaced_step_fixup\n\nWhile debugging the step-over-syscall problem, i wanted to see a bit more\ndebugging output to try to determine the root cause.\n\nThis patch does this.\n\ngdb/ChangeLog:\n\n2020-01-21  Luis Machado  <luis.machado@linaro.org>\n\n\t* aarch64-tdep.c (aarch64_displaced_step_fixup): Add more debugging\n\toutput.",
    "tree": {
      "sha": "b7f5b90755177bd608ca465eeff42863defad7ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b7f5b90755177bd608ca465eeff42863defad7ac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1ab139e5bedfec2bb277287574cc0322c21a252b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ab139e5bedfec2bb277287574cc0322c21a252b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1ab139e5bedfec2bb277287574cc0322c21a252b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ab139e5bedfec2bb277287574cc0322c21a252b/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0c27188999bfc5bf03536bf44593c4ed8df296c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0c27188999bfc5bf03536bf44593c4ed8df296c3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0c27188999bfc5bf03536bf44593c4ed8df296c3"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 30,
    "deletions": 2
  },
  "files": [
    {
      "sha": "ec9bac0dad30355664452bfbd6d5bbcfbd192f43",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ab139e5bedfec2bb277287574cc0322c21a252b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ab139e5bedfec2bb277287574cc0322c21a252b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1ab139e5bedfec2bb277287574cc0322c21a252b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-21  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* aarch64-tdep.c (aarch64_displaced_step_fixup): Add more debugging\n+\toutput.\n+\n 2020-01-21  Luis Machado  <luis.machado@linaro.org>\n \n \t* aarch64-tdep.c (struct aarch64_displaced_step_closure )"
    },
    {
      "sha": "03d650d9dc5c6ec375984e003bd8196f41b547c6",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 25,
      "deletions": 2,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ab139e5bedfec2bb277287574cc0322c21a252b/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ab139e5bedfec2bb277287574cc0322c21a252b/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=1ab139e5bedfec2bb277287574cc0322c21a252b",
      "patch": "@@ -3037,8 +3037,16 @@ aarch64_displaced_step_fixup (struct gdbarch *gdbarch,\n \n   regcache_cooked_read_unsigned (regs, AARCH64_PC_REGNUM, &pc);\n \n+  if (debug_displaced)\n+    debug_printf (\"Displaced: PC after stepping: %s (was %s).\\n\",\n+\t\t  paddress (gdbarch, pc), paddress (gdbarch, to));\n+\n   if (dsc->cond)\n     {\n+      if (debug_displaced)\n+\tdebug_printf (\"Displaced: [Conditional] pc_adjust before: %d\\n\",\n+\t\t      dsc->pc_adjust);\n+\n       if (pc - to == 8)\n \t{\n \t  /* Condition is true.  */\n@@ -3050,20 +3058,35 @@ aarch64_displaced_step_fixup (struct gdbarch *gdbarch,\n \t}\n       else\n \tgdb_assert_not_reached (\"Unexpected PC value after displaced stepping\");\n+\n+      if (debug_displaced)\n+\tdebug_printf (\"Displaced: [Conditional] pc_adjust after: %d\\n\",\n+\t\t      dsc->pc_adjust);\n     }\n \n+  if (debug_displaced)\n+    debug_printf (\"Displaced: %s PC by %d\\n\",\n+\t\t  dsc->pc_adjust? \"adjusting\" : \"not adjusting\",\n+\t\t  dsc->pc_adjust);\n+\n+\n   if (dsc->pc_adjust != 0)\n     {\n       /* Make sure the previous instruction was executed (that is, the PC\n \t has changed).  If the PC didn't change, then discard the adjustment\n \t offset.  Otherwise we may skip an instruction before its execution\n \t took place.  */\n       if ((pc - to) == 0)\n-\tdsc->pc_adjust = 0;\n+\t{\n+\t  if (debug_displaced)\n+\t    debug_printf (\"Displaced: PC did not move. Discarding PC \"\n+\t\t\t  \"adjustment.\\n\");\n+\t  dsc->pc_adjust = 0;\n+\t}\n \n       if (debug_displaced)\n \t{\n-\t  debug_printf (\"displaced: fixup: set PC to %s:%d\\n\",\n+\t  debug_printf (\"Displaced: fixup: set PC to %s:%d\\n\",\n \t\t\tpaddress (gdbarch, from), dsc->pc_adjust);\n \t}\n       regcache_cooked_write_unsigned (regs, AARCH64_PC_REGNUM,"
    }
  ]
}