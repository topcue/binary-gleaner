{
  "sha": "39f286cd585226ad98c2cd94ee0f96988b3696ce",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzlmMjg2Y2Q1ODUyMjZhZDk4YzJjZDk0ZWUwZjk2OTg4YjM2OTZjZQ==",
  "commit": {
    "author": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2018-12-31T07:48:10Z"
    },
    "committer": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2019-01-09T18:44:27Z"
    },
    "message": "S12Z: Fix disassembly of indexed OPR operands with zero index.\n\ngas/\n\t* testsuite/gas/s12z/jsr.s: New case.\n\t* testsuite/gas/s12z/jsr.d: New case.\nopcodes/\n\t* s12z-dis.c (opr_emit_disassembly): Do not omit an index if it is\n\tzero.",
    "tree": {
      "sha": "3591de05526bf6d13fed663e2d8cbc1d0ae4118a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3591de05526bf6d13fed663e2d8cbc1d0ae4118a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/39f286cd585226ad98c2cd94ee0f96988b3696ce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39f286cd585226ad98c2cd94ee0f96988b3696ce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/39f286cd585226ad98c2cd94ee0f96988b3696ce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39f286cd585226ad98c2cd94ee0f96988b3696ce/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/041be52673949e5b6cc2b507e55a379a54ab8ee0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/041be52673949e5b6cc2b507e55a379a54ab8ee0"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 40,
    "deletions": 31
  },
  "files": [
    {
      "sha": "86e550d3d3405c84794878c97013cd54c84b74bb",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39f286cd585226ad98c2cd94ee0f96988b3696ce/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39f286cd585226ad98c2cd94ee0f96988b3696ce/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=39f286cd585226ad98c2cd94ee0f96988b3696ce",
      "patch": "@@ -1,3 +1,8 @@\n+2019-01-09  John Darrington <john@darrington.wattle.id.au>\n+\n+        * testsuite/gas/s12z/jsr.s: New case.\n+\t* testsuite/gas/s12z/jsr.d: New case.\n+\n 2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "cf37e6ea13536e25343d2dde51785981d57ed9dd",
      "filename": "gas/testsuite/gas/s12z/jsr.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39f286cd585226ad98c2cd94ee0f96988b3696ce/gas/testsuite/gas/s12z/jsr.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39f286cd585226ad98c2cd94ee0f96988b3696ce/gas/testsuite/gas/s12z/jsr.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/s12z/jsr.d?ref=39f286cd585226ad98c2cd94ee0f96988b3696ce",
      "patch": "@@ -31,3 +31,4 @@ Disassembly of section .text:\n   2a:\tab f9 be 91 \tjsr 114321\n   2e:\tab fe 07 82 \tjsr \\[492134\\]\n   32:\t66 \n+  33:\tab 40       \tjsr \\(0,x\\)"
    },
    {
      "sha": "fa761d33f70b4fa89624092d45e62c5cbb9499bb",
      "filename": "gas/testsuite/gas/s12z/jsr.s",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39f286cd585226ad98c2cd94ee0f96988b3696ce/gas/testsuite/gas/s12z/jsr.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39f286cd585226ad98c2cd94ee0f96988b3696ce/gas/testsuite/gas/s12z/jsr.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/s12z/jsr.s?ref=39f286cd585226ad98c2cd94ee0f96988b3696ce",
      "patch": "@@ -1,5 +1,5 @@\n  \tjsr d2\n-\tjsr (2, y)\n+\tjsr (2,y)\n \tjsr (+y)\n \tjsr (-y)\n \tjsr (y+)\n@@ -18,3 +18,4 @@\n \tjsr 4021\n \tjsr 114321\n \tjsr [492134]\n+\tjsr (0,x)"
    },
    {
      "sha": "d17ee102202344ec0da6d69cf7d8eded5dd5e8ec",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39f286cd585226ad98c2cd94ee0f96988b3696ce/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39f286cd585226ad98c2cd94ee0f96988b3696ce/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=39f286cd585226ad98c2cd94ee0f96988b3696ce",
      "patch": "@@ -1,3 +1,8 @@\n+2019-01-09  John Darrington <john@darrington.wattle.id.au>\n+\n+        * s12z-dis.c (opr_emit_disassembly): Do not omit an index if it is\n+\tzero.\n+\n 2019-01-09  Andrew Paprocki  <andrew@ishiboo.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "5db0b4356246bbdec00e2e6be1de7922597b979e",
      "filename": "opcodes/s12z-dis.c",
      "status": "modified",
      "additions": 27,
      "deletions": 30,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39f286cd585226ad98c2cd94ee0f96988b3696ce/opcodes/s12z-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39f286cd585226ad98c2cd94ee0f96988b3696ce/opcodes/s12z-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/s12z-dis.c?ref=39f286cd585226ad98c2cd94ee0f96988b3696ce",
      "patch": "@@ -282,36 +282,33 @@ opr_emit_disassembly (const struct operand *opr,\n         struct memory_operand *mo = (struct memory_operand *) opr;\n \t(*info->fprintf_func) (info->stream, \"%c\", mo->indirect ? '[' : '(');\n \n-        if (mo->base_offset != 0)\n-          {\n-            (*info->fprintf_func) (info->stream, \"%d\", mo->base_offset);\n-          }\n-        else if (mo->n_regs > 0)\n-          {\n-\t    const char *fmt;\n-\t    switch (mo->mutation)\n-\t      {\n-\t      case OPND_RM_PRE_DEC:\n-\t\tfmt = \"-%s\";\n-\t\tbreak;\n-\t      case OPND_RM_PRE_INC:\n-\t\tfmt = \"+%s\";\n-\t\tbreak;\n-\t      case OPND_RM_POST_DEC:\n-\t\tfmt = \"%s-\";\n-\t\tbreak;\n-\t      case OPND_RM_POST_INC:\n-\t\tfmt = \"%s+\";\n-\t\tbreak;\n-\t      case OPND_RM_NONE:\n-\t      default:\n-\t\tfmt = \"%s\";\n-\t\tbreak;\n-\t      }\n-            (*info->fprintf_func) (info->stream, fmt,\n-\t\t\t\t   registers[mo->regs[0]].name);\n-            used_reg = 1;\n-          }\n+\tconst char *fmt;\n+\tassert (mo->mutation == OPND_RM_NONE || mo->n_regs == 1);\n+\tswitch (mo->mutation)\n+\t  {\n+\t  case OPND_RM_PRE_DEC:\n+\t    fmt = \"-%s\";\n+\t    break;\n+\t  case OPND_RM_PRE_INC:\n+\t    fmt = \"+%s\";\n+\t    break;\n+\t  case OPND_RM_POST_DEC:\n+\t    fmt = \"%s-\";\n+\t    break;\n+\t  case OPND_RM_POST_INC:\n+\t    fmt = \"%s+\";\n+\t    break;\n+\t  case OPND_RM_NONE:\n+\t  default:\n+\t    if (mo->n_regs < 2)\n+\t      (*info->fprintf_func) (info->stream, (mo->n_regs == 0) ? \"%d\" : \"%d,\", mo->base_offset);\n+\t    fmt = \"%s\";\n+\t    break;\n+\t  }\n+\tif (mo->n_regs > 0)\n+\t  (*info->fprintf_func) (info->stream, fmt,\n+\t\t\t\t registers[mo->regs[0]].name);\n+\tused_reg = 1;\n \n         if (mo->n_regs > used_reg)\n           {"
    }
  ]
}