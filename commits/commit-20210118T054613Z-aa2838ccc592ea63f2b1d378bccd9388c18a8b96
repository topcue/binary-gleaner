{
  "sha": "aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWEyODM4Y2NjNTkyZWE2M2YyYjFkMzc4YmNjZDkzODhjMThhOGI5Ng==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-18T05:46:13Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-18T05:46:13Z"
    },
    "message": "gdb: const-ify hostio methods parameter in remote.c\n\ngdb/ChangeLog:\n\n\t* remote.c (class remote_target) <remote_hostio_send_command,\n\tremote_hostio_parse_result>: Constify parameter.\n\t(remote_hostio_parse_result): Likewise.\n\t(remote_target::remote_hostio_send_command): Adjust.\n\t(remote_target::remote_hostio_pread_vFile): Adjust.\n\t(remote_target::fileio_readlink): Adjust.\n\t(remote_target::fileio_fstat): Adjust.\n\nChange-Id: I6b585b99937e6526a0a7e06261d2193114589912",
    "tree": {
      "sha": "7feecd2ac1dc0770ebb2da3c65a6e000e5e27f45",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7feecd2ac1dc0770ebb2da3c65a6e000e5e27f45"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa2838ccc592ea63f2b1d378bccd9388c18a8b96/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b5c8f22d280c74ead1351e0f6e56a529f3b866b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5c8f22d280c74ead1351e0f6e56a529f3b866b5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b5c8f22d280c74ead1351e0f6e56a529f3b866b5"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 18,
    "deletions": 8
  },
  "files": [
    {
      "sha": "ac13b3d010d59f52ff21cf96665bfb6bb5562499",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa2838ccc592ea63f2b1d378bccd9388c18a8b96/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa2838ccc592ea63f2b1d378bccd9388c18a8b96/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
      "patch": "@@ -1,3 +1,13 @@\n+2021-01-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* remote.c (class remote_target) <remote_hostio_send_command,\n+\tremote_hostio_parse_result>: Constify parameter.\n+\t(remote_hostio_parse_result): Likewise.\n+\t(remote_target::remote_hostio_send_command): Adjust.\n+\t(remote_target::remote_hostio_pread_vFile): Adjust.\n+\t(remote_target::fileio_readlink): Adjust.\n+\t(remote_target::fileio_fstat): Adjust.\n+\n 2021-01-18  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* remote.c (remote_target::start_remote): Move wait_status to"
    },
    {
      "sha": "b4c6fc21083b5c82859170bbb733a1e5f78c6849",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa2838ccc592ea63f2b1d378bccd9388c18a8b96/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa2838ccc592ea63f2b1d378bccd9388c18a8b96/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=aa2838ccc592ea63f2b1d378bccd9388c18a8b96",
      "patch": "@@ -705,7 +705,7 @@ class remote_target : public process_stratum_target\n \t\t\t\t ULONGEST offset, int *remote_errno);\n \n   int remote_hostio_send_command (int command_bytes, int which_packet,\n-\t\t\t\t  int *remote_errno, char **attachment,\n+\t\t\t\t  int *remote_errno, const char **attachment,\n \t\t\t\t  int *attachment_len);\n   int remote_hostio_set_filesystem (struct inferior *inf,\n \t\t\t\t    int *remote_errno);\n@@ -11969,8 +11969,8 @@ remote_buffer_add_int (char **buffer, int *left, ULONGEST value)\n    -1 is returned, the other variables may not be initialized.  */\n \n static int\n-remote_hostio_parse_result (char *buffer, int *retcode,\n-\t\t\t    int *remote_errno, char **attachment)\n+remote_hostio_parse_result (const char *buffer, int *retcode,\n+\t\t\t    int *remote_errno, const char **attachment)\n {\n   char *p, *p2;\n \n@@ -12026,12 +12026,12 @@ remote_hostio_parse_result (char *buffer, int *retcode,\n \n int\n remote_target::remote_hostio_send_command (int command_bytes, int which_packet,\n-\t\t\t\t\t   int *remote_errno, char **attachment,\n+\t\t\t\t\t   int *remote_errno, const char **attachment,\n \t\t\t\t\t   int *attachment_len)\n {\n   struct remote_state *rs = get_remote_state ();\n   int ret, bytes_read;\n-  char *attachment_tmp;\n+  const char *attachment_tmp;\n \n   if (packet_support (which_packet) == PACKET_DISABLE)\n     {\n@@ -12242,7 +12242,7 @@ remote_target::remote_hostio_pread_vFile (int fd, gdb_byte *read_buf, int len,\n {\n   struct remote_state *rs = get_remote_state ();\n   char *p = rs->buf.data ();\n-  char *attachment;\n+  const char *attachment;\n   int left = get_remote_packet_size ();\n   int ret, attachment_len;\n   int read_len;\n@@ -12406,7 +12406,7 @@ remote_target::fileio_readlink (struct inferior *inf, const char *filename,\n {\n   struct remote_state *rs = get_remote_state ();\n   char *p = rs->buf.data ();\n-  char *attachment;\n+  const char *attachment;\n   int left = get_remote_packet_size ();\n   int len, attachment_len;\n   int read_len;\n@@ -12445,7 +12445,7 @@ remote_target::fileio_fstat (int fd, struct stat *st, int *remote_errno)\n   char *p = rs->buf.data ();\n   int left = get_remote_packet_size ();\n   int attachment_len, ret;\n-  char *attachment;\n+  const char *attachment;\n   struct fio_stat fst;\n   int read_len;\n "
    }
  ]
}