{
  "sha": "3d97994549706f8f65fe9726b1fec1f0d643f822",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Q5Nzk5NDU0OTcwNmY4ZjY1ZmU5NzI2YjFmZWMxZjBkNjQzZjgyMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-10T03:18:31Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-11T22:49:03Z"
    },
    "message": "Re-apply the current layout when resizing\n\nThe TUI has separate code for each possible layout to handle the case\nwhere the terminal window is resized.  With the new layout code, this\ncan all be replaced with a call to tui_apply_current_layout, which\nsimply re-applies the current layout.\n\nThis results in some small differences in behavior when resizing, so\nsome tests are updated.\n\ngdb/ChangeLog\n2019-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-win.c (tui_resize_all): Remove code, call\n\ttui_apply_current_layout.\n\ngdb/testsuite/ChangeLog\n2019-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.tui/resize.exp: Update.\n\t* gdb.tui/empty.exp (layouts): Update.\n\nChange-Id: I3dc6c02a753d495d9ab5e8213d550a147198ce6f",
    "tree": {
      "sha": "5c38046e9f2fbefd88bdfb55c38172d1c57c545b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5c38046e9f2fbefd88bdfb55c38172d1c57c545b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d97994549706f8f65fe9726b1fec1f0d643f822",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d97994549706f8f65fe9726b1fec1f0d643f822",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d97994549706f8f65fe9726b1fec1f0d643f822",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d97994549706f8f65fe9726b1fec1f0d643f822/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2192a9d3b31a595eb7add928221d49334f32c06d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2192a9d3b31a595eb7add928221d49334f32c06d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2192a9d3b31a595eb7add928221d49334f32c06d"
    }
  ],
  "stats": {
    "total": 130,
    "additions": 19,
    "deletions": 111
  },
  "files": [
    {
      "sha": "22cebfb2f7a1b1c92b1cdfba7808c9c260278229",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3d97994549706f8f65fe9726b1fec1f0d643f822",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-win.c (tui_resize_all): Remove code, call\n+\ttui_apply_current_layout.\n+\n 2019-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.h (tui_apply_current_layout): Declare."
    },
    {
      "sha": "cf3fcb7b9b08fbfb9477704dc24bec485f05e299",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3d97994549706f8f65fe9726b1fec1f0d643f822",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.tui/resize.exp: Update.\n+\t* gdb.tui/empty.exp (layouts): Update.\n+\n 2019-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.tui/regs.exp: Update."
    },
    {
      "sha": "d0d827094ebc46f2edb40f11da8bab9dd030a5f6",
      "filename": "gdb/testsuite/gdb.tui/empty.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/testsuite/gdb.tui/empty.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/testsuite/gdb.tui/empty.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/empty.exp?ref=3d97994549706f8f65fe9726b1fec1f0d643f822",
      "patch": "@@ -32,28 +32,28 @@ if {![Term::enter_tui]} {\n # 4. List of boxes in 90x40 mode\n # 5. List of test name and text for the empty window\n set layouts {\n-    {src src {{0 0 80 15}} {{0 0 90 23}}\n+    {src src {{0 0 80 15}} {{0 0 90 26}}\n \t{{\"no source\" \"No Source Available\"}}}\n-    {regs src-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n+    {regs src-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 13} {0 12 90 13}}\n \t{\n \t    {\"no source\" \"No Source Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}\n \t}}\n-    {asm asm {{0 0 80 15}} {{0 0 90 23}}\n+    {asm asm {{0 0 80 13}} {{0 0 90 26}}\n \t{\n \t    {\"no asm\" \"No Assembly Available\"}\n \t}}\n-    {regs asm-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n+    {regs asm-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 13} {0 12 90 13}}\n \t{\n \t    {\"no asm\" \"No Assembly Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}\n \t}}\n-    {split split {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n+    {split split {{0 0 80 6} {0 5 80 8}} {{0 0 90 13} {0 12 90 13}}\n \t{\n \t    {\"no source\" \"No Source Available\"}\n \t    {\"no asm\" \"No Assembly Available\"}\n \t}}\n-    {regs split-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n+    {regs split-regs {{0 0 80 6} {0 5 80 8}} {{0 0 90 13} {0 12 90 13}}\n \t{\n \t    {\"no asm\" \"No Assembly Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}"
    },
    {
      "sha": "c5302799ea50ae6c28e5aed68d642e22720e4e76",
      "filename": "gdb/testsuite/gdb.tui/resize.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/testsuite/gdb.tui/resize.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/testsuite/gdb.tui/resize.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/resize.exp?ref=3d97994549706f8f65fe9726b1fec1f0d643f822",
      "patch": "@@ -37,4 +37,4 @@ if {![Term::enter_tui]} {\n Term::check_contents \"source at startup\" \">|21 *return 0\"\n \n Term::resize 40 90\n-Term::check_box \"source box after resize\" 0 0 90 23\n+Term::check_box \"source box after resize\" 0 0 90 26"
    },
    {
      "sha": "199f3bafc21f95a246ad23ee883e084e84453691",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 2,
      "deletions": 104,
      "changes": 106,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d97994549706f8f65fe9726b1fec1f0d643f822/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=3d97994549706f8f65fe9726b1fec1f0d643f822",
      "patch": "@@ -536,13 +536,7 @@ tui_resize_all (void)\n   height_diff = screenheight - tui_term_height ();\n   if (height_diff || width_diff)\n     {\n-      enum tui_layout_type cur_layout = tui_current_layout ();\n       struct tui_win_info *win_with_focus = tui_win_with_focus ();\n-      struct tui_win_info *first_win;\n-      struct tui_win_info *second_win;\n-      tui_source_window_base *src_win;\n-      struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-      int new_height, split_diff, cmd_split_diff, num_wins_displayed = 2;\n \n #ifdef HAVE_RESIZE_TERM\n       resize_term (screenheight, screenwidth);\n@@ -553,108 +547,12 @@ tui_resize_all (void)\n       tui_update_gdb_sizes ();\n       tui_set_term_height_to (screenheight);\n       tui_set_term_width_to (screenwidth);\n-      if (cur_layout == SRC_DISASSEM_COMMAND \n-\t  || cur_layout == SRC_DATA_COMMAND\n-\t  || cur_layout == DISASSEM_DATA_COMMAND)\n-\tnum_wins_displayed++;\n-      split_diff = height_diff / num_wins_displayed;\n-      cmd_split_diff = split_diff;\n-      if (height_diff % num_wins_displayed)\n-\t{\n-\t  if (height_diff < 0)\n-\t    cmd_split_diff--;\n-\t  else\n-           cmd_split_diff++;\n-       }\n-      /* Now adjust each window.  */\n+\n       /* erase + clearok are used instead of a straightforward clear as\n          AIX 5.3 does not define clear.  */\n       erase ();\n       clearok (curscr, TRUE);\n-      switch (cur_layout)\n-       {\n-\tcase SRC_COMMAND:\n-\tcase DISASSEM_COMMAND:\n-\t  src_win = *(tui_source_windows ().begin ());\n-\t  /* Check for invalid heights.  */\n-\t  if (height_diff == 0)\n-\t    new_height = src_win->height;\n-\t  else if ((src_win->height + split_diff) >=\n-\t\t   (screenheight - MIN_CMD_WIN_HEIGHT - 1))\n-\t    new_height = screenheight - MIN_CMD_WIN_HEIGHT - 1;\n-\t  else if ((src_win->height + split_diff) <= 0)\n-\t    new_height = MIN_WIN_HEIGHT;\n-\t  else\n-\t    new_height = src_win->height + split_diff;\n-\n-\t  src_win->resize (new_height, screenwidth, 0, 0);\n-\n-\t  locator->resize (1, screenwidth, 0, new_height);\n-\n-\t  new_height = screenheight - (new_height + 1);\n-\t  TUI_CMD_WIN->resize (new_height, screenwidth,\n-\t\t\t       0, locator->y + 1);\n-\t  break;\n-\tdefault:\n-\t  if (cur_layout == SRC_DISASSEM_COMMAND)\n-\t    {\n-\t      src_win = TUI_SRC_WIN;\n-\t      first_win = src_win;\n-\t      second_win = TUI_DISASM_WIN;\n-\t    }\n-\t  else\n-\t    {\n-\t      first_win = TUI_DATA_WIN;\n-\t      src_win = *(tui_source_windows ().begin ());\n-\t      second_win = src_win;\n-\t    }\n-\t  /* Change the first window's height/width.  */\n-\t  /* Check for invalid heights.  */\n-\t  if (height_diff == 0)\n-\t    new_height = first_win->height;\n-\t  else if ((first_win->height +\n-\t\t    second_win->height + (split_diff * 2)) >=\n-\t\t   (screenheight - MIN_CMD_WIN_HEIGHT - 1))\n-\t    new_height = (screenheight - MIN_CMD_WIN_HEIGHT - 1) / 2;\n-\t  else if ((first_win->height + split_diff) <= 0)\n-\t    new_height = MIN_WIN_HEIGHT;\n-\t  else\n-\t    new_height = first_win->height + split_diff;\n-\n-\t  first_win->resize (new_height, screenwidth, 0, 0);\n-\n-\t  /* Change the second window's height/width.  */\n-\t  /* Check for invalid heights.  */\n-\t  if (height_diff == 0)\n-\t    new_height = second_win->height;\n-\t  else if ((first_win->height +\n-\t\t    second_win->height + (split_diff * 2)) >=\n-\t\t   (screenheight - MIN_CMD_WIN_HEIGHT - 1))\n-\t    {\n-\t      new_height = screenheight - MIN_CMD_WIN_HEIGHT - 1;\n-\t      if (new_height % 2)\n-\t\tnew_height = (new_height / 2) + 1;\n-\t      else\n-\t\tnew_height /= 2;\n-\t    }\n-\t  else if ((second_win->height + split_diff) <= 0)\n-\t    new_height = MIN_WIN_HEIGHT;\n-\t  else\n-\t    new_height = second_win->height + split_diff;\n-\n-\t  second_win->resize (new_height, screenwidth,\n-\t\t\t      0, first_win->height - 1);\n-\n-\t  locator->resize (1, screenwidth,\n-\t\t\t   0, second_win->y + new_height);\n-\n-\t  /* Change the command window's height/width.  */\n-\t  new_height = screenheight - (locator->y + 1);\n-\t  TUI_CMD_WIN->resize (new_height, screenwidth,\n-\t\t\t       0, locator->y + 1);\n-\t  break;\n-\t}\n-\n+      tui_apply_current_layout ();\n       tui_delete_invisible_windows ();\n       /* Turn keypad back on, unless focus is in the command\n \t window.  */"
    }
  ]
}