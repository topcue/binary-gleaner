{
  "sha": "8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODgzM2ZiZjA1YzViOTNmYjNjY2Y2NjZkNWEzYmQwZTUxZTc1ZDFiZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-02T16:30:49Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-02T16:32:06Z"
    },
    "message": "Style improvements in gdb/python\n\nThis fixes a few minor style issues I found in gdb/python: some\nunnecessary casts, the removal of an unnecessary local variable, and\none instance of incorrect formatting.\n\nTested by rebuilding and re-running gdb.python.\n\ngdb/ChangeLog\n2019-01-02  Tom Tromey  <tom@tromey.com>\n\n\t* python/py-inferior.c (gdbpy_initialize_inferior): Fix\n\tindentation.\n\t* python/py-frame.c (frapy_older): Remove cast.\n\t(frapy_newer): Likewise.\n\t* python/py-breakpoint.c (local_setattro): Remove cast.\n\t* python/py-arch.c (archpy_name): Remove local variable.\n\t* python/py-type.c (gdbpy_lookup_type): Remove cast.",
    "tree": {
      "sha": "5799abeec2743c0c13cc9f8f3cb3e11492162c83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5799abeec2743c0c13cc9f8f3cb3e11492162c83"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4ada3dfd5c07f0f1045a721a28fc905918ffbdfd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ada3dfd5c07f0f1045a721a28fc905918ffbdfd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4ada3dfd5c07f0f1045a721a28fc905918ffbdfd"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 17,
    "deletions": 10
  },
  "files": [
    {
      "sha": "23503ae515b8df957a2e9632fbf35bd87aedfdfb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
      "patch": "@@ -1,3 +1,13 @@\n+2019-01-02  Tom Tromey  <tom@tromey.com>\n+\n+\t* python/py-inferior.c (gdbpy_initialize_inferior): Fix\n+\tindentation.\n+\t* python/py-frame.c (frapy_older): Remove cast.\n+\t(frapy_newer): Likewise.\n+\t* python/py-breakpoint.c (local_setattro): Remove cast.\n+\t* python/py-arch.c (archpy_name): Remove local variable.\n+\t* python/py-type.c (gdbpy_lookup_type): Remove cast.\n+\n 2019-01-02  Joel Brobecker  <brobecker@adacore.com>\n \n \t* unittests/basic_string_view/element_access/char/empty.cc:"
    },
    {
      "sha": "cbdd8818732dd51a10d936a1d19f1fcdfd08cb9c",
      "filename": "gdb/python/py-arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-arch.c?ref=8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
      "patch": "@@ -97,14 +97,11 @@ archpy_name (PyObject *self, PyObject *args)\n {\n   struct gdbarch *gdbarch = NULL;\n   const char *name;\n-  PyObject *py_name;\n \n   ARCHPY_REQUIRE_VALID (self, gdbarch);\n \n   name = (gdbarch_bfd_arch_info (gdbarch))->printable_name;\n-  py_name = PyString_FromString (name);\n-\n-  return py_name;\n+  return PyString_FromString (name);\n }\n \n /* Implementation of"
    },
    {
      "sha": "f41d88dbf51560c07b57cb36622b7f0f74539c51",
      "filename": "gdb/python/py-breakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-breakpoint.c?ref=8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
      "patch": "@@ -1196,7 +1196,7 @@ local_setattro (PyObject *self, PyObject *name, PyObject *v)\n \t}\n     }\n \n-  return PyObject_GenericSetAttr ((PyObject *)self, name, v);\n+  return PyObject_GenericSetAttr (self, name, v);\n }\n \n static gdb_PyGetSetDef breakpoint_object_getset[] = {"
    },
    {
      "sha": "88a50e73e2abef080cba9a95083db105bb1dc51f",
      "filename": "gdb/python/py-frame.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-frame.c?ref=8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
      "patch": "@@ -416,7 +416,7 @@ frapy_older (PyObject *self, PyObject *args)\n   END_CATCH\n \n   if (prev)\n-    prev_obj = (PyObject *) frame_info_to_frame_object (prev);\n+    prev_obj = frame_info_to_frame_object (prev);\n   else\n     {\n       Py_INCREF (Py_None);\n@@ -449,7 +449,7 @@ frapy_newer (PyObject *self, PyObject *args)\n   END_CATCH\n \n   if (next)\n-    next_obj = (PyObject *) frame_info_to_frame_object (next);\n+    next_obj = frame_info_to_frame_object (next);\n   else\n     {\n       Py_INCREF (Py_None);"
    },
    {
      "sha": "b1b9e947ae8de107141dd46ea42fa2f46c137b9c",
      "filename": "gdb/python/py-inferior.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-inferior.c?ref=8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
      "patch": "@@ -958,8 +958,8 @@ gdbpy_initialize_inferior (void)\n   if (PyType_Ready (&membuf_object_type) < 0)\n     return -1;\n \n-  return gdb_pymodule_addobject (gdb_module, \"Membuf\", (PyObject *)\n-\t\t\t\t &membuf_object_type);\n+  return gdb_pymodule_addobject (gdb_module, \"Membuf\",\n+\t\t\t\t (PyObject *) &membuf_object_type);\n }\n \n static gdb_PyGetSetDef inferior_object_getset[] ="
    },
    {
      "sha": "88770fcc9f392923f381a66e0cc9f2cf984dbcfd",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=8833fbf05c5b93fb3ccf666d5a3bd0e51e75d1bd",
      "patch": "@@ -1402,7 +1402,7 @@ gdbpy_lookup_type (PyObject *self, PyObject *args, PyObject *kw)\n   if (! type)\n     return NULL;\n \n-  return (PyObject *) type_to_type_object (type);\n+  return type_to_type_object (type);\n }\n \n int"
    }
  ]
}