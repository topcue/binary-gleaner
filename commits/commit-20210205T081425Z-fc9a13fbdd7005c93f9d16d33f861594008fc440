{
  "sha": "fc9a13fbdd7005c93f9d16d33f861594008fc440",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmM5YTEzZmJkZDcwMDVjOTNmOWQxNmQzM2Y4NjE1OTQwMDhmYzQ0MA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-02-05T08:14:25Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-02-05T08:14:25Z"
    },
    "message": "[gdb/symtab] Fix indentation in create_cus_from_debug_names_list\n\nFix indentation in !map.augmentation_is_gdb part of\ncreate_cus_from_debug_names_list.\n\ngdb/ChangeLog:\n\n2021-02-05  Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf2/read.c (create_cus_from_debug_names_list): Fix indentation.",
    "tree": {
      "sha": "639c02531996d3e9d5898ab82d3a2780f9e52612",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/639c02531996d3e9d5898ab82d3a2780f9e52612"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc9a13fbdd7005c93f9d16d33f861594008fc440",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc9a13fbdd7005c93f9d16d33f861594008fc440",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc9a13fbdd7005c93f9d16d33f861594008fc440",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc9a13fbdd7005c93f9d16d33f861594008fc440/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "887854bae4a3b7b1edc0b2f75a2781a8c31ba805",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/887854bae4a3b7b1edc0b2f75a2781a8c31ba805",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/887854bae4a3b7b1edc0b2f75a2781a8c31ba805"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 21,
    "deletions": 15
  },
  "files": [
    {
      "sha": "75584a794b165876a6c201e48815e441eb912541",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc9a13fbdd7005c93f9d16d33f861594008fc440/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc9a13fbdd7005c93f9d16d33f861594008fc440/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fc9a13fbdd7005c93f9d16d33f861594008fc440",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-05  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf2/read.c (create_cus_from_debug_names_list): Fix indentation.\n+\n 2021-02-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.tgt (riscv*-*-*): Set gdb_sim."
    },
    {
      "sha": "eb058510867322e4d6035a5a1f218aa182892c59",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 17,
      "deletions": 15,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc9a13fbdd7005c93f9d16d33f861594008fc440/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc9a13fbdd7005c93f9d16d33f861594008fc440/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=fc9a13fbdd7005c93f9d16d33f861594008fc440",
      "patch": "@@ -5333,21 +5333,23 @@ create_cus_from_debug_names_list (dwarf2_per_bfd *per_bfd,\n {\n   if (!map.augmentation_is_gdb)\n     {\n-    for (uint32_t i = 0; i < map.cu_count; ++i)\n-      {\n-\tsect_offset sect_off\n-\t  = (sect_offset) (extract_unsigned_integer\n-\t\t\t   (map.cu_table_reordered + i * map.offset_size,\n-\t\t\t    map.offset_size,\n-\t\t\t    map.dwarf5_byte_order));\n-\t/* We don't know the length of the CU, because the CU list in a\n-\t   .debug_names index can be incomplete, so we can't use the start of\n-\t   the next CU as end of this CU.  We create the CUs here with length 0,\n-\t   and in cutu_reader::cutu_reader we'll fill in the actual length.  */\n-\tdwarf2_per_cu_data *per_cu\n-\t  = create_cu_from_index_list (per_bfd, &section, is_dwz, sect_off, 0);\n-\tper_bfd->all_comp_units.push_back (per_cu);\n-      }\n+      for (uint32_t i = 0; i < map.cu_count; ++i)\n+\t{\n+\t  sect_offset sect_off\n+\t    = (sect_offset) (extract_unsigned_integer\n+\t\t\t     (map.cu_table_reordered + i * map.offset_size,\n+\t\t\t      map.offset_size,\n+\t\t\t      map.dwarf5_byte_order));\n+\t  /* We don't know the length of the CU, because the CU list in a\n+\t     .debug_names index can be incomplete, so we can't use the start\n+\t     of the next CU as end of this CU.  We create the CUs here with\n+\t     length 0, and in cutu_reader::cutu_reader we'll fill in the\n+\t     actual length.  */\n+\t  dwarf2_per_cu_data *per_cu\n+\t    = create_cu_from_index_list (per_bfd, &section, is_dwz,\n+\t\t\t\t\t sect_off, 0);\n+\t  per_bfd->all_comp_units.push_back (per_cu);\n+\t}\n     }\n \n   sect_offset sect_off_prev;"
    }
  ]
}