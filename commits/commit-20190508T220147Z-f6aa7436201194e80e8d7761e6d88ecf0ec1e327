{
  "sha": "f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjZhYTc0MzYyMDExOTRlODBlOGQ3NzYxZTZkODhlY2YwZWMxZTMyNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-21T15:29:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:47Z"
    },
    "message": "Convert objfiles.c to type-safe registry API\n\nThis changes objfiles.c to use the type-safe registry API.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* objfiles.c (objfile_pspace_info): Add destructor and\n\tinitializers.\n\t(objfiles_pspace_data): Change type.\n\t(~objfile_pspace_info): Rename from objfiles_pspace_data_cleanup.\n\t(get_objfile_pspace_data): Update.\n\t(objfiles_bfd_data): Change type.\n\t(get_objfile_bfd_data): Update.\n\t(objfile_bfd_data_free, _initialize_objfiles): Remove.",
    "tree": {
      "sha": "9a747fecb5fee40026adab6124838f1de46a696e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9a747fecb5fee40026adab6124838f1de46a696e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f6aa7436201194e80e8d7761e6d88ecf0ec1e327/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6ae614f66a0a86c9e83b9f40ee1f4e105b681f7b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ae614f66a0a86c9e83b9f40ee1f4e105b681f7b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6ae614f66a0a86c9e83b9f40ee1f4e105b681f7b"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 28,
    "deletions": 42
  },
  "files": [
    {
      "sha": "f57dc4fd2f1eadae473882370ae1d870b093907a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6aa7436201194e80e8d7761e6d88ecf0ec1e327/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6aa7436201194e80e8d7761e6d88ecf0ec1e327/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
      "patch": "@@ -1,3 +1,14 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* objfiles.c (objfile_pspace_info): Add destructor and\n+\tinitializers.\n+\t(objfiles_pspace_data): Change type.\n+\t(~objfile_pspace_info): Rename from objfiles_pspace_data_cleanup.\n+\t(get_objfile_pspace_data): Update.\n+\t(objfiles_bfd_data): Change type.\n+\t(get_objfile_bfd_data): Update.\n+\t(objfile_bfd_data_free, _initialize_objfiles): Remove.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* break-catch-syscall.c (catch_syscall_inferior_data): Move."
    },
    {
      "sha": "b59db591d9fa73f9c8a23af337c0cf32e1846bfb",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 17,
      "deletions": 42,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f6aa7436201194e80e8d7761e6d88ecf0ec1e327/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f6aa7436201194e80e8d7761e6d88ecf0ec1e327/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=f6aa7436201194e80e8d7761e6d88ecf0ec1e327",
      "patch": "@@ -66,30 +66,30 @@ DEFINE_REGISTRY (objfile, REGISTRY_ACCESS_FIELD)\n \n struct objfile_pspace_info\n {\n-  struct obj_section **sections;\n-  int num_sections;\n+  objfile_pspace_info () = default;\n+  ~objfile_pspace_info ();\n+\n+  struct obj_section **sections = nullptr;\n+  int num_sections = 0;\n \n   /* Nonzero if object files have been added since the section map\n      was last updated.  */\n-  int new_objfiles_available;\n+  int new_objfiles_available = 0;\n \n   /* Nonzero if the section map MUST be updated before use.  */\n-  int section_map_dirty;\n+  int section_map_dirty = 0;\n \n   /* Nonzero if section map updates should be inhibited if possible.  */\n-  int inhibit_updates;\n+  int inhibit_updates = 0;\n };\n \n /* Per-program-space data key.  */\n-static const struct program_space_data *objfiles_pspace_data;\n+static const struct program_space_key<objfile_pspace_info>\n+  objfiles_pspace_data;\n \n-static void\n-objfiles_pspace_data_cleanup (struct program_space *pspace, void *arg)\n+objfile_pspace_info::~objfile_pspace_info ()\n {\n-  struct objfile_pspace_info *info = (struct objfile_pspace_info *) arg;\n-\n-  xfree (info->sections);\n-  xfree (info);\n+  xfree (sections);\n }\n \n /* Get the current svr4 data.  If none is found yet, add it now.  This\n@@ -100,13 +100,9 @@ get_objfile_pspace_data (struct program_space *pspace)\n {\n   struct objfile_pspace_info *info;\n \n-  info = ((struct objfile_pspace_info *)\n-\t  program_space_data (pspace, objfiles_pspace_data));\n+  info = objfiles_pspace_data.get (pspace);\n   if (info == NULL)\n-    {\n-      info = XCNEW (struct objfile_pspace_info);\n-      set_program_space_data (pspace, objfiles_pspace_data, info);\n-    }\n+    info = objfiles_pspace_data.emplace (pspace);\n \n   return info;\n }\n@@ -115,7 +111,7 @@ get_objfile_pspace_data (struct program_space *pspace)\n \n /* Per-BFD data key.  */\n \n-static const struct bfd_data *objfiles_bfd_data;\n+static const struct bfd_key<objfile_per_bfd_storage> objfiles_bfd_data;\n \n objfile_per_bfd_storage::~objfile_per_bfd_storage ()\n {\n@@ -133,8 +129,7 @@ get_objfile_bfd_data (struct objfile *objfile, struct bfd *abfd)\n   struct objfile_per_bfd_storage *storage = NULL;\n \n   if (abfd != NULL)\n-    storage = ((struct objfile_per_bfd_storage *)\n-\t       bfd_data (abfd, objfiles_bfd_data));\n+    storage = objfiles_bfd_data.get (abfd);\n \n   if (storage == NULL)\n     {\n@@ -143,7 +138,7 @@ get_objfile_bfd_data (struct objfile *objfile, struct bfd *abfd)\n \t back to not sharing data across users.  These cases are rare\n \t enough that this seems reasonable.  */\n       if (abfd != NULL && !gdb_bfd_requires_relocations (abfd))\n-\tset_bfd_data (abfd, objfiles_bfd_data, storage);\n+\tobjfiles_bfd_data.set (abfd, storage);\n \n       /* Look up the gdbarch associated with the BFD.  */\n       if (abfd != NULL)\n@@ -153,15 +148,6 @@ get_objfile_bfd_data (struct objfile *objfile, struct bfd *abfd)\n   return storage;\n }\n \n-/* A deleter for objfile_per_bfd_storage that can be passed as a\n-   cleanup function to the BFD registry.  */\n-\n-static void\n-objfile_bfd_data_free (struct bfd *unused, void *d)\n-{\n-  delete (struct objfile_per_bfd_storage *) d;\n-}\n-\n /* See objfiles.h.  */\n \n void\n@@ -1511,14 +1497,3 @@ objfile_flavour_name (struct objfile *objfile)\n     return bfd_flavour_name (bfd_get_flavour (objfile->obfd));\n   return NULL;\n }\n-\n-void\n-_initialize_objfiles (void)\n-{\n-  objfiles_pspace_data\n-    = register_program_space_data_with_cleanup (NULL,\n-\t\t\t\t\t\tobjfiles_pspace_data_cleanup);\n-\n-  objfiles_bfd_data = register_bfd_data_with_cleanup (NULL,\n-\t\t\t\t\t\t      objfile_bfd_data_free);\n-}"
    }
  ]
}