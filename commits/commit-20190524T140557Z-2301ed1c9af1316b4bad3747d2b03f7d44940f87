{
  "sha": "2301ed1c9af1316b4bad3747d2b03f7d44940f87",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjMwMWVkMWM5YWYxMzE2YjRiYWQzNzQ3ZDJiMDNmN2Q0NDk0MGY4Nw==",
  "commit": {
    "author": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2019-04-25T12:46:01Z"
    },
    "committer": {
      "name": "Szabolcs Nagy",
      "email": "szabolcs.nagy@arm.com",
      "date": "2019-05-24T14:05:57Z"
    },
    "message": "aarch64: add STO_AARCH64_VARIANT_PCS and DT_AARCH64_VARIANT_PCS\n\nThe bottom 2 bits of st_other are used for visibility, the top 6 bits are\nde facto reserved for processor specific use.  This patch defines a\nbits to mark function symbols that follow a variant procedure call standard\nwith different register usage convention.\n\nA dynamic tag is also defined that marks modules with R_<CLS>_JUMP_SLOT\nrelocations referencing symbols marked with STO_AARCH64_VARIANT_PCS.\nThis can be used by dynamic linkers that support lazy binding to decide\nwhat registers need to be preserved during symbol resolution.\n\nbinutils/ChangeLog:\n\n\t* readelf.c (get_aarch64_dynamic_type): Handle DT_AARCH64_VARIANT_PCS.\n\t(get_aarch64_symbol_other): New, handles STO_AARCH64_VARIANT_PCS.\n\t(get_symbol_other): Call get_aarch64_symbol_other.\n\ninclude/ChangeLog:\n\n\t* elf/aarch64.h (DT_AARCH64_VARIANT_PCS): Define.\n\t(STO_AARCH64_VARIANT_PCS): Define.",
    "tree": {
      "sha": "d0e4b1ec3ada8b6d28fc4ec5e53df73c46c26b1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d0e4b1ec3ada8b6d28fc4ec5e53df73c46c26b1c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2301ed1c9af1316b4bad3747d2b03f7d44940f87",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2301ed1c9af1316b4bad3747d2b03f7d44940f87",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2301ed1c9af1316b4bad3747d2b03f7d44940f87",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2301ed1c9af1316b4bad3747d2b03f7d44940f87/comments",
  "author": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nsz-arm",
    "id": 30925343,
    "node_id": "MDQ6VXNlcjMwOTI1MzQz",
    "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nsz-arm",
    "html_url": "https://github.com/nsz-arm",
    "followers_url": "https://api.github.com/users/nsz-arm/followers",
    "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/nsz-arm/orgs",
    "repos_url": "https://api.github.com/users/nsz-arm/repos",
    "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nsz-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "405b5bd86fbcfa9ad5e67e9cdc49dfcdaacf533c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/405b5bd86fbcfa9ad5e67e9cdc49dfcdaacf533c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/405b5bd86fbcfa9ad5e67e9cdc49dfcdaacf533c"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 36,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ef9fa5ac712a2c42124d626abf83a65cc71f09d1",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2301ed1c9af1316b4bad3747d2b03f7d44940f87/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2301ed1c9af1316b4bad3747d2b03f7d44940f87/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=2301ed1c9af1316b4bad3747d2b03f7d44940f87",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* readelf.c (get_aarch64_dynamic_type): Handle DT_AARCH64_VARIANT_PCS.\n+\t(get_aarch64_symbol_other): New, handles STO_AARCH64_VARIANT_PCS.\n+\t(get_symbol_other): Call get_aarch64_symbol_other.\n+\n 2019-05-24  Alan Modra  <amodra@gmail.com>\n \n \t* objdump.c (disassemble_bytes): Set WIDE_OUTPUT in flags."
    },
    {
      "sha": "23ffd8660031b233a42a98a9e9b3e2aff4b052ae",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2301ed1c9af1316b4bad3747d2b03f7d44940f87/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2301ed1c9af1316b4bad3747d2b03f7d44940f87/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=2301ed1c9af1316b4bad3747d2b03f7d44940f87",
      "patch": "@@ -1810,6 +1810,7 @@ get_aarch64_dynamic_type (unsigned long type)\n     {\n     case DT_AARCH64_BTI_PLT:  return \"AARCH64_BTI_PLT\";\n     case DT_AARCH64_PAC_PLT:  return \"AARCH64_PAC_PLT\";\n+    case DT_AARCH64_VARIANT_PCS:  return \"AARCH64_VARIANT_PCS\";\n     default:\n       return NULL;\n     }\n@@ -11101,6 +11102,22 @@ get_solaris_symbol_visibility (unsigned int visibility)\n     }\n }\n \n+static const char *\n+get_aarch64_symbol_other (unsigned int other)\n+{\n+  static char buf[32];\n+\n+  if (other & STO_AARCH64_VARIANT_PCS)\n+    {\n+      other &= ~STO_AARCH64_VARIANT_PCS;\n+      if (other == 0)\n+\treturn \"VARIANT_PCS\";\n+      snprintf (buf, sizeof buf, \"VARIANT_PCS | %x\", other);\n+      return buf;\n+    }\n+  return NULL;\n+}\n+\n static const char *\n get_mips_symbol_other (unsigned int other)\n {\n@@ -11212,6 +11229,9 @@ get_symbol_other (Filedata * filedata, unsigned int other)\n \n   switch (filedata->file_header.e_machine)\n     {\n+    case EM_AARCH64:\n+      result = get_aarch64_symbol_other (other);\n+      break;\n     case EM_MIPS:\n       result = get_mips_symbol_other (other);\n       break;"
    },
    {
      "sha": "4132bfec3d33a16ee9cd371c2108931f69c5510f",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2301ed1c9af1316b4bad3747d2b03f7d44940f87/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2301ed1c9af1316b4bad3747d2b03f7d44940f87/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=2301ed1c9af1316b4bad3747d2b03f7d44940f87",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n+\n+\t* elf/aarch64.h (DT_AARCH64_VARIANT_PCS): Define.\n+\t(STO_AARCH64_VARIANT_PCS): Define.\n+\n 2019-05-24  Alan Modra  <amodra@gmail.com>\n \n \t* elf/ppc64.h (R_PPC64_PLTSEQ_NOTOC, R_PPC64_PLTCALL_NOTOC),"
    },
    {
      "sha": "721378abf864ed98047d75475863d057c713b31e",
      "filename": "include/elf/aarch64.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2301ed1c9af1316b4bad3747d2b03f7d44940f87/include/elf/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2301ed1c9af1316b4bad3747d2b03f7d44940f87/include/elf/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/aarch64.h?ref=2301ed1c9af1316b4bad3747d2b03f7d44940f87",
      "patch": "@@ -38,6 +38,11 @@\n /* Processor specific dynamic array tags.  */\n #define DT_AARCH64_BTI_PLT\t(DT_LOPROC + 1)\n #define DT_AARCH64_PAC_PLT\t(DT_LOPROC + 3)\n+#define DT_AARCH64_VARIANT_PCS\t(DT_LOPROC + 5)\n+\n+/* AArch64-specific values for st_other.  */\n+#define STO_AARCH64_VARIANT_PCS\t0x80  /* Symbol may follow different call\n+\t\t\t\t\t convention from the base PCS.  */\n \n /* Relocation types.  */\n "
    }
  ]
}