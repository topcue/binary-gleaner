{
  "sha": "f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjIxYzJiZDdiN2VmMmE5YzQ3ZTU3MTNjYWJhYTc4NGJjZjVjMmJlZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-13T17:39:58Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-19T16:32:03Z"
    },
    "message": "Fix Fortran regression with variables in nested functions\n\nSergio pointed out that commit commit aa3b6533 (\"Allow nested function\ndisplays\") regressed a few gdb.fortran tests.  I was able to reproduce\nthese failures with gcc head.\n\nThe bug is that some spots calling contained_in will in fact do the\nwrong thing if nested functions are considered as contained.  In the\nparticular case of the Fortran regression, it was the call in\nblock_innermost_frame, being called from get_hosting_frame -- in this\ncase, the caller is specifically trying to avoid the nested case.\n\nThis patch fixes the problem by adding an \"allow_nested\" parameter to\ncontained_in, essentially reverting the change for most callers.\n\ngdb/ChangeLog\n2019-08-19  Tom Tromey  <tromey@adacore.com>\n\n\t* printcmd.c (do_one_display, info_display_command): Update.\n\t* block.h (contained_in): Return bool.  Add allow_nested\n\tparameter.\n\t* block.c (contained_in): Return bool.  Add allow_nested\n\tparameter.",
    "tree": {
      "sha": "b59e02ba87703ec277f2f63dbc1e6b617d3b6b92",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b59e02ba87703ec277f2f63dbc1e6b617d3b6b92"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d806ea2d0ef362fcddd2c1659f537b68aa114203",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d806ea2d0ef362fcddd2c1659f537b68aa114203",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d806ea2d0ef362fcddd2c1659f537b68aa114203"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 31,
    "deletions": 11
  },
  "files": [
    {
      "sha": "6c9b2e0a22c347191d1a693ef9f192d5b0a2c1c0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-19  Tom Tromey  <tromey@adacore.com>\n+\n+\t* printcmd.c (do_one_display, info_display_command): Update.\n+\t* block.h (contained_in): Return bool.  Add allow_nested\n+\tparameter.\n+\t* block.c (contained_in): Return bool.  Add allow_nested\n+\tparameter.\n+\n 2019-08-19  Tom Tromey  <tom@tromey.com>\n \n \t* configure: Rebuild."
    },
    {
      "sha": "ca4dc22cf306657408bd6c8d50d5cc4040ee980b",
      "filename": "gdb/block.c",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/block.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/block.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/block.c?ref=f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
      "patch": "@@ -65,25 +65,28 @@ block_gdbarch (const struct block *block)\n   return get_objfile_arch (block_objfile (block));\n }\n \n-/* Return Nonzero if block a is lexically nested within block b,\n-   or if a and b have the same pc range.\n-   Return zero otherwise.  */\n+/* See block.h.  */\n \n-int\n-contained_in (const struct block *a, const struct block *b)\n+bool\n+contained_in (const struct block *a, const struct block *b,\n+\t      bool allow_nested)\n {\n   if (!a || !b)\n-    return 0;\n+    return false;\n \n   do\n     {\n       if (a == b)\n-\treturn 1;\n+\treturn true;\n+      /* If A is a function block, then A cannot be contained in B,\n+         except if A was inlined.  */\n+      if (!allow_nested && BLOCK_FUNCTION (a) != NULL && !block_inlined_p (a))\n+        return false;\n       a = BLOCK_SUPERBLOCK (a);\n     }\n   while (a != NULL);\n \n-  return 0;\n+  return true;\n }\n \n "
    },
    {
      "sha": "4c02e01d9064543a7329bbc7459c26d1b83cd5ce",
      "filename": "gdb/block.h",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/block.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/block.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/block.h?ref=f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
      "patch": "@@ -219,7 +219,15 @@ extern struct symbol *block_containing_function (const struct block *);\n \n extern int block_inlined_p (const struct block *block);\n \n-extern int contained_in (const struct block *, const struct block *);\n+/* Return true if block A is lexically nested within block B, or if a\n+   and b have the same pc range.  Return false otherwise.  If\n+   ALLOW_NESTED is true, then block A is considered to be in block B\n+   if A is in a nested function in B's function.  If ALLOW_NESTED is\n+   false (the default), then blocks in nested functions are not\n+   considered to be contained.  */\n+\n+extern bool contained_in (const struct block *a, const struct block *b,\n+\t\t\t  bool allow_nested = false);\n \n extern const struct blockvector *blockvector_for_pc (CORE_ADDR,\n \t\t\t\t\t       const struct block **);"
    },
    {
      "sha": "9b29b53ca74de2ae643a6e9ed56991ad809ff263",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=f21c2bd7b7ef2a9c47e5713cabaa784bcf5c2bee",
      "patch": "@@ -1936,7 +1936,8 @@ do_one_display (struct display *d)\n   if (d->block)\n     {\n       if (d->pspace == current_program_space)\n-\twithin_current_scope = contained_in (get_selected_block (0), d->block);\n+\twithin_current_scope = contained_in (get_selected_block (0), d->block,\n+\t\t\t\t\t     true);\n       else\n \twithin_current_scope = 0;\n     }\n@@ -2098,7 +2099,7 @@ Num Enb Expression\\n\"));\n       else if (d->format.format)\n \tprintf_filtered (\"/%c \", d->format.format);\n       puts_filtered (d->exp_string);\n-      if (d->block && !contained_in (get_selected_block (0), d->block))\n+      if (d->block && !contained_in (get_selected_block (0), d->block, true))\n \tprintf_filtered (_(\" (cannot be evaluated in the current context)\"));\n       printf_filtered (\"\\n\");\n     }"
    }
  ]
}