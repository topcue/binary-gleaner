{
  "sha": "595915c1c135a77afa01d30a888a48fcc55a08ec",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTk1OTE1YzFjMTM1YTc3YWZhMDFkMzBhODg4YTQ4ZmNjNTVhMDhlYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-20T13:57:09Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-20T17:09:10Z"
    },
    "message": "Merge handle_inferior_event and handle_inferior_event_1\n\nI noticed that handle_inferior_event is just a small wrapper that\nfrees the value chain.  This patch replaces it with a\nscoped_value_mark, reducing the number of lines of code here.\n\nRegression tested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-03-20  Tom Tromey  <tromey@adacore.com>\n\n\t* infrun.c (handle_inferior_event): Rename from\n\thandle_inferior_event_1.  Create a scoped_value_mark.\n\t(handle_inferior_event): Remove.",
    "tree": {
      "sha": "6f00f75289ee8f7139451798022510310c6b6392",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6f00f75289ee8f7139451798022510310c6b6392"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/595915c1c135a77afa01d30a888a48fcc55a08ec",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/595915c1c135a77afa01d30a888a48fcc55a08ec",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/595915c1c135a77afa01d30a888a48fcc55a08ec",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/595915c1c135a77afa01d30a888a48fcc55a08ec/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e946b687baa552034ee57f3c119e56a20961452e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e946b687baa552034ee57f3c119e56a20961452e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e946b687baa552034ee57f3c119e56a20961452e"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 12,
    "deletions": 17
  },
  "files": [
    {
      "sha": "4345e014695f79e329951e65ac5b71a2fb21f263",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595915c1c135a77afa01d30a888a48fcc55a08ec/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595915c1c135a77afa01d30a888a48fcc55a08ec/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=595915c1c135a77afa01d30a888a48fcc55a08ec",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-20  Tom Tromey  <tromey@adacore.com>\n+\n+\t* infrun.c (handle_inferior_event): Rename from\n+\thandle_inferior_event_1.  Create a scoped_value_mark.\n+\t(handle_inferior_event): Remove.\n+\n 2019-03-19  Tom Tromey  <tromey@adacore.com>\n \n \t* mi/mi-interp.c (mi_on_normal_stop_1): Only show displays once."
    },
    {
      "sha": "ad7892105a4b2390c715111a8a6a34b96d376bc8",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 6,
      "deletions": 17,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595915c1c135a77afa01d30a888a48fcc55a08ec/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595915c1c135a77afa01d30a888a48fcc55a08ec/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=595915c1c135a77afa01d30a888a48fcc55a08ec",
      "patch": "@@ -4591,8 +4591,13 @@ handle_no_resumed (struct execution_control_state *ecs)\n    once).  */\n \n static void\n-handle_inferior_event_1 (struct execution_control_state *ecs)\n+handle_inferior_event (struct execution_control_state *ecs)\n {\n+  /* Make sure that all temporary struct value objects that were\n+     created during the handling of the event get deleted at the\n+     end.  */\n+  scoped_value_mark free_values;\n+\n   enum stop_kind stop_soon;\n \n   if (ecs->ws.kind == TARGET_WAITKIND_IGNORE)\n@@ -5189,22 +5194,6 @@ Cannot fill $_exitsignal with the correct signal number.\\n\"));\n     }\n }\n \n-/* A wrapper around handle_inferior_event_1, which also makes sure\n-   that all temporary struct value objects that were created during\n-   the handling of the event get deleted at the end.  */\n-\n-static void\n-handle_inferior_event (struct execution_control_state *ecs)\n-{\n-  struct value *mark = value_mark ();\n-\n-  handle_inferior_event_1 (ecs);\n-  /* Purge all temporary values created during the event handling,\n-     as it could be a long time before we return to the command level\n-     where such values would otherwise be purged.  */\n-  value_free_to_mark (mark);\n-}\n-\n /* Restart threads back to what they were trying to do back when we\n    paused them for an in-line step-over.  The EVENT_THREAD thread is\n    ignored.  */"
    }
  ]
}