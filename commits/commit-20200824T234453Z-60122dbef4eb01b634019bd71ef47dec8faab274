{
  "sha": "60122dbef4eb01b634019bd71ef47dec8faab274",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjAxMjJkYmVmNGViMDFiNjM0MDE5YmQ3MWVmNDdkZWM4ZmFhYjI3NA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-24T23:44:53Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-24T23:44:53Z"
    },
    "message": "gdb/testsuite: make runto always emit a FAIL on internal error\n\nI noticed that when a test uses `runto_main` and a GDB internal error\nhappens while running to main, no error or fail is emitted.  This is\nbecause `runto_main` uses the `no-message` option of `runto`.\n\nAs a result, if a test fails to run to main and exits, no sign that\nsomething went wrong is emitted.  For example, add this always-false\nassertion to compute_frame_id:\n\n    --- a/gdb/frame.c\n    +++ b/gdb/frame.c\n    @@ -545,6 +545,7 @@ static void\n     compute_frame_id (struct frame_info *fi)\n     {\n       gdb_assert (!fi->this_id.p);\n    +  gdb_assert (false);\n\n       if (frame_debug)\n         fprintf_unfiltered (gdb_stdlog, \"{ compute_frame_id (fi=%d) \",\n\n... and run gdb.dwarf2/dw2-align.exp.  No fail or sign that something\nwent wrong is shown.  It just appears as if the test gets skipped.\n\nA developer introducing such a regression in this test today would\nlikely notice it, because we are used to diff-ing test results.  So we\nwould see some PASSes dispappear for no good reason and look into it.\n\nBut I find it worrysome for two reasons:\n\n1. Scripts that analyze regressions (such as the one on the buildbot)\n   may only look for new FAILs or new ERRORs.  It would probably miss\n   this.\n2. Imagine that we one day have a testsuite that runs cleanly (some\n   people might already run subsets of the testsuite and expect it to\n   all pass), we would just run the testsuite and check that there are\n   no fails.  It would be easy to miss something like this.\n\nIn case of internal error, I suggest making `runto` emit a FAIL even if\n`no-message` was passed.  This is different from other failure modes\nthat might be expected (whchi rightfully cause the test to simply be\nskipped).  An internal error is always bad, so if it happens it should\nnoisily fail.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (runto): Always emit fail on internal error.\n\nChange-Id: I6e6faed4868ea821541a23042b2d01c30058b0d3",
    "tree": {
      "sha": "41efea1fbc546fdb429f59216e8ea1267f628157",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41efea1fbc546fdb429f59216e8ea1267f628157"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60122dbef4eb01b634019bd71ef47dec8faab274",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60122dbef4eb01b634019bd71ef47dec8faab274",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60122dbef4eb01b634019bd71ef47dec8faab274",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60122dbef4eb01b634019bd71ef47dec8faab274/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c426fddb87d29034b50c2433e12a08aa23b7fb9f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c426fddb87d29034b50c2433e12a08aa23b7fb9f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c426fddb87d29034b50c2433e12a08aa23b7fb9f"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 7,
    "deletions": 3
  },
  "files": [
    {
      "sha": "b976a54cc51570a3d1c9b2c647e153736c0dc46a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60122dbef4eb01b634019bd71ef47dec8faab274/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60122dbef4eb01b634019bd71ef47dec8faab274/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=60122dbef4eb01b634019bd71ef47dec8faab274",
      "patch": "@@ -1,3 +1,7 @@\n+2020-08-24  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* lib/gdb.exp (runto): Always emit fail on internal error.\n+\n 2020-08-24  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdb.base/gdb-sigterm.exp (do_test): Update expected regexp."
    },
    {
      "sha": "8ff2025b6af0c809d90ebbacc7b1f9ae24526c71",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60122dbef4eb01b634019bd71ef47dec8faab274/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60122dbef4eb01b634019bd71ef47dec8faab274/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=60122dbef4eb01b634019bd71ef47dec8faab274",
      "patch": "@@ -652,9 +652,9 @@ proc runto { function args } {\n \t    return 0\n \t}\n \t-re \".*A problem internal to GDB has been detected\" {\n-\t    if { $print_fail } {\n-\t\tfail \"$test_name (GDB internal error)\"\n-\t    }\n+\t    # Always emit a FAIL if we encounter an internal error: internal\n+\t    # errors are never expected.\n+\t    fail \"$test_name (GDB internal error)\"\n \t    gdb_internal_error_resync\n \t    return 0\n \t}"
    }
  ]
}