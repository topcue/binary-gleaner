{
  "sha": "66d055c75479e0c51745fc3b40faec6df7a01620",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjZkMDU1Yzc1NDc5ZTBjNTE3NDVmYzNiNDBmYWVjNmRmN2EwMTYyMA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-23T20:24:27Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-27T02:30:55Z"
    },
    "message": "sim: enable hardware support by default\n\nForce this on for all ports.  We have a few common models that can\nbe used, so make them generally available.  If the port doesn't use\nany hardware (the default), then behavior is unchanged.",
    "tree": {
      "sha": "9eae68aaed1892c02c91fda1c6315899a44d4456",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9eae68aaed1892c02c91fda1c6315899a44d4456"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/66d055c75479e0c51745fc3b40faec6df7a01620",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66d055c75479e0c51745fc3b40faec6df7a01620",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/66d055c75479e0c51745fc3b40faec6df7a01620",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66d055c75479e0c51745fc3b40faec6df7a01620/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3955e3467074a3a6cc243f2af5a29e17aa08ab4e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3955e3467074a3a6cc243f2af5a29e17aa08ab4e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3955e3467074a3a6cc243f2af5a29e17aa08ab4e"
    }
  ],
  "stats": {
    "total": 2779,
    "additions": 2659,
    "deletions": 120
  },
  "files": [
    {
      "sha": "51ca4926c733bf452ac22e84b732ae04e64d0fe7",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* m4/sim_ac_output.m4 (SIM_AC_OUTPUT): Require SIM_AC_OPTION_HARDWARE.\n+\n 2021-04-23  Mike Frysinger  <vapier@gentoo.org>\n \n \t* README-HACKING (SIM_AC_OPTION_HARDWARE): Delete first two args."
    },
    {
      "sha": "23736d6b842d96a3c9afb8c1cd38c74455b48de1",
      "filename": "sim/aarch64/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/aarch64/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/aarch64/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "1d6a498f02033c350f75521b53f92676ae23375f",
      "filename": "sim/aarch64/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/aarch64/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12034,6 +12037,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "c466deb6fefc485694ebea46a7336f431a455fef",
      "filename": "sim/arm/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-26  Nick Clifton  <nickc@redhat.com>\n \n \tPR 22790"
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/arm/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/arm/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "8cabf9261bffdcff1a8d3882ba65af82da0cde00",
      "filename": "sim/arm/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/arm/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "9c53284bcfc1b6b700a161215aac70e5d13d7fd1",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/avr/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/avr/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "5c43b2964dfe81036d3f381a96aba15e54f3b1d6",
      "filename": "sim/avr/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/avr/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "e5e223122bc2e224c8e2f63bc4990b108d36a9b3",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "e1659b4fa6a50fb1fdcb9ceb943e55f6344b5932",
      "filename": "sim/bpf/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -118,6 +118,7 @@ m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/bpf/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "32b4a77529e0561f8a2417e06ad4ba00e85e937c",
      "filename": "sim/bpf/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/bpf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_float\n cgen_breaks\n cgen\n@@ -758,6 +755,9 @@ WERROR_CFLAGS\n WARN_CFLAGS\n sim_scache\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_default_model\n sim_bitsize\n@@ -792,6 +792,7 @@ enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n enable_cgen_maint\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1457,6 +1458,8 @@ Optional Features:\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11196,7 +11199,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11199 \"configure\"\n+#line 11202 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11302,7 +11305,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11305 \"configure\"\n+#line 11308 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12167,6 +12170,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "2540c3734715aadf7820c8673e2f58ef4dc4f159",
      "filename": "sim/cr16/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* simops.c: Update includes."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/cr16/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/cr16/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "b0d92cef4ab4a2a3a79757d5faa5e93a17556ab3",
      "filename": "sim/cr16/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/cr16/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "9945be49a8f502b025ec200b43ba84d0151da601",
      "filename": "sim/d10v/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/d10v/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/d10v/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "3daef523520120dc2b19260f596224d9c5b6a09c",
      "filename": "sim/d10v/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/d10v/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "a6d1cad82342b95581507d2a157db79202c2a9d3",
      "filename": "sim/erc32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "ed052697cd9edabca5799ff125f2bf7424474c75",
      "filename": "sim/erc32/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -113,6 +113,7 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/erc32/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "a884ee7d2eaf015e4c3c0a8d203f3ef60ad535c2",
      "filename": "sim/erc32/configure",
      "status": "modified",
      "additions": 110,
      "deletions": 6,
      "changes": 116,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/erc32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -761,7 +758,10 @@ PATH_SEPARATOR\n SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n-sim_inline'\n+sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -786,6 +786,7 @@ with_bugurl\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1440,6 +1441,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11179,7 +11182,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11182 \"configure\"\n+#line 11185 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11285,7 +11288,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11288 \"configure\"\n+#line 11291 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12072,6 +12075,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "886509303d151879ea0e3d4b3bb62bf133d14ceb",
      "filename": "sim/example-synacor/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/example-synacor/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/example-synacor/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "a5938bef338f03c91fef8f547aeeddd8b3ff944d",
      "filename": "sim/example-synacor/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/example-synacor/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "645239900f328b36e9cd92d6a37030ef0715e6ff",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-04-23  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete arguments."
    },
    {
      "sha": "921f6221f6b5f9dc863676d873b99b23703fd8bc",
      "filename": "sim/frv/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/frv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/frv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -12231,7 +12231,6 @@ fi\n fi\n \n \n-\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "e5bbdbfba22815675b86746fc470ddf6ebaffb63",
      "filename": "sim/frv/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/frv/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/frv/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure.ac?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -27,6 +27,4 @@ if test x\"$silent\" != x\"yes\" && test x\"$sim_trapdump\" != x\"\"; then\n fi],[sim_trapdump=\"\"])dnl\n AC_SUBST(sim_trapdump)\n \n-SIM_AC_OPTION_HARDWARE\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "6a2643622c8911c733f6f58c0f799f4ef6e48513",
      "filename": "sim/ft32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/ft32/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/ft32/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "d80f8f82e18059a752c7e1dc353cc512686573a5",
      "filename": "sim/ft32/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/ft32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "c3daaf4d7959eb86d459a6a044f35a845ba2eafa",
      "filename": "sim/h8300/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/h8300/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "505aa8cf5f9323b599e294746d114dc239a25db6",
      "filename": "sim/h8300/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "fd7bc25b626628759454b3ab2877c51d2985b012",
      "filename": "sim/h8300/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/h8300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11184,7 +11187,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11187 \"configure\"\n+#line 11190 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11290,7 +11293,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11293 \"configure\"\n+#line 11296 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12032,6 +12035,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "ffb7ab9da54d779bad063b2e4cabd683c20515f8",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-04-23  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure.ac (SIM_AC_OPTION_HARDWARE): Delete arguments."
    },
    {
      "sha": "0607bc6db7ffa5ea3c79872cce7cf6fb3c597c9d",
      "filename": "sim/iq2000/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/iq2000/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/iq2000/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -12210,7 +12210,6 @@ fi\n fi\n \n \n-\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "623fa192d74bb23298f72bda571ebe81269092e3",
      "filename": "sim/iq2000/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/iq2000/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/iq2000/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure.ac?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -11,6 +11,4 @@ SIM_AC_OPTION_DEFAULT_MODEL(iq2000)\n SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_CGEN_MAINT\n \n-SIM_AC_OPTION_HARDWARE\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "c2991c60f86fc59db0a8e20ba744438d707c1941",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "ed052697cd9edabca5799ff125f2bf7424474c75",
      "filename": "sim/m32c/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -113,6 +113,7 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "3b33610fa42e1a9eac9485f1add214c88c5edb04",
      "filename": "sim/m32c/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "c0fa44f22a19024af8ef0291c8d39779dae291ae",
      "filename": "sim/m32c/configure",
      "status": "modified",
      "additions": 110,
      "deletions": 6,
      "changes": 116,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m32c/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -758,7 +755,10 @@ PATH_SEPARATOR\n SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n-sim_inline'\n+sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -783,6 +783,7 @@ with_bugurl\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1437,6 +1438,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11181,7 +11184,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11184 \"configure\"\n+#line 11187 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11287,7 +11290,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11290 \"configure\"\n+#line 11293 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11946,6 +11949,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "b18f2540f70b9f11df1fe3cd8b46c025e3204f0e",
      "filename": "sim/m4/sim_ac_output.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m4/sim_ac_output.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/m4/sim_ac_output.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m4/sim_ac_output.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -22,6 +22,7 @@ dnl the target's fragment at the appropriate points.\n AC_DEFUN([SIM_AC_OUTPUT],\n [dnl\n AC_REQUIRE([SIM_AC_OPTION_WARNINGS])dnl\n+AC_REQUIRE([SIM_AC_OPTION_HARDWARE])dnl\n \n dnl Make @cgen_breaks@ non-null only if the sim uses CGEN.\n cgen_breaks=\"\""
    },
    {
      "sha": "815cd1a7c693ff15c44b6a5b928178b45f26b836",
      "filename": "sim/mcore/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/mcore/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/mcore/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "afd78ba045799d78ce3b4747e6751b613276c9b2",
      "filename": "sim/mcore/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/mcore/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12027,6 +12030,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "5d6957b71011f7e5aa9abc358d30ed9ef7b067a0",
      "filename": "sim/microblaze/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/microblaze/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/microblaze/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "8cabf9261bffdcff1a8d3882ba65af82da0cde00",
      "filename": "sim/microblaze/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/microblaze/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "3e74d3fbd577eb6d56197f9306da193649eb6f47",
      "filename": "sim/moxie/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/moxie/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/moxie/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "0314c64751757a4a6b8bd1b9d4c8c15480a3c4b6",
      "filename": "sim/moxie/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/moxie/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -758,6 +755,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -786,6 +786,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1445,6 +1446,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11184,7 +11187,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11187 \"configure\"\n+#line 11190 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11290,7 +11293,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11293 \"configure\"\n+#line 11296 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12124,6 +12127,107 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "3d14ecbbd59fd73b2bf4701fb2bb3a29e25cf0b9",
      "filename": "sim/msp430/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/msp430/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/msp430/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "5c43b2964dfe81036d3f381a96aba15e54f3b1d6",
      "filename": "sim/msp430/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/msp430/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "dd34d45653c856c79d95f31cf487d9fa5b5d5167",
      "filename": "sim/or1k/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "e1659b4fa6a50fb1fdcb9ceb943e55f6344b5932",
      "filename": "sim/or1k/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -118,6 +118,7 @@ m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/or1k/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "9e2040e1969c9acbc3d0ebc9d23d03ec5ddc6e7d",
      "filename": "sim/or1k/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/or1k/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_float\n cgen_breaks\n cgen\n@@ -758,6 +755,9 @@ WERROR_CFLAGS\n WARN_CFLAGS\n sim_scache\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_default_model\n sim_bitsize\n@@ -792,6 +792,7 @@ enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n enable_cgen_maint\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1457,6 +1458,8 @@ Optional Features:\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n   --enable-cgen-maint=DIR build cgen generated files\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11196,7 +11199,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11199 \"configure\"\n+#line 11202 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11302,7 +11305,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11305 \"configure\"\n+#line 11308 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12189,6 +12192,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "926fe2dd1ac0886d760ec50014036cc621f2f745",
      "filename": "sim/pru/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/pru/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/pru/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "5c43b2964dfe81036d3f381a96aba15e54f3b1d6",
      "filename": "sim/pru/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/pru/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12030,6 +12033,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "099391332151fb5cd7a76a68348d94b8194f6b56",
      "filename": "sim/riscv/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "9710f3ff176f826948d3030a904f8176e4c9b746",
      "filename": "sim/riscv/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -117,6 +117,7 @@ m4_include([../m4/sim_ac_option_bitsize.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/riscv/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "96f4fff56a66ca6f9ec70428ca1f46ab8fa40049",
      "filename": "sim/riscv/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/riscv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_scache\n sim_float\n cgen_breaks\n@@ -755,6 +752,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_default_model\n sim_bitsize\n@@ -787,6 +787,7 @@ enable_build_warnings\n enable_sim_build_warnings\n enable_sim_default_model\n enable_sim_bitsize\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1449,6 +1450,8 @@ Optional Features:\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11188,7 +11191,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11191 \"configure\"\n+#line 11194 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11294,7 +11297,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11297 \"configure\"\n+#line 11300 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12146,6 +12149,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "4adb625dbf1dcce3e4dd48235b59919ed6590d5f",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "ed052697cd9edabca5799ff125f2bf7424474c75",
      "filename": "sim/rl78/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -113,6 +113,7 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/rl78/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "0a612701e3a8fbc0dd92646c277a75ebd1bb05f0",
      "filename": "sim/rl78/configure",
      "status": "modified",
      "additions": 110,
      "deletions": 6,
      "changes": 116,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rl78/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -758,7 +755,10 @@ PATH_SEPARATOR\n SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n-sim_inline'\n+sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -783,6 +783,7 @@ with_bugurl\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1437,6 +1438,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11176,7 +11179,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11179 \"configure\"\n+#line 11182 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11282,7 +11285,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11285 \"configure\"\n+#line 11288 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11928,6 +11931,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "fbc8516152833fc363c2e846df742689386031c7",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "ed052697cd9edabca5799ff125f2bf7424474c75",
      "filename": "sim/rx/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -113,6 +113,7 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "7cb68b3f535bb4db755a830917bb4286ec646c7c",
      "filename": "sim/rx/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -19,6 +19,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -34,6 +37,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "e227982e361cd43fa6e86f5dc63f70d253bd717a",
      "filename": "sim/rx/configure",
      "status": "modified",
      "additions": 110,
      "deletions": 6,
      "changes": 116,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/rx/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -758,7 +755,10 @@ PATH_SEPARATOR\n SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n-sim_inline'\n+sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -785,6 +785,7 @@ enable_cycle_stats\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1442,6 +1443,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11181,7 +11184,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11184 \"configure\"\n+#line 11187 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11287,7 +11290,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11290 \"configure\"\n+#line 11293 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11973,6 +11976,107 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "d89fe2802f48917a4eb24052ad6311391ca2dc42",
      "filename": "sim/sh/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* interp.c: Update includes."
    },
    {
      "sha": "4300d0eac67d57c5e742a36ababf4a81a6d927a1",
      "filename": "sim/sh/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -115,6 +115,7 @@ m4_include([../m4/sim_ac_option_alignment.m4])\n m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])\n m4_include([../m4/sim_ac_output.m4])"
    },
    {
      "sha": "8d37b72597d95f4deeb5d51f3d8fc9fb6bbf0ab7",
      "filename": "sim/sh/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -13,6 +13,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the <fcntl.h> header file. */\n #undef HAVE_FCNTL_H\n \n@@ -28,6 +31,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "afd78ba045799d78ce3b4747e6751b613276c9b2",
      "filename": "sim/sh/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/sh/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -634,9 +634,6 @@ ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -757,6 +754,9 @@ SHELL\n WERROR_CFLAGS\n WARN_CFLAGS\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_alignment'\n ac_subst_files=''\n@@ -785,6 +785,7 @@ enable_sim_alignment\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1444,6 +1445,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11183,7 +11186,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11186 \"configure\"\n+#line 11189 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11289,7 +11292,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11292 \"configure\"\n+#line 11295 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12027,6 +12030,107 @@ fi\n \n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "d46aa599e9fc7216995ececfa560bc12482d35a8",
      "filename": "sim/v850/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-26  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* aclocal.m4, config.in, configure: Regenerate.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "02c11131338a000c815b2e8c87a86b29d60d39ed",
      "filename": "sim/v850/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/aclocal.m4?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -116,6 +116,7 @@ m4_include([../m4/sim_ac_option_assert.m4])\n m4_include([../m4/sim_ac_option_bitsize.m4])\n m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_environment.m4])\n+m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_reserved_bits.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "8249d7cbd87134b39bf32fa17e7f428bc1a4800f",
      "filename": "sim/v850/config.in",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/config.in?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -19,6 +19,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define if dv-sockser is usable. */\n+#undef HAVE_DV_SOCKSER\n+\n /* Define to 1 if you have the `execv' function. */\n #undef HAVE_EXECV\n \n@@ -43,6 +46,9 @@\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n \n+/* Define to 1 if you have the `m' library (-lm). */\n+#undef HAVE_LIBM\n+\n /* Define to 1 if you have the `nsl' library (-lnsl). */\n #undef HAVE_LIBNSL\n "
    },
    {
      "sha": "d5941decb1eb23d2b756da4ea2a22eff3238c929",
      "filename": "sim/v850/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 5,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d055c75479e0c51745fc3b40faec6df7a01620/sim/v850/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure?ref=66d055c75479e0c51745fc3b40faec6df7a01620",
      "patch": "@@ -633,9 +633,6 @@ ac_header_list=\n ac_func_list=\n ac_subst_vars='LTLIBOBJS\n LIBOBJS\n-sim_hw\n-sim_hw_objs\n-sim_hw_cflags\n sim_default_model\n sim_scache\n sim_float\n@@ -756,6 +753,9 @@ WERROR_CFLAGS\n WARN_CFLAGS\n sim_reserved_bits\n sim_inline\n+sim_hw\n+sim_hw_objs\n+sim_hw_cflags\n sim_endian\n sim_bitsize\n sim_alignment'\n@@ -787,6 +787,7 @@ enable_sim_bitsize\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n+enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1450,6 +1451,8 @@ Optional Features:\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11196,7 +11199,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11199 \"configure\"\n+#line 11202 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11302,7 +11305,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11305 \"configure\"\n+#line 11308 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12135,6 +12138,107 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n+hardware=\"cfi core pal glue \"\n+sim_hw_cflags=\"-DWITH_HW=1\"\n+sim_hw=\"$hardware\"\n+sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS) `echo $sim_hw | sed -e 's/\\([^ ][^ ]*\\)/dv-\\1.o/g'`\"\n+\n+# Check whether --enable-sim-hardware was given.\n+if test \"${enable_sim_hardware+set}\" = set; then :\n+  enableval=$enable_sim_hardware;\n+else\n+  enable_sim_hardware=\"yes\"\n+fi\n+\n+case ${enable_sim_hardware} in\n+  yes|no) ;;\n+  ,*) hardware=\"${hardware} `echo ${enableval} | sed -e 's/,/ /'`\";;\n+  *,) hardware=\"`echo ${enableval} | sed -e 's/,/ /'` ${hardware}\";;\n+  *)  hardware=\"`echo ${enableval} | sed -e 's/,/ /'`\"'';;\n+esac\n+\n+if test \"$enable_sim_hardware\" = no; then\n+  sim_hw_objs=\n+  sim_hw_cflags=\"-DWITH_HW=0\"\n+  sim_hw=\n+else\n+  sim_hw_cflags=\"-DWITH_HW=1\"\n+  # remove duplicates\n+  sim_hw=\"\"\n+  sim_hw_objs=\"\\$(SIM_COMMON_HW_OBJS)\"\n+  for i in $hardware ; do\n+    case \" $sim_hw \" in\n+      *\" $i \"*) ;;\n+      *) sim_hw=\"$sim_hw $i\" ; sim_hw_objs=\"$sim_hw_objs dv-$i.o\";;\n+    esac\n+  done\n+  # mingw does not support sockser\n+  case ${host} in\n+    *mingw*) ;;\n+    *) # TODO: We don't add dv-sockser to sim_hw as it is not a \"real\" device\n+       # that you instatiate.  Instead, other code will call into it directly.\n+       # At some point, we should convert it over.\n+       sim_hw_objs=\"$sim_hw_objs dv-sockser.o\"\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DV_SOCKSER 1\n+_ACEOF\n+\n+       ;;\n+  esac\n+  if test x\"$silent\" != x\"yes\"; then\n+    echo \"Setting hardware to $sim_hw_cflags, $sim_hw, $sim_hw_objs\"\n+  fi\n+    case \" $hardware \" in\n+    *\" cfi \"*) { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for log2 in -lm\" >&5\n+$as_echo_n \"checking for log2 in -lm... \" >&6; }\n+if ${ac_cv_lib_m_log2+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char log2 ();\n+int\n+main ()\n+{\n+return log2 ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_log2=yes\n+else\n+  ac_cv_lib_m_log2=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_log2\" >&5\n+$as_echo \"$ac_cv_lib_m_log2\" >&6; }\n+if test \"x$ac_cv_lib_m_log2\" = xyes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBM 1\n+_ACEOF\n+\n+  LIBS=\"-lm $LIBS\"\n+\n+fi\n+;;\n+  esac\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    }
  ]
}