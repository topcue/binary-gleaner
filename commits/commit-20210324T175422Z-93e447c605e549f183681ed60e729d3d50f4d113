{
  "sha": "93e447c605e549f183681ed60e729d3d50f4d113",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTNlNDQ3YzYwNWU1NDlmMTgzNjgxZWQ2MGU3MjlkM2Q1MGY0ZDExMw==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-12-30T13:46:11Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-03-24T17:54:22Z"
    },
    "message": "Convert char array to std::string in linux_find_memory_regions_full\n\nThis is a quick cleanup that removes the use of fixed-length char arrays and\nuses std::string instead.\n\ngdb/ChangeLog:\n\n2021-03-24  Luis Machado  <luis.machado@linaro.org>\n\n\t* linux-tdep.c (linux_find_memory_regions_full): Use std::string\n\tinstead of char arrays.",
    "tree": {
      "sha": "166e38a03d22d886cb773d3b42fe1384d9243fa9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/166e38a03d22d886cb773d3b42fe1384d9243fa9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/93e447c605e549f183681ed60e729d3d50f4d113",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93e447c605e549f183681ed60e729d3d50f4d113",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/93e447c605e549f183681ed60e729d3d50f4d113",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93e447c605e549f183681ed60e729d3d50f4d113/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4601818e8c06bb8a5bf4b63fa527c69d3f81c6f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4601818e8c06bb8a5bf4b63fa527c69d3f81c6f0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4601818e8c06bb8a5bf4b63fa527c69d3f81c6f0"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 19,
    "deletions": 11
  },
  "files": [
    {
      "sha": "da4bb26c21c9218989d0e2eb006442ce6e6184e3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/93e447c605e549f183681ed60e729d3d50f4d113/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/93e447c605e549f183681ed60e729d3d50f4d113/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=93e447c605e549f183681ed60e729d3d50f4d113",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-24  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* linux-tdep.c (linux_find_memory_regions_full): Use std::string\n+\tinstead of char arrays.\n+\n 2021-03-24  Luis Machado  <luis.machado@linaro.org>\n \n \t* Makefile.in (ALL_64_TARGET_OBS): Add arch/aarch64-mte-linux.o."
    },
    {
      "sha": "17ed9cac8a739b250872e0f32b804782dc39b5e5",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 14,
      "deletions": 11,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/93e447c605e549f183681ed60e729d3d50f4d113/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/93e447c605e549f183681ed60e729d3d50f4d113/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=93e447c605e549f183681ed60e729d3d50f4d113",
      "patch": "@@ -1279,8 +1279,6 @@ linux_find_memory_regions_full (struct gdbarch *gdbarch,\n \t\t\t\tlinux_find_memory_region_ftype *func,\n \t\t\t\tvoid *obfd)\n {\n-  char mapsfilename[100];\n-  char coredumpfilter_name[100];\n   pid_t pid;\n   /* Default dump behavior of coredump_filter (0x33), according to\n      Documentation/filesystems/proc.txt from the Linux kernel\n@@ -1298,10 +1296,12 @@ linux_find_memory_regions_full (struct gdbarch *gdbarch,\n \n   if (use_coredump_filter)\n     {\n-      xsnprintf (coredumpfilter_name, sizeof (coredumpfilter_name),\n-\t\t \"/proc/%d/coredump_filter\", pid);\n+      std::string core_dump_filter_name\n+\t= string_printf (\"/proc/%d/coredump_filter\", pid);\n+\n       gdb::unique_xmalloc_ptr<char> coredumpfilterdata\n-\t= target_fileio_read_stralloc (NULL, coredumpfilter_name);\n+\t= target_fileio_read_stralloc (NULL, core_dump_filter_name.c_str ());\n+\n       if (coredumpfilterdata != NULL)\n \t{\n \t  unsigned int flags;\n@@ -1311,14 +1311,16 @@ linux_find_memory_regions_full (struct gdbarch *gdbarch,\n \t}\n     }\n \n-  xsnprintf (mapsfilename, sizeof mapsfilename, \"/proc/%d/smaps\", pid);\n+  std::string maps_filename = string_printf (\"/proc/%d/smaps\", pid);\n+\n   gdb::unique_xmalloc_ptr<char> data\n-    = target_fileio_read_stralloc (NULL, mapsfilename);\n+    = target_fileio_read_stralloc (NULL, maps_filename.c_str ());\n+\n   if (data == NULL)\n     {\n       /* Older Linux kernels did not support /proc/PID/smaps.  */\n-      xsnprintf (mapsfilename, sizeof mapsfilename, \"/proc/%d/maps\", pid);\n-      data = target_fileio_read_stralloc (NULL, mapsfilename);\n+      maps_filename = string_printf (\"/proc/%d/maps\", pid);\n+      data = target_fileio_read_stralloc (NULL, maps_filename.c_str ());\n     }\n \n   if (data != NULL)\n@@ -1378,7 +1380,8 @@ linux_find_memory_regions_full (struct gdbarch *gdbarch,\n \n \t      if (sscanf (line, \"%64s\", keyword) != 1)\n \t\t{\n-\t\t  warning (_(\"Error parsing {s,}maps file '%s'\"), mapsfilename);\n+\t\t  warning (_(\"Error parsing {s,}maps file '%s'\"),\n+\t\t\t   maps_filename.c_str ());\n \t\t  break;\n \t\t}\n \n@@ -1399,7 +1402,7 @@ linux_find_memory_regions_full (struct gdbarch *gdbarch,\n \t\t  if (sscanf (line, \"%*s%lu\", &number) != 1)\n \t\t    {\n \t\t      warning (_(\"Error parsing {s,}maps file '%s' number\"),\n-\t\t\t       mapsfilename);\n+\t\t\t       maps_filename.c_str ());\n \t\t      break;\n \t\t    }\n \t\t  if (number > 0)"
    }
  ]
}