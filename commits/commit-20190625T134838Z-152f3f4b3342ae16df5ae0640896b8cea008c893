{
  "sha": "152f3f4b3342ae16df5ae0640896b8cea008c893",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTUyZjNmNGIzMzQyYWUxNmRmNWFlMDY0MDg5NmI4Y2VhMDA4Yzg5Mw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T22:35:31Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:38Z"
    },
    "message": "Introduce tui_gen_win_info::name method\n\nThis removes tui_win_name and replaces it with a method on\ntui_gen_win_info, removing another spot that switched on window type.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-win.c (window_name_completer, tui_set_focus)\n\t(tui_all_windows_info): Use name method.\n\t* tui/tui-data.h (struct tui_gen_win_info)\n\t(struct tui_source_window, struct tui_disasm_window)\n\t(struct tui_data_window, struct tui_cmd_window) <name>: New\n\tmethod.\n\t(tui_win_name): Don't declare.\n\t* tui/tui-data.c (tui_partial_win_by_name): Use name method.\n\t(tui_win_name): Remove.",
    "tree": {
      "sha": "b057f41be67f8879cf0c2664098a2192e543925b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b057f41be67f8879cf0c2664098a2192e543925b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/152f3f4b3342ae16df5ae0640896b8cea008c893",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/152f3f4b3342ae16df5ae0640896b8cea008c893",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/152f3f4b3342ae16df5ae0640896b8cea008c893",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/152f3f4b3342ae16df5ae0640896b8cea008c893/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be4da58857ee4a26b7e58893211ea4f54922e8fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be4da58857ee4a26b7e58893211ea4f54922e8fd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/be4da58857ee4a26b7e58893211ea4f54922e8fd"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 43,
    "deletions": 35
  },
  "files": [
    {
      "sha": "fd95f6e2e2d54bf290e74a58ea539ebde0e0bce5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=152f3f4b3342ae16df5ae0640896b8cea008c893",
      "patch": "@@ -1,3 +1,15 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-win.c (window_name_completer, tui_set_focus)\n+\t(tui_all_windows_info): Use name method.\n+\t* tui/tui-data.h (struct tui_gen_win_info)\n+\t(struct tui_source_window, struct tui_disasm_window)\n+\t(struct tui_data_window, struct tui_cmd_window) <name>: New\n+\tmethod.\n+\t(tui_win_name): Don't declare.\n+\t* tui/tui-data.c (tui_partial_win_by_name): Use name method.\n+\t(tui_win_name): Remove.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (tui_update_source_window)"
    },
    {
      "sha": "79990b8a0d68538dafbcc07a02c325567bc51c06",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 1,
      "deletions": 30,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=152f3f4b3342ae16df5ae0640896b8cea008c893",
      "patch": "@@ -337,7 +337,7 @@ tui_partial_win_by_name (const char *name)\n \t{\n           if (tui_win_list[i] != 0)\n             {\n-              const char *cur_name = tui_win_name (tui_win_list[i]);\n+              const char *cur_name = tui_win_list[i]->name ();\n \n               if (strlen (name) <= strlen (cur_name)\n \t\t  && startswith (cur_name, name))\n@@ -351,35 +351,6 @@ tui_partial_win_by_name (const char *name)\n }\n \n \n-/* Answer the name of the window.  */\n-const char *\n-tui_win_name (const struct tui_gen_win_info *win_info)\n-{\n-  const char *name = NULL;\n-\n-  switch (win_info->type)\n-    {\n-    case SRC_WIN:\n-      name = SRC_NAME;\n-      break;\n-    case CMD_WIN:\n-      name = CMD_NAME;\n-      break;\n-    case DISASSEM_WIN:\n-      name = DISASSEM_NAME;\n-      break;\n-    case DATA_WIN:\n-      name = DATA_NAME;\n-      break;\n-    default:\n-      name = \"\";\n-      break;\n-    }\n-\n-  return name;\n-}\n-\n-\n void\n tui_initialize_static_data (void)\n {"
    },
    {
      "sha": "d977c5776251464b5d3a97ff75c1900d041846b0",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 26,
      "deletions": 1,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=152f3f4b3342ae16df5ae0640896b8cea008c893",
      "patch": "@@ -51,6 +51,12 @@ struct tui_gen_win_info\n   /* Call to refresh this window.  */\n   virtual void refresh_window ();\n \n+  /* Return the name of this type of window.  */\n+  virtual const char *name () const\n+  {\n+    return \"\";\n+  }\n+\n   /* Window handle.  */\n   WINDOW *handle = nullptr;\n   /* Type of window.  */\n@@ -383,6 +389,11 @@ struct tui_source_window : public tui_source_window_base\n \n   DISABLE_COPY_AND_ASSIGN (tui_source_window);\n \n+  const char *name () const override\n+  {\n+    return SRC_NAME;\n+  }\n+\n protected:\n \n   void do_scroll_vertical (enum tui_scroll_direction,\n@@ -400,6 +411,11 @@ struct tui_disasm_window : public tui_source_window_base\n \n   DISABLE_COPY_AND_ASSIGN (tui_disasm_window);\n \n+  const char *name () const override\n+  {\n+    return DISASSEM_NAME;\n+  }\n+\n protected:\n \n   void do_scroll_vertical (enum tui_scroll_direction,\n@@ -423,6 +439,11 @@ struct tui_data_window : public tui_win_info\n \n   void refresh_window () override;\n \n+  const char *name () const override\n+  {\n+    return DATA_NAME;\n+  }\n+\n   /* Start of data display content.  */\n   tui_win_content data_content = NULL;\n   int data_content_count = 0;\n@@ -465,6 +486,11 @@ struct tui_cmd_window : public tui_win_info\n   {\n   }\n \n+  const char *name () const override\n+  {\n+    return CMD_NAME;\n+  }\n+\n   int start_line = 0;\n \n protected:\n@@ -502,7 +528,6 @@ extern void tui_free_win_content (struct tui_gen_win_info *);\n extern void tui_free_data_content (tui_win_content, int);\n extern void tui_free_all_source_wins_content (void);\n extern struct tui_win_info *tui_partial_win_by_name (const char *);\n-extern const char *tui_win_name (const struct tui_gen_win_info *);\n extern enum tui_layout_type tui_current_layout (void);\n extern void tui_set_current_layout_to (enum tui_layout_type);\n extern int tui_term_height (void);"
    },
    {
      "sha": "33dcb3b2f6ccd49e5d46809ac794165b71af93b1",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/152f3f4b3342ae16df5ae0640896b8cea008c893/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=152f3f4b3342ae16df5ae0640896b8cea008c893",
      "patch": "@@ -376,7 +376,7 @@ window_name_completer (completion_tracker &tracker,\n \t  || !tui_win_list[win_type]->is_visible)\n \tcontinue;\n \n-      completion_name = tui_win_name (tui_win_list [win_type]);\n+      completion_name = tui_win_list[win_type]->name ();\n       gdb_assert (completion_name != NULL);\n       completion_name_vec.push_back (completion_name);\n     }\n@@ -869,7 +869,7 @@ The window name specified must be valid and visible.\\n\"));\n \tTUI_DATA_WIN->refresh_all ();\n       xfree (buf_ptr);\n       printf_filtered (_(\"Focus set to %s window.\\n\"),\n-\t\t       tui_win_name (tui_win_with_focus ()));\n+\t\t       tui_win_with_focus ()->name ());\n     }\n   else\n     warning (_(\"Incorrect Number of Arguments.\\n%s\"), FOCUS_USAGE);\n@@ -896,11 +896,11 @@ tui_all_windows_info (const char *arg, int from_tty)\n       {\n \tif (win_with_focus == tui_win_list[type])\n \t  printf_filtered (\"        %s\\t(%d lines)  <has focus>\\n\",\n-\t\t\t   tui_win_name (tui_win_list[type]),\n+\t\t\t   tui_win_list[type]->name (),\n \t\t\t   tui_win_list[type]->height);\n \telse\n \t  printf_filtered (\"        %s\\t(%d lines)\\n\",\n-\t\t\t   tui_win_name (tui_win_list[type]),\n+\t\t\t   tui_win_list[type]->name (),\n \t\t\t   tui_win_list[type]->height);\n       }\n }"
    }
  ]
}