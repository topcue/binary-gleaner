{
  "sha": "677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njc3MDUyZjJhNWM2N2YxZDliMmU2ZDFiMmEyMTQ5YjVmMGMyMGNkMA==",
  "commit": {
    "author": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-05-16T20:23:24Z"
    },
    "committer": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-05-16T20:26:30Z"
    },
    "message": "Make stap-probe.c:stap_parse_register_operand's \"regname\" an std::string\n\nThis patch simplifies the code of\nstap-probe.c:stap_parse_register_operand by making \"regname\" an\nstd::string.  No functionality change.\n\nI'm this code's maintainer, so I'm pushing this as it's a fairly\ntrivial patch.\n\ngdb/ChangeLog:\n2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n\n\t* stap-probe.c (stap_parse_register_operand): Make \"regname\" an\n\t\"std::string\", simplifying the algorithm.",
    "tree": {
      "sha": "26764897d83d8fad0c8fe8fa14383d6603dab988",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/26764897d83d8fad0c8fe8fa14383d6603dab988"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "f3da9116654bb2e899063a0aa9e11c2606b38fff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3da9116654bb2e899063a0aa9e11c2606b38fff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f3da9116654bb2e899063a0aa9e11c2606b38fff"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 17,
    "deletions": 24
  },
  "files": [
    {
      "sha": "2dc91980988a07996041021c3bee4513de4aabd2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n+\n+\t* stap-probe.c (stap_parse_register_operand): Make \"regname\" an\n+\t\"std::string\", simplifying the algorithm.\n+\n 2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* stap-probe.c (handle_stap_probe): Fix complaint formatting."
    },
    {
      "sha": "e5a901b4bf67d5ac6d8b1e678339b815ac9996e9",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 12,
      "deletions": 24,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=677052f2a5c67f1d9b2e6d1b2a2149b5f0c20cd0",
      "patch": "@@ -687,12 +687,8 @@ stap_parse_register_operand (struct stap_parse_info *p)\n   /* Variables used to extract the register name from the probe's\n      argument.  */\n   const char *start;\n-  char *regname;\n-  int len;\n   const char *gdb_reg_prefix = gdbarch_stap_gdb_register_prefix (gdbarch);\n-  int gdb_reg_prefix_len = gdb_reg_prefix ? strlen (gdb_reg_prefix) : 0;\n   const char *gdb_reg_suffix = gdbarch_stap_gdb_register_suffix (gdbarch);\n-  int gdb_reg_suffix_len = gdb_reg_suffix ? strlen (gdb_reg_suffix) : 0;\n   const char *reg_prefix;\n   const char *reg_ind_prefix;\n   const char *reg_suffix;\n@@ -753,37 +749,29 @@ stap_parse_register_operand (struct stap_parse_info *p)\n   while (isalnum (*p->arg))\n     ++p->arg;\n \n-  len = p->arg - start;\n-\n-  regname = (char *) alloca (len + gdb_reg_prefix_len + gdb_reg_suffix_len + 1);\n-  regname[0] = '\\0';\n+  std::string regname (start, p->arg - start);\n \n   /* We only add the GDB's register prefix/suffix if we are dealing with\n      a numeric register.  */\n-  if (gdb_reg_prefix && isdigit (*start))\n+  if (isdigit (*start))\n     {\n-      strncpy (regname, gdb_reg_prefix, gdb_reg_prefix_len);\n-      strncpy (regname + gdb_reg_prefix_len, start, len);\n-\n-      if (gdb_reg_suffix)\n-\tstrncpy (regname + gdb_reg_prefix_len + len,\n-\t\t gdb_reg_suffix, gdb_reg_suffix_len);\n+      if (gdb_reg_prefix != NULL)\n+\tregname = gdb_reg_prefix + regname;\n \n-      len += gdb_reg_prefix_len + gdb_reg_suffix_len;\n+      if (gdb_reg_suffix != NULL)\n+\tregname += gdb_reg_suffix;\n     }\n-  else\n-    strncpy (regname, start, len);\n-\n-  regname[len] = '\\0';\n \n   /* Is this a valid register name?  */\n-  if (user_reg_map_name_to_regnum (gdbarch, regname, len) == -1)\n+  if (user_reg_map_name_to_regnum (gdbarch,\n+\t\t\t\t   regname.c_str (),\n+\t\t\t\t   regname.size ()) == -1)\n     error (_(\"Invalid register name `%s' on expression `%s'.\"),\n-\t   regname, p->saved_arg);\n+\t   regname.c_str (), p->saved_arg);\n \n   write_exp_elt_opcode (&p->pstate, OP_REGISTER);\n-  str.ptr = regname;\n-  str.length = len;\n+  str.ptr = regname.c_str ();\n+  str.length = regname.size ();\n   write_exp_string (&p->pstate, str);\n   write_exp_elt_opcode (&p->pstate, OP_REGISTER);\n "
    }
  ]
}