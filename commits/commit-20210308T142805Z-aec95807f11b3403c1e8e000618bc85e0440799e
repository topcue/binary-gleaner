{
  "sha": "aec95807f11b3403c1e8e000618bc85e0440799e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWVjOTU4MDdmMTFiMzQwM2MxZThlMDAwNjE4YmM4NWUwNDQwNzk5ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:05Z"
    },
    "message": "Split out eval_op_type\n\nThis splits OP_TYPE into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_type): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "ed4caafc97f6ed99fd37c6cf5c1738c3f31ddc08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ed4caafc97f6ed99fd37c6cf5c1738c3f31ddc08"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aec95807f11b3403c1e8e000618bc85e0440799e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aec95807f11b3403c1e8e000618bc85e0440799e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aec95807f11b3403c1e8e000618bc85e0440799e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aec95807f11b3403c1e8e000618bc85e0440799e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a220ead5d47c7a026fa164004390fc477df63ebe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a220ead5d47c7a026fa164004390fc477df63ebe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a220ead5d47c7a026fa164004390fc477df63ebe"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 20,
    "deletions": 6
  },
  "files": [
    {
      "sha": "9bafa322e8fdc4927de8b74560be25dba020785e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aec95807f11b3403c1e8e000618bc85e0440799e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aec95807f11b3403c1e8e000618bc85e0440799e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=aec95807f11b3403c1e8e000618bc85e0440799e",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_type): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_postdec): New function."
    },
    {
      "sha": "e62f9e5dba4dea8b54b0c155ddb0a97a4f93ad7e",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aec95807f11b3403c1e8e000618bc85e0440799e/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aec95807f11b3403c1e8e000618bc85e0440799e/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=aec95807f11b3403c1e8e000618bc85e0440799e",
      "patch": "@@ -2039,6 +2039,20 @@ eval_op_postdec (struct type *expect_type, struct expression *exp,\n     }\n }\n \n+/* A helper function for OP_TYPE.  */\n+\n+static struct value *\n+eval_op_type (struct type *expect_type, struct expression *exp,\n+\t      enum noside noside, struct type *type)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return allocate_value (type);\n+  else\n+    error (_(\"Attempt to use a type name as an expression\"));\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2994,12 +3008,7 @@ evaluate_subexp_standard (struct type *expect_type,\n       /* The value is not supposed to be used.  This is here to make it\n \t easier to accommodate expressions that contain types.  */\n       (*pos) += 2;\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn allocate_value (exp->elts[pc + 1].type);\n-      else\n-\terror (_(\"Attempt to use a type name as an expression\"));\n+      return eval_op_type (expect_type, exp, noside, exp->elts[pc + 1].type);\n \n     case OP_TYPEOF:\n     case OP_DECLTYPE:"
    }
  ]
}