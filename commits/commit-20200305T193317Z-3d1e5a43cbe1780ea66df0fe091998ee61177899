{
  "sha": "3d1e5a43cbe1780ea66df0fe091998ee61177899",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2QxZTVhNDNjYmUxNzgwZWE2NmRmMGZlMDkxOTk4ZWU2MTE3Nzg5OQ==",
  "commit": {
    "author": {
      "name": "Vyacheslav Petrishchev",
      "email": "vyachemail@gmail.com",
      "date": "2020-02-26T06:32:03Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-03-05T19:33:17Z"
    },
    "message": "gdbsupport/configure.ac: source development.sh\n\n[Commit message by Simon Marchi]\n\nThe GDB build in non-development mode (turn development to false in\nbfd/development.sh if you want to try) is currently broken:\n\n      CXXLD  gdb\n    /home/smarchi/src/binutils-gdb/gdb/disasm-selftests.c:218: error: undefined reference to 'selftests::register_test_foreach_arch(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(gdbarch*))'\n    /home/smarchi/src/binutils-gdb/gdb/disasm-selftests.c:220: error: undefined reference to 'selftests::register_test_foreach_arch(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(gdbarch*))'\n    /home/smarchi/src/binutils-gdb/gdb/dwarf2/frame.c:2310: error: undefined reference to 'selftests::register_test_foreach_arch(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(gdbarch*))'\n    /home/smarchi/src/binutils-gdb/gdb/gdbarch-selftests.c:168: error: undefined reference to 'selftests::register_test_foreach_arch(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(gdbarch*))'\n    /home/smarchi/src/binutils-gdb/gdbsupport/selftest.cc:96: error: undefined reference to 'selftests::reset()'\n\nThis is because the gdbsupport configure script doesn't source\nbfd/development.sh to set the development variable.  When $development\nis unset, GDB_AC_SELFTEST defaults to enabling selftests.  I don't think\nthe macro was written with this intention in mind, it just happens to be\nthat way.\n\nSo gdbsupport thinks selftests are enabled, while gdb thinks they are\ndisabled.  gdbsupport compiles in code that calls selftests:: functions,\nwhich are normally provided by gdb, but gdb doesn't provide them, hence\nthe undefined references.\n\nFix this by sourcing bfd/development.sh in gdbsupport/configure.ac, so\nthat the development variable is set.\n\ngdbsupport/ChangeLog:\n\n        * configure.ac: Added call development.sh.\n        * configure: Regenerate.",
    "tree": {
      "sha": "6c9d9991cca2f088309795d46615b3343e5efbde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6c9d9991cca2f088309795d46615b3343e5efbde"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d1e5a43cbe1780ea66df0fe091998ee61177899",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d1e5a43cbe1780ea66df0fe091998ee61177899",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d1e5a43cbe1780ea66df0fe091998ee61177899",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d1e5a43cbe1780ea66df0fe091998ee61177899/comments",
  "author": {
    "login": "vyache76",
    "id": 42069142,
    "node_id": "MDQ6VXNlcjQyMDY5MTQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/42069142?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vyache76",
    "html_url": "https://github.com/vyache76",
    "followers_url": "https://api.github.com/users/vyache76/followers",
    "following_url": "https://api.github.com/users/vyache76/following{/other_user}",
    "gists_url": "https://api.github.com/users/vyache76/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vyache76/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vyache76/subscriptions",
    "organizations_url": "https://api.github.com/users/vyache76/orgs",
    "repos_url": "https://api.github.com/users/vyache76/repos",
    "events_url": "https://api.github.com/users/vyache76/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vyache76/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a8e14f4cc2badfcf959f5e2cc57a941dc43f72d4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8e14f4cc2badfcf959f5e2cc57a941dc43f72d4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a8e14f4cc2badfcf959f5e2cc57a941dc43f72d4"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 11,
    "deletions": 0
  },
  "files": [
    {
      "sha": "6bfd6768727c5538dade3c8b7a2dd5bb0a8bd421",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1e5a43cbe1780ea66df0fe091998ee61177899/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1e5a43cbe1780ea66df0fe091998ee61177899/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=3d1e5a43cbe1780ea66df0fe091998ee61177899",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-05  Vyacheslav Petrishchev  <vyachemail@gmail.com>\n+\n+\t* configure.ac: Added call development.sh.\n+\t* configure: Regenerate.\n+\n 2020-03-05  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* .gitattributes: New file."
    },
    {
      "sha": "e7a99e3ddfba2de630afbf9f390e96a107b8da23",
      "filename": "gdbsupport/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1e5a43cbe1780ea66df0fe091998ee61177899/gdbsupport/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1e5a43cbe1780ea66df0fe091998ee61177899/gdbsupport/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/configure?ref=3d1e5a43cbe1780ea66df0fe091998ee61177899",
      "patch": "@@ -6569,6 +6569,9 @@ fi\n am_cv_prog_cc_stdc=$ac_cv_prog_cc_stdc\n \n \n+# Set the 'development' global.\n+. $srcdir/../bfd/development.sh\n+\n # We require a C++11 compiler.  Check if one is available, and if\n # necessary, set CXX_DIALECT to some -std=xxx switch.\n "
    },
    {
      "sha": "ab71a3cb3665f4f88e529ecac3b752f2c62de00d",
      "filename": "gdbsupport/configure.ac",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1e5a43cbe1780ea66df0fe091998ee61177899/gdbsupport/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1e5a43cbe1780ea66df0fe091998ee61177899/gdbsupport/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/configure.ac?ref=3d1e5a43cbe1780ea66df0fe091998ee61177899",
      "patch": "@@ -33,6 +33,9 @@ AC_USE_SYSTEM_EXTENSIONS\n ACX_LARGEFILE\n AM_PROG_CC_STDC\n \n+# Set the 'development' global.\n+. $srcdir/../bfd/development.sh\n+\n # We require a C++11 compiler.  Check if one is available, and if\n # necessary, set CXX_DIALECT to some -std=xxx switch.\n AX_CXX_COMPILE_STDCXX(11, , mandatory)"
    }
  ]
}