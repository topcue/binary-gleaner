{
  "sha": "72994b6028360eccb5d25b39d2e18b386d091426",
  "node_id": "C_kwDOANOeidoAKDcyOTk0YjYwMjgzNjBlY2NiNWQyNWIzOWQyZTE4YjM4NmQwOTE0MjY",
  "commit": {
    "author": {
      "name": "Lancelot SIX",
      "email": "lancelot.six@amd.com",
      "date": "2021-12-13T13:48:48Z"
    },
    "committer": {
      "name": "Lancelot SIX",
      "email": "lancelot.six@amd.com",
      "date": "2021-12-17T08:56:25Z"
    },
    "message": "gdb/tui: install SIGWINCH only when connected to a TTY\n\nPR26056 reports that when GDB is connected to non-TTY stdin/stdout, it\ncrashes when it receives a SIGWINCH signal.\n\nThis can be reproduced as follows:\n\n    $ gdb/gdb -nx -batch -ex 'run' --args sleep 60 </dev/null 2>&1 | cat\n\n    # from another terminal:\n    $ kill -WINCH %(pidof gdb)\n\nWhen doing so, the process crashes in a call to rl_resize_terminal:\n\n    void\n    rl_resize_terminal (void)\n    {\n      _rl_get_screen_size (fileno (rl_instream), 1);\n      ...\n    }\n\nThe problem is that at this point rl_instream has the value NULL.\n\nThe rl_instream variable is supposed to be initialized during a call to\nreadline_initialize_everything, which in a normal startup sequence is\ncalled under this call chain:\n\n    tui_interp::init\n      tui_ensure_readline_initialized\n        rl_initialize\n          readline_initialize_everything\n\nIn tui_interp::init, we have the following sequence:\n\n    tui_initialize_io ();\n    tui_initialize_win ();                // <- Installs SIGWINCH\n    if (gdb_stdout->isatty ())\n      tui_ensure_readline_initialized (); // <- Initializes rl_instream\n\nThis function unconditionally installs the SIGWINCH signal handler (this\nis done by tui_initialize_win), and then if gdb_stdout is a TTY it\ninitializes readline.  Therefore, if stdout is not a TTY, SIGWINCH is\ninstalled but readline is not initialized.  In such situation\nrl_instream stays NULL, and when GDB receives a SIGWINCH it calls its\nhandler and in fine tries to access rl_instream leading to the crash.\n\nThis patch proposes to fix this issue by installing the SIGWINCH signal\nhandler only if GDB is connected to a TTY.  Given that this\ninitialization it the only task of tui_initialize_win, this patch moves\ntui_initialize_win just after the call to\ntui_ensure_readline_initialized.\n\nTested on x86_64-linux.\n\nCo-authored-by: Pedro Alves <pedro@palves.net>\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=26056\nChange-Id: I6458acef7b0d9beda2a10715d0345f02361076d9",
    "tree": {
      "sha": "855d88a99f9ca5ddc6110d496f1a2d29e0a5e3bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/855d88a99f9ca5ddc6110d496f1a2d29e0a5e3bf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/72994b6028360eccb5d25b39d2e18b386d091426",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72994b6028360eccb5d25b39d2e18b386d091426",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/72994b6028360eccb5d25b39d2e18b386d091426",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72994b6028360eccb5d25b39d2e18b386d091426/comments",
  "author": {
    "login": "lancesix",
    "id": 98881381,
    "node_id": "U_kgDOBeTPZQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/98881381?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lancesix",
    "html_url": "https://github.com/lancesix",
    "followers_url": "https://api.github.com/users/lancesix/followers",
    "following_url": "https://api.github.com/users/lancesix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lancesix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lancesix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lancesix/subscriptions",
    "organizations_url": "https://api.github.com/users/lancesix/orgs",
    "repos_url": "https://api.github.com/users/lancesix/repos",
    "events_url": "https://api.github.com/users/lancesix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lancesix/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "lancesix",
    "id": 98881381,
    "node_id": "U_kgDOBeTPZQ",
    "avatar_url": "https://avatars.githubusercontent.com/u/98881381?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lancesix",
    "html_url": "https://github.com/lancesix",
    "followers_url": "https://api.github.com/users/lancesix/followers",
    "following_url": "https://api.github.com/users/lancesix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lancesix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lancesix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lancesix/subscriptions",
    "organizations_url": "https://api.github.com/users/lancesix/orgs",
    "repos_url": "https://api.github.com/users/lancesix/repos",
    "events_url": "https://api.github.com/users/lancesix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lancesix/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "27e3da31c31572fde3d6e244a68ea45fb874b038",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27e3da31c31572fde3d6e244a68ea45fb874b038",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/27e3da31c31572fde3d6e244a68ea45fb874b038"
    }
  ],
  "stats": {
    "total": 108,
    "additions": 105,
    "deletions": 3
  },
  "files": [
    {
      "sha": "9084c258388486837d68f4a3156038c191ba7078",
      "filename": "gdb/testsuite/gdb.base/sigwinch-notty.exp",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72994b6028360eccb5d25b39d2e18b386d091426/gdb/testsuite/gdb.base/sigwinch-notty.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72994b6028360eccb5d25b39d2e18b386d091426/gdb/testsuite/gdb.base/sigwinch-notty.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/sigwinch-notty.exp?ref=72994b6028360eccb5d25b39d2e18b386d091426",
      "patch": "@@ -0,0 +1,70 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that GDB does not crash when it is started without a terminal /\n+# without readline, and, it receives a SIGWINCH.  Regression test for\n+# PR gdb/26056.\n+\n+if [target_info exists gdb,nosignals] {\n+    verbose \"Skipping $subdir/$gdb_test_file_name.exp because of nosignals.\"\n+    continue\n+}\n+\n+# The testfile relies on \"run\" from the command line, so only works\n+# with \"target native\".\n+if { [target_info gdb_protocol] != \"\" } {\n+    continue\n+}\n+\n+gdb_exit\n+\n+# Start GDB without a terminal, running sleep for a while.  Before the\n+# sleep exits, we'll send a SIGWINCH.  \"show editing\" to double check\n+# that readline is disabled.\n+save_vars { GDB GDBFLAGS } {\n+    set GDB \"$srcdir/lib/notty-wrap $GDB\"\n+    set GDBFLAGS \"$GDBFLAGS -ex \\\"show editing\\\" -ex run --args sleep 3\"\n+\n+    gdb_spawn\n+}\n+\n+set gdb_pid [exp_pid -i $gdb_spawn_id]\n+\n+verbose -log \"gdb_spawn_id=$gdb_spawn_id\"\n+verbose -log \"gdb_pid=$gdb_pid\"\n+\n+after 1000 {\n+    # Note, GDB is started under a shell, so PID is actually the\n+    # shell's pid, not GDB's.  Use \"-PID\" to send the signal to the\n+    # whole process group and reach GDB, instead of just to the shell.\n+    remote_exec host \"kill -SIGWINCH -${gdb_pid}\"\n+}\n+\n+# If GDB mishandles the SIGWINCH and crashes, that happens before we\n+# see the \"inferior exited normally\" message, so this will ERROR with\n+# eof.\n+gdb_test_multiple \"\" \"wait for sleep exit\" {\n+    -re \"Editing of command lines as they are typed is off.*$inferior_exited_re normally.*$gdb_prompt \" {\n+\tpass $gdb_test_name\n+    }\n+}\n+\n+gdb_test_multiple \"\" \"wait for gdb exit\" {\n+    eof {\n+\tset wait_status [wait -i $gdb_spawn_id]\n+\tverbose -log \"GDB process exited with wait status $wait_status\"\n+\tpass $gdb_test_name\n+    }\n+}"
    },
    {
      "sha": "b952c93c0d54cb1e2902bf8c5ade3c7e9edcba2e",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72994b6028360eccb5d25b39d2e18b386d091426/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72994b6028360eccb5d25b39d2e18b386d091426/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=72994b6028360eccb5d25b39d2e18b386d091426",
      "patch": "@@ -2096,7 +2096,9 @@ proc default_gdb_spawn { } {\n \t    exit 1\n \t}\n     }\n-    set res [remote_spawn host \"$GDB $INTERNAL_GDBFLAGS $GDBFLAGS [host_info gdb_opts]\"]\n+\n+    # Put GDBFLAGS last so that tests can put \"--args ...\" in it.\n+    set res [remote_spawn host \"$GDB $INTERNAL_GDBFLAGS [host_info gdb_opts] $GDBFLAGS\"]\n     if { $res < 0 || $res == \"\" } {\n \tperror \"Spawning $GDB failed.\"\n \treturn 1"
    },
    {
      "sha": "899c2ddfdd5812d08edb1e5cde86163e699d3094",
      "filename": "gdb/testsuite/lib/notty-wrap",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72994b6028360eccb5d25b39d2e18b386d091426/gdb/testsuite/lib/notty-wrap",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72994b6028360eccb5d25b39d2e18b386d091426/gdb/testsuite/lib/notty-wrap",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/notty-wrap?ref=72994b6028360eccb5d25b39d2e18b386d091426",
      "patch": "@@ -0,0 +1,24 @@\n+#!/bin/sh\n+\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+#\n+# This file is part of GDB.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Wrap any passed-in program and args in a pipe, so that the program\n+# is started without a terminal.\n+\n+exec \"$@\" </dev/null 2>&1 | cat"
    },
    {
      "sha": "16859cb5745f2df4f457d18c74426bf750c3209a",
      "filename": "gdb/tui/tui-interp.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72994b6028360eccb5d25b39d2e18b386d091426/gdb/tui/tui-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72994b6028360eccb5d25b39d2e18b386d091426/gdb/tui/tui-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-interp.c?ref=72994b6028360eccb5d25b39d2e18b386d091426",
      "patch": "@@ -242,9 +242,15 @@ tui_interp::init (bool top_level)\n   atexit (tui_exit);\n \n   tui_initialize_io ();\n-  tui_initialize_win ();\n   if (gdb_stdout->isatty ())\n-    tui_ensure_readline_initialized ();\n+    {\n+      tui_ensure_readline_initialized ();\n+\n+      /* This installs the SIGWINCH signal handler.  The handler needs to do\n+\t readline calls (to rl_resize_terminal), so it must not be installed\n+\t unless readline is properly initialized.  */\n+      tui_initialize_win ();\n+    }\n }\n \n /* Used as the command handler for the tui.  */"
    }
  ]
}