{
  "sha": "cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Y3YTNjMDFkODJhYmRmMTEwZWY4NWFiNzcwZTU5OTdkOGFjMjhhYw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-15T11:39:30Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-16T04:47:52Z"
    },
    "message": "Lose some COFF/PE static vars, and peicode.h constify\n\nThis patch tidies some COFF and PE code that unnecessarily used static\nvariables to communicate between functions.\n\n\t* coffcode.h (pelength, peheader): Delete static variables.\n\t(coff_apply_checksum): Instead, define them as auto vars, and pass..\n\t(coff_read_word, coff_compute_checksum): ..to here.  Delete\n\tunnecessary forward declarations.\n\t* pei-x86_64.c (pdata_count): Delete static variable.\n\t(struct pex64_paps): New.\n\t(pex64_print_all_pdata_sections, pex64_bfd_print_pdata): Pass\n\ta pex64_paps for counting.\n\t* peicode.h (jtab): Constify.",
    "tree": {
      "sha": "13ec1df3179075cf8bf216fd986387978ffddc73",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/13ec1df3179075cf8bf216fd986387978ffddc73"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a33fc9aed4b3b4384df63850c6fc9046ecbd97f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a33fc9aed4b3b4384df63850c6fc9046ecbd97f4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a33fc9aed4b3b4384df63850c6fc9046ecbd97f4"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 37,
    "deletions": 27
  },
  "files": [
    {
      "sha": "88a0ebba4fe27a27b78cd16f2b89aa953f8559a3",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
      "patch": "@@ -1,3 +1,15 @@\n+2020-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* coffcode.h (pelength, peheader): Delete static variables.\n+\t(coff_apply_checksum): Instead, define them as auto vars, and pass..\n+\t(coff_read_word, coff_compute_checksum): ..to here.  Delete\n+\tunnecessary forward declarations.\n+\t* pei-x86_64.c (pdata_count): Delete static variable.\n+\t(struct pex64_paps): New.\n+\t(pex64_print_all_pdata_sections, pex64_bfd_print_pdata): Pass\n+\ta pex64_paps for counting.\n+\t* peicode.h (jtab): Constify.\n+\n 2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n \n \t* elflink.c (bfd_elf_size_dynamic_sections): Call"
    },
    {
      "sha": "2a0eeedcd7eedfe049e02e6f510b9576dcd388c9",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 9,
      "deletions": 18,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
      "patch": "@@ -445,14 +445,6 @@ static void * coff_mkobject_hook\n static flagword handle_COMDAT\n   (bfd *, flagword, void *, const char *, asection *);\n #endif\n-#ifdef COFF_IMAGE_WITH_PE\n-static bfd_boolean coff_read_word\n-  (bfd *, unsigned int *);\n-static unsigned int coff_compute_checksum\n-  (bfd *);\n-static bfd_boolean coff_apply_checksum\n-  (bfd *);\n-#endif\n #ifdef TICOFF\n static bfd_boolean ticoff0_bad_format_hook\n   (bfd *, void * );\n@@ -3274,11 +3266,8 @@ coff_compute_section_file_positions (bfd * abfd)\n \n #ifdef COFF_IMAGE_WITH_PE\n \n-static unsigned int pelength;\n-static unsigned int peheader;\n-\n static bfd_boolean\n-coff_read_word (bfd *abfd, unsigned int *value)\n+coff_read_word (bfd *abfd, unsigned int *value, unsigned int *pelength)\n {\n   unsigned char b[2];\n   int status;\n@@ -3295,29 +3284,29 @@ coff_read_word (bfd *abfd, unsigned int *value)\n   else\n     *value = (unsigned int) (b[0] + (b[1] << 8));\n \n-  pelength += (unsigned int) status;\n+  *pelength += status;\n \n   return TRUE;\n }\n \n static unsigned int\n-coff_compute_checksum (bfd *abfd)\n+coff_compute_checksum (bfd *abfd, unsigned int *pelength)\n {\n   bfd_boolean more_data;\n   file_ptr filepos;\n   unsigned int value;\n   unsigned int total;\n \n   total = 0;\n-  pelength = 0;\n+  *pelength = 0;\n   filepos = (file_ptr) 0;\n \n   do\n     {\n       if (bfd_seek (abfd, filepos, SEEK_SET) != 0)\n \treturn 0;\n \n-      more_data = coff_read_word (abfd, &value);\n+      more_data = coff_read_word (abfd, &value, pelength);\n       total += value;\n       total = 0xffff & (total + (total >> 0x10));\n       filepos += 2;\n@@ -3332,11 +3321,13 @@ coff_apply_checksum (bfd *abfd)\n {\n   unsigned int computed;\n   unsigned int checksum = 0;\n+  unsigned int peheader;\n+  unsigned int pelength;\n \n   if (bfd_seek (abfd, 0x3c, SEEK_SET) != 0)\n     return FALSE;\n \n-  if (!coff_read_word (abfd, &peheader))\n+  if (!coff_read_word (abfd, &peheader, &pelength))\n     return FALSE;\n \n   if (bfd_seek (abfd, peheader + 0x58, SEEK_SET) != 0)\n@@ -3348,7 +3339,7 @@ coff_apply_checksum (bfd *abfd)\n   if (bfd_seek (abfd, peheader, SEEK_SET) != 0)\n     return FALSE;\n \n-  computed = coff_compute_checksum (abfd);\n+  computed = coff_compute_checksum (abfd, &pelength);\n \n   checksum = computed + pelength;\n "
    },
    {
      "sha": "b1259a0d9e12341cabad005aaf2a8621354fc1d4",
      "filename": "bfd/pei-x86_64.c",
      "status": "modified",
      "additions": 15,
      "deletions": 8,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/pei-x86_64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/pei-x86_64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pei-x86_64.c?ref=cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
      "patch": "@@ -820,34 +820,41 @@ pex64_bfd_print_pdata_section (bfd *abfd, void *vfile, asection *pdata_section)\n   return TRUE;\n }\n \n-/* Static counter of number of found pdata sections.  */\n-static bfd_boolean pdata_count;\n+struct pex64_paps\n+{\n+  void *obj;\n+  /* Number of found pdata sections.  */\n+  unsigned int pdata_count;\n+};\n \n /* Functionn prototype.  */\n bfd_boolean pex64_bfd_print_pdata (bfd *, void *);\n \n /* Helper function for bfd_map_over_section.  */\n static void\n-pex64_print_all_pdata_sections (bfd *abfd, asection *pdata, void *obj)\n+pex64_print_all_pdata_sections (bfd *abfd, asection *pdata, void *arg)\n {\n+  struct pex64_paps *paps = arg;\n   if (CONST_STRNEQ (pdata->name, \".pdata\"))\n     {\n-      if (pex64_bfd_print_pdata_section (abfd, obj, pdata))\n-\tpdata_count++;\n+      if (pex64_bfd_print_pdata_section (abfd, paps->obj, pdata))\n+\tpaps->pdata_count++;\n     }\n }\n \n bfd_boolean\n pex64_bfd_print_pdata (bfd *abfd, void *vfile)\n {\n   asection *pdata_section = bfd_get_section_by_name (abfd, \".pdata\");\n+  struct pex64_paps paps;\n \n   if (pdata_section)\n     return pex64_bfd_print_pdata_section (abfd, vfile, pdata_section);\n \n-  pdata_count = 0;\n-  bfd_map_over_sections (abfd, pex64_print_all_pdata_sections, vfile);\n-  return (pdata_count > 0);\n+  paps.obj = vfile;\n+  paps.pdata_count = 0;\n+  bfd_map_over_sections (abfd, pex64_print_all_pdata_sections, &paps);\n+  return paps.pdata_count != 0;\n }\n \n #define bfd_pe_print_pdata   pex64_bfd_print_pdata"
    },
    {
      "sha": "27a156fbdf7bbe66cf0cabe0339154a9e471c65f",
      "filename": "bfd/peicode.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/peicode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf7a3c01d82abdf110ef85ab770e5997d8ac28ac/bfd/peicode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peicode.h?ref=cf7a3c01d82abdf110ef85ab770e5997d8ac28ac",
      "patch": "@@ -699,7 +699,7 @@ typedef struct\n }\n jump_table;\n \n-static jump_table jtab[] =\n+static const jump_table jtab[] =\n {\n #ifdef I386MAGIC\n   { I386MAGIC,"
    }
  ]
}