{
  "sha": "013f99f035c49b000ca058db80ad15e00aa330dc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDEzZjk5ZjAzNWM0OWIwMDBjYTA1OGRiODBhZDE1ZTAwYWEzMzBkYw==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T13:17:16Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T13:20:40Z"
    },
    "message": "Add support for NetBSD threads in x86-bsd-nat.c\n\nNetBSD ptrace(2) PT_GETDBREGS/PT_SETDBREGS accepts thread id (LWP)\nas the 4th argument for threads.\n\ngdb/ChangeLog:\n\n        * x86-bsd-nat.c (x86bsd_dr_get): New variable lwp and pass\n        it to the ptrace call.\n        * x86-bsd-nat.c (x86bsd_dr_set): Likewise.",
    "tree": {
      "sha": "c69c897cd3d013b2c4f3168c6cd699ee852a706f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c69c897cd3d013b2c4f3168c6cd699ee852a706f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/013f99f035c49b000ca058db80ad15e00aa330dc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/013f99f035c49b000ca058db80ad15e00aa330dc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/013f99f035c49b000ca058db80ad15e00aa330dc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/013f99f035c49b000ca058db80ad15e00aa330dc/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6227b330d563add042066259e5f933c89a85b3b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6227b330d563add042066259e5f933c89a85b3b5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6227b330d563add042066259e5f933c89a85b3b5"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 23,
    "deletions": 3
  },
  "files": [
    {
      "sha": "49e033533e2e1db3d7493bbc1aedd57e2bd2dcde",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/013f99f035c49b000ca058db80ad15e00aa330dc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/013f99f035c49b000ca058db80ad15e00aa330dc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=013f99f035c49b000ca058db80ad15e00aa330dc",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* x86-bsd-nat.c (x86bsd_dr_get): New variable lwp and pass\n+\tit to the ptrace call.\n+\t* x86-bsd-nat.c (x86bsd_dr_set): Likewise.\n+\n 2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n \n \t* vax-bsd-nat.c (vaxbsd_supply_gregset): New variable lwp and pass"
    },
    {
      "sha": "640a3c281109b956a44545395cc21cb57361938b",
      "filename": "gdb/x86-bsd-nat.c",
      "status": "modified",
      "additions": 17,
      "deletions": 3,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/013f99f035c49b000ca058db80ad15e00aa330dc/gdb/x86-bsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/013f99f035c49b000ca058db80ad15e00aa330dc/gdb/x86-bsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/x86-bsd-nat.c?ref=013f99f035c49b000ca058db80ad15e00aa330dc",
      "patch": "@@ -56,9 +56,14 @@ static unsigned long\n x86bsd_dr_get (ptid_t ptid, int regnum)\n {\n   struct dbreg dbregs;\n+#ifdef __NetBSD__\n+  int lwp = inferior_ptid.lwp ();\n+#else\n+  int lwp = 0;\n+#endif\n \n   if (ptrace (PT_GETDBREGS, get_ptrace_pid (inferior_ptid),\n-\t      (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)\n+\t      (PTRACE_TYPE_ARG3) &dbregs, lwp) == -1)\n     perror_with_name (_(\"Couldn't read debug registers\"));\n \n   return DBREG_DRX ((&dbregs), regnum);\n@@ -68,9 +73,14 @@ static void\n x86bsd_dr_set (int regnum, unsigned long value)\n {\n   struct dbreg dbregs;\n+#ifdef __NetBSD__\n+  int lwp = inferior_ptid.lwp ();\n+#else\n+  int lwp = 0;\n+#endif\n \n   if (ptrace (PT_GETDBREGS, get_ptrace_pid (inferior_ptid),\n-              (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)\n+              (PTRACE_TYPE_ARG3) &dbregs, lwp) == -1)\n     perror_with_name (_(\"Couldn't get debug registers\"));\n \n   /* For some mysterious reason, some of the reserved bits in the\n@@ -82,8 +92,12 @@ x86bsd_dr_set (int regnum, unsigned long value)\n \n   for (thread_info *thread : current_inferior ()->non_exited_threads ())\n     {\n+#ifdef __NetBSD__\n+      lwp = thread->ptid.lwp ();\n+#endif\n+\n       if (ptrace (PT_SETDBREGS, get_ptrace_pid (thread->ptid),\n-\t\t  (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)\n+\t\t  (PTRACE_TYPE_ARG3) &dbregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't write debug registers\"));\n     }\n }"
    }
  ]
}