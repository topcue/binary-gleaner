{
  "sha": "a379e7588c5e3a9750bba8c51218cce9225122f5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTM3OWU3NTg4YzVlM2E5NzUwYmJhOGM1MTIxOGNjZTkyMjUxMjJmNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-08-06T09:05:23Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-08-06T13:36:40Z"
    },
    "message": "PR28173, nds32_elf_howto_table index out of bounds\n\nIndexing the howto table was seriously broken by a missing entry, and\nuse of assertions about user input rather than testing the input.\n\n\tPR 28173\n\t* elf32-nds32.c (nds32_elf_howto_table): Add missing empty howto.\n\t(bfd_elf32_bfd_reloc_type_table_lookup): Replace assertions with\n\trange checks.  Return NULL if unsupported reloc type.  Remove\n\tdead code.  Take an unsigned int param.\n\t(nds32_info_to_howto_rel): Test for NULL howto or howto name\n\treturn from lookup.  Remove assertion.\n\t(nds32_info_to_howto): Remove unnecessary ATTRIBUTE_UNUSED.\n\tTest for NULL howto or howto name return from lookup.",
    "tree": {
      "sha": "bb84eca9f003424c9fa0d9236b11ddcbef1d6342",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bb84eca9f003424c9fa0d9236b11ddcbef1d6342"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a379e7588c5e3a9750bba8c51218cce9225122f5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a379e7588c5e3a9750bba8c51218cce9225122f5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a379e7588c5e3a9750bba8c51218cce9225122f5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a379e7588c5e3a9750bba8c51218cce9225122f5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "352bd3aa1c68137d4a5115183f42c40b75ee05b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/352bd3aa1c68137d4a5115183f42c40b75ee05b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/352bd3aa1c68137d4a5115183f42c40b75ee05b3"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 25,
    "deletions": 30
  },
  "files": [
    {
      "sha": "0aa7c9ee564c9201ca5574404211c84df36d9350",
      "filename": "bfd/elf32-nds32.c",
      "status": "modified",
      "additions": 25,
      "deletions": 30,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a379e7588c5e3a9750bba8c51218cce9225122f5/bfd/elf32-nds32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a379e7588c5e3a9750bba8c51218cce9225122f5/bfd/elf32-nds32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-nds32.c?ref=a379e7588c5e3a9750bba8c51218cce9225122f5",
      "patch": "@@ -1954,6 +1954,8 @@ static reloc_howto_type nds32_elf_howto_table[] =\n \t 0xffffffff,\t\t/* dst_mask  */\n \t false),\t\t/* pcrel_offset  */\n \n+  EMPTY_HOWTO (114),\n+\n   HOWTO2 (R_NDS32_TLS_IE_LO12,\t/* type  */\n \t 0,\t\t\t/* rightshift  */\n \t 2,\t\t\t/* size (0 = byte, 1 = short, 2 = long)  */\n@@ -3184,26 +3186,19 @@ bfd_elf32_bfd_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n }\n \n static reloc_howto_type *\n-bfd_elf32_bfd_reloc_type_table_lookup (enum elf_nds32_reloc_type code)\n+bfd_elf32_bfd_reloc_type_table_lookup (unsigned int code)\n {\n   if (code < R_NDS32_RELAX_ENTRY)\n     {\n-      BFD_ASSERT (code < ARRAY_SIZE (nds32_elf_howto_table));\n-      return &nds32_elf_howto_table[code];\n+      if (code < ARRAY_SIZE (nds32_elf_howto_table))\n+\treturn &nds32_elf_howto_table[code];\n     }\n   else\n     {\n-      if ((size_t) (code - R_NDS32_RELAX_ENTRY)\n-\t  >= ARRAY_SIZE (nds32_elf_relax_howto_table))\n-\t{\n-\t  int i = code;\n-\t  i += 1;\n-\t}\n-\n-      BFD_ASSERT ((size_t) (code - R_NDS32_RELAX_ENTRY)\n-\t\t  < ARRAY_SIZE (nds32_elf_relax_howto_table));\n-      return &nds32_elf_relax_howto_table[code - R_NDS32_RELAX_ENTRY];\n+      if (code - R_NDS32_RELAX_ENTRY < ARRAY_SIZE (nds32_elf_relax_howto_table))\n+\treturn &nds32_elf_relax_howto_table[code - R_NDS32_RELAX_ENTRY];\n     }\n+  return NULL;\n }\n \n static reloc_howto_type *\n@@ -3228,41 +3223,41 @@ static bool\n nds32_info_to_howto_rel (bfd *abfd, arelent *cache_ptr,\n \t\t\t Elf_Internal_Rela *dst)\n {\n-  enum elf_nds32_reloc_type r_type;\n+  unsigned int r_type = ELF32_R_TYPE (dst->r_info);\n \n-  r_type = ELF32_R_TYPE (dst->r_info);\n-  if (r_type > R_NDS32_GNU_VTENTRY)\n+  cache_ptr->howto = NULL;\n+  if (r_type <= R_NDS32_GNU_VTENTRY)\n+    cache_ptr->howto = bfd_elf32_bfd_reloc_type_table_lookup (r_type);\n+  if (cache_ptr->howto == NULL || cache_ptr->howto->name == NULL)\n     {\n       /* xgettext:c-format */\n       _bfd_error_handler (_(\"%pB: unsupported relocation type %#x\"),\n \t\t\t  abfd, r_type);\n       bfd_set_error (bfd_error_bad_value);\n       return false;\n     }\n-\n-  BFD_ASSERT (ELF32_R_TYPE (dst->r_info) <= R_NDS32_GNU_VTENTRY);\n-  cache_ptr->howto = bfd_elf32_bfd_reloc_type_table_lookup (r_type);\n   return true;\n }\n \n static bool\n-nds32_info_to_howto (bfd *abfd ATTRIBUTE_UNUSED, arelent *cache_ptr,\n+nds32_info_to_howto (bfd *abfd, arelent *cache_ptr,\n \t\t     Elf_Internal_Rela *dst)\n {\n   unsigned int r_type = ELF32_R_TYPE (dst->r_info);\n \n-  if ((r_type == R_NDS32_NONE)\n-      || ((r_type > R_NDS32_GNU_VTENTRY)\n-\t  && (r_type < R_NDS32_max)))\n+  cache_ptr->howto = NULL;\n+  if (r_type == R_NDS32_NONE\n+      || r_type > R_NDS32_GNU_VTENTRY)\n+    cache_ptr->howto = bfd_elf32_bfd_reloc_type_table_lookup (r_type);\n+  if (cache_ptr->howto == NULL || cache_ptr->howto->name == NULL)\n     {\n-      cache_ptr->howto = bfd_elf32_bfd_reloc_type_table_lookup (r_type);\n-      return true;\n+      /* xgettext:c-format */\n+      _bfd_error_handler (_(\"%pB: unsupported relocation type %#x\"),\n+\t\t\t  abfd, r_type);\n+      bfd_set_error (bfd_error_bad_value);\n+      return false;\n     }\n-\n-  /* xgettext:c-format */\n-  _bfd_error_handler (_(\"%pB: unsupported relocation type %#x\"), abfd, r_type);\n-  bfd_set_error (bfd_error_bad_value);\n-  return false;\n+  return true;\n }\n \n /* Support for core dump NOTE sections."
    }
  ]
}