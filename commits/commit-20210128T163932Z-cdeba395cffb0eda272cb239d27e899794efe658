{
  "sha": "cdeba395cffb0eda272cb239d27e899794efe658",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2RlYmEzOTVjZmZiMGVkYTI3MmNiMjM5ZDI3ZTg5OTc5NGVmZTY1OA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-28T16:39:32Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-28T16:39:32Z"
    },
    "message": "[gdb/testsuite] Fix gdb.arch/i386-gnu-cfi.exp\n\nWhen running test-case gdb.arch/i386-gnu-cfi.exp with target board unix/-m32, I get:\n...\n(gdb) up 3^M\n79      abort.c: No such file or directory.^M\n(gdb) FAIL: gdb.arch/i386-gnu-cfi.exp: shift up to the modified frame\n...\n\nThe preceding backtrace looks like this:\n...\n(gdb) bt^M\n #0  0xf7fcf549 in __kernel_vsyscall ()^M\n #1  0xf7ce8896 in __libc_signal_restore_set (set=0xffffc3bc) at \\\n     ../sysdeps/unix/sysv/linux/internal-signals.h:104^M\n #2  __GI_raise (sig=6) at ../sysdeps/unix/sysv/linux/raise.c:47^M\n #3  0xf7cd0314 in __GI_abort () at abort.c:79^M\n #4  0x0804919f in gate (gate=0x8049040 <abort@plt>, data=0x0) at gate.c:3^M\n #5  0x08049176 in main () at i386-gnu-cfi.c:27^M\n...\nwith function gate at position #4, while on another system where the test passes,\nI see instead function gate at position #3.\n\nFix this by capturing the position of function gate in the backtrace, and\nusing that in the rest of the test instead of hardcoded constant 3.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-01-28  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.arch/i386-gnu-cfi.exp: Capture the position of function gate\n\tin the backtrace, and use that in the rest of the test instead of\n\thardcoded constant 3.  Use \"frame\" instead of \"up\" for robustness.",
    "tree": {
      "sha": "93d8829baef50d12bc45004e194c31cee15d094c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/93d8829baef50d12bc45004e194c31cee15d094c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cdeba395cffb0eda272cb239d27e899794efe658",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cdeba395cffb0eda272cb239d27e899794efe658",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cdeba395cffb0eda272cb239d27e899794efe658",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cdeba395cffb0eda272cb239d27e899794efe658/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c47b145e1a527b62c3354ddc472f11d967b8e2ef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c47b145e1a527b62c3354ddc472f11d967b8e2ef",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c47b145e1a527b62c3354ddc472f11d967b8e2ef"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 25,
    "deletions": 7
  },
  "files": [
    {
      "sha": "73bbd00ea7cc54243df8daaeb6dd1dba7e918c7a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cdeba395cffb0eda272cb239d27e899794efe658/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cdeba395cffb0eda272cb239d27e899794efe658/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=cdeba395cffb0eda272cb239d27e899794efe658",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-28  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.arch/i386-gnu-cfi.exp: Capture the position of function gate\n+\tin the backtrace, and use that in the rest of the test instead of\n+\thardcoded constant 3.  Use \"frame\" instead of \"up\" for robustness.\n+\n 2021-01-28  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.arch/i386-sse-stack-align.S: Rename g[0-4] to test_g[0-4]."
    },
    {
      "sha": "657599b8ecc215fcf2e1711c578c881cf8bfdacb",
      "filename": "gdb/testsuite/gdb.arch/i386-gnu-cfi.exp",
      "status": "modified",
      "additions": 19,
      "deletions": 7,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cdeba395cffb0eda272cb239d27e899794efe658/gdb/testsuite/gdb.arch/i386-gnu-cfi.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cdeba395cffb0eda272cb239d27e899794efe658/gdb/testsuite/gdb.arch/i386-gnu-cfi.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/i386-gnu-cfi.exp?ref=cdeba395cffb0eda272cb239d27e899794efe658",
      "patch": "@@ -58,21 +58,33 @@ gdb_test_multiple {} \"continue to abort()\" {\n     }\n }\n \n-# Backtrace would crash before.\n-\n-gdb_test \"bt\" \\\n-         \"main \\\\(\\\\) at .*${testfile}.c.*\" \\\n-         \"backtrace\"\n+# Verify that the backtrace works (it would crash before).  Use the backtrace\n+# output to find the frame number for function \"gate\".\n+set gate_n \"\"\n+set backtrace_re \\\n+    [multi_line \\\n+\t \"\" \\\n+\t \"#($decimal) *$hex in gate \\[^\\r\\n\\]*\" \\\n+\t \"#$decimal *$hex in main \\\\(\\\\) at .*${testfile}.c.*\"]\n+gdb_test_multiple \"backtrace\" \"\" {\n+    -re -wrap $backtrace_re {\n+\tset gate_n $expect_out(1,string)\n+\tpass $gdb_test_name\n+    }\n+}\n+if { $gate_n == \"\" } {\n+    return -1\n+}\n \n # Check we see the inserted `DW_CFA_GNU_negative_offset_extended' CFI.\n # We see there the original CFI-stored filename `gate.c'.\n \n-gdb_test \"up 3\" \\\n+gdb_test \"frame $gate_n\" \\\n          \"gate \\\\(\\[^()\\]*\\\\) at .*gate.c.*\" \\\n          \"shift up to the modified frame\"\n \n gdb_test_multiple \"info frame\" \"existence of the CFI inserted register\" {\n-    -re \"Stack level 3, frame at (0x\\[0-9a-f\\]+):.*Saved registers:.* ecx at (0x\\[0-9a-f\\]+),.*\" {\n+    -re \"Stack level $gate_n, frame at (0x\\[0-9a-f\\]+):.*Saved registers:.* ecx at (0x\\[0-9a-f\\]+),.*\" {\n \tpass \"existence of the CFI inserted register\"\n \tif { [string compare $expect_out(1,string) $expect_out(2,string)] } then {\n \t    fail \"value of the CFI inserted register\""
    }
  ]
}