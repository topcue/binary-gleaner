{
  "sha": "2c9e9550caf28bceb6b8540520f7378e1b1bb9c2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmM5ZTk1NTBjYWYyOGJjZWI2Yjg1NDA1MjBmNzM3OGUxYjFiYjljMg==",
  "commit": {
    "author": {
      "name": "John David Anglin",
      "email": "danglin@gcc.gnu.org",
      "date": "2019-10-20T16:01:58Z"
    },
    "committer": {
      "name": "John David Anglin",
      "email": "danglin@gcc.gnu.org",
      "date": "2019-10-20T16:01:58Z"
    },
    "message": "\t[bfd]\tProvide 8-byte minimum alignment for .plt section\n\n\tThis change increases the default alignment for the .plt section\n\tfrom 4 bytes to 8 bytes.  When function descriptors are 8-byte\n\taligned, they can be updated atomically on 32-bit hppa.  This\n\thelps with ordering issues on SMP machines.  It also ensures\n\tthat descriptors reside on the same cache line.  This reduces\n\tthe probability of a double TLB miss in a call.\n\n\t2019-10-20  John David Anglin  <danglin@gcc.gnu.org>\n\n\t\t* elf32-hppa.c (elf32_hppa_size_dynamic_sections): Provide 8-byte\n\t\tminimum alignment for .plt section.",
    "tree": {
      "sha": "910c06603154c5eeda877d24092c4a5871b6e0bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/910c06603154c5eeda877d24092c4a5871b6e0bc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "80051c7439399c861b52af0546ad67367f7184e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80051c7439399c861b52af0546ad67367f7184e4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/80051c7439399c861b52af0546ad67367f7184e4"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 8,
    "deletions": 2
  },
  "files": [
    {
      "sha": "429e423caa8a5d8265e25de84fb20361c9604429",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=2c9e9550caf28bceb6b8540520f7378e1b1bb9c2",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-20  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* elf32-hppa.c (elf32_hppa_size_dynamic_sections): Provide 8-byte\n+\tminimum alignment for .plt section.\n+\n 2019-10-19  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* elf32-hppa.c: Revise import stub sequences."
    },
    {
      "sha": "35564dd2b0b59fd2855cd4987a7990a61f413cbe",
      "filename": "bfd/elf32-hppa.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2/bfd/elf32-hppa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c9e9550caf28bceb6b8540520f7378e1b1bb9c2/bfd/elf32-hppa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-hppa.c?ref=2c9e9550caf28bceb6b8540520f7378e1b1bb9c2",
      "patch": "@@ -2280,10 +2280,11 @@ elf32_hppa_size_dynamic_sections (bfd *output_bfd ATTRIBUTE_UNUSED,\n \t\t against the .got section.  */\n \t      int gotalign = bfd_section_alignment (htab->etab.sgot);\n \t      int pltalign = bfd_section_alignment (sec);\n+\t      int align = gotalign > 3 ? gotalign : 3;\n \t      bfd_size_type mask;\n \n-\t      if (gotalign > pltalign)\n-\t\tbfd_set_section_alignment (sec, gotalign);\n+\t      if (align > pltalign)\n+\t\tbfd_set_section_alignment (sec, align);\n \t      mask = ((bfd_size_type) 1 << gotalign) - 1;\n \t      sec->size = (sec->size + sizeof (plt_stub) + mask) & ~mask;\n \t    }"
    }
  ]
}