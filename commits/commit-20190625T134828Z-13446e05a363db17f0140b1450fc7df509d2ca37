{
  "sha": "13446e05a363db17f0140b1450fc7df509d2ca37",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTM0NDZlMDVhMzYzZGIxN2YwMTQwYjE0NTBmYzdkZjUwOWQyY2EzNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T17:22:38Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:28Z"
    },
    "message": "Introduce methods for scrolling\n\nThis changes the TUI to use virtual methods on the various window\ntypes for scrolling.  Window-specific functions for this purpose are\nrenamed to be methods, and the generic tui_scroll function is removed\nas it is no longer called.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (tui_horizontal_source_scroll):  Don't\n\tdeclare.\n\t* tui/tui-winsource.c\n\t(tui_source_window_base::do_scroll_horizontal): Rename from\n\ttui_horizontal_source_scroll.\n\t* tui/tui-windata.h (tui_vertical_data_scroll): Don't declare.\n\t* tui/tui-windata.c (tui_data_window::do_scroll_vertical): Rename\n\tfrom tui_vertical_data_scroll.\n\t* tui/tui-win.h (tui_scroll): Don't declare.\n\t* tui/tui-win.c (tui_win_info::forward_scroll)\n\t(tui_win_info::backward_scroll, tui_win_info::left_scroll)\n\t(tui_win_info::right_scroll): Rename and update.\n\t(tui_scroll_forward_command, tui_scroll_backward_command)\n\t(tui_scroll_left_command, tui_scroll_right_command): Update.\n\t(tui_scroll): Remove.\n\t* tui/tui-source.h: Don't declare tui_vertical_source_scroll.\n\t* tui/tui-source.c (tui_source_window::do_scroll_vertical): Rename\n\tfrom tui_vertical_source_scroll.\n\t* tui/tui-disasm.h (tui_vertical_disassem_scroll): Don't declare.\n\t* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Rename\n\tfrom tui_vertical_disassem_scroll.\n\t* tui/tui-data.h (struct tui_win_info) <do_scroll_vertical,\n\tdo_scroll_horizontal>: New methods.\n\t<forward_scroll, backward_scroll, left_scroll, right_scroll>:\n\tLikewise.\n\t(struct tui_source_window_base): Add do_scroll_horizontal.\n\t(struct tui_source_window, struct tui_disasm_window): Add\n\tdo_scroll_vertical.\n\t(struct tui_data_window, struct tui_cmd_window): Add\n\tdo_scroll_horizontal and do_scroll_vertical.\n\t* tui/tui-command.c (tui_dispatch_ctrl_char): Use method calls.",
    "tree": {
      "sha": "53c7c5c1185dc018da379af4297d812040e60a37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/53c7c5c1185dc018da379af4297d812040e60a37"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/13446e05a363db17f0140b1450fc7df509d2ca37",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13446e05a363db17f0140b1450fc7df509d2ca37",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/13446e05a363db17f0140b1450fc7df509d2ca37",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13446e05a363db17f0140b1450fc7df509d2ca37/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5cf82909a7047cee471ee40cfe623250c258d76e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5cf82909a7047cee471ee40cfe623250c258d76e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5cf82909a7047cee471ee40cfe623250c258d76e"
    }
  ],
  "stats": {
    "total": 278,
    "additions": 134,
    "deletions": 144
  },
  "files": [
    {
      "sha": "109cdd467d118fb4926e7efdceb70dabe0fc435a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -1,3 +1,37 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (tui_horizontal_source_scroll):  Don't\n+\tdeclare.\n+\t* tui/tui-winsource.c\n+\t(tui_source_window_base::do_scroll_horizontal): Rename from\n+\ttui_horizontal_source_scroll.\n+\t* tui/tui-windata.h (tui_vertical_data_scroll): Don't declare.\n+\t* tui/tui-windata.c (tui_data_window::do_scroll_vertical): Rename\n+\tfrom tui_vertical_data_scroll.\n+\t* tui/tui-win.h (tui_scroll): Don't declare.\n+\t* tui/tui-win.c (tui_win_info::forward_scroll)\n+\t(tui_win_info::backward_scroll, tui_win_info::left_scroll)\n+\t(tui_win_info::right_scroll): Rename and update.\n+\t(tui_scroll_forward_command, tui_scroll_backward_command)\n+\t(tui_scroll_left_command, tui_scroll_right_command): Update.\n+\t(tui_scroll): Remove.\n+\t* tui/tui-source.h: Don't declare tui_vertical_source_scroll.\n+\t* tui/tui-source.c (tui_source_window::do_scroll_vertical): Rename\n+\tfrom tui_vertical_source_scroll.\n+\t* tui/tui-disasm.h (tui_vertical_disassem_scroll): Don't declare.\n+\t* tui/tui-disasm.c (tui_disasm_window::do_scroll_vertical): Rename\n+\tfrom tui_vertical_disassem_scroll.\n+\t* tui/tui-data.h (struct tui_win_info) <do_scroll_vertical,\n+\tdo_scroll_horizontal>: New methods.\n+\t<forward_scroll, backward_scroll, left_scroll, right_scroll>:\n+\tLikewise.\n+\t(struct tui_source_window_base): Add do_scroll_horizontal.\n+\t(struct tui_source_window, struct tui_disasm_window): Add\n+\tdo_scroll_vertical.\n+\t(struct tui_data_window, struct tui_cmd_window): Add\n+\tdo_scroll_horizontal and do_scroll_vertical.\n+\t* tui/tui-command.c (tui_dispatch_ctrl_char): Use method calls.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-data.h (struct tui_source_window_base): New struct."
    },
    {
      "sha": "9603b3cfdcace496a8a1aef4ca4ec61d5c621194",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -57,24 +57,24 @@ tui_dispatch_ctrl_char (unsigned int ch)\n   switch (ch)\n     {\n     case KEY_NPAGE:\n-      tui_scroll_forward (win_info, 0);\n+      win_info->forward_scroll (0);\n       break;\n     case KEY_PPAGE:\n-      tui_scroll_backward (win_info, 0);\n+      win_info->backward_scroll (0);\n       break;\n     case KEY_DOWN:\n     case KEY_SF:\n-      tui_scroll_forward (win_info, 1);\n+      win_info->forward_scroll (1);\n       break;\n     case KEY_UP:\n     case KEY_SR:\n-      tui_scroll_backward (win_info, 1);\n+      win_info->backward_scroll (1);\n       break;\n     case KEY_RIGHT:\n-      tui_scroll_left (win_info, 1);\n+      win_info->left_scroll (1);\n       break;\n     case KEY_LEFT:\n-      tui_scroll_right (win_info, 1);\n+      win_info->right_scroll (1);\n       break;\n     case '\\f':\n       break;"
    },
    {
      "sha": "4170f246a1147bbadb1d4476e876f908a9427b4a",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -268,13 +268,31 @@ struct tui_win_info\n   explicit tui_win_info (enum tui_win_type type);\n   DISABLE_COPY_AND_ASSIGN (tui_win_info);\n \n+  /* Scroll the contents vertically.  This is only called via\n+     forward_scroll and backward_scroll.  */\n+  virtual void do_scroll_vertical (enum tui_scroll_direction,\n+\t\t\t\t   int num_to_scroll) = 0;\n+\n+  /* Scroll the contents horizontally.  This is only called via\n+     left_scroll and right_scroll.  */\n+  virtual void do_scroll_horizontal (enum tui_scroll_direction,\n+\t\t\t\t     int num_to_scroll) = 0;\n+\n public:\n \n   virtual ~tui_win_info ();\n \n   /* Clear the pertinent detail in the window.  */\n   virtual void clear_detail () = 0;\n \n+  /* Methods to scroll the contents of this window.  Note that they\n+     are named with \"_scroll\" coming at the end because the more\n+     obvious \"scroll_forward\" is defined as a macro in term.h.  */\n+  void forward_scroll (int num_to_scroll);\n+  void backward_scroll (int num_to_scroll);\n+  void left_scroll (int num_to_scroll);\n+  void right_scroll (int num_to_scroll);\n+\n   struct tui_gen_win_info generic;\t/* General window information.  */\n   union\n   {\n@@ -301,6 +319,9 @@ struct tui_source_window_base : public tui_win_info\n   ~tui_source_window_base () override;\n   DISABLE_COPY_AND_ASSIGN (tui_source_window_base);\n \n+  void do_scroll_horizontal (enum tui_scroll_direction,\n+\t\t\t     int num_to_scroll) override;\n+\n public:\n \n   void clear_detail () override;\n@@ -316,6 +337,11 @@ struct tui_source_window : public tui_source_window_base\n   }\n \n   DISABLE_COPY_AND_ASSIGN (tui_source_window);\n+\n+protected:\n+\n+  void do_scroll_vertical (enum tui_scroll_direction,\n+\t\t\t   int num_to_scroll) override;\n };\n \n /* A TUI disassembly window.  */\n@@ -328,6 +354,11 @@ struct tui_disasm_window : public tui_source_window_base\n   }\n \n   DISABLE_COPY_AND_ASSIGN (tui_disasm_window);\n+\n+protected:\n+\n+  void do_scroll_vertical (enum tui_scroll_direction,\n+\t\t\t   int num_to_scroll) override;\n };\n \n struct tui_data_window : public tui_win_info\n@@ -337,6 +368,15 @@ struct tui_data_window : public tui_win_info\n   DISABLE_COPY_AND_ASSIGN (tui_data_window);\n \n   void clear_detail () override;\n+\n+protected:\n+\n+  void do_scroll_vertical (enum tui_scroll_direction,\n+\t\t\t   int num_to_scroll) override;\n+  void do_scroll_horizontal (enum tui_scroll_direction,\n+\t\t\t     int num_to_scroll) override\n+  {\n+  }\n };\n \n struct tui_cmd_window : public tui_win_info\n@@ -345,6 +385,18 @@ struct tui_cmd_window : public tui_win_info\n   DISABLE_COPY_AND_ASSIGN (tui_cmd_window);\n \n   void clear_detail () override;\n+\n+protected:\n+\n+  void do_scroll_vertical (enum tui_scroll_direction,\n+\t\t\t   int num_to_scroll) override\n+  {\n+  }\n+\n+  void do_scroll_horizontal (enum tui_scroll_direction,\n+\t\t\t     int num_to_scroll) override\n+  {\n+  }\n };\n \n extern int tui_win_is_source_type (enum tui_win_type win_type);"
    },
    {
      "sha": "838f36cf29591db01825712975089e7ae7d8728c",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -373,18 +373,18 @@ tui_get_low_disassembly_address (struct gdbarch *gdbarch,\n \n /* Scroll the disassembly forward or backward vertically.  */\n void\n-tui_vertical_disassem_scroll (enum tui_scroll_direction scroll_direction,\n-\t\t\t      int num_to_scroll)\n+tui_disasm_window::do_scroll_vertical\n+  (enum tui_scroll_direction scroll_direction, int num_to_scroll)\n {\n-  if (TUI_DISASM_WIN->generic.content != NULL)\n+  if (generic.content != NULL)\n     {\n-      struct gdbarch *gdbarch = TUI_DISASM_WIN->detail.source_info.gdbarch;\n+      struct gdbarch *gdbarch = detail.source_info.gdbarch;\n       CORE_ADDR pc;\n       tui_win_content content;\n       struct tui_line_or_address val;\n       int dir;\n \n-      content = TUI_DISASM_WIN->generic.content;\n+      content = generic.content;\n \n       pc = content[0]->which_element.source.line_or_addr.u.addr;\n       num_to_scroll++;"
    },
    {
      "sha": "925c749594772d80faded11f566c73864e0c8be9",
      "filename": "gdb/tui/tui-disasm.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-disasm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-disasm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.h?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -28,8 +28,6 @@\n extern enum tui_status tui_set_disassem_content (struct gdbarch *, CORE_ADDR);\n extern void tui_show_disassem (struct gdbarch *, CORE_ADDR);\n extern void tui_show_disassem_and_update_source (struct gdbarch *, CORE_ADDR);\n-extern void tui_vertical_disassem_scroll (enum tui_scroll_direction, \n-\t\t\t\t\t  int);\n extern void tui_get_begin_asm_address (struct gdbarch **, CORE_ADDR *);\n \n #endif /* TUI_TUI_DISASM_H */"
    },
    {
      "sha": "5c50d2fb794792ed575a9070fd750f3805888908",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -309,14 +309,14 @@ tui_source_is_displayed (const char *fullname)\n \n /* Scroll the source forward or backward vertically.  */\n void\n-tui_vertical_source_scroll (enum tui_scroll_direction scroll_direction,\n-\t\t\t    int num_to_scroll)\n+tui_source_window::do_scroll_vertical\n+  (enum tui_scroll_direction scroll_direction, int num_to_scroll)\n {\n-  if (TUI_SRC_WIN->generic.content != NULL)\n+  if (generic.content != NULL)\n     {\n       struct tui_line_or_address l;\n       struct symtab *s;\n-      tui_win_content content = TUI_SRC_WIN->generic.content;\n+      tui_win_content content = generic.content;\n       struct symtab_and_line cursal = get_current_source_symtab_and_line ();\n \n       if (cursal.symtab == NULL)"
    },
    {
      "sha": "7757373a2a2b1cbea3afbe7f68e9c0f82048b184",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -36,7 +36,5 @@ extern void tui_show_symtab_source (struct gdbarch *, struct symtab *,\n \t\t\t\t    struct tui_line_or_address,\n \t\t\t\t    int);\n extern int tui_source_is_displayed (const char *);\n-extern void tui_vertical_source_scroll (enum tui_scroll_direction,\n-\t\t\t\t\tint);\n \n #endif /* TUI_TUI_SOURCE_H */"
    },
    {
      "sha": "4dad1443352da02bc723c105a4871ad6768cacaf",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 23,
      "deletions": 107,
      "changes": 130,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -470,125 +470,41 @@ tui_set_win_focus_to (struct tui_win_info *win_info)\n \n \n void\n-tui_scroll_forward (struct tui_win_info *win_to_scroll, \n-\t\t    int num_to_scroll)\n+tui_win_info::forward_scroll (int num_to_scroll)\n {\n-  if (win_to_scroll != TUI_CMD_WIN)\n-    {\n-      int _num_to_scroll = num_to_scroll;\n-\n-      if (num_to_scroll == 0)\n-\t_num_to_scroll = win_to_scroll->generic.height - 3;\n-\n-      /* If we are scrolling the source or disassembly window, do a\n-         \"psuedo\" scroll since not all of the source is in memory,\n-         only what is in the viewport.  If win_to_scroll is the\n-         command window do nothing since the term should handle\n-         it.  */\n-      if (win_to_scroll == TUI_SRC_WIN)\n-\ttui_vertical_source_scroll (FORWARD_SCROLL, _num_to_scroll);\n-      else if (win_to_scroll == TUI_DISASM_WIN)\n-\ttui_vertical_disassem_scroll (FORWARD_SCROLL, _num_to_scroll);\n-      else if (win_to_scroll == TUI_DATA_WIN)\n-\ttui_vertical_data_scroll (FORWARD_SCROLL, _num_to_scroll);\n-    }\n-}\n+  if (num_to_scroll == 0)\n+    num_to_scroll = generic.height - 3;\n \n-void\n-tui_scroll_backward (struct tui_win_info *win_to_scroll, \n-\t\t     int num_to_scroll)\n-{\n-  if (win_to_scroll != TUI_CMD_WIN)\n-    {\n-      int _num_to_scroll = num_to_scroll;\n-\n-      if (num_to_scroll == 0)\n-\t_num_to_scroll = win_to_scroll->generic.height - 3;\n-\n-      /* If we are scrolling the source or disassembly window, do a\n-         \"psuedo\" scroll since not all of the source is in memory,\n-         only what is in the viewport.  If win_to_scroll is the\n-         command window do nothing since the term should handle\n-         it.  */\n-      if (win_to_scroll == TUI_SRC_WIN)\n-\ttui_vertical_source_scroll (BACKWARD_SCROLL, _num_to_scroll);\n-      else if (win_to_scroll == TUI_DISASM_WIN)\n-\ttui_vertical_disassem_scroll (BACKWARD_SCROLL, _num_to_scroll);\n-      else if (win_to_scroll == TUI_DATA_WIN)\n-\ttui_vertical_data_scroll (BACKWARD_SCROLL, _num_to_scroll);\n-    }\n+  do_scroll_vertical (FORWARD_SCROLL, num_to_scroll);\n }\n \n-\n void\n-tui_scroll_left (struct tui_win_info *win_to_scroll,\n-\t\t int num_to_scroll)\n+tui_win_info::backward_scroll (int num_to_scroll)\n {\n-  if (win_to_scroll != TUI_CMD_WIN)\n-    {\n-      int _num_to_scroll = num_to_scroll;\n-\n-      if (_num_to_scroll == 0)\n-\t_num_to_scroll = 1;\n-\n-      /* If we are scrolling the source or disassembly window, do a\n-         \"psuedo\" scroll since not all of the source is in memory,\n-         only what is in the viewport. If win_to_scroll is the command\n-         window do nothing since the term should handle it.  */\n-      if (win_to_scroll == TUI_SRC_WIN\n-\t  || win_to_scroll == TUI_DISASM_WIN)\n-\ttui_horizontal_source_scroll (win_to_scroll, LEFT_SCROLL,\n-\t\t\t\t      _num_to_scroll);\n-    }\n+  if (num_to_scroll == 0)\n+    num_to_scroll = generic.height - 3;\n+\n+  do_scroll_vertical (BACKWARD_SCROLL, num_to_scroll);\n }\n \n \n void\n-tui_scroll_right (struct tui_win_info *win_to_scroll, \n-\t\t  int num_to_scroll)\n+tui_win_info::left_scroll (int num_to_scroll)\n {\n-  if (win_to_scroll != TUI_CMD_WIN)\n-    {\n-      int _num_to_scroll = num_to_scroll;\n-\n-      if (_num_to_scroll == 0)\n-\t_num_to_scroll = 1;\n-\n-      /* If we are scrolling the source or disassembly window, do a\n-         \"psuedo\" scroll since not all of the source is in memory,\n-         only what is in the viewport. If win_to_scroll is the command\n-         window do nothing since the term should handle it.  */\n-      if (win_to_scroll == TUI_SRC_WIN\n-\t  || win_to_scroll == TUI_DISASM_WIN)\n-\ttui_horizontal_source_scroll (win_to_scroll, RIGHT_SCROLL,\n-\t\t\t\t      _num_to_scroll);\n-    }\n+  if (num_to_scroll == 0)\n+    num_to_scroll = 1;\n+\n+  do_scroll_horizontal (LEFT_SCROLL, num_to_scroll);\n }\n \n \n-/* Scroll a window.  Arguments are passed through a va_list.  */\n void\n-tui_scroll (enum tui_scroll_direction direction,\n-\t    struct tui_win_info *win_to_scroll,\n-\t    int num_to_scroll)\n+tui_win_info::right_scroll (int num_to_scroll)\n {\n-  switch (direction)\n-    {\n-    case FORWARD_SCROLL:\n-      tui_scroll_forward (win_to_scroll, num_to_scroll);\n-      break;\n-    case BACKWARD_SCROLL:\n-      tui_scroll_backward (win_to_scroll, num_to_scroll);\n-      break;\n-    case LEFT_SCROLL:\n-      tui_scroll_left (win_to_scroll, num_to_scroll);\n-      break;\n-    case RIGHT_SCROLL:\n-      tui_scroll_right (win_to_scroll, num_to_scroll);\n-      break;\n-    default:\n-      break;\n-    }\n+  if (num_to_scroll == 0)\n+    num_to_scroll = 1;\n+\n+  do_scroll_horizontal (RIGHT_SCROLL, num_to_scroll);\n }\n \n \n@@ -880,7 +796,7 @@ tui_scroll_forward_command (const char *arg, int from_tty)\n     parse_scrolling_args (arg, &win_to_scroll, NULL);\n   else\n     parse_scrolling_args (arg, &win_to_scroll, &num_to_scroll);\n-  tui_scroll (FORWARD_SCROLL, win_to_scroll, num_to_scroll);\n+  win_to_scroll->forward_scroll (num_to_scroll);\n }\n \n \n@@ -896,7 +812,7 @@ tui_scroll_backward_command (const char *arg, int from_tty)\n     parse_scrolling_args (arg, &win_to_scroll, NULL);\n   else\n     parse_scrolling_args (arg, &win_to_scroll, &num_to_scroll);\n-  tui_scroll (BACKWARD_SCROLL, win_to_scroll, num_to_scroll);\n+  win_to_scroll->backward_scroll (num_to_scroll);\n }\n \n \n@@ -909,7 +825,7 @@ tui_scroll_left_command (const char *arg, int from_tty)\n   /* Make sure the curses mode is enabled.  */\n   tui_enable ();\n   parse_scrolling_args (arg, &win_to_scroll, &num_to_scroll);\n-  tui_scroll (LEFT_SCROLL, win_to_scroll, num_to_scroll);\n+  win_to_scroll->left_scroll (num_to_scroll);\n }\n \n \n@@ -922,7 +838,7 @@ tui_scroll_right_command (const char *arg, int from_tty)\n   /* Make sure the curses mode is enabled.  */\n   tui_enable ();\n   parse_scrolling_args (arg, &win_to_scroll, &num_to_scroll);\n-  tui_scroll (RIGHT_SCROLL, win_to_scroll, num_to_scroll);\n+  win_to_scroll->right_scroll (num_to_scroll);\n }\n \n "
    },
    {
      "sha": "e97eb672d78b270bf83aaa9c4b006c6b72f7e901",
      "filename": "gdb/tui/tui-win.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-win.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-win.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.h?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -30,8 +30,6 @@ extern void tui_scroll_forward (struct tui_win_info *, int);\n extern void tui_scroll_backward (struct tui_win_info *, int);\n extern void tui_scroll_left (struct tui_win_info *, int);\n extern void tui_scroll_right (struct tui_win_info *, int);\n-extern void tui_scroll (enum tui_scroll_direction, \n-\t\t\tstruct tui_win_info *, int);\n extern void tui_set_win_focus_to (struct tui_win_info *);\n extern void tui_resize_all (void);\n extern void tui_refresh_all_win (void);"
    },
    {
      "sha": "0c9661f1cbe4860a5d48cc43c40d37d852e52f9d",
      "filename": "gdb/tui/tui-windata.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-windata.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-windata.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-windata.c?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -245,15 +245,15 @@ tui_check_data_values (struct frame_info *frame)\n \n /* Scroll the data window vertically forward or backward.  */\n void\n-tui_vertical_data_scroll (enum tui_scroll_direction scroll_direction,\n-\t\t\t  int num_to_scroll)\n+tui_data_window::do_scroll_vertical\n+  (enum tui_scroll_direction scroll_direction, int num_to_scroll)\n {\n   int first_element_no;\n   int first_line = (-1);\n \n   first_element_no = tui_first_data_item_displayed ();\n   if (first_element_no \n-      < TUI_DATA_WIN->detail.data_display_info.regs_content_count)\n+      < detail.data_display_info.regs_content_count)\n     first_line = tui_line_from_reg_element_no (first_element_no);\n   else\n     { /* Calculate the first line from the element number which is in"
    },
    {
      "sha": "c070f76c392001dc4dcb05eb6fc9c537c8cb8c44",
      "filename": "gdb/tui/tui-windata.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-windata.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-windata.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-windata.h?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -32,7 +32,5 @@ extern int tui_first_data_item_displayed (void);\n extern void tui_delete_data_content_windows (void);\n extern void tui_refresh_data_win (void);\n extern void tui_display_data_from (int, int);\n-extern void tui_vertical_data_scroll (enum tui_scroll_direction, \n-\t\t\t\t      int);\n \n #endif /* TUI_TUI_WINDATA_H */"
    },
    {
      "sha": "8c269e2ec4ac8279137dd3212712fa37eefc5db1",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -335,26 +335,25 @@ tui_refill_source_window (struct tui_win_info *win_info)\n /* Scroll the source forward or backward horizontally.  */\n \n void\n-tui_horizontal_source_scroll (struct tui_win_info *win_info,\n-\t\t\t      enum tui_scroll_direction direction,\n-\t\t\t      int num_to_scroll)\n+tui_source_window_base::do_scroll_horizontal\n+  (enum tui_scroll_direction direction, int num_to_scroll)\n {\n-  if (win_info->generic.content != NULL)\n+  if (generic.content != NULL)\n     {\n       int offset;\n \n       if (direction == LEFT_SCROLL)\n-\toffset = win_info->detail.source_info.horizontal_offset\n+\toffset = detail.source_info.horizontal_offset\n \t  + num_to_scroll;\n       else\n \t{\n-\t  offset = win_info->detail.source_info.horizontal_offset\n+\t  offset = detail.source_info.horizontal_offset\n \t    - num_to_scroll;\n \t  if (offset < 0)\n \t    offset = 0;\n \t}\n-      win_info->detail.source_info.horizontal_offset = offset;\n-      tui_refill_source_window (win_info);\n+      detail.source_info.horizontal_offset = offset;\n+      tui_refill_source_window (this);\n     }\n }\n "
    },
    {
      "sha": "98ce75fb6201d9ebc943d0de4d9b54ac193a0064",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13446e05a363db17f0140b1450fc7df509d2ca37/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=13446e05a363db17f0140b1450fc7df509d2ca37",
      "patch": "@@ -53,9 +53,6 @@ extern void tui_update_source_windows_with_line (struct symtab *,\n extern void tui_clear_source_content (struct tui_win_info *, int);\n extern void tui_erase_source_content (struct tui_win_info *, int);\n extern void tui_show_source_content (struct tui_win_info *);\n-extern void tui_horizontal_source_scroll (struct tui_win_info *,\n-\t\t\t\t\t  enum tui_scroll_direction, \n-\t\t\t\t\t  int);\n extern void tui_refill_source_window (struct tui_win_info *);\n extern enum tui_status tui_set_exec_info_content (struct tui_win_info *);\n extern void tui_show_exec_info_content (struct tui_win_info *);"
    }
  ]
}