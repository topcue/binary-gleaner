{
  "sha": "04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDRlYzBmYTI5NzYzN2U2MDc3Y2RiYjczNWNlNmQzYzhmZGUzYzlhNQ==",
  "commit": {
    "author": {
      "name": "Jon Turney",
      "email": "jon.turney@dronecode.org.uk",
      "date": "2020-07-01T15:18:23Z"
    },
    "committer": {
      "name": "Jon Turney",
      "email": "jon.turney@dronecode.org.uk",
      "date": "2020-08-12T14:08:27Z"
    },
    "message": "Refine size constraints applied to win32pstatus ELF notes\n\nDon't reject any win32pstatus notes smaller than minimum size for a\nNOTE_INFO_THREAD.\n\nThis only happens to work because the Cygwin dumper tool currently\nwrites all these notes as the largest size of the union, (which wastes\nlots of space in the core dump).\n\nInstead, apply the appropriate size constraint for each win32pstatus\nnote type.\n\nbfd/ChangeLog:\n\n2020-07-11  Jon Turney  <jon.turney@dronecode.org.uk>\n\n\t* elf.c (elfcore_grok_win32pstatus): Don't apply size constraint\n\tfor NOTE_INFO_THREAD to all win32pstatus ELF notes, instead apply\n\tappropriate size constraint for each win32pstatus note type.",
    "tree": {
      "sha": "7d5cb0abee09cba76ffc6fca267a742b5f5fe399",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7d5cb0abee09cba76ffc6fca267a742b5f5fe399"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABAgAGBQJfM/fbAAoJEMfIbwNwKFyBszMQAJuN+5bek8K1NFCrKaEPHQyp\n4tildREZEDm0S00obP8Li4mfC8tJQUjWRgk8IERZW8ZbBMIdR35l0i+scrn8DdfX\n0tSQgjjkHzuZs5+0tu2PZhq5dj0+Y/VMEzVSNJyvBb7NjePGBiphrAFnQqAwXiAP\n4rCAmAvFbgyev14MPLNzw87Cmvk3zTv+mVs4N+eZr2et6pFSmNN1D1xRFo8JHEck\n/TSFkEQxRlVnu9L0NcsFYfbZv4N7f6gWB6PWmpzg22Um2Hn0OeiSZfsAkthNbo4P\nxjumyTr3euOFiuO3ITaD+0fP9otXCiIcCcFw2HnYmwO489HktLhHAwnqvT3rGrOh\nDch9jKASmyjodjvSfASgXXZzOVbPCOdXHJ7umZetvb7iR4jzostkeA7+NZhlwcJp\nqAVXJgEkfLfOPgCCOfuzHVNIXa4DHnXBUfTK8iTf9AXs0Z21/LA+YodJif8fHI9j\n9CyvMv+gfDtgRps3T5JATSo5vtFtsfwJ1OMyvwZOIRRa7eL9xLVngegojDM4gIel\nKMAxzr4sJtcolPWGjZ8RLMApTiRy8HTzRxzcWdZoi7bPCxExBTzcmWg7/DWfpGoQ\nFWy4N5ibwoLMVTbwO0wJeNPEBtxsJscH8msBqoZjEEjdqHDQO1aEHS7E/e9s1ZQ+\nYdd3AqBshiCxuRiJcKs6\n=kNUm\n-----END PGP SIGNATURE-----",
      "payload": "tree 7d5cb0abee09cba76ffc6fca267a742b5f5fe399\nparent 03c29a6faf7bd25a4ff368530e700f70363fe772\nauthor Jon Turney <jon.turney@dronecode.org.uk> 1593616703 +0100\ncommitter Jon Turney <jon.turney@dronecode.org.uk> 1597241307 +0100\n\nRefine size constraints applied to win32pstatus ELF notes\n\nDon't reject any win32pstatus notes smaller than minimum size for a\nNOTE_INFO_THREAD.\n\nThis only happens to work because the Cygwin dumper tool currently\nwrites all these notes as the largest size of the union, (which wastes\nlots of space in the core dump).\n\nInstead, apply the appropriate size constraint for each win32pstatus\nnote type.\n\nbfd/ChangeLog:\n\n2020-07-11  Jon Turney  <jon.turney@dronecode.org.uk>\n\n\t* elf.c (elfcore_grok_win32pstatus): Don't apply size constraint\n\tfor NOTE_INFO_THREAD to all win32pstatus ELF notes, instead apply\n\tappropriate size constraint for each win32pstatus note type.\n"
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5/comments",
  "author": {
    "login": "jon-turney",
    "id": 3497232,
    "node_id": "MDQ6VXNlcjM0OTcyMzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3497232?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jon-turney",
    "html_url": "https://github.com/jon-turney",
    "followers_url": "https://api.github.com/users/jon-turney/followers",
    "following_url": "https://api.github.com/users/jon-turney/following{/other_user}",
    "gists_url": "https://api.github.com/users/jon-turney/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jon-turney/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jon-turney/subscriptions",
    "organizations_url": "https://api.github.com/users/jon-turney/orgs",
    "repos_url": "https://api.github.com/users/jon-turney/repos",
    "events_url": "https://api.github.com/users/jon-turney/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jon-turney/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jon-turney",
    "id": 3497232,
    "node_id": "MDQ6VXNlcjM0OTcyMzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3497232?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jon-turney",
    "html_url": "https://github.com/jon-turney",
    "followers_url": "https://api.github.com/users/jon-turney/followers",
    "following_url": "https://api.github.com/users/jon-turney/following{/other_user}",
    "gists_url": "https://api.github.com/users/jon-turney/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jon-turney/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jon-turney/subscriptions",
    "organizations_url": "https://api.github.com/users/jon-turney/orgs",
    "repos_url": "https://api.github.com/users/jon-turney/repos",
    "events_url": "https://api.github.com/users/jon-turney/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jon-turney/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "03c29a6faf7bd25a4ff368530e700f70363fe772",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/03c29a6faf7bd25a4ff368530e700f70363fe772",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/03c29a6faf7bd25a4ff368530e700f70363fe772"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 22,
    "deletions": 1
  },
  "files": [
    {
      "sha": "9b4e74d214e43713a5f2282f3c43f3319b4e1c2d",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-07-11  Jon Turney  <jon.turney@dronecode.org.uk>\n+\n+\t* elf.c (elfcore_grok_win32pstatus): Don't apply size constraint\n+\tfor NOTE_INFO_THREAD to all win32pstatus ELF notes, instead apply\n+\tappropriate size constraint for each win32pstatus note type.\n+\n 2020-07-01  Jon Turney  <jon.turney@dronecode.org.uk>\n \n \t* elf.c (elfcore_grok_win32pstatus): Don't hardcode the size of"
    },
    {
      "sha": "171880d6c2a1f36b41bee0e53881b799733bace1",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=04ec0fa297637e6077cdbb735ce6d3c8fde3c9a5",
      "patch": "@@ -10139,12 +10139,13 @@ elfcore_grok_win32pstatus (bfd *abfd, Elf_Internal_Note *note)\n   char buf[30];\n   char *name;\n   size_t len;\n+  size_t name_size;\n   asection *sect;\n   int type;\n   int is_active_thread;\n   bfd_vma base_addr;\n \n-  if (note->descsz < 728)\n+  if (note->descsz < 4)\n     return TRUE;\n \n   if (! CONST_STRNEQ (note->namedata, \"win32\"))\n@@ -10155,12 +10156,18 @@ elfcore_grok_win32pstatus (bfd *abfd, Elf_Internal_Note *note)\n   switch (type)\n     {\n     case NOTE_INFO_PROCESS:\n+      if (note->descsz < 12)\n+        return FALSE;\n+\n       /* FIXME: need to add ->core->command.  */\n       elf_tdata (abfd)->core->pid = bfd_get_32 (abfd, note->descdata + 4);\n       elf_tdata (abfd)->core->signal = bfd_get_32 (abfd, note->descdata + 8);\n       break;\n \n     case NOTE_INFO_THREAD:\n+      if (note->descsz < 12)\n+        return FALSE;\n+\n       /* Make a \".reg/<tid>\" section containing the Win32 API thread CONTEXT\n          structure. */\n       /* thread_info.tid */\n@@ -10192,6 +10199,9 @@ elfcore_grok_win32pstatus (bfd *abfd, Elf_Internal_Note *note)\n       break;\n \n     case NOTE_INFO_MODULE:\n+      if (note->descsz < 12)\n+        return FALSE;\n+\n       /* Make a \".module/xxxxxxxx\" section.  */\n       /* module_info.base_address */\n       base_addr = bfd_get_32 (abfd, note->descdata + 4);\n@@ -10209,6 +10219,11 @@ elfcore_grok_win32pstatus (bfd *abfd, Elf_Internal_Note *note)\n       if (sect == NULL)\n \treturn FALSE;\n \n+      /* module_info.module_name_size */\n+      name_size = bfd_get_32 (abfd, note->descdata + 8);\n+      if (note->descsz < 12 + name_size)\n+        return FALSE;\n+\n       sect->size = note->descsz;\n       sect->filepos = note->descpos;\n       sect->alignment_power = 2;"
    }
  ]
}