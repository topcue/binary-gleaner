{
  "sha": "f06f1252b0b8ef20adb4296faaf8293c9d36f615",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjA2ZjEyNTJiMGI4ZWYyMGFkYjQyOTZmYWFmODI5M2M5ZDM2ZjYxNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-10T17:05:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-10T20:48:53Z"
    },
    "message": "Change Ada catchpoints to be bp_catchpoint\n\nLike Pedro's earlier patches to change catchpoint to be of type\nbp_catchpoint, this changes the Ada catchpoints to follow.\n\nTested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-07-10  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.h (is_ada_exception_catchpoint): Declare.\n\t* breakpoint.c (init_ada_exception_breakpoint): Register as\n\tbp_catchpoint.\n\t(print_one_breakpoint_location, print_one_breakpoint): Use\n\tis_ada_exception_catchpoint.\n\t* ada-lang.c (class ada_catchpoint_location): Pass\n\tbp_loc_software_breakpoint to bp_location constructor.\n\t(is_ada_exception_catchpoint): New function.\n\ngdb/testsuite/ChangeLog\n2019-07-10  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/mi_ex_cond.exp: Update expected results.\n\t* gdb.ada/mi_catch_ex_hand.exp: Update expected results.\n\t* gdb.ada/mi_catch_ex.exp: Update expected results.\n\t* gdb.ada/mi_catch_assert.exp: Update expected results.\n\t* gdb.ada/catch_ex.exp (catch_exception_info)\n\t(catch_exception_entry, catch_assert_entry)\n\t(catch_unhandled_entry): Update.\n\t* gdb.ada/catch_assert_if.exp: Update expected results.",
    "tree": {
      "sha": "3fd450906d0d4f71e257283f03d6ae3558a2ac36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3fd450906d0d4f71e257283f03d6ae3558a2ac36"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f06f1252b0b8ef20adb4296faaf8293c9d36f615",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f06f1252b0b8ef20adb4296faaf8293c9d36f615",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f06f1252b0b8ef20adb4296faaf8293c9d36f615",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f06f1252b0b8ef20adb4296faaf8293c9d36f615/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7a5d944b9e86bf73ae5acaa984df24d175b80f68",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a5d944b9e86bf73ae5acaa984df24d175b80f68",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7a5d944b9e86bf73ae5acaa984df24d175b80f68"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 58,
    "deletions": 22
  },
  "files": [
    {
      "sha": "aa8b53a121492e00548e48c7b9eb0eb25468ac19",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -1,3 +1,14 @@\n+2019-07-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.h (is_ada_exception_catchpoint): Declare.\n+\t* breakpoint.c (init_ada_exception_breakpoint): Register as\n+\tbp_catchpoint.\n+\t(print_one_breakpoint_location, print_one_breakpoint): Use\n+\tis_ada_exception_catchpoint.\n+\t* ada-lang.c (class ada_catchpoint_location): Pass\n+\tbp_loc_software_breakpoint to bp_location constructor.\n+\t(is_ada_exception_catchpoint): New function.\n+\n 2019-07-10  Tom Tromey  <tromey@adacore.com>\n \n \t* arm-tdep.c (arm_exidx_entry_s): Remove typedef.  Don't define"
    },
    {
      "sha": "deb5099024edf551a21df9399205b189c022460b",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 14,
      "deletions": 6,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -12283,7 +12283,7 @@ class ada_catchpoint_location : public bp_location\n {\n public:\n   ada_catchpoint_location (breakpoint *owner)\n-    : bp_location (owner)\n+    : bp_location (owner, bp_loc_software_breakpoint)\n   {}\n \n   /* The condition that checks whether the exception that was raised\n@@ -12546,14 +12546,11 @@ print_one_exception (enum ada_exception_catchpoint_kind ex,\n   struct value_print_options opts;\n \n   get_user_print_options (&opts);\n+\n   if (opts.addressprint)\n-    {\n-      annotate_field (4);\n-      uiout->field_core_addr (\"addr\", b->loc->gdbarch, b->loc->address);\n-    }\n+    uiout->field_skip (\"addr\");\n \n   annotate_field (5);\n-  *last_loc = b->loc;\n   switch (ex)\n     {\n       case ada_catch_exception:\n@@ -12871,6 +12868,17 @@ print_recreate_catch_handlers (struct breakpoint *b,\n \n static struct breakpoint_ops catch_handlers_breakpoint_ops;\n \n+/* See ada-lang.h.  */\n+\n+bool\n+is_ada_exception_catchpoint (breakpoint *bp)\n+{\n+  return (bp->ops == &catch_exception_breakpoint_ops\n+\t  || bp->ops == &catch_exception_unhandled_breakpoint_ops\n+\t  || bp->ops == &catch_assert_breakpoint_ops\n+\t  || bp->ops == &catch_handlers_breakpoint_ops);\n+}\n+\n /* Split the arguments specified in a \"catch exception\" command.  \n    Set EX to the appropriate catchpoint type.\n    Set EXCEP_STRING to the name of the specific exception if"
    },
    {
      "sha": "2fc3f523ca7df00a2dd66f1277181f1840ee1ec5",
      "filename": "gdb/ada-lang.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/ada-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/ada-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.h?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -378,6 +378,10 @@ extern void create_ada_exception_catchpoint\n    const std::string &excep_string, const std::string &cond_string, int tempflag,\n    int disabled, int from_tty);\n \n+/* Return true if BP is an Ada catchpoint.  */\n+\n+extern bool is_ada_exception_catchpoint (breakpoint *bp);\n+\n /* Some information about a given Ada exception.  */\n \n struct ada_exc_info"
    },
    {
      "sha": "09c2a27a38b0f704730891c65db87e68b8ea6273",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -6054,7 +6054,8 @@ print_one_breakpoint_location (struct breakpoint *b,\n \t  annotate_field (5);\n \t  uiout->field_string (\"what\", w->exp_string);\n \t}\n-      else if (!is_catchpoint (b) || is_exception_catchpoint (b))\n+      else if (!is_catchpoint (b) || is_exception_catchpoint (b)\n+\t       || is_ada_exception_catchpoint (b))\n \t{\n \t  if (opts.addressprint)\n \t    {\n@@ -6329,7 +6330,8 @@ print_one_breakpoint (struct breakpoint *b,\n \t exposed to users.  We do however display the internal\n \t breakpoint locations with \"maint info breakpoints\".  */\n       if (!is_hardware_watchpoint (b)\n-\t  && (!is_catchpoint (b) || is_exception_catchpoint (b))\n+\t  && (!is_catchpoint (b) || is_exception_catchpoint (b)\n+\t      || is_ada_exception_catchpoint (b))\n \t  && (allflag\n \t      || (b->loc && (b->loc->next || !b->loc->enabled))))\n \t{\n@@ -11212,7 +11214,7 @@ init_ada_exception_breakpoint (struct breakpoint *b,\n          enough for now, though.  */\n     }\n \n-  init_raw_breakpoint (b, gdbarch, sal, bp_breakpoint, ops);\n+  init_raw_breakpoint (b, gdbarch, sal, bp_catchpoint, ops);\n \n   b->enable_state = enabled ? bp_enabled : bp_disabled;\n   b->disposition = tempflag ? disp_del : disp_donttouch;"
    },
    {
      "sha": "247171abaee7466869f682e9c0368ca44571f89f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -1,3 +1,14 @@\n+2019-07-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/mi_ex_cond.exp: Update expected results.\n+\t* gdb.ada/mi_catch_ex_hand.exp: Update expected results.\n+\t* gdb.ada/mi_catch_ex.exp: Update expected results.\n+\t* gdb.ada/mi_catch_assert.exp: Update expected results.\n+\t* gdb.ada/catch_ex.exp (catch_exception_info)\n+\t(catch_exception_entry, catch_assert_entry)\n+\t(catch_unhandled_entry): Update.\n+\t* gdb.ada/catch_assert_if.exp: Update expected results.\n+\n 2019-07-10  Richard Bunt  <richard.bunt@arm.com>\n \tStephen Roberts  <stephen.roberts@arm.com>\n "
    },
    {
      "sha": "61a12a7d73826e16165f9fbbd151f10035c78aea",
      "filename": "gdb/testsuite/gdb.ada/catch_assert_if.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/catch_assert_if.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/catch_assert_if.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/catch_assert_if.exp?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -70,7 +70,7 @@ gdb_test \"catch assert if Global_Var = 2\" \\\n \n # Check that condition is stored and properly displayed.\n \n-set exp_bp \".*$decimal${sp}breakpoint${sp}keep${sp}y${sp}$hex failed Ada assertions$eol${sp}stop only if Global_Var = 2.*\"\n+set exp_bp \".*$decimal${sp}catchpoint${sp}keep${sp}y${sp}failed Ada assertions$eol${sp}stop only if Global_Var = 2.*\"\n gdb_test \"info breakpoint\" $exp_bp \"Check catch assertions with condition\"\n \n set bp_location [gdb_get_line_number \"STOP\" ${testdir}/bla.adb]"
    },
    {
      "sha": "5a560c1217d3480717a94c0bc300fa69410cd6da",
      "filename": "gdb/testsuite/gdb.ada/catch_ex.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/catch_ex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/catch_ex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/catch_ex.exp?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -32,7 +32,7 @@ set sp \"\\[ \\t\\]*\"\n \n set info_break_header \"Num${sp}Type${sp}Disp${sp}Enb${sp}Address${sp}What\"\n set catch_exception_info \\\n-  \"$any_nb${sp}breakpoint${sp}keep${sp}y${sp}$any_addr${sp}all Ada exceptions\"\n+  \"$any_nb${sp}catchpoint${sp}keep${sp}y${sp}all Ada exceptions\"\n \n ####################################\n # 1. Try catching all exceptions.  #\n@@ -105,11 +105,11 @@ gdb_test \"catch exception unhandled\" \\\n          \"insert catchpoint on unhandled exceptions\"\n \n set catch_exception_entry \\\n-  \"$any_nb${sp}breakpoint${sp}keep${sp}y${sp}$any_addr${sp}\\`Program_Error' Ada exception\"\n+  \"$any_nb${sp}catchpoint${sp}keep${sp}y${sp}\\`Program_Error' Ada exception\"\n set catch_assert_entry \\\n-  \"$any_nb${sp}breakpoint${sp}keep${sp}y${sp}$any_addr${sp}failed Ada assertions\"\n+  \"$any_nb${sp}catchpoint${sp}keep${sp}y${sp}failed Ada assertions\"\n set catch_unhandled_entry \\\n-  \"$any_nb${sp}breakpoint${sp}keep${sp}y${sp}$any_addr${sp}unhandled Ada exceptions\"\n+  \"$any_nb${sp}catchpoint${sp}keep${sp}y${sp}unhandled Ada exceptions\"\n \n gdb_test \"info break\" \\\n          \"$info_break_header$eol.*$catch_exception_entry$eol$catch_assert_entry$eol$catch_unhandled_entry\" \\"
    },
    {
      "sha": "6e6093ed5215ac4b33dd3902c2d4b8935fccc7e0",
      "filename": "gdb/testsuite/gdb.ada/mi_catch_assert.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_catch_assert.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_catch_assert.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_catch_assert.exp?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -81,7 +81,7 @@ if ![mi_run_to_main] then {\n }\n \n mi_gdb_test \"-catch-assert -c \\\"Global_Var = 2\\\"\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"failed Ada assertions\\\",.*,cond=\\\"Global_Var = 2\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"failed Ada assertions\\\",.*,cond=\\\"Global_Var = 2\\\",.*}\" \\\n             \"catch assert failures with condition\"\n \n set bp_location [gdb_get_line_number \"STOP\" ${testdir}/bla.adb]"
    },
    {
      "sha": "93585989b8ea90d98af4a6fcebbe9cbe3bf30f71",
      "filename": "gdb/testsuite/gdb.ada/mi_catch_ex.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_catch_ex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_catch_ex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_catch_ex.exp?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -75,7 +75,7 @@ if ![mi_run_to_main] then {\n }\n \n mi_gdb_test \"-catch-exception\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"all Ada exceptions\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"all Ada exceptions\\\",.*}\" \\\n             \"catch all exceptions\"\n \n # Continue to caught exception.\n@@ -131,15 +131,15 @@ if ![mi_run_to_main] then {\n }\n \n mi_gdb_test \"-catch-exception -e Program_Error\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"`Program_Error' Ada exception\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"`Program_Error' Ada exception\\\",.*}\" \\\n             \"catch Program_Error\"\n \n mi_gdb_test \"-catch-assert\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"failed Ada assertions\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"failed Ada assertions\\\",.*}\" \\\n             \"catch assert failures\"\n \n mi_gdb_test \"-catch-exception -u\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"unhandled Ada exceptions\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"unhandled Ada exceptions\\\",.*}\" \\\n             \"catch unhandled exceptions\"\n \n mi_execute_to \"exec-continue\" \\"
    },
    {
      "sha": "a4734b99094a93fa095ad6ebef2b9b1eb9413b7c",
      "filename": "gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_catch_ex_hand.exp?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -70,7 +70,7 @@ if ![mi_run_to_main] then {\n }\n \n mi_gdb_test \"-catch-handlers\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"all Ada exceptions handlers\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"all Ada exceptions handlers\\\",.*}\" \\\n             \"catch all exceptions handlers\"\n \n # Continue to exception handler.\n@@ -120,7 +120,7 @@ if ![mi_run_to_main] then {\n }\n \n mi_gdb_test \"-catch-handlers -e Constraint_Error\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"`Constraint_Error' Ada exception handlers\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"`Constraint_Error' Ada exception handlers\\\",.*}\" \\\n             \"catch Constraint_Error\"\n \n mi_execute_to \"exec-continue\" \\"
    },
    {
      "sha": "16aa198e5e0d840548d16fe88d29714508106802",
      "filename": "gdb/testsuite/gdb.ada/mi_ex_cond.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_ex_cond.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f06f1252b0b8ef20adb4296faaf8293c9d36f615/gdb/testsuite/gdb.ada/mi_ex_cond.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mi_ex_cond.exp?ref=f06f1252b0b8ef20adb4296faaf8293c9d36f615",
      "patch": "@@ -69,7 +69,7 @@ mi_gdb_load ${binfile}\n # catchpoint that uses both conditions and exception name.\n \n mi_gdb_test \"-catch-exception -c \\\"i = 2\\\" -e constraint_error\" \\\n-            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",addr=\\\"$hex\\\",what=\\\"`constraint_error' Ada exception\\\",.*,cond=\\\"i = 2\\\",.*}\" \\\n+            \"\\\\^done,bkptno=\\\"$decimal\\\",bkpt={.*disp=\\\"keep\\\",enabled=\\\"y\\\",what=\\\"`constraint_error' Ada exception\\\",.*,cond=\\\"i = 2\\\",.*}\" \\\n             \"catch C_E if i = 2\"\n \n # It is important that we start the program's execution after having"
    }
  ]
}