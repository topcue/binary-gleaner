{
  "sha": "27087b7f6ce8c6d304b149df2484436d97e6334b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjcwODdiN2Y2Y2U4YzZkMzA0YjE0OWRmMjQ4NDQzNmQ5N2U2MzM0Yg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-14T18:09:59Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-14T19:31:01Z"
    },
    "message": "Apply 'const' in more places\n\nMany global arrays in gdb could be marked \"const\" but are not.  This\npatch changes some of them.  (There may be other arrays that could\nbenefit from this treatment.  I only examined arrays of strings.)\n\nThis lets the linker move some symbols to the readonly data section.\nFor example, previously:\n\n0000000000000000 d _ZL18can_use_agent_enum\n\nis now:\n\n0000000000000030 r _ZL18can_use_agent_enum\n\n2020-09-14  Tom Tromey  <tromey@adacore.com>\n\n\t* x86-tdep.h (x86_in_indirect_branch_thunk): Update.\n\t* x86-tdep.c (x86_is_thunk_register_name)\n\t(x86_in_indirect_branch_thunk): Update.\n\t* sparc64-tdep.c (sparc64_fpu_register_names)\n\t(sparc64_cp0_register_names, sparc64_register_names)\n\t(sparc64_pseudo_register_names): Now const.\n\t* sparc-tdep.h (struct gdbarch_tdep) <fpu_register_names,\n\tcp0_registers_num>: Now const.\n\t* sparc-tdep.c (sparc_core_register_names)\n\t(sparc32_fpu_register_names, sparc32_cp0_register_names)\n\t(sparc32_pseudo_register_names): Now const.\n\t(validate_tdesc_registers): Update.\n\t* rust-lang.c (rust_extensions): Now const.\n\t* p-lang.c (p_extensions): Now const.\n\t* objc-lang.c (objc_extensions): Now const.\n\t* nto-tdep.c (nto_thread_state_str): Now const.\n\t* moxie-tdep.c (moxie_register_names): Now const.\n\t* mips-tdep.h (struct gdbarch_tdep) <mips_processor_reg_names>:\n\tNow const.\n\t* mips-tdep.c (mips_generic_reg_names, mips_tx39_reg_names)\n\t(mips_linux_reg_names): Now const.\n\t(mips_gdbarch_init): Update.\n\t* microblaze-tdep.c (microblaze_register_names): Now const.\n\t* m68k-tdep.c (m68k_register_names): Now const.\n\t* m32r-tdep.c (m32r_register_names): Now const.\n\t* ia64-tdep.c (ia64_register_names): Now const.\n\t* i386-tdep.h (struct gdbarch_tdep) <register_names,\n\tymmh_register_names, ymm16h_regnum, mpx_register_names,\n\tk_register_names, zmmh_register_names, xmm_avx512_register_names,\n\tymm_avx512_register_names, pkeys_register_names>: Now const.\n\t* i386-tdep.c (i386_register_names, i386_zmm_names)\n\t(i386_zmmh_names, i386_k_names, i386_ymm_names, i386_ymmh_names)\n\t(i386_mpx_names, i386_pkeys_names, i386_bnd_names)\n\t(i386_mmx_names, i386_byte_names, i386_word_names): Now const.\n\t* f-lang.c (f_extensions): Now const.\n\t* d-lang.c (d_extensions): Now const.\n\t* csky-tdep.c (csky_register_names): Now const.\n\t* charset.c (default_charset_names, charset_enum): Now const.\n\t(_initialize_charset): Update.\n\t* c-lang.c (c_extensions, cplus_extensions, asm_extensions): Now\n\tconst.\n\t* bsd-uthread.c (bsd_uthread_solib_names): Now const.\n\t(bsd_uthread_solib_loaded): Update.\n\t(bsd_uthread_state): Now const.\n\t* amd64-tdep.c (amd64_register_names, amd64_ymm_names)\n\t(amd64_ymm_avx512_names, amd64_ymmh_names)\n\t(amd64_ymmh_avx512_names, amd64_mpx_names, amd64_k_names)\n\t(amd64_zmmh_names, amd64_zmm_names, amd64_xmm_avx512_names)\n\t(amd64_pkeys_names, amd64_byte_names, amd64_word_names)\n\t(amd64_dword_names): Now const.\n\t* agent.c (can_use_agent_enum): Now const.\n\t* ada-tasks.c (task_states, long_task_states): Now const.\n\t* ada-lang.c (known_runtime_file_name_patterns)\n\t(known_auxiliary_function_name_patterns, attribute_names)\n\t(standard_exc, ada_extensions): Now const.\n\ngdbserver/ChangeLog\n2020-09-14  Tom Tromey  <tromey@adacore.com>\n\n\t* tracepoint.cc (eval_result_names): Now const.\n\t* ax.cc (gdb_agent_op_names): Now const.",
    "tree": {
      "sha": "3cb8b064565b7fa8daea7cc96eb792a76c5717c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3cb8b064565b7fa8daea7cc96eb792a76c5717c3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/27087b7f6ce8c6d304b149df2484436d97e6334b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27087b7f6ce8c6d304b149df2484436d97e6334b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/27087b7f6ce8c6d304b149df2484436d97e6334b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27087b7f6ce8c6d304b149df2484436d97e6334b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "898066264058f68c4dd26e82e1310db305177c8e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/898066264058f68c4dd26e82e1310db305177c8e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/898066264058f68c4dd26e82e1310db305177c8e"
    }
  ],
  "stats": {
    "total": 247,
    "additions": 160,
    "deletions": 87
  },
  "files": [
    {
      "sha": "771a9d520109cdb869cb24b64b47004b2bf2c509",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -1,3 +1,61 @@\n+2020-09-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* x86-tdep.h (x86_in_indirect_branch_thunk): Update.\n+\t* x86-tdep.c (x86_is_thunk_register_name)\n+\t(x86_in_indirect_branch_thunk): Update.\n+\t* sparc64-tdep.c (sparc64_fpu_register_names)\n+\t(sparc64_cp0_register_names, sparc64_register_names)\n+\t(sparc64_pseudo_register_names): Now const.\n+\t* sparc-tdep.h (struct gdbarch_tdep) <fpu_register_names,\n+\tcp0_registers_num>: Now const.\n+\t* sparc-tdep.c (sparc_core_register_names)\n+\t(sparc32_fpu_register_names, sparc32_cp0_register_names)\n+\t(sparc32_pseudo_register_names): Now const.\n+\t(validate_tdesc_registers): Update.\n+\t* rust-lang.c (rust_extensions): Now const.\n+\t* p-lang.c (p_extensions): Now const.\n+\t* objc-lang.c (objc_extensions): Now const.\n+\t* nto-tdep.c (nto_thread_state_str): Now const.\n+\t* moxie-tdep.c (moxie_register_names): Now const.\n+\t* mips-tdep.h (struct gdbarch_tdep) <mips_processor_reg_names>:\n+\tNow const.\n+\t* mips-tdep.c (mips_generic_reg_names, mips_tx39_reg_names)\n+\t(mips_linux_reg_names): Now const.\n+\t(mips_gdbarch_init): Update.\n+\t* microblaze-tdep.c (microblaze_register_names): Now const.\n+\t* m68k-tdep.c (m68k_register_names): Now const.\n+\t* m32r-tdep.c (m32r_register_names): Now const.\n+\t* ia64-tdep.c (ia64_register_names): Now const.\n+\t* i386-tdep.h (struct gdbarch_tdep) <register_names,\n+\tymmh_register_names, ymm16h_regnum, mpx_register_names,\n+\tk_register_names, zmmh_register_names, xmm_avx512_register_names,\n+\tymm_avx512_register_names, pkeys_register_names>: Now const.\n+\t* i386-tdep.c (i386_register_names, i386_zmm_names)\n+\t(i386_zmmh_names, i386_k_names, i386_ymm_names, i386_ymmh_names)\n+\t(i386_mpx_names, i386_pkeys_names, i386_bnd_names)\n+\t(i386_mmx_names, i386_byte_names, i386_word_names): Now const.\n+\t* f-lang.c (f_extensions): Now const.\n+\t* d-lang.c (d_extensions): Now const.\n+\t* csky-tdep.c (csky_register_names): Now const.\n+\t* charset.c (default_charset_names, charset_enum): Now const.\n+\t(_initialize_charset): Update.\n+\t* c-lang.c (c_extensions, cplus_extensions, asm_extensions): Now\n+\tconst.\n+\t* bsd-uthread.c (bsd_uthread_solib_names): Now const.\n+\t(bsd_uthread_solib_loaded): Update.\n+\t(bsd_uthread_state): Now const.\n+\t* amd64-tdep.c (amd64_register_names, amd64_ymm_names)\n+\t(amd64_ymm_avx512_names, amd64_ymmh_names)\n+\t(amd64_ymmh_avx512_names, amd64_mpx_names, amd64_k_names)\n+\t(amd64_zmmh_names, amd64_zmm_names, amd64_xmm_avx512_names)\n+\t(amd64_pkeys_names, amd64_byte_names, amd64_word_names)\n+\t(amd64_dword_names): Now const.\n+\t* agent.c (can_use_agent_enum): Now const.\n+\t* ada-tasks.c (task_states, long_task_states): Now const.\n+\t* ada-lang.c (known_runtime_file_name_patterns)\n+\t(known_auxiliary_function_name_patterns, attribute_names)\n+\t(standard_exc, ada_extensions): Now const.\n+\n 2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* bcache.h (struct bcache) <bcache>: Remove constructor."
    },
    {
      "sha": "5f0e68ea892cc3e0b0ea88c62c87ae46b81c57fb",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -315,11 +315,11 @@ static int warning_limit = 2;\n    expression evaluation.  */\n static int warnings_issued = 0;\n \n-static const char *known_runtime_file_name_patterns[] = {\n+static const char * const known_runtime_file_name_patterns[] = {\n   ADA_KNOWN_RUNTIME_FILE_NAME_PATTERNS NULL\n };\n \n-static const char *known_auxiliary_function_name_patterns[] = {\n+static const char * const known_auxiliary_function_name_patterns[] = {\n   ADA_KNOWN_AUXILIARY_FUNCTION_NAME_PATTERNS NULL\n };\n \n@@ -8828,7 +8828,7 @@ ada_to_fixed_value (struct value *val)\n /* Table mapping attribute numbers to names.\n    NOTE: Keep up to date with enum ada_attribute definition in ada-lang.h.  */\n \n-static const char *attribute_names[] = {\n+static const char * const attribute_names[] = {\n   \"<?>\",\n \n   \"first\",\n@@ -11503,7 +11503,7 @@ ada_modulus (struct type *type)\n    an Ada83 compiler). As such, we do not include Numeric_Error from\n    this list of standard exceptions.  */\n \n-static const char *standard_exc[] = {\n+static const char * const standard_exc[] = {\n   \"constraint_error\",\n   \"program_error\",\n   \"storage_error\",\n@@ -13704,7 +13704,7 @@ ada_get_symbol_name_matcher (const lookup_name_info &lookup_name)\n     }\n }\n \n-static const char *ada_extensions[] =\n+static const char * const ada_extensions[] =\n {\n   \".adb\", \".ads\", \".a\", \".ada\", \".dg\", NULL\n };"
    },
    {
      "sha": "734b25034f46e763467d6293e337e031ab5c72d6",
      "filename": "gdb/ada-tasks.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ada-tasks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ada-tasks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-tasks.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -64,7 +64,7 @@ enum task_states\n };\n \n /* A short description corresponding to each possible task state.  */\n-static const char *task_states[] = {\n+static const char * const task_states[] = {\n   N_(\"Unactivated\"),\n   N_(\"Runnable\"),\n   N_(\"Terminated\"),\n@@ -86,7 +86,7 @@ static const char *task_states[] = {\n };\n \n /* A longer description corresponding to each possible task state.  */\n-static const char *long_task_states[] = {\n+static const char * const long_task_states[] = {\n   N_(\"Unactivated\"),\n   N_(\"Runnable\"),\n   N_(\"Terminated\"),"
    },
    {
      "sha": "895e75efb7d895ade72b92e23872573bb4a8b444",
      "filename": "gdb/agent.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/agent.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/agent.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/agent.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -27,7 +27,7 @@\n \n static const char can_use_agent_on[] = \"on\";\n static const char can_use_agent_off[] = \"off\";\n-static const char *can_use_agent_enum[] =\n+static const char * const can_use_agent_enum[] =\n {\n   can_use_agent_on,\n   can_use_agent_off,"
    },
    {
      "sha": "e801f83ddbc7d3b787aec621db8c28079c9a4846",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 14,
      "deletions": 14,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -59,7 +59,7 @@\n \n /* Register information.  */\n \n-static const char *amd64_register_names[] = \n+static const char * const amd64_register_names[] = \n {\n   \"rax\", \"rbx\", \"rcx\", \"rdx\", \"rsi\", \"rdi\", \"rbp\", \"rsp\",\n \n@@ -77,50 +77,50 @@ static const char *amd64_register_names[] =\n   \"mxcsr\",\n };\n \n-static const char *amd64_ymm_names[] = \n+static const char * const amd64_ymm_names[] = \n {\n   \"ymm0\", \"ymm1\", \"ymm2\", \"ymm3\",\n   \"ymm4\", \"ymm5\", \"ymm6\", \"ymm7\",\n   \"ymm8\", \"ymm9\", \"ymm10\", \"ymm11\",\n   \"ymm12\", \"ymm13\", \"ymm14\", \"ymm15\"\n };\n \n-static const char *amd64_ymm_avx512_names[] =\n+static const char * const amd64_ymm_avx512_names[] =\n {\n   \"ymm16\", \"ymm17\", \"ymm18\", \"ymm19\",\n   \"ymm20\", \"ymm21\", \"ymm22\", \"ymm23\",\n   \"ymm24\", \"ymm25\", \"ymm26\", \"ymm27\",\n   \"ymm28\", \"ymm29\", \"ymm30\", \"ymm31\"\n };\n \n-static const char *amd64_ymmh_names[] = \n+static const char * const amd64_ymmh_names[] = \n {\n   \"ymm0h\", \"ymm1h\", \"ymm2h\", \"ymm3h\",\n   \"ymm4h\", \"ymm5h\", \"ymm6h\", \"ymm7h\",\n   \"ymm8h\", \"ymm9h\", \"ymm10h\", \"ymm11h\",\n   \"ymm12h\", \"ymm13h\", \"ymm14h\", \"ymm15h\"\n };\n \n-static const char *amd64_ymmh_avx512_names[] =\n+static const char * const amd64_ymmh_avx512_names[] =\n {\n   \"ymm16h\", \"ymm17h\", \"ymm18h\", \"ymm19h\",\n   \"ymm20h\", \"ymm21h\", \"ymm22h\", \"ymm23h\",\n   \"ymm24h\", \"ymm25h\", \"ymm26h\", \"ymm27h\",\n   \"ymm28h\", \"ymm29h\", \"ymm30h\", \"ymm31h\"\n };\n \n-static const char *amd64_mpx_names[] =\n+static const char * const amd64_mpx_names[] =\n {\n   \"bnd0raw\", \"bnd1raw\", \"bnd2raw\", \"bnd3raw\", \"bndcfgu\", \"bndstatus\"\n };\n \n-static const char *amd64_k_names[] =\n+static const char * const amd64_k_names[] =\n {\n   \"k0\", \"k1\", \"k2\", \"k3\",\n   \"k4\", \"k5\", \"k6\", \"k7\"\n };\n \n-static const char *amd64_zmmh_names[] =\n+static const char * const amd64_zmmh_names[] =\n {\n   \"zmm0h\", \"zmm1h\", \"zmm2h\", \"zmm3h\",\n   \"zmm4h\", \"zmm5h\", \"zmm6h\", \"zmm7h\",\n@@ -132,7 +132,7 @@ static const char *amd64_zmmh_names[] =\n   \"zmm28h\", \"zmm29h\", \"zmm30h\", \"zmm31h\"\n };\n \n-static const char *amd64_zmm_names[] =\n+static const char * const amd64_zmm_names[] =\n {\n   \"zmm0\", \"zmm1\", \"zmm2\", \"zmm3\",\n   \"zmm4\", \"zmm5\", \"zmm6\", \"zmm7\",\n@@ -144,14 +144,14 @@ static const char *amd64_zmm_names[] =\n   \"zmm28\", \"zmm29\", \"zmm30\", \"zmm31\"\n };\n \n-static const char *amd64_xmm_avx512_names[] = {\n+static const char * const amd64_xmm_avx512_names[] = {\n     \"xmm16\",  \"xmm17\",  \"xmm18\",  \"xmm19\",\n     \"xmm20\",  \"xmm21\",  \"xmm22\",  \"xmm23\",\n     \"xmm24\",  \"xmm25\",  \"xmm26\",  \"xmm27\",\n     \"xmm28\",  \"xmm29\",  \"xmm30\",  \"xmm31\"\n };\n \n-static const char *amd64_pkeys_names[] = {\n+static const char * const amd64_pkeys_names[] = {\n     \"pkru\"\n };\n \n@@ -298,7 +298,7 @@ amd64_arch_reg_to_regnum (int reg)\n \n /* Register names for byte pseudo-registers.  */\n \n-static const char *amd64_byte_names[] =\n+static const char * const amd64_byte_names[] =\n {\n   \"al\", \"bl\", \"cl\", \"dl\", \"sil\", \"dil\", \"bpl\", \"spl\",\n   \"r8l\", \"r9l\", \"r10l\", \"r11l\", \"r12l\", \"r13l\", \"r14l\", \"r15l\",\n@@ -310,15 +310,15 @@ static const char *amd64_byte_names[] =\n \n /* Register names for word pseudo-registers.  */\n \n-static const char *amd64_word_names[] =\n+static const char * const amd64_word_names[] =\n {\n   \"ax\", \"bx\", \"cx\", \"dx\", \"si\", \"di\", \"bp\", \"\", \n   \"r8w\", \"r9w\", \"r10w\", \"r11w\", \"r12w\", \"r13w\", \"r14w\", \"r15w\"\n };\n \n /* Register names for dword pseudo-registers.  */\n \n-static const char *amd64_dword_names[] =\n+static const char * const amd64_dword_names[] =\n {\n   \"eax\", \"ebx\", \"ecx\", \"edx\", \"esi\", \"edi\", \"ebp\", \"esp\", \n   \"r8d\", \"r9d\", \"r10d\", \"r11d\", \"r12d\", \"r13d\", \"r14d\", \"r15d\","
    },
    {
      "sha": "11ce0f439bfe2458d2b513780227103ac1525dec",
      "filename": "gdb/bsd-uthread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/bsd-uthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/bsd-uthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-uthread.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -269,7 +269,7 @@ bsd_uthread_inferior_created (struct target_ops *ops, int from_tty)\n }\n \n /* Likely candidates for the threads library.  */\n-static const char *bsd_uthread_solib_names[] =\n+static const char * const bsd_uthread_solib_names[] =\n {\n   \"/usr/lib/libc_r.so\",\t\t/* FreeBSD */\n   \"/usr/lib/libpthread.so\",\t/* OpenBSD */\n@@ -279,7 +279,7 @@ static const char *bsd_uthread_solib_names[] =\n static void\n bsd_uthread_solib_loaded (struct so_list *so)\n {\n-  const char **names = bsd_uthread_solib_names;\n+  const char * const *names = bsd_uthread_solib_names;\n \n   for (names = bsd_uthread_solib_names; *names; names++)\n     {\n@@ -488,7 +488,7 @@ bsd_uthread_target::update_thread_list ()\n }\n \n /* Possible states a thread can be in.  */\n-static const char *bsd_uthread_state[] =\n+static const char * const bsd_uthread_state[] =\n {\n   \"RUNNING\",\n   \"SIGTHREAD\","
    },
    {
      "sha": "03628704349428438af2e1d653aff953637ffe3a",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -871,7 +871,7 @@ const struct exp_descriptor exp_descriptor_c =\n   evaluate_subexp_c\n };\n \n-static const char *c_extensions[] =\n+static const char * const c_extensions[] =\n {\n   \".c\", NULL\n };\n@@ -972,7 +972,7 @@ enum cplus_primitive_types {\n   nr_cplus_primitive_types\n };\n \n-static const char *cplus_extensions[] =\n+static const char * const cplus_extensions[] =\n {\n   \".C\", \".cc\", \".cp\", \".cpp\", \".cxx\", \".c++\", NULL\n };\n@@ -1170,7 +1170,7 @@ class cplus_language : public language_defn\n \n static cplus_language cplus_language_defn;\n \n-static const char *asm_extensions[] =\n+static const char * const asm_extensions[] =\n {\n   \".s\", \".sx\", \".S\", NULL\n };"
    },
    {
      "sha": "a72eb03bc0083eb8e3e2e67e4e8540d4c873d936",
      "filename": "gdb/charset.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/charset.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/charset.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/charset.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -271,13 +271,13 @@ show_target_wide_charset_name (struct ui_file *file,\n \t\t      value);\n }\n \n-static const char *default_charset_names[] =\n+static const char * const default_charset_names[] =\n {\n   DEFAULT_CHARSET_NAMES\n   0\n };\n \n-static const char **charset_enum;\n+static const char * const *charset_enum;\n \n \f\n /* If the target wide character set has big- or little-endian\n@@ -1004,7 +1004,7 @@ _initialize_charset ()\n   find_charset_names ();\n \n   if (charsets.charsets.size () > 1)\n-    charset_enum = (const char **) charsets.charsets.data ();\n+    charset_enum = (const char * const *) charsets.charsets.data ();\n   else\n     charset_enum = default_charset_names;\n "
    },
    {
      "sha": "f2015a40ac3245fba03281df21dae0200e887278",
      "filename": "gdb/csky-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/csky-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/csky-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/csky-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -162,7 +162,7 @@ csky_write_pc (regcache *regcache, CORE_ADDR val)\n \n /* C-Sky ABI register names.  */\n \n-static const char *csky_register_names[] =\n+static const char * const csky_register_names[] =\n {\n   /* General registers 0 - 31.  */\n   \"r0\",  \"r1\",  \"r2\",  \"r3\",  \"r4\",  \"r5\",  \"r6\",  \"r7\","
    },
    {
      "sha": "837a064600362d9a89bbb076a54b0f93df5f976d",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -124,7 +124,7 @@ enum d_primitive_types {\n   nr_d_primitive_types\n };\n \n-static const char *d_extensions[] =\n+static const char * const d_extensions[] =\n {\n   \".d\", NULL\n };"
    },
    {
      "sha": "49f7b0368e2a55346bf1d70a96ab38e320d68429",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -471,7 +471,7 @@ operator_check_f (struct expression *exp, int pos,\n   return 0;\n }\n \n-static const char *f_extensions[] =\n+static const char * const f_extensions[] =\n {\n   \".f\", \".F\", \".for\", \".FOR\", \".ftn\", \".FTN\", \".fpp\", \".FPP\",\n   \".f90\", \".F90\", \".f95\", \".F95\", \".f03\", \".F03\", \".f08\", \".F08\","
    },
    {
      "sha": "14e5b310a2a9faafdd118272510bb63761ace2b6",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -69,7 +69,7 @@\n \n /* Register names.  */\n \n-static const char *i386_register_names[] =\n+static const char * const i386_register_names[] =\n {\n   \"eax\",   \"ecx\",    \"edx\",   \"ebx\",\n   \"esp\",   \"ebp\",    \"esi\",   \"edi\",\n@@ -84,72 +84,72 @@ static const char *i386_register_names[] =\n   \"mxcsr\"\n };\n \n-static const char *i386_zmm_names[] =\n+static const char * const i386_zmm_names[] =\n {\n   \"zmm0\",  \"zmm1\",   \"zmm2\",  \"zmm3\",\n   \"zmm4\",  \"zmm5\",   \"zmm6\",  \"zmm7\"\n };\n \n-static const char *i386_zmmh_names[] =\n+static const char * const i386_zmmh_names[] =\n {\n   \"zmm0h\",  \"zmm1h\",   \"zmm2h\",  \"zmm3h\",\n   \"zmm4h\",  \"zmm5h\",   \"zmm6h\",  \"zmm7h\"\n };\n \n-static const char *i386_k_names[] =\n+static const char * const i386_k_names[] =\n {\n   \"k0\",  \"k1\",   \"k2\",  \"k3\",\n   \"k4\",  \"k5\",   \"k6\",  \"k7\"\n };\n \n-static const char *i386_ymm_names[] =\n+static const char * const i386_ymm_names[] =\n {\n   \"ymm0\",  \"ymm1\",   \"ymm2\",  \"ymm3\",\n   \"ymm4\",  \"ymm5\",   \"ymm6\",  \"ymm7\",\n };\n \n-static const char *i386_ymmh_names[] =\n+static const char * const i386_ymmh_names[] =\n {\n   \"ymm0h\",  \"ymm1h\",   \"ymm2h\",  \"ymm3h\",\n   \"ymm4h\",  \"ymm5h\",   \"ymm6h\",  \"ymm7h\",\n };\n \n-static const char *i386_mpx_names[] =\n+static const char * const i386_mpx_names[] =\n {\n   \"bnd0raw\", \"bnd1raw\", \"bnd2raw\", \"bnd3raw\", \"bndcfgu\", \"bndstatus\"\n };\n \n-static const char* i386_pkeys_names[] =\n+static const char * const i386_pkeys_names[] =\n {\n   \"pkru\"\n };\n \n /* Register names for MPX pseudo-registers.  */\n \n-static const char *i386_bnd_names[] =\n+static const char * const i386_bnd_names[] =\n {\n   \"bnd0\", \"bnd1\", \"bnd2\", \"bnd3\"\n };\n \n /* Register names for MMX pseudo-registers.  */\n \n-static const char *i386_mmx_names[] =\n+static const char * const i386_mmx_names[] =\n {\n   \"mm0\", \"mm1\", \"mm2\", \"mm3\",\n   \"mm4\", \"mm5\", \"mm6\", \"mm7\"\n };\n \n /* Register names for byte pseudo-registers.  */\n \n-static const char *i386_byte_names[] =\n+static const char * const i386_byte_names[] =\n {\n   \"al\", \"cl\", \"dl\", \"bl\", \n   \"ah\", \"ch\", \"dh\", \"bh\"\n };\n \n /* Register names for word pseudo-registers.  */\n \n-static const char *i386_word_names[] =\n+static const char * const i386_word_names[] =\n {\n   \"ax\", \"cx\", \"dx\", \"bx\",\n   \"\", \"bp\", \"si\", \"di\""
    },
    {
      "sha": "c61ffcfb76ecaa011b30ef9d717efc56d4030767",
      "filename": "gdb/i386-tdep.h",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/i386-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/i386-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.h?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -145,21 +145,21 @@ struct gdbarch_tdep\n   int xsave_xcr0_offset;\n \n   /* Register names.  */\n-  const char **register_names;\n+  const char * const *register_names;\n \n   /* Register number for %ymm0h.  Set this to -1 to indicate the absence\n      of upper YMM register support.  */\n   int ymm0h_regnum;\n \n   /* Upper YMM register names.  Only used for tdesc_numbered_register.  */\n-  const char **ymmh_register_names;\n+  const char * const *ymmh_register_names;\n \n   /* Register number for %ymm16h.  Set this to -1 to indicate the absence\n   of support for YMM16-31.  */\n   int ymm16h_regnum;\n \n   /* YMM16-31 register names.  Only used for tdesc_numbered_register.  */\n-  const char **ymm16h_register_names;\n+  const char * const *ymm16h_register_names;\n \n   /* Register number for %bnd0r.  Set this to -1 to indicate the absence\n      bound registers.  */\n@@ -174,23 +174,23 @@ struct gdbarch_tdep\n   int bndcfgu_regnum;\n \n   /* MPX register names.  Only used for tdesc_numbered_register.  */\n-  const char **mpx_register_names;\n+  const char * const *mpx_register_names;\n \n   /* Register number for %zmm0h.  Set this to -1 to indicate the absence\n      of ZMM_HI256 register support.  */\n   int zmm0h_regnum;\n \n   /* OpMask register names.  */\n-  const char **k_register_names;\n+  const char * const *k_register_names;\n \n   /* ZMM register names.  Only used for tdesc_numbered_register.  */\n-  const char **zmmh_register_names;\n+  const char * const *zmmh_register_names;\n \n   /* XMM16-31 register names.  Only used for tdesc_numbered_register.  */\n-  const char **xmm_avx512_register_names;\n+  const char * const *xmm_avx512_register_names;\n \n   /* YMM16-31 register names.  Only used for tdesc_numbered_register.  */\n-  const char **ymm_avx512_register_names;\n+  const char * const *ymm_avx512_register_names;\n \n   /* Number of PKEYS registers.  */\n   int num_pkeys_regs;\n@@ -199,7 +199,7 @@ struct gdbarch_tdep\n   int pkru_regnum;\n \n   /* PKEYS register names.  */\n-  const char **pkeys_register_names;\n+  const char * const *pkeys_register_names;\n \n   /* Register number for %fsbase.  Set this to -1 to indicate the\n      absence of segment base registers.  */"
    },
    {
      "sha": "72093b643eacd9f0721f2cfad7f752b97767c0f4",
      "filename": "gdb/ia64-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ia64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/ia64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ia64-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -144,7 +144,7 @@ enum pseudo_regs { FIRST_PSEUDO_REGNUM = NUM_IA64_RAW_REGS,\n /* Array of register names; There should be ia64_num_regs strings in\n    the initializer.  */\n \n-static const char *ia64_register_names[] =\n+static const char * const ia64_register_names[] =\n { \"r0\",   \"r1\",   \"r2\",   \"r3\",   \"r4\",   \"r5\",   \"r6\",   \"r7\",\n   \"r8\",   \"r9\",   \"r10\",  \"r11\",  \"r12\",  \"r13\",  \"r14\",  \"r15\",\n   \"r16\",  \"r17\",  \"r18\",  \"r19\",  \"r20\",  \"r21\",  \"r22\",  \"r23\","
    },
    {
      "sha": "e8bf33dda173810a34dc1b8c8ac25a6f637cc36e",
      "filename": "gdb/m32r-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/m32r-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/m32r-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m32r-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -202,7 +202,7 @@ m32r_sw_breakpoint_from_kind (struct gdbarch *gdbarch, int kind, int *size)\n     }\n }\n \n-static const char *m32r_register_names[] = {\n+static const char * const m32r_register_names[] = {\n   \"r0\", \"r1\", \"r2\", \"r3\", \"r4\", \"r5\", \"r6\", \"r7\",\n   \"r8\", \"r9\", \"r10\", \"r11\", \"r12\", \"fp\", \"lr\", \"sp\",\n   \"psw\", \"cbr\", \"spi\", \"spu\", \"bpc\", \"pc\", \"accl\", \"acch\","
    },
    {
      "sha": "76046c0b1dd583e7740a6e22d51c09684b3ddad7",
      "filename": "gdb/m68k-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/m68k-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/m68k-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m68k-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -157,7 +157,7 @@ m68k_register_type (struct gdbarch *gdbarch, int regnum)\n   return builtin_type (gdbarch)->builtin_int32;\n }\n \n-static const char *m68k_register_names[] = {\n+static const char * const m68k_register_names[] = {\n     \"d0\", \"d1\", \"d2\", \"d3\", \"d4\", \"d5\", \"d6\", \"d7\",\n     \"a0\", \"a1\", \"a2\", \"a3\", \"a4\", \"a5\", \"fp\", \"sp\",\n     \"ps\", \"pc\","
    },
    {
      "sha": "edabe9eb5431c6474f340b3c65c8f66b3c7071fa",
      "filename": "gdb/microblaze-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/microblaze-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/microblaze-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/microblaze-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -65,7 +65,7 @@\n \n /* The registers of the Xilinx microblaze processor.  */\n \n-static const char *microblaze_register_names[] =\n+static const char * const microblaze_register_names[] =\n {\n   \"r0\",   \"r1\",  \"r2\",    \"r3\",   \"r4\",   \"r5\",   \"r6\",   \"r7\",\n   \"r8\",   \"r9\",  \"r10\",   \"r11\",  \"r12\",  \"r13\",  \"r14\",  \"r15\","
    },
    {
      "sha": "48ee82228d94d8288cd2acaee7d2a6e159002997",
      "filename": "gdb/mips-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/mips-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/mips-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -578,7 +578,7 @@ enum\n \n /* Generic MIPS.  */\n \n-static const char *mips_generic_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n+static const char * const mips_generic_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n   \"sr\", \"lo\", \"hi\", \"bad\", \"cause\", \"pc\",\n   \"f0\", \"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\",\n   \"f8\", \"f9\", \"f10\", \"f11\", \"f12\", \"f13\", \"f14\", \"f15\",\n@@ -589,7 +589,7 @@ static const char *mips_generic_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n \n /* Names of tx39 registers.  */\n \n-static const char *mips_tx39_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n+static const char * const mips_tx39_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n   \"sr\", \"lo\", \"hi\", \"bad\", \"cause\", \"pc\",\n   \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\n   \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\n@@ -601,7 +601,7 @@ static const char *mips_tx39_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n };\n \n /* Names of registers with Linux kernels.  */\n-static const char *mips_linux_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n+static const char * const mips_linux_reg_names[NUM_MIPS_PROCESSOR_REGS] = {\n   \"sr\", \"lo\", \"hi\", \"bad\", \"cause\", \"pc\",\n   \"f0\", \"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\",\n   \"f8\", \"f9\", \"f10\", \"f11\", \"f12\", \"f13\", \"f14\", \"f15\",\n@@ -8049,7 +8049,7 @@ mips_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   enum mips_fpu_type fpu_type;\n   struct tdesc_arch_data *tdesc_data = NULL;\n   int elf_fpu_type = Val_GNU_MIPS_ABI_FP_ANY;\n-  const char **reg_names;\n+  const char * const *reg_names;\n   struct mips_regnum mips_regnum, *regnum;\n   enum mips_isa mips_isa;\n   int dspacc;"
    },
    {
      "sha": "513466820aac2afef55f0c83968acc362569b9d8",
      "filename": "gdb/mips-tdep.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/mips-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/mips-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.h?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -104,7 +104,7 @@ struct gdbarch_tdep\n      add any that do not need to be public.  */\n   const struct mips_regnum *regnum;\n   /* Register names table for the current register set.  */\n-  const char **mips_processor_reg_names;\n+  const char * const *mips_processor_reg_names;\n \n   /* The size of register data available from the target, if known.\n      This doesn't quite obsolete the manual"
    },
    {
      "sha": "e5d3c52190ba4a2e0d82084817e55f3f6a5739a2",
      "filename": "gdb/moxie-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/moxie-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/moxie-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/moxie-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -70,7 +70,7 @@ typedef BP_MANIPULATION (moxie_break_insn) moxie_breakpoint;\n \n /* Moxie register names.  */\n \n-static const char *moxie_register_names[] = {\n+static const char * const moxie_register_names[] = {\n   \"$fp\",  \"$sp\",  \"$r0\",  \"$r1\",  \"$r2\",\n   \"$r3\",  \"$r4\",  \"$r5\", \"$r6\", \"$r7\",\n   \"$r8\", \"$r9\", \"$r10\", \"$r11\", \"$r12\","
    },
    {
      "sha": "e1b776415bbfe0994facd8171a6ec552ec6165b3",
      "filename": "gdb/nto-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/nto-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/nto-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nto-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -355,7 +355,7 @@ nto_elf_osabi_sniffer (bfd *abfd)\n   return osabi;\n }\n \n-static const char *nto_thread_state_str[] =\n+static const char * const nto_thread_state_str[] =\n {\n   \"DEAD\",\t\t/* 0  0x00 */\n   \"RUNNING\",\t/* 1  0x01 */"
    },
    {
      "sha": "4e1d2cdcf2d8123dcd8409df7d34bfb9ef1d3d36",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -319,7 +319,7 @@ static const struct op_print objc_op_print_tab[] =\n     {NULL, OP_NULL, PREC_NULL, 0}\n };\n \n-static const char *objc_extensions[] =\n+static const char * const objc_extensions[] =\n {\n   \".m\", NULL\n };"
    },
    {
      "sha": "18490843a994b4912be94efcc2ddca71a4f9a47a",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -248,7 +248,7 @@ enum pascal_primitive_types {\n   nr_pascal_primitive_types\n };\n \n-static const char *p_extensions[] =\n+static const char * const p_extensions[] =\n {\n   \".pas\", \".p\", \".pp\", NULL\n };"
    },
    {
      "sha": "0bc65eb15bcf20697fa9cefdde3de653ce71d5e9",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -1902,7 +1902,7 @@ static const struct exp_descriptor exp_descriptor_rust =\n   rust_evaluate_subexp\n };\n \n-static const char *rust_extensions[] =\n+static const char * const rust_extensions[] =\n {\n   \".rs\", NULL\n };"
    },
    {
      "sha": "e3401fe33eea13ed0bf1c3ac1268b7548169cfb3",
      "filename": "gdb/sparc-tdep.c",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/sparc-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/sparc-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -363,11 +363,17 @@ sparc_arg_by_memory_p (const struct type *type)\n #define SPARC32_CP0_REGISTERS \\\n   \"y\", \"psr\", \"wim\", \"tbr\", \"pc\", \"npc\", \"fsr\", \"csr\"\n \n-static const char *sparc_core_register_names[] = { SPARC_CORE_REGISTERS };\n-static const char *sparc32_fpu_register_names[] = { SPARC32_FPU_REGISTERS };\n-static const char *sparc32_cp0_register_names[] = { SPARC32_CP0_REGISTERS };\n+static const char * const sparc_core_register_names[] = {\n+  SPARC_CORE_REGISTERS\n+};\n+static const char * const sparc32_fpu_register_names[] = {\n+  SPARC32_FPU_REGISTERS\n+};\n+static const char * const sparc32_cp0_register_names[] = {\n+  SPARC32_CP0_REGISTERS\n+};\n \n-static const char *sparc32_register_names[] =\n+static const char * const sparc32_register_names[] =\n {\n   SPARC_CORE_REGISTERS,\n   SPARC32_FPU_REGISTERS,\n@@ -380,7 +386,7 @@ static const char *sparc32_register_names[] =\n /* We provide the aliases %d0..%d30 for the floating registers as\n    \"psuedo\" registers.  */\n \n-static const char *sparc32_pseudo_register_names[] =\n+static const char * const sparc32_pseudo_register_names[] =\n {\n   \"d0\", \"d2\", \"d4\", \"d6\", \"d8\", \"d10\", \"d12\", \"d14\",\n   \"d16\", \"d18\", \"d20\", \"d22\", \"d24\", \"d26\", \"d28\", \"d30\"\n@@ -1784,7 +1790,7 @@ static int\n validate_tdesc_registers (const struct target_desc *tdesc,\n                           struct tdesc_arch_data *tdesc_data,\n                           const char *feature_name,\n-                          const char *register_names[],\n+                          const char * const register_names[],\n                           unsigned int registers_num,\n                           unsigned int reg_start)\n {"
    },
    {
      "sha": "594f47a40380ee0e6f7f4ad6a58fcd8c664215f2",
      "filename": "gdb/sparc-tdep.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/sparc-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/sparc-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc-tdep.h?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -64,9 +64,9 @@ struct gdbarch_tdep\n   int npc_regnum;\n \n   /* Register names specific for architecture (sparc32 vs. sparc64) */\n-  const char **fpu_register_names;\n+  const char * const *fpu_register_names;\n   size_t fpu_registers_num;\n-  const char **cp0_register_names;\n+  const char * const *cp0_register_names;\n   size_t cp0_registers_num;\n \n   /* Register sets.  */"
    },
    {
      "sha": "372df041905cbfcb0d4c6f0b02cd055acdd22cfa",
      "filename": "gdb/sparc64-tdep.c",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/sparc64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/sparc64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc64-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -764,10 +764,14 @@ sparc64_fprs_type (struct gdbarch *gdbarch)\n   \"fprs\",                                                                 \\\n   \"y\"\n \n-static const char *sparc64_fpu_register_names[] = { SPARC64_FPU_REGISTERS };\n-static const char *sparc64_cp0_register_names[] = { SPARC64_CP0_REGISTERS };\n+static const char * const sparc64_fpu_register_names[] = {\n+  SPARC64_FPU_REGISTERS\n+};\n+static const char * const sparc64_cp0_register_names[] = {\n+  SPARC64_CP0_REGISTERS\n+};\n \n-static const char *sparc64_register_names[] =\n+static const char * const sparc64_register_names[] =\n {\n   SPARC_CORE_REGISTERS,\n   SPARC64_FPU_REGISTERS,\n@@ -780,7 +784,7 @@ static const char *sparc64_register_names[] =\n /* We provide the aliases %d0..%d62 and %q0..%q60 for the floating\n    registers as \"psuedo\" registers.  */\n \n-static const char *sparc64_pseudo_register_names[] =\n+static const char * const sparc64_pseudo_register_names[] =\n {\n   \"cwp\", \"pstate\", \"asi\", \"ccr\",\n "
    },
    {
      "sha": "8b1ea34c89849000e66e81c6bb0e603865783cfa",
      "filename": "gdb/x86-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/x86-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/x86-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/x86-tdep.c?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -26,8 +26,8 @@\n    (exclusive).  */\n \n static bool\n-x86_is_thunk_register_name (const char *name, const char **names, int lo,\n-\t\t\t    int hi)\n+x86_is_thunk_register_name (const char *name, const char * const *names,\n+\t\t\t    int lo, int hi)\n {\n   int reg;\n   for (reg = lo; reg < hi; ++reg)\n@@ -40,7 +40,7 @@ x86_is_thunk_register_name (const char *name, const char **names, int lo,\n /* See x86-tdep.h.  */\n \n bool\n-x86_in_indirect_branch_thunk (CORE_ADDR pc, const char **register_names,\n+x86_in_indirect_branch_thunk (CORE_ADDR pc, const char * const *register_names,\n \t\t\t      int lo, int hi)\n {\n   struct bound_minimal_symbol bmfun = lookup_minimal_symbol_by_pc (pc);"
    },
    {
      "sha": "0f3e4256bc5c62c395ae18cf6ec5138b4edc792f",
      "filename": "gdb/x86-tdep.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/x86-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdb/x86-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/x86-tdep.h?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -24,7 +24,7 @@\n    REGISTER_NAMES[LO] (inclusive) to REGISTER_NAMES[HI] (exclusive).  */\n \n extern bool x86_in_indirect_branch_thunk (CORE_ADDR pc,\n-\t\t\t\t\t  const char **register_names,\n+\t\t\t\t\t  const char * const *register_names,\n \t\t\t\t\t  int lo, int hi);\n \n #endif /* x86-tdep.h */"
    },
    {
      "sha": "3b08ef393bc173c5ba6df39429e351014fca603f",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* tracepoint.cc (eval_result_names): Now const.\n+\t* ax.cc (gdb_agent_op_names): Now const.\n+\n 2020-09-10  Kamil Rytarowski  <n54@gmx.com>\n \n \t* netbsd-low.cc: Add."
    },
    {
      "sha": "361e7a272f7e53d0ade3e7139e3052058f7f84a9",
      "filename": "gdbserver/ax.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdbserver/ax.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdbserver/ax.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ax.cc?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -65,7 +65,7 @@ enum gdb_agent_op\n     gdb_agent_op_last\n   };\n \n-static const char *gdb_agent_op_names [gdb_agent_op_last] =\n+static const char * const gdb_agent_op_names [gdb_agent_op_last] =\n   {\n     \"?undef?\"\n #define DEFOP(NAME, SIZE, DATA_SIZE, CONSUMED, PRODUCED, VALUE)  , # NAME"
    },
    {
      "sha": "6881f31c0cecf610a0c02d2242e090a536e7be1b",
      "filename": "gdbserver/tracepoint.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27087b7f6ce8c6d304b149df2484436d97e6334b/gdbserver/tracepoint.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27087b7f6ce8c6d304b149df2484436d97e6334b/gdbserver/tracepoint.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/tracepoint.cc?ref=27087b7f6ce8c6d304b149df2484436d97e6334b",
      "patch": "@@ -863,7 +863,7 @@ EXTERN_C_POP\n \n static struct tracepoint *last_tracepoint;\n \n-static const char *eval_result_names[] =\n+static const char * const eval_result_names[] =\n   {\n     \"terror:in the attic\",  /* this should never be reported */\n     \"terror:empty expression\","
    }
  ]
}