{
  "sha": "8c072cb6a19abdc9d4b93c19a1d609fe1a486c32",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGMwNzJjYjZhMTlhYmRjOWQ0YjkzYzE5YTFkNjA5ZmUxYTQ4NmMzMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-01T13:47:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-01T13:47:13Z"
    },
    "message": "Avoid some copying in psymtab.c\n\nI noticed that psymtab.c was always copying the search string in\npsymtab_search_name, even when it wasn't necessary.  This patch\nremoves this function in favor of using the make_ignore_params feature\nof lookup_name_info.\n\nOnce I had done that, I noticed that lookup_partial_symbol was\ncreating a lookup_name_info.  However, this function called in loops,\ncausing even more excess allocation.  This patch further fixes this by\nhosting the creation of the lookup_name_info into the callers.\n\ngdb/ChangeLog\n2020-04-01  Tom Tromey  <tromey@adacore.com>\n\n\t* psymtab.c (psymtab_search_name): Remove function.\n\t(psym_lookup_symbol): Create search name and lookup name here.\n\t(lookup_partial_symbol): Remove \"name\" parameter; add\n\tlookup_name.\n\t(psym_expand_symtabs_for_function): Update.",
    "tree": {
      "sha": "c86d4d5e1100f0394e216a397bd125557c7e7c29",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c86d4d5e1100f0394e216a397bd125557c7e7c29"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "81e3a1d00cbe19c1a9b189601c269d1b5db02343",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81e3a1d00cbe19c1a9b189601c269d1b5db02343",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/81e3a1d00cbe19c1a9b189601c269d1b5db02343"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 25,
    "deletions": 42
  },
  "files": [
    {
      "sha": "7c1d84c330f543ee6a01b2778bf5fa4ccec5e64c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8c072cb6a19abdc9d4b93c19a1d609fe1a486c32",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* psymtab.c (psymtab_search_name): Remove function.\n+\t(psym_lookup_symbol): Create search name and lookup name here.\n+\t(lookup_partial_symbol): Remove \"name\" parameter; add\n+\tlookup_name.\n+\t(psym_expand_symtabs_for_function): Update.\n+\n 2020-03-31  Joel Jones  <joelkevinjones@gmail.com>\n \n \tPR tui/25597:"
    },
    {
      "sha": "d5e61f88dc6783ba9afc20e00285c803d462ca6f",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 17,
      "deletions": 42,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c072cb6a19abdc9d4b93c19a1d609fe1a486c32/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=8c072cb6a19abdc9d4b93c19a1d609fe1a486c32",
      "patch": "@@ -39,7 +39,8 @@\n \n static struct partial_symbol *lookup_partial_symbol (struct objfile *,\n \t\t\t\t\t\t     struct partial_symtab *,\n-\t\t\t\t\t\t     const char *, int,\n+\t\t\t\t\t\t     const lookup_name_info &,\n+\t\t\t\t\t\t     int,\n \t\t\t\t\t\t     domain_enum);\n \n static const char *psymtab_to_fullname (struct partial_symtab *ps);\n@@ -482,9 +483,12 @@ psym_lookup_symbol (struct objfile *objfile,\n \n   lookup_name_info lookup_name (name, symbol_name_match_type::FULL);\n \n+  lookup_name_info psym_lookup_name = lookup_name.make_ignore_params ();\n+\n   for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     {\n-      if (!ps->readin_p () && lookup_partial_symbol (objfile, ps, name,\n+      if (!ps->readin_p () && lookup_partial_symbol (objfile, ps,\n+\t\t\t\t\t\t     psym_lookup_name,\n \t\t\t\t\t\t     psymtab_index, domain))\n \t{\n \t  struct symbol *sym, *with_opaque = NULL;\n@@ -612,42 +616,14 @@ match_partial_symbol (struct objfile *objfile,\n   return NULL;\n }\n \n-/* Returns the name used to search psymtabs.  Unlike symtabs, psymtabs do\n-   not contain any method/function instance information (since this would\n-   force reading type information while reading psymtabs).  Therefore,\n-   if NAME contains overload information, it must be stripped before searching\n-   psymtabs.  */\n-\n-static gdb::unique_xmalloc_ptr<char>\n-psymtab_search_name (const char *name)\n-{\n-  switch (current_language->la_language)\n-    {\n-    case language_cplus:\n-      {\n-\tif (strchr (name, '('))\n-\t  {\n-\t    gdb::unique_xmalloc_ptr<char> ret = cp_remove_params (name);\n-\n-\t    if (ret)\n-\t      return ret;\n-\t  }\n-      }\n-      break;\n-\n-    default:\n-      break;\n-    }\n-\n-  return make_unique_xstrdup (name);\n-}\n-\n-/* Look, in partial_symtab PST, for symbol whose natural name is NAME.\n-   Check the global symbols if GLOBAL, the static symbols if not.  */\n+/* Look, in partial_symtab PST, for symbol whose natural name is\n+   LOOKUP_NAME.  Check the global symbols if GLOBAL, the static\n+   symbols if not.  */\n \n static struct partial_symbol *\n lookup_partial_symbol (struct objfile *objfile,\n-\t\t       struct partial_symtab *pst, const char *name,\n+\t\t       struct partial_symtab *pst,\n+\t\t       const lookup_name_info &lookup_name,\n \t\t       int global, domain_enum domain)\n {\n   struct partial_symbol **start, **psym;\n@@ -658,10 +634,6 @@ lookup_partial_symbol (struct objfile *objfile,\n   if (length == 0)\n     return NULL;\n \n-  gdb::unique_xmalloc_ptr<char> search_name = psymtab_search_name (name);\n-\n-  lookup_name_info lookup_name (search_name.get (), symbol_name_match_type::FULL);\n-\n   start = (global ?\n \t   &objfile->partial_symtabs->global_psymbols[pst->globals_offset] :\n \t   &objfile->partial_symtabs->static_psymbols[pst->statics_offset]);\n@@ -686,7 +658,7 @@ lookup_partial_symbol (struct objfile *objfile,\n \t    internal_error (__FILE__, __LINE__,\n \t\t\t    _(\"failed internal consistency check\"));\n \t  if (strcmp_iw_ordered ((*center)->ginfo.search_name (),\n-\t\t\t\t search_name.get ()) >= 0)\n+\t\t\t\t lookup_name.name ().c_str ()) >= 0)\n \t    {\n \t      top = center;\n \t    }\n@@ -1044,14 +1016,17 @@ static void\n psym_expand_symtabs_for_function (struct objfile *objfile,\n \t\t\t\t  const char *func_name)\n {\n+  lookup_name_info base_lookup (func_name, symbol_name_match_type::FULL);\n+  lookup_name_info lookup_name = base_lookup.make_ignore_params ();\n+\n   for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     {\n       if (ps->readin_p ())\n \tcontinue;\n \n-      if ((lookup_partial_symbol (objfile, ps, func_name, 1, VAR_DOMAIN)\n+      if ((lookup_partial_symbol (objfile, ps, lookup_name, 1, VAR_DOMAIN)\n \t   != NULL)\n-\t  || (lookup_partial_symbol (objfile, ps, func_name, 0, VAR_DOMAIN)\n+\t  || (lookup_partial_symbol (objfile, ps, lookup_name, 0, VAR_DOMAIN)\n \t      != NULL))\n \tpsymtab_to_symtab (objfile, ps);\n     }"
    }
  ]
}