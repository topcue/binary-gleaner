{
  "sha": "eb5323fdf88aff59afca0a545877c4d777ff2726",
  "node_id": "C_kwDOANOeidoAKGViNTMyM2ZkZjg4YWZmNTlhZmNhMGE1NDU4NzdjNGQ3NzdmZjI3MjY",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-10-25T10:17:02Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-10-25T10:17:05Z"
    },
    "message": "libctf, ld: handle nonrepresentable types better\n\nctf_type_visit (used, among other things, by the type dumping code) was\naborting when it saw a nonrepresentable type anywhere: even a single\nstructure member with a nonrepresentable type caused an abort with\nECTF_NONREPRESENTABLE.  This is not useful behaviour, given that the\nabort comes from a type-resolution we are only doing in order to\ndetermine whether the type is a structure or union.  We know\nnonrepresentable types can't be either, so handle that case and\npass the nonrepresentable type down.\n\n(The added test verifies that the dumper now handles this case and\nprints nonrepresentable structure members as it already does\nnonrepresentable top-level types, rather than skipping the whole\nstructure -- or, without the previous commit, skipping the whole types\nsection.)\n\nld/ChangeLog\n2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* testsuite/ld-ctf/nonrepresentable-member.*: New test.\n\nlibctf/ChangeLog\n2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-types.c (ctf_type_rvisit): Handle nonrepresentable types.",
    "tree": {
      "sha": "bacc4ebe4f83df36805d5a30ec1f890be3e89295",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bacc4ebe4f83df36805d5a30ec1f890be3e89295"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eb5323fdf88aff59afca0a545877c4d777ff2726",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb5323fdf88aff59afca0a545877c4d777ff2726",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eb5323fdf88aff59afca0a545877c4d777ff2726",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb5323fdf88aff59afca0a545877c4d777ff2726/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 53,
    "deletions": 6
  },
  "files": [
    {
      "sha": "c613b39804608b942b168d297c9dd0ecde11943c",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5323fdf88aff59afca0a545877c4d777ff2726/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5323fdf88aff59afca0a545877c4d777ff2726/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=eb5323fdf88aff59afca0a545877c4d777ff2726",
      "patch": "@@ -1,3 +1,7 @@\n+2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* testsuite/ld-ctf/nonrepresentable-member.*: New test.\n+\n 2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* testsuite/ld-ctf/array.d: Change --ctf=.ctf to --ctf."
    },
    {
      "sha": "b3657af01e12694b5e396ac75ee9d65d9af96989",
      "filename": "ld/testsuite/ld-ctf/nonrepresentable-member.c",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5323fdf88aff59afca0a545877c4d777ff2726/ld/testsuite/ld-ctf/nonrepresentable-member.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5323fdf88aff59afca0a545877c4d777ff2726/ld/testsuite/ld-ctf/nonrepresentable-member.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/nonrepresentable-member.c?ref=eb5323fdf88aff59afca0a545877c4d777ff2726",
      "patch": "@@ -0,0 +1,7 @@\n+struct blah\n+{\n+  int boring;\n+  int __attribute__((vector_size(8))) foo;\n+  const int __attribute__((vector_size(8))) bar;\n+  int this_is_printed;\n+} wibble __attribute__((__used__));"
    },
    {
      "sha": "6c76253a8c1f02ffcb6b600c583dcfff1aada70c",
      "filename": "ld/testsuite/ld-ctf/nonrepresentable-member.d",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5323fdf88aff59afca0a545877c4d777ff2726/ld/testsuite/ld-ctf/nonrepresentable-member.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5323fdf88aff59afca0a545877c4d777ff2726/ld/testsuite/ld-ctf/nonrepresentable-member.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/nonrepresentable-member.d?ref=eb5323fdf88aff59afca0a545877c4d777ff2726",
      "patch": "@@ -0,0 +1,25 @@\n+#as:\n+#source: nonrepresentable-member.c\n+#objdump: --ctf\n+#ld: -shared\n+#name: Nonrepresentable members\n+\n+.*: +file format .*\n+\n+Contents of CTF section .ctf:\n+\n+  Header:\n+    Magic number: 0xdff2\n+    Version: 4 \\(CTF_VERSION_3\\)\n+#...\n+  Types:\n+#...\n+    0x[0-9a-f]*: \\(kind 6\\) struct blah .*\n+        *\\[0x0\\] boring: ID 0x[0-9a-f]*: \\(kind 1\\) int .*\n+        *\\[0x[0-9a-f]*\\] foo: .* \\(.*represent.*\\)\n+        *\\[0x[0-9a-f]*\\] bar: .* \\(.*represent.*\\)\n+        *\\[0x[0-9a-f]*\\] this_is_printed: ID 0x[0-9a-f]*: \\(kind 1\\) int .*\n+#...\n+\n+  Strings:\n+#..."
    },
    {
      "sha": "245987fdf4209f36af73458430727b3e2f6f9e2e",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5323fdf88aff59afca0a545877c4d777ff2726/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5323fdf88aff59afca0a545877c4d777ff2726/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=eb5323fdf88aff59afca0a545877c4d777ff2726",
      "patch": "@@ -1,3 +1,7 @@\n+2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_rvisit): Handle nonrepresentable types.\n+\n 2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-dump.c (ctf_dump_type): Do not abort on error."
    },
    {
      "sha": "55834856da943f3962cf63f1dba78db540283367",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 13,
      "deletions": 6,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5323fdf88aff59afca0a545877c4d777ff2726/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5323fdf88aff59afca0a545877c4d777ff2726/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=eb5323fdf88aff59afca0a545877c4d777ff2726",
      "patch": "@@ -1641,20 +1641,27 @@ ctf_type_rvisit (ctf_dict_t *fp, ctf_id_t type, ctf_visit_f *func,\n   unsigned char *vlen;\n   ssize_t size, increment, vbytes;\n   uint32_t kind, n, i = 0;\n+  int nonrepresentable = 0;\n   int rc;\n \n-  if ((type = ctf_type_resolve (fp, type)) == CTF_ERR)\n-    return -1;\t\t\t/* errno is set for us.  */\n+  if ((type = ctf_type_resolve (fp, type)) == CTF_ERR) {\n+    if (ctf_errno (fp) != ECTF_NONREPRESENTABLE)\n+      return -1;\t\t/* errno is set for us.  */\n+    else\n+      nonrepresentable = 1;\n+  }\n \n-  if ((tp = ctf_lookup_by_id (&fp, type)) == NULL)\n-    return -1;\t\t\t/* errno is set for us.  */\n+  if (!nonrepresentable)\n+    if ((tp = ctf_lookup_by_id (&fp, type)) == NULL)\n+      return -1;\t\t/* errno is set for us.  */\n \n   if ((rc = func (name, otype, offset, depth, arg)) != 0)\n     return rc;\n \n-  kind = LCTF_INFO_KIND (fp, tp->ctt_info);\n+  if (!nonrepresentable)\n+    kind = LCTF_INFO_KIND (fp, tp->ctt_info);\n \n-  if (kind != CTF_K_STRUCT && kind != CTF_K_UNION)\n+  if (nonrepresentable || (kind != CTF_K_STRUCT && kind != CTF_K_UNION))\n     return 0;\n \n   ctf_get_ctt_size (fp, tp, &size, &increment);"
    }
  ]
}