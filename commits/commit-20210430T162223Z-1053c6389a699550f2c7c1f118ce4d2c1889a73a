{
  "sha": "1053c6389a699550f2c7c1f118ce4d2c1889a73a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTA1M2M2Mzg5YTY5OTU1MGYyYzdjMWYxMThjZTRkMmMxODg5YTczYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-30T16:22:23Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-30T16:22:23Z"
    },
    "message": "Use template functions in windows-nat.c\n\nwindows-nat.c defines a number of replacement functions that simply\nreturn zero.  This patch removes these in favor of a couple of\ntemplate functions.\n\ngdb/ChangeLog\n2021-04-30  Tom Tromey  <tromey@adacore.com>\n\n\t* windows-nat.c (bad_GetModuleFileNameEx): Remove define.\n\t(bad_DebugActiveProcessStop, bad_DebugBreakProcess)\n\t(bad_DebugSetProcessKillOnExit, bad_EnumProcessModules)\n\t(bad_GetModuleFileNameExW, bad_GetModuleFileNameExA)\n\t(bad_GetModuleInformation, bad_OpenProcessToken): Remove.\n\t(bad): New template functions.\n\t(_initialize_loadable): Update.",
    "tree": {
      "sha": "8575bc41d64235f9ce8b67dc53636752885e5dce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8575bc41d64235f9ce8b67dc53636752885e5dce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1053c6389a699550f2c7c1f118ce4d2c1889a73a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1053c6389a699550f2c7c1f118ce4d2c1889a73a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1053c6389a699550f2c7c1f118ce4d2c1889a73a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1053c6389a699550f2c7c1f118ce4d2c1889a73a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "698facb837c556b0e189b92563ec8bd4f2de373d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/698facb837c556b0e189b92563ec8bd4f2de373d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/698facb837c556b0e189b92563ec8bd4f2de373d"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 24,
    "deletions": 48
  },
  "files": [
    {
      "sha": "673fa3e692d3452a248946a25b525496276a85f9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1053c6389a699550f2c7c1f118ce4d2c1889a73a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1053c6389a699550f2c7c1f118ce4d2c1889a73a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1053c6389a699550f2c7c1f118ce4d2c1889a73a",
      "patch": "@@ -1,3 +1,13 @@\n+2021-04-30  Tom Tromey  <tromey@adacore.com>\n+\n+\t* windows-nat.c (bad_GetModuleFileNameEx): Remove define.\n+\t(bad_DebugActiveProcessStop, bad_DebugBreakProcess)\n+\t(bad_DebugSetProcessKillOnExit, bad_EnumProcessModules)\n+\t(bad_GetModuleFileNameExW, bad_GetModuleFileNameExA)\n+\t(bad_GetModuleInformation, bad_OpenProcessToken): Remove.\n+\t(bad): New template functions.\n+\t(_initialize_loadable): Update.\n+\n 2021-04-30  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (ada_index_type): Use ada_check_typedef."
    },
    {
      "sha": "37238913a0f1de6e3dc733ea2db8c3ccbaf67d13",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 14,
      "deletions": 48,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1053c6389a699550f2c7c1f118ce4d2c1889a73a/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1053c6389a699550f2c7c1f118ce4d2c1889a73a/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=1053c6389a699550f2c7c1f118ce4d2c1889a73a",
      "patch": "@@ -160,7 +160,6 @@ static Wow64GetThreadSelectorEntry_ftype *Wow64GetThreadSelectorEntry;\n # define STARTUPINFO STARTUPINFOA\n # define CreateProcess CreateProcessA\n # define GetModuleFileNameEx_name \"GetModuleFileNameExA\"\n-# define bad_GetModuleFileNameEx bad_GetModuleFileNameExA\n #else\n # define __PMAX\tPATH_MAX\n /* The starting and ending address of the cygwin1.dll text segment.  */\n@@ -174,7 +173,6 @@ static Wow64GetThreadSelectorEntry_ftype *Wow64GetThreadSelectorEntry;\n #   define STARTUPINFO STARTUPINFOW\n #   define CreateProcess CreateProcessW\n #   define GetModuleFileNameEx_name \"GetModuleFileNameExW\"\n-#   define bad_GetModuleFileNameEx bad_GetModuleFileNameExW\n #endif\n \n static int have_saved_context;\t/* True if we've saved context from a\n@@ -3534,59 +3532,27 @@ _initialize_check_for_gdb_ini ()\n \n /* Define dummy functions which always return error for the rare cases where\n    these functions could not be found.  */\n-static BOOL WINAPI\n-bad_DebugActiveProcessStop (DWORD w)\n-{\n-  return FALSE;\n-}\n-static BOOL WINAPI\n-bad_DebugBreakProcess (HANDLE w)\n-{\n-  return FALSE;\n-}\n-static BOOL WINAPI\n-bad_DebugSetProcessKillOnExit (BOOL w)\n-{\n-  return FALSE;\n-}\n-static BOOL WINAPI\n-bad_EnumProcessModules (HANDLE w, HMODULE *x, DWORD y, LPDWORD z)\n+template<typename... T>\n+BOOL WINAPI\n+bad (T... args)\n {\n   return FALSE;\n }\n \n-#ifdef __USEWIDE\n-static DWORD WINAPI\n-bad_GetModuleFileNameExW (HANDLE w, HMODULE x, LPWSTR y, DWORD z)\n-{\n-  return 0;\n-}\n-#else\n-static DWORD WINAPI\n-bad_GetModuleFileNameExA (HANDLE w, HMODULE x, LPSTR y, DWORD z)\n+template<typename... T>\n+DWORD WINAPI\n+bad (T... args)\n {\n   return 0;\n }\n-#endif\n-\n-static BOOL WINAPI\n-bad_GetModuleInformation (HANDLE w, HMODULE x, LPMODULEINFO y, DWORD z)\n-{\n-  return FALSE;\n-}\n-\n-static BOOL WINAPI\n-bad_OpenProcessToken (HANDLE w, DWORD x, PHANDLE y)\n-{\n-  return FALSE;\n-}\n \n static BOOL WINAPI\n bad_GetCurrentConsoleFont (HANDLE w, BOOL bMaxWindow, CONSOLE_FONT_INFO *f)\n {\n   f->nFont = 0;\n   return 1;\n }\n+\n static COORD WINAPI\n bad_GetConsoleFontSize (HANDLE w, DWORD nFont)\n {\n@@ -3628,11 +3594,11 @@ _initialize_loadable ()\n   /* Set variables to dummy versions of these processes if the function\n      wasn't found in kernel32.dll.  */\n   if (!DebugBreakProcess)\n-    DebugBreakProcess = bad_DebugBreakProcess;\n+    DebugBreakProcess = bad;\n   if (!DebugActiveProcessStop || !DebugSetProcessKillOnExit)\n     {\n-      DebugActiveProcessStop = bad_DebugActiveProcessStop;\n-      DebugSetProcessKillOnExit = bad_DebugSetProcessKillOnExit;\n+      DebugActiveProcessStop = bad;\n+      DebugSetProcessKillOnExit = bad;\n     }\n   if (!GetConsoleFontSize)\n     GetConsoleFontSize = bad_GetConsoleFontSize;\n@@ -3657,9 +3623,9 @@ _initialize_loadable ()\n     {\n       /* Set variables to dummy versions of these processes if the function\n \t wasn't found in psapi.dll.  */\n-      EnumProcessModules = bad_EnumProcessModules;\n-      GetModuleInformation = bad_GetModuleInformation;\n-      GetModuleFileNameEx = bad_GetModuleFileNameEx;\n+      EnumProcessModules = bad;\n+      GetModuleInformation = bad;\n+      GetModuleFileNameEx = bad;\n       /* This will probably fail on Windows 9x/Me.  Let the user know\n \t that we're missing some functionality.  */\n       warning(_(\"\\\n@@ -3677,7 +3643,7 @@ Use \\\"file\\\" or \\\"dll\\\" command to load executable/libraries directly.\"));\n \t else is needed.  */\n       if (!OpenProcessToken || !LookupPrivilegeValueA\n \t  || !AdjustTokenPrivileges)\n-\tOpenProcessToken = bad_OpenProcessToken;\n+\tOpenProcessToken = bad;\n     }\n \n #undef GPA"
    }
  ]
}