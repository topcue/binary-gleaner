{
  "sha": "329534fda79702d50374304d1b724bc0b83a9421",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzI5NTM0ZmRhNzk3MDJkNTAzNzQzMDRkMWI3MjRiYzBiODNhOTQyMQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-04-13T15:38:53Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-04-13T15:38:53Z"
    },
    "message": "[gdb] Fix regoff_t incompatibility\n\nI did an experiment with importing the regex module in gnulib, and trying to\nbuild gdb.\n\nThe first problem I ran into was that:\n- regoff_t was defined as long int, and\n- the address of a regoff_t variable i in ui_file_style::parse was passed\n  as int * to function extended_color.\n\nFix this by changing the types of some function parameters of functions\nread_semi_number and extended_color from int * to regoff_t *.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2021-04-13  Tom de Vries  <tdevries@suse.de>\n\n\t* ui-style.c (read_semi_number, extended_color): Change idx parameter\n\ttype to regoff_t *.",
    "tree": {
      "sha": "f654b12c470243c665fdc3439b334842d31a7781",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f654b12c470243c665fdc3439b334842d31a7781"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/329534fda79702d50374304d1b724bc0b83a9421",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/329534fda79702d50374304d1b724bc0b83a9421",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/329534fda79702d50374304d1b724bc0b83a9421",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/329534fda79702d50374304d1b724bc0b83a9421/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d9d2ef05f11736bf2e889047cc7588d0c0dd907e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9d2ef05f11736bf2e889047cc7588d0c0dd907e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d9d2ef05f11736bf2e889047cc7588d0c0dd907e"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "49783c4e33f1dc0f1d4c187ceb20d0728f206f68",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/329534fda79702d50374304d1b724bc0b83a9421/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/329534fda79702d50374304d1b724bc0b83a9421/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=329534fda79702d50374304d1b724bc0b83a9421",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-13  Tom de Vries  <tdevries@suse.de>\n+\n+\t* ui-style.c (read_semi_number, extended_color): Change idx parameter\n+\ttype to regoff_t *.\n+\n 2021-04-13  Luis Machado  <luis.machado@linaro.org>\n \n \t* rs6000-tdep.c (ppc_displaced_step_fixup): Use %s to print"
    },
    {
      "sha": "2fda9d13fd34eb7f0d527f13ceea8650487629eb",
      "filename": "gdb/ui-style.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/329534fda79702d50374304d1b724bc0b83a9421/gdb/ui-style.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/329534fda79702d50374304d1b724bc0b83a9421/gdb/ui-style.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-style.c?ref=329534fda79702d50374304d1b724bc0b83a9421",
      "patch": "@@ -169,7 +169,7 @@ ui_file_style::to_ansi () const\n    characters read and put the number into *NUM.  */\n \n static bool\n-read_semi_number (const char *string, int *idx, long *num)\n+read_semi_number (const char *string, regoff_t *idx, long *num)\n {\n   if (string[*idx] != ';')\n     return false;\n@@ -186,7 +186,7 @@ read_semi_number (const char *string, int *idx, long *num)\n    sequence; that is, and 8- or 24- bit color.  */\n \n static bool\n-extended_color (const char *str, int *idx, ui_file_style::color *color)\n+extended_color (const char *str, regoff_t *idx, ui_file_style::color *color)\n {\n   long value;\n "
    }
  ]
}