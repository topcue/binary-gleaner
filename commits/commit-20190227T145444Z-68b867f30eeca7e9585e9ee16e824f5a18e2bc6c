{
  "sha": "68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjhiODY3ZjMwZWVjYTdlOTU4NWU5ZWUxNmU4MjRmNWExOGUyYmM2Yw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-12-19T22:34:19Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:44Z"
    },
    "message": "gdb/ft32: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/ft32-tdep.c (ft32_dummy_id): Delete.\n\t(ft32_unwind_pc): Delete.\n\t(ft32_unwind_sp): Delete.\n\t(ft32_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "833e90a3babdf2660baff9f719de2fa29ba80db3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/833e90a3babdf2660baff9f719de2fa29ba80db3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2fbe7ad059d9ec2a8a378a5c2b973a1188677422"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 8,
    "deletions": 33
  },
  "files": [
    {
      "sha": "ba877061d782a26a619ff4a604a47b0dfdfcfb1a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/ft32-tdep.c (ft32_dummy_id): Delete.\n+\t(ft32_unwind_pc): Delete.\n+\t(ft32_unwind_sp): Delete.\n+\t(ft32_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb/frv-tdep.c (frv_dummy_id): Delete."
    },
    {
      "sha": "bded02fae4bc4e880b49fb61159f08ddb6a65214",
      "filename": "gdb/ft32-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c/gdb/ft32-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b867f30eeca7e9585e9ee16e824f5a18e2bc6c/gdb/ft32-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ft32-tdep.c?ref=68b867f30eeca7e9585e9ee16e824f5a18e2bc6c",
      "patch": "@@ -383,14 +383,6 @@ ft32_address_class_name_to_type_flags (struct gdbarch *gdbarch,\n     return 0;\n }\n \n-/* Implement the \"unwind_sp\" gdbarch method.  */\n-\n-static CORE_ADDR\n-ft32_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, FT32_SP_REGNUM);\n-}\n-\n /* Given a return value in `regbuf' with a type `valtype',\n    extract and copy its value into `valbuf'.  */\n \n@@ -492,14 +484,6 @@ ft32_frame_cache (struct frame_info *this_frame, void **this_cache)\n   return cache;\n }\n \n-/* Implement the \"unwind_pc\" gdbarch method.  */\n-\n-static CORE_ADDR\n-ft32_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, FT32_PC_REGNUM);\n-}\n-\n /* Given a GDB frame, determine the address of the calling function's\n    frame.  This will be used to create a new GDB frame struct.  */\n \n@@ -567,14 +551,6 @@ static const struct frame_base ft32_frame_base =\n   ft32_frame_base_address\n };\n \n-static struct frame_id\n-ft32_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp = get_frame_register_unsigned (this_frame, FT32_SP_REGNUM);\n-\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n /* Allocate and initialize the ft32 gdbarch object.  */\n \n static struct gdbarch *\n@@ -602,8 +578,6 @@ ft32_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n \t\t\t\t     func_void_type);\n   TYPE_INSTANCE_FLAGS (tdep->pc_type) |= TYPE_INSTANCE_FLAG_ADDRESS_CLASS_1;\n \n-  set_gdbarch_unwind_sp (gdbarch, ft32_unwind_sp);\n-\n   set_gdbarch_num_regs (gdbarch, FT32_NUM_REGS);\n   set_gdbarch_sp_regnum (gdbarch, FT32_SP_REGNUM);\n   set_gdbarch_pc_regnum (gdbarch, FT32_PC_REGNUM);\n@@ -622,13 +596,6 @@ ft32_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n \n   frame_base_set_default (gdbarch, &ft32_frame_base);\n \n-  /* Methods for saving / extracting a dummy frame's ID.  The ID's\n-     stack address must match the SP value returned by\n-     PUSH_DUMMY_CALL, and saved by generic_save_dummy_frame_tos.  */\n-  set_gdbarch_dummy_id (gdbarch, ft32_dummy_id);\n-\n-  set_gdbarch_unwind_pc (gdbarch, ft32_unwind_pc);\n-\n   /* Hook in ABI-specific overrides, if they have been registered.  */\n   gdbarch_init_osabi (info, gdbarch);\n "
    }
  ]
}