{
  "sha": "bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmQ3MGIxZjI0MGIyNGQ4YzliMDg4NjhjYTc3N2Y1YTgxZDEzYzBjMg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:24Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:24Z"
    },
    "message": "gdbserver/linux-low: turn 'fetch_register' into a method\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn the 'fetch_register' linux target op into a method of\n\tlinux_process_target.\n\n\t* linux-low.h (struct linux_target_ops) <fetch_register>: Remove.\n\t(class linux_process_target) <low_fetch_register>: Declare.\n\t* linux-x86-low.cc (the_low_target)\n\t* linux-aarch64-low.cc (the_low_target)\n\t* linux-arm-low.cc (the_low_target)\n\t* linux-bfin-low.cc (the_low_target)\n\t* linux-cris-low.cc (the_low_target)\n\t* linux-crisv32-low.cc (the_low_target)\n\t* linux-m32r-low.cc (the_low_target)\n\t* linux-m68k-low.cc (the_low_target)\n\t* linux-nios2-low.cc (the_low_target)\n\t* linux-ppc-low.cc (the_low_target)\n\t* linux-s390-low.cc (the_low_target)\n\t* linux-sh-low.cc (the_low_target)\n\t* linux-sparc-low.cc (the_low_target)\n\t* linux-tic6x-low.cc (the_low_target)\n\t* linux-tile-low.cc (the_low_target)\n\t* linux-xtensa-low.cc (the_low_target): Remove the op field.\n\t* linux-ia64-low.cc (class ia64_target) <low_fetch_register>:\n\tDeclare.\n\t(ia64_fetch_register): Turn into...\n\t(ia64_target::low_fetch_register): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-mips-low.cc (class mips_target) <low_fetch_register>:\n\tDeclare.\n\t(mips_fetch_register): Turn into...\n\t(mips_target::low_fetch_register): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-riscv-low.cc (class riscv_target) <low_fetch_register>:\n\tDeclare.\n\t(riscv_fetch_register): Turn into...\n\t(riscv_target::low_fetch_register): ...this.\n\t(the_low_target): Remove the op field.\n\n\tUpdate the callers below.\n\n\t* linux-low.cc (linux_process_target::fetch_registers)\n\t(linux_process_target::low_fetch_register)",
    "tree": {
      "sha": "1bee5bab18f4d2addd3b88fe914c236d07a0c4fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1bee5bab18f4d2addd3b88fe914c236d07a0c4fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "daca57a7de50f97a4e8df917447561617a0298b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/daca57a7de50f97a4e8df917447561617a0298b2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/daca57a7de50f97a4e8df917447561617a0298b2"
    }
  ],
  "stats": {
    "total": 126,
    "additions": 80,
    "deletions": 46
  },
  "files": [
    {
      "sha": "5f543bb5fa5b8543afbc7090bfc0cecc8bc272f6",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -1,3 +1,47 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn the 'fetch_register' linux target op into a method of\n+\tlinux_process_target.\n+\n+\t* linux-low.h (struct linux_target_ops) <fetch_register>: Remove.\n+\t(class linux_process_target) <low_fetch_register>: Declare.\n+\t* linux-x86-low.cc (the_low_target)\n+\t* linux-aarch64-low.cc (the_low_target)\n+\t* linux-arm-low.cc (the_low_target)\n+\t* linux-bfin-low.cc (the_low_target)\n+\t* linux-cris-low.cc (the_low_target)\n+\t* linux-crisv32-low.cc (the_low_target)\n+\t* linux-m32r-low.cc (the_low_target)\n+\t* linux-m68k-low.cc (the_low_target)\n+\t* linux-nios2-low.cc (the_low_target)\n+\t* linux-ppc-low.cc (the_low_target)\n+\t* linux-s390-low.cc (the_low_target)\n+\t* linux-sh-low.cc (the_low_target)\n+\t* linux-sparc-low.cc (the_low_target)\n+\t* linux-tic6x-low.cc (the_low_target)\n+\t* linux-tile-low.cc (the_low_target)\n+\t* linux-xtensa-low.cc (the_low_target): Remove the op field.\n+\t* linux-ia64-low.cc (class ia64_target) <low_fetch_register>:\n+\tDeclare.\n+\t(ia64_fetch_register): Turn into...\n+\t(ia64_target::low_fetch_register): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-mips-low.cc (class mips_target) <low_fetch_register>:\n+\tDeclare.\n+\t(mips_fetch_register): Turn into...\n+\t(mips_target::low_fetch_register): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-riscv-low.cc (class riscv_target) <low_fetch_register>:\n+\tDeclare.\n+\t(riscv_fetch_register): Turn into...\n+\t(riscv_target::low_fetch_register): ...this.\n+\t(the_low_target): Remove the op field.\n+\n+\tUpdate the callers below.\n+\n+\t* linux-low.cc (linux_process_target::fetch_registers)\n+\t(linux_process_target::low_fetch_register)\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn the 'cannot_fetch_register' and 'cannot_store_register'"
    },
    {
      "sha": "0bcac19384a3614ef904e992efbd851a03a3ea51",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -3085,7 +3085,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* fetch_register */\n   aarch64_get_pc,\n   aarch64_set_pc,\n   aarch64_breakpoint_kind_from_pc,"
    },
    {
      "sha": "1bbf0e6977f251d1b6a7d259a0a017165876547d",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -1027,7 +1027,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   arm_breakpoint_kind_from_pc,"
    },
    {
      "sha": "a8bb8f03ce02155dd3bc5ee27c4f176c42167be1",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -135,7 +135,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "7956922f7e5821f6d9d7cb60f3f80763483e6438",
      "filename": "gdbserver/linux-cris-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-cris-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-cris-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-cris-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -132,7 +132,6 @@ cris_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "828ac111d1067c9874731c8ecded348211d9795a",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -429,7 +429,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "377df4f75c307d1473dc32cb307da0258c2e203e",
      "filename": "gdbserver/linux-ia64-low.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-ia64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-ia64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ia64-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -38,6 +38,8 @@ class ia64_target : public linux_process_target\n   bool low_cannot_fetch_register (int regno) override;\n \n   bool low_cannot_store_register (int regno) override;\n+\n+  bool low_fetch_register (regcache *regcache, int regno) override;\n };\n \n /* The singleton target ops object.  */\n@@ -304,8 +306,8 @@ ia64_target::low_cannot_fetch_register (int regno)\n #define IA64_FR0_REGNUM\t\t128\n #define IA64_FR1_REGNUM\t\t129\n \n-static int\n-ia64_fetch_register (struct regcache *regcache, int regnum)\n+bool\n+ia64_target::low_fetch_register (regcache *regcache, int regnum)\n {\n   /* r0 cannot be fetched but is always zero.  */\n   if (regnum == IA64_GR0_REGNUM)\n@@ -314,7 +316,7 @@ ia64_fetch_register (struct regcache *regcache, int regnum)\n \n       gdb_assert (sizeof (zero) == register_size (regcache->tdesc, regnum));\n       supply_register (regcache, regnum, zero);\n-      return 1;\n+      return true;\n     }\n \n   /* fr0 cannot be fetched but is always zero.  */\n@@ -324,7 +326,7 @@ ia64_fetch_register (struct regcache *regcache, int regnum)\n \n       gdb_assert (sizeof (f_zero) == register_size (regcache->tdesc, regnum));\n       supply_register (regcache, regnum, f_zero);\n-      return 1;\n+      return true;\n     }\n \n   /* fr1 cannot be fetched but is always one (1.0).  */\n@@ -335,10 +337,10 @@ ia64_fetch_register (struct regcache *regcache, int regnum)\n \n       gdb_assert (sizeof (f_one) == register_size (regcache->tdesc, regnum));\n       supply_register (regcache, regnum, f_one);\n-      return 1;\n+      return true;\n     }\n \n-  return 0;\n+  return false;\n }\n \n static struct usrregs_info ia64_usrregs_info =\n@@ -367,7 +369,6 @@ ia64_target::low_arch_setup ()\n \n \n struct linux_target_ops the_low_target = {\n-  ia64_fetch_register,\n };\n \n /* The linux target ops object.  */"
    },
    {
      "sha": "c77e92d17b1488fc163e3b8268b5ad752721dade",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 5,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -5569,19 +5569,17 @@ linux_process_target::fetch_registers (regcache *regcache, int regno)\n \n   if (regno == -1)\n     {\n-      if (the_low_target.fetch_register != NULL\n-\t  && regs_info->usrregs != NULL)\n+      if (regs_info->usrregs != NULL)\n \tfor (regno = 0; regno < regs_info->usrregs->num_regs; regno++)\n-\t  (*the_low_target.fetch_register) (regcache, regno);\n+\t  low_fetch_register (regcache, regno);\n \n       all = regsets_fetch_inferior_registers (regs_info->regsets_info, regcache);\n       if (regs_info->usrregs != NULL)\n \tusr_fetch_inferior_registers (regs_info, regcache, -1, all);\n     }\n   else\n     {\n-      if (the_low_target.fetch_register != NULL\n-\t  && (*the_low_target.fetch_register) (regcache, regno))\n+      if (low_fetch_register (regcache, regno))\n \treturn;\n \n       use_regsets = linux_register_in_regsets (regs_info, regno);\n@@ -5618,6 +5616,11 @@ linux_process_target::store_registers (regcache *regcache, int regno)\n     }\n }\n \n+bool\n+linux_process_target::low_fetch_register (regcache *regcache, int regno)\n+{\n+  return false;\n+}\n \n /* A wrapper for the read_memory target op.  */\n "
    },
    {
      "sha": "7ac9086fb9991d51dacab3133a1e19d8dee39e45",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -131,13 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Hook to fetch a register in some non-standard way.  Used for\n-     example by backends that have read-only registers with hardcoded\n-     values (e.g., IA64's gr0/fr0/fr1).  Returns true if register\n-     REGNO was supplied, false if not, and we should fallback to the\n-     standard ptrace methods.  */\n-  int (*fetch_register) (struct regcache *regcache, int regno);\n-\n   CORE_ADDR (*get_pc) (struct regcache *regcache);\n   void (*set_pc) (struct regcache *regcache, CORE_ADDR newpc);\n \n@@ -598,6 +591,13 @@ class linux_process_target : public process_stratum_target\n   virtual bool low_cannot_fetch_register (int regno) = 0;\n \n   virtual bool low_cannot_store_register (int regno) = 0;\n+\n+  /* Hook to fetch a register in some non-standard way.  Used for\n+     example by backends that have read-only registers with hardcoded\n+     values (e.g., IA64's gr0/fr0/fr1).  Returns true if register\n+     REGNO was supplied, false if not, and we should fallback to the\n+     standard ptrace methods.  */\n+  virtual bool low_fetch_register (regcache *regcache, int regno);\n };\n \n extern linux_process_target *the_linux_target;"
    },
    {
      "sha": "82a503401b8dfc27a923f59367360e007535b245",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -134,7 +134,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_from_pc */"
    },
    {
      "sha": "6a3a2aab3839f366389de9194e20ab9e31ad249e",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -229,7 +229,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "ae925ffb6cc0e78b66319a42b557980fc2c0117e",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -40,6 +40,8 @@ class mips_target : public linux_process_target\n   bool low_cannot_fetch_register (int regno) override;\n \n   bool low_cannot_store_register (int regno) override;\n+\n+  bool low_fetch_register (regcache *regcache, int regno) override;\n };\n \n /* The singleton target ops object.  */\n@@ -263,18 +265,18 @@ mips_target::low_cannot_store_register (int regno)\n   return false;\n }\n \n-static int\n-mips_fetch_register (struct regcache *regcache, int regno)\n+bool\n+mips_target::low_fetch_register (regcache *regcache, int regno)\n {\n   const struct target_desc *tdesc = current_process ()->tdesc;\n \n   if (find_regno (tdesc, \"r0\") == regno)\n     {\n       supply_register_zeroed (regcache, regno);\n-      return 1;\n+      return true;\n     }\n \n-  return 0;\n+  return false;\n }\n \n static CORE_ADDR\n@@ -950,7 +952,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  mips_fetch_register,\n   mips_get_pc,\n   mips_set_pc,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "a58d9ca99fb142feed4b890e90460c9ed0a74427",
      "filename": "gdbserver/linux-nios2-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-nios2-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-nios2-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-nios2-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -251,7 +251,6 @@ nios2_target::get_regs_info ()\n \n struct linux_target_ops the_low_target =\n {\n-  NULL,\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "096308a44d8d12d190fd294c7d9aff2bb934c7a0",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -3392,7 +3392,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   ppc_get_pc,\n   ppc_set_pc,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "69af59f720043d53c10fcd1d2d578a4430d00e24",
      "filename": "gdbserver/linux-riscv-low.cc",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-riscv-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-riscv-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-riscv-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -45,6 +45,8 @@ class riscv_target : public linux_process_target\n   bool low_cannot_fetch_register (int regno) override;\n \n   bool low_cannot_store_register (int regno) override;\n+\n+  bool low_fetch_register (regcache *regcache, int regno) override;\n };\n \n /* The singleton target ops object.  */\n@@ -188,17 +190,17 @@ riscv_target::get_regs_info ()\n   return &riscv_regs;\n }\n \n-/* Implementation of linux_target_ops method \"fetch_register\".  */\n+/* Implementation of linux target ops method \"low_fetch_register\".  */\n \n-static int\n-riscv_fetch_register (struct regcache *regcache, int regno)\n+bool\n+riscv_target::low_fetch_register (regcache *regcache, int regno)\n {\n   const struct target_desc *tdesc = regcache->tdesc;\n \n   if (regno != find_regno (tdesc, \"zero\"))\n-    return 0;\n+    return false;\n   supply_register_zeroed (regcache, regno);\n-  return 1;\n+  return true;\n }\n \n /* Implementation of linux_target_ops method \"get_pc\".  */\n@@ -291,7 +293,6 @@ riscv_breakpoint_at (CORE_ADDR pc)\n /* RISC-V/Linux target operations.  */\n struct linux_target_ops the_low_target =\n {\n-  riscv_fetch_register,\n   riscv_get_pc,\n   riscv_set_pc,\n   riscv_breakpoint_kind_from_pc,"
    },
    {
      "sha": "d25fafa4cdfb3c620d7de10d6858a2cbc431a1ea",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -2812,7 +2812,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   s390_get_pc,\n   s390_set_pc,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "42bd427d47c6881c88f2ae6dde3a097b9600015b",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -164,7 +164,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "b68ed2d36ad8e3c4e9be9ef41d9856dab0fd6412",
      "filename": "gdbserver/linux-sparc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-sparc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-sparc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sparc-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -319,7 +319,6 @@ sparc_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_64bit,\n   /* No sparc_set_pc is needed.  */\n   NULL,"
    },
    {
      "sha": "5cfdd091c386061b7175398b89226bb30218d202",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -407,7 +407,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   tic6x_get_pc,\n   tic6x_set_pc,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "a6138e78aa784eb67e4b5fc23260d5110645cc90",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -196,7 +196,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL,\n   linux_get_pc_64bit,\n   linux_set_pc_64bit,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "475d77767f5913567c8a12e009bc8a7c0a5919d2",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -2885,7 +2885,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* fetch_register */\n   x86_get_pc,\n   x86_set_pc,\n   NULL, /* breakpoint_kind_from_pc */"
    },
    {
      "sha": "d71b2c97fa4df5eeaa65d86c5512af246098d466",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd70b1f240b24d8c9b08868ca777f5a81d13c0c2/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=bd70b1f240b24d8c9b08868ca777f5a81d13c0c2",
      "patch": "@@ -302,7 +302,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* fetch_register */\n   linux_get_pc_32bit,\n   linux_set_pc_32bit,\n   NULL, /* breakpoint_kind_from_pc */"
    }
  ]
}