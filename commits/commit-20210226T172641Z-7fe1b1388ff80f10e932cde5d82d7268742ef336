{
  "sha": "7fe1b1388ff80f10e932cde5d82d7268742ef336",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2ZlMWIxMzg4ZmY4MGYxMGU5MzJjZGU1ZDgyZDcyNjg3NDJlZjMzNg==",
  "commit": {
    "author": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2021-02-26T17:25:45Z"
    },
    "committer": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2021-02-26T17:26:41Z"
    },
    "message": "nm: Add --quiet to suppress \"no symbols\" diagnostic\n\n\tPR binutils/27408\n\t* readelf.c (quiet): New option flag.\n\t(enum long_option_values): New enum to hold long option value.\n\t(long_options): Add --quiet.\n\t(usage): Mention --quiet.\n\t(display_rel_file): If quiet is enabled, suppress \"no symbols\".\n\t(main): Handle the new option.\n\t* NEWS: Mention --quiet.\n\t* docs/binutils.texi: Document --quiet.",
    "tree": {
      "sha": "9ec68f36082035547db348a864d106a8bcec594f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ec68f36082035547db348a864d106a8bcec594f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7fe1b1388ff80f10e932cde5d82d7268742ef336",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7fe1b1388ff80f10e932cde5d82d7268742ef336",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7fe1b1388ff80f10e932cde5d82d7268742ef336",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7fe1b1388ff80f10e932cde5d82d7268742ef336/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe0171d248e6d4cbc59c3101b9e74e18a9292294",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe0171d248e6d4cbc59c3101b9e74e18a9292294",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe0171d248e6d4cbc59c3101b9e74e18a9292294"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 34,
    "deletions": 4
  },
  "files": [
    {
      "sha": "4289eb5e83d05b8e4160b6a37a009d1b4cad47c9",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=7fe1b1388ff80f10e932cde5d82d7268742ef336",
      "patch": "@@ -1,3 +1,15 @@\n+2021-02-26  Fangrui Song  <maskray@google.com>\n+\n+\tPR 27408\n+\t* readelf.c (quiet): New option flag.\n+\t(enum long_option_values): New enum to hold long option value.\n+\t(long_options): Add --quiet.\n+\t(usage): Mention --quiet.\n+\t(display_rel_file): If quiet is enabled, suppress \"no symbols\".\n+\t(main): Handle the new option.\n+\t* NEWS: Mention --quiet.\n+\t* docs/binutils.texi: Document --quiet.\n+\n 2021-02-26  Tom de Vries  <tdevries@suse.de>\n \n \t* dwarf.c (display_debug_addr): Handle dwarf-5 .debug_addr bits."
    },
    {
      "sha": "d66944e95e04582af50104bd63bc4b13515e9aae",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=7fe1b1388ff80f10e932cde5d82d7268742ef336",
      "patch": "@@ -10,6 +10,9 @@\n   restored by the use of the --enable-follow-debug-links=no configure time\n   option.\n \n+* Nm has a new command line option: --quiet.  This suppresses \"no symbols\"\n+  diagnostic.\n+\n Changes in 2.36:\n \n * Update elfedit and readelf with LAM_U48 and LAM_U57 support."
    },
    {
      "sha": "b7740dfc8a4f50b7d50d3bdb0d95ea86b38197eb",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=7fe1b1388ff80f10e932cde5d82d7268742ef336",
      "patch": "@@ -4741,6 +4741,7 @@ readelf [@option{-a}|@option{--all}]\n         [@option{-s}|@option{--syms}|@option{--symbols}]\n         [@option{--dyn-syms}|@option{--lto-syms}]\n         [@option{--demangle@var{=style}}|@option{--no-demangle}]\n+        [@option{--quiet}]\n         [@option{--recurse-limit}|@option{--no-recurse-limit}]\n         [@option{-n}|@option{--notes}]\n         [@option{-r}|@option{--relocs}]\n@@ -4822,6 +4823,10 @@ file.\n Displays the information contained in the file's segment headers, if it\n has any.\n \n+@item --quiet\n+@cindex quiet\n+Suppress \"no symbols\" diagnostic.\n+\n @item -S\n @itemx --sections\n @itemx --section-headers"
    },
    {
      "sha": "a51d2eff75d70f6b66a953e31665e2634eb2b46a",
      "filename": "binutils/nm.c",
      "status": "modified",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/nm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7fe1b1388ff80f10e932cde5d82d7268742ef336/binutils/nm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/nm.c?ref=7fe1b1388ff80f10e932cde5d82d7268742ef336",
      "patch": "@@ -161,6 +161,7 @@ static int show_version = 0;\t/* Show the version number.  */\n static int show_synthetic = 0;\t/* Display synthesized symbols too.  */\n static int line_numbers = 0;\t/* Print line numbers for symbols.  */\n static int allow_special_symbols = 0;  /* Allow special symbols.  */\n+static int quiet = 0;\t\t/* Suppress \"no symbols\" diagnostic.  */\n \n /* The characters to use for global and local ifunc symbols.  */\n #if DEFAULT_F_FOR_IFUNC_SYMBOLS\n@@ -200,7 +201,8 @@ enum long_option_values\n   OPTION_RECURSE_LIMIT,\n   OPTION_NO_RECURSE_LIMIT,\n   OPTION_IFUNC_CHARS,\n-  OPTION_WITH_SYMBOL_VERSIONS\n+  OPTION_WITH_SYMBOL_VERSIONS,\n+  OPTION_QUIET\n };\n \n static struct option long_options[] =\n@@ -224,6 +226,7 @@ static struct option long_options[] =\n   {\"print-armap\", no_argument, &print_armap, 1},\n   {\"print-file-name\", no_argument, 0, 'o'},\n   {\"print-size\", no_argument, 0, 'S'},\n+  {\"quiet\", no_argument, 0, OPTION_QUIET},\n   {\"radix\", required_argument, 0, 't'},\n   {\"recurse-limit\", no_argument, NULL, OPTION_RECURSE_LIMIT},\n   {\"recursion-limit\", no_argument, NULL, OPTION_RECURSE_LIMIT},\n@@ -279,6 +282,7 @@ usage (FILE *stream, int status)\n   fprintf (stream, _(\"\\\n   -S, --print-size       Print size of defined symbols\\n\\\n   -s, --print-armap      Include index for symbols from archive members\\n\\\n+      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\\\n       --size-sort        Sort symbols by size\\n\\\n       --special-syms     Include special symbols in the output\\n\\\n       --synthetic        Display synthetic symbols as well\\n\\\n@@ -1130,7 +1134,8 @@ display_rel_file (bfd *abfd, bfd *archive_bfd)\n     {\n       if (!(bfd_get_file_flags (abfd) & HAS_SYMS))\n \t{\n-\t  non_fatal (_(\"%s: no symbols\"), bfd_get_filename (abfd));\n+\t  if (!quiet)\n+\t    non_fatal (_(\"%s: no symbols\"), bfd_get_filename (abfd));\n \t  return;\n \t}\n     }\n@@ -1140,7 +1145,8 @@ display_rel_file (bfd *abfd, bfd *archive_bfd)\n     {\n       if (dynamic && bfd_get_error () == bfd_error_no_symbols)\n \t{\n-\t  non_fatal (_(\"%s: no symbols\"), bfd_get_filename (abfd));\n+\t  if (!quiet)\n+\t    non_fatal (_(\"%s: no symbols\"), bfd_get_filename (abfd));\n \t  return;\n \t}\n \n@@ -1149,7 +1155,8 @@ display_rel_file (bfd *abfd, bfd *archive_bfd)\n \n   if (symcount == 0)\n     {\n-      non_fatal (_(\"%s: no symbols\"), bfd_get_filename (abfd));\n+      if (!quiet)\n+\tnon_fatal (_(\"%s: no symbols\"), bfd_get_filename (abfd));\n       return;\n     }\n \n@@ -1776,6 +1783,9 @@ main (int argc, char **argv)\n \tcase OPTION_WITH_SYMBOL_VERSIONS:\n \t  /* Ignored for backward compatibility.  */\n \t  break;\n+\tcase OPTION_QUIET:\n+\t  quiet = 1;\n+\t  break;\n \tcase 'D':\n \t  dynamic = 1;\n \t  break;"
    }
  ]
}