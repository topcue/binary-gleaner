{
  "sha": "7ca9b62a2b63ae04d554053c2a2053d13a9d8c92",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2NhOWI2MmEyYjYzYWUwNGQ1NTQwNTNjMmEyMDUzZDEzYTlkOGM5Mg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-05-14T11:59:53Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-05-14T11:59:53Z"
    },
    "message": "gdb/infrun: move a 'regcache_read_pc' call down to first use\n\nIn infrun.c's resume_1 function, move the definition of the local\nvariable PC down to its first use.  This is useful if the thread we want\nto resume is already gone with a pending exit event, because we avoid\nthe error we would see otherwise when trying to read the PC.\n\ngdb/ChangeLog:\n2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* infrun.c (resume_1): Move a 'regcache_read_pc' call down to first\n\tuse.",
    "tree": {
      "sha": "33a18fcc1bb47295fca866619dc3bad3687af977",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/33a18fcc1bb47295fca866619dc3bad3687af977"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fc75c28ba1ea7353fb6e1e5904c5703a48504b67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc75c28ba1ea7353fb6e1e5904c5703a48504b67",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fc75c28ba1ea7353fb6e1e5904c5703a48504b67"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "8b756c451b4c0770880d69cbccbb85d2b9673b72",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7ca9b62a2b63ae04d554053c2a2053d13a9d8c92",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* infrun.c (resume_1): Move a 'regcache_read_pc' call down to first\n+\tuse.\n+\n 2020-05-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* regcache.c (regcache_read_pc_protected): New function"
    },
    {
      "sha": "db88a1eef1579bb4c9455ce65ca61b8d6df511c8",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ca9b62a2b63ae04d554053c2a2053d13a9d8c92/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=7ca9b62a2b63ae04d554053c2a2053d13a9d8c92",
      "patch": "@@ -2279,7 +2279,6 @@ resume_1 (enum gdb_signal sig)\n   struct regcache *regcache = get_current_regcache ();\n   struct gdbarch *gdbarch = regcache->arch ();\n   struct thread_info *tp = inferior_thread ();\n-  CORE_ADDR pc = regcache_read_pc (regcache);\n   const address_space *aspace = regcache->aspace ();\n   ptid_t resume_ptid;\n   /* This represents the user's step vs continue request.  When\n@@ -2358,6 +2357,8 @@ resume_1 (enum gdb_signal sig)\n       step = 0;\n     }\n \n+  CORE_ADDR pc = regcache_read_pc (regcache);\n+\n   if (debug_infrun)\n     fprintf_unfiltered (gdb_stdlog,\n \t\t\t\"infrun: resume (step=%d, signal=%s), \""
    }
  ]
}