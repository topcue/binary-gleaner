{
  "sha": "71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzFjNGU5NWFiZTY2ZWM5ZmMyYzA2NDI2OGUzZjk2NDBhNWI5NTFkOA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-07-18T01:42:40Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-07-18T12:47:30Z"
    },
    "message": "[PowerPC64] Use STN_UNDEF internally for edited relocs\n\nIt's not correct to use non-STT_TLS symbols with TLS relocation, not\nthat it matters much when editing relocs, but this edited reloc can be\noutput by --emit-relocs.  So don't use a symbol on the reloc.\n\n\t* elf64-ppc.c (ppc64_elf_relocate_section): Don't bother selecting\n\ta TLS section symbol for edited relocs.  Tighten TLS symbol/reloc\n\tmatch test.",
    "tree": {
      "sha": "56c3c717039ed81afda0f85e85a77a7e0caf4b8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/56c3c717039ed81afda0f85e85a77a7e0caf4b8f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71c4e95abe66ec9fc2c064268e3f9640a5b951d8/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "46e9995a207140408309dbea40c64f11843db777",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46e9995a207140408309dbea40c64f11843db777",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/46e9995a207140408309dbea40c64f11843db777"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 12,
    "deletions": 33
  },
  "files": [
    {
      "sha": "a9dce78afca5d01ca6d8f1b1429a71f9a28e9438",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71c4e95abe66ec9fc2c064268e3f9640a5b951d8/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71c4e95abe66ec9fc2c064268e3f9640a5b951d8/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.c (ppc64_elf_relocate_section): Don't bother selecting\n+\ta TLS section symbol for edited relocs.  Tighten TLS symbol/reloc\n+\tmatch test.\n+\n 2019-07-18  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (TLS_EXPLICIT): Define as 256."
    },
    {
      "sha": "df4a12c58d7bc478ad28cb8b2b464e295a1ca7f4",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 6,
      "deletions": 33,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71c4e95abe66ec9fc2c064268e3f9640a5b951d8/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71c4e95abe66ec9fc2c064268e3f9640a5b951d8/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
      "patch": "@@ -14304,10 +14304,7 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t  && (h == NULL\n \t      || h->elf.root.type == bfd_link_hash_defined\n \t      || h->elf.root.type == bfd_link_hash_defweak)\n-\t  && (IS_PPC64_TLS_RELOC (r_type)\n-\t      != (sym_type == STT_TLS\n-\t\t  || (sym_type == STT_SECTION\n-\t\t      && (sec->flags & SEC_THREAD_LOCAL) != 0))))\n+\t  && IS_PPC64_TLS_RELOC (r_type) != (sym_type == STT_TLS))\n \t{\n \t  if ((tls_mask & TLS_TLS) != 0\n \t      && (r_type == R_PPC64_TLS\n@@ -14547,20 +14544,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t\t  if (tls_gd == 0)\n \t\t    {\n \t\t      /* Was an LD reloc.  */\n-\t\t      if (toc_symndx)\n-\t\t\tsec = local_sections[toc_symndx];\n-\t\t      for (r_symndx = 0;\n-\t\t\t   r_symndx < symtab_hdr->sh_info;\n-\t\t\t   r_symndx++)\n-\t\t\tif (local_sections[r_symndx] == sec)\n-\t\t\t  break;\n-\t\t      if (r_symndx >= symtab_hdr->sh_info)\n-\t\t\tr_symndx = STN_UNDEF;\n+\t\t      r_symndx = STN_UNDEF;\n \t\t      rel->r_addend = htab->elf.tls_sec->vma + DTP_OFFSET;\n-\t\t      if (r_symndx != STN_UNDEF)\n-\t\t\trel->r_addend -= (local_syms[r_symndx].st_value\n-\t\t\t\t\t  + sec->output_offset\n-\t\t\t\t\t  + sec->output_section->vma);\n \t\t    }\n \t\t  else if (toc_symndx != 0)\n \t\t    {\n@@ -14669,24 +14654,12 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t      if (ELF64_R_TYPE (rel[1].r_info) == R_PPC64_PLTCALL)\n \t\tbfd_put_32 (output_bfd, NOP, contents + offset + 4);\n \n-\t      if (toc_symndx)\n-\t\tsec = local_sections[toc_symndx];\n-\t      for (r_symndx = 0;\n-\t\t   r_symndx < symtab_hdr->sh_info;\n-\t\t   r_symndx++)\n-\t\tif (local_sections[r_symndx] == sec)\n-\t\t  break;\n-\t      if (r_symndx >= symtab_hdr->sh_info)\n-\t\tr_symndx = STN_UNDEF;\n-\t      rel->r_addend = htab->elf.tls_sec->vma + DTP_OFFSET;\n-\t      if (r_symndx != STN_UNDEF)\n-\t\trel->r_addend -= (local_syms[r_symndx].st_value\n-\t\t\t\t  + sec->output_offset\n-\t\t\t\t  + sec->output_section->vma);\n-\n+\t      rel->r_offset = offset + d_offset;\n+\t      r_symndx = STN_UNDEF;\n \t      r_type = R_PPC64_TPREL16_LO;\n \t      rel->r_info = ELF64_R_INFO (r_symndx, r_type);\n-\t      rel->r_offset = offset + d_offset;\n+\t      rel->r_addend = htab->elf.tls_sec->vma + DTP_OFFSET;\n+\n \t      /* Zap the reloc on the _tls_get_addr call too.  */\n \t      BFD_ASSERT (offset == rel[1].r_offset);\n \t      rel[1].r_info = ELF64_R_INFO (STN_UNDEF, R_PPC64_NONE);"
    }
  ]
}