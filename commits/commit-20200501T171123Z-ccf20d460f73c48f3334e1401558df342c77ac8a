{
  "sha": "ccf20d460f73c48f3334e1401558df342c77ac8a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2NmMjBkNDYwZjczYzQ4ZjMzMzRlMTQwMTU1OGRmMzQyYzc3YWM4YQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T17:11:06Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T17:11:23Z"
    },
    "message": "gold: x86-64: Fix TLSDESC relaxation for x32\n\nX32 TLSDESC sequences can be:\n\n40 8d 05 00 00 00 00\trex lea\tfoo@TLSDESC(%rip), %reg\n...\n67 ff 10\t\tcall\t*foo@TLSCALL(%eax)\n\nor the same sequence as LP64:\n\n48 8d 05 00 00 00 00\tlea\tfoo@TLSDESC(%rip), %reg\n...\nff 10\t\t\tcall\t*foo@TLSCALL(%rax)\n\nWe need to support both sequences for x32.  For both GDesc -> IE/LE\ntransitions,\n\n67 ff 10\t\tcall\t*foo@TLSCALL(%eax)\n\nshould relaxed to\n\n0f 1f 00\t\tnopl\t(%rax)\n\nFor GDesc -> LE transition,\n\n40 8d 05 00 00 00 00\trex lea\tfoo@TLSDESC(%rip), %reg\n\nshould relaxed to\n\n40 c7 c0 fc ff ff ff\trex movl $foo@tpoff, %reg\n\nFor GDesc -> IE transition,\n\n40 8d 05 00 00 00 00\trex lea\tfoo@TLSDESC(%rip), %reg\n\nshould relaxed to\n\n40 8b 05 00 00 00 00\trex movl foo@gottpoff(%rip), %eax\n\n\tPR gold/25426\n\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n\tFor x32, relax \"rex leal foo@tlsdesc(%rip), %reg\" to\n\t\"rex movl foo@gottpoff(%rip), %eax\" and relax \"\"call *(%eax)\"\n\tto \"nopl (%rax)\".\n\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): For x32,\n\trelax \"rex leal foo@tlsdesc(%rip), %reg\" to\n\t\"rex movl foo@tpoff, %eax\" and relax \"call *foo@tlscall(%eax)\"\n\tto \"nopl (%rax)\".\n\t* testsuite/Makefile.am (tls_test_gnu2.o): Depend on\n\tgcctestdir/as.\n\t(tls_test_file2_gnu2.o): Likewise.\n\t(tls_test_c_gnu2.o): Likewise.\n\t* testsuite/Makefile.in: Regenerated.",
    "tree": {
      "sha": "80cf7c6bb978934ed96849825b7c0e8e6bd14721",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/80cf7c6bb978934ed96849825b7c0e8e6bd14721"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ccf20d460f73c48f3334e1401558df342c77ac8a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ccf20d460f73c48f3334e1401558df342c77ac8a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ccf20d460f73c48f3334e1401558df342c77ac8a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ccf20d460f73c48f3334e1401558df342c77ac8a/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6d520e36de0229eefe2f1671438cc8333a90b5e6"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 82,
    "deletions": 23
  },
  "files": [
    {
      "sha": "23fb07098060e0eead32953e434dff045c5e45e1",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=ccf20d460f73c48f3334e1401558df342c77ac8a",
      "patch": "@@ -1,3 +1,20 @@\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25426\n+\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n+\tFor x32, relax \"rex leal foo@tlsdesc(%rip), %reg\" to\n+\t\"rex movl foo@gottpoff(%rip), %eax\" and relax \"\"call *(%eax)\"\n+\tto \"nopl (%rax)\".\n+\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): For x32,\n+\trelax \"rex leal foo@tlsdesc(%rip), %reg\" to\n+\t\"rex movl foo@tpoff, %eax\" and relax \"call *foo@tlscall(%eax)\"\n+\tto \"nopl (%rax)\".\n+\t* testsuite/Makefile.am (tls_test_gnu2.o): Depend on\n+\tgcctestdir/as.\n+\t(tls_test_file2_gnu2.o): Likewise.\n+\t(tls_test_c_gnu2.o): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n 2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR gold/25473"
    },
    {
      "sha": "ceba00243ea2b32746d5dc2f17b3ef9d889d04e8",
      "filename": "gold/testsuite/Makefile.am",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/testsuite/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/testsuite/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.am?ref=ccf20d460f73c48f3334e1401558df342c77ac8a",
      "patch": "@@ -1032,11 +1032,11 @@ if TLS_GNU2_DIALECT\n \n check_PROGRAMS += tls_shared_gnu2_gd_to_ie_test\n \n-tls_test_gnu2.o: tls_test.cc\n+tls_test_gnu2.o: tls_test.cc gcctestdir/as\n \t$(CXXCOMPILE) -c -fpic -mtls-dialect=gnu2 -o $@ $<\n-tls_test_file2_gnu2.o: tls_test_file2.cc\n+tls_test_file2_gnu2.o: tls_test_file2.cc gcctestdir/as\n \t$(CXXCOMPILE) -c -fpic -mtls-dialect=gnu2 -o $@ $<\n-tls_test_c_gnu2.o: tls_test_c.c\n+tls_test_c_gnu2.o: tls_test_c.c gcctestdir/as\n \t$(COMPILE) -c -fpic -mtls-dialect=gnu2 $(TLS_TEST_C_CFLAGS) -o $@ $<\n tls_test_gnu2_shared2.so: tls_test_file2_gnu2.o gcctestdir/ld\n \t$(CXXLINK) -shared tls_test_file2_gnu2.o"
    },
    {
      "sha": "5fed355247c0b5e61f61fbb2c13280d58eeb860e",
      "filename": "gold/testsuite/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/testsuite/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/testsuite/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.in?ref=ccf20d460f73c48f3334e1401558df342c77ac8a",
      "patch": "@@ -8275,11 +8275,11 @@ uninstall-am:\n @GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_TRUE@\t\ttls_test_c_pic.o gcctestdir/ld\n @GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_TRUE@\t$(CXXLINK) $(THREADFLAGS) -pie tls_test_main_pie.o tls_test_pic.o tls_test_file2_pic.o tls_test_c_pic.o $(THREADLIBS)\n \n-@GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@tls_test_gnu2.o: tls_test.cc\n+@GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@tls_test_gnu2.o: tls_test.cc gcctestdir/as\n @GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@\t$(CXXCOMPILE) -c -fpic -mtls-dialect=gnu2 -o $@ $<\n-@GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@tls_test_file2_gnu2.o: tls_test_file2.cc\n+@GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@tls_test_file2_gnu2.o: tls_test_file2.cc gcctestdir/as\n @GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@\t$(CXXCOMPILE) -c -fpic -mtls-dialect=gnu2 -o $@ $<\n-@GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@tls_test_c_gnu2.o: tls_test_c.c\n+@GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@tls_test_c_gnu2.o: tls_test_c.c gcctestdir/as\n @GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@\t$(COMPILE) -c -fpic -mtls-dialect=gnu2 $(TLS_TEST_C_CFLAGS) -o $@ $<\n @GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@tls_test_gnu2_shared2.so: tls_test_file2_gnu2.o gcctestdir/ld\n @GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_GNU2_DIALECT_TRUE@@TLS_TRUE@\t$(CXXLINK) -shared tls_test_file2_gnu2.o"
    },
    {
      "sha": "1d9d9209bf3ac9721b6fbc21e61136d7e831195e",
      "filename": "gold/x86_64.cc",
      "status": "modified",
      "additions": 59,
      "deletions": 17,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/x86_64.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ccf20d460f73c48f3334e1401558df342c77ac8a/gold/x86_64.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/x86_64.cc?ref=ccf20d460f73c48f3334e1401558df342c77ac8a",
      "patch": "@@ -5472,12 +5472,15 @@ Target_x86_64<size>::Relocate::tls_desc_gd_to_ie(\n {\n   if (r_type == elfcpp::R_X86_64_GOTPC32_TLSDESC)\n     {\n-      // leaq foo@tlsdesc(%rip), %rax\n-      // ==> movq foo@gottpoff(%rip), %rax\n+      // LP64: leaq foo@tlsdesc(%rip), %rax\n+      //       ==> movq foo@gottpoff(%rip), %rax\n+      // X32:  rex leal foo@tlsdesc(%rip), %eax\n+      //       ==> rex movl foo@gottpoff(%rip), %eax\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, -3);\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, 4);\n       tls::check_tls(relinfo, relnum, rela.get_r_offset(),\n-\t\t     ((view[-3] & 0xfb) == 0x48\n+\t\t     (((view[-3] & 0xfb) == 0x48\n+\t\t       || (size == 32 && (view[-3] & 0xfb) == 0x40))\n \t\t      && view[-2] == 0x8d\n \t\t      && (view[-1] & 0xc7) == 0x05));\n       view[-2] = 0x8b;\n@@ -5486,14 +5489,32 @@ Target_x86_64<size>::Relocate::tls_desc_gd_to_ie(\n     }\n   else\n     {\n-      // call *foo@tlscall(%rax)\n-      // ==> nop; nop\n+      // LP64: call *foo@tlscall(%rax)\n+      //       ==> xchg %ax, %ax\n+      // X32:  call *foo@tlscall(%eax)\n+      //       ==> nopl (%rax)\n       gold_assert(r_type == elfcpp::R_X86_64_TLSDESC_CALL);\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, 2);\n+      int prefix = 0;\n+      if (size == 32 && view[0] == 0x67)\n+\t{\n+\t  tls::check_range(relinfo, relnum, rela.get_r_offset(),\n+\t\t\t   view_size, 3);\n+\t  prefix = 1;\n+\t}\n       tls::check_tls(relinfo, relnum, rela.get_r_offset(),\n-\t\t     view[0] == 0xff && view[1] == 0x10);\n-      view[0] = 0x66;\n-      view[1] = 0x90;\n+\t\t     view[prefix] == 0xff && view[prefix + 1] == 0x10);\n+      if (prefix)\n+\t{\n+\t  view[0] = 0x0f;\n+\t  view[1] = 0x1f;\n+\t  view[2] = 0x00;\n+\t}\n+      else\n+\t{\n+\t  view[0] = 0x66;\n+\t  view[1] = 0x90;\n+\t}\n     }\n }\n \n@@ -5513,30 +5534,51 @@ Target_x86_64<size>::Relocate::tls_desc_gd_to_le(\n {\n   if (r_type == elfcpp::R_X86_64_GOTPC32_TLSDESC)\n     {\n-      // leaq foo@tlsdesc(%rip), %rax\n-      // ==> movq foo@tpoff, %rax\n+      // LP64: leaq foo@tlsdesc(%rip), %rax\n+      //       ==> movq foo@tpoff, %rax\n+      // X32:  rex leal foo@tlsdesc(%rip), %eax\n+      //       ==> rex movl foo@tpoff, %eax\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, -3);\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, 4);\n       tls::check_tls(relinfo, relnum, rela.get_r_offset(),\n-\t\t     ((view[-3] & 0xfb) == 0x48\n+\t\t     (((view[-3] & 0xfb) == 0x48\n+\t\t       || (size == 32 && (view[-3] & 0xfb) == 0x40))\n \t\t      && view[-2] == 0x8d\n \t\t      && (view[-1] & 0xc7) == 0x05));\n-      view[-3] = 0x48 | ((view[-3] >> 2) & 1);\n+      view[-3] = (view[-3] & 0x48) | ((view[-3] >> 2) & 1);\n       view[-2] = 0xc7;\n       view[-1] = 0xc0 | ((view[-1] >> 3) & 7);\n       value -= tls_segment->memsz();\n       Relocate_functions<size, false>::rela32(view, value, 0);\n     }\n   else\n     {\n-      // call *foo@tlscall(%rax)\n-      // ==> nop; nop\n+      // LP64: call *foo@tlscall(%rax)\n+      //       ==> xchg %ax, %ax\n+      // X32:  call *foo@tlscall(%eax)\n+      //       ==> nopl (%rax)\n       gold_assert(r_type == elfcpp::R_X86_64_TLSDESC_CALL);\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, 2);\n+      int prefix = 0;\n+      if (size == 32 && view[0] == 0x67)\n+\t{\n+\t  tls::check_range(relinfo, relnum, rela.get_r_offset(),\n+\t\t\t   view_size, 3);\n+\t  prefix = 1;\n+\t}\n       tls::check_tls(relinfo, relnum, rela.get_r_offset(),\n-\t\t     view[0] == 0xff && view[1] == 0x10);\n-      view[0] = 0x66;\n-      view[1] = 0x90;\n+\t\t     view[prefix] == 0xff && view[prefix + 1] == 0x10);\n+      if (prefix)\n+\t{\n+\t  view[0] = 0x0f;\n+\t  view[1] = 0x1f;\n+\t  view[2] = 0x00;\n+\t}\n+      else\n+\t{\n+\t  view[0] = 0x66;\n+\t  view[1] = 0x90;\n+\t}\n     }\n }\n "
    }
  ]
}