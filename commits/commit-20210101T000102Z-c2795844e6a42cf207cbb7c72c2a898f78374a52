{
  "sha": "c2795844e6a42cf207cbb7c72c2a898f78374a52",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzI3OTU4NDRlNmE0MmNmMjA3Y2JiN2M3MmMyYTg5OGY3ODM3NGE1Mg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-31T22:47:13Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-01T00:01:02Z"
    },
    "message": "ChangeLog rotation",
    "tree": {
      "sha": "cdaeab9b9388afe2a8f8e2dcbee714ebe14f4bb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cdaeab9b9388afe2a8f8e2dcbee714ebe14f4bb7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c2795844e6a42cf207cbb7c72c2a898f78374a52",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2795844e6a42cf207cbb7c72c2a898f78374a52",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c2795844e6a42cf207cbb7c72c2a898f78374a52",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2795844e6a42cf207cbb7c72c2a898f78374a52/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "57f60d20ca5ea2d2b8d30ed209619aede9683b53",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57f60d20ca5ea2d2b8d30ed209619aede9683b53",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/57f60d20ca5ea2d2b8d30ed209619aede9683b53"
    }
  ],
  "stats": {
    "total": 49488,
    "additions": 24814,
    "deletions": 24674
  },
  "files": [
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 5005,
      "changes": 5007,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    },
    {
      "sha": "0cb006d694438a92c42de4a236635630ba3fcf58",
      "filename": "bfd/ChangeLog-2020",
      "status": "added",
      "additions": 5017,
      "deletions": 0,
      "changes": 5017,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/bfd/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/bfd/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 2068,
      "changes": 2070,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -1,2072 +1,6 @@\n-2020-12-31  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 27128\n-\t* nm.c (print_symname): Append version string to symbol name\n-\tbefore printing the lot under control of \"form\".  Append version\n-\tto demangled names too.\n-\n-2020-12-29  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elfedit (usage): Pass osabi to reconcat.\n-\n-2020-12-28  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Pass\n-\t$gcc_gas_flag to target_compile.\n-\n-2020-12-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (INT64_MIN): Define if not already defined.\n-\t(print_vms_time): Catch 64-bit overflow when converting from\n-\tvms time to posix time.  Don't segfault if gmtime returns NULL.\n-\n-2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* NEWS: Mention LAM_U48 and LAM_U57 support.\n-\t* elfedit.c (elf_x86_feature): Support lam_u48 and lam_u57.\n-\t(usage): Add lam_u48 and lam_u57.\n-\t* readelf.c (decode_x86_feature_1): Support LAM_U48 and LAM_U57.\n-\t* doc/binutils.texi: Update elfedit with lam_u48 and lam_u57\n-\tsupport.\n-\t* testsuite/binutils-all/x86-64/lam-u48.d: New file.\n-\t* testsuite/binutils-all/x86-64/lam-u48.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/lam-u57.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/lam-u57.s: Likewise.\n-\n-2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n-\n-\t* readelf.c (get_dynamic_type): Handle DT_GNU_FLAGS_1.\n-\t(process_dynamic_section): Likewise.\n-\n-2020-12-11  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* readelf.c (get_machine_name): Update list of e_machine values.\n-\n-2020-12-11  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n-\n-\t* ar.c (write_archive): Cast iostream pointer to FILE *.\n-\t* arsup.c (ar_save): Likewise.\n-\t* objcopy.c (copy_file): Likewise.\n-\n-2020-12-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (is_mergeable_note_section): Remove reference to\n-\tSHF_GNU_BUILD_NOTE.\n-\n-2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n-\n-\tPR 26945\n-\t* ar.c\n-\t(write_archive) [!defined (_WIN32) || defined (__CYGWIN32__)]:\n-\tInitialize TARGET_STAT and OFD to pass to SMART_RENAME.\n-\t* arsup.c\n-\t(ar_save) [defined (_WIN32) || defined (__CYGWIN32__)]:\n-\tLikewise.\n-\t* bucomm.h (smart_rename): Add new arguments to declaration.\n-\t* objcopy.c\n-\t(strip_main)[defined (_WIN32) || defined (__CYGWIN32__)]:\n-\tInitialize COPYFD and pass to SMART_RENAME.\n-\t(copy_main) [defined (_WIN32) || defined (__CYGWIN32__)]:\n-\tLikewise.\n-\t* rename.c (try_preserve_permissions): New function.\n-\t(smart_rename): Use it and add new arguments.\n-\n-2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n-\n-\tPR 26945\n-\t* objcopy.c (copy_file): New argument IN_STAT.  Return stat of\n-\tibfd through it.\n-\t(strip_main): Remove redundant stat calls.  adjust copy_file\n-\tcalls.\n-\t(copy_main): Likewise.\n-\n-2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n-\n-\tPR 26945\n-\t* bucomm.c (make_tempname): Add argument to return file\n-\tdescriptor.\n-\t* bucomm.h (make_tempname): Likewise.\n-\t* ar.c: Include libbfd.h.\n-\t(write_archive): Adjust for change in make_tempname.  Call\n-\tbfd_fdopenw instead of bfd_openw.\n-\t* objcopy.c: Include libbfd.h.\n-\t(copy_file): New argument OFD.  Use bfd_fdopenw instead of\n-\tbfd_openw.\n-\t(strip_main): Adjust for change in make_tempname and\n-\tcopy_file.\n-\t(copy_main): Likewise.\n-\n-\n-2020-12-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release (point releases): Add a note to\n-\tupdate the milestone list on sourceware's bugzilla.\n-\n-2020-12-04  Alan Modra  <amodra@gmail.com>\n-\n-\t* dwarf.c (frame_display_row): Do without static variable \"sloc\".\n-\t(cu_tu_indexes_read): Move to file scope.\n-\t(free_debug_memory): Reset it here, along with level_type_signed.\n-\tFree and clear a number of other static variables.\n-\t* readelf.c (arm_attr_public_tag <table>): Constify, updating..\n-\t(arm_attr_tag_*): ..all these uses.\n-\t(process_mips_specific): Free \"rels\" on error path.\n-\n-2020-11-27  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26865\n-\t* windres.c (main): If the preprocessor name includes spaces,\n-\tensure that it is quoted.\n-\n-2020-11-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* testsuite/lib/binutils-common.exp (supports_noinit_section): New.\n-\t(supports_persistent_section): New.\n-\n-2020-11-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* readelf.c (dump_section_as_ctf): Call ctf_arc_symsect_endianness.\n-\n-2020-11-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/nm.exp (ifunc): xfail more targets.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* readelf.c (dump_section_as_ctf): Use .dynsym and .dynstr, not\n-\t.symtab and .strtab.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf): Report errors from ctf_archive_iter.\n-\t* readelf.c (dump_section_as_ctf): Likewise.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf): Use ctf_dict_open, not\n-\tctf_arc_open_by_name.\n-\t* readelf.c (dump_section_as_ctf): Likewise.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf_errs): Rename ctf_file_t to ctf_dict_t.\n-\t(dump_ctf_archive_member): Likewise.\n-\t(dump_ctf): Likewise. Use ctf_dict_close, not ctf_file_close.\n-\t* readelf.c (dump_ctf_errs): Rename ctf_file_t to ctf_dict_t.\n-\t(dump_ctf_archive_member): Likewise.\n-\t(dump_section_as_ctf): Likewise.  Use ctf_dict_close, not\n-\tctf_file_close.\n-\n-2020-11-20  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22967\n-\t* nm.c (ifunc_type_chars): New variable.\n-\t(long_options): Add --ifunc-chars.\n-\t(print_symbol): Use ifunc_type_chars for ifunc symbols.\n-\t(main): Handle the new option.\n-\t* doc/binutils.texi: Document the new option.\n-\t* configure.ac: Add --enable-f-for-ifunc-symbols option which\n-\tchanges the default symbol displayed by nm.\n-\t* NEWS: Mention the new feature.\n-\t* testsuite/binutils-all/nm.exp: Test the new feature.\n-\t* config.in: Regenerate.\n-\t* configure: Regenerate.\n-\n-2020-11-20  Linda Zhang  <lindasc@qq.com>\n-\n-\tPR 20979\n-\t* dllwrap.c (main): Deprecate and warn the use of dllwrap.\n-\n-2020-11-20  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* testsuite/binutils-all/readelf-maskos-1a.d: Fix test for unrecognized\n-\tbit set in SHF_MASKOS range.\n-\t* testsuite/binutils-all/readelf-maskos-1b.d: Likewise.\n-\t* testsuite/binutils-all/readelf-maskos-unknown.s: New test.\n-\n-2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* NEWS: Announce SHF_GNU_RETAIN support.\n-\t* readelf.c (get_elf_section_flags): Handle SHF_GNU_RETAIN.\n-\tRecognize SHF_GNU_RETAIN and SHF_GNU_MBIND only for supported OSABIs.\n-\t* testsuite/binutils-all/readelf.exp: Run new tests.\n-\tDon't run run_dump_test when there isn't an assembler available.\n-\t* testsuite/lib/binutils-common.exp (supports_gnu_osabi): Adjust\n-\tcomment.\n-\t* testsuite/binutils-all/readelf-maskos-1a.d: New test.\n-\t* testsuite/binutils-all/readelf-maskos-1b.d: New test.\n-\t* testsuite/binutils-all/readelf-maskos.s: New test.\n-\t* testsuite/binutils-all/retain1.s: New test.\n-\t* testsuite/binutils-all/retain1a.d: New test.\n-\t* testsuite/binutils-all/retain1b.d: New test.\n-\n-2020-11-17  Howard Chu  <hyc@symas.com>\n-\n-\t* ar.c (main): Place the libdeps record in the second archive\n-\tslot.\n-\n-2020-11-13  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26829\n-\t* dwarf.c (struct dwo_info): Add cu_offset field.\n-\t(add_dwo_info): Add cu_offset parameter.  Record in new dwo_info\n-\tstruct.\n-\t(add_dwo_name): Add cu_offset field.\n-\t(add_dwo_dir): Add cu_offset field.\n-\t(add_dwo_id): Add cu_offset field.\n-\t(read_and_display_attr_value): Pass cu_offset to dwo recording\n-\tfunctions.\n-\t(load_separate_debug_files): Accumulate name, dir and id values\n-\tand display once for each CU.\n-\t* testsuite/binutils-all/dwo.sL Use a separate CU for the second\n-\tdwo link.\n-\t* testsuite/binutils-all/readelf.k2: Update expected output.\n-\n-2020-11-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n-\n-\t* dwarf.c (display_debug_rnglists_list): Only bias the\n-\tDW_RLS_offset_pair with the base address.\n-\n-2020-11-10  Nick Clifton  <nickc@redhat.com>\n-\n-\t* dwarf.c (skip_attr_bytes): Correctly handle DW_FORM_ref8.\n-\t(get_type_abbrev_from_form): Accept DW_FORM_ref8.\n-\n-2020-11-09  Andreas Schwab  <schwab@linux-m68k.org>\n-\n-\t* Makefile.am (development.exp): Fix regexp.\n-\t* Makefile.in: Regenerate.\n-\n-2020-11-09  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26847\n-\t* dwarf.c (read_and_display_attr_value): In wide mode, display the\n-\tname of the form.\n-\n-2020-11-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfedit (usage): Avoid false positive \"may be used uninitialised\".\n-\tDon't leak memory.\n-\n-2020-11-09  Howard Chu  <hyc@symas.com>\n-\n-\t* ar.c (main): Use plugin_target rather than \"target\" when\n-\tresetting libdeps_bfd target.\n-\n-2020-11-06  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elfedit.c: Include \"libiberty.h\".\n-\t(usage): Update help message.\n-\n-2020-11-03  Howard Chu  <hyc@symas.com>\n-\n-\t* ar.c (long_options): Add --record-libdeps.\n-\t(usage): Mention the new option.\n-\t(decode_options): Handle the new option.\n-\t(replace_members): If necessary, create a bfd to hold the libdeps\n-\tdescription.\n-\t* binemul.c (ar_emul_append_bfd): New function.\n-\t(ar_emul_replace_bfd): New function.\n-\t(ar_emul_default_append): Replace file_name and target arguments\n-\twith new_bfd argument.\n-\t(ar_emul_default_replace): Likewise.\n-\t* binemul.h: Update prototypes.\n-\t(struct bin_emulation_xfer_struct): Update fields.\n-\t* doc/binutils.texi: Document the new option.\n-\t* NEWS: Mention the new feature.\n-\t* emul_aix.c (ar_emul_aix_append): Update.\n-\t(ar_emul_aix_replace): Likewise.\n-\t* testsuite/binutils-all/ar.exp: Add test of new feature.\n-\n-2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/26703\n-\t* readelf.c (decode_x86_isa): Handle\n-\t* GNU_PROPERTY_X86_ISA_1_BASELINE.\n-\t* testsuite/binutils-all/i386/empty.d: Updated.\n-\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n-\n-2020-10-29  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/26808\n-\t* dwarf.c (abbrev_list): Add abbrev_base.\n-\t(new_abbrev_list): Add an abbrev_base argument and record it.\n-\t(find_abbrev_list_by_abbrev_offset): Add an abbrev_base argument\n-\tand match it.\n-\t(process_debug_info): Pass abbrev_base to new_abbrev_list and\n-\tfind_abbrev_list_by_abbrev_offset.\n-\t(display_debug_abbrev): Pass 0 abbrev_base to new_abbrev_list\n-\tand find_abbrev_list_by_abbrev_offset.\n-\t* testsuite/binutils-all/x86-64/pr26808.dump: New file.\n-\t* testsuite/binutils-all/x86-64/pr26808.dwp.bz2: Likewise.\n-\t* testsuite/binutils-all/x86-64/x86-64.exp: Run PR binutils/26808\n-\ttest.\n-\n-2020-10-29  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26805\n-\t* objcopy.c (is_dwo_section): Check for missing or short section\n-\tnames.\n-\n-2020-10-26  Andreas Rammhold <andreas@rammhold.de>\n-\n-\t* README-how-to-make-a-release: Use sha256sum instead of md5sum.\n-\n-2020-10-28  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26795\n-\t* elfedit.c (process_archive): Remove spurious call to free().\n-\n-2020-10-27  Nick Clifton  <nickc@redhat.com>\n-\n-\t* dwarf.c (struct abbrev_list): New structure.  Used to collect\n-\tlists of abbreviation sets.\n-\t(struct abbrev_map): New structure.  Used to map CU offsets to\n-\tabbreviation offsets.\n-\t(record_abbrev_list): New function.  A new entry to an\n-\tabbreviation list.\n-\t(free_all_abbrevs): Update to free abbreviation lists.\n-\t(new_abbrev_list): New function.  Start a new abbreviation\n-\tlist.\n-\t(find_abbrev_list_by_abbrev_offset): New function.\n-\t(find_abbrev_map_by_offset): New function.\n-\t(add_abbrev): Add abbrev_list parameter.\n-\t(add_abbrev_attr): Likewise.\n-\t(process_abbrev_section): Rename to process_abbrev_set and add\n-\tlist parameter.\n-\t(get_type_abbrev_from_form): New function.  Attempts to decode the\n-\tforms used by DW_AT_type attributes.\n-\t(get_type_signedness): Display type names if operating in wide\n-\tmode.  Use get_type_abbrev_from_form.\n-\t(read_and_display_attr_value): Use get_type_abbrev_from_form.\n-\t(process_debug_info): Pre-parse the CU headers to collate all the\n-\tabbrevs before starting the main scan.\n-\t(process_debug_abbrev): Do not free any loaded abbrevs.\n-\t(free_debug_memory): Free the abbrev maps.\n-\n-2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Report\n-\terror message on error.\n-\n-2020-10-22  Dr. David Alan Gilbert  <dgilbert@redhat.com>\n-\n-\t* windmc.c (write_header_define): Fix printf format.\n-\t(write_header): Likewise.\n-\n-2020-10-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* dwarf.c (skip_attr_bytes): Accept DWARF versions higher than 4\n-\twhen processing the DW_FORM_ref_addr form.\n-\tSkip bytes in DW_FORM_block and DW_FORM_exprloc forms.\n-\tHandle DW_FORM_indirect.\n-\t(get_type_signedness): Allow a limited amount of recursion.\n-\tDo not attempt to decode types that use the DW_FORM_ref_addr form.\n-\t(read_and_display_attr_value): \tDo not attempt to decode types\n-\tthat use the DW_FORM_ref_addr form.\n-\n-2020-10-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c: Delete whitespace at end of line throughout.\n-\t(SECTION_NAME, SECTION_NAME_VALID): New.\n-\t(SECTION_NAME_PRINT): Rename from SECTION_NAME.  Formatting.\n-\t(printable_section_name, dump_relocations): Use SECTION_NAME_PRINT.\n-\t(process_section_headers, process_section_groups): Likewise.\n-\t(shdr_to_ctf_sect): Likewise.\n-\t(find_section, find_section_in_set): Use SECTION_NAME_VALID.\n-\t(ia64_process_unwind, hppa_process_unwind): Likewise.\n-\t(display_debug_section, initialise_dumps_byname): Likewise.\n-\t(process_lto_symbol_tables): Likewise.  Check trailing period of\n-\tlto symbol table names.\n-\t(display_lto_symtab): Use sizeof instead of strlen.\n-\n-2020-10-20  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* MAINTAINERS (RISC-V): Add myself as RISC-V co-maintainer.\n-\n-2020-10-19  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (do_lto_syms): New local.\n-\t(long_option_values): Add OPTION_LTO_SYMS.\n-\t(options): Add --lto-syms.\n-\t(usage): Mention the new option.\n-\t(parse_args): Parse the new option.\n-\t(get_lto_kind): New function.\n-\t(get_lto_visibility): New function.\n-\t(get_lto_sym_type): New function.\n-\t(display_lto_symtab): New function - displays the contents of an\n-\tLTo symbol table section.\n-\t(process_lto_symbol_tables): New functions.  Calls\n-\tdipslay_lto_symtab on any LTO symbol table section.\n-\t(process_object_file): Call process_lto_symbol_tables.\n-\t* doc/binutils.texi: Document the new option.\n-\t* NEWS: Mention the new feature.\n-\n-2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/26703\n-\t* readelf.c (decode_x86_compat_2_isa): New function.\n-\t(decode_x86_isa): Updated for new X86_ISA_1_XXX bits.\n-\t(decode_x86_feature_1): Handle GNU_PROPERTY_X86_FEATURE_2_MASK.\n-\t(print_gnu_property_note): Handle X86_COMPAT_2_ISA_1_USED,\n-\tand X86_COMPAT_2_ISA_1_NEEDED.\n-\t* testsuite/binutils-all/i386/pr21231b.s: Updated to the current\n-\tGNU_PROPERTY_X86_ISA_1_USED and GNU_PROPERTY_X86_ISA_1_NEEDED\n-\tvalues.\n-\t* testsuite/binutils-all/x86-64/pr21231b.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.s: Likewise.\n-\t* testsuite/binutils-all/i386/empty.d: Updated.\n-\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n-\n-2020-10-06  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (copy_object): Compare input and output sections by\n-\tpointer rather than name.\n-\n-2020-10-05  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26698\n-\t* windmc.c (mc_unify_path): Fix typo checking character at end of\n-\tpathname.\n-\n-2020-10-05  Samanta Navarro  <ferivoz@riseup.net>\n-\n-\t* doc/binutils.texi: Fix spelling mistakes.\n-\n-2020-09-29  Mark Wielaard  <mark@klomp.org>\n-\n-\t* dwarf.c (display_loclists_list): Handle DW_LLE_start_end and\n-\tDW_LLE_start_length. Only add base_address for DW_LLE_offset_pair.\n-\n-2020-09-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfcomm.c (byte_put_little_endian, byte_put_big_endian): Support\n-\tmore field sizes.\n-\t* readelf.c (target_specific_reloc_handling <MSP430>): Limit\n-\tallowed reloc_size.  Don't read_leb128 outside of section.\n-\n-2020-09-23  Mark Wielaard  <mark@klomp.org>\n-\n-\t* dwarf.c (process_debug_info): Print Unit Type for DWARF5.\n-\t* testsuite/binutils-all/dw5.W: Adjust expected output.\n-\t* testsuite/binutils-all/dwarf-attributes.W: Likewise.\n-\n-2020-09-23  Mark Wielaard  <mark@klomp.org>\n-\n-\t* dwarf.c (read_and_display_attr_value): Handle DW_FORM_ref_addr\n-\tfor dwarf_version 5 just as version 3 and 4 (only 2 is\n-\tdifferent).\n-\t(process_debug_info): Allow DW_UT_partial.\n-\n-2020-09-24  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26662\n-\t* doc/binutils.texi (nm): Document that 'c' is used for small\n-\tcommon symbols.\n-\n-2020-09-21  Ludovic Court\u00e8s  <ludo@gnu.org>\n-\n-\t* doc/binutils.texi (objcopy, strip): Say that\n-        '--strip-unneeded' implies '--strip-debug'.\n-\n-2020-09-16  Anatoly Parshintsev  <kupokupokupopo@gmail.com>\n-\n-       * verilog.c (verilog_write_address): Properly handle 64-bit\n-\taddresses to avoid truncation of the high part.\n-\n-2020-09-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* nm.c (print_symbol): Adjust elf_symbol_from invocation.\n-\t* objcopy.c (is_hidden_symbol): Likewise.\n-\n-2020-09-15  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release (https): Add a reminder to create a\n-\tnew Bugzilla tag for the point release, once it has been published.\n-\n-2020-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (get_note_type): Support NT_X86_CET.\n-\n-2020-09-11  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26595\n-\t* dwarf.c (load_separate_debug_info): Return NULL rather than\n-\tFALSE in error situations.\n-\t(load_separate_debug_file): Move code to load debug links to ...\n-\t(check_for_and_load_links): ... here.  New function.  Load\n-\tseparate debug information pointed to by debuglink and\n-\tdebugaltlink sections.  Recursively scan newly loaded debug\n-\tinformation for more links and load them too.\n-\n-2020-09-09  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26578\n-\t* dwarf.c (parse_gnu_debugaltlink): Don't alloc build_id_data.\n-\t(load_separate_debug_files): Use a stack var for build_id_data.\n-\n-2020-09-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/26587\n-\t* testsuite/binutils-all/objcopy.exp: Pass --disable-reloc-section\n-\tto ld on PE targets for PR 25662 test.\n-\n-2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\tKuan-Lin Chen  <kuanlinchentw@gmail.com>\n-\n-\t* readelf.c (target_specific_reloc_handling): Handle\n-\tR_MSP430{,X}_GNU_{SET,SUB}_ULEB128.\n-\n-2020-09-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (disassemble_bytes): Use an unsigned type for \"addend\".\n-\n-2020-08-30  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (print_gnu_build_attribute_name): Use unsigned long\n-\tlong for \"bytes\".\n-\n-2020-08-28  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26548\n-\t* dwarf.c (read_leb128): When checking for overflow of a signed\n-\tread, use a signed shift.\n-\n-2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* readelf.c (get_csky_section_type_name): New.\n-\t(get_section_type_name): Add handler for CSKY.\n-\t(display_csky_attribute): New.\n-\t(process_arch_specific): Add handler for CSKY.\n-\t* testsuite/binutils-all/strip-3.d: Remove .csky.attributes\n-\tsection.\n-\n-2020-08-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* readelf.c (get_msp430x_section_type_name): Rename to ...\n-\t(get_msp430_section_type_name): ... this.\n-\t(get_section_type_name): Use get_msp430_section_type_name.\n-\t(display_msp430x_attribute): Rename to ...\n-\t(display_msp430_attribute): ... this.\n-\t(process_arch_specific): Use display_msp430_attribute.\n-\n-2020-08-27  John David Anglin  <danglin@gcc.gnu.org>\n-\n-\tPR 26356\n-\t* testsuite/binutils-all/objcopy.exp (objcopy --reverse-bytes): Add\n-\t\"-j $PRIVATE$\" to command on hppa*-*-hpux*.\n-\t* testsuite/lib/utils-lib.exp (default_binutils_run): Remove existing\n-\tdollar-sign quotes before quoting.  Do this prior to generating log\n-\toutput.\n-\n-2020-08-27  Ralf Habacker  <ralf.habacker@freenet.de>\n-\n-\tPR 26088\n-\t* mclex.c (skip_until_eol): If eol was found, increment line\n-\tnumber.\n-\n-2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf_errs): Unquote CTF error messages.\n-\t* readelf.c (dump_ctf_errs): Likewise.\n-\n-2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf_archive_member): Move error-\n-\treporting...\n-\t(dump_ctf_errs): ... into this separate function.\n-\t(dump_ctf): Call it on open errors.\n-\t* readelf.c (dump_ctf_archive_member): Move error-\n-\treporting...\n-\t(dump_ctf_errs): ... into this separate function.  Support\n-\tcalls with NULL fp. Adjust for new err parameter to\n-\tctf_errwarning_next.\n-\t(dump_section_as_ctf): Call it on open errors.\n-\n-2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* Makefile.am (readelf_LDADD): Move $(LIBINTL) after $(LIBCTF_NOBFD).\n-\t* Makefile.in: Regenerated.\n-\n-2020-08-26  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26405\n-\t* readelf.c (get_segment_type): Handle OpenBSD segment types.\n-\n-2020-08-26  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26412\n-\t* objcopy.c (copy_object): Don't fwrite NULL contents.\n-\n-2020-08-26  Katayama Hirofumi  <katayama.hirofumi.mz@gmail.com>\n-\n-\tPR 26340\n-\t* rcparse.y (AUTOCHECKBOX): Add WS_TABSTOP to the base style.\n-\n-2020-08-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (dump_section_as_strings) Avoid false positive\n-\t\"may be used uninitialised\".\n-\n-2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/26382\n-\t* nm.c (print_symname): Display only one '@' for undefined\n-\tversioned symbols.\n-\t* doc/binutils.texi: Update nm version information.\n-\n-2020-08-21  Mark Wielaard  <mark@klomp.org>\n-\n-\t* testsuite/binutils-all/readelf.exp (readelf_wi_test): Also\n-\trecognize DW_LANG_C11.\n-\n-2020-08-19  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26349\n-\t* readelf.c (dump_relocations): Use BFD_VMA_FMT to print offset\n-\tand info fields.\n-\t(dump_section_as_strings): Don't use %tx to display offset.\n-\n-2020-08-14  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26388\n-\t* dwarf.c (free_debug_memory): Free alloc_num_debug_info_entries\n-\tof debug_information.  Correct test of max_loc_offsets and\n-\tmax_range_lists.\n-\t* rddbg.c (read_debugging_info): Free dhandle on error.\n-\n-2020-08-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/mangled.s: Use dc.a rather than dc.d.\n-\n-2020-08-13  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26348\n-\t* objcopy.c (copy_object): Report file name with endian error.\n-\tError and return on abfd->read_only.\n-\n-2020-08-12  Tom Tromey  <tromey@adacore.com>\n-\n-\t* dwarf-mode.el (Version): Now 1.6.\n-\t(dwarf-die-button-action): Tighten DIE reference regexp.\n-\t(dwarf-font-lock-keywords): Update name regexp.\n-\n-2020-08-12  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR binutils/26331\n-\t* readelf.c (do_demangle): New option flag.\n-\t(print_symbol): If do_demangle is enabled, demangle the symbol.\n-\t(enum long_option_values): New enum to hold long option values.\n-\t(options): Add demangle, no-demangle, recursion-limit and\n-\tno-recursion-limit options.  Alpha sort the table.\n-\t(usage): Describe the new options.\n-\t(parse_args): Handle the new options.\n-\t* NEWS: Mention the new feature.\n-\t* doc/binutils.texi: Document the new feature.\n-\t* testsuite/binutils-all/readelf.exp: Test the new feature.\n-\t* testsuite/binutils-all/mangled.s: New file - assembler source.\n-\t* testsuite/binutils-all/readelf.demangled: New file - expected\n-\toutput from readelf.\n-\n-2020-08-12  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sr.po: Updated Serbian translation.\n-\n-2020-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/26302\n-\t* nm.c (with_symbol_versions): Removed.\n-\t(long_option_values): Add OPTION_WITH_SYMBOL_VERSIONS.\n-\t(long_options): Update --with-symbol-versions entry.\n-\t(print_symbol): Remove the with_symbol_versions check.\n-\t(main): Add OPTION_WITH_SYMBOL_VERSIONS for backward\n-\tcompatibility.\n-\t* doc/binutils.texi: Remove --with-symbol-versions.\n-\n-2020-08-05  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26337\n-\t* objdump.c (load_specific_debug_section): Revert last change.\n-\n-2020-08-05  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26337\n-\t* objdump.c (load_specific_debug_section): Don't malloc space for\n-\tsection contents, use bfd_malloc_and_get_section.\n-\n-2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.\n-\t* Makefile.in, doc/Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\n-2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/binutils-all/i386/compressed-1a.d: Pass --gdwarf-3\n-\tto assembler.\n-\t* testsuite/binutils-all/i386/compressed-1b.d: Likewise.\n-\t* testsuite/binutils-all/i386/compressed-1c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/compressed-1a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/compressed-1b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/compressed-1c.d: Likewise.\n-\n-2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* testsuite/binutils-all/mips/global-local-symtab-sort-o32.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-sort-o32t.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-sort-n32.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-sort-n32t.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-sort-n64.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-sort-n64t.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-final-o32.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-final-n32.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/global-local-symtab-final-n64.d:\n-\tNew test.\n-\t* testsuite/binutils-all/mips/mips.exp: Run the new tests.\n-\n-2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* testsuite/binutils-all/mips/global-local-symtab-o32.d: New\n-\ttest.\n-\t* testsuite/binutils-all/mips/global-local-symtab-o32t.d: New\n-\ttest.\n-\t* testsuite/binutils-all/mips/global-local-symtab-n32.d: New\n-\ttest.\n-\t* testsuite/binutils-all/mips/global-local-symtab-n32t.d: New\n-\ttest.\n-\t* testsuite/binutils-all/mips/global-local-symtab-n64.d: New\n-\ttest.\n-\t* testsuite/binutils-all/mips/mips.exp: Run the new tests.\n-\n-2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/26301\n-\t* configure: Regenerated.\n-\n-2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/26301\n-\t* configure: Regenerated.\n-\n-2020-07-27  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (dump_section): Don't return without calling\n-\tprocess_section_p.\n-\n-2020-07-27  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* doc/binutils.texi: Replace preceeded with preceded.\n-\n-2020-07-26  Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* testsuite/binutils-all/mips/mips.exp (run_dump_test_abi)\n-\t(run_dump_test_o32, run_dump_test_n32, run_dump_test_n64): New\n-\tprocedures.\n-\t(has_newabi): Remove variable.\n-\t(has_abi, abi_asflags, abi_ldflags): New associative array\n-\tvariables.\n-\t(irixemul): New variable.\n-\tReplace `run_dump_test' calls where applicable throughout with\n-\t`run_dump_test_o32', `run_dump_test_n32' and `run_dump_test_n64'\n-\tas appropriate.  Use `noarch' for tests that require their own\n-\tarchitecture setting.\n-\t* testsuite/binutils-all/mips/mips-ase-1.d: Remove GAS flags.\n-\t* testsuite/binutils-all/mips/mips-ase-2.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-ase-3.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2-n32.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2-n64.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2r-n32.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2r-n64.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2r.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-reginfo-n32.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-reginfo.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips16-extend-noinsn.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips16-pcrel.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips16-alias.d: Remove `-32' from\n-\tGAS flags.\n-\t* testsuite/binutils-all/mips/mips16-extend-insn.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips16-noalias.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips16-undecoded.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips16e2-extend-insn.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips16e2-undecoded.d: Likewise.\n-\t* testsuite/binutils-all/mips/mixed-micromips.d: Likewise.\n-\t* testsuite/binutils-all/mips/mixed-mips16.d: Likewise.\n-\n-2020-07-24  Aaron Merey  <amerey@redhat.com>\n-\n-\t* Makefile.am: Replace LIBDEBUGINFOD with DEBUGINFOD_LIBS.\n-\t* Makefile.in: Rebuild.\n-\t* configure: Rebuild.\n-\t* doc/Makefile.in: Rebuild.\n-\n-2020-07-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Various small updates whilst\n-\tcreating the 2.35 release.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* testsuite/lib/binutils-common.exp (run_dump_test): Add 'cc'\n-\toption.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (dump_ctf_archive_member): Remove linefeeds.\n-\t(dump_ctf): Likewise.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* objdump.c (ctf_archive_member): Print CTF errors and warnings.\n-\t* readelf.c (dump_ctf_archive_member): Likewise.\n-\n-2020-07-22  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (parse_args): Silence potential warnings about a\n-\tmemory resource leak when allocating space for ctf option values.\n-\t(dump_section_as_ctf): Fix typo checking dump_ctf_strtab_name\n-\tvariable.\n-\n-2020-07-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2020-07-14  Claudiu Zissulescu  <claziss@gmail.com>\n-\n-\t* testsuite/binutils-all/arc/double_regs.s: New test.\n-\t* testsuite/binutils-all/arc/objdump.exp: Add the above test.\n-\n-2020-07-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\n-2020-07-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (is_pecoff_format): Accept\n-\toptional machine-os arg.\n-\n-2020-07-11  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (decode_x86_feature_2): Handle\n-\tGNU_PROPERTY_X86_FEATURE_2_TMM.\n-\n-2020-07-10  Tom de Vries  <tdevries@suse.de>\n-\n-\t* dwarf.c (display_debug_lines_decoded): Don't emit meaningless\n-\tinformation in the end_sequence row.\n-\t* testsuite/binutils-all/dw5.W: Update.\n-\t* testsuite/binutils-all/objdump.WL: Update.\n-\n-2020-07-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* dlltool.c: Remove powerpc PE support and comments.\n-\t* configure.ac: Remove powerpc PE dlltool config.\n-\t* configure: Regenerate.\n-\n-2020-07-09  Nick Clifton  <nickc@redhat.com>\n-\n-\t* rclex.c: Add OWNERDRAW keyword.\n-\t* rcparse.y: Add OWNERDRAW token.\n-\t(menuitem_flag) Add BITMAP and OWNERDRAW entries.\n-\t* resrc.c (write_rc_menuitems): Add support for OWNERDRAW and\n-\tBITMAP flags.\n-\t* windres.c (extended_menuitems): Likewise.\n-\t* testsuite/binutils-all/windres/menuitem_flags.rc: New test.\n-\n-2020-07-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf (slurp_hppa_unwind_table): Set table_len before use\n-\tin relocation sanity checks.\n-\n-2020-07-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/ar.exp: Use is_xcoff_format.\n-\t* testsuite/binutils-all/nm.exp: Likewise.\n-\t* testsuite/binutils-all/copy-2.d: Run only for elf and pe targets.\n-\t* testsuite/binutils-all/copy-3.d: Run only for elf targets.\n-\t* testsuite/binutils-all/set-section-alignment.d: Likewise.\n-\t* testsuite/binutils-all/copy-4.d: Don't run for xcoff.\n-\n-2020-07-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (is_xcoff_format): New.\n-\t* testsuite/binutils-all/objcopy.exp (pr25662): Exclude xcoff.\n-\n-2020-07-06  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/bg.po: Updated Bulgarian translation.\n-\t* po/pt.po: Updated Portuguese translation.\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2020-07-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (print_dynamic_symbol): Don't sprintf to buffer to\n-\tfind string length.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* po/binutils.pot: Regenerate.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.35 branch created.\n-\n-2020-07-02  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26028\n-\t* readelf.c (print_symbol): Handle truncation of symbol names.\n-\t(options): Add -T/--silent-truncation option.\n-\t(parse_args): Handle the option.\n-\t(print_dynamic_symbol): Correct calculation of width available to\n-\tdisplay symbol name.\n-\t* doc/binutils.texi: Document the -T option to readelf.\n-\t* NEWS: Mention the new feature.\n-\n-2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* NEWS: Mention x86 NaCl target support removal.\n-\t* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): Remove\n-\tx86 NaCl target support.\n-\t* testsuite/binutils-all/elfedit-1.d: Likewise.\n-\t* testsuite/binutils-all/i386/i386.exp: Likewise.\n-\t* testsuite/binutils-all/x86-64/objects.exp: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.\n-\n-2020-06-30  Nick Clifton  <nickc@redhat.com>\n-\n-\t* dwarf.c (read_and_display_attr_value): Support\n-\tDW_FORM_GNU_strp_alt when used with DW_AT_dwo_name and\n-\tDW_AT_comp_dir.\n-\n-2020-06-30  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/readelf.exp (readelf_dump_test): Remove\n-\txfail for nds32.\n-\n-2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>\n-\n-\t* dwarf.c (display_debug_str_offsets): Rename local variable\n-\tindex to idx.  Move to top of function.\n-\n-2020-06-29  Alan Modra  <amodra@gmail.com>\n-\n-\t* dwarf.c: Use C style comments.\n-\t* resrc.c: Likewise.\n-\n-2020-06-27  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfcomm.c (setup_nested_archive): Set nested_arch->file to NULL\n-\tafter freeing.\n-\t(release_archive): Set fields of arch to NULL after freeing.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* readelf.c (dump_section_as_ctf): Support .ctf archives using\n-\tctf_arc_bufopen.  Automatically load the .ctf member of such\n-\tarchives as the parent of all other members, unless specifically\n-\toverridden via --ctf-parent.  Split out dumping code into...\n-\t(dump_ctf_archive_member): ... here, as in objdump, and call\n-\tit once per archive member.\n-\t(dump_ctf_indent_lines): Code style fix.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.ac [--enable-libctf]: New, default yes.\n-\tSet ENABLE_LIBCTF accordingly.\n-\t* Makefile.am [!ENABLE_LIBCTF]: Empty LIBCTF and LIBCTF_NOBFD.\n-\t* configure: Regenerate.\n-\t* config.in: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\t* objdump.c (usage): Conditionalize portions on ENABLE_LIBCTF.\n-\t(option_values): Likewise.\n-\t(long_options): Likewise.\n-\t(main): Likewise.\n-\t(dump_ctf_indent_lines): Conditionalize out when !ENABLE_LIBCTF.\n-\t(make_ctfsect): Likewise.\n-\t(dump_ctf_archive_member): Likewise.\n-\t(dump_ctf) [ENABLE_LIBCTF]: Likewise.\n-\t(dump_ctf) [!ENABLE_LIBCTF]: New empty stub.\n-\t* readelf.c (options): Conditionalize portions on ENABLE_LIBCTF.\n-\t(usage): Likewise.\n-\t(process_section_contents): Likewise.\n-\t(shdr_to_ctf_sect): Conditionalize out when !ENABLE_LIBCTF.\n-\t(dump_ctf_indent_lines): Likewise.\n-\t(dump_section_as_ctf) [ENABLE_LIBCTF]: Likewise.\n-\n-2020-06-26  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* doc/binutils.texi: Adjust description of x86's -Msuffix. Drop\n-\tredundant text from x86 specific part of -M section.\n-\n-2020-06-26  Pat Bernardi  <bernardi@adacore.com>\n-\n-\t* readelf.c (display_m68k_gnu_attribute): New function.\n-\t(process_arch_specific): Call display_m68k_gnu_attribute for EM_68K.\n-\n-2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/26160\n-\t* testsuite/binutils-all/pr26160.dwp.bz2: New file.\n-\t* testsuite/binutils-all/pr26160.r: Likewise.\n-\t* testsuite/binutils-all/readelf.exp: Run PR binutils/26160 test.\n-\n-2020-06-23  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26160\n-\t* dwarf.c (fetch_indexed_string): Detect and handle old style\n-\t.debug_str_offset tables.\n-\t(display_debug_str_offsets): Likewise.  Also add support for\n-\t.debug_str_offsets.dwo sections.\n-\n-2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/26112\n-\t* testsuite/binutils-all/pr26112.o.bz2: New file.\n-\t* testsuite/binutils-all/pr26112.r: Likewise.\n-\t* testsuite/binutils-all/readelf.exp: Run PR binutils/26112 test.\n-\n-2020-06-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objdump.exp (bintest.a): Correct\n-\tremote_file delete command.\n-\n-2020-06-22  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26112\n-\t* dwarf.c (display_debug_str_offsets): Add code to display the\n-\tcontents of the .debug_str_offsets section.\n-\t(display_debug_macro): Add support for DW_MACRO_define_strx and\n-\tDW_MACRO_undef_strx.\n-\n-2020-06-22  Saagar Jha  <saagar@saagarjha.com>\n-\n-\t* od-macho.c: Dump linkedit data for new load commands.\n-\n-2020-06-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.\n-\t* testsuite/lib/binutils-common.exp (check_relro_support): New proc.\n-\t(run_dump_test): Use check_relro_support to decide whether to pass\n-\textra ld option \"-z norelro\".\n-\n-2020-06-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_mips_specific): Don't alloc memory for\n-\tElf_Internal_Options.\n-\n-2020-06-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_mips_specific): Assert size of internal\n-\ttypes match size of external types, and simplify allocation of\n-\tinternal buffer.  Catch possible integer overflow when sanity\n-\tchecking option size.  Don't assume options are a regular array.\n-\tSanity check reginfo option against option size.  Use PRI macros\n-\twhen printing.\n-\n-2020-06-10  Ralf Habacker  <ralf.habacker@freenet.de>\n-\n-\tPR 26082\n-\t* mclex.c (yylex): Reject lines that reach end-of-file without a\n-\tterminating newline character.\n-\n-2020-06-08  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26093\n-\t* doc/binutils.texi (strings): Fix typo.\n-\n-2020-06-08  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26086\n-\t* dwarf.c (process_debug_info): Check that there is space in the\n-\tdebug_information array before filling in an entry.\n-\n-2020-06-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* doc/binutils.texi (PowerPC -M option): Mention power10 and pwr10.\n-\n-2020-06-05  Joel Anderson  <joelanderson333@gmail.com>\n-\n-\tPR 26082\n-\t* mclex.c (yylex): Add test for an empty input stream.\n-\n-2020-06-04  Stephen Casner  <casner@acm.org>\n-\n-\t* testsuite/binutils-all/pr25662-pdp11.s: Alternate source file\n-\tfor test using section pseudo-ops compatible with pdp11.\n-\t* testsuite/binutils-all/objcopy.exp: Select alternate source.\n-\n-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* objdump.c (disassemble_data): Set disasm_info.endian_code to\n-\tdisasm_info.endian after the latter is initialized to the\n-\tendianness reported by BFD.\n-\n-2020-06-04  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/i386/i386.exp: Remove global directive\n-\toutside proc body.\n-\t* testsuite/binutils-all/x86-64/objects.exp: Likewise.\n-\t* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.\n-\n-2020-06-03  Joel Anderson  <joelanderson333@gmail.com>\n-\n-\t* windmc.h (struct mc_node): Add id_typecast field.\n-\t* mcparse.y (message): Initialise the id_typecast field.\n-\t* windmc.c (write_dbg): Use the id_typecast field as a parameter\n-\twhen calling write_dbg_define.\n-\t(write_header): Likewise.\n-\n-2020-06-03  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26069\n-\t* objcopy.c (copy_relocations_in_section): Free relpp on error.\n-\tDon't accidentally free isection->orelocation.\n-\n-2020-06-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/ar.exp (obj): Set up object file name\n-\textension.  Use throughout.  Don't completely exclude non-ELF\n-\talpha targets.  Run long_filenames test for tic30.  Exclude thin\n-\tarchive tests for aix, ecoff and vms.\n-\t* estsuite/binutils-all/objdump.exp (obj): Set up object file name\n-\textension.  Use throughout.  Don't exclude non-ELF alpha targets\n-\tfrom \"bintest.a\".\n-\n-2020-05-28  Max Filippov  <jcmvbkbc@gmail.com>\n-\n-\t* MAINTAINERS (Xtensa): Add myself as maintainer.\n-\n-2020-05-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/ar.exp (many_files): New test.\n-\n-2020-05-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* addr2line.c: Replace \"if (x) free (x)\" with \"free (x)\" throughout.\n-\t* dlltool.c: Likewise.\n-\t* elfcomm.c: Likewise.\n-\t* rddbg.c: Likewise.\n-\t* readelf.c: Likewise.\n-\t* stabs.c: Likewise.\n-\t* windmc.c: Likewise.\n-\t* windres.c: Likewise.\n-\t* wrstabs.c: Likewise.\n-\n-2020-05-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_num_dynamic_syms): Bounds check mipsxlat array\n-\taccess.\n-\n-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* dwarf.c: Updated since DECLARE_CSR is changed.\n-\n-2020-05-19  H.J. Lu  <hjl.tools@gmail.com>\n-\n-\tPR binutils/25809\n-\t* readelf.c (process_program_headers): Warn if the PT_DYNAMIC\n-\tsegment doesn't match the .dynamic section and checks are\n-\tenabled.\n-\t(struct filedata): Add dynamic_symtab_section and\n-\tdynamic_strtab_section fields.\n-\t(process_section_headers): Set dynamic_symtab_section to the\n-\t.dynsym section.  Set dynamic_strtab_section to the .dynstr\n-\tsection.\n-\t(process_dynamic_section): Warn if the .dynsym section doesn't\n-\tmatch DT_SYMTAB and DT_SYMENT or the .dynstr section doesn't\n-\tDT_STRTAB and DT_STRSZ.  But only if checks are enabled.\n-\n-2020-05-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* ar.c (map_over_members, get_pos_bfd, delete_members, move_members),\n-\t(replace_members): Use bfd_get_filename rather than accessing\n-\tbfd->filename directly.\n-\t* arsup.c (map_over_list, ar_delete, ar_replace, ar_extract): Likewise.\n-\t* binemul.c (do_ar_emul_append): Likewise.\n-\t* coffgrok.c (coff_grok): Likewise.\n-\n-2020-05-18  Stafford Horne  <shorne@gmail.com>\n-\n-\t* MAINTAINERS (OR1K): Add myself as maintainer.\n-\n-2020-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* doc/binutils.texi: Mention 'entry address' in the set-start and\n-\tadjust-start options descriptions.\n-\n-2020-05-05  Nick Clifton  <nickc@redhat.com>\n-\n-\t* dwarf.c (do_checks): New global variable.\n-\t(display_formatted_table): Warn about an unexpected number of\n-\tcolumns in the table, if checks are enabled.  Do not complain\n-\tabout the lack of data following the number of entries in the\n-\ttable if the table is empty.\n-\t(display_debug_lines_decoded): Only warn about an unexpected\n-\tnumber of columns in a table if checks are enabled.\n-\t* dwarf.h (do_checks): Add a prototype.\n-\t* elfcomm.c (error): Remove weak attribute.\n-\t(warn): Likewise.\n-\t* readelf.c (do_checks): Delete.\n-\t(warn): Delete.\n-\t(process_section_headers): Only warn about empty sections if\n-\tchecks are enabled.\n-\n-2020-05-04  Fangrui Song   <maskray@google.com>\n-\n-\t* objcopy.c (copy_object): Allow empty section.\n-\t* testsuite/binutils-all/update-section.exp: Add test.\n-\n-2020-05-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25917\n-\t* dwarf.c (display_debug_lines_decoded): Warn if encountering a\n-\tsupicious number of entries for DWARF-5 format directory and file\n-\tname tables.  Do not display file name table header if the table\n-\tis empty.  Do not allocate space for empty tables.\n-\n-2020-05-04  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_nds32_specific): Check size of .nds32_e_flags\n-\tsection.  Don't assume endian of host matches nds32 target.  Free\n-\tbuffer.\n-\n-2020-05-01  Alan Modra  <amodra@gmail.com>\n-\t    Haim Shimonovich  <Haim.Shimonovich@ceva-dsp.com>\n-\n-\t* objdump.c (disassemble_bytes): Don't scan for zeros when\n-\tdisassembling zeros.  Translate \"resuming at file offset\" message.\n-\tFormatting.  Replace some signed variables with unsigned.\n-\n-2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n-\n-\t* testsuite/binutils-all/aarch64/in-order-all.d: Update to use new\n-\tdisassembly.\n-\t* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.\n-\n-2020-04-30  Nick Clifton  <nickc@redhat.com>\n-\n-\t* testsuite/lib/binutils-common.exp (check_pie_support): New\n-\tproc.\n-\n-2020-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (display_debug_ranges): Ignore duplicate entries in\n-\trange_entries for the same offset.\n-\n-2020-04-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (warn): New function - like elfcomm.c version but only\n-\tproduces output if warnings are enabled.\n-\t(struct options): Add --lint and --enable-checks.\n-\t(usage): Add entry for --lint.\n-\t(parse_args): Handle -L.  If checks are enabled but no dumps have\n-\tbeen selected then enable all dumps.\n-\t(process_section_headers): Replace long if-then-else sequence with\n-\ta switch.  Add warning messages for empty SHT_REL, SHT_RELA and\n-\tSHT_PROGBITS sections.\n-\t(process_file): Do not complain if the file is an archive and lint\n-\tmode has been enabled.\n-\t* elfcomm.c (error): Make the function weak.\n-\t(warn): Likewise.\n-\t* NEWS: Mention the new feature.\n-\t* doc/binutils.texi: Document the new feature.\n-\t* dwarf.h (report_leb_status): Add file name and line number\n-\tparameters.  Include them in the diagnostic output.\n-\t(READ_ULEB): Pass file and line number to report_leb_status.\n-\t(READ_SLEB): Likewise.\n-\t* dwarf.c (read_and_print_leb128): Pass file and line number to\n-\treport_leb_status.\n-\t* testsuite/binutils-all/readelf.exp: Add test of new feature.\n-\t* testsuite/binutils-all/zero-sec.s: New test source file.\n-\t* testsuite/binutils-all/zero-sec.r: Expected output from new\n-\ttest.\n-\n-2020-04-29  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sr.po: Updated Serbian translation.\n-\n-2020-04-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_num_dynamic_syms): Check DT_MIPS_XHASH was\n-\tread before dereferencing, and gracefully return.  Remove\n-\tgnu_hash_error variable.  Free gnu hash arrays if number of\n-\tsyms found is zero.\n-\n-2020-04-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_num_dynamic_syms): Check for nbuckets and nchains\n-\tnon-zero.\n-\t(process_dynamic_section): Call get_num_dynamic_syms once rather\n-\tthan in segment loop.  Break out of segment loop on a successful\n-\tload of dynamic symbols.  Formatting.\n-\t(process_object): Return error status from process_dynamic_section.\n-\n-2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>\n-\n-\t* elf-bfd.h (elfcore_write_arc_v2): Add prototype.\n-\t* elf.c (elfcore_grok_arc_v2): New function.\n-\t(elfcore_grok_note): Call the new function to handle the corresponding\n-\tnote.\n-\t(elfcore_write_arc_v2): New function.\n-\t(elfcore_write_register_note): Call the new function to handle the\n-\tcorresponding pseudo-sections.\n-\n-2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>\n-\n-\tPR ld/25861\n-\t* readelf.c (is_none_reloc): Recognize\n-\tBFD_RELOC_XTENSA_PDIFF{8,16,32} and\n-\tBFD_RELOC_XTENSA_NDIFF{8,16,32}.\n-\n-2020-04-22  Nick Clifton  <nickc@redhat.com>\n-\n-\t* MAINTAINERS: Remove Chris Faylor as the ix86 PE maintainer.\n-\n-2020-04-22  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (archive_file_offset, archive_file_size, dynamic_addr),\n-\t(dynamic_size, dynamic_nent, dynamic_strings, dynamic_strings_length),\n-\t(num_dynamic_syms, nbuckets, nchains, buckets, chains),\n-\t(ngnubuckets, gnubuckets, gnuchains, mipsxlat, ngnuchains),\n-\t(gnusymidx, dynamic_symbols, dynamic_syminfo, dynamic_syminfo_offset),\n-\t(dynamic_syminfo_nent, program_interpreter, dynamic_info),\n-\t(dynamic_info_DT_GNU_HASH, dynamic_info_DT_MIPS_XHASH, version_info),\n-\t(dynamic_section, symtab_shndx_list, group_count, section_groups),\n-\t(section_headers_groups): Move to struct filedata.  Update use\n-\tthroughout file.\n-\n-2020-04-22  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (struct dump_data): New, used..\n-\t(cmdline): ..here, and..\n-\t(struct filedata): ..here.  Adjust all uses.\n-\t(request_dump_bynumber, request_dump, parse_args): Pass in a\n-\tstruct dump_data* rather than Filedata*.  Adjust callers.\n-\t(main): Don't set cmdline.file_name.\n-\n-2020-04-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_symbol_table): Clear ngnuchains, ngnubuckets\n-\tand nbuckets.\n-\n-2020-04-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_section_headers): Free dynamic symbols etc.\n-\tearlier.\n-\n-2020-04-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_num_dynamic_syms): Formatting.  Don't return\n-\ton error without freeing.\n-\t(process_dynamic_section): Don't recreate dynamic symbols from\n-\tdynamic tag info when the dynamic symbols have already been\n-\tread via section headers.\n-\n-2020-04-17  Fredrik Strupe  <fredrik@strupe.net>\n-\n-\t* testsuite/binutils-all/arm/vdup-cond.d: New test for testing that\n-\tconditional VDUP instructions are disassembled correctly.\n-\t* testsuite/binutils-all/arm/vdup-cond.s: New file used by\n-\tvdup-cond.d.\n-\t* testsuite/binutils-all/arm/vdup-thumb.d: New test for testing\n-\tthat VDUP instructions (which are conditional in A32) can be\n-\tdisassembled in thumb mode.\n-\t* testsuite/binutils-all/arm/vdup-cond.s: New file used by\n-\tvdup-thumb.d.\n-\n-2020-04-17  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25840\n-\t* debug.c (debug_class_type_samep): Don't segfault on NULL type.\n-\n-2020-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* doc/binutils.texi: Mention --no-show-raw-insn in objdump\n-\t--no-addresses description.\n-\n-2020-04-15  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (no_addresses): New static var.\n-\t(usage): Print help for --no-addresses.\n-\t(long_options): Add --no-addresses entry.\n-\t(objdump_print_addr_with_sym, objdump_print_addr): Omit symbol address.\n-\t(disassemble_bytes): Don't print current line address, or reloc\n-\taddress.\n-\t* doc/binutils.texi: Document objdump --no-addresses.\n-\n-2020-04-15  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25822\n-\t* readelf.c (get_num_dynamic_syms): Don't set num_of_syms when\n-\treading buckets or chains fails.\n-\n-2020-04-15  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_symbol_table): Zero gnubuckets, gnuchains\n-\tetc. after freeing.\n-\n-2020-04-15  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_group_flags): Translate text.\n-\t(get_file_type, get_symbol_binding, get_symbol_type),\n-\t(get_ppc64_symbol_other, get_symbol_other): Increase size of buffer.\n-\n-2020-04-15  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25821\n-\t* readelf.c (get_num_dynamic_syms): Typo fix.\n-\n-2020-04-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_mips_specific): Free eopt and iopt.  Avoid\n-\tpossibility of overflow when checking number of conflicts.\n-\n-2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/25707\n-\t* readelf.c (nbuckets): New.\n-\t(nchains): Likewise.\n-\t(buckets): Likewise.\n-\t(chains): Likewise.\n-\t(ngnubuckets): Likewise.\n-\t(gnubuckets): Likewise.\n-\t(gnuchains): Likewise.\n-\t(mipsxlat): Likewise.\n-\t(ngnuchains): Likewise.\n-\t(gnusymidx): Likewise.\n-\t(VALID_SYMBOL_NAME): Likewise.\n-\t(VALID_DYNAMIC_NAME): Use it.\n-\t(get_dynamic_data): Moved before process_dynamic_section.\n-\t(get_num_dynamic_syms): New function.\n-\t(process_dynamic_section): Use DT_SYMTAB, DT_SYMENT, DT_HASH,\n-\tDT_GNU_HASH and DT_MIPS_XHASH to reconstruct dynamic symbol\n-\ttable.  Use DT_STRTAB and DT_STRSZ to reconstruct dynamic string\n-\ttable.\n-\t(get_symbol_index_type): Don't print \"bad section index\" when\n-\tthere is no section header.\n-\t(print_dynamic_symbol): Rewrite.\n-\t(process_symbol_table): Call print_dynamic_symbol to dump dynamic\n-\tsymbol table.\n-\n-2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* testsuite/lib/binutils-common.exp (supports_gnu_osabi): Don't\n-\tenable on *-*-solaris*.\n-\n-2020-03-30  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR binutils/25662\n-\t* objcopy.c (copy_object): When copying PE format files set the\n-\ttimestamp field in the pe_data structure if the preserve_dates\n-\tflag is set.\n-\t* testsuite/binutils-all/objcopy.exp (objcopy_test) Use\n-\t--preserve-dates in place of the -p option, in order to make its\n-\teffect more obvious.\n-\n-2020-03-28  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Only\n-\tclear_xfail hppa*-*-*elf*.  Revert mips xfails.\n-\n-2020-03-28  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Move xfails\n-\tfrom here to calls.  Remove \"m8*-*-*\" entry.  Don't xfail tic54x\n-\tbut do xfail spu, mipstx39 and mips-sgi-irix for the executable\n-\ttest.  Pass \"-p\" to objcopy for the executable test.\n-\n-2020-03-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\tPR binutils/25662\n-\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Add argument to\n-\tspecify whether an object file or executable should be built and tested.\n-\tChange test names to report whether an object file or executable is\n-\tbeing tested.\n-\t* testsuite/binutils-all/pr25662.ld: New test.\n-\t* testsuite/binutils-all/pr25662.s: New test.\n-\n-2020-03-27  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_archive): Don't double free qualified_name.\n-\tDon't break out of loop with \"negative\" archive_file_size, just\n-\tset file offset to max.\n-\n-2020-03-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_archive): Prevent endless loop.\n-\n-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/25708\n-\t* nm.c (print_symname): Replace _bfd_elf_get_symbol_version_name\n-\twith bfd_get_symbol_version_string.\n-\t(print_symbo): Pass TRUE to bfd_get_symbol_version_string.\n-\t* objdump.c (objdump_print_symname): Likewise.\n-\n-2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/25708\n-\t* nm.c (SYM_NAME): Removed.\n-\t(print_symname): Add a pointer to struct extended_symbol_info\n-\targument.  Call _bfd_elf_get_symbol_version_name to get symbol\n-\tversion.\n-\t(print_symdef_entry): Pass NULL to print_symname.\n-\t(print_symbol_info_bsd): Update call to print_symname.\n-\t(print_symbol_info_sysv): Likewise.\n-\t(print_symbol_info_posix): Likewise.\n-\n-2020-03-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_mips_specific): Free iconf on error path.\n-\n-2020-03-23  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25714\n-\t* wrstabs.c (stab_pop_type): Replace assertion with error return.\n-\t* write_stabs_in_sections_debugging_info: Likewise.\n-\t* stab_enum_type: Likewise.\n-\t* stab_modify_type: Likewise.\n-\t* stab_struct_field: Likewise.\n-\t* stab_end_struct_type: Likewise.\n-\t* stab_start_class_type: Likewise.\n-\t* stab_class_static_member: Likewise.\n-\t* stab_class_baseclass: Likewise.\n-\t* stab_class_start_method: Likewise.\n-\t* stab_class_method_var: Likewise.\n-\t* stab_class_end_method: Likewise.\n-\t* stab_end_class_type: Likewise.\n-\t* stab_typedef_type: Likewise.\n-\t* stab_start_function: Likewise.\n-\t* stab_end_block: Likewise.\n-\t* stab_lineno: Likewise.\n-\n-2020-03-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (get_compression_header): Add ATTRIBUTE_WARN_UNUSED_RESULT.\n-\t(process_section_headers): Check the return value from\n-\tget_compression_header.\n-\t(dump_section_as_strings): Likewise.\n-\t(dump_section_as_bytes): Likewise.\n-\t(load_specific_debug_section): Likewise.\n-\n-2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* ar.c (main): Update bfd_plugin_set_program_name call.\n-\t* nm.c (main): Likewise.\n-\n-2020-03-19  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25676\n-\t* testsuite/binutils-all/dw4.s: New test source file.\n-\t* testsuite/binutils-all/nm.exp: Run the new test.\n-\n-2020-03-19  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (process_symbol_table): Use unsigned long for si.\n-\n-2020-03-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfcomm.c: Don't include bfd.h or bucomm.h.\n-\t(program_name): Declare.\n-\t(process_archive_index_and_symbols): Replace bfd_boolean with int,\n-\tand substitute FALSE and TRUE.\n-\t(setup_archive, setup_nested_archive): Likewise.\n-\t* elfcomm.h: Likewise.\n-\n-2020-03-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_archive): Always return via path freeing\n-\tmemory.  Formatting.\n-\n-2020-03-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_netbsd_elf_note): Validate descsz before\n-\taccessing descdata.  Formatting.\n-\n-2020-03-19  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfcomm.c (setup_archive): Make file_size an off_t.  Comment.\n-\t* elfcomm.h (setup_archive): Update prototype.\n-\n-2020-03-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_symbols): New function.\n-\t(process_relocs, ia64_process_unwind, hppa_process_unwind),\n-\t(arm_process_unwind, get_symbol_for_build_attribute): Use it.\n-\n-2020-03-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* unwind-ia64.c (unw_decode_uleb128): Prevent overlarge shifts.\n-\tDetect shift overflows and check that terminating byte is found.\n-\tPrint an error on a bad uleb128.\n-\n-2020-03-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_file): Clean ba_cache.\n-\n-2020-03-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfcomm.h (setup_archive): Update prototype.\n-\t* elfcomm.c (setup_archive): Add file_size parameter and sanity\n-\tcheck longnames_size.\n-\t(setup_nested_archive): Get file size and pass to setup_archive.\n-\t* elfedit.c (process_archive): Likewise.\n-\t* readelf.c (process_archive): Pass filedata->file_size to\n-\tsetup_archive.\n-\n-2020-03-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (dump_section_as_strings): Free memory on error exit.\n-\t(dump_section_as_bytes, process_notes_at): Likewise.\n-\t(get_build_id): Free enote.\n-\n-2020-03-13  Kamil Rytarowski  <n54@gmx.com>\n-\n-\t* readelf.c (get_netbsd_elfcore_note_type): Add support for\n-\tNT_NETBSDCORE_LWPSTATUS notes.\n-\n-2020-03-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfcomm.c (get_archive_member_name): Always return malloc'd\n-\tstring or NULL.\n-\t* elfedit.c (process_archive): Tidy memory on all return paths.\n-\t* readelf.c (process_archive): Likewise.\n-\t(process_symbol_table): Likewise.\n-\t(ba_cache): New, replacing ..\n-\t(get_symbol_for_build_attribute): ..static vars here.  Free\n-\tstrtab and symtab before loading new ones.  Reject symtab without\n-\tvalid strtab in loop, breaking out of loop on valid symtab.\n-\t(process_file): Free ba_cache symtab and strtab here, resetting\n-\tba_cache.\n-\n-2020-03-12  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_section_headers): Don't just set\n-\tfiledata->section_headers NULL, free it first.  Similarly for\n-\tdynamic_symbols, dynamic_strings, dynamic_syminfo and\n-\tsymtab_shndx_list.  Zero associated counts too.\n-\t(process_object): Free symtab_shndx_list.\n-\t(process_file): Free various allocated filedata tables.\n-\n-2020-03-11  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25611\n-\tPR 25614\n-\t* dwarf.h (DWARF2_Internal_LineInfo): Add li_address_size and\n-\tli_segment_size fields.\n-\t* dwarf.c (read_debug_line_header): Record the address size and\n-\tsegment selector size values (if present) in the lineinfo\n-\tstructure.\n-\t(display_formatted_table): Warn if the format count is empty but\n-\tthe table itself is not empty.\n-\tDisplay the format count and entry count at the start of the table\n-\tdump.\n-\t(display_debug_lines_raw): Display the address size and segement\n-\tselector size fields, if present.\n-\t* testsuite/binutils-all/dw5.W: Update expected output.\n-\n-2020-03-11  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25651\n-\t* objcopy.c (copy_object): Test \"gaps\" not gap_fill_set or\n-\tpad_to_set on second block of code dealing with padding.\n-\tReplace \"c\" with \"num_sec\" and don't recalculate number of\n-\tsections on second block.  Size arrays using sizeof (element)\n-\trather than sizeof (element type).\n-\n-2020-03-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (disassemble_section): Don't call qsort unless\n-\tsym count is at least two.\n-\t(disassemble_data): Don't call memcpy with NULL src.\n-\n-2020-03-09  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25645\n-\t* readelf.c (dump_ia64_vms_dynamic_fixups): Pass size and nmemb\n-\tto get_data rather than multiplying.\n-\t(dump_ia64_vms_dynamic_relocs): Likewise.\n-\t(process_version_sections): Correct order of size and nmemb args\n-\tin get_data call.\n-\t(process_mips_specific): Likewise.\n-\n-2020-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (get_dynamic_data): Replace \"memory chekers\" with\n-\t\"memory checkers\" in comments.\n-\n-2020-03-06  Simon Marchi  <simon.marchi@efficios.com>\n-\n-\tPR 25491\n-\t* doc/Makefile.am: Rename MOSTLYCLEANFILES to MAINTAINERCLEANFILES.\n-\t* doc/Makefile.in: Re-generate.\n-\n-2020-03-06  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (check_new_section_flags): New function.  Reject the\n-\tSEC_COFF_SHARED flag if the target is not a COFF binary.\n-\t(copy_object): Call check_new_section_flags.\n-\t(setup_section): Likewise.\n-\t* doc/binutils.texi (objcopy): Add a note that the 'share' section\n-\tflag cannot be applied to ELF binaries.\n-\n-2020-03-06  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25637\n-\t* objcopy.c (filter_symbols): Correct rem_leading_char logic.\n-\n-2020-03-05  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25629\n-\t* objcopy.c (filter_symbols): Don't segfault on NULL\n-\tprefix_symbols_string.\n-\n-2020-03-04  Christian Eggers  <ceggers@gmx.de>\n-\n-\t* objcopy.c (copy_object): Convert from bytes to octets for\n-\t--gap-fill and --pad-to.\n-\n-2020-03-03  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25625\n-\t* prdbg.c (pr_tag_type): Remove call to abort.\n-\n-2020-03-02  Aaron Merey  <amerey@redhat.com>\n-\n-\t* binutils/testsuite/binutils-all/debuginfod.exp: Improve port\n-\tselection.\n-\n-2020-03-02  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25543\n-\t* readelf.c (dump_section_as_strings): Display new-line characters\n-\tas \\n and then insert a line break.\n-\t* testsuite/binutils-all/pr25543.s: New test.\n-\t* testsuite/binutils-all/pr25543.d: Test driver.\n-\t* testsuite/binutils-all/readelf.exp: Run the new test.\n-\n-2020-02-27  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25526\n-\t* readelf.c (process_ia64_vms_dynamic_relocs): Check to see if\n-\tget_data is unable to load the string table.\n-\n-2020-02-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* elfedit.c: Indent labels correctly.\n-\t* readelf.c: Likewise.\n-\t* resres.c: Likewise.\n-\n-2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/25584\n-\t* ar.c (main): Pass 0 to bfd_plugin_set_program_name.\n-\t* nm.c (main): Pass 1 to bfd_plugin_set_program_name.\n-\n-2020-02-24  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25499\n-\t* doc/binutils.texi (objdump): Fix typo in description of\n-\tobjdump's -g option.\n-\n-2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* dwarf.c (regname_internal_riscv): Updated since the DECLARE_CSR\n-\tis changed.\n-\n-2020-02-19  Jordan Rupprecht  <rupprecht@google.com>\n-\n-\t* objdump.c (show_line): call bfd_demangle when using do_demangle.\n-\n-2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* configure: Regenerate.\n-\n-2020-02-10  Fangrui Song   <maskray@google.com>\n-\n-\t* objcopy.c (parse_flags): Handle \"exclude\".\n-\t* doc/binutils.texi: Document the support.\n-\n-2020-02-10  Aaron Merey  <amerey@redhat.com>\n-\n-\t* binutils/testsuite/binutils-all/debuginfod.exp:\n-\tReplace set ::env with setenv.\n-\tStart server before setting environment variable.\n-\tSpecify tmpdir as the location of the server's\n-\tdatabase.\n-\tCheck additional server metrics at start-up.\n-\n-2020-02-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add note about updating the\n-\tGAS/NEWS URL in the next release.\n-\n-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n-\n-\tPR 25469\n-\t* readelf.c (get_machine_flags): Add support for Z80N machine\n-\tnumber.\n-\n-2020-02-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* dwarf.c (display_debug_lines_decoded): Force a NUL termination\n-\tof the truncated file name.\n-\n-2020-02-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* objdump.c (print_jump_visualisation): New function.\n-\t(disassemble_bytes): Call new function.\n-\n-2020-02-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (match_target): Accept '!' before\n-\tTCL procedure.\n-\t(supports_gnu_osabi): New procedure.\n-\t(is_generic): New, from ld-lib.exp.\n-\t(supports_gnu_unique): Use the above.\n-\n-2020-02-04  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am (CFILES): Add od-elf32_avr.c.\n-\t* Makefile.in: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2020-02-03  Andreas Schwab  <schwab@linux-m68k.org>\n-\n-\t* readelf.c (dump_relocations, dump_relocations)\n-\t(decode_arm_unwind_bytecode, process_dynamic_section)\n-\t(get_symbol_visibility, get_alpha_symbol_other): Add newline to\n-\terror message.\n-\n-2020-02-03  Sergei Trofimovich  <siarheit@google.com>\n-\n-\t* coffdump.c (program_name): Drop redundant definition.\n-\t* srconv.c (program_name): Likewise\n-\t* sysdump.c (program_name): Likewise\n-\n-2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/25380\n-\t* objdump.c (sym_ok): Return FALSE if 2 sections are in the\n-\tsame file with different section pointers.\n-\n-2020-02-01  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Update with more details on the\n-\trelease making process.\n-\n-2020-01-31  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2020-01-28  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (get_build_id): Simplify warning message about corrupt\n-\tnotes encountered whilst scanning for the build-id.\n-\n-2020-01-27  Roland McGrath  <mcgrathr@google.com>\n-\n-\t* objcopy.c (compare_gnu_build_notes): Fix comparison results\n-\tfor overlapping ranges so that (A == B) == (B == A) holds.\n-\n-2020-01-27  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (big_or_little_endian): Replace\n-\tcase statement with switch statement.\n-\n-2020-01-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (get_build_id): Fix warning messages about corrupt\n-\tnotes.\n-\n-2020-01-23  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\n-2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>\n-\n-\tPR 25417\n-\t* readelf.c (get_alpha_symbol_other): Fix error message typo.\n-\n-2020-01-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt.po: Updated Portuguese translation.\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Update notes on how to cut a\n-\tbranch for a release.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* po/binutils.pot: Regenerate.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.34 branch created.\n-\n-2020-01-17  Thomas Troeger  <tstroege@gmx.de>\n-\n-\t* objdump.c (jump_info_visualize_address): Discard jumps that are\n-\tno longer needed.\n-\t(disassemble_bytes): Only compute the maximum level if jumps were\n-\tdetected.\n-\n-2020-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objdump.c (disassemble_bytes): Remove C99-ism.\n-\t* testsuite/binutils-all/debuginfod.exp: New tests.\n-\n-2020-01-13  Thomas Troeger  <tstroege@gmx.de>\n-\n-\t* objdump.c (visualize_jumps, color_output, extended_color_output)\n-\t(detected_jumps): New variables.\n-\t(usage): Add the new jump visualization options.\n-\t(option_values): Add new option value.\n-\t(long_options): Add the new option.\n-\t(jump_info_new, jump_info_free): New functions.\n-\t(jump_info_min_address, jump_info_max_address): Likewise.\n-\t(jump_info_end_address, jump_info_is_start_address): Likewise.\n-\t(jump_info_is_end_address, jump_info_size): Likewise.\n-\t(jump_info_unlink, jump_info_insert): Likewise.\n-\t(jump_info_add_front, jump_info_move_linked): Likewise.\n-\t(jump_info_intersect, jump_info_merge): Likewise.\n-\t(jump_info_sort, jump_info_visualize_address): Likewise.\n-\t(disassemble_jumps): New function - used to locate jumps.\n-\t(disassemble_bytes): Add ascii art generation.\n-\t(disassemble_section): Add scan to locate jumps.\n-\t(main): Parse the new visualization option.\n-\t* doc/binutils.texi: Document the new feature.\n-\t* NEWS: Mention the new feature.\n-\n-2020-01-13  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25360\n-\tPR 25361\n-\t* dwarf.c (display_debug_frames): Move fde_fc earlier.  Free\n-\tfde_fc col_type and col_offset.\n-\t* readelf.c (apply_relocations): Move symsec check earlier.\n-\t(free_debug_section): Free reloc_info.\n-\t(process_notes_at): Free pnotes on error path.\n-\t(process_object): Free dump_sects here..\n-\t(process_archive): ..not here.\n-\n-2020-01-13  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25362\n-\t* nm.c (display_rel_file): Free dyn_syms.\n-\n-2020-01-09  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 25220\n-\t* objcopy.c (empty_name): New variable.\n-\t(need_sym_before): Prevent an attempt to free a static variable.\n-\t(filter_symbols): Avoid strcmp test by checking for pointer\n-\tequality.\n-\n-2020-01-09  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/zh_TW.po: Updated Traditional Chinese translation.\n-\n-2020-01-09  Aaron Merey  <amerey@redhat.com>\n-\n-        * Makefile.am (readelf_LDADD, objdump_LDADD): Add libdebuginfod.\n-        * Makefile.in: Regenerate.\n-        * NEWS: Update.\n-        * config.in: Regenerate.\n-        * configure: Regenerate.\n-        * configure.ac: Call AC_DEBUGINFOD.\n-        * doc/Makefile.in: Regenerate.\n-        * doc/binutils.texi: Add section on using binutils\n-        with debuginfod.\n-        * dwarf.c (debuginfod_fetch_separate_debug_info): New function.\n-        Query debuginfod servers for the target debug file.\n-        (load_separate_debug_info): Call\n-        debuginfod_fetch_separate_debug_info if configured with\n-        debuginfod.\n-        (load_separate_debug_files): Add file argument to\n-        load_separate_debug_info calls.\n-        * dwarf.h (get_build_id): Add declaration.\n-        * objdump.c (get_build_id): New function. Get build-id of file.\n-        * readelf.c (get_build_id): Likewise.\n-        * testsuite/binutils-all/debuginfod.exp: New tests.\n-        * testsuite/binutils-all/linkdebug.s: Add .note.gnu.build-id\n-        section.\n-\n-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n-\n-\t* readelf.c: Add support for new Z*) relocations and machine\n-\ttypes.\n-\n-2020-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2019\n+For older changes see ChangeLog-2020\n \f\n-Copyright (C) 2020 Free Software Foundation, Inc.\n+Copyright (C) 2021 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "7bd55845686a7834931149d1f2a826bdf0a98e91",
      "filename": "binutils/ChangeLog-2020",
      "status": "added",
      "additions": 2080,
      "deletions": 0,
      "changes": 2080,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/binutils/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/binutils/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -0,0 +1,2080 @@\n+2020-12-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27128\n+\t* nm.c (print_symname): Append version string to symbol name\n+\tbefore printing the lot under control of \"form\".  Append version\n+\tto demangled names too.\n+\n+2020-12-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elfedit (usage): Pass osabi to reconcat.\n+\n+2020-12-28  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Pass\n+\t$gcc_gas_flag to target_compile.\n+\n+2020-12-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (INT64_MIN): Define if not already defined.\n+\t(print_vms_time): Catch 64-bit overflow when converting from\n+\tvms time to posix time.  Don't segfault if gmtime returns NULL.\n+\n+2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* NEWS: Mention LAM_U48 and LAM_U57 support.\n+\t* elfedit.c (elf_x86_feature): Support lam_u48 and lam_u57.\n+\t(usage): Add lam_u48 and lam_u57.\n+\t* readelf.c (decode_x86_feature_1): Support LAM_U48 and LAM_U57.\n+\t* doc/binutils.texi: Update elfedit with lam_u48 and lam_u57\n+\tsupport.\n+\t* testsuite/binutils-all/x86-64/lam-u48.d: New file.\n+\t* testsuite/binutils-all/x86-64/lam-u48.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/lam-u57.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/lam-u57.s: Likewise.\n+\n+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n+\n+\t* readelf.c (get_dynamic_type): Handle DT_GNU_FLAGS_1.\n+\t(process_dynamic_section): Likewise.\n+\n+2020-12-11  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* readelf.c (get_machine_name): Update list of e_machine values.\n+\n+2020-12-11  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* ar.c (write_archive): Cast iostream pointer to FILE *.\n+\t* arsup.c (ar_save): Likewise.\n+\t* objcopy.c (copy_file): Likewise.\n+\n+2020-12-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (is_mergeable_note_section): Remove reference to\n+\tSHF_GNU_BUILD_NOTE.\n+\n+2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n+\n+\tPR 26945\n+\t* ar.c\n+\t(write_archive) [!defined (_WIN32) || defined (__CYGWIN32__)]:\n+\tInitialize TARGET_STAT and OFD to pass to SMART_RENAME.\n+\t* arsup.c\n+\t(ar_save) [defined (_WIN32) || defined (__CYGWIN32__)]:\n+\tLikewise.\n+\t* bucomm.h (smart_rename): Add new arguments to declaration.\n+\t* objcopy.c\n+\t(strip_main)[defined (_WIN32) || defined (__CYGWIN32__)]:\n+\tInitialize COPYFD and pass to SMART_RENAME.\n+\t(copy_main) [defined (_WIN32) || defined (__CYGWIN32__)]:\n+\tLikewise.\n+\t* rename.c (try_preserve_permissions): New function.\n+\t(smart_rename): Use it and add new arguments.\n+\n+2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n+\n+\tPR 26945\n+\t* objcopy.c (copy_file): New argument IN_STAT.  Return stat of\n+\tibfd through it.\n+\t(strip_main): Remove redundant stat calls.  adjust copy_file\n+\tcalls.\n+\t(copy_main): Likewise.\n+\n+2020-12-07  Siddhesh Poyarekar  <siddhesh@sourceware.org>\n+\n+\tPR 26945\n+\t* bucomm.c (make_tempname): Add argument to return file\n+\tdescriptor.\n+\t* bucomm.h (make_tempname): Likewise.\n+\t* ar.c: Include libbfd.h.\n+\t(write_archive): Adjust for change in make_tempname.  Call\n+\tbfd_fdopenw instead of bfd_openw.\n+\t* objcopy.c: Include libbfd.h.\n+\t(copy_file): New argument OFD.  Use bfd_fdopenw instead of\n+\tbfd_openw.\n+\t(strip_main): Adjust for change in make_tempname and\n+\tcopy_file.\n+\t(copy_main): Likewise.\n+\n+\n+2020-12-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release (point releases): Add a note to\n+\tupdate the milestone list on sourceware's bugzilla.\n+\n+2020-12-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (frame_display_row): Do without static variable \"sloc\".\n+\t(cu_tu_indexes_read): Move to file scope.\n+\t(free_debug_memory): Reset it here, along with level_type_signed.\n+\tFree and clear a number of other static variables.\n+\t* readelf.c (arm_attr_public_tag <table>): Constify, updating..\n+\t(arm_attr_tag_*): ..all these uses.\n+\t(process_mips_specific): Free \"rels\" on error path.\n+\n+2020-11-27  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26865\n+\t* windres.c (main): If the preprocessor name includes spaces,\n+\tensure that it is quoted.\n+\n+2020-11-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* testsuite/lib/binutils-common.exp (supports_noinit_section): New.\n+\t(supports_persistent_section): New.\n+\n+2020-11-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* readelf.c (dump_section_as_ctf): Call ctf_arc_symsect_endianness.\n+\n+2020-11-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/nm.exp (ifunc): xfail more targets.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* readelf.c (dump_section_as_ctf): Use .dynsym and .dynstr, not\n+\t.symtab and .strtab.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf): Report errors from ctf_archive_iter.\n+\t* readelf.c (dump_section_as_ctf): Likewise.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf): Use ctf_dict_open, not\n+\tctf_arc_open_by_name.\n+\t* readelf.c (dump_section_as_ctf): Likewise.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf_errs): Rename ctf_file_t to ctf_dict_t.\n+\t(dump_ctf_archive_member): Likewise.\n+\t(dump_ctf): Likewise. Use ctf_dict_close, not ctf_file_close.\n+\t* readelf.c (dump_ctf_errs): Rename ctf_file_t to ctf_dict_t.\n+\t(dump_ctf_archive_member): Likewise.\n+\t(dump_section_as_ctf): Likewise.  Use ctf_dict_close, not\n+\tctf_file_close.\n+\n+2020-11-20  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22967\n+\t* nm.c (ifunc_type_chars): New variable.\n+\t(long_options): Add --ifunc-chars.\n+\t(print_symbol): Use ifunc_type_chars for ifunc symbols.\n+\t(main): Handle the new option.\n+\t* doc/binutils.texi: Document the new option.\n+\t* configure.ac: Add --enable-f-for-ifunc-symbols option which\n+\tchanges the default symbol displayed by nm.\n+\t* NEWS: Mention the new feature.\n+\t* testsuite/binutils-all/nm.exp: Test the new feature.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2020-11-20  Linda Zhang  <lindasc@qq.com>\n+\n+\tPR 20979\n+\t* dllwrap.c (main): Deprecate and warn the use of dllwrap.\n+\n+2020-11-20  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* testsuite/binutils-all/readelf-maskos-1a.d: Fix test for unrecognized\n+\tbit set in SHF_MASKOS range.\n+\t* testsuite/binutils-all/readelf-maskos-1b.d: Likewise.\n+\t* testsuite/binutils-all/readelf-maskos-unknown.s: New test.\n+\n+2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* NEWS: Announce SHF_GNU_RETAIN support.\n+\t* readelf.c (get_elf_section_flags): Handle SHF_GNU_RETAIN.\n+\tRecognize SHF_GNU_RETAIN and SHF_GNU_MBIND only for supported OSABIs.\n+\t* testsuite/binutils-all/readelf.exp: Run new tests.\n+\tDon't run run_dump_test when there isn't an assembler available.\n+\t* testsuite/lib/binutils-common.exp (supports_gnu_osabi): Adjust\n+\tcomment.\n+\t* testsuite/binutils-all/readelf-maskos-1a.d: New test.\n+\t* testsuite/binutils-all/readelf-maskos-1b.d: New test.\n+\t* testsuite/binutils-all/readelf-maskos.s: New test.\n+\t* testsuite/binutils-all/retain1.s: New test.\n+\t* testsuite/binutils-all/retain1a.d: New test.\n+\t* testsuite/binutils-all/retain1b.d: New test.\n+\n+2020-11-17  Howard Chu  <hyc@symas.com>\n+\n+\t* ar.c (main): Place the libdeps record in the second archive\n+\tslot.\n+\n+2020-11-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26829\n+\t* dwarf.c (struct dwo_info): Add cu_offset field.\n+\t(add_dwo_info): Add cu_offset parameter.  Record in new dwo_info\n+\tstruct.\n+\t(add_dwo_name): Add cu_offset field.\n+\t(add_dwo_dir): Add cu_offset field.\n+\t(add_dwo_id): Add cu_offset field.\n+\t(read_and_display_attr_value): Pass cu_offset to dwo recording\n+\tfunctions.\n+\t(load_separate_debug_files): Accumulate name, dir and id values\n+\tand display once for each CU.\n+\t* testsuite/binutils-all/dwo.sL Use a separate CU for the second\n+\tdwo link.\n+\t* testsuite/binutils-all/readelf.k2: Update expected output.\n+\n+2020-11-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* dwarf.c (display_debug_rnglists_list): Only bias the\n+\tDW_RLS_offset_pair with the base address.\n+\n+2020-11-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (skip_attr_bytes): Correctly handle DW_FORM_ref8.\n+\t(get_type_abbrev_from_form): Accept DW_FORM_ref8.\n+\n+2020-11-09  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* Makefile.am (development.exp): Fix regexp.\n+\t* Makefile.in: Regenerate.\n+\n+2020-11-09  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26847\n+\t* dwarf.c (read_and_display_attr_value): In wide mode, display the\n+\tname of the form.\n+\n+2020-11-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfedit (usage): Avoid false positive \"may be used uninitialised\".\n+\tDon't leak memory.\n+\n+2020-11-09  Howard Chu  <hyc@symas.com>\n+\n+\t* ar.c (main): Use plugin_target rather than \"target\" when\n+\tresetting libdeps_bfd target.\n+\n+2020-11-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elfedit.c: Include \"libiberty.h\".\n+\t(usage): Update help message.\n+\n+2020-11-03  Howard Chu  <hyc@symas.com>\n+\n+\t* ar.c (long_options): Add --record-libdeps.\n+\t(usage): Mention the new option.\n+\t(decode_options): Handle the new option.\n+\t(replace_members): If necessary, create a bfd to hold the libdeps\n+\tdescription.\n+\t* binemul.c (ar_emul_append_bfd): New function.\n+\t(ar_emul_replace_bfd): New function.\n+\t(ar_emul_default_append): Replace file_name and target arguments\n+\twith new_bfd argument.\n+\t(ar_emul_default_replace): Likewise.\n+\t* binemul.h: Update prototypes.\n+\t(struct bin_emulation_xfer_struct): Update fields.\n+\t* doc/binutils.texi: Document the new option.\n+\t* NEWS: Mention the new feature.\n+\t* emul_aix.c (ar_emul_aix_append): Update.\n+\t(ar_emul_aix_replace): Likewise.\n+\t* testsuite/binutils-all/ar.exp: Add test of new feature.\n+\n+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/26703\n+\t* readelf.c (decode_x86_isa): Handle\n+\t* GNU_PROPERTY_X86_ISA_1_BASELINE.\n+\t* testsuite/binutils-all/i386/empty.d: Updated.\n+\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n+\n+2020-10-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/26808\n+\t* dwarf.c (abbrev_list): Add abbrev_base.\n+\t(new_abbrev_list): Add an abbrev_base argument and record it.\n+\t(find_abbrev_list_by_abbrev_offset): Add an abbrev_base argument\n+\tand match it.\n+\t(process_debug_info): Pass abbrev_base to new_abbrev_list and\n+\tfind_abbrev_list_by_abbrev_offset.\n+\t(display_debug_abbrev): Pass 0 abbrev_base to new_abbrev_list\n+\tand find_abbrev_list_by_abbrev_offset.\n+\t* testsuite/binutils-all/x86-64/pr26808.dump: New file.\n+\t* testsuite/binutils-all/x86-64/pr26808.dwp.bz2: Likewise.\n+\t* testsuite/binutils-all/x86-64/x86-64.exp: Run PR binutils/26808\n+\ttest.\n+\n+2020-10-29  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26805\n+\t* objcopy.c (is_dwo_section): Check for missing or short section\n+\tnames.\n+\n+2020-10-26  Andreas Rammhold <andreas@rammhold.de>\n+\n+\t* README-how-to-make-a-release: Use sha256sum instead of md5sum.\n+\n+2020-10-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26795\n+\t* elfedit.c (process_archive): Remove spurious call to free().\n+\n+2020-10-27  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (struct abbrev_list): New structure.  Used to collect\n+\tlists of abbreviation sets.\n+\t(struct abbrev_map): New structure.  Used to map CU offsets to\n+\tabbreviation offsets.\n+\t(record_abbrev_list): New function.  A new entry to an\n+\tabbreviation list.\n+\t(free_all_abbrevs): Update to free abbreviation lists.\n+\t(new_abbrev_list): New function.  Start a new abbreviation\n+\tlist.\n+\t(find_abbrev_list_by_abbrev_offset): New function.\n+\t(find_abbrev_map_by_offset): New function.\n+\t(add_abbrev): Add abbrev_list parameter.\n+\t(add_abbrev_attr): Likewise.\n+\t(process_abbrev_section): Rename to process_abbrev_set and add\n+\tlist parameter.\n+\t(get_type_abbrev_from_form): New function.  Attempts to decode the\n+\tforms used by DW_AT_type attributes.\n+\t(get_type_signedness): Display type names if operating in wide\n+\tmode.  Use get_type_abbrev_from_form.\n+\t(read_and_display_attr_value): Use get_type_abbrev_from_form.\n+\t(process_debug_info): Pre-parse the CU headers to collate all the\n+\tabbrevs before starting the main scan.\n+\t(process_debug_abbrev): Do not free any loaded abbrevs.\n+\t(free_debug_memory): Free the abbrev maps.\n+\n+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Report\n+\terror message on error.\n+\n+2020-10-22  Dr. David Alan Gilbert  <dgilbert@redhat.com>\n+\n+\t* windmc.c (write_header_define): Fix printf format.\n+\t(write_header): Likewise.\n+\n+2020-10-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (skip_attr_bytes): Accept DWARF versions higher than 4\n+\twhen processing the DW_FORM_ref_addr form.\n+\tSkip bytes in DW_FORM_block and DW_FORM_exprloc forms.\n+\tHandle DW_FORM_indirect.\n+\t(get_type_signedness): Allow a limited amount of recursion.\n+\tDo not attempt to decode types that use the DW_FORM_ref_addr form.\n+\t(read_and_display_attr_value): \tDo not attempt to decode types\n+\tthat use the DW_FORM_ref_addr form.\n+\n+2020-10-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c: Delete whitespace at end of line throughout.\n+\t(SECTION_NAME, SECTION_NAME_VALID): New.\n+\t(SECTION_NAME_PRINT): Rename from SECTION_NAME.  Formatting.\n+\t(printable_section_name, dump_relocations): Use SECTION_NAME_PRINT.\n+\t(process_section_headers, process_section_groups): Likewise.\n+\t(shdr_to_ctf_sect): Likewise.\n+\t(find_section, find_section_in_set): Use SECTION_NAME_VALID.\n+\t(ia64_process_unwind, hppa_process_unwind): Likewise.\n+\t(display_debug_section, initialise_dumps_byname): Likewise.\n+\t(process_lto_symbol_tables): Likewise.  Check trailing period of\n+\tlto symbol table names.\n+\t(display_lto_symtab): Use sizeof instead of strlen.\n+\n+2020-10-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* MAINTAINERS (RISC-V): Add myself as RISC-V co-maintainer.\n+\n+2020-10-19  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (do_lto_syms): New local.\n+\t(long_option_values): Add OPTION_LTO_SYMS.\n+\t(options): Add --lto-syms.\n+\t(usage): Mention the new option.\n+\t(parse_args): Parse the new option.\n+\t(get_lto_kind): New function.\n+\t(get_lto_visibility): New function.\n+\t(get_lto_sym_type): New function.\n+\t(display_lto_symtab): New function - displays the contents of an\n+\tLTo symbol table section.\n+\t(process_lto_symbol_tables): New functions.  Calls\n+\tdipslay_lto_symtab on any LTO symbol table section.\n+\t(process_object_file): Call process_lto_symbol_tables.\n+\t* doc/binutils.texi: Document the new option.\n+\t* NEWS: Mention the new feature.\n+\n+2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/26703\n+\t* readelf.c (decode_x86_compat_2_isa): New function.\n+\t(decode_x86_isa): Updated for new X86_ISA_1_XXX bits.\n+\t(decode_x86_feature_1): Handle GNU_PROPERTY_X86_FEATURE_2_MASK.\n+\t(print_gnu_property_note): Handle X86_COMPAT_2_ISA_1_USED,\n+\tand X86_COMPAT_2_ISA_1_NEEDED.\n+\t* testsuite/binutils-all/i386/pr21231b.s: Updated to the current\n+\tGNU_PROPERTY_X86_ISA_1_USED and GNU_PROPERTY_X86_ISA_1_NEEDED\n+\tvalues.\n+\t* testsuite/binutils-all/x86-64/pr21231b.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.s: Likewise.\n+\t* testsuite/binutils-all/i386/empty.d: Updated.\n+\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n+\n+2020-10-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (copy_object): Compare input and output sections by\n+\tpointer rather than name.\n+\n+2020-10-05  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26698\n+\t* windmc.c (mc_unify_path): Fix typo checking character at end of\n+\tpathname.\n+\n+2020-10-05  Samanta Navarro  <ferivoz@riseup.net>\n+\n+\t* doc/binutils.texi: Fix spelling mistakes.\n+\n+2020-09-29  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf.c (display_loclists_list): Handle DW_LLE_start_end and\n+\tDW_LLE_start_length. Only add base_address for DW_LLE_offset_pair.\n+\n+2020-09-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfcomm.c (byte_put_little_endian, byte_put_big_endian): Support\n+\tmore field sizes.\n+\t* readelf.c (target_specific_reloc_handling <MSP430>): Limit\n+\tallowed reloc_size.  Don't read_leb128 outside of section.\n+\n+2020-09-23  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf.c (process_debug_info): Print Unit Type for DWARF5.\n+\t* testsuite/binutils-all/dw5.W: Adjust expected output.\n+\t* testsuite/binutils-all/dwarf-attributes.W: Likewise.\n+\n+2020-09-23  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf.c (read_and_display_attr_value): Handle DW_FORM_ref_addr\n+\tfor dwarf_version 5 just as version 3 and 4 (only 2 is\n+\tdifferent).\n+\t(process_debug_info): Allow DW_UT_partial.\n+\n+2020-09-24  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26662\n+\t* doc/binutils.texi (nm): Document that 'c' is used for small\n+\tcommon symbols.\n+\n+2020-09-21  Ludovic Court\u00e8s  <ludo@gnu.org>\n+\n+\t* doc/binutils.texi (objcopy, strip): Say that\n+        '--strip-unneeded' implies '--strip-debug'.\n+\n+2020-09-16  Anatoly Parshintsev  <kupokupokupopo@gmail.com>\n+\n+       * verilog.c (verilog_write_address): Properly handle 64-bit\n+\taddresses to avoid truncation of the high part.\n+\n+2020-09-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* nm.c (print_symbol): Adjust elf_symbol_from invocation.\n+\t* objcopy.c (is_hidden_symbol): Likewise.\n+\n+2020-09-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release (https): Add a reminder to create a\n+\tnew Bugzilla tag for the point release, once it has been published.\n+\n+2020-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (get_note_type): Support NT_X86_CET.\n+\n+2020-09-11  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26595\n+\t* dwarf.c (load_separate_debug_info): Return NULL rather than\n+\tFALSE in error situations.\n+\t(load_separate_debug_file): Move code to load debug links to ...\n+\t(check_for_and_load_links): ... here.  New function.  Load\n+\tseparate debug information pointed to by debuglink and\n+\tdebugaltlink sections.  Recursively scan newly loaded debug\n+\tinformation for more links and load them too.\n+\n+2020-09-09  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26578\n+\t* dwarf.c (parse_gnu_debugaltlink): Don't alloc build_id_data.\n+\t(load_separate_debug_files): Use a stack var for build_id_data.\n+\n+2020-09-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26587\n+\t* testsuite/binutils-all/objcopy.exp: Pass --disable-reloc-section\n+\tto ld on PE targets for PR 25662 test.\n+\n+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\tKuan-Lin Chen  <kuanlinchentw@gmail.com>\n+\n+\t* readelf.c (target_specific_reloc_handling): Handle\n+\tR_MSP430{,X}_GNU_{SET,SUB}_ULEB128.\n+\n+2020-09-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (disassemble_bytes): Use an unsigned type for \"addend\".\n+\n+2020-08-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (print_gnu_build_attribute_name): Use unsigned long\n+\tlong for \"bytes\".\n+\n+2020-08-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26548\n+\t* dwarf.c (read_leb128): When checking for overflow of a signed\n+\tread, use a signed shift.\n+\n+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* readelf.c (get_csky_section_type_name): New.\n+\t(get_section_type_name): Add handler for CSKY.\n+\t(display_csky_attribute): New.\n+\t(process_arch_specific): Add handler for CSKY.\n+\t* testsuite/binutils-all/strip-3.d: Remove .csky.attributes\n+\tsection.\n+\n+2020-08-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* readelf.c (get_msp430x_section_type_name): Rename to ...\n+\t(get_msp430_section_type_name): ... this.\n+\t(get_section_type_name): Use get_msp430_section_type_name.\n+\t(display_msp430x_attribute): Rename to ...\n+\t(display_msp430_attribute): ... this.\n+\t(process_arch_specific): Use display_msp430_attribute.\n+\n+2020-08-27  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR 26356\n+\t* testsuite/binutils-all/objcopy.exp (objcopy --reverse-bytes): Add\n+\t\"-j $PRIVATE$\" to command on hppa*-*-hpux*.\n+\t* testsuite/lib/utils-lib.exp (default_binutils_run): Remove existing\n+\tdollar-sign quotes before quoting.  Do this prior to generating log\n+\toutput.\n+\n+2020-08-27  Ralf Habacker  <ralf.habacker@freenet.de>\n+\n+\tPR 26088\n+\t* mclex.c (skip_until_eol): If eol was found, increment line\n+\tnumber.\n+\n+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf_errs): Unquote CTF error messages.\n+\t* readelf.c (dump_ctf_errs): Likewise.\n+\n+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf_archive_member): Move error-\n+\treporting...\n+\t(dump_ctf_errs): ... into this separate function.\n+\t(dump_ctf): Call it on open errors.\n+\t* readelf.c (dump_ctf_archive_member): Move error-\n+\treporting...\n+\t(dump_ctf_errs): ... into this separate function.  Support\n+\tcalls with NULL fp. Adjust for new err parameter to\n+\tctf_errwarning_next.\n+\t(dump_section_as_ctf): Call it on open errors.\n+\n+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.am (readelf_LDADD): Move $(LIBINTL) after $(LIBCTF_NOBFD).\n+\t* Makefile.in: Regenerated.\n+\n+2020-08-26  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26405\n+\t* readelf.c (get_segment_type): Handle OpenBSD segment types.\n+\n+2020-08-26  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26412\n+\t* objcopy.c (copy_object): Don't fwrite NULL contents.\n+\n+2020-08-26  Katayama Hirofumi  <katayama.hirofumi.mz@gmail.com>\n+\n+\tPR 26340\n+\t* rcparse.y (AUTOCHECKBOX): Add WS_TABSTOP to the base style.\n+\n+2020-08-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (dump_section_as_strings) Avoid false positive\n+\t\"may be used uninitialised\".\n+\n+2020-08-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26382\n+\t* nm.c (print_symname): Display only one '@' for undefined\n+\tversioned symbols.\n+\t* doc/binutils.texi: Update nm version information.\n+\n+2020-08-21  Mark Wielaard  <mark@klomp.org>\n+\n+\t* testsuite/binutils-all/readelf.exp (readelf_wi_test): Also\n+\trecognize DW_LANG_C11.\n+\n+2020-08-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26349\n+\t* readelf.c (dump_relocations): Use BFD_VMA_FMT to print offset\n+\tand info fields.\n+\t(dump_section_as_strings): Don't use %tx to display offset.\n+\n+2020-08-14  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26388\n+\t* dwarf.c (free_debug_memory): Free alloc_num_debug_info_entries\n+\tof debug_information.  Correct test of max_loc_offsets and\n+\tmax_range_lists.\n+\t* rddbg.c (read_debugging_info): Free dhandle on error.\n+\n+2020-08-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/mangled.s: Use dc.a rather than dc.d.\n+\n+2020-08-13  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26348\n+\t* objcopy.c (copy_object): Report file name with endian error.\n+\tError and return on abfd->read_only.\n+\n+2020-08-12  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf-mode.el (Version): Now 1.6.\n+\t(dwarf-die-button-action): Tighten DIE reference regexp.\n+\t(dwarf-font-lock-keywords): Update name regexp.\n+\n+2020-08-12  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR binutils/26331\n+\t* readelf.c (do_demangle): New option flag.\n+\t(print_symbol): If do_demangle is enabled, demangle the symbol.\n+\t(enum long_option_values): New enum to hold long option values.\n+\t(options): Add demangle, no-demangle, recursion-limit and\n+\tno-recursion-limit options.  Alpha sort the table.\n+\t(usage): Describe the new options.\n+\t(parse_args): Handle the new options.\n+\t* NEWS: Mention the new feature.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* testsuite/binutils-all/readelf.exp: Test the new feature.\n+\t* testsuite/binutils-all/mangled.s: New file - assembler source.\n+\t* testsuite/binutils-all/readelf.demangled: New file - expected\n+\toutput from readelf.\n+\n+2020-08-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sr.po: Updated Serbian translation.\n+\n+2020-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/26302\n+\t* nm.c (with_symbol_versions): Removed.\n+\t(long_option_values): Add OPTION_WITH_SYMBOL_VERSIONS.\n+\t(long_options): Update --with-symbol-versions entry.\n+\t(print_symbol): Remove the with_symbol_versions check.\n+\t(main): Add OPTION_WITH_SYMBOL_VERSIONS for backward\n+\tcompatibility.\n+\t* doc/binutils.texi: Remove --with-symbol-versions.\n+\n+2020-08-05  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26337\n+\t* objdump.c (load_specific_debug_section): Revert last change.\n+\n+2020-08-05  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26337\n+\t* objdump.c (load_specific_debug_section): Don't malloc space for\n+\tsection contents, use bfd_malloc_and_get_section.\n+\n+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.\n+\t* Makefile.in, doc/Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2020-07-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/i386/compressed-1a.d: Pass --gdwarf-3\n+\tto assembler.\n+\t* testsuite/binutils-all/i386/compressed-1b.d: Likewise.\n+\t* testsuite/binutils-all/i386/compressed-1c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/compressed-1a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/compressed-1b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/compressed-1c.d: Likewise.\n+\n+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* testsuite/binutils-all/mips/global-local-symtab-sort-o32.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-sort-o32t.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-sort-n32.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-sort-n32t.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-sort-n64.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-sort-n64t.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-final-o32.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-final-n32.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/global-local-symtab-final-n64.d:\n+\tNew test.\n+\t* testsuite/binutils-all/mips/mips.exp: Run the new tests.\n+\n+2020-07-29  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* testsuite/binutils-all/mips/global-local-symtab-o32.d: New\n+\ttest.\n+\t* testsuite/binutils-all/mips/global-local-symtab-o32t.d: New\n+\ttest.\n+\t* testsuite/binutils-all/mips/global-local-symtab-n32.d: New\n+\ttest.\n+\t* testsuite/binutils-all/mips/global-local-symtab-n32t.d: New\n+\ttest.\n+\t* testsuite/binutils-all/mips/global-local-symtab-n64.d: New\n+\ttest.\n+\t* testsuite/binutils-all/mips/mips.exp: Run the new tests.\n+\n+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/26301\n+\t* configure: Regenerated.\n+\n+2020-07-28  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/26301\n+\t* configure: Regenerated.\n+\n+2020-07-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (dump_section): Don't return without calling\n+\tprocess_section_p.\n+\n+2020-07-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* doc/binutils.texi: Replace preceeded with preceded.\n+\n+2020-07-26  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* testsuite/binutils-all/mips/mips.exp (run_dump_test_abi)\n+\t(run_dump_test_o32, run_dump_test_n32, run_dump_test_n64): New\n+\tprocedures.\n+\t(has_newabi): Remove variable.\n+\t(has_abi, abi_asflags, abi_ldflags): New associative array\n+\tvariables.\n+\t(irixemul): New variable.\n+\tReplace `run_dump_test' calls where applicable throughout with\n+\t`run_dump_test_o32', `run_dump_test_n32' and `run_dump_test_n64'\n+\tas appropriate.  Use `noarch' for tests that require their own\n+\tarchitecture setting.\n+\t* testsuite/binutils-all/mips/mips-ase-1.d: Remove GAS flags.\n+\t* testsuite/binutils-all/mips/mips-ase-2.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-ase-3.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2-n32.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2-n64.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r-n32.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r-n64.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-reginfo-n32.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-reginfo.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-extend-noinsn.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-pcrel.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-alias.d: Remove `-32' from\n+\tGAS flags.\n+\t* testsuite/binutils-all/mips/mips16-extend-insn.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-noalias.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16-undecoded.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16e2-extend-insn.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips16e2-undecoded.d: Likewise.\n+\t* testsuite/binutils-all/mips/mixed-micromips.d: Likewise.\n+\t* testsuite/binutils-all/mips/mixed-mips16.d: Likewise.\n+\n+2020-07-24  Aaron Merey  <amerey@redhat.com>\n+\n+\t* Makefile.am: Replace LIBDEBUGINFOD with DEBUGINFOD_LIBS.\n+\t* Makefile.in: Rebuild.\n+\t* configure: Rebuild.\n+\t* doc/Makefile.in: Rebuild.\n+\n+2020-07-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Various small updates whilst\n+\tcreating the 2.35 release.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* testsuite/lib/binutils-common.exp (run_dump_test): Add 'cc'\n+\toption.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (dump_ctf_archive_member): Remove linefeeds.\n+\t(dump_ctf): Likewise.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* objdump.c (ctf_archive_member): Print CTF errors and warnings.\n+\t* readelf.c (dump_ctf_archive_member): Likewise.\n+\n+2020-07-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (parse_args): Silence potential warnings about a\n+\tmemory resource leak when allocating space for ctf option values.\n+\t(dump_section_as_ctf): Fix typo checking dump_ctf_strtab_name\n+\tvariable.\n+\n+2020-07-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2020-07-14  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* testsuite/binutils-all/arc/double_regs.s: New test.\n+\t* testsuite/binutils-all/arc/objdump.exp: Add the above test.\n+\n+2020-07-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\n+2020-07-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (is_pecoff_format): Accept\n+\toptional machine-os arg.\n+\n+2020-07-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (decode_x86_feature_2): Handle\n+\tGNU_PROPERTY_X86_FEATURE_2_TMM.\n+\n+2020-07-10  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf.c (display_debug_lines_decoded): Don't emit meaningless\n+\tinformation in the end_sequence row.\n+\t* testsuite/binutils-all/dw5.W: Update.\n+\t* testsuite/binutils-all/objdump.WL: Update.\n+\n+2020-07-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* dlltool.c: Remove powerpc PE support and comments.\n+\t* configure.ac: Remove powerpc PE dlltool config.\n+\t* configure: Regenerate.\n+\n+2020-07-09  Nick Clifton  <nickc@redhat.com>\n+\n+\t* rclex.c: Add OWNERDRAW keyword.\n+\t* rcparse.y: Add OWNERDRAW token.\n+\t(menuitem_flag) Add BITMAP and OWNERDRAW entries.\n+\t* resrc.c (write_rc_menuitems): Add support for OWNERDRAW and\n+\tBITMAP flags.\n+\t* windres.c (extended_menuitems): Likewise.\n+\t* testsuite/binutils-all/windres/menuitem_flags.rc: New test.\n+\n+2020-07-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf (slurp_hppa_unwind_table): Set table_len before use\n+\tin relocation sanity checks.\n+\n+2020-07-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/ar.exp: Use is_xcoff_format.\n+\t* testsuite/binutils-all/nm.exp: Likewise.\n+\t* testsuite/binutils-all/copy-2.d: Run only for elf and pe targets.\n+\t* testsuite/binutils-all/copy-3.d: Run only for elf targets.\n+\t* testsuite/binutils-all/set-section-alignment.d: Likewise.\n+\t* testsuite/binutils-all/copy-4.d: Don't run for xcoff.\n+\n+2020-07-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (is_xcoff_format): New.\n+\t* testsuite/binutils-all/objcopy.exp (pr25662): Exclude xcoff.\n+\n+2020-07-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/bg.po: Updated Bulgarian translation.\n+\t* po/pt.po: Updated Portuguese translation.\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2020-07-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (print_dynamic_symbol): Don't sprintf to buffer to\n+\tfind string length.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* po/binutils.pot: Regenerate.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.35 branch created.\n+\n+2020-07-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26028\n+\t* readelf.c (print_symbol): Handle truncation of symbol names.\n+\t(options): Add -T/--silent-truncation option.\n+\t(parse_args): Handle the option.\n+\t(print_dynamic_symbol): Correct calculation of width available to\n+\tdisplay symbol name.\n+\t* doc/binutils.texi: Document the -T option to readelf.\n+\t* NEWS: Mention the new feature.\n+\n+2020-06-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* NEWS: Mention x86 NaCl target support removal.\n+\t* dwarf.c (init_dwarf_regnames_by_bfd_arch_and_mach): Remove\n+\tx86 NaCl target support.\n+\t* testsuite/binutils-all/elfedit-1.d: Likewise.\n+\t* testsuite/binutils-all/i386/i386.exp: Likewise.\n+\t* testsuite/binutils-all/x86-64/objects.exp: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.\n+\n+2020-06-30  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (read_and_display_attr_value): Support\n+\tDW_FORM_GNU_strp_alt when used with DW_AT_dwo_name and\n+\tDW_AT_comp_dir.\n+\n+2020-06-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/readelf.exp (readelf_dump_test): Remove\n+\txfail for nds32.\n+\n+2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* dwarf.c (display_debug_str_offsets): Rename local variable\n+\tindex to idx.  Move to top of function.\n+\n+2020-06-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c: Use C style comments.\n+\t* resrc.c: Likewise.\n+\n+2020-06-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfcomm.c (setup_nested_archive): Set nested_arch->file to NULL\n+\tafter freeing.\n+\t(release_archive): Set fields of arch to NULL after freeing.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* readelf.c (dump_section_as_ctf): Support .ctf archives using\n+\tctf_arc_bufopen.  Automatically load the .ctf member of such\n+\tarchives as the parent of all other members, unless specifically\n+\toverridden via --ctf-parent.  Split out dumping code into...\n+\t(dump_ctf_archive_member): ... here, as in objdump, and call\n+\tit once per archive member.\n+\t(dump_ctf_indent_lines): Code style fix.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac [--enable-libctf]: New, default yes.\n+\tSet ENABLE_LIBCTF accordingly.\n+\t* Makefile.am [!ENABLE_LIBCTF]: Empty LIBCTF and LIBCTF_NOBFD.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* objdump.c (usage): Conditionalize portions on ENABLE_LIBCTF.\n+\t(option_values): Likewise.\n+\t(long_options): Likewise.\n+\t(main): Likewise.\n+\t(dump_ctf_indent_lines): Conditionalize out when !ENABLE_LIBCTF.\n+\t(make_ctfsect): Likewise.\n+\t(dump_ctf_archive_member): Likewise.\n+\t(dump_ctf) [ENABLE_LIBCTF]: Likewise.\n+\t(dump_ctf) [!ENABLE_LIBCTF]: New empty stub.\n+\t* readelf.c (options): Conditionalize portions on ENABLE_LIBCTF.\n+\t(usage): Likewise.\n+\t(process_section_contents): Likewise.\n+\t(shdr_to_ctf_sect): Conditionalize out when !ENABLE_LIBCTF.\n+\t(dump_ctf_indent_lines): Likewise.\n+\t(dump_section_as_ctf) [ENABLE_LIBCTF]: Likewise.\n+\n+2020-06-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* doc/binutils.texi: Adjust description of x86's -Msuffix. Drop\n+\tredundant text from x86 specific part of -M section.\n+\n+2020-06-26  Pat Bernardi  <bernardi@adacore.com>\n+\n+\t* readelf.c (display_m68k_gnu_attribute): New function.\n+\t(process_arch_specific): Call display_m68k_gnu_attribute for EM_68K.\n+\n+2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/26160\n+\t* testsuite/binutils-all/pr26160.dwp.bz2: New file.\n+\t* testsuite/binutils-all/pr26160.r: Likewise.\n+\t* testsuite/binutils-all/readelf.exp: Run PR binutils/26160 test.\n+\n+2020-06-23  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26160\n+\t* dwarf.c (fetch_indexed_string): Detect and handle old style\n+\t.debug_str_offset tables.\n+\t(display_debug_str_offsets): Likewise.  Also add support for\n+\t.debug_str_offsets.dwo sections.\n+\n+2020-06-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/26112\n+\t* testsuite/binutils-all/pr26112.o.bz2: New file.\n+\t* testsuite/binutils-all/pr26112.r: Likewise.\n+\t* testsuite/binutils-all/readelf.exp: Run PR binutils/26112 test.\n+\n+2020-06-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objdump.exp (bintest.a): Correct\n+\tremote_file delete command.\n+\n+2020-06-22  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26112\n+\t* dwarf.c (display_debug_str_offsets): Add code to display the\n+\tcontents of the .debug_str_offsets section.\n+\t(display_debug_macro): Add support for DW_MACRO_define_strx and\n+\tDW_MACRO_undef_strx.\n+\n+2020-06-22  Saagar Jha  <saagar@saagarjha.com>\n+\n+\t* od-macho.c: Dump linkedit data for new load commands.\n+\n+2020-06-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.\n+\t* testsuite/lib/binutils-common.exp (check_relro_support): New proc.\n+\t(run_dump_test): Use check_relro_support to decide whether to pass\n+\textra ld option \"-z norelro\".\n+\n+2020-06-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_mips_specific): Don't alloc memory for\n+\tElf_Internal_Options.\n+\n+2020-06-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_mips_specific): Assert size of internal\n+\ttypes match size of external types, and simplify allocation of\n+\tinternal buffer.  Catch possible integer overflow when sanity\n+\tchecking option size.  Don't assume options are a regular array.\n+\tSanity check reginfo option against option size.  Use PRI macros\n+\twhen printing.\n+\n+2020-06-10  Ralf Habacker  <ralf.habacker@freenet.de>\n+\n+\tPR 26082\n+\t* mclex.c (yylex): Reject lines that reach end-of-file without a\n+\tterminating newline character.\n+\n+2020-06-08  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26093\n+\t* doc/binutils.texi (strings): Fix typo.\n+\n+2020-06-08  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26086\n+\t* dwarf.c (process_debug_info): Check that there is space in the\n+\tdebug_information array before filling in an entry.\n+\n+2020-06-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* doc/binutils.texi (PowerPC -M option): Mention power10 and pwr10.\n+\n+2020-06-05  Joel Anderson  <joelanderson333@gmail.com>\n+\n+\tPR 26082\n+\t* mclex.c (yylex): Add test for an empty input stream.\n+\n+2020-06-04  Stephen Casner  <casner@acm.org>\n+\n+\t* testsuite/binutils-all/pr25662-pdp11.s: Alternate source file\n+\tfor test using section pseudo-ops compatible with pdp11.\n+\t* testsuite/binutils-all/objcopy.exp: Select alternate source.\n+\n+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* objdump.c (disassemble_data): Set disasm_info.endian_code to\n+\tdisasm_info.endian after the latter is initialized to the\n+\tendianness reported by BFD.\n+\n+2020-06-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/i386/i386.exp: Remove global directive\n+\toutside proc body.\n+\t* testsuite/binutils-all/x86-64/objects.exp: Likewise.\n+\t* testsuite/binutils-all/x86-64/x86-64.exp: Likewise.\n+\n+2020-06-03  Joel Anderson  <joelanderson333@gmail.com>\n+\n+\t* windmc.h (struct mc_node): Add id_typecast field.\n+\t* mcparse.y (message): Initialise the id_typecast field.\n+\t* windmc.c (write_dbg): Use the id_typecast field as a parameter\n+\twhen calling write_dbg_define.\n+\t(write_header): Likewise.\n+\n+2020-06-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26069\n+\t* objcopy.c (copy_relocations_in_section): Free relpp on error.\n+\tDon't accidentally free isection->orelocation.\n+\n+2020-06-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/ar.exp (obj): Set up object file name\n+\textension.  Use throughout.  Don't completely exclude non-ELF\n+\talpha targets.  Run long_filenames test for tic30.  Exclude thin\n+\tarchive tests for aix, ecoff and vms.\n+\t* estsuite/binutils-all/objdump.exp (obj): Set up object file name\n+\textension.  Use throughout.  Don't exclude non-ELF alpha targets\n+\tfrom \"bintest.a\".\n+\n+2020-05-28  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* MAINTAINERS (Xtensa): Add myself as maintainer.\n+\n+2020-05-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/ar.exp (many_files): New test.\n+\n+2020-05-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* addr2line.c: Replace \"if (x) free (x)\" with \"free (x)\" throughout.\n+\t* dlltool.c: Likewise.\n+\t* elfcomm.c: Likewise.\n+\t* rddbg.c: Likewise.\n+\t* readelf.c: Likewise.\n+\t* stabs.c: Likewise.\n+\t* windmc.c: Likewise.\n+\t* windres.c: Likewise.\n+\t* wrstabs.c: Likewise.\n+\n+2020-05-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_num_dynamic_syms): Bounds check mipsxlat array\n+\taccess.\n+\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* dwarf.c: Updated since DECLARE_CSR is changed.\n+\n+2020-05-19  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR binutils/25809\n+\t* readelf.c (process_program_headers): Warn if the PT_DYNAMIC\n+\tsegment doesn't match the .dynamic section and checks are\n+\tenabled.\n+\t(struct filedata): Add dynamic_symtab_section and\n+\tdynamic_strtab_section fields.\n+\t(process_section_headers): Set dynamic_symtab_section to the\n+\t.dynsym section.  Set dynamic_strtab_section to the .dynstr\n+\tsection.\n+\t(process_dynamic_section): Warn if the .dynsym section doesn't\n+\tmatch DT_SYMTAB and DT_SYMENT or the .dynstr section doesn't\n+\tDT_STRTAB and DT_STRSZ.  But only if checks are enabled.\n+\n+2020-05-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* ar.c (map_over_members, get_pos_bfd, delete_members, move_members),\n+\t(replace_members): Use bfd_get_filename rather than accessing\n+\tbfd->filename directly.\n+\t* arsup.c (map_over_list, ar_delete, ar_replace, ar_extract): Likewise.\n+\t* binemul.c (do_ar_emul_append): Likewise.\n+\t* coffgrok.c (coff_grok): Likewise.\n+\n+2020-05-18  Stafford Horne  <shorne@gmail.com>\n+\n+\t* MAINTAINERS (OR1K): Add myself as maintainer.\n+\n+2020-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* doc/binutils.texi: Mention 'entry address' in the set-start and\n+\tadjust-start options descriptions.\n+\n+2020-05-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (do_checks): New global variable.\n+\t(display_formatted_table): Warn about an unexpected number of\n+\tcolumns in the table, if checks are enabled.  Do not complain\n+\tabout the lack of data following the number of entries in the\n+\ttable if the table is empty.\n+\t(display_debug_lines_decoded): Only warn about an unexpected\n+\tnumber of columns in a table if checks are enabled.\n+\t* dwarf.h (do_checks): Add a prototype.\n+\t* elfcomm.c (error): Remove weak attribute.\n+\t(warn): Likewise.\n+\t* readelf.c (do_checks): Delete.\n+\t(warn): Delete.\n+\t(process_section_headers): Only warn about empty sections if\n+\tchecks are enabled.\n+\n+2020-05-04  Fangrui Song   <maskray@google.com>\n+\n+\t* objcopy.c (copy_object): Allow empty section.\n+\t* testsuite/binutils-all/update-section.exp: Add test.\n+\n+2020-05-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25917\n+\t* dwarf.c (display_debug_lines_decoded): Warn if encountering a\n+\tsupicious number of entries for DWARF-5 format directory and file\n+\tname tables.  Do not display file name table header if the table\n+\tis empty.  Do not allocate space for empty tables.\n+\n+2020-05-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_nds32_specific): Check size of .nds32_e_flags\n+\tsection.  Don't assume endian of host matches nds32 target.  Free\n+\tbuffer.\n+\n+2020-05-01  Alan Modra  <amodra@gmail.com>\n+\t    Haim Shimonovich  <Haim.Shimonovich@ceva-dsp.com>\n+\n+\t* objdump.c (disassemble_bytes): Don't scan for zeros when\n+\tdisassembling zeros.  Translate \"resuming at file offset\" message.\n+\tFormatting.  Replace some signed variables with unsigned.\n+\n+2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* testsuite/binutils-all/aarch64/in-order-all.d: Update to use new\n+\tdisassembly.\n+\t* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.\n+\n+2020-04-30  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/lib/binutils-common.exp (check_pie_support): New\n+\tproc.\n+\n+2020-04-29  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (display_debug_ranges): Ignore duplicate entries in\n+\trange_entries for the same offset.\n+\n+2020-04-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (warn): New function - like elfcomm.c version but only\n+\tproduces output if warnings are enabled.\n+\t(struct options): Add --lint and --enable-checks.\n+\t(usage): Add entry for --lint.\n+\t(parse_args): Handle -L.  If checks are enabled but no dumps have\n+\tbeen selected then enable all dumps.\n+\t(process_section_headers): Replace long if-then-else sequence with\n+\ta switch.  Add warning messages for empty SHT_REL, SHT_RELA and\n+\tSHT_PROGBITS sections.\n+\t(process_file): Do not complain if the file is an archive and lint\n+\tmode has been enabled.\n+\t* elfcomm.c (error): Make the function weak.\n+\t(warn): Likewise.\n+\t* NEWS: Mention the new feature.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* dwarf.h (report_leb_status): Add file name and line number\n+\tparameters.  Include them in the diagnostic output.\n+\t(READ_ULEB): Pass file and line number to report_leb_status.\n+\t(READ_SLEB): Likewise.\n+\t* dwarf.c (read_and_print_leb128): Pass file and line number to\n+\treport_leb_status.\n+\t* testsuite/binutils-all/readelf.exp: Add test of new feature.\n+\t* testsuite/binutils-all/zero-sec.s: New test source file.\n+\t* testsuite/binutils-all/zero-sec.r: Expected output from new\n+\ttest.\n+\n+2020-04-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sr.po: Updated Serbian translation.\n+\n+2020-04-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_num_dynamic_syms): Check DT_MIPS_XHASH was\n+\tread before dereferencing, and gracefully return.  Remove\n+\tgnu_hash_error variable.  Free gnu hash arrays if number of\n+\tsyms found is zero.\n+\n+2020-04-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_num_dynamic_syms): Check for nbuckets and nchains\n+\tnon-zero.\n+\t(process_dynamic_section): Call get_num_dynamic_syms once rather\n+\tthan in segment loop.  Break out of segment loop on a successful\n+\tload of dynamic symbols.  Formatting.\n+\t(process_object): Return error status from process_dynamic_section.\n+\n+2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>\n+\n+\t* elf-bfd.h (elfcore_write_arc_v2): Add prototype.\n+\t* elf.c (elfcore_grok_arc_v2): New function.\n+\t(elfcore_grok_note): Call the new function to handle the corresponding\n+\tnote.\n+\t(elfcore_write_arc_v2): New function.\n+\t(elfcore_write_register_note): Call the new function to handle the\n+\tcorresponding pseudo-sections.\n+\n+2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR ld/25861\n+\t* readelf.c (is_none_reloc): Recognize\n+\tBFD_RELOC_XTENSA_PDIFF{8,16,32} and\n+\tBFD_RELOC_XTENSA_NDIFF{8,16,32}.\n+\n+2020-04-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* MAINTAINERS: Remove Chris Faylor as the ix86 PE maintainer.\n+\n+2020-04-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (archive_file_offset, archive_file_size, dynamic_addr),\n+\t(dynamic_size, dynamic_nent, dynamic_strings, dynamic_strings_length),\n+\t(num_dynamic_syms, nbuckets, nchains, buckets, chains),\n+\t(ngnubuckets, gnubuckets, gnuchains, mipsxlat, ngnuchains),\n+\t(gnusymidx, dynamic_symbols, dynamic_syminfo, dynamic_syminfo_offset),\n+\t(dynamic_syminfo_nent, program_interpreter, dynamic_info),\n+\t(dynamic_info_DT_GNU_HASH, dynamic_info_DT_MIPS_XHASH, version_info),\n+\t(dynamic_section, symtab_shndx_list, group_count, section_groups),\n+\t(section_headers_groups): Move to struct filedata.  Update use\n+\tthroughout file.\n+\n+2020-04-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (struct dump_data): New, used..\n+\t(cmdline): ..here, and..\n+\t(struct filedata): ..here.  Adjust all uses.\n+\t(request_dump_bynumber, request_dump, parse_args): Pass in a\n+\tstruct dump_data* rather than Filedata*.  Adjust callers.\n+\t(main): Don't set cmdline.file_name.\n+\n+2020-04-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_symbol_table): Clear ngnuchains, ngnubuckets\n+\tand nbuckets.\n+\n+2020-04-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_section_headers): Free dynamic symbols etc.\n+\tearlier.\n+\n+2020-04-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_num_dynamic_syms): Formatting.  Don't return\n+\ton error without freeing.\n+\t(process_dynamic_section): Don't recreate dynamic symbols from\n+\tdynamic tag info when the dynamic symbols have already been\n+\tread via section headers.\n+\n+2020-04-17  Fredrik Strupe  <fredrik@strupe.net>\n+\n+\t* testsuite/binutils-all/arm/vdup-cond.d: New test for testing that\n+\tconditional VDUP instructions are disassembled correctly.\n+\t* testsuite/binutils-all/arm/vdup-cond.s: New file used by\n+\tvdup-cond.d.\n+\t* testsuite/binutils-all/arm/vdup-thumb.d: New test for testing\n+\tthat VDUP instructions (which are conditional in A32) can be\n+\tdisassembled in thumb mode.\n+\t* testsuite/binutils-all/arm/vdup-cond.s: New file used by\n+\tvdup-thumb.d.\n+\n+2020-04-17  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25840\n+\t* debug.c (debug_class_type_samep): Don't segfault on NULL type.\n+\n+2020-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* doc/binutils.texi: Mention --no-show-raw-insn in objdump\n+\t--no-addresses description.\n+\n+2020-04-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (no_addresses): New static var.\n+\t(usage): Print help for --no-addresses.\n+\t(long_options): Add --no-addresses entry.\n+\t(objdump_print_addr_with_sym, objdump_print_addr): Omit symbol address.\n+\t(disassemble_bytes): Don't print current line address, or reloc\n+\taddress.\n+\t* doc/binutils.texi: Document objdump --no-addresses.\n+\n+2020-04-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25822\n+\t* readelf.c (get_num_dynamic_syms): Don't set num_of_syms when\n+\treading buckets or chains fails.\n+\n+2020-04-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_symbol_table): Zero gnubuckets, gnuchains\n+\tetc. after freeing.\n+\n+2020-04-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_group_flags): Translate text.\n+\t(get_file_type, get_symbol_binding, get_symbol_type),\n+\t(get_ppc64_symbol_other, get_symbol_other): Increase size of buffer.\n+\n+2020-04-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25821\n+\t* readelf.c (get_num_dynamic_syms): Typo fix.\n+\n+2020-04-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_mips_specific): Free eopt and iopt.  Avoid\n+\tpossibility of overflow when checking number of conflicts.\n+\n+2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/25707\n+\t* readelf.c (nbuckets): New.\n+\t(nchains): Likewise.\n+\t(buckets): Likewise.\n+\t(chains): Likewise.\n+\t(ngnubuckets): Likewise.\n+\t(gnubuckets): Likewise.\n+\t(gnuchains): Likewise.\n+\t(mipsxlat): Likewise.\n+\t(ngnuchains): Likewise.\n+\t(gnusymidx): Likewise.\n+\t(VALID_SYMBOL_NAME): Likewise.\n+\t(VALID_DYNAMIC_NAME): Use it.\n+\t(get_dynamic_data): Moved before process_dynamic_section.\n+\t(get_num_dynamic_syms): New function.\n+\t(process_dynamic_section): Use DT_SYMTAB, DT_SYMENT, DT_HASH,\n+\tDT_GNU_HASH and DT_MIPS_XHASH to reconstruct dynamic symbol\n+\ttable.  Use DT_STRTAB and DT_STRSZ to reconstruct dynamic string\n+\ttable.\n+\t(get_symbol_index_type): Don't print \"bad section index\" when\n+\tthere is no section header.\n+\t(print_dynamic_symbol): Rewrite.\n+\t(process_symbol_table): Call print_dynamic_symbol to dump dynamic\n+\tsymbol table.\n+\n+2020-04-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* testsuite/lib/binutils-common.exp (supports_gnu_osabi): Don't\n+\tenable on *-*-solaris*.\n+\n+2020-03-30  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR binutils/25662\n+\t* objcopy.c (copy_object): When copying PE format files set the\n+\ttimestamp field in the pe_data structure if the preserve_dates\n+\tflag is set.\n+\t* testsuite/binutils-all/objcopy.exp (objcopy_test) Use\n+\t--preserve-dates in place of the -p option, in order to make its\n+\teffect more obvious.\n+\n+2020-03-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Only\n+\tclear_xfail hppa*-*-*elf*.  Revert mips xfails.\n+\n+2020-03-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Move xfails\n+\tfrom here to calls.  Remove \"m8*-*-*\" entry.  Don't xfail tic54x\n+\tbut do xfail spu, mipstx39 and mips-sgi-irix for the executable\n+\ttest.  Pass \"-p\" to objcopy for the executable test.\n+\n+2020-03-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\tPR binutils/25662\n+\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Add argument to\n+\tspecify whether an object file or executable should be built and tested.\n+\tChange test names to report whether an object file or executable is\n+\tbeing tested.\n+\t* testsuite/binutils-all/pr25662.ld: New test.\n+\t* testsuite/binutils-all/pr25662.s: New test.\n+\n+2020-03-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_archive): Don't double free qualified_name.\n+\tDon't break out of loop with \"negative\" archive_file_size, just\n+\tset file offset to max.\n+\n+2020-03-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_archive): Prevent endless loop.\n+\n+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/25708\n+\t* nm.c (print_symname): Replace _bfd_elf_get_symbol_version_name\n+\twith bfd_get_symbol_version_string.\n+\t(print_symbo): Pass TRUE to bfd_get_symbol_version_string.\n+\t* objdump.c (objdump_print_symname): Likewise.\n+\n+2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/25708\n+\t* nm.c (SYM_NAME): Removed.\n+\t(print_symname): Add a pointer to struct extended_symbol_info\n+\targument.  Call _bfd_elf_get_symbol_version_name to get symbol\n+\tversion.\n+\t(print_symdef_entry): Pass NULL to print_symname.\n+\t(print_symbol_info_bsd): Update call to print_symname.\n+\t(print_symbol_info_sysv): Likewise.\n+\t(print_symbol_info_posix): Likewise.\n+\n+2020-03-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_mips_specific): Free iconf on error path.\n+\n+2020-03-23  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25714\n+\t* wrstabs.c (stab_pop_type): Replace assertion with error return.\n+\t* write_stabs_in_sections_debugging_info: Likewise.\n+\t* stab_enum_type: Likewise.\n+\t* stab_modify_type: Likewise.\n+\t* stab_struct_field: Likewise.\n+\t* stab_end_struct_type: Likewise.\n+\t* stab_start_class_type: Likewise.\n+\t* stab_class_static_member: Likewise.\n+\t* stab_class_baseclass: Likewise.\n+\t* stab_class_start_method: Likewise.\n+\t* stab_class_method_var: Likewise.\n+\t* stab_class_end_method: Likewise.\n+\t* stab_end_class_type: Likewise.\n+\t* stab_typedef_type: Likewise.\n+\t* stab_start_function: Likewise.\n+\t* stab_end_block: Likewise.\n+\t* stab_lineno: Likewise.\n+\n+2020-03-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (get_compression_header): Add ATTRIBUTE_WARN_UNUSED_RESULT.\n+\t(process_section_headers): Check the return value from\n+\tget_compression_header.\n+\t(dump_section_as_strings): Likewise.\n+\t(dump_section_as_bytes): Likewise.\n+\t(load_specific_debug_section): Likewise.\n+\n+2020-03-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* ar.c (main): Update bfd_plugin_set_program_name call.\n+\t* nm.c (main): Likewise.\n+\n+2020-03-19  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25676\n+\t* testsuite/binutils-all/dw4.s: New test source file.\n+\t* testsuite/binutils-all/nm.exp: Run the new test.\n+\n+2020-03-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (process_symbol_table): Use unsigned long for si.\n+\n+2020-03-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfcomm.c: Don't include bfd.h or bucomm.h.\n+\t(program_name): Declare.\n+\t(process_archive_index_and_symbols): Replace bfd_boolean with int,\n+\tand substitute FALSE and TRUE.\n+\t(setup_archive, setup_nested_archive): Likewise.\n+\t* elfcomm.h: Likewise.\n+\n+2020-03-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_archive): Always return via path freeing\n+\tmemory.  Formatting.\n+\n+2020-03-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_netbsd_elf_note): Validate descsz before\n+\taccessing descdata.  Formatting.\n+\n+2020-03-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfcomm.c (setup_archive): Make file_size an off_t.  Comment.\n+\t* elfcomm.h (setup_archive): Update prototype.\n+\n+2020-03-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_symbols): New function.\n+\t(process_relocs, ia64_process_unwind, hppa_process_unwind),\n+\t(arm_process_unwind, get_symbol_for_build_attribute): Use it.\n+\n+2020-03-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* unwind-ia64.c (unw_decode_uleb128): Prevent overlarge shifts.\n+\tDetect shift overflows and check that terminating byte is found.\n+\tPrint an error on a bad uleb128.\n+\n+2020-03-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_file): Clean ba_cache.\n+\n+2020-03-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfcomm.h (setup_archive): Update prototype.\n+\t* elfcomm.c (setup_archive): Add file_size parameter and sanity\n+\tcheck longnames_size.\n+\t(setup_nested_archive): Get file size and pass to setup_archive.\n+\t* elfedit.c (process_archive): Likewise.\n+\t* readelf.c (process_archive): Pass filedata->file_size to\n+\tsetup_archive.\n+\n+2020-03-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (dump_section_as_strings): Free memory on error exit.\n+\t(dump_section_as_bytes, process_notes_at): Likewise.\n+\t(get_build_id): Free enote.\n+\n+2020-03-13  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* readelf.c (get_netbsd_elfcore_note_type): Add support for\n+\tNT_NETBSDCORE_LWPSTATUS notes.\n+\n+2020-03-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfcomm.c (get_archive_member_name): Always return malloc'd\n+\tstring or NULL.\n+\t* elfedit.c (process_archive): Tidy memory on all return paths.\n+\t* readelf.c (process_archive): Likewise.\n+\t(process_symbol_table): Likewise.\n+\t(ba_cache): New, replacing ..\n+\t(get_symbol_for_build_attribute): ..static vars here.  Free\n+\tstrtab and symtab before loading new ones.  Reject symtab without\n+\tvalid strtab in loop, breaking out of loop on valid symtab.\n+\t(process_file): Free ba_cache symtab and strtab here, resetting\n+\tba_cache.\n+\n+2020-03-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_section_headers): Don't just set\n+\tfiledata->section_headers NULL, free it first.  Similarly for\n+\tdynamic_symbols, dynamic_strings, dynamic_syminfo and\n+\tsymtab_shndx_list.  Zero associated counts too.\n+\t(process_object): Free symtab_shndx_list.\n+\t(process_file): Free various allocated filedata tables.\n+\n+2020-03-11  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25611\n+\tPR 25614\n+\t* dwarf.h (DWARF2_Internal_LineInfo): Add li_address_size and\n+\tli_segment_size fields.\n+\t* dwarf.c (read_debug_line_header): Record the address size and\n+\tsegment selector size values (if present) in the lineinfo\n+\tstructure.\n+\t(display_formatted_table): Warn if the format count is empty but\n+\tthe table itself is not empty.\n+\tDisplay the format count and entry count at the start of the table\n+\tdump.\n+\t(display_debug_lines_raw): Display the address size and segement\n+\tselector size fields, if present.\n+\t* testsuite/binutils-all/dw5.W: Update expected output.\n+\n+2020-03-11  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25651\n+\t* objcopy.c (copy_object): Test \"gaps\" not gap_fill_set or\n+\tpad_to_set on second block of code dealing with padding.\n+\tReplace \"c\" with \"num_sec\" and don't recalculate number of\n+\tsections on second block.  Size arrays using sizeof (element)\n+\trather than sizeof (element type).\n+\n+2020-03-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (disassemble_section): Don't call qsort unless\n+\tsym count is at least two.\n+\t(disassemble_data): Don't call memcpy with NULL src.\n+\n+2020-03-09  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25645\n+\t* readelf.c (dump_ia64_vms_dynamic_fixups): Pass size and nmemb\n+\tto get_data rather than multiplying.\n+\t(dump_ia64_vms_dynamic_relocs): Likewise.\n+\t(process_version_sections): Correct order of size and nmemb args\n+\tin get_data call.\n+\t(process_mips_specific): Likewise.\n+\n+2020-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (get_dynamic_data): Replace \"memory chekers\" with\n+\t\"memory checkers\" in comments.\n+\n+2020-03-06  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\tPR 25491\n+\t* doc/Makefile.am: Rename MOSTLYCLEANFILES to MAINTAINERCLEANFILES.\n+\t* doc/Makefile.in: Re-generate.\n+\n+2020-03-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (check_new_section_flags): New function.  Reject the\n+\tSEC_COFF_SHARED flag if the target is not a COFF binary.\n+\t(copy_object): Call check_new_section_flags.\n+\t(setup_section): Likewise.\n+\t* doc/binutils.texi (objcopy): Add a note that the 'share' section\n+\tflag cannot be applied to ELF binaries.\n+\n+2020-03-06  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25637\n+\t* objcopy.c (filter_symbols): Correct rem_leading_char logic.\n+\n+2020-03-05  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25629\n+\t* objcopy.c (filter_symbols): Don't segfault on NULL\n+\tprefix_symbols_string.\n+\n+2020-03-04  Christian Eggers  <ceggers@gmx.de>\n+\n+\t* objcopy.c (copy_object): Convert from bytes to octets for\n+\t--gap-fill and --pad-to.\n+\n+2020-03-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25625\n+\t* prdbg.c (pr_tag_type): Remove call to abort.\n+\n+2020-03-02  Aaron Merey  <amerey@redhat.com>\n+\n+\t* binutils/testsuite/binutils-all/debuginfod.exp: Improve port\n+\tselection.\n+\n+2020-03-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25543\n+\t* readelf.c (dump_section_as_strings): Display new-line characters\n+\tas \\n and then insert a line break.\n+\t* testsuite/binutils-all/pr25543.s: New test.\n+\t* testsuite/binutils-all/pr25543.d: Test driver.\n+\t* testsuite/binutils-all/readelf.exp: Run the new test.\n+\n+2020-02-27  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25526\n+\t* readelf.c (process_ia64_vms_dynamic_relocs): Check to see if\n+\tget_data is unable to load the string table.\n+\n+2020-02-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* elfedit.c: Indent labels correctly.\n+\t* readelf.c: Likewise.\n+\t* resres.c: Likewise.\n+\n+2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/25584\n+\t* ar.c (main): Pass 0 to bfd_plugin_set_program_name.\n+\t* nm.c (main): Pass 1 to bfd_plugin_set_program_name.\n+\n+2020-02-24  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25499\n+\t* doc/binutils.texi (objdump): Fix typo in description of\n+\tobjdump's -g option.\n+\n+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* dwarf.c (regname_internal_riscv): Updated since the DECLARE_CSR\n+\tis changed.\n+\n+2020-02-19  Jordan Rupprecht  <rupprecht@google.com>\n+\n+\t* objdump.c (show_line): call bfd_demangle when using do_demangle.\n+\n+2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* configure: Regenerate.\n+\n+2020-02-10  Fangrui Song   <maskray@google.com>\n+\n+\t* objcopy.c (parse_flags): Handle \"exclude\".\n+\t* doc/binutils.texi: Document the support.\n+\n+2020-02-10  Aaron Merey  <amerey@redhat.com>\n+\n+\t* binutils/testsuite/binutils-all/debuginfod.exp:\n+\tReplace set ::env with setenv.\n+\tStart server before setting environment variable.\n+\tSpecify tmpdir as the location of the server's\n+\tdatabase.\n+\tCheck additional server metrics at start-up.\n+\n+2020-02-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add note about updating the\n+\tGAS/NEWS URL in the next release.\n+\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* readelf.c (get_machine_flags): Add support for Z80N machine\n+\tnumber.\n+\n+2020-02-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (display_debug_lines_decoded): Force a NUL termination\n+\tof the truncated file name.\n+\n+2020-02-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* objdump.c (print_jump_visualisation): New function.\n+\t(disassemble_bytes): Call new function.\n+\n+2020-02-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (match_target): Accept '!' before\n+\tTCL procedure.\n+\t(supports_gnu_osabi): New procedure.\n+\t(is_generic): New, from ld-lib.exp.\n+\t(supports_gnu_unique): Use the above.\n+\n+2020-02-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am (CFILES): Add od-elf32_avr.c.\n+\t* Makefile.in: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2020-02-03  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* readelf.c (dump_relocations, dump_relocations)\n+\t(decode_arm_unwind_bytecode, process_dynamic_section)\n+\t(get_symbol_visibility, get_alpha_symbol_other): Add newline to\n+\terror message.\n+\n+2020-02-03  Sergei Trofimovich  <siarheit@google.com>\n+\n+\t* coffdump.c (program_name): Drop redundant definition.\n+\t* srconv.c (program_name): Likewise\n+\t* sysdump.c (program_name): Likewise\n+\n+2020-02-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25380\n+\t* objdump.c (sym_ok): Return FALSE if 2 sections are in the\n+\tsame file with different section pointers.\n+\n+2020-02-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Update with more details on the\n+\trelease making process.\n+\n+2020-01-31  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2020-01-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (get_build_id): Simplify warning message about corrupt\n+\tnotes encountered whilst scanning for the build-id.\n+\n+2020-01-27  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* objcopy.c (compare_gnu_build_notes): Fix comparison results\n+\tfor overlapping ranges so that (A == B) == (B == A) holds.\n+\n+2020-01-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (big_or_little_endian): Replace\n+\tcase statement with switch statement.\n+\n+2020-01-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (get_build_id): Fix warning messages about corrupt\n+\tnotes.\n+\n+2020-01-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\n+2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>\n+\n+\tPR 25417\n+\t* readelf.c (get_alpha_symbol_other): Fix error message typo.\n+\n+2020-01-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt.po: Updated Portuguese translation.\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Update notes on how to cut a\n+\tbranch for a release.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* po/binutils.pot: Regenerate.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.34 branch created.\n+\n+2020-01-17  Thomas Troeger  <tstroege@gmx.de>\n+\n+\t* objdump.c (jump_info_visualize_address): Discard jumps that are\n+\tno longer needed.\n+\t(disassemble_bytes): Only compute the maximum level if jumps were\n+\tdetected.\n+\n+2020-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objdump.c (disassemble_bytes): Remove C99-ism.\n+\t* testsuite/binutils-all/debuginfod.exp: New tests.\n+\n+2020-01-13  Thomas Troeger  <tstroege@gmx.de>\n+\n+\t* objdump.c (visualize_jumps, color_output, extended_color_output)\n+\t(detected_jumps): New variables.\n+\t(usage): Add the new jump visualization options.\n+\t(option_values): Add new option value.\n+\t(long_options): Add the new option.\n+\t(jump_info_new, jump_info_free): New functions.\n+\t(jump_info_min_address, jump_info_max_address): Likewise.\n+\t(jump_info_end_address, jump_info_is_start_address): Likewise.\n+\t(jump_info_is_end_address, jump_info_size): Likewise.\n+\t(jump_info_unlink, jump_info_insert): Likewise.\n+\t(jump_info_add_front, jump_info_move_linked): Likewise.\n+\t(jump_info_intersect, jump_info_merge): Likewise.\n+\t(jump_info_sort, jump_info_visualize_address): Likewise.\n+\t(disassemble_jumps): New function - used to locate jumps.\n+\t(disassemble_bytes): Add ascii art generation.\n+\t(disassemble_section): Add scan to locate jumps.\n+\t(main): Parse the new visualization option.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* NEWS: Mention the new feature.\n+\n+2020-01-13  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25360\n+\tPR 25361\n+\t* dwarf.c (display_debug_frames): Move fde_fc earlier.  Free\n+\tfde_fc col_type and col_offset.\n+\t* readelf.c (apply_relocations): Move symsec check earlier.\n+\t(free_debug_section): Free reloc_info.\n+\t(process_notes_at): Free pnotes on error path.\n+\t(process_object): Free dump_sects here..\n+\t(process_archive): ..not here.\n+\n+2020-01-13  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25362\n+\t* nm.c (display_rel_file): Free dyn_syms.\n+\n+2020-01-09  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25220\n+\t* objcopy.c (empty_name): New variable.\n+\t(need_sym_before): Prevent an attempt to free a static variable.\n+\t(filter_symbols): Avoid strcmp test by checking for pointer\n+\tequality.\n+\n+2020-01-09  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/zh_TW.po: Updated Traditional Chinese translation.\n+\n+2020-01-09  Aaron Merey  <amerey@redhat.com>\n+\n+        * Makefile.am (readelf_LDADD, objdump_LDADD): Add libdebuginfod.\n+        * Makefile.in: Regenerate.\n+        * NEWS: Update.\n+        * config.in: Regenerate.\n+        * configure: Regenerate.\n+        * configure.ac: Call AC_DEBUGINFOD.\n+        * doc/Makefile.in: Regenerate.\n+        * doc/binutils.texi: Add section on using binutils\n+        with debuginfod.\n+        * dwarf.c (debuginfod_fetch_separate_debug_info): New function.\n+        Query debuginfod servers for the target debug file.\n+        (load_separate_debug_info): Call\n+        debuginfod_fetch_separate_debug_info if configured with\n+        debuginfod.\n+        (load_separate_debug_files): Add file argument to\n+        load_separate_debug_info calls.\n+        * dwarf.h (get_build_id): Add declaration.\n+        * objdump.c (get_build_id): New function. Get build-id of file.\n+        * readelf.c (get_build_id): Likewise.\n+        * testsuite/binutils-all/debuginfod.exp: New tests.\n+        * testsuite/binutils-all/linkdebug.s: Add .note.gnu.build-id\n+        section.\n+\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* readelf.c: Add support for new Z*) relocations and machine\n+\ttypes.\n+\n+2020-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2019\n+\f\n+Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "elfcpp/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 84,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/elfcpp/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/elfcpp/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -1,88 +1,6 @@\n-2020-12-15  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* elfcpp.h (class Ehdr): Add get_ei_osabi and get_ei_abiversion methods.\n-\n-2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n-\n-\t* elfcpp.h (enum DT): New enum member DT_GNU_FLAGS_1.\n-\t(enum DF_GNU_1): New enum DF_GNU_1 containing DF_GNU_1_UNIQUE.\n-\n-2020-12-14  H.J. Lu  <hjl.tools@gmail.com>\n-\t    Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/27039\n-\t* elfcpp.h (SHF): Add SHF_GNU_RETAIN.\n-\n-2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elfcpp.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_ISA_1_USED): This.\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED): This.\n-\t(GNU_PROPERTY_X86_UINT32_AND_LO): New.\n-\t(GNU_PROPERTY_X86_UINT32_AND_HI): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_LO): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_HI): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_AND_HI): Likewise.\n-\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): New.\n-\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_1_AND): Updated to\n-\t(GNU_PROPERTY_X86_UINT32_AND_LO + 0).\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): New.  Defined to\n-\tGNU_PROPERTY_X86_UINT32_OR_LO + 2.\n-\t(GNU_PROPERTY_X86_FEATURE_2_NEEDED): New.  Defined to\n-\t(GNU_PROPERTY_X86_UINT32_OR_LO + 1).\n-\t(GNU_PROPERTY_X86_ISA_1_USED): New.  Defined to\n-\tGNU_PROPERTY_X86_UINT32_OR_AND_LO + 2.\n-\t(GNU_PROPERTY_X86_FEATURE_2_USED): New.  Defined to\n-\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO + 1).\n-\n-2020-09-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* dwarf.h (DW_FIRST_UT, DW_UT, DW_END_UT): Define.\n-\n-2020-08-26  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-        * elfcpp.h (enum SHT): New enum SHT_CSKY_ATTRIBUTES.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.35 branch created.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* elfcpp_swap.h (bswap_16): Do not assume that presence of\n-\t<byteswap.h> means this is declared.  Make static inline, matching\n-\trecent change to libctf, since there is no non-inline definition\n-\tof these functions.\n-\t(bswap_32): Likewise.\n-\t(bswap_64): Likewise.\n-\n-2020-06-18  Fangrui Song  <i@maskray.me>\n-\n-\tPR gold/26039\n-\t* elfcpp.h (enum DF_1): New enum member DF_1_PIE.\n-\n-2020-06-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.h: Rename\n-\tR_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,\n-\tR_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,\n-\tR_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and\n-\tR_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.34 branch created.\n-\n-2020-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2019\n+For older changes see ChangeLog-2020\n \f\n-Copyright (C) 2020 Free Software Foundation, Inc.\n+Copyright (C) 2021 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "0ae886e1780eb49fc6b3261be574e5772fdd08b3",
      "filename": "elfcpp/ChangeLog-2020",
      "status": "added",
      "additions": 96,
      "deletions": 0,
      "changes": 96,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/elfcpp/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/elfcpp/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -0,0 +1,96 @@\n+2020-12-15  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* elfcpp.h (class Ehdr): Add get_ei_osabi and get_ei_abiversion methods.\n+\n+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n+\n+\t* elfcpp.h (enum DT): New enum member DT_GNU_FLAGS_1.\n+\t(enum DF_GNU_1): New enum DF_GNU_1 containing DF_GNU_1_UNIQUE.\n+\n+2020-12-14  H.J. Lu  <hjl.tools@gmail.com>\n+\t    Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/27039\n+\t* elfcpp.h (SHF): Add SHF_GNU_RETAIN.\n+\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elfcpp.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_ISA_1_USED): This.\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED): This.\n+\t(GNU_PROPERTY_X86_UINT32_AND_LO): New.\n+\t(GNU_PROPERTY_X86_UINT32_AND_HI): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_LO): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_HI): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_AND_HI): Likewise.\n+\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): New.\n+\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_1_AND): Updated to\n+\t(GNU_PROPERTY_X86_UINT32_AND_LO + 0).\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): New.  Defined to\n+\tGNU_PROPERTY_X86_UINT32_OR_LO + 2.\n+\t(GNU_PROPERTY_X86_FEATURE_2_NEEDED): New.  Defined to\n+\t(GNU_PROPERTY_X86_UINT32_OR_LO + 1).\n+\t(GNU_PROPERTY_X86_ISA_1_USED): New.  Defined to\n+\tGNU_PROPERTY_X86_UINT32_OR_AND_LO + 2.\n+\t(GNU_PROPERTY_X86_FEATURE_2_USED): New.  Defined to\n+\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO + 1).\n+\n+2020-09-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.h (DW_FIRST_UT, DW_UT, DW_END_UT): Define.\n+\n+2020-08-26  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+        * elfcpp.h (enum SHT): New enum SHT_CSKY_ATTRIBUTES.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.35 branch created.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* elfcpp_swap.h (bswap_16): Do not assume that presence of\n+\t<byteswap.h> means this is declared.  Make static inline, matching\n+\trecent change to libctf, since there is no non-inline definition\n+\tof these functions.\n+\t(bswap_32): Likewise.\n+\t(bswap_64): Likewise.\n+\n+2020-06-18  Fangrui Song  <i@maskray.me>\n+\n+\tPR gold/26039\n+\t* elfcpp.h (enum DF_1): New enum member DF_1_PIE.\n+\n+2020-06-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.h: Rename\n+\tR_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,\n+\tR_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,\n+\tR_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and\n+\tR_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.34 branch created.\n+\n+2020-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2019\n+\f\n+Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "d1f6a868d8665cdb744485a19d78c7eebd16a581",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 6107,
      "changes": 6109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    },
    {
      "sha": "8cdf93b6a2e32367bc903c27f9b1c4194ec1824e",
      "filename": "gas/ChangeLog-2020",
      "status": "added",
      "additions": 6119,
      "deletions": 0,
      "changes": 6119,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/gas/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/gas/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 568,
      "changes": 570,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -1,572 +1,6 @@\n-2020-12-19  H.J. Lu  <hjl.tools@gmail.com>\n-\n-\tPR gold/27097\n-\t* incremental.cc (Sized_relobj_incr::do_add_symbols): Move sym\n-\tdeclaration just before use.\n-\t(Sized_incr_dynobj::do_add_symbols): Likewise.\n-\t* plugin.cc (Sized_pluginobj::do_add_symbols): Likewise.\n-\n-2020-12-15  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* dwp.cc (class Dwo_file): Use new Ehdr::get_ei_osabi and\n-\tget_ei_abiversion methods.\n-\t* incremental.cc (make_sized_incremental_binary): Likewise.\n-\t* object.cc (Sized_relobj_file::Sized_relobj_file): Likewise.\n-\t(make_elf_sized_object): Likewise.\n-\t* object.h (class Osabi): Make the class untemplated.\n-\n-2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n-\n-\tImplement -z unique / -z nounique options.\n-\t* layout.cc (Layout::finish_dynamic_section): Set DF_GNU_1_UNIQUE.\n-\t* options.h (class General_options): Handle -z unique, -z nounique.\n-\n-2020-12-14  H.J. Lu  <hjl.tools@gmail.com>\n-\t    Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/27039\n-\t* layout.cc (Layout::layout): Strip SHF_GNU_RETAIN.\n-\t* object.cc (Sized_relobj_file::Sized_relobj_file): Initialize osabi_.\n-\t(Sized_relobj_file::do_layout): Keep SHF_GNU_RETAIN sections for\n-\tGNU/FreBSD ELFOSABIs.\n-\t* object.h (Osabi) New class.\n-\t(Sized_relobj_file): Add osabi() and osabi_.\n-\t* testsuite/Makefile.am (check_SCRIPTS): Add retain.sh.\n-\t(check_DATA): Add retain_1.out retain_2.out.\n-\t(MOSTLYCLEANFILES): Add retain_1 retain_2.\n-\t(retain_1.out): New target.\n-\t(retain_1): Likewise.\n-\t(retain_1.o): Likewise.\n-\t(retain_2.out): Likewise.\n-\t(retain_2): Likewise.\n-\t(retain_2.o): Likewise.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/retain.sh: New file.\n-\t* testsuite/retain_1.s: Likewise.\n-\t* testsuite/retain_2.s: Likewise.\n-\n-2020-12-13  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23539\n-\tPR gold/24123\n-\t* testsuite/Makefile.am (incremental_copy_test): Re-enable for GCC 9+.\n-\t(incremental_comdat_test_1): Likewise.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2020-12-13  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23539\n-\t* object.cc (Sized_relobj_file::layout_gnu_property_section): Ignore\n-\tGnu properties during incremental links.\n-\n-2020-12-13  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/24123\n-\t* layout.cc (Layout::init_fixed_output_section): Mask out flags that\n-\tshould be ignored when matching sections.\n-\n-2020-12-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* plugin.cc (Plugin_recorder::init): Replace strncpy with memcpy.\n-\n-2020-12-03  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/Makefile.am (pr26936a.o): Pass -mx86-used-note=yes.\n-\t(pr26936b.o, pr26936c.o, pr26936d.o): Likewise.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/26972\n-\t* x86_64.cc (Output_data_plt_x86_64_ibt::tlsdesc_plt_entry): Add\n-\tendbr64.\n-\t(Output_data_plt_x86_64_ibt::do_fill_tlsdesc_entry): Adjusted.\n-\n-2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/26939\n-\t* x86_64.cc (Target_x86_64<size>::Scan::local): Check\n-\tget_r_addend() == -4 for GOTPCRELX conversion.\n-\t(Target_x86_64<size>::Scan::global): Likewise.\n-\t(Target_x86_64<size>::Relocate::relocate): Likewise.\n-\t* testsuite/Makefile.am (check_DATA): Add\n-\tx86_64_mov_to_lea15.stdout and x86_64_mov_to_lea16.stdout.\n-\t(MOSTLYCLEANFILES): Add x86_64_mov_to_lea15 and\n-\tx86_64_mov_to_lea16.\n-\t(x86_64_mov_to_lea9.o): New target.\n-\t(x86_64_mov_to_lea10.o): Likewise.\n-\t(x86_64_mov_to_lea15): Likewise.\n-\t(x86_64_mov_to_lea16): Likewise.\n-\t(x86_64_mov_to_lea15.stdout): Likewise.\n-\t(x86_64_mov_to_lea16.stdout): Likewise.\n-\t* testsuite/Makefile.in: Regenerated.\n-\t* testsuite/x86_64_mov_to_lea.sh: Updated.\n-\t* testsuite/x86_64_mov_to_lea5.s: New file.\n-\n-2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/26937\n-\t* object.cc (Sized_relobj_file::map_to_kept_section): Get the\n-\tsection index for linkonce section.  Also check the single\n-\tcomdat section.\n-\t* testsuite/Makefile.am (check_SCRIPTS): Add pr26936.sh.\n-\t(check_DATA): Add pr26936a.stdout and pr26936b.stdout.\n-\t(MOSTLYCLEANFILES): Add pr26936a and pr26936b.\n-\t(pr26936a.stdout): New target.\n-\t(pr26936a): Likewise.\n-\t(pr26936b.stdout): Likewise.\n-\t(pr26936b): Likewise.\n-\t(pr26936a.o): Likewise.\n-\t(pr26936b.o): Likewise.\n-\t(pr26936c.o): Likewise.\n-\t(pr26936d.o): Likewise.\n-\t* testsuite/Makefile.in: Regenerated.\n-\t* testsuite/pr26936.sh: New file.\n-\t* testsuite/pr26936a.s: Likewise.\n-\t* testsuite/pr26936b.s: Likewise.\n-\t* testsuite/pr26936c.s: Likewise.\n-\t* testsuite/pr26936d.s: Likewise.\n-\n-2020-11-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::no_tprel_opt_): Rename from tprel_opt_.\n-\tInit to false.\n-\t(Target_powerpc::tprel_opt): Test parameters->options().tls_optimize().\n-\t(Target_powerpc::set_tprel_opt): Delete.\n-\t(Target_powerpc::set_no_tprel_opt): New function.  Update all uses\n-\tof set_tprel_opt.\n-\n-2020-11-16  Michael Hudson-Doyle  <michael.hudson@canonical.com>\n-\n-\tPR 26902\n-\t* powerpc.cc (Relocate::relocate): Do not include local entry\n-\toffset of target function when computing the address of a stub.\n-\n-2020-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/26200\n-\t* plugin.cc (Plugin_manager::claim_file): Don't share Plugin_list\n-\titerator.\n-\t(Plugin_manager::all_symbols_read): Likewise.\n-\t(Plugin_manager::cleanup): Likewise.\n-\n-2020-11-03  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::tocsave_loc): Return a pointer.\n-\t(Target_powerpc::Relocate::relocate): Avoid -Wdangling-gsl error.\n-\n-2020-11-03  Nick Gasson  <nick.gasson@arm.com>\n-\n-\tPR 26827\n-\t* fileread.cc (File_read::open): Ensure file_counts_lock is\n-\tinitialized.\n-\t* testsuite/Makefile.am (check_PROGRAMS): Add a test that passes\n-\t-Wl,--threads.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/gnu_property_test.sh: Updated.\n-\n-2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* Makefile.am (bootstrap-test): Skip for LTO build.\n-\t(bootstrap-test-r): Likewise.\n-\n-2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/23539\n-\t* configure.ac: Check for GCC 9 or later and for -fcf-protection.\n-\t* configure: Regenerated.\n-\t* testsuite/Makefile.am (check_PROGRAMS): Skip incremental_test_2,\n-\tincremental_test_3, incremental_test_4, incremental_test_5,\n-\tincremental_copy_test, incremental_common_test_1 and\n-\tincremental_comdat_test_1 for -fcf-protection.  Also Skip\n-\tincremental_copy_test and incremental_comdat_test_1 for GCC 9 or\n-\tlater.\n-\t* testsuite/Makefile.in: Regenerated.\n-\n-2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/23503\n-\t* testsuite/Makefile.am (justsyms_lib): Pass\n-\t-T $(srcdir)/justsyms_lib.t to gold.\n-\t* testsuite/Makefile.in: Regenerated.\n-\t* testsuite/justsyms_lib.t: New file.\n-\t* testsuite/script_test_10.t: Discard .note.gnu.property section.\n-\n-2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* x86_64.cc (Target_x86_64::Target_x86_64): Initialize\n-\tfeature_2_used_, feature_2_needed_ and object_feature_2_used_.\n-\t(Target_x86_64::feature_2_used_): New data member.\n-\t(Target_x86_64::feature_2_needed_): Likewise.\n-\t(Target_x86_64::object_isa_1_used_): Likewise.\n-\t(Target_x86_64::record_gnu_property): Support\n-\tGNU_PROPERTY_X86_COMPAT_ISA_1_USED,\n-\tGNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED,\n-\tGNU_PROPERTY_X86_COMPAT_2_ISA_1_USED,\n-\tGNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED,\n-\tGNU_PROPERTY_X86_FEATURE_2_USED and\n-\tGNU_PROPERTY_X86_FEATURE_2_NEEDED.\n-\t(Target_x86_64::merge_gnu_properties): Merge FEATURE_2_USED bits.\n-\tInitialize object_feature_2_used_.\n-\t(Target_x86_64::do_finalize_gnu_properties): Support\n-\tGNU_PROPERTY_X86_FEATURE_2_USED and\n-\tGNU_PROPERTY_X86_FEATURE_2_NEEDED.\n-\t* testsuite/gnu_property_a.S (GNU_PROPERTY_X86_ISA_1_USED): Set\n-\tto 0xc0010002.\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.\n-\t* testsuite/gnu_property_b.S (GNU_PROPERTY_X86_ISA_1_USED): Set\n-\tto 0xc0010002.\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.\n-\t* testsuite/gnu_property_c.S (GNU_PROPERTY_X86_ISA_1_USED): Set\n-\tto 0xc0010002.\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.\n-\t* testsuite/gnu_property_test.sh: Updated.\n-\n-2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/22914\n-\tPR gold/23535\n-\t* layout.cc (Layout::attach_allocated_section_to_segment): Place\n-\ta note section in a PT_NOTE segment with the same alignment.  Set\n-\tthe alignment of the PT_NOTE segment from the alignment of the\n-\tnote section.\n-\t(Layout::create_note): Align the NT_GNU_PROPERTY_TYPE_0 note to 8\n-\tbytes for 64-bit ELF.\n-\t(Layout::segment_precedes): Place segments with larger alignments\n-\tfirst.\n-\t* output.cc (Output_segment::Output_segment): Initialize align_.\n-\t* output.h (Output_segment): Add align, set_align and align_.\n-\t* testsuite/Makefile.am (gnu_property_test.stdout): Pass -lhSWn\n-\tto $(TEST_READELF).\n-\t(gnu_property_test): Pass --build-id to ld.\n-\t* testsuite/Makefile.in: Regenerated.\n-\t* testsuite/gnu_property_test.sh (check_alignment): New.\n-\tUse check_alignment to check the NT_GNU_PROPERTY_TYPE_0 note\n-\talignment.  Verify that there are 2 PT_NOTE segments.\n-\n-2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/21452\n-\t* x86_64.cc (Scan::local_reloc_may_be_function_pointer): Remove\n-\tcheck for shared library.\n-\t(Scan::global_reloc_may_be_function_pointer): Remove check for\n-\tshared library and symbol visibility.\n-\t* testsuite/icf_safe_so_test.cc (bar_static): New function.\n-\t(main): Take function address of bar_static and use it.\n-\t* testsuite/icf_safe_so_test.sh (arch_specific_safe_fold): Also\n-\tcheck fold on x86-64.  Check bar_static isn't folded.\n-\n-2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* icf.cc (Icf::find_identical_sections): Skip zero-sized sections.\n-\n-2020-10-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Powerpc_relobj::do_relocate_sections): Don't do\n-\tlocal entry offset optimisation for lplt_section.\n-\t(Target_powerpc::Branch_info::make_stub): Don't add local\n-\tentry offset to long branch dest passed to\n-\tadd_long_branch_entry.  Do pass st_other bits.\n-\t(Stub_table::Branch_stub_ent): Add \"other_\" field.\n-\t(Stub_table::add_long_branch_entry): Add \"other\" param, and\n-\tsave.\n-\t(Stub_table::branch_stub_size): Adjust long branch offset.\n-\t(Stub_table::do_write): Likewise.\n-\t(Target_powerpc::Relocate::relocate): Likewise.\n-\n-2020-10-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (is_got_reloc): New function.\n-\t(Target_powerpc::Relocate::relocate): Use it here, exclude GOT\n-\trelocs when looking for stubs.\n-\n-2020-10-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/split_i386.sh: Updated for --split-stack-adjust-size\n-\tdefault change.\n-\t* testsuite/split_x86_64.sh: Likewise.\n-\n-2020-10-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* options.h (split_stack_adjust_size): Default to 0x100000.\n-\n-2020-09-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc): Rename power10_stubs_ to\n-\tpower10_relocs_.\n-\t(Target_powerpc::set_power10_relocs): New accessor.\n-\t(Target_powerpc::set_power10_stubs): Delete.\n-\t(Target_powerpc::power10_stubs): Adjust.\n-\t(Target_powerpc::has_localentry0): New accessor.\n-\t(ld_0_11): New constant.\n-\t(glink_eh_frame_fde_64v1, glink_eh_frame_fde_64v2): Adjust.\n-\t(glink_eh_frame_fde_64v2_localentry0): New.\n-\t(Output_data_glink::pltresolve_size): Update.\n-\t(Output_data_glink::add_eh_frame): Use localentry0 version eh_frame.\n-\t(Output_data_glink::do_write): Move r2 save to start of ELFv2 stub\n-\tand only emit for has_localentry0.  Don't use r2 in the stub.\n-\t(Target_powerpc::Scan::local, global): Adjust for\n-\tset_power10_relocs renaming.\n-\t(Target_powerpc::scan_relocs): Warn and reset plt_localentry0_.\n-\n-2020-09-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::Relocate::relocate): Don't skip\n-\tfirst insn of __tls_get_addr_opt stub.\n-\n-2020-08-24  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc): Add tprel_opt_ and accessors.\n-\t(Target_powerpc::Scan::local): Sanity check tprel high relocs.\n-\t(Target_powerpc::Scan::global): Likewise.\n-\t(Target_powerpc::Relocate::relocate): Control tprel optimisation\n-\twith tprel_opt_ and enable for 32-bit.\n-\n-2020-08-12  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sr.po: Updated Serbian translation.\n-\n-2020-07-27  Alan Modra  <amodra@gmail.com>\n-\n-\t* options.h (DEFINE_enum): Add optional_arg__ param, adjust\n-\tall uses.\n-\t(General_options): Add --power10-stubs and --no-power10-stubs.\n-\t* options.cc (General_options::parse_no_power10_stubs): New.\n-\t(General_options::finalize): Handle --power10-stubs.\n-\t* powerpc.cc (set_power10_stubs): Don't set when --power10-stubs=no.\n-\t(power10_stubs_auto): New.\n-\t(struct Plt_stub_ent): Add toc_ and tocoff_.  Don't use a bitfield\n-\tfor indx_.\n-\t(struct Branch_stub_ent): Add toc_and tocoff_.  Use bitfields for\n-\titer_, notoc_ and save_res_.\n-\t(add_plt_call_entry): Set toc_.  Adjust resizing conditions for\n-\t--power10-stubs=auto.\n-\t(add_long_branch_entry): Set toc_.\n-\t(add_eh_frame, define_stub_syms): No longer use const_iterators\n-\tfor plt and long branch stub iteration.\n-\t(build_tls_opt_head, build_tls_opt_tail): Change parameters and\n-\treturn value.  Move tests for __tls_get_addr to callers.\n-\t(plt_call_size): Handle --power10-stubs=auto.\n-\t(branch_stub_size): Likewise.\n-\t(Stub_table::do_write): Likewise.\n-\t(relocate): Likewise.\n-\n-2020-07-19  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/bnd_ifunc_1.sh: Updated.\n-\t* testsuite/bnd_plt_1.sh: Likewise.\n-\t* testsuite/split_x32.sh: Likewise.\n-\t* testsuite/split_x86_64.sh: Likewise.\n-\t* testsuite/x86_64_indirect_call_to_direct.sh: Likewise.\n-\n-2020-07-08  Nick Clifton  <nickc@redhat.com>\n-\n-\t* testsuite/script_test_7.sh: Adjust expected address of the .bss\n-\tsection.\n-\t* testsuite/script_test_9.sh: Do not expect the .init section to\n-\timmediately follow the .text section in the mapping of sections to\n-\tsegments.\n-\n-2020-07-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* target-reloc.h: (Default_comdat_behaviour:get): Ignore discarded\n-\trelocs that refer to the .gnu.build.attributes section.\n-\n-2020-07-06  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.35 branch created.\n-\n-2020-07-03  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26028\n-\t* testsuite/Makefile.am (file_in_many_sections.stdout): Add -W\n-\tto readelf options.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n-\t* configure: Regenerated.\n-\t* config.h.in: Likewise.\n-\n-2020-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* target-reloc.h (issue_discarded_error): Initialise the\n-\tkey_symndx variable.\n-\n-2020-06-23  Roland McGrath  <mcgrathr@google.com>\n-\n-\tPR 22843\n-\t* options.h (class General_options): Add --dependency-file option.\n-\t* fileread.cc (File_read::files_read): New static variable.\n-\t(File_read::open): Add the file to the files_read list.\n-\t(File_read::record_file_read): New static member function.\n-\t(File_read::write_dependency_file): New static member function.\n-\t* fileread.h (class File_read): Declare them.\n-\t* layout.cc (Layout::read_layout_from_file): Call record_file_read.\n-\t(Close_task_runner::run): Call write_dependency_file if\n-\t--dependency-file was passed.\n-\n-2020-06-18  Fangrui Song  <i@maskray.me>\n-\n-\tPR gold/26039\n-\t* layout.cc (Layout::finish_dynamic_section): Set DF_1_PIE.\n-\n-2020-06-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/discard_locals_test.c: Replace uses of asm with __asm__.\n-\t* testsuite/discard_locals_relocatable_test.c: Likewise.\n-\n-2020-06-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/Makefile.am (export_dynamic_plugin.o): Use CXXCOMPILE.\n-\t(plugin_test_wrap_symbols_1.o): Likewise.\n-\t(plugin_test_wrap_symbols_2.o): Likewise.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2020-06-15  Roland McGrath  <mcgrathr@google.com>\n-\n-\tImplement -z start-stop-visibility=... option.\n-\t* options.h (class General_options): Handle -z start-stop-visibility=.\n-\t(General_options::start_stop_visibility_enum): New public method.\n-\t(General_options::set_start_stop_visibility_enum): New private method.\n-\t(General_options::start_stop_visibility_enum_): New private member.\n-\t* options.cc (General_options::General_options): Add initializer.\n-\t(General_options::finalize): Set this->start_stop_visibility_enum_\n-\tfrom string value.\n-\t* layout.cc (Layout::define_section_symbols): Use option setting.\n-\n-2020-06-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc: Update throughout for reloc renaming.\n-\n-2020-05-22  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 25882\n-\t* powerpc.cc (merge_object_attributes): Replace name param with\n-\tobj param.  Update callers.  Don't init FP attributes from shared\n-\tlibraries, and do not emit an error if they don't match.\n-\n-2020-05-15  Nikita Ermakov  <coffe92@gmail.com>\n-\n-\t* powerpc.cc (do_gc_mark_symbol): Don't segfault on plugin symbols.\n-\n-2020-05-14  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sr.po: New Serbian translation.\n-\n-2020-05-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc: Rename powerxx to power10 throughout.\n-\n-2020-05-02  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/25904\n-\t* testsuite/Makefile.am (COMMON_TEST_C_CFLAGS): New.\n-\t(common_test_1.o): New rule.\n-\t(common_test_2.o): Likewise.\n-\t(common_test_3.o): Likewise.\n-\t(plugin_common_test_1.o): Likewise.\n-\t(plugin_common_test_2.o): Likewise.\n-\t(common_test_1_v1.o): Likewise.\n-\t(common_test_1_v2.o): Likewise.\n-\t(common_test_2_pic.o): Compile with $(COMMON_TEST_C_CFLAGS).\n-\t(common_test_3_pic.o): Likewise.\n-\t* testsuite/Makefile.in: Regenerated.\n-\n-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/25426\n-\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n-\tFor x32, relax \"rex leal foo@tlsdesc(%rip), %reg\" to\n-\t\"rex movl foo@gottpoff(%rip), %eax\" and relax \"\"call *(%eax)\"\n-\tto \"nopl (%rax)\".\n-\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): For x32,\n-\trelax \"rex leal foo@tlsdesc(%rip), %reg\" to\n-\t\"rex movl foo@tpoff, %eax\" and relax \"call *foo@tlscall(%eax)\"\n-\tto \"nopl (%rax)\".\n-\t* testsuite/Makefile.am (tls_test_gnu2.o): Depend on\n-\tgcctestdir/as.\n-\t(tls_test_file2_gnu2.o): Likewise.\n-\t(tls_test_c_gnu2.o): Likewise.\n-\t* testsuite/Makefile.in: Regenerated.\n-\n-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/25473\n-\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n-\tProperly check r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n-\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): Properly\n-\trelax r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n-\t* testsuite/Makefile.am (check_SCRIPTS): Add x86_64_gd_to_le.sh.\n-\t(check_DATA): Add x86_64_gd_to_le.stdout.\n-\t(MOSTLYCLEANFILES): Add x86_64_gd_to_le.\n-\t(x86_64_gd_to_le.o): New target.\n-\t(x86_64_gd_to_le): Likewise.\n-\t(x86_64_gd_to_le.stdout): Likewise.\n-\t* testsuite/Makefile.in: Regenerated.\n-\t* testsuite/x86_64_gd_to_le.s: New file.\n-\t* testsuite/x86_64_gd_to_le.sh: Likewise.\n-\n-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/odr_violation2.cc (Ordering::operator()): Make\n-\texpression even more complex.\n-\n-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/ver_test_pr16504.sh: Updated.\n-\n-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/25872\n-\t* x86_64.cc (Output_data_plt_x86_64_bnd::do_write): Increment\n-\tplt_offset after setting the reserved TLSDESC PLT entry.\n-\t(Output_data_plt_x86_64_ibt<size>::do_write): Likewise.\n-\n-2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gold/25872\n-\t* x86_64.cc (Output_data_plt_x86_64_bnd::do_address_for_local):\n-\tHandle local IFUNC symbol.\n-\t(Output_data_plt_x86_64_ibt::do_address_for_local): Likewise.\n-\n-2020-03-19  Fangrui Song  <maskray@google.com>\n-\n-    * options.h (General_options): Add --no-rosegment option.\n-\n-2020-02-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Update French translation.\n-\n-2020-01-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* po/gold.pot: Regenerate.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.34 branch created.\n-\n-2020-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2019\n+For older changes see ChangeLog-2020\n \f\n-Copyright (C) 2020 Free Software Foundation, Inc.\n+Copyright (C) 2021 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "9614a87f76d169e22a3a4eb9428b1a7448d174a2",
      "filename": "gold/ChangeLog-2020",
      "status": "added",
      "additions": 580,
      "deletions": 0,
      "changes": 580,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/gold/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/gold/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -0,0 +1,580 @@\n+2020-12-19  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR gold/27097\n+\t* incremental.cc (Sized_relobj_incr::do_add_symbols): Move sym\n+\tdeclaration just before use.\n+\t(Sized_incr_dynobj::do_add_symbols): Likewise.\n+\t* plugin.cc (Sized_pluginobj::do_add_symbols): Likewise.\n+\n+2020-12-15  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* dwp.cc (class Dwo_file): Use new Ehdr::get_ei_osabi and\n+\tget_ei_abiversion methods.\n+\t* incremental.cc (make_sized_incremental_binary): Likewise.\n+\t* object.cc (Sized_relobj_file::Sized_relobj_file): Likewise.\n+\t(make_elf_sized_object): Likewise.\n+\t* object.h (class Osabi): Make the class untemplated.\n+\n+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n+\n+\tImplement -z unique / -z nounique options.\n+\t* layout.cc (Layout::finish_dynamic_section): Set DF_GNU_1_UNIQUE.\n+\t* options.h (class General_options): Handle -z unique, -z nounique.\n+\n+2020-12-14  H.J. Lu  <hjl.tools@gmail.com>\n+\t    Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/27039\n+\t* layout.cc (Layout::layout): Strip SHF_GNU_RETAIN.\n+\t* object.cc (Sized_relobj_file::Sized_relobj_file): Initialize osabi_.\n+\t(Sized_relobj_file::do_layout): Keep SHF_GNU_RETAIN sections for\n+\tGNU/FreBSD ELFOSABIs.\n+\t* object.h (Osabi) New class.\n+\t(Sized_relobj_file): Add osabi() and osabi_.\n+\t* testsuite/Makefile.am (check_SCRIPTS): Add retain.sh.\n+\t(check_DATA): Add retain_1.out retain_2.out.\n+\t(MOSTLYCLEANFILES): Add retain_1 retain_2.\n+\t(retain_1.out): New target.\n+\t(retain_1): Likewise.\n+\t(retain_1.o): Likewise.\n+\t(retain_2.out): Likewise.\n+\t(retain_2): Likewise.\n+\t(retain_2.o): Likewise.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/retain.sh: New file.\n+\t* testsuite/retain_1.s: Likewise.\n+\t* testsuite/retain_2.s: Likewise.\n+\n+2020-12-13  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23539\n+\tPR gold/24123\n+\t* testsuite/Makefile.am (incremental_copy_test): Re-enable for GCC 9+.\n+\t(incremental_comdat_test_1): Likewise.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2020-12-13  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23539\n+\t* object.cc (Sized_relobj_file::layout_gnu_property_section): Ignore\n+\tGnu properties during incremental links.\n+\n+2020-12-13  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/24123\n+\t* layout.cc (Layout::init_fixed_output_section): Mask out flags that\n+\tshould be ignored when matching sections.\n+\n+2020-12-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* plugin.cc (Plugin_recorder::init): Replace strncpy with memcpy.\n+\n+2020-12-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/Makefile.am (pr26936a.o): Pass -mx86-used-note=yes.\n+\t(pr26936b.o, pr26936c.o, pr26936d.o): Likewise.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26972\n+\t* x86_64.cc (Output_data_plt_x86_64_ibt::tlsdesc_plt_entry): Add\n+\tendbr64.\n+\t(Output_data_plt_x86_64_ibt::do_fill_tlsdesc_entry): Adjusted.\n+\n+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/26939\n+\t* x86_64.cc (Target_x86_64<size>::Scan::local): Check\n+\tget_r_addend() == -4 for GOTPCRELX conversion.\n+\t(Target_x86_64<size>::Scan::global): Likewise.\n+\t(Target_x86_64<size>::Relocate::relocate): Likewise.\n+\t* testsuite/Makefile.am (check_DATA): Add\n+\tx86_64_mov_to_lea15.stdout and x86_64_mov_to_lea16.stdout.\n+\t(MOSTLYCLEANFILES): Add x86_64_mov_to_lea15 and\n+\tx86_64_mov_to_lea16.\n+\t(x86_64_mov_to_lea9.o): New target.\n+\t(x86_64_mov_to_lea10.o): Likewise.\n+\t(x86_64_mov_to_lea15): Likewise.\n+\t(x86_64_mov_to_lea16): Likewise.\n+\t(x86_64_mov_to_lea15.stdout): Likewise.\n+\t(x86_64_mov_to_lea16.stdout): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/x86_64_mov_to_lea.sh: Updated.\n+\t* testsuite/x86_64_mov_to_lea5.s: New file.\n+\n+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/26937\n+\t* object.cc (Sized_relobj_file::map_to_kept_section): Get the\n+\tsection index for linkonce section.  Also check the single\n+\tcomdat section.\n+\t* testsuite/Makefile.am (check_SCRIPTS): Add pr26936.sh.\n+\t(check_DATA): Add pr26936a.stdout and pr26936b.stdout.\n+\t(MOSTLYCLEANFILES): Add pr26936a and pr26936b.\n+\t(pr26936a.stdout): New target.\n+\t(pr26936a): Likewise.\n+\t(pr26936b.stdout): Likewise.\n+\t(pr26936b): Likewise.\n+\t(pr26936a.o): Likewise.\n+\t(pr26936b.o): Likewise.\n+\t(pr26936c.o): Likewise.\n+\t(pr26936d.o): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/pr26936.sh: New file.\n+\t* testsuite/pr26936a.s: Likewise.\n+\t* testsuite/pr26936b.s: Likewise.\n+\t* testsuite/pr26936c.s: Likewise.\n+\t* testsuite/pr26936d.s: Likewise.\n+\n+2020-11-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::no_tprel_opt_): Rename from tprel_opt_.\n+\tInit to false.\n+\t(Target_powerpc::tprel_opt): Test parameters->options().tls_optimize().\n+\t(Target_powerpc::set_tprel_opt): Delete.\n+\t(Target_powerpc::set_no_tprel_opt): New function.  Update all uses\n+\tof set_tprel_opt.\n+\n+2020-11-16  Michael Hudson-Doyle  <michael.hudson@canonical.com>\n+\n+\tPR 26902\n+\t* powerpc.cc (Relocate::relocate): Do not include local entry\n+\toffset of target function when computing the address of a stub.\n+\n+2020-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/26200\n+\t* plugin.cc (Plugin_manager::claim_file): Don't share Plugin_list\n+\titerator.\n+\t(Plugin_manager::all_symbols_read): Likewise.\n+\t(Plugin_manager::cleanup): Likewise.\n+\n+2020-11-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::tocsave_loc): Return a pointer.\n+\t(Target_powerpc::Relocate::relocate): Avoid -Wdangling-gsl error.\n+\n+2020-11-03  Nick Gasson  <nick.gasson@arm.com>\n+\n+\tPR 26827\n+\t* fileread.cc (File_read::open): Ensure file_counts_lock is\n+\tinitialized.\n+\t* testsuite/Makefile.am (check_PROGRAMS): Add a test that passes\n+\t-Wl,--threads.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/gnu_property_test.sh: Updated.\n+\n+2020-10-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am (bootstrap-test): Skip for LTO build.\n+\t(bootstrap-test-r): Likewise.\n+\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/23539\n+\t* configure.ac: Check for GCC 9 or later and for -fcf-protection.\n+\t* configure: Regenerated.\n+\t* testsuite/Makefile.am (check_PROGRAMS): Skip incremental_test_2,\n+\tincremental_test_3, incremental_test_4, incremental_test_5,\n+\tincremental_copy_test, incremental_common_test_1 and\n+\tincremental_comdat_test_1 for -fcf-protection.  Also Skip\n+\tincremental_copy_test and incremental_comdat_test_1 for GCC 9 or\n+\tlater.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/23503\n+\t* testsuite/Makefile.am (justsyms_lib): Pass\n+\t-T $(srcdir)/justsyms_lib.t to gold.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/justsyms_lib.t: New file.\n+\t* testsuite/script_test_10.t: Discard .note.gnu.property section.\n+\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* x86_64.cc (Target_x86_64::Target_x86_64): Initialize\n+\tfeature_2_used_, feature_2_needed_ and object_feature_2_used_.\n+\t(Target_x86_64::feature_2_used_): New data member.\n+\t(Target_x86_64::feature_2_needed_): Likewise.\n+\t(Target_x86_64::object_isa_1_used_): Likewise.\n+\t(Target_x86_64::record_gnu_property): Support\n+\tGNU_PROPERTY_X86_COMPAT_ISA_1_USED,\n+\tGNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED,\n+\tGNU_PROPERTY_X86_COMPAT_2_ISA_1_USED,\n+\tGNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED,\n+\tGNU_PROPERTY_X86_FEATURE_2_USED and\n+\tGNU_PROPERTY_X86_FEATURE_2_NEEDED.\n+\t(Target_x86_64::merge_gnu_properties): Merge FEATURE_2_USED bits.\n+\tInitialize object_feature_2_used_.\n+\t(Target_x86_64::do_finalize_gnu_properties): Support\n+\tGNU_PROPERTY_X86_FEATURE_2_USED and\n+\tGNU_PROPERTY_X86_FEATURE_2_NEEDED.\n+\t* testsuite/gnu_property_a.S (GNU_PROPERTY_X86_ISA_1_USED): Set\n+\tto 0xc0010002.\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.\n+\t* testsuite/gnu_property_b.S (GNU_PROPERTY_X86_ISA_1_USED): Set\n+\tto 0xc0010002.\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.\n+\t* testsuite/gnu_property_c.S (GNU_PROPERTY_X86_ISA_1_USED): Set\n+\tto 0xc0010002.\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Set to 0xc0008002.\n+\t* testsuite/gnu_property_test.sh: Updated.\n+\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/22914\n+\tPR gold/23535\n+\t* layout.cc (Layout::attach_allocated_section_to_segment): Place\n+\ta note section in a PT_NOTE segment with the same alignment.  Set\n+\tthe alignment of the PT_NOTE segment from the alignment of the\n+\tnote section.\n+\t(Layout::create_note): Align the NT_GNU_PROPERTY_TYPE_0 note to 8\n+\tbytes for 64-bit ELF.\n+\t(Layout::segment_precedes): Place segments with larger alignments\n+\tfirst.\n+\t* output.cc (Output_segment::Output_segment): Initialize align_.\n+\t* output.h (Output_segment): Add align, set_align and align_.\n+\t* testsuite/Makefile.am (gnu_property_test.stdout): Pass -lhSWn\n+\tto $(TEST_READELF).\n+\t(gnu_property_test): Pass --build-id to ld.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/gnu_property_test.sh (check_alignment): New.\n+\tUse check_alignment to check the NT_GNU_PROPERTY_TYPE_0 note\n+\talignment.  Verify that there are 2 PT_NOTE segments.\n+\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/21452\n+\t* x86_64.cc (Scan::local_reloc_may_be_function_pointer): Remove\n+\tcheck for shared library.\n+\t(Scan::global_reloc_may_be_function_pointer): Remove check for\n+\tshared library and symbol visibility.\n+\t* testsuite/icf_safe_so_test.cc (bar_static): New function.\n+\t(main): Take function address of bar_static and use it.\n+\t* testsuite/icf_safe_so_test.sh (arch_specific_safe_fold): Also\n+\tcheck fold on x86-64.  Check bar_static isn't folded.\n+\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* icf.cc (Icf::find_identical_sections): Skip zero-sized sections.\n+\n+2020-10-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Powerpc_relobj::do_relocate_sections): Don't do\n+\tlocal entry offset optimisation for lplt_section.\n+\t(Target_powerpc::Branch_info::make_stub): Don't add local\n+\tentry offset to long branch dest passed to\n+\tadd_long_branch_entry.  Do pass st_other bits.\n+\t(Stub_table::Branch_stub_ent): Add \"other_\" field.\n+\t(Stub_table::add_long_branch_entry): Add \"other\" param, and\n+\tsave.\n+\t(Stub_table::branch_stub_size): Adjust long branch offset.\n+\t(Stub_table::do_write): Likewise.\n+\t(Target_powerpc::Relocate::relocate): Likewise.\n+\n+2020-10-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (is_got_reloc): New function.\n+\t(Target_powerpc::Relocate::relocate): Use it here, exclude GOT\n+\trelocs when looking for stubs.\n+\n+2020-10-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/split_i386.sh: Updated for --split-stack-adjust-size\n+\tdefault change.\n+\t* testsuite/split_x86_64.sh: Likewise.\n+\n+2020-10-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* options.h (split_stack_adjust_size): Default to 0x100000.\n+\n+2020-09-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc): Rename power10_stubs_ to\n+\tpower10_relocs_.\n+\t(Target_powerpc::set_power10_relocs): New accessor.\n+\t(Target_powerpc::set_power10_stubs): Delete.\n+\t(Target_powerpc::power10_stubs): Adjust.\n+\t(Target_powerpc::has_localentry0): New accessor.\n+\t(ld_0_11): New constant.\n+\t(glink_eh_frame_fde_64v1, glink_eh_frame_fde_64v2): Adjust.\n+\t(glink_eh_frame_fde_64v2_localentry0): New.\n+\t(Output_data_glink::pltresolve_size): Update.\n+\t(Output_data_glink::add_eh_frame): Use localentry0 version eh_frame.\n+\t(Output_data_glink::do_write): Move r2 save to start of ELFv2 stub\n+\tand only emit for has_localentry0.  Don't use r2 in the stub.\n+\t(Target_powerpc::Scan::local, global): Adjust for\n+\tset_power10_relocs renaming.\n+\t(Target_powerpc::scan_relocs): Warn and reset plt_localentry0_.\n+\n+2020-09-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::Relocate::relocate): Don't skip\n+\tfirst insn of __tls_get_addr_opt stub.\n+\n+2020-08-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc): Add tprel_opt_ and accessors.\n+\t(Target_powerpc::Scan::local): Sanity check tprel high relocs.\n+\t(Target_powerpc::Scan::global): Likewise.\n+\t(Target_powerpc::Relocate::relocate): Control tprel optimisation\n+\twith tprel_opt_ and enable for 32-bit.\n+\n+2020-08-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sr.po: Updated Serbian translation.\n+\n+2020-07-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* options.h (DEFINE_enum): Add optional_arg__ param, adjust\n+\tall uses.\n+\t(General_options): Add --power10-stubs and --no-power10-stubs.\n+\t* options.cc (General_options::parse_no_power10_stubs): New.\n+\t(General_options::finalize): Handle --power10-stubs.\n+\t* powerpc.cc (set_power10_stubs): Don't set when --power10-stubs=no.\n+\t(power10_stubs_auto): New.\n+\t(struct Plt_stub_ent): Add toc_ and tocoff_.  Don't use a bitfield\n+\tfor indx_.\n+\t(struct Branch_stub_ent): Add toc_and tocoff_.  Use bitfields for\n+\titer_, notoc_ and save_res_.\n+\t(add_plt_call_entry): Set toc_.  Adjust resizing conditions for\n+\t--power10-stubs=auto.\n+\t(add_long_branch_entry): Set toc_.\n+\t(add_eh_frame, define_stub_syms): No longer use const_iterators\n+\tfor plt and long branch stub iteration.\n+\t(build_tls_opt_head, build_tls_opt_tail): Change parameters and\n+\treturn value.  Move tests for __tls_get_addr to callers.\n+\t(plt_call_size): Handle --power10-stubs=auto.\n+\t(branch_stub_size): Likewise.\n+\t(Stub_table::do_write): Likewise.\n+\t(relocate): Likewise.\n+\n+2020-07-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/bnd_ifunc_1.sh: Updated.\n+\t* testsuite/bnd_plt_1.sh: Likewise.\n+\t* testsuite/split_x32.sh: Likewise.\n+\t* testsuite/split_x86_64.sh: Likewise.\n+\t* testsuite/x86_64_indirect_call_to_direct.sh: Likewise.\n+\n+2020-07-08  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/script_test_7.sh: Adjust expected address of the .bss\n+\tsection.\n+\t* testsuite/script_test_9.sh: Do not expect the .init section to\n+\timmediately follow the .text section in the mapping of sections to\n+\tsegments.\n+\n+2020-07-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* target-reloc.h: (Default_comdat_behaviour:get): Ignore discarded\n+\trelocs that refer to the .gnu.build.attributes section.\n+\n+2020-07-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.35 branch created.\n+\n+2020-07-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26028\n+\t* testsuite/Makefile.am (file_in_many_sections.stdout): Add -W\n+\tto readelf options.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n+\t* configure: Regenerated.\n+\t* config.h.in: Likewise.\n+\n+2020-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* target-reloc.h (issue_discarded_error): Initialise the\n+\tkey_symndx variable.\n+\n+2020-06-23  Roland McGrath  <mcgrathr@google.com>\n+\n+\tPR 22843\n+\t* options.h (class General_options): Add --dependency-file option.\n+\t* fileread.cc (File_read::files_read): New static variable.\n+\t(File_read::open): Add the file to the files_read list.\n+\t(File_read::record_file_read): New static member function.\n+\t(File_read::write_dependency_file): New static member function.\n+\t* fileread.h (class File_read): Declare them.\n+\t* layout.cc (Layout::read_layout_from_file): Call record_file_read.\n+\t(Close_task_runner::run): Call write_dependency_file if\n+\t--dependency-file was passed.\n+\n+2020-06-18  Fangrui Song  <i@maskray.me>\n+\n+\tPR gold/26039\n+\t* layout.cc (Layout::finish_dynamic_section): Set DF_1_PIE.\n+\n+2020-06-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/discard_locals_test.c: Replace uses of asm with __asm__.\n+\t* testsuite/discard_locals_relocatable_test.c: Likewise.\n+\n+2020-06-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/Makefile.am (export_dynamic_plugin.o): Use CXXCOMPILE.\n+\t(plugin_test_wrap_symbols_1.o): Likewise.\n+\t(plugin_test_wrap_symbols_2.o): Likewise.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2020-06-15  Roland McGrath  <mcgrathr@google.com>\n+\n+\tImplement -z start-stop-visibility=... option.\n+\t* options.h (class General_options): Handle -z start-stop-visibility=.\n+\t(General_options::start_stop_visibility_enum): New public method.\n+\t(General_options::set_start_stop_visibility_enum): New private method.\n+\t(General_options::start_stop_visibility_enum_): New private member.\n+\t* options.cc (General_options::General_options): Add initializer.\n+\t(General_options::finalize): Set this->start_stop_visibility_enum_\n+\tfrom string value.\n+\t* layout.cc (Layout::define_section_symbols): Use option setting.\n+\n+2020-06-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc: Update throughout for reloc renaming.\n+\n+2020-05-22  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25882\n+\t* powerpc.cc (merge_object_attributes): Replace name param with\n+\tobj param.  Update callers.  Don't init FP attributes from shared\n+\tlibraries, and do not emit an error if they don't match.\n+\n+2020-05-15  Nikita Ermakov  <coffe92@gmail.com>\n+\n+\t* powerpc.cc (do_gc_mark_symbol): Don't segfault on plugin symbols.\n+\n+2020-05-14  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sr.po: New Serbian translation.\n+\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc: Rename powerxx to power10 throughout.\n+\n+2020-05-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25904\n+\t* testsuite/Makefile.am (COMMON_TEST_C_CFLAGS): New.\n+\t(common_test_1.o): New rule.\n+\t(common_test_2.o): Likewise.\n+\t(common_test_3.o): Likewise.\n+\t(plugin_common_test_1.o): Likewise.\n+\t(plugin_common_test_2.o): Likewise.\n+\t(common_test_1_v1.o): Likewise.\n+\t(common_test_1_v2.o): Likewise.\n+\t(common_test_2_pic.o): Compile with $(COMMON_TEST_C_CFLAGS).\n+\t(common_test_3_pic.o): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25426\n+\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n+\tFor x32, relax \"rex leal foo@tlsdesc(%rip), %reg\" to\n+\t\"rex movl foo@gottpoff(%rip), %eax\" and relax \"\"call *(%eax)\"\n+\tto \"nopl (%rax)\".\n+\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): For x32,\n+\trelax \"rex leal foo@tlsdesc(%rip), %reg\" to\n+\t\"rex movl foo@tpoff, %eax\" and relax \"call *foo@tlscall(%eax)\"\n+\tto \"nopl (%rax)\".\n+\t* testsuite/Makefile.am (tls_test_gnu2.o): Depend on\n+\tgcctestdir/as.\n+\t(tls_test_file2_gnu2.o): Likewise.\n+\t(tls_test_c_gnu2.o): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25473\n+\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n+\tProperly check r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n+\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): Properly\n+\trelax r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n+\t* testsuite/Makefile.am (check_SCRIPTS): Add x86_64_gd_to_le.sh.\n+\t(check_DATA): Add x86_64_gd_to_le.stdout.\n+\t(MOSTLYCLEANFILES): Add x86_64_gd_to_le.\n+\t(x86_64_gd_to_le.o): New target.\n+\t(x86_64_gd_to_le): Likewise.\n+\t(x86_64_gd_to_le.stdout): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/x86_64_gd_to_le.s: New file.\n+\t* testsuite/x86_64_gd_to_le.sh: Likewise.\n+\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/odr_violation2.cc (Ordering::operator()): Make\n+\texpression even more complex.\n+\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/ver_test_pr16504.sh: Updated.\n+\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25872\n+\t* x86_64.cc (Output_data_plt_x86_64_bnd::do_write): Increment\n+\tplt_offset after setting the reserved TLSDESC PLT entry.\n+\t(Output_data_plt_x86_64_ibt<size>::do_write): Likewise.\n+\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25872\n+\t* x86_64.cc (Output_data_plt_x86_64_bnd::do_address_for_local):\n+\tHandle local IFUNC symbol.\n+\t(Output_data_plt_x86_64_ibt::do_address_for_local): Likewise.\n+\n+2020-03-19  Fangrui Song  <maskray@google.com>\n+\n+    * options.h (General_options): Add --no-rosegment option.\n+\n+2020-02-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Update French translation.\n+\n+2020-01-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* po/gold.pot: Regenerate.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.34 branch created.\n+\n+2020-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2019\n+\f\n+Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "gprof/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 74,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/gprof/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/gprof/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -1,78 +1,6 @@\n-2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\n-2020-07-09  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/tr.po: Updated Turkish translation.\n-\n-2020-07-06  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/bg.po: Updated Bulgarian translation.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.35 branch created.\n-\n-2020-06-25  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2020-05-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* utils.c (print_name_only): Free demangled without checking\n-\tfirst for non-NULL.\n-\n-2020-05-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Update Spanish translation.\n-\n-2020-05-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\n-2020-04-01  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sr.po: Updated Serbian translation.\n-\n-2020-02-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/ms.po: Update Malasian translation.\n-\n-2020-01-23  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Updated Esperanto translation.\n-\t* po/fi.po: Updated Finish translation.\n-\n-2020-01-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/de.po: Updated German translation.\n-\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n-\t* po/ru.po: Updated Russian translation.\n-\t* po/tr.po: Updated Turkish translation.\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.34 branch created.\n-\n-2020-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2019\n+For older changes see ChangeLog-2020\n \f\n-Copyright (C) 2020 Free Software Foundation, Inc.\n+Copyright (C) 2021 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "316d71d5635fa9637c2967d378edaeb3c2a106a3",
      "filename": "gprof/ChangeLog-2020",
      "status": "added",
      "additions": 86,
      "deletions": 0,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/gprof/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/gprof/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -0,0 +1,86 @@\n+2020-07-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* Makefile.am (AM_CPPFLAGS): Add LARGEFILE_CPPFLAGS.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2020-07-09  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/tr.po: Updated Turkish translation.\n+\n+2020-07-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/bg.po: Updated Bulgarian translation.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.35 branch created.\n+\n+2020-06-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2020-05-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* utils.c (print_name_only): Free demangled without checking\n+\tfirst for non-NULL.\n+\n+2020-05-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Update Spanish translation.\n+\n+2020-05-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\n+2020-04-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sr.po: Updated Serbian translation.\n+\n+2020-02-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/ms.po: Update Malasian translation.\n+\n+2020-01-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Updated Esperanto translation.\n+\t* po/fi.po: Updated Finish translation.\n+\n+2020-01-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/de.po: Updated German translation.\n+\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n+\t* po/ru.po: Updated Russian translation.\n+\t* po/tr.po: Updated Turkish translation.\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.34 branch created.\n+\n+2020-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2019\n+\f\n+Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 1008,
      "changes": 1010,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -1,1012 +1,6 @@\n-2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h (GNU_PROPERTY_X86_FEATURE_1_LAM_U48): New.\n-\t(GNU_PROPERTY_X86_FEATURE_1_LAM_U57): Likewise.\n-\n-2020-12-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* xtensa-isa-internal.h (xtisa_errno, xtisa_error_msg): Delete.\n-\n-2020-12-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/arc-attrs.h (CONFLICT_LIST): Make const.\n-\n-2020-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* bfdlink.h (struct bfd_link_info): Add maxpagesize and\n-\tcommonpagesize.\n-\n-2020-12-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* xtensa-isa-internal.h (xtensa_format_internal),\n-\t(xtensa_slot_internal, xtensa_operand_internal),\n-\t(xtensa_arg_internal, xtensa_iclass_internal),\n-\t(xtensa_opcode_internal, xtensa_regfile_internal),\n-\t(xtensa_interface_internal, xtensa_funcUnit_internal),\n-\t(xtensa_state_internal, xtensa_sysreg_internal): Constify.\n-\n-2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n-\n-\t* elf/common.h (DT_GNU_FLAGS_1, DF_GNU_1_UNIQUE): Define.\n-\t* bfdlink.h (struct bfd_link_info): New field gnu_flags_1.\n-\n-2020-12-11  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* elf/common.h: Update list of e_machine values.\n-\n-2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv.h (M_ZEXTH, M_ZEXTW, M_SEXTB, M_SEXTH.): Added.\n-\n-2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv.h: Add INSN_CLASS_ZICSR and INSN_CLASS_ZIFENCEI.\n-\n-2020-12-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* elf/common.h (SHF_GNU_BUILD_NOTE): Delete.\n-\n-2020-12-01  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv.h (RISCV_UNKNOWN_VERSION): added.\n-\n-2020-12-01  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv.h (riscv_ext_version):\n-\tChange the version type from unsigned to int.\n-\n-2020-11-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h: Style nit: remove () on function names in comments.\n-\t(ctf_sect_t): Mention endianness concerns.\n-\t(ctf_symsect_endianness): New declaration.\n-\t(ctf_arc_symsect_endianness): Likewise.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_getsymsect): New.\n-\t(ctf_getstrsect): Likewise.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_arc_lookup_symbol): New.\n-\t(ctf_arc_flush_caches): Likewise.\n-\t* ctf.h: Document new auto-ctf_import behaviour.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_symbol_next): New.\n-\t(ctf_add_objt_sym): Likewise.\n-\t(ctf_add_func_sym): Likewise.\n-\t* ctf.h: Document new function info section format.\n-\t(CTF_F_NEWFUNCINFO): New.\n-\t(CTF_F_IDXSORTED): New.\n-\t(CTF_F_MAX): Adjust accordingly.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* bfdlink.h (struct elf_sym_strtab): Replace with...\n-\t(struct elf_internal_sym): ... this.\n-\t(struct bfd_link_callbacks) <examine_strtab>: Take only a\n-\tsymstrtab argument.\n-\t<ctf_new_symbol>: New.\n-\t<ctf_new_dynsym>: Likewise.\n-\t* ctf-api.h (struct ctf_link_sym) <st_symidx>: New.\n-\t<st_nameidx>: Likewise.\n-\t<st_nameidx_set>: Likewise.\n-\t(ctf_link_iter_symbol_f): Removed.\n-\t(ctf_link_shuffle_syms): Remove most parameters, just takes a\n-\tctf_dict_t now.\n-\t(ctf_link_add_linker_symbol): New, split from\n-\tctf_link_shuffle_syms.\n-\t* ctf.h (CTF_F_DYNSTR): New.\n-\t(CTF_F_MAX): Adjust.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_arc_open_by_name): Rename to...\n-\t(ctf_dict_open): ... this, keeping compatibility function.\n-\t(ctf_arc_open_by_name_sections): Rename to...\n-\t(ctf_dict_open_sections): ... this, keeping compatibility function.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_file_t): Rename to...\n-\t(ctf_dict_t): ... this.  Keep ctf_file_t around for compatibility.\n-\t(struct ctf_file): Likewise rename to...\n-\t(struct ctf_dict): ... this.\n-\t(ctf_file_close): Rename to...\n-\t(ctf_dict_close): ... this, keeping compatibility function.\n-\t(ctf_parent_file): Rename to...\n-\t(ctf_parent_dict): ... this, keeping compatibility function.\n-\tAll callers adjusted.\n-\t* ctf.h: Rename references to ctf_file_t to ctf_dict_t.\n-\t(struct ctf_archive) <ctfa_nfiles>: Rename to...\n-\t<ctfa_ndicts>: ... this.\n-\n-2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* elf/common.h (SHF_GNU_RETAIN): Define.\n-\n-2020-11-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_FLAGM): Add new feature.\n-\t(AARCH64_FEATURE_FLAGMANIP): Update comment.\n-\t(AARCH64_ARCH_V8_4): Add back FLAGM to Armv8.4-A.\n-\n-2020-11-09  Spencer E. Olson  <olsonse@umich.edu>\n-\n-\t* opcode/pru.h: Add LMBD (left-most bit detect) opcode index.\n-\n-2020-11-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): Add new operand AARCH64_OPND_Rt_LS64.\n-\n-2020-11-06  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_PAC): Add new feature.\n-\t(AARCH64_ARCH_V8_3): Add back PAC to Armv8.3-A.\n-\n-2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_ARCH_V8): Add RAS to Armv8-A.\n-\t(AARCH64_ARCH_V8_2): Remove RAS from Armv8.2-A set.\n-\n-2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_LS64): New +ls64 feature flag.\n-\t(AARCH64_ARCH_V8_7): Add LS64 as part of Armv8.7-a.\n-\n-2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/26703\n-\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_BASELINE): New.\n-\t(GNU_PROPERTY_X86_ISA_1_V2): Uppdated.\n-\t(GNU_PROPERTY_X86_ISA_1_V3): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_V4): Likewise.\n-\n-2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_CSRE): New -march feature.\n-\u001b(enum aarch64_opnd): New CSR instruction field AARCH64_OPND_CSRE_CSR.\n-\n-2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>\n-\n-\t* opcode/csky.h (CSKY_VERSION_V1): New, currently used.\n-\t(CSKY_VERSION_V2): New.\n-\t(CSKY_VERSION_V3): New.\n-\n-2020-10-23  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): New operand\n-\tAARCH64_OPND_BARRIER_DSB_NXS.\n-\t(aarch64_barrier_dsb_nxs_options): Declare DSB nXS options.\n-\n-2020-10-21  Tom Tromey  <tromey@adacore.com>\n-\n-\t* ctf-api.h (_CTF_ERRORS): New macro.\n-\n-2020-10-16  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* elf/riscv.h: Add R_RISCV_IRELATIVE to 58.\n-\n-2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_V8_7): New feature bitmask.\n-\t(AARCH64_ARCH_V8_7): New arch feature set.\n-\n-2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/26703\n-\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_USED): This.\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): This.\n-\t(GNU_PROPERTY_X86_ISA_1_XXX): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_XXX): This.\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): New.\n-\t(GNU_PROPERTY_X86_ISA_1_USED): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_V2): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_V3): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_V4): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_MASK): Likewise.\n-\n-2020-09-23  Mark Wielaard  <mark@klomp.org>\n-\n-\tSync with GCC\n-\t* dwarf2.def: Add DWARF5 Unit type header encoding macros\n-\tDW_UT_FIRST, DW_UT and DW_UT_END.\n-\t* dwarf2.h (enum dwarf_unit_type): Removed and define using\n-\tDW_UT_FIRST, DW_UT and DW_UT_END macros.\n-\t(get_DW_UT_name): New function declaration.\n-\n-2020-09-12  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/26391\n-\t* bfdlink.h (bfd_link_info): Add unique_symbol.\n-\n-2020-09-11  Felix Willgerodt  <felix.willgerodt@intel.com>\n-\n-\tSync with GCC\n-\t2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>\n-\n-\t* floatformat.h (floatformat_bfloat16_big): New.\n-\t(floatformat_bfloat16_little): New.\n-\n-2020-09-12 Cooper Qu <cooper.qu@linux.alibaba.com>\n-\n-\t* opcode/csky.h (CSKYV1_ISA_E1): Convert to bfd_uint64_t type.\n-\t(CSKYV2_ISA_E1): Likewise.\n-\t(CSKYV2_ISA_1E2>): Likewise.\n-\t(CSKYV2_ISA_2E3>): Likewise.\n-\t(CSKYV2_ISA_3E7>): Likewise.\n-\t(CSKYV2_ISA_7E10): Likewise.\n-\t(CSKYV2_ISA_3E3R1): Likewise.\n-\t(CSKYV2_ISA_3E3R2): Likewise.\n-\t(CSKYV2_ISA_10E60): Likewise.\n-\t(CSKYV2_ISA_3E3R3): Likewise.\n-\t(CSKY_ISA_TRUST): Likewise.\n-\t(CSKY_ISA_CACHE): Likewise.\n-\t(CSKY_ISA_NVIC): Likewise.\n-\t(CSKY_ISA_CP): Likewise.\n-\t(CSKY_ISA_MP): Likewise.\n-\t(CSKY_ISA_MP_1E2): Likewise.\n-\t(CSKY_ISA_JAVA): Likewise.\n-\t(CSKY_ISA_MAC): Likewise.\n-\t(CSKY_ISA_MAC_DSP): Likewise.\n-\t(CSKY_ISA_DSP): Likewise.\n-\t(CSKY_ISA_DSP_1E2): Likewise.\n-\t(CSKY_ISA_DSP_ENHANCE): Likewise.\n-\t(CSKY_ISA_DSPE60): Likewise.\n-\t(CSKY_ISA_FLOAT_E1): Likewise.\n-\t(CSKY_ISA_FLOAT_1E2): Likewise.\n-\t(CSKY_ISA_FLOAT_1E3): Likewise.\n-\t(CSKY_ISA_FLOAT_3E4): Likewise.\n-\t(CSKY_ISA_FLOAT_7E60): Likewise.\n-\t(CSKY_ISA_VDSP): Likewise.\n-\t(CSKY_ISA_VDSP_2): Likewise.\n-\t(CSKY_ARCH_804): Define.\n-\t(CSKY_ARCH_805): Define.\n-\t(CSKY_ARCH_800): Define.\n-\n-2020-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h (NT_X86_CET): New.\n-\n-2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* opcode/csky.h (CSKY_ARCH_804): Define.\n-\t(CSKY_ARCH_805): Define.\n-\t(CSKY_ARCH_800): Define.\n-\n-2020-09-10  Nick Clifton  <nickc@redhat.com>\n-\n-\t* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Use a long long type for\n-\tthis value.\n-\n-2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* opcode/csky.h (CSKY_ISA_DSPE60): Define.\n-\n-2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Define.\n-\n-2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\tKuan-Lin Chen  <kuanlinchentw@gmail.com>\n-\n-\t* elf/msp430.h (elf_msp430_reloc_type): Add\n-\tR_MSP430_GNU_{SET,SUB}_ULEB128.\n-\t(elf_msp430x_reloc_type): Add R_MSP430X_GNU_{SET,SUB}_ULEB128.\n-\n-2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n-\n-\t* opcode/aarch64.h (aarch64_sys_ins_reg_supported_p): Also take\n-\tsystem register name in order to simplify validation for v8-R.\n-\t(aarch64_print_operand): Also take CPU feature set, as disassembly for\n-\tsystem registers now depends on arch variant.\n-\n-2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_V8_A): New.\n-\t(AARCH64_FEATURE_V8_R): New.\n-\t(AARCH64_ARCH_V8): Include new A-profile feature bit.\n-\t(AARCH64_ARCH_V8_R): New.\n-\n-2020-09-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/v850.h (struct v850_operand <insert>): Make param op an\n-\tunsigned long.\n-\n-2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* opcode/csky.h (CSKYV2_ISA_3E3R3): Define.\n-\n-2020-08-31  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26493\n-\t* opcode/riscv.h (OP_MASK_CSR, OP_MASK_CUSTOM_IMM)\n-\t(OP_MASK_FUNCT7, OP_MASK_RS3): Make unsigned.\n-\n-2020-08-31  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26457\n-\t* som/aout.h (SOM_SUBSPACE_ACCESS_CONTROL_BITS_MASK): Make unsigned.\n-\t(SOM_SUBSPACE_MEMORY_RESIDENT, SOM_SUBSPACE_DUP_COMMON)\n-\t(SOM_SUBSPACE_IS_COMMON, SOM_SUBSPACE_IS_LOADABLE)\n-\t(SOM_SUBSPACE_QUADRANT_MASK, SOM_SUBSPACE_INITIALLY_FROZEN)\n-\t(SOM_SUBSPACE_IS_FIRST, SOM_SUBSPACE_CODE_ONLY)\n-\t(SOM_SUBSPACE_SORT_KEY_MASK, SOM_SUBSPACE_REPLICATE_INIT)\n-\t(SOM_SUBSPACE_CONTINUATION, SOM_SUBSPACE_IS_TSPECIFIC)\n-\t(SOM_SUBSPACE_IS_COMDAT): Likewise.\n-\n-2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* elf/csky.h (SHT_CSKY_ATTRIBUTES): Define.\n-\t(Tag_CSKY_ARCH_NAME): New enum constant.\n-\t(Tag_CSKY_CPU_NAME): Likewise.\n-\t(Tag_CSKY_ISA_FLAGS): Likewise.\n-\t(Tag_CSKY_DSP_VERSION): Likewise.\n-\t(Tag_CSKY_VDSP_VERSION): Likewise.\n-\t(Tag_CSKY_FPU_VERSION): Likewise.\n-\t(Tag_CSKY_FPU_ABI): Likewise.\n-\t(Tag_CSKY_FPU_ROUNDING): Likewise.\n-\t(Tag_CSKY_FPU_DENORMAL): Likewise.\n-\t(Tag_CSKY_FPU_Exception): Likewise.\n-\t(Tag_CSKY_FPU_NUMBER_MODULE): Likewise.\n-\t(Tag_CSKY_FPU_HARDFP): Likewise.\n-\t(Tag_CSKY_MAX): Likewise.\n-\t(VAL_CSKY_DSP_VERSION_EXTENSION): Likewise.\n-\t(VAL_CSKY_DSP_VERSION_2): Likewise.\n-\t(VAL_CSKY_VDSP_VERSION_1): Likewise.\n-\t(VAL_CSKY_VDSP_VERSION_2): Likewise.\n-\t(VAL_CSKY_FPU_ABI_SOFT): Likewise.\n-\t(VAL_CSKY_FPU_ABI_SOFTFP): Likewise.\n-\t(VAL_CSKY_FPU_ABI_HARD): Likewise.\n-\t(VAL_CSKY_FPU_HARDFP_HALF): Likewise.\n-\t(VAL_CSKY_FPU_HARDFP_SINGLE): Likewise.\n-\t(VAL_CSKY_FPU_HARDFP_DOUBLE): Likewise.\n-\t* opcode/csky.h (CSKY_ISA_VDSP_V2): Define.\n-\tCSKYV1_ISA_E1: Change to long constant type.\n-\tCSKYV2_ISA_E1: Likewise.\n-\tCSKYV2_ISA_1E2: Likewise.\n-\tCSKYV2_ISA_2E3: Likewise.\n-\tCSKYV2_ISA_3E7: Likewise.\n-\tCSKYV2_ISA_7E10: Likewise.\n-\tCSKYV2_ISA_3E3R1: Likewise.\n-\tCSKYV2_ISA_3E3R2: Likewise.\n-\tCSKYV2_ISA_10E60: Likewise.\n-\tCSKY_ISA_TRUST: Likewise.\n-\tCSKY_ISA_CACHE: Likewise.\n-\tCSKY_ISA_NVIC: Likewise.\n-\tCSKY_ISA_CP: Likewise.\n-\tCSKY_ISA_MP: Likewise.\n-\tCSKY_ISA_MP_1E2: Likewise.\n-\tCSKY_ISA_JAVA: Likewise.\n-\tCSKY_ISA_MAC: Likewise.\n-\tCSKY_ISA_MAC_DSP: Likewise.\n-\tCSKY_ISA_DSP: Likewise.\n-\tCSKY_ISA_DSP_1E2: Likewise.\n-\tCSKY_ISA_DSP_ENHANCE: Likewise.\n-\tCSKY_ISA_FLOAT_E1: Likewise.\n-\tCSKY_ISA_FLOAT_1E2: Likewise.\n-\tCSKY_ISA_FLOAT_1E3: Likewise.\n-\tCSKY_ISA_FLOAT_3E4: Likewise.\n-\tCSKY_ISA_VDSP: Likewise.\n-\n-2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_errwarning_next): New err parameter.\n-\n-2020-08-26  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 26405\n-\t* elf/common.h (PT_OPENBSD_BOOTDATA): Define.\n-\t(PT_OPENBSD_RANDOMIZE): Define.\n-\t(PT_OPENBSD_WXNEEDED): Define.\n-\n-2020-08-26  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26458\n-\t* elf/common.h (ELF32_R_INFO): Cast symbol index to unsigned.\n-\n-2020-08-24  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* opcode/csky.h (CSKYV2_ISA_10E60): New.\n-\t(CSKY_ARCH_860): New.\n-\n-2020-08-21  Cooper Qu  <cooper.qu@linux.alibaba.com>\n-\n-\t* csky.h (CSKYV2_ISA_3E3R2): New.\n-\n-2020-08-21  Mark Wielaard  <mark@klomp.org>\n-\n-\t* diagnostics.h (DIAGNOSTIC_IGNORE_DEPRECATED_REGISTER): Also define\n-\tfor GCC 7.0 or higher.\n-\n-2020-08-10  Alex Coplan  <alex.coplan@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_MAX_SYSREG_NAME_LEN): New.\n-\n-2020-08-10  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n-\n-\t* opcode/aarch64.h (aarch64_sys_reg_deprecated_p): Functions\n-\tparamaters changed.\n-\t(aarch64_sys_reg_supported_p): Function removed.\n-\t(aarch64_sys_ins_reg_supported_p): Functions paramaters changed.\n-\n-2020-07-28  Caroline Tice  <cmtice@google.com>\n-\n-        * dwarf2.h (enum dwarf_sect_v5): A new enum section for\tthe\n-\tsections in a DWARF 5 DWP file (DWP version 5).\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (CTF_LINK_NONDEDUP): New, turn off the\n-\tdeduplicator.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (CTF_LINK_OMIT_VARIABLES_SECTION): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (CTF_LINK_SHARE_DUPLICATED): No longer unimplemented.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_link_variable_filter_t): New.\n-\t(ctf_link_set_variable_filter): Likewise.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (CTF_LINK_EMPTY_CU_MAPPINGS): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_NEEDSBFD): New.\n-\t(ECTF_NERR): Adjust.\n-\t(ctf_link): Rename share_mode arg to flags.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_INTERNAL): Adjust error text.\n-\t(ctf_errwarning_next): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_FLAGS): New.\n-\t(ECTF_NERR): Adjust.\n-\t* ctf.h (CTF_F_MAX): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_NEXT_END): New error.\n-\t(ECTF_NEXT_WRONGFUN): Likewise.\n-\t(ECTF_NEXT_WRONGFP): Likewise.\n-\t(ECTF_NERR): Adjust.\n-\t(ctf_next_t): New.\n-\t(ctf_next_create): New prototype.\n-\t(ctf_next_destroy): Likewise.\n-\t(ctf_next_copy): Likewise.\n-\t(ctf_member_next): Likewise.\n-\t(ctf_enum_next): Likewise.\n-\t(ctf_type_next): Likewise.\n-\t(ctf_label_next): Likewise.\n-\t(ctf_variable_next): Likewise.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_ref): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_archive_count): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_member_count): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_type_kind_forwarded): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.c (ctf_type_name_raw): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ECTF_*): Improve comments.\n-\t(ECTF_NERR): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h: Fix typos in comments.\n-\n-2020-07-22  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/26262\n-\tPR ld/26267\n-\t* bfdlink.h (bfd_link_info): Add lto_all_symbols_read.\n-\n-2020-07-11  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h (GNU_PROPERTY_X86_FEATURE_2_TMM): New.\n-\n-2020-07-09  John Baldwin  <jhb@FreeBSD.org>\n-\n-\t* elf/common.h (AT_FREEBSD_ARGC, AT_FREEBSD_ARGV, AT_FREEBSD_ENVC)\n-\t(AT_FREEBSD_ENVV, AT_FREEBSD_PS_STRINGS): Define.\n-\n-2020-07-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/powerpc.h: Delete.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.35 branch created.\n-\n-2020-06-30  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv-opc.h: Support the unprivileged CSR.  The versions\n-\tof the unprivileged CSR should be PRIV_SPEC_CLASS_NONE for now.\n-\t* opcode/riscv.h (enum riscv_csr_class): Add CSR_CLASS_DEBUG.\n-\n-2020-06-30  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv-opc.h: Cleanup and remove the unused macros.\n-\n-2020-06-29  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/internal.h: Use C style comments.\n-\t* coff/pe.h: Likewise.\n-\t* elf/ppc64.h: Likewise.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-api.h (ctf_arc_bufopen): New.\n-\n-2020-06-26  Pat Bernardi  <bernardi@adacore.com>\n-\n-\t* elf/m68k.h: Add enum for GNU object attribute with floating point\n-\ttag name and values.\n-\n-2020-06-25  Nick Clifton  <nickc@redhat.com>\n-\n-\t* libiberty.h (bsearch_r): Remove use of the register keyword from\n-\tthe prototype.\n-\n-2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tSync with GCC\n-\t2020-06-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* libiberty.h (bsearch_r): New.\n-\n-\t2020-04-17  Martin Liska  <mliska@suse.cz>\n-\t\t    Jonathan Yong <10walls@gmail.com>\n-\n-\tPR gcov-profile/94570\n-\t* filenames.h (defined): Do not define HAVE_DOS_BASED_FILE_SYSTEM\n-\tfor CYGWIN.\n-\n-2020-06-22  Alex Coplan  <alex.coplan@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_SHA2): Normalize.\n-\t(AARCH64_FEATURE_AES): Likewise.\n-\t(AARCH64_FEATURE_V8_4): Likewise.\n-\t(AARCH64_FEATURE_SM4): Likewise.\n-\t(AARCH64_FEATURE_SHA3): Likewise.\n-\t(AARCH64_FEATURE_V8): Likewise.\n-\t(AARCH64_FEATURE_V8_2): Likewise.\n-\t(AARCH64_FEATURE_V8_3): Likewise.\n-\t(AARCH64_FEATURE_FP): Likewise.\n-\t(AARCH64_FEATURE_SIMD): Likewise.\n-\t(AARCH64_FEATURE_CRC): Likewise.\n-\t(AARCH64_FEATURE_LSE): Likewise.\n-\t(AARCH64_FEATURE_PAN): Likewise.\n-\t(AARCH64_FEATURE_LOR): Likewise.\n-\t(AARCH64_FEATURE_RDMA): Likewise.\n-\t(AARCH64_FEATURE_V8_1): Likewise.\n-\t(AARCH64_FEATURE_F16): Likewise.\n-\t(AARCH64_FEATURE_RAS): Likewise.\n-\t(AARCH64_FEATURE_PROFILE): Likewise.\n-\t(AARCH64_FEATURE_SVE): Likewise.\n-\t(AARCH64_FEATURE_RCPC): Likewise.\n-\t(AARCH64_FEATURE_COMPNUM): Likewise.\n-\t(AARCH64_FEATURE_DOTPROD): Likewise.\n-\t(AARCH64_FEATURE_F16_FML): Likewise.\n-\t(AARCH64_FEATURE_V8_5): Likewise.\n-\t(AARCH64_FEATURE_V8_6): Likewise.\n-\t(AARCH64_FEATURE_BFLOAT16): Likewise.\n-\t(AARCH64_FEATURE_FLAGMANIP): Likewise.\n-\t(AARCH64_FEATURE_FRINTTS): Likewise.\n-\t(AARCH64_FEATURE_SB): Likewise.\n-\t(AARCH64_FEATURE_PREDRES): Likewise.\n-\t(AARCH64_FEATURE_CVADP): Likewise.\n-\t(AARCH64_FEATURE_RNG): Likewise.\n-\t(AARCH64_FEATURE_BTI): Likewise.\n-\t(AARCH64_FEATURE_SCXTNUM): Likewise.\n-\t(AARCH64_FEATURE_ID_PFR2): Likewise.\n-\t(AARCH64_FEATURE_SSBS): Likewise.\n-\t(AARCH64_FEATURE_MEMTAG): Likewise.\n-\t(AARCH64_FEATURE_TME): Likewise.\n-\t(AARCH64_FEATURE_I8MM): Likewise.\n-\t(AARCH64_FEATURE_F32MM): Likewise.\n-\t(AARCH64_FEATURE_F64MM): Likewise.\n-\t(AARCH64_FEATURE_SVE2): Likewise.\n-\t(AARCH64_FEATURE_SVE2_AES): Likewise.\n-\t(AARCH64_FEATURE_SVE2_BITPERM): Likewise.\n-\t(AARCH64_FEATURE_SVE2_SM4): Likewise.\n-\t(AARCH64_FEATURE_SVE2_SHA3): Likewise.\n-\n-2020-06-22  Saagar Jha  <saagar@saagarjha.com>\n-\n-\t* mach-o/loader.h: Add declarations of two new Mach-O load\n-\tcommands.\n-\n-2020-06-22  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv.h (riscv_get_priv_spec_class): Move the function\n-\tforward declarations to bfd/elfxx-riscv.h.\n-\t(riscv_get_priv_spec_name): Likewise.\n-\n-2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>\n-\n-\t* elf/xtensa.h (xtensa_abi_choice): New declaration.\n-\n-2020-06-12  Roland McGrath  <mcgrathr@google.com>\n-\n-\t* bfdlink.h (struct bfd_link_info): New field start_stop_visibility.\n-\n-2020-06-12  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv-opc.h: Update the defined versions of CSR from\n-\tPRIV_SPEC_CLASS_1P9 to PRIV_SPEC_CLASS_1P9P1.  Also, drop the\n-\tMISA DECLARE_CSR_ALIAS since it's aborted version is v1.9.\n-\t* opcode/riscv.h (enum riscv_priv_spec_class): Remove\n-\tPRIV_SPEC_CLASS_1P9.\n-\n-2020-06-11  Alex Coplan  <alex.coplan@arm.com>\n-\n-\t* opcode/aarch64.h (aarch64_sys_reg): Add required features to struct\n-\tdescribing system registers.\n-\n-2020-06-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/mips.h (Elf32_RegInfo): Use fixed width integer types.\n-\t(Elf64_Internal_RegInfo, Elf_Internal_Options): Likewise.\n-\n-2020-06-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/ppc64.h (elf_ppc64_reloc_type): Rename\n-\tR_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,\n-\tR_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,\n-\tR_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and\n-\tR_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.\n-\n-2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n-\n-\t* opcode/cgen.h: Get an `endian' argument in both\n-\tcgen_get_insn_value and cgen_put_insn_value.\n-\n-2020-06-04  Jose E. Marchesi  <jemarch@gnu.org>\n-\n-\t* opcode/cgen.h (enum cgen_cpu_open_arg): New value\n-\tCGEN_CPU_OPEN_INSN_ENDIAN.\n-\n-2020-06-03  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv.h: Remove #include \"bfd.h\".  And change the return\n-\ttypes of riscv_get_isa_spec_class and riscv_get_priv_spec_class\n-\tfrom bfd_boolean to int.\n-\n-2020-05-28  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 26044\n-\t* opcode/tilepro.h (TILEPRO_NUM_PIPELINE_ENCODINGS): Move to\n-\ttilepro_pipeline enum.\n-\n-2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/22909\n-\t* bfdlink.h (textrel_check_method): New enum.\n-\t(bfd_link_textrel_check): New.\n-\t(bfd_link_info): Replace warn_shared_textrel and error_textrel\n-\twith textrel_check.\n-\n-2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h: Update comments for ET_EXEC and ET_DYN.\n-\n-2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv.h: Include \"bfd.h\" to support bfd_boolean.\n-\t(enum riscv_isa_spec_class): New enum class.  All supported ISA spec\n-\tbelong to one of the class\n-\t(struct riscv_ext_version): New structure holds version information\n-\tfor the specific ISA.\n-\t* opcode/riscv-opc.h (DECLARE_CSR): There are two version information,\n-\tdefine_version and abort_version.  The define_version means which\n-\tprivilege spec is started to define the CSR, and the abort_version\n-\tmeans which privilege spec is started to abort the CSR.  If the CSR is\n-\tvalid for the newest spec, then the abort_version should be\n-\tPRIV_SPEC_CLASS_DRAFT.\n-\t(DECLARE_CSR_ALIAS): Same as DECLARE_CSR, but only for the obselete CSR.\n-\t* opcode/riscv.h (enum riscv_priv_spec_class): New enum class.  Define\n-\tthe current supported privilege spec versions.\n-\t(struct riscv_csr_extra): Add new fields to store more information\n-\tabout the CSR.  We use these information to find the suitable CSR\n-\taddress when user choosing a specific privilege spec.\n-\n-2020-05-19  Alexander Fedotov  <alfedotov@gmail.com>\n-\n-\tPR 25992\n-\t* opcode/arm.h (ARM_EXT2_V8R): Define. Modified ARM_AEXT2_V8R.\n-\n-2020-05-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/ppc.h (PPC_OPERAND_ACC): Define.  Renumber following\n-\tPPC_OPERAND defines.\n-\n-2020-05-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/ppc64.h: Update comment.\n-\t* opcode/ppc.h (PPC_OPCODE_POWER10): Rename from PPC_OPCODE_POWERXX.\n-\n-2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n-\n-\t* opcode/aarch64.h (enum aarch64_opnd): Add\n-\tAARCH64_OPND_UNDEFINED.\n-\n-2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>\n-\n-\t* elf/common.h (NT_ARC_V2): New macro definitions.\n-\n-2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>\n-\n-\tPR ld/25861\n-\t* elf/xtensa.h (elf_xtensa_reloc_type): New entries for\n-\tR_XTENSA_PDIFF{8,16,32} and R_XTENSA_NDIFF{8,16,32}.\n-\n-2020-04-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/sh.h (STO_SH5_ISA32, SHF_SH5_ISA32, SHF_SH5_ISA32_MIXED),\n-\t(SHT_SH5_CR_SORTED, STT_DATALABEL): Delete.\n-\n-2020-04-10  Fangrui Song <maskray@google.com>\n-\n-\tPR binutils/24613\n-\t* bfdlink.h (enum report_method): Delete RM_GENERATE_WARNING and\n-\tRM_GENERATE_ERROR. Add RM_DIAGNOSE.\n-\t(struct bfd_link_info): Add warn_unresolved_syms.\n-\n-2020-04-14  Stephen Casner  <casner@acm.org>\n-\n-\tPR ld/25677\n-\t* aout/aout64.h (N_DATADDR): Add IMAGIC case.\n-\n-2020-04-02  Jan W. Jagersma  <jwjagersma@gmail.com>\n-\n-\t* coff/go32exe.h: Remove file.\n-\t* coff/internal.h (struct internal_filehdr): Remove field\n-\tgo32stub.  Remove flag F_GO32STUB.\n-\n-2020-04-01  Martin Liska  <mliska@suse.cz>\n-\t    Maciej W. Rozycki <macro@linux-mips.org>\n-\n-\tPR lto/94249\n-\t* plugin-api.h: Fix a typo.\n-\n-2020-03-30  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv-opc.h: Update CSR to 1.11.\n-\n-2020-03-26  John Baldwin  <jhb@FreeBSD.org>\n-\n-\t* elf/common.h (AT_FREEBSD_BSDFLAGS): Define.\n-\n-2020-03-24  Martin Liska  <mliska@suse.cz>\n-\n-\tPR lto/94249\n-\t* plugin-api.h: Add more robust endianess detection.\n-\n-2020-03-21  Martin Liska  <mliska@suse.cz>\n-\n-\t* plugin-api.h (enum ld_plugin_symbol_type): Remove\n-\tcomma after last value of an enum.\n-\t* lto-symtab.h (enum gcc_plugin_symbol_type): Likewise.\n-\n-2020-03-19  Martin Liska  <mliska@suse.cz>\n-\n-\t* lto-symtab.h (enum gcc_plugin_symbol_type): New.\n-\t(enum gcc_plugin_symbol_section_kind): Likewise.\n-\n-2020-03-19  Martin Liska  <mliska@suse.cz>\n-\n-\t* plugin-api.h (struct ld_plugin_symbol): Split\n-\tint def into 4 char fields.\n-\t(enum ld_plugin_symbol_type): New.\n-\t(enum ld_plugin_symbol_section_kind): New.\n-\t(enum ld_plugin_tag): Add LDPT_ADD_SYMBOLS_V2.\n-\n-2020-03-13  Kamil Rytarowski  <n54@gmx.com>\n-\n-\t* elf/common.h (NT_NETBSDCORE_LWPSTATUS): New define.\n-\n-2020-03-13  Kamil Rytarowski  <n54@gmx.com>\n-\n-\t* elf/common.h (NT_NETBSDCORE_AUXV): New define.\n-\n-2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>\n-\n-\t* bfdlink.h (bfd_link_info): Add non_contiguous_regions and\n-\tnon_contiguous_regions_warnings fields.\n-\n-2020-03-13  Christian Eggers  <ceggers@gmx.de>\n-\n-\t* bfdlink.h (struct bfd_link_order): Add unit (bytes/octets) to\n-\toffset and size members.\n-\t* elf/internal.h (struct elf_internal_phdr): Likewise for\n-\tp_align member.\n-\t(struct elf_segment_map): Likewise for p_paddr and p_size\n-\tmembers\n-\n-2020-03-13  Christian Eggers  <ceggers@gmx.de>\n-\n-\t* elf/internal.h (struct elf_internal_phdr): Add unit (octets)\n-\tto several member field comments.\n-\t(Elf_Internal_Shdr): likewise.\n-\n-2020-03-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* som/aout.h (SOM_AUX_ID_MANDATORY, SOM_SPACE_IS_LOADABLE),\n-\t(SOM_SYMBOL_HIDDEN, SOM_SYMBOL_HAS_LONG_RETURN): Use 1u << 31.\n-\t* som/lst.h (LST_SYMBOL_HIDDEN): Likewise.\n-\n-2020-03-03  Luis Machado  <luis.machado@linaro.org>\n-\n-\t* elf/common.h (AT_L1I_CACHESIZE, AT_L1I_CACHEGEOMETRY)\n-\t(AT_L1D_CACHESIZE, AT_L1D_CACHEGEOMETRY, AT_L2_CACHESIZE)\n-\t(AT_L2_CACHEGEOMETRY, AT_L3_CACHESIZE, AT_L3_CACHEGEOMETRY)\n-\t(AT_MINSIGSTKSZ): New defines, imported from glibc.\n-\n-2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\tImport from gcc mainline:\n-\t2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* hashtab.h (htab_remove_elt): Make a parameter const.\n-\t(htab_remove_elt_with_hash): Likewise.\n-\n-2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n-\n-\t* opcode/riscv-opc.h: Extend DECLARE_CSR and DECLARE_CSR_ALIAS to\n-\trecord riscv_csr_class.\n-\n-2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n-\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* opcode/arm.h (ARM_EXT2_CDE): New extension macro.\n-\t(ARM_EXT2_CDE0): New extension macro.\n-\t(ARM_EXT2_CDE1): New extension macro.\n-\t(ARM_EXT2_CDE2): New extension macro.\n-\t(ARM_EXT2_CDE3): New extension macro.\n-\t(ARM_EXT2_CDE4): New extension macro.\n-\t(ARM_EXT2_CDE5): New extension macro.\n-\t(ARM_EXT2_CDE6): New extension macro.\n-\t(ARM_EXT2_CDE7): New extension macro.\n-\n-2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n-\n-\tPR 25469\n-\t* coff/internal.h (R_IMM16BE): Define.\n-\t* elf/z80.h (EF_Z80_MACH_Z80N): Define.\n-\t(R_Z80_16_BE): New reloc.\n-\n-2020-02-04  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/d30v.h (struct pd_reg): Make value field unsigned.\n-\n-2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>\n-\n-\t* coff/internal.h (PE_IMAGE_DEBUG_TYPE_VC_FEATURE)\n-\t(PE_IMAGE_DEBUG_TYPE_POGO, PE_IMAGE_DEBUG_TYPE_ILTCG)\n-\t(PE_IMAGE_DEBUG_TYPE_MPX, PE_IMAGE_DEBUG_TYPE_REPRO): Add.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.34 branch created.\n-\n-2020-01-17  Nick Clifton  <nickc@redhat.com>\n-\n-\t* Import from gcc mainline:\n-\t2019-06-10  Martin Liska  <mliska@suse.cz>\n-\n-\t* ansidecl.h (ATTRIBUTE_WARN_UNUSED_RESULT): New macro.\n-\t* libiberty.h (xmalloc): Use it.\n-\t(xrealloc): Likewise.\n-\t(xcalloc): Likewise.\n-\t(xstrdup): Likewise.\n-\t(xstrndup): Likewise.\n-\t(xmemdup): Likewise.\n-\n-\t2019-06-10  Martin Liska  <mliska@suse.cz>\n-\n-\t* ansidecl.h:\n-\t(ATTRIBUTE_RESULT_SIZE_1): Define new macro.\n-\t(ATTRIBUTE_RESULT_SIZE_2): Likewise.\n-\t(ATTRIBUTE_RESULT_SIZE_1_2): Likewise.\n-\t* libiberty.h (xmalloc): Add RESULT_SIZE attribute.\n-\t(xrealloc): Likewise.\n-\t(xcalloc): Likewise.\n-\n-\t2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>\n-\n-\t* demangle.h (struct demangle_component): Add member\n-\td_counting.\n-\n-\t2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n-\n-\t* demangle.h (rust_demangle_callback): Add.\n-\n-\t2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n-\n-\t* demangle.h (rust_is_mangled): Move to libiberty/rust-demangle.h.\n-\t(rust_demangle_sym): Move to libiberty/rust-demangle.h.\n-\n-2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n-\n-\tPR 25376\n-\t* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...\n-\t(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.\n-\t(ARM_ANY): Redefine to not include any MVE bits.\n-\t(ARM_FEATURE_ALL): Removed.\n-\n-2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n-\n-\t* opcode/msp430.h (enum msp430_expp_e): New.\n-\t(struct msp430_operand_s): Add expp member to struct.\n-\n-2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>\n-\n-\t* elf/arc-cpu.def: Update ARC cpu list.\n-\n-2020-01-13  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/tic4x.h (EXTR): Delete.\n-\t(EXTRU, EXTRS, INSERTU, INSERTS): Rewrite without zero/sign\n-\textension using shifts.  Do trim INSERTU value to specified bitfield.\n-\n-2020-01-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/spu.h: Formatting.\n-\t(UNSIGNED_EXTRACT): Use 1u.\n-\t(SIGNED_EXTRACT): Don't sign extend with shifts.\n-\t(DECODE_INSN_I9a, DECODE_INSN_I9b): Avoid left shift of signed value.\n-\tKeep result signed.\n-\t(DECODE_INSN_U9a, DECODE_INSN_U9b): Delete.\n-\n-2020-01-07  Shahab Vahedi  <shahab@synopsys.com>\n-\n-\t* opcode/arc.h (insn_class_t): Add 'LLOCK' and 'SCOND'.\n-\n-2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n-\n-\t* coff/internal.h: Add defintions of Z80 reloc names.\n-\n-2020-01-02  Christian Biesinger  <cbiesinger@google.com>\n-\n-\t* opcode/s12z.h: Undef REG_Y.\n-\n-2020-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2019\n+For older changes see ChangeLog-2020\n \f\n-Copyright (C) 2020 Free Software Foundation, Inc.\n+Copyright (C) 2021 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "976b36105e3d06009ea0bd2aea9418388899c9ff",
      "filename": "include/ChangeLog-2020",
      "status": "added",
      "additions": 1020,
      "deletions": 0,
      "changes": 1020,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/include/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/include/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -0,0 +1,1020 @@\n+2020-12-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h (GNU_PROPERTY_X86_FEATURE_1_LAM_U48): New.\n+\t(GNU_PROPERTY_X86_FEATURE_1_LAM_U57): Likewise.\n+\n+2020-12-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* xtensa-isa-internal.h (xtisa_errno, xtisa_error_msg): Delete.\n+\n+2020-12-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/arc-attrs.h (CONFLICT_LIST): Make const.\n+\n+2020-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfdlink.h (struct bfd_link_info): Add maxpagesize and\n+\tcommonpagesize.\n+\n+2020-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* xtensa-isa-internal.h (xtensa_format_internal),\n+\t(xtensa_slot_internal, xtensa_operand_internal),\n+\t(xtensa_arg_internal, xtensa_iclass_internal),\n+\t(xtensa_opcode_internal, xtensa_regfile_internal),\n+\t(xtensa_interface_internal, xtensa_funcUnit_internal),\n+\t(xtensa_state_internal, xtensa_sysreg_internal): Constify.\n+\n+2020-12-15  Vivek Das Mohapatra  <vivek@collabora.com>\n+\n+\t* elf/common.h (DT_GNU_FLAGS_1, DF_GNU_1_UNIQUE): Define.\n+\t* bfdlink.h (struct bfd_link_info): New field gnu_flags_1.\n+\n+2020-12-11  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* elf/common.h: Update list of e_machine values.\n+\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h (M_ZEXTH, M_ZEXTW, M_SEXTB, M_SEXTH.): Added.\n+\n+2020-12-10  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h: Add INSN_CLASS_ZICSR and INSN_CLASS_ZIFENCEI.\n+\n+2020-12-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* elf/common.h (SHF_GNU_BUILD_NOTE): Delete.\n+\n+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h (RISCV_UNKNOWN_VERSION): added.\n+\n+2020-12-01  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h (riscv_ext_version):\n+\tChange the version type from unsigned to int.\n+\n+2020-11-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h: Style nit: remove () on function names in comments.\n+\t(ctf_sect_t): Mention endianness concerns.\n+\t(ctf_symsect_endianness): New declaration.\n+\t(ctf_arc_symsect_endianness): Likewise.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_getsymsect): New.\n+\t(ctf_getstrsect): Likewise.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_arc_lookup_symbol): New.\n+\t(ctf_arc_flush_caches): Likewise.\n+\t* ctf.h: Document new auto-ctf_import behaviour.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_symbol_next): New.\n+\t(ctf_add_objt_sym): Likewise.\n+\t(ctf_add_func_sym): Likewise.\n+\t* ctf.h: Document new function info section format.\n+\t(CTF_F_NEWFUNCINFO): New.\n+\t(CTF_F_IDXSORTED): New.\n+\t(CTF_F_MAX): Adjust accordingly.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* bfdlink.h (struct elf_sym_strtab): Replace with...\n+\t(struct elf_internal_sym): ... this.\n+\t(struct bfd_link_callbacks) <examine_strtab>: Take only a\n+\tsymstrtab argument.\n+\t<ctf_new_symbol>: New.\n+\t<ctf_new_dynsym>: Likewise.\n+\t* ctf-api.h (struct ctf_link_sym) <st_symidx>: New.\n+\t<st_nameidx>: Likewise.\n+\t<st_nameidx_set>: Likewise.\n+\t(ctf_link_iter_symbol_f): Removed.\n+\t(ctf_link_shuffle_syms): Remove most parameters, just takes a\n+\tctf_dict_t now.\n+\t(ctf_link_add_linker_symbol): New, split from\n+\tctf_link_shuffle_syms.\n+\t* ctf.h (CTF_F_DYNSTR): New.\n+\t(CTF_F_MAX): Adjust.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_arc_open_by_name): Rename to...\n+\t(ctf_dict_open): ... this, keeping compatibility function.\n+\t(ctf_arc_open_by_name_sections): Rename to...\n+\t(ctf_dict_open_sections): ... this, keeping compatibility function.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_file_t): Rename to...\n+\t(ctf_dict_t): ... this.  Keep ctf_file_t around for compatibility.\n+\t(struct ctf_file): Likewise rename to...\n+\t(struct ctf_dict): ... this.\n+\t(ctf_file_close): Rename to...\n+\t(ctf_dict_close): ... this, keeping compatibility function.\n+\t(ctf_parent_file): Rename to...\n+\t(ctf_parent_dict): ... this, keeping compatibility function.\n+\tAll callers adjusted.\n+\t* ctf.h: Rename references to ctf_file_t to ctf_dict_t.\n+\t(struct ctf_archive) <ctfa_nfiles>: Rename to...\n+\t<ctfa_ndicts>: ... this.\n+\n+2020-11-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* elf/common.h (SHF_GNU_RETAIN): Define.\n+\n+2020-11-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_FLAGM): Add new feature.\n+\t(AARCH64_FEATURE_FLAGMANIP): Update comment.\n+\t(AARCH64_ARCH_V8_4): Add back FLAGM to Armv8.4-A.\n+\n+2020-11-09  Spencer E. Olson  <olsonse@umich.edu>\n+\n+\t* opcode/pru.h: Add LMBD (left-most bit detect) opcode index.\n+\n+2020-11-09  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): Add new operand AARCH64_OPND_Rt_LS64.\n+\n+2020-11-06  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_PAC): Add new feature.\n+\t(AARCH64_ARCH_V8_3): Add back PAC to Armv8.3-A.\n+\n+2020-11-04  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_ARCH_V8): Add RAS to Armv8-A.\n+\t(AARCH64_ARCH_V8_2): Remove RAS from Armv8.2-A set.\n+\n+2020-11-03  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_LS64): New +ls64 feature flag.\n+\t(AARCH64_ARCH_V8_7): Add LS64 as part of Armv8.7-a.\n+\n+2020-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/26703\n+\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_BASELINE): New.\n+\t(GNU_PROPERTY_X86_ISA_1_V2): Uppdated.\n+\t(GNU_PROPERTY_X86_ISA_1_V3): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_V4): Likewise.\n+\n+2020-10-27  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_CSRE): New -march feature.\n+\u001b(enum aarch64_opnd): New CSR instruction field AARCH64_OPND_CSRE_CSR.\n+\n+2020-10-26  Cooper Qu <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKY_VERSION_V1): New, currently used.\n+\t(CSKY_VERSION_V2): New.\n+\t(CSKY_VERSION_V3): New.\n+\n+2020-10-23  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): New operand\n+\tAARCH64_OPND_BARRIER_DSB_NXS.\n+\t(aarch64_barrier_dsb_nxs_options): Declare DSB nXS options.\n+\n+2020-10-21  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ctf-api.h (_CTF_ERRORS): New macro.\n+\n+2020-10-16  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* elf/riscv.h: Add R_RISCV_IRELATIVE to 58.\n+\n+2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_V8_7): New feature bitmask.\n+\t(AARCH64_ARCH_V8_7): New arch feature set.\n+\n+2020-10-09  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/26703\n+\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_USED): This.\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_NEEDED): This.\n+\t(GNU_PROPERTY_X86_ISA_1_XXX): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_2_ISA_1_XXX): This.\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): New.\n+\t(GNU_PROPERTY_X86_ISA_1_USED): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_V2): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_V3): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_V4): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_MASK): Likewise.\n+\n+2020-09-23  Mark Wielaard  <mark@klomp.org>\n+\n+\tSync with GCC\n+\t* dwarf2.def: Add DWARF5 Unit type header encoding macros\n+\tDW_UT_FIRST, DW_UT and DW_UT_END.\n+\t* dwarf2.h (enum dwarf_unit_type): Removed and define using\n+\tDW_UT_FIRST, DW_UT and DW_UT_END macros.\n+\t(get_DW_UT_name): New function declaration.\n+\n+2020-09-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26391\n+\t* bfdlink.h (bfd_link_info): Add unique_symbol.\n+\n+2020-09-11  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\tSync with GCC\n+\t2020-09-08  Felix Willgerodt  <felix.willgerodt@intel.com>\n+\n+\t* floatformat.h (floatformat_bfloat16_big): New.\n+\t(floatformat_bfloat16_little): New.\n+\n+2020-09-12 Cooper Qu <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKYV1_ISA_E1): Convert to bfd_uint64_t type.\n+\t(CSKYV2_ISA_E1): Likewise.\n+\t(CSKYV2_ISA_1E2>): Likewise.\n+\t(CSKYV2_ISA_2E3>): Likewise.\n+\t(CSKYV2_ISA_3E7>): Likewise.\n+\t(CSKYV2_ISA_7E10): Likewise.\n+\t(CSKYV2_ISA_3E3R1): Likewise.\n+\t(CSKYV2_ISA_3E3R2): Likewise.\n+\t(CSKYV2_ISA_10E60): Likewise.\n+\t(CSKYV2_ISA_3E3R3): Likewise.\n+\t(CSKY_ISA_TRUST): Likewise.\n+\t(CSKY_ISA_CACHE): Likewise.\n+\t(CSKY_ISA_NVIC): Likewise.\n+\t(CSKY_ISA_CP): Likewise.\n+\t(CSKY_ISA_MP): Likewise.\n+\t(CSKY_ISA_MP_1E2): Likewise.\n+\t(CSKY_ISA_JAVA): Likewise.\n+\t(CSKY_ISA_MAC): Likewise.\n+\t(CSKY_ISA_MAC_DSP): Likewise.\n+\t(CSKY_ISA_DSP): Likewise.\n+\t(CSKY_ISA_DSP_1E2): Likewise.\n+\t(CSKY_ISA_DSP_ENHANCE): Likewise.\n+\t(CSKY_ISA_DSPE60): Likewise.\n+\t(CSKY_ISA_FLOAT_E1): Likewise.\n+\t(CSKY_ISA_FLOAT_1E2): Likewise.\n+\t(CSKY_ISA_FLOAT_1E3): Likewise.\n+\t(CSKY_ISA_FLOAT_3E4): Likewise.\n+\t(CSKY_ISA_FLOAT_7E60): Likewise.\n+\t(CSKY_ISA_VDSP): Likewise.\n+\t(CSKY_ISA_VDSP_2): Likewise.\n+\t(CSKY_ARCH_804): Define.\n+\t(CSKY_ARCH_805): Define.\n+\t(CSKY_ARCH_800): Define.\n+\n+2020-09-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h (NT_X86_CET): New.\n+\n+2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKY_ARCH_804): Define.\n+\t(CSKY_ARCH_805): Define.\n+\t(CSKY_ARCH_800): Define.\n+\n+2020-09-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Use a long long type for\n+\tthis value.\n+\n+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKY_ISA_DSPE60): Define.\n+\n+2020-09-07  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKY_ISA_FLOAT_7E60): Define.\n+\n+2020-09-08  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\tKuan-Lin Chen  <kuanlinchentw@gmail.com>\n+\n+\t* elf/msp430.h (elf_msp430_reloc_type): Add\n+\tR_MSP430_GNU_{SET,SUB}_ULEB128.\n+\t(elf_msp430x_reloc_type): Add R_MSP430X_GNU_{SET,SUB}_ULEB128.\n+\n+2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_sys_ins_reg_supported_p): Also take\n+\tsystem register name in order to simplify validation for v8-R.\n+\t(aarch64_print_operand): Also take CPU feature set, as disassembly for\n+\tsystem registers now depends on arch variant.\n+\n+2020-09-08  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_V8_A): New.\n+\t(AARCH64_FEATURE_V8_R): New.\n+\t(AARCH64_ARCH_V8): Include new A-profile feature bit.\n+\t(AARCH64_ARCH_V8_R): New.\n+\n+2020-09-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/v850.h (struct v850_operand <insert>): Make param op an\n+\tunsigned long.\n+\n+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKYV2_ISA_3E3R3): Define.\n+\n+2020-08-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26493\n+\t* opcode/riscv.h (OP_MASK_CSR, OP_MASK_CUSTOM_IMM)\n+\t(OP_MASK_FUNCT7, OP_MASK_RS3): Make unsigned.\n+\n+2020-08-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26457\n+\t* som/aout.h (SOM_SUBSPACE_ACCESS_CONTROL_BITS_MASK): Make unsigned.\n+\t(SOM_SUBSPACE_MEMORY_RESIDENT, SOM_SUBSPACE_DUP_COMMON)\n+\t(SOM_SUBSPACE_IS_COMMON, SOM_SUBSPACE_IS_LOADABLE)\n+\t(SOM_SUBSPACE_QUADRANT_MASK, SOM_SUBSPACE_INITIALLY_FROZEN)\n+\t(SOM_SUBSPACE_IS_FIRST, SOM_SUBSPACE_CODE_ONLY)\n+\t(SOM_SUBSPACE_SORT_KEY_MASK, SOM_SUBSPACE_REPLICATE_INIT)\n+\t(SOM_SUBSPACE_CONTINUATION, SOM_SUBSPACE_IS_TSPECIFIC)\n+\t(SOM_SUBSPACE_IS_COMDAT): Likewise.\n+\n+2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* elf/csky.h (SHT_CSKY_ATTRIBUTES): Define.\n+\t(Tag_CSKY_ARCH_NAME): New enum constant.\n+\t(Tag_CSKY_CPU_NAME): Likewise.\n+\t(Tag_CSKY_ISA_FLAGS): Likewise.\n+\t(Tag_CSKY_DSP_VERSION): Likewise.\n+\t(Tag_CSKY_VDSP_VERSION): Likewise.\n+\t(Tag_CSKY_FPU_VERSION): Likewise.\n+\t(Tag_CSKY_FPU_ABI): Likewise.\n+\t(Tag_CSKY_FPU_ROUNDING): Likewise.\n+\t(Tag_CSKY_FPU_DENORMAL): Likewise.\n+\t(Tag_CSKY_FPU_Exception): Likewise.\n+\t(Tag_CSKY_FPU_NUMBER_MODULE): Likewise.\n+\t(Tag_CSKY_FPU_HARDFP): Likewise.\n+\t(Tag_CSKY_MAX): Likewise.\n+\t(VAL_CSKY_DSP_VERSION_EXTENSION): Likewise.\n+\t(VAL_CSKY_DSP_VERSION_2): Likewise.\n+\t(VAL_CSKY_VDSP_VERSION_1): Likewise.\n+\t(VAL_CSKY_VDSP_VERSION_2): Likewise.\n+\t(VAL_CSKY_FPU_ABI_SOFT): Likewise.\n+\t(VAL_CSKY_FPU_ABI_SOFTFP): Likewise.\n+\t(VAL_CSKY_FPU_ABI_HARD): Likewise.\n+\t(VAL_CSKY_FPU_HARDFP_HALF): Likewise.\n+\t(VAL_CSKY_FPU_HARDFP_SINGLE): Likewise.\n+\t(VAL_CSKY_FPU_HARDFP_DOUBLE): Likewise.\n+\t* opcode/csky.h (CSKY_ISA_VDSP_V2): Define.\n+\tCSKYV1_ISA_E1: Change to long constant type.\n+\tCSKYV2_ISA_E1: Likewise.\n+\tCSKYV2_ISA_1E2: Likewise.\n+\tCSKYV2_ISA_2E3: Likewise.\n+\tCSKYV2_ISA_3E7: Likewise.\n+\tCSKYV2_ISA_7E10: Likewise.\n+\tCSKYV2_ISA_3E3R1: Likewise.\n+\tCSKYV2_ISA_3E3R2: Likewise.\n+\tCSKYV2_ISA_10E60: Likewise.\n+\tCSKY_ISA_TRUST: Likewise.\n+\tCSKY_ISA_CACHE: Likewise.\n+\tCSKY_ISA_NVIC: Likewise.\n+\tCSKY_ISA_CP: Likewise.\n+\tCSKY_ISA_MP: Likewise.\n+\tCSKY_ISA_MP_1E2: Likewise.\n+\tCSKY_ISA_JAVA: Likewise.\n+\tCSKY_ISA_MAC: Likewise.\n+\tCSKY_ISA_MAC_DSP: Likewise.\n+\tCSKY_ISA_DSP: Likewise.\n+\tCSKY_ISA_DSP_1E2: Likewise.\n+\tCSKY_ISA_DSP_ENHANCE: Likewise.\n+\tCSKY_ISA_FLOAT_E1: Likewise.\n+\tCSKY_ISA_FLOAT_1E2: Likewise.\n+\tCSKY_ISA_FLOAT_1E3: Likewise.\n+\tCSKY_ISA_FLOAT_3E4: Likewise.\n+\tCSKY_ISA_VDSP: Likewise.\n+\n+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_errwarning_next): New err parameter.\n+\n+2020-08-26  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26405\n+\t* elf/common.h (PT_OPENBSD_BOOTDATA): Define.\n+\t(PT_OPENBSD_RANDOMIZE): Define.\n+\t(PT_OPENBSD_WXNEEDED): Define.\n+\n+2020-08-26  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26458\n+\t* elf/common.h (ELF32_R_INFO): Cast symbol index to unsigned.\n+\n+2020-08-24  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* opcode/csky.h (CSKYV2_ISA_10E60): New.\n+\t(CSKY_ARCH_860): New.\n+\n+2020-08-21  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* csky.h (CSKYV2_ISA_3E3R2): New.\n+\n+2020-08-21  Mark Wielaard  <mark@klomp.org>\n+\n+\t* diagnostics.h (DIAGNOSTIC_IGNORE_DEPRECATED_REGISTER): Also define\n+\tfor GCC 7.0 or higher.\n+\n+2020-08-10  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_MAX_SYSREG_NAME_LEN): New.\n+\n+2020-08-10  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_sys_reg_deprecated_p): Functions\n+\tparamaters changed.\n+\t(aarch64_sys_reg_supported_p): Function removed.\n+\t(aarch64_sys_ins_reg_supported_p): Functions paramaters changed.\n+\n+2020-07-28  Caroline Tice  <cmtice@google.com>\n+\n+        * dwarf2.h (enum dwarf_sect_v5): A new enum section for\tthe\n+\tsections in a DWARF 5 DWP file (DWP version 5).\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (CTF_LINK_NONDEDUP): New, turn off the\n+\tdeduplicator.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (CTF_LINK_OMIT_VARIABLES_SECTION): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (CTF_LINK_SHARE_DUPLICATED): No longer unimplemented.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_link_variable_filter_t): New.\n+\t(ctf_link_set_variable_filter): Likewise.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (CTF_LINK_EMPTY_CU_MAPPINGS): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_NEEDSBFD): New.\n+\t(ECTF_NERR): Adjust.\n+\t(ctf_link): Rename share_mode arg to flags.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_INTERNAL): Adjust error text.\n+\t(ctf_errwarning_next): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_FLAGS): New.\n+\t(ECTF_NERR): Adjust.\n+\t* ctf.h (CTF_F_MAX): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_NEXT_END): New error.\n+\t(ECTF_NEXT_WRONGFUN): Likewise.\n+\t(ECTF_NEXT_WRONGFP): Likewise.\n+\t(ECTF_NERR): Adjust.\n+\t(ctf_next_t): New.\n+\t(ctf_next_create): New prototype.\n+\t(ctf_next_destroy): Likewise.\n+\t(ctf_next_copy): Likewise.\n+\t(ctf_member_next): Likewise.\n+\t(ctf_enum_next): Likewise.\n+\t(ctf_type_next): Likewise.\n+\t(ctf_label_next): Likewise.\n+\t(ctf_variable_next): Likewise.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_ref): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_archive_count): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_member_count): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_type_kind_forwarded): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.c (ctf_type_name_raw): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_*): Improve comments.\n+\t(ECTF_NERR): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h: Fix typos in comments.\n+\n+2020-07-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/26262\n+\tPR ld/26267\n+\t* bfdlink.h (bfd_link_info): Add lto_all_symbols_read.\n+\n+2020-07-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h (GNU_PROPERTY_X86_FEATURE_2_TMM): New.\n+\n+2020-07-09  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* elf/common.h (AT_FREEBSD_ARGC, AT_FREEBSD_ARGV, AT_FREEBSD_ENVC)\n+\t(AT_FREEBSD_ENVV, AT_FREEBSD_PS_STRINGS): Define.\n+\n+2020-07-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/powerpc.h: Delete.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.35 branch created.\n+\n+2020-06-30  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv-opc.h: Support the unprivileged CSR.  The versions\n+\tof the unprivileged CSR should be PRIV_SPEC_CLASS_NONE for now.\n+\t* opcode/riscv.h (enum riscv_csr_class): Add CSR_CLASS_DEBUG.\n+\n+2020-06-30  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv-opc.h: Cleanup and remove the unused macros.\n+\n+2020-06-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/internal.h: Use C style comments.\n+\t* coff/pe.h: Likewise.\n+\t* elf/ppc64.h: Likewise.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_arc_bufopen): New.\n+\n+2020-06-26  Pat Bernardi  <bernardi@adacore.com>\n+\n+\t* elf/m68k.h: Add enum for GNU object attribute with floating point\n+\ttag name and values.\n+\n+2020-06-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* libiberty.h (bsearch_r): Remove use of the register keyword from\n+\tthe prototype.\n+\n+2020-06-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tSync with GCC\n+\t2020-06-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* libiberty.h (bsearch_r): New.\n+\n+\t2020-04-17  Martin Liska  <mliska@suse.cz>\n+\t\t    Jonathan Yong <10walls@gmail.com>\n+\n+\tPR gcov-profile/94570\n+\t* filenames.h (defined): Do not define HAVE_DOS_BASED_FILE_SYSTEM\n+\tfor CYGWIN.\n+\n+2020-06-22  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_SHA2): Normalize.\n+\t(AARCH64_FEATURE_AES): Likewise.\n+\t(AARCH64_FEATURE_V8_4): Likewise.\n+\t(AARCH64_FEATURE_SM4): Likewise.\n+\t(AARCH64_FEATURE_SHA3): Likewise.\n+\t(AARCH64_FEATURE_V8): Likewise.\n+\t(AARCH64_FEATURE_V8_2): Likewise.\n+\t(AARCH64_FEATURE_V8_3): Likewise.\n+\t(AARCH64_FEATURE_FP): Likewise.\n+\t(AARCH64_FEATURE_SIMD): Likewise.\n+\t(AARCH64_FEATURE_CRC): Likewise.\n+\t(AARCH64_FEATURE_LSE): Likewise.\n+\t(AARCH64_FEATURE_PAN): Likewise.\n+\t(AARCH64_FEATURE_LOR): Likewise.\n+\t(AARCH64_FEATURE_RDMA): Likewise.\n+\t(AARCH64_FEATURE_V8_1): Likewise.\n+\t(AARCH64_FEATURE_F16): Likewise.\n+\t(AARCH64_FEATURE_RAS): Likewise.\n+\t(AARCH64_FEATURE_PROFILE): Likewise.\n+\t(AARCH64_FEATURE_SVE): Likewise.\n+\t(AARCH64_FEATURE_RCPC): Likewise.\n+\t(AARCH64_FEATURE_COMPNUM): Likewise.\n+\t(AARCH64_FEATURE_DOTPROD): Likewise.\n+\t(AARCH64_FEATURE_F16_FML): Likewise.\n+\t(AARCH64_FEATURE_V8_5): Likewise.\n+\t(AARCH64_FEATURE_V8_6): Likewise.\n+\t(AARCH64_FEATURE_BFLOAT16): Likewise.\n+\t(AARCH64_FEATURE_FLAGMANIP): Likewise.\n+\t(AARCH64_FEATURE_FRINTTS): Likewise.\n+\t(AARCH64_FEATURE_SB): Likewise.\n+\t(AARCH64_FEATURE_PREDRES): Likewise.\n+\t(AARCH64_FEATURE_CVADP): Likewise.\n+\t(AARCH64_FEATURE_RNG): Likewise.\n+\t(AARCH64_FEATURE_BTI): Likewise.\n+\t(AARCH64_FEATURE_SCXTNUM): Likewise.\n+\t(AARCH64_FEATURE_ID_PFR2): Likewise.\n+\t(AARCH64_FEATURE_SSBS): Likewise.\n+\t(AARCH64_FEATURE_MEMTAG): Likewise.\n+\t(AARCH64_FEATURE_TME): Likewise.\n+\t(AARCH64_FEATURE_I8MM): Likewise.\n+\t(AARCH64_FEATURE_F32MM): Likewise.\n+\t(AARCH64_FEATURE_F64MM): Likewise.\n+\t(AARCH64_FEATURE_SVE2): Likewise.\n+\t(AARCH64_FEATURE_SVE2_AES): Likewise.\n+\t(AARCH64_FEATURE_SVE2_BITPERM): Likewise.\n+\t(AARCH64_FEATURE_SVE2_SM4): Likewise.\n+\t(AARCH64_FEATURE_SVE2_SHA3): Likewise.\n+\n+2020-06-22  Saagar Jha  <saagar@saagarjha.com>\n+\n+\t* mach-o/loader.h: Add declarations of two new Mach-O load\n+\tcommands.\n+\n+2020-06-22  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h (riscv_get_priv_spec_class): Move the function\n+\tforward declarations to bfd/elfxx-riscv.h.\n+\t(riscv_get_priv_spec_name): Likewise.\n+\n+2020-06-15  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* elf/xtensa.h (xtensa_abi_choice): New declaration.\n+\n+2020-06-12  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* bfdlink.h (struct bfd_link_info): New field start_stop_visibility.\n+\n+2020-06-12  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv-opc.h: Update the defined versions of CSR from\n+\tPRIV_SPEC_CLASS_1P9 to PRIV_SPEC_CLASS_1P9P1.  Also, drop the\n+\tMISA DECLARE_CSR_ALIAS since it's aborted version is v1.9.\n+\t* opcode/riscv.h (enum riscv_priv_spec_class): Remove\n+\tPRIV_SPEC_CLASS_1P9.\n+\n+2020-06-11  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_sys_reg): Add required features to struct\n+\tdescribing system registers.\n+\n+2020-06-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/mips.h (Elf32_RegInfo): Use fixed width integer types.\n+\t(Elf64_Internal_RegInfo, Elf_Internal_Options): Likewise.\n+\n+2020-06-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc64.h (elf_ppc64_reloc_type): Rename\n+\tR_PPC64_GOT_TLSGD34 to R_PPC64_GOT_TLSGD_PCREL34,\n+\tR_PPC64_GOT_TLSLD34 to R_PPC64_GOT_TLSLD_PCREL34,\n+\tR_PPC64_GOT_TPREL34 to R_PPC64_GOT_TPREL_PCREL34, and\n+\tR_PPC64_GOT_DTPREL34 to R_PPC64_GOT_DTPREL_PCREL34.\n+\n+2020-06-04  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* opcode/cgen.h: Get an `endian' argument in both\n+\tcgen_get_insn_value and cgen_put_insn_value.\n+\n+2020-06-04  Jose E. Marchesi  <jemarch@gnu.org>\n+\n+\t* opcode/cgen.h (enum cgen_cpu_open_arg): New value\n+\tCGEN_CPU_OPEN_INSN_ENDIAN.\n+\n+2020-06-03  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h: Remove #include \"bfd.h\".  And change the return\n+\ttypes of riscv_get_isa_spec_class and riscv_get_priv_spec_class\n+\tfrom bfd_boolean to int.\n+\n+2020-05-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26044\n+\t* opcode/tilepro.h (TILEPRO_NUM_PIPELINE_ENCODINGS): Move to\n+\ttilepro_pipeline enum.\n+\n+2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/22909\n+\t* bfdlink.h (textrel_check_method): New enum.\n+\t(bfd_link_textrel_check): New.\n+\t(bfd_link_info): Replace warn_shared_textrel and error_textrel\n+\twith textrel_check.\n+\n+2020-05-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h: Update comments for ET_EXEC and ET_DYN.\n+\n+2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv.h: Include \"bfd.h\" to support bfd_boolean.\n+\t(enum riscv_isa_spec_class): New enum class.  All supported ISA spec\n+\tbelong to one of the class\n+\t(struct riscv_ext_version): New structure holds version information\n+\tfor the specific ISA.\n+\t* opcode/riscv-opc.h (DECLARE_CSR): There are two version information,\n+\tdefine_version and abort_version.  The define_version means which\n+\tprivilege spec is started to define the CSR, and the abort_version\n+\tmeans which privilege spec is started to abort the CSR.  If the CSR is\n+\tvalid for the newest spec, then the abort_version should be\n+\tPRIV_SPEC_CLASS_DRAFT.\n+\t(DECLARE_CSR_ALIAS): Same as DECLARE_CSR, but only for the obselete CSR.\n+\t* opcode/riscv.h (enum riscv_priv_spec_class): New enum class.  Define\n+\tthe current supported privilege spec versions.\n+\t(struct riscv_csr_extra): Add new fields to store more information\n+\tabout the CSR.  We use these information to find the suitable CSR\n+\taddress when user choosing a specific privilege spec.\n+\n+2020-05-19  Alexander Fedotov  <alfedotov@gmail.com>\n+\n+\tPR 25992\n+\t* opcode/arm.h (ARM_EXT2_V8R): Define. Modified ARM_AEXT2_V8R.\n+\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/ppc.h (PPC_OPERAND_ACC): Define.  Renumber following\n+\tPPC_OPERAND defines.\n+\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc64.h: Update comment.\n+\t* opcode/ppc.h (PPC_OPCODE_POWER10): Rename from PPC_OPCODE_POWERXX.\n+\n+2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): Add\n+\tAARCH64_OPND_UNDEFINED.\n+\n+2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>\n+\n+\t* elf/common.h (NT_ARC_V2): New macro definitions.\n+\n+2020-04-22  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR ld/25861\n+\t* elf/xtensa.h (elf_xtensa_reloc_type): New entries for\n+\tR_XTENSA_PDIFF{8,16,32} and R_XTENSA_NDIFF{8,16,32}.\n+\n+2020-04-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/sh.h (STO_SH5_ISA32, SHF_SH5_ISA32, SHF_SH5_ISA32_MIXED),\n+\t(SHT_SH5_CR_SORTED, STT_DATALABEL): Delete.\n+\n+2020-04-10  Fangrui Song <maskray@google.com>\n+\n+\tPR binutils/24613\n+\t* bfdlink.h (enum report_method): Delete RM_GENERATE_WARNING and\n+\tRM_GENERATE_ERROR. Add RM_DIAGNOSE.\n+\t(struct bfd_link_info): Add warn_unresolved_syms.\n+\n+2020-04-14  Stephen Casner  <casner@acm.org>\n+\n+\tPR ld/25677\n+\t* aout/aout64.h (N_DATADDR): Add IMAGIC case.\n+\n+2020-04-02  Jan W. Jagersma  <jwjagersma@gmail.com>\n+\n+\t* coff/go32exe.h: Remove file.\n+\t* coff/internal.h (struct internal_filehdr): Remove field\n+\tgo32stub.  Remove flag F_GO32STUB.\n+\n+2020-04-01  Martin Liska  <mliska@suse.cz>\n+\t    Maciej W. Rozycki <macro@linux-mips.org>\n+\n+\tPR lto/94249\n+\t* plugin-api.h: Fix a typo.\n+\n+2020-03-30  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv-opc.h: Update CSR to 1.11.\n+\n+2020-03-26  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* elf/common.h (AT_FREEBSD_BSDFLAGS): Define.\n+\n+2020-03-24  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/94249\n+\t* plugin-api.h: Add more robust endianess detection.\n+\n+2020-03-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* plugin-api.h (enum ld_plugin_symbol_type): Remove\n+\tcomma after last value of an enum.\n+\t* lto-symtab.h (enum gcc_plugin_symbol_type): Likewise.\n+\n+2020-03-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto-symtab.h (enum gcc_plugin_symbol_type): New.\n+\t(enum gcc_plugin_symbol_section_kind): Likewise.\n+\n+2020-03-19  Martin Liska  <mliska@suse.cz>\n+\n+\t* plugin-api.h (struct ld_plugin_symbol): Split\n+\tint def into 4 char fields.\n+\t(enum ld_plugin_symbol_type): New.\n+\t(enum ld_plugin_symbol_section_kind): New.\n+\t(enum ld_plugin_tag): Add LDPT_ADD_SYMBOLS_V2.\n+\n+2020-03-13  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* elf/common.h (NT_NETBSDCORE_LWPSTATUS): New define.\n+\n+2020-03-13  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* elf/common.h (NT_NETBSDCORE_AUXV): New define.\n+\n+2020-03-13  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* bfdlink.h (bfd_link_info): Add non_contiguous_regions and\n+\tnon_contiguous_regions_warnings fields.\n+\n+2020-03-13  Christian Eggers  <ceggers@gmx.de>\n+\n+\t* bfdlink.h (struct bfd_link_order): Add unit (bytes/octets) to\n+\toffset and size members.\n+\t* elf/internal.h (struct elf_internal_phdr): Likewise for\n+\tp_align member.\n+\t(struct elf_segment_map): Likewise for p_paddr and p_size\n+\tmembers\n+\n+2020-03-13  Christian Eggers  <ceggers@gmx.de>\n+\n+\t* elf/internal.h (struct elf_internal_phdr): Add unit (octets)\n+\tto several member field comments.\n+\t(Elf_Internal_Shdr): likewise.\n+\n+2020-03-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* som/aout.h (SOM_AUX_ID_MANDATORY, SOM_SPACE_IS_LOADABLE),\n+\t(SOM_SYMBOL_HIDDEN, SOM_SYMBOL_HAS_LONG_RETURN): Use 1u << 31.\n+\t* som/lst.h (LST_SYMBOL_HIDDEN): Likewise.\n+\n+2020-03-03  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* elf/common.h (AT_L1I_CACHESIZE, AT_L1I_CACHEGEOMETRY)\n+\t(AT_L1D_CACHESIZE, AT_L1D_CACHEGEOMETRY, AT_L2_CACHESIZE)\n+\t(AT_L2_CACHEGEOMETRY, AT_L3_CACHESIZE, AT_L3_CACHEGEOMETRY)\n+\t(AT_MINSIGSTKSZ): New defines, imported from glibc.\n+\n+2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tImport from gcc mainline:\n+\t2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* hashtab.h (htab_remove_elt): Make a parameter const.\n+\t(htab_remove_elt_with_hash): Likewise.\n+\n+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv-opc.h: Extend DECLARE_CSR and DECLARE_CSR_ALIAS to\n+\trecord riscv_csr_class.\n+\n+2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n+\t    Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_CDE): New extension macro.\n+\t(ARM_EXT2_CDE0): New extension macro.\n+\t(ARM_EXT2_CDE1): New extension macro.\n+\t(ARM_EXT2_CDE2): New extension macro.\n+\t(ARM_EXT2_CDE3): New extension macro.\n+\t(ARM_EXT2_CDE4): New extension macro.\n+\t(ARM_EXT2_CDE5): New extension macro.\n+\t(ARM_EXT2_CDE6): New extension macro.\n+\t(ARM_EXT2_CDE7): New extension macro.\n+\n+2020-02-07  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25469\n+\t* coff/internal.h (R_IMM16BE): Define.\n+\t* elf/z80.h (EF_Z80_MACH_Z80N): Define.\n+\t(R_Z80_16_BE): New reloc.\n+\n+2020-02-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/d30v.h (struct pd_reg): Make value field unsigned.\n+\n+2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>\n+\n+\t* coff/internal.h (PE_IMAGE_DEBUG_TYPE_VC_FEATURE)\n+\t(PE_IMAGE_DEBUG_TYPE_POGO, PE_IMAGE_DEBUG_TYPE_ILTCG)\n+\t(PE_IMAGE_DEBUG_TYPE_MPX, PE_IMAGE_DEBUG_TYPE_REPRO): Add.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.34 branch created.\n+\n+2020-01-17  Nick Clifton  <nickc@redhat.com>\n+\n+\t* Import from gcc mainline:\n+\t2019-06-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* ansidecl.h (ATTRIBUTE_WARN_UNUSED_RESULT): New macro.\n+\t* libiberty.h (xmalloc): Use it.\n+\t(xrealloc): Likewise.\n+\t(xcalloc): Likewise.\n+\t(xstrdup): Likewise.\n+\t(xstrndup): Likewise.\n+\t(xmemdup): Likewise.\n+\n+\t2019-06-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* ansidecl.h:\n+\t(ATTRIBUTE_RESULT_SIZE_1): Define new macro.\n+\t(ATTRIBUTE_RESULT_SIZE_2): Likewise.\n+\t(ATTRIBUTE_RESULT_SIZE_1_2): Likewise.\n+\t* libiberty.h (xmalloc): Add RESULT_SIZE attribute.\n+\t(xrealloc): Likewise.\n+\t(xcalloc): Likewise.\n+\n+\t2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* demangle.h (struct demangle_component): Add member\n+\td_counting.\n+\n+\t2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* demangle.h (rust_demangle_callback): Add.\n+\n+\t2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* demangle.h (rust_is_mangled): Move to libiberty/rust-demangle.h.\n+\t(rust_demangle_sym): Move to libiberty/rust-demangle.h.\n+\n+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR 25376\n+\t* opcodes/arm.h (FPU_MVE, FPU_MVE_FPU): Move these features to...\n+\t(ARM_EXT2_MVE, ARM_EXT2_MVE_FP): ... the CORE_HIGH space.\n+\t(ARM_ANY): Redefine to not include any MVE bits.\n+\t(ARM_FEATURE_ALL): Removed.\n+\n+2020-01-15  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* opcode/msp430.h (enum msp430_expp_e): New.\n+\t(struct msp430_operand_s): Add expp member to struct.\n+\n+2020-01-13  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* elf/arc-cpu.def: Update ARC cpu list.\n+\n+2020-01-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/tic4x.h (EXTR): Delete.\n+\t(EXTRU, EXTRS, INSERTU, INSERTS): Rewrite without zero/sign\n+\textension using shifts.  Do trim INSERTU value to specified bitfield.\n+\n+2020-01-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/spu.h: Formatting.\n+\t(UNSIGNED_EXTRACT): Use 1u.\n+\t(SIGNED_EXTRACT): Don't sign extend with shifts.\n+\t(DECODE_INSN_I9a, DECODE_INSN_I9b): Avoid left shift of signed value.\n+\tKeep result signed.\n+\t(DECODE_INSN_U9a, DECODE_INSN_U9b): Delete.\n+\n+2020-01-07  Shahab Vahedi  <shahab@synopsys.com>\n+\n+\t* opcode/arc.h (insn_class_t): Add 'LLOCK' and 'SCOND'.\n+\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* coff/internal.h: Add defintions of Z80 reloc names.\n+\n+2020-01-02  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* opcode/s12z.h: Undef REG_Y.\n+\n+2020-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2019\n+\f\n+Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 4544,
      "changes": 4546,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    },
    {
      "sha": "03b4b224b7be052564df6b38493d37d9e9a43a40",
      "filename": "ld/ChangeLog-2020",
      "status": "added",
      "additions": 4556,
      "deletions": 0,
      "changes": 4556,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/ld/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/ld/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 1947,
      "changes": 1954,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -1,1954 +1,14 @@\n-2020-09-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libctf/26934\n-\t* ctf-dump.c (ctf_dump_objts): Pass format argument to asprintf.\n-\n-2020-11-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_dict_t) <ctf_symtab_little_endian>: New.\n-\t(struct ctf_archive_internal) <ctfi_symsect_little_endian>: Likewise.\n-\t* ctf-create.c (ctf_serialize): Adjust for new field.\n-\t* ctf-open.c (init_symtab): Note the semantics of repeated calls.\n-\t(ctf_symsect_endianness): New.\n-\t(ctf_bufopen_internal): Set ctf_symtab_little_endian suitably for\n-\tthe native endianness.\n-\t(_Static_assert): Moved...\n-\t(swap_thing): ... with this...\n-\t* swap.h: ... to here.\n-\t* ctf-util.c (ctf_elf32_to_link_sym): Use it, byteswapping the\n-\tElf32_Sym if the ctf_symtab_little_endian demands it.\n-\t(ctf_elf64_to_link_sym): Likewise swap the Elf64_Sym if needed.\n-\t* ctf-archive.c (ctf_arc_symsect_endianness): New, set the\n-\tendianness of the symtab used by the dicts in an archive.\n-\t(ctf_archive_iter_internal): Initialize to unknown (assumed native,\n-\tdo not call ctf_symsect_endianness).\n-\t(ctf_dict_open_by_offset): Call ctf_symsect_endianness if need be.\n-\t(ctf_dict_open_internal): Propagate the endianness down.\n-\t(ctf_dict_open_sections): Likewise.\n-\t* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Get the endianness from the\n-\tstruct bfd and pass it down to the archive.\n-\t* libctf.ver: Add ctf_symsect_endianness and\n-\tctf_arc_symsect_endianness.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-link.c (ctf_link_deduplicating): Clean up the ctf_link_outputs\n-\thash on error.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_dtd_insert): Set ENOMEM on the dict if out of memory.\n-\t(ctf_dvd_insert): Likewise.\n-\t(ctf_add_function): Report ECTF_RDONLY if this dict is not writable.\n-\t* ctf-subr.c (ctf_err_warn): Only debug-dump passed-in warnings if\n-\tthe passed-in error code is nonzero: the error on the dict for\n-\twarnings may relate to a previous error.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (ctf_getsymsect): New.\n-\t(ctf_getstrsect): Likewise.\n-\t* libctf.ver: Add them.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (struct ctf_archive_internal) <ctfi_dicts>: New, dicts\n-\tthe archive machinery has opened and cached.\n-\t<ctfi_symdicts>: New, cache of dicts containing symbols looked up.\n-\t<ctfi_syms>: New, cache of types of symbols looked up.\n-\t* ctf-archive.c (ctf_arc_close): Free them on close.\n-\t(enosym): New, flag entry for 'symbol not present'.\n-\t(ctf_arc_import_parent): New, automatically import the parent from\n-\t\".ctf\" if this is a child in an archive and \".ctf\" is present.\n-\t(ctf_dict_open_sections): Use it.\n-\t(ctf_archive_iter_internal): Likewise.\n-\t(ctf_cached_dict_close): New, thunk around ctf_dict_close.\n-\t(ctf_dict_open_cached): New, open and cache a dict.\n-\t(ctf_arc_flush_caches): New, flush the caches.\n-\t(ctf_arc_lookup_symbol): New, look up a symbol in (all members of)\n-\tan archive, and cache the lookup.\n-\t(ctf_archive_iter): Note the new caching behaviour.\n-\t(ctf_archive_next): Use ctf_dict_open_cached.\n-\t* libctf.ver: Add ctf_arc_lookup_symbol and ctf_arc_flush_caches.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dedup.c (ctf_dedup_rhash_type): Null out the names of nameless\n-\ttype kinds, just in case the input has named them.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_dump_header): Dump the new flags bits and the index\n-\tsection lengths.\n-\t(ctf_dump_objts): Report indexed sections.  Also dump functions.  Use\n-\tctf_symbol_next, not manual looping.\n-\t(ctf_dump_funcs): Delete.\n-\t(ctf_dump): Use ctf_dump_objts, not ctf_dump_funcs.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (CTF_INDEX_PAD_THRESHOLD): New.\n-\t(_libctf_nonnull_): Likewise.\n-\t(ctf_in_flight_dynsym_t): New.\n-\t(ctf_dict_t) <ctf_funcidx_names>: Likewise.\n-\t<ctf_objtidx_names>: Likewise.\n-\t<ctf_nfuncidx>: Likewise.\n-\t<ctf_nobjtidx>: Likewise.\n-\t<ctf_funcidx_sxlate>: Likewise.\n-\t<ctf_objtidx_sxlate>: Likewise.\n-\t<ctf_objthash>: Likewise.\n-\t<ctf_funchash>: Likewise.\n-\t<ctf_dynsyms>: Likewise.\n-\t<ctf_dynsymidx>: Likewise.\n-\t<ctf_dynsymmax>: Likewise.\n-\t<ctf_in_flight_dynsym>: Likewise.\n-\t(struct ctf_next) <u.ctn_next>: Likewise.\n-\t(ctf_symtab_skippable): New prototype.\n-\t(ctf_add_funcobjt_sym): Likewise.\n-\t(ctf_dynhash_sort_by_name): Likewise.\n-\t(ctf_sym_to_elf64): Rename to...\n-\t(ctf_elf32_to_link_sym): ... this, and...\n-\t(ctf_elf64_to_link_sym): ... this.\n-\t* ctf-open.c (init_symtab): Check for lack of CTF_F_NEWFUNCINFO\n-\tflag, and presence of index sections.  Refactor out\n-\tctf_symtab_skippable and ctf_elf*_to_link_sym, and use them.  Use\n-\tctf_link_sym_t, not Elf64_Sym.  Skip initializing objt or func\n-\tsxlate sections if corresponding index section is present.  Adjust\n-\tfor new func info section format.\n-\t(ctf_bufopen_internal): Add ctf_err_warn to corrupt-file error\n-\thandling.  Report incorrect-length index sections.  Always do an\n-\tinit_symtab, even if there is no symtab section (there may be index\n-\tsections still).\n-\t(flip_objts): Adjust comment: func and objt sections are actually\n-\tidentical in structure now, no need to caveat.\n-\t(ctf_dict_close):  Free newly-added data structures.\n-\t* ctf-create.c (ctf_create): Initialize them.\n-\t(ctf_symtab_skippable): New, refactored out of\n-\tinit_symtab, with st_nameidx_set check added.\n-\t(ctf_add_funcobjt_sym): New, add a function or object symbol to the\n-\tctf_objthash or ctf_funchash, by name.\n-\t(ctf_add_objt_sym): Call it.\n-\t(ctf_add_func_sym): Likewise.\n-\t(symtypetab_delete_nonstatic_vars): New, delete vars also present as\n-\tdata objects.\n-\t(CTF_SYMTYPETAB_EMIT_FUNCTION): New flag to symtypetab emitters:\n-\tthis is a function emission, not a data object emission.\n-\t(CTF_SYMTYPETAB_EMIT_PAD): New flag to symtypetab emitters: emit\n-\tpads for symbols with no type (only set for unindexed sections).\n-\t(CTF_SYMTYPETAB_FORCE_INDEXED): New flag to symtypetab emitters:\n-\talways emit indexed.\n-\t(symtypetab_density): New, figure out section sizes.\n-\t(emit_symtypetab): New, emit a symtypetab.\n-\t(emit_symtypetab_index): New, emit a symtypetab index.\n-\t(ctf_serialize): Call them, emitting suitably sorted symtypetab\n-\tsections and indexes.  Set suitable header flags.  Copy over new\n-\tfields.\n-\t* ctf-hash.c (ctf_dynhash_sort_by_name): New, used to impose an\n-\torder on symtypetab index sections.\n-\t* ctf-link.c (ctf_add_type_mapping): Delete erroneous comment\n-\trelating to code that was never committed.\n-\t(ctf_link_one_variable): Improve variable name.\n-\t(check_sym): New, symtypetab analogue of check_variable.\n-\t(ctf_link_deduplicating_one_symtypetab): New.\n-\t(ctf_link_deduplicating_syms): Likewise.\n-\t(ctf_link_deduplicating): Call them.\n-\t(ctf_link_deduplicating_per_cu): Note that we don't call them in\n-\tthis case (yet).\n-\t(ctf_link_add_strtab): Set the error on the fp correctly.\n-\t(ctf_link_add_linker_symbol): New (no longer a do-nothing stub), add\n-\ta linker symbol to the in-flight list.\n-\t(ctf_link_shuffle_syms): New (no longer a do-nothing stub), turn the\n-\tin-flight list into a mapping we can use, now its names are\n-\tresolvable in the external strtab.\n-\t* ctf-string.c (ctf_str_rollback_atom): Don't roll back atoms with\n-\texternal strtab offsets.\n-\t(ctf_str_rollback): Adjust comment.\n-\t(ctf_str_write_strtab): Migrate ctf_syn_ext_strtab population from\n-\twriteout time...\n-\t(ctf_str_add_external): ... to string addition time.\n-\t* ctf-lookup.c (ctf_lookup_var_key_t): Rename to...\n-\t(ctf_lookup_idx_key_t): ... this, now we use it for syms too.\n-\t<clik_names>: New member, a name table.\n-\t(ctf_lookup_var): Adjust accordingly.\n-\t(ctf_lookup_variable): Likewise.\n-\t(ctf_lookup_by_id): Shuffle further up in the file.\n-\t(ctf_symidx_sort_arg_cb): New, callback for...\n-\t(sort_symidx_by_name): ... this new function to sort a symidx\n-\tfound to be unsorted (likely originating from the compiler).\n-\t(ctf_symidx_sort): New, sort a symidx.\n-\t(ctf_lookup_symbol_name): Support dynamic symbols with indexes\n-\tprovided by the linker.  Use ctf_link_sym_t, not Elf64_Sym.\n-\tCheck the parent if a child lookup fails.\n-\t(ctf_lookup_by_symbol): Likewise.  Work for function symbols too.\n-\t(ctf_symbol_next): New, iterate over symbols with types (without\n-\tsorting).\n-\t(ctf_lookup_idx_name): New, bsearch for symbol names in indexes.\n-\t(ctf_try_lookup_indexed): New, attempt an indexed lookup.\n-\t(ctf_func_info): Reimplement in terms of ctf_lookup_by_symbol.\n-\t(ctf_func_args): Likewise.\n-\t(ctf_get_dict): Move...\n-\t* ctf-types.c (ctf_get_dict): ... here.\n-\t* ctf-util.c (ctf_sym_to_elf64): Re-express as...\n-\t(ctf_elf64_to_link_sym): ... this.  Add new st_symidx field, and\n-\tst_nameidx_set (always 0, so st_nameidx can be ignored).  Look in\n-\tthe ELF strtab for names.\n-\t(ctf_elf32_to_link_sym): Likewise, for Elf32_Sym.\n-\t(ctf_next_destroy): Destroy ctf_next_t.u.ctn_next if need be.\n-\t* libctf.ver: Add ctf_symbol_next, ctf_add_objt_sym and\n-\tctf_add_func_sym.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-link.c (ctf_link_shuffle_syms): Adjust.\n-\t(ctf_link_add_linker_symbol): New, unimplemented stub.\n-\t* libctf.ver: Add it.\n-\t* ctf-create.c (ctf_serialize): Set CTF_F_DYNSTR on newly-serialized\n-\tdicts.\n-\t* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Check for the flag: open the\n-\tsymtab/strtab if not present, dynsym/dynstr otherwise.\n-\t* ctf-archive.c (ctf_arc_bufpreamble): New, get the preamble from\n-\tsome arbitrary member of a CTF archive.\n-\t* ctf-impl.h (ctf_arc_bufpreamble): Declare it.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (ctf_arc_open_by_offset): Rename to...\n-\t(ctf_dict_open_by_offset): ... this.  Adjust callers.\n-\t(ctf_arc_open_by_name_internal): Rename to...\n-\t(ctf_dict_open_internal): ... this.  Adjust callers.\n-\t(ctf_arc_open_by_name_sections): Rename to...\n-\t(ctf_dict_open_sections): ... this, keeping compatibility function.\n-\t(ctf_arc_open_by_name): Rename to...\n-\t(ctf_dict_open): ... this, keeping compatibility function.\n-\t* libctf.ver: New functions added.\n-\t* ctf-link.c (ctf_link_one_input_archive): Adjusted accordingly.\n-\t(ctf_link_deduplicating_open_inputs): Likewise.\n-\n-2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h: Rename ctf_file_t to ctf_dict_t: all declarations\n-\tadjusted.\n-\t(ctf_fileops): Rename to...\n-\t(ctf_dictops): ... this.\n-\t(ctf_dedup_t) <cd_id_to_file_t>: Rename to...\n-\t<cd_id_to_dict_t>: ... this.\n-\t(ctf_file_t): Fix outdated comment.\n-\t<ctf_fileops>: Rename to...\n-\t<ctf_dictops>: ... this.\n-\t(struct ctf_archive_internal) <ctfi_file>: Rename to...\n-\t<ctfi_dict>: ... this.\n-\t* ctf-archive.c: Rename ctf_file_t to ctf_dict_t.\n-\tRename ctf_archive.ctfa_nfiles to ctfa_ndicts.\n-\tRename ctf_file_close to ctf_dict_close.  All users adjusted.\n-\t* ctf-create.c: Likewise.  Refer to CTF dicts, not CTF containers.\n-\t(ctf_bundle_t) <ctb_file>: Rename to...\n-\t<ctb_dict): ... this.\n-\t* ctf-decl.c: Rename ctf_file_t to ctf_dict_t.\n-\t* ctf-dedup.c: Likewise.  Rename ctf_file_close to\n-\tctf_dict_close. Refer to CTF dicts, not CTF containers.\n-\t* ctf-dump.c: Likewise.\n-\t* ctf-error.c: Likewise.\n-\t* ctf-hash.c: Likewise.\n-\t* ctf-inlines.h: Likewise.\n-\t* ctf-labels.c: Likewise.\n-\t* ctf-link.c: Likewise.\n-\t* ctf-lookup.c: Likewise.\n-\t* ctf-open-bfd.c: Likewise.\n-\t* ctf-string.c: Likewise.\n-\t* ctf-subr.c: Likewise.\n-\t* ctf-types.c: Likewise.\n-\t* ctf-util.c: Likewise.\n-\t* ctf-open.c: Likewise.\n-\t(ctf_file_close): Rename to...\n-\t(ctf_dict_close): ...this.\n-\t(ctf_file_close): New trivial wrapper around ctf_dict_close, for\n-\tcompatibility.\n-\t(ctf_parent_file): Rename to...\n-\t(ctf_parent_dict): ... this.\n-\t(ctf_parent_file): New trivial wrapper around ctf_parent_dict, for\n-\tcompatibility.\n-\t* libctf.ver: Add ctf_dict_close and ctf_parent_dict.\n-\n-2020-10-21  Tom Tromey  <tromey@adacore.com>\n-\n-\t* mkerrors.sed: Remove.\n-\t* ctf-error.c (_CTF_FIRST): New define.\n-\t(_CTF_ITEM): Define this, not _CTF_STR.\n-\t(_ctf_errlist, _ctf_erridx): Use _CTF_ERRORS.\n-\t(ERRSTRFIELD): Rewrite.\n-\t(ERRSTRFIELD1): Remove.\n-\t* Makefile.in: Rebuild.\n-\t* Makefile.am (BUILT_SOURCES): Remove.\n-\t(ctf-error.h): Remove.\n-\n-2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-subr.c (open_errors): New list.\n-\t(ctf_err_warn): Calls with NULL fp append to open_errors.  Add err\n-\tparameter, and use it to decorate the debug stream with errmsgs.\n-\t(ctf_err_warn_to_open): Splice errors from a CTF dict into the\n-\topen_errors.\n-\t(ctf_errwarning_next): Calls with NULL fp report from open_errors.\n-\tNew err param to report iteration errors (including end-of-iteration)\n-\twhen fp is NULL.\n-\t(ctf_assert_fail_internal): Adjust ctf_err_warn call for new err\n-\tparameter: gettextize.\n-\t* ctf-impl.h (ctfo_get_vbytes): Add ctf_file_t parameter.\n-\t(LCTF_VBYTES): Adjust.\n-\t(ctf_err_warn_to_open): New.\n-\t(ctf_err_warn): Adjust.\n-\t(ctf_bundle): Used in only one place: move...\n-\t* ctf-create.c: ... here.\n-\t(enumcmp): Use ctf_err_warn, not ctf_dprintf, passing the err number\n-\tdown as needed.  Don't emit the errmsg.  Gettextize.\n-\t(membcmp): Likewise.\n-\t(ctf_add_type_internal): Likewise.\n-\t(ctf_write_mem): Likewise.\n-\t(ctf_compress_write): Likewise.  Report errors writing the header or\n-\tbody.\n-\t(ctf_write): Likewise.\n-\t* ctf-archive.c (ctf_arc_write_fd): Use ctf_err_warn, not\n-\tctf_dprintf, and gettextize, as above.\n-\t(ctf_arc_write): Likewise.\n-\t(ctf_arc_bufopen): Likewise.\n-\t(ctf_arc_open_internal): Likewise.\n-\t* ctf-labels.c (ctf_label_iter): Likewise.\n-\t* ctf-open-bfd.c (ctf_bfdclose): Likewise.\n-\t(ctf_bfdopen): Likewise.\n-\t(ctf_bfdopen_ctfsect): Likewise.\n-\t(ctf_fdopen): Likewise.\n-\t* ctf-string.c (ctf_str_write_strtab): Likewise.\n-\t* ctf-types.c (ctf_type_resolve): Likewise.\n-\t* ctf-open.c (get_vbytes_common): Likewise. Pass down the ctf dict.\n-\t(get_vbytes_v1): Pass down the ctf dict.\n-\t(get_vbytes_v2): Likewise.\n-\t(flip_ctf): Likewise.\n-\t(flip_types): Likewise. Use ctf_err_warn, not ctf_dprintf, and\n-\tgettextize, as above.\n-\t(upgrade_types_v1): Adjust calls.\n-\t(init_types): Use ctf_err_warn, not ctf_dprintf, as above.\n-\t(ctf_bufopen_internal): Likewise. Adjust calls. Transplant errors\n-\temitted into individual dicts into the open errors if this turns\n-\tout to be a failed open in the end.\n-\t* ctf-dump.c (ctf_dump_format_type): Adjust ctf_err_warn for new err\n-\targument.  Gettextize.  Don't emit the errmsg.\n-\t(ctf_dump_funcs): Likewise.  Collapse err label into its only case.\n-\t(ctf_dump_type): Likewise.\n-\t* ctf-link.c (ctf_create_per_cu): Adjust ctf_err_warn for new err\n-\targument.  Gettextize.  Don't emit the errmsg.\n-\t(ctf_link_one_type): Likewise.\n-\t(ctf_link_lazy_open): Likewise.\n-\t(ctf_link_one_input_archive): Likewise.\n-\t(ctf_link_deduplicating_count_inputs): Likewise.\n-\t(ctf_link_deduplicating_open_inputs): Likewise.\n-\t(ctf_link_deduplicating_close_inputs): Likewise.\n-\t(ctf_link_deduplicating): Likewise.\n-\t(ctf_link): Likewise.\n-\t(ctf_link_deduplicating_per_cu): Likewise. Add some missed\n-\tctf_set_errnos to obscure error cases.\n-\t* ctf-dedup.c (ctf_dedup_rhash_type): Adjust ctf_err_warn for new\n-\terr argument.  Gettextize.  Don't emit the errmsg.\n-\t(ctf_dedup_populate_mappings): Likewise.\n-\t(ctf_dedup_detect_name_ambiguity): Likewise.\n-\t(ctf_dedup_init): Likewise.\n-\t(ctf_dedup_multiple_input_dicts): Likewise.\n-\t(ctf_dedup_conflictify_unshared): Likewise.\n-\t(ctf_dedup): Likewise.\n-\t(ctf_dedup_rwalk_one_output_mapping): Likewise.\n-\t(ctf_dedup_id_to_target): Likewise.\n-\t(ctf_dedup_emit_type): Likewise.\n-\t(ctf_dedup_emit_struct_members): Likewise.\n-\t(ctf_dedup_populate_type_mapping): Likewise.\n-\t(ctf_dedup_populate_type_mappings): Likewise.\n-\t(ctf_dedup_emit): Likewise.\n-\t(ctf_dedup_hash_type): Likewise. Fix a bit of messed-up error\n-\tstatus setting.\n-\t(ctf_dedup_rwalk_one_output_mapping): Likewise. Don't hide\n-\tunknown-type-kind messages (which signify file corruption).\n-\n-2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.ac: Adjust package name to simply 'libctf': arbitrarily\n-\tdeclare this to be version 1.2.0.\n-\t* Makefile.am (AM_CPPFLAGS): Add @INCINTL@.\n-\t* Makefile.in: Regenerated.\n-\t* configure: Regenerated.\n-\t* ctf-intl.h: New file, lightly modified from opcodes/opintl.h.\n-\t* ctf-impl.h: Include it.\n-\t* ctf-error.r (_ctf_errlist_t): Mark strings as noop-translatable.\n-\t(ctf_errmsg): Actually translate them.\n-\n-2020-07-26  Eli Zaretskii  <eliz@gnu.org>\n-\n-\tPR binutils/25155:\n-\t* ctf-create.c (EOVERFLOW): If not defined by system header,\n-\tredirect to ERANGE as a poor man's substitute.\n-\t* ctf-subr.c (ENOTSUP): If not defined, use ENOSYS instead.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_dtd_insert): Add uintptr_t casts.\n-\t(ctf_dtd_delete): Likewise.\n-\t(ctf_dtd_lookup): Likewise.\n-\t(ctf_rollback): Likewise.\n-\t* ctf-hash.c (ctf_hash_lookup_type): Likewise.\n-\t* ctf-types.c (ctf_lookup_by_rawhash): Likewise.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-lookup.c (ctf_lookup_by_name): Adjust.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (ctf_arc_bufopen): Endian-swap the archive magic\n-\tnumber if needed.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_list_splice): New.\n-\t* ctf-util.h (ctf_list_splice): Likewise.\n-\t* ctf-link.c (link_sort_inputs_cb_arg_t): Likewise.\n-\t(ctf_link_sort_inputs): Likewise.\n-\t(ctf_link_deduplicating_count_inputs): Likewise.\n-\t(ctf_link_deduplicating_open_inputs): Likewise.\n-\t(ctf_link_deduplicating_close_inputs): Likewise.\n-\t(ctf_link_deduplicating_variables): Likewise.\n-\t(ctf_link_deduplicating_per_cu): Likewise.\n-\t(ctf_link_deduplicating): Likewise.\n-\t(ctf_link): Call it.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-link.c (ctf_link_one_input_archive_member): Check\n-\tCTF_LINK_OMIT_VARIABLES_SECTION.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_type_id_key): New, the key in the\n-\tcd_id_to_file_t.\n-\t(ctf_dedup): New, core deduplicator state.\n-\t(ctf_file_t) <ctf_dedup>: New.\n-\t<ctf_dedup_atoms>: New.\n-\t<ctf_dedup_atoms_alloc>: New.\n-\t(ctf_hash_type_id_key): New prototype.\n-\t(ctf_hash_eq_type_id_key): Likewise.\n-\t(ctf_dedup_atoms_init): Likewise.\n-\t* ctf-hash.c (ctf_hash_eq_type_id_key): New.\n-\t(ctf_dedup_atoms_init): Likewise.\n-\t* ctf-create.c (ctf_serialize): Adjusted.\n-\t(ctf_add_encoded): No longer static.\n-\t(ctf_add_reftype): Likewise.\n-\t* ctf-open.c (ctf_file_close): Destroy the\n-\tctf_dedup_atoms_alloc.\n-\t* ctf-dedup.c: New file.\n-        * ctf-decls.h [!HAVE_DECL_STPCPY]: Add prototype.\n-\t* configure.ac: Check for stpcpy.\n-\t* Makefile.am: Add it.\n-\t* Makefile.in: Regenerate.\n-        * config.h.in: Regenerate.\n-        * configure: Regenerate.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.ac: Add --enable-libctf-hash-debugging.\n-\t* aclocal.m4: Pull in enable.m4, for GCC_ENABLE.\n-\t* Makefile.in: Regenerated.\n-\t* configure: Likewise.\n-\t* config.h.in: Likewise.\n-\t* ctf-impl.h [ENABLE_LIBCTF_HASH_DEBUGGING]\n-\t(ctf_assert): Define to assert.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-sha1.h: New, inline wrappers around sha1_init_ctx and\n-\tsha1_process_bytes.\n-\t* ctf-impl.h: Include it.\n-\t(ctf_sha1_init): New.\n-\t(ctf_sha1_add): Likewise.\n-\t(ctf_sha1_fini): Likewise.\n-\t* ctf-sha1.c: New, non-inline wrapper around sha1_finish_ctx\n-\tproducing strings.\n-\t* Makefile.am: Add file.\n-\t* Makefile.in: Regenerate.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* libctf.ver (ctf_link_set_variable_filter): Add.\n-\t* ctf-impl.h (ctf_file_t) <ctf_link_variable_filter>: New.\n-\t<ctf_link_variable_filter_arg>: Likewise.\n-\t* ctf-create.c (ctf_serialize): Adjust.\n-\t* ctf-link.c (ctf_link_set_variable_filter): New, set it.\n-\t(ctf_link_one_variable): Call it if set.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-link.c (ctf_link_one_variable): Check the dst_type for\n-\tconflicts, not the source type.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_file_t): Improve comments.\n-\t<ctf_link_cu_mapping>: Split into...\n-\t<ctf_link_in_cu_mapping>: ... this...\n-\t<ctf_link_out_cu_mapping>: ... and this.\n-\t* ctf-create.c (ctf_serialize): Adjust.\n-\t* ctf-open.c (ctf_file_close): Likewise.\n-\t* ctf-link.c (ctf_create_per_cu): Look things up in the\n-\tin_cu_mapping instead of the cu_mapping.\n-\t(ctf_link_add_cu_mapping): The deduplicating link will define\n-\twhat happens if many FROMs share a TO.\n-\t(ctf_link_add_cu_mapping): Create in_cu_mapping and\n-\tout_cu_mapping. Do not create ctf_link_outputs here any more, or\n-\tcreate per-CU dicts here: they are already created when needed.\n-\t(ctf_link_one_variable): Log a debug message if we skip a\n-\tvariable due to its type being concealed in a CU-mapped link.\n-\t(This is probably too common a case to make into a warning.)\n-\t(ctf_link): Create empty per-CU dicts if requested.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-link.c (ctf_link_write): Close the fd.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* Makefile.am: Set -DNOBFD=1 in libctf-nobfd, and =0 elsewhere.\n-\t* Makefile.in: Regenerated.\n-\t* ctf-impl.h (ctf_link_input_name): New.\n-\t(ctf_file_t) <ctf_link_flags>: New.\n-\t* ctf-create.c (ctf_serialize): Adjust accordingly.\n-\t* ctf-link.c: Define ctf_open as weak when PIC.\n-\t(ctf_arc_close_thunk): Remove unnecessary thunk.\n-\t(ctf_file_close_thunk): Likewise.\n-\t(ctf_link_input_name): New.\n-\t(ctf_link_input_t): New value of the ctf_file_t.ctf_link_input.\n-\t(ctf_link_input_close): Adjust accordingly.\n-\t(ctf_link_add_ctf_internal): New, split from...\n-\t(ctf_link_add_ctf): ... here.  Return error if lazy loading of\n-\tCTF is not possible.  Change to just call...\n-\t(ctf_link_add): ... this new function.\n-\t(ctf_link_add_cu_mapping): Transition to ctf_err_warn.  Drop the\n-\tctf_file_close_thunk.\n-\t(ctf_link_in_member_cb_arg_t) <file_name> Rename to...\n-\t<in_file_name>: ... this.\n-\t<arcname>: Drop.\n-\t<share_mode>: Likewise (migrated to ctf_link_flags).\n-\t<done_main_member>: Rename to...\n-\t<done_parent>: ... this.\n-\t<main_input_fp>: Rename to...\n-\t<in_fp_parent>: ... this.\n-\t<cu_mapped>: New.\n-\t(ctf_link_one_type): Adjuwt accordingly.  Transition to\n-\tctf_err_warn, removing a TODO.\n-\t(ctf_link_one_variable): Note a case too common to warn about.\n-\tReport in the debug stream if a cu-mapped link prevents addition\n-\tof a conflicting variable.\n-\t(ctf_link_one_input_archive_member): Adjust.\n-\t(ctf_link_lazy_open): New, open a CTF archive for linking when\n-\tneeded.\n-\t(ctf_link_close_one_input_archive): New, close it again.\n-\t(ctf_link_one_input_archive): Adjust for lazy opening, member\n-\trenames, and ctf_err_warn transition.  Move the\n-\tempty_link_type_mapping call to...\n-\t(ctf_link): ... here.  Adjut for renamings and thunk removal.\n-\tDon't spuriously fail if some input contains no CTF data.\n-\t(ctf_link_write): ctf_err_warn transition.\n-\t* libctf.ver: Remove not-yet-stable comment.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_strerror): Delete.\n-\t* ctf-subr.c (ctf_strerror): Likewise.\n-\t* ctf-error.c (ctf_errmsg): Stop using ctf_strerror: just use\n-\tstrerror directly.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.c (ctf_file_t) <ctf_parent_unreffed>: New.\n-\t(ctf_import_unref): New.\n-\t* ctf-open.c (ctf_file_close) Drop the refcount all the way to\n-\tzero.  Don't recurse back in if the refcount is already zero.\n-\t(ctf_import): Check ctf_parent_unreffed before deciding whether\n-\tto close a pre-existing parent.  Set it to zero.\n-\t(ctf_import_unreffed): New, as above, setting\n-\tctf_parent_unreffed to 1.\n-\t* ctf-create.c (ctf_serialize): Do not ctf_import into the new\n-\tchild: use direct assignment, and set unreffed on the new and\n-\told children.\n-\t* ctf-link.c (ctf_create_per_cu): Import the parent using\n-\tctf_import_unreffed.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_link_type_mapping_key): Rename to...\n-\t(ctf_link_type_key): ... this, adjusting member prefixes to\n-\tmatch.\n-\t(ctf_hash_type_mapping_key): Rename to...\n-\t(ctf_hash_type_key): ... this.\n-\t(ctf_hash_eq_type_mapping_key): Rename to...\n-\t(ctf_hash_eq_type_key): ... this.\n-\t* ctf-hash.c (ctf_hash_type_mapping_key): Rename to...\n-\t(ctf_hash_type_key): ... this, and adjust for member name\n-\tchanges.\n-\t(ctf_hash_eq_type_mapping_key): Rename to...\n-\t(ctf_hash_eq_type_key): ... this, and adjust for member name\n-\tchanges.\n-\t* ctf-link.c (ctf_add_type_mapping): Adjust.  Note the lack of\n-\tneed for out-of-memory checking in this code.\n-\t(ctf_type_mapping): Adjust.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\tconfigure.ac: Check for vasprintf.\n-\tconfigure: Regenerated.\n-\tconfig.h.in: Likewise.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (ctf_arc_bufopen): Fix message.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (struct ctf_archive_internal) <ctfi_free_strsect>\n-\tNew.\n-\t* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Explicitly open a strtab\n-\tif the input has no symtab, rather than dividing by\n-\tzero. Arrange to free it later via ctfi_free_ctfsect.\n-\t* ctf-archive.c (ctf_new_archive_internal): Do not\n-\tctfi_free_strsect by default.\n-\t(ctf_arc_close): Possibly free it here.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_is_slice): Delete, unnecessary.\n-\t(ctf_dump_format_type): improve slice formatting.  Always print\n-\tthe type size, even of slices.\n-\t(ctf_dump_member): Print slices (-> bitfields) differently from\n-\tnon-slices.  Failure to format a type is not an OOM.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_dump_format_type): Emit a warning.\n-\t(ctf_dump_label): Swallow errors from ctf_dump_format_type.\n-\t(ctf_dump_objts): Likewise.\n-\t(ctf_dump_var): Likewise.\n-\t(ctf_dump_type): Do not emit a duplicate message.  Move to\n-\tctf_err_warning, and swallow all errors.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-decl.c (ctf_decl_fini): Free the cd_buf.\n-\t(ctf_decl_buf): Once it escapes, don't try to free it later.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_aname): Print arg types here...\n-\t* ctf-dump.c (ctf_dump_funcs): ... not here: but do substitute\n-\tin the type name here.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_assert): New.\n-\t(ctf_err_warning_t): Likewise.\n-\t(ctf_file_t) <ctf_errs_warnings>: Likewise.\n-\t(ctf_err_warn): New prototype.\n-\t(ctf_assert_fail_internal): Likewise.\n-\t* ctf-inlines.h (ctf_assert_internal): Likewise.\n-\t* ctf-open.c (ctf_file_close): Free ctf_errs_warnings.\n-\t* ctf-create.c (ctf_serialize): Copy it on serialization.\n-\t* ctf-subr.c (ctf_err_warn): New, add an error/warning.\n-\t(ctf_errwarning_next): New iterator, free and pass back\n-\terrors/warnings in succession.\n-\t* libctf.ver (ctf_errwarning_next): Add.\n-\n-2020-07-22  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n-\n-\t* ctf-types.c (ctf_variable_iter): Fix error return.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (ctf_bufopen_internal): Diagnose invalid flags.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\tctf-decls.h (ctf_qsort_compar_thunk): Fix arg passing.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_next_hkv_t): New, kv-pairs passed to\n-\tsorting functions.\n-\t(ctf_next_t) <u.ctn_sorted_hkv>: New, sorted kv-pairs for\n-\tctf_dynhash_next_sorted.\n-\t<cu.ctn_h>: New, pointer to the dynhash under iteration.\n-\t<cu.ctn_s>: New, pointer to the dynset under iteration.\n-\t(ctf_hash_sort_f): Sorting function passed to...\n-\t(ctf_dynhash_next_sorted): ... this new function.\n-\t(ctf_dynhash_next): New.\n-\t(ctf_dynset_next): New.\n-\t* ctf-inlines.h (ctf_dynhash_cnext_sorted): New.\n-\t(ctf_dynhash_cnext): New.\n-\t(ctf_dynset_cnext): New.\n-\t* ctf-hash.c (ctf_dynhash_next_sorted): New.\n-\t(ctf_dynhash_next): New.\n-\t(ctf_dynset_next): New.\n-\t* ctf-util.c (ctf_next_destroy): Free the u.ctn_sorted_hkv if\n-\tneeded.\n-\t(ctf_next_copy): Alloc-and-copy the u.ctn_sorted_hkv if needed.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_next): New.\n-\t(ctf_get_dict): New prototype.\n-\t* ctf-lookup.c (ctf_get_dict): New, split out of...\n-\t(ctf_lookup_by_id): ... here.\n-\t* ctf-util.c (ctf_next_create): New.\n-\t(ctf_next_destroy): New.\n-\t(ctf_next_copy): New.\n-\t* ctf-types.c (includes): Add <assert.h>.\n-\t(ctf_member_next): New.\n-\t(ctf_enum_next): New.\n-\t(ctf_type_iter): Document the lack of iteration over parent\n-\ttypes.\n-\t(ctf_type_next): New.\n-\t(ctf_variable_next): New.\n-\t* ctf-archive.c (ctf_archive_next): New.\n-\t* libctf.ver: Add new public functions.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* libctf.ver (ctf_ref): New.\n-\t* ctf-open.c (ctf_ref): Implement it.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-inlines.h (ctf_forwardable_kind): New.\n-\t* ctf-create.c (ctf_add_forward): Use it.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_get_ctt_size): Move definition from here...\n-\t* ctf-inlines.h (ctf_get_ctt_size): ... to here.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-hash.c (ctf_dynset_eq_string): New.\n-\t(ctf_dynset_create): New.\n-\t(DYNSET_EMPTY_ENTRY_REPLACEMENT): New.\n-\t(DYNSET_DELETED_ENTRY_REPLACEMENT): New.\n-\t(key_to_internal): New.\n-\t(internal_to_key): New.\n-\t(ctf_dynset_insert): New.\n-\t(ctf_dynset_remove): New.\n-\t(ctf_dynset_destroy): New.\n-\t(ctf_dynset_lookup): New.\n-\t(ctf_dynset_exists): New.\n-\t(ctf_dynset_lookup_any): New.\n-\t(ctf_hash_insert_type): Coding style.\n-\t(ctf_hash_define_type): Likewise.\n-\t* ctf-impl.h (ctf_dynset_t): New.\n-\t(ctf_dynset_eq_string): New.\n-\t(ctf_dynset_create): New.\n-\t(ctf_dynset_insert): New.\n-\t(ctf_dynset_remove): New.\n-\t(ctf_dynset_destroy): New.\n-\t(ctf_dynset_lookup): New.\n-\t(ctf_dynset_exists): New.\n-\t(ctf_dynset_lookup_any): New.\n-\t* ctf-inlines.h (ctf_dynset_cinsert): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-hash.c (ctf_helem_t) <key_free>: Remove.\n-\t<value_free>: Likewise.\n-\t<owner>: New.\n-\t(ctf_dynhash_item_free): Indirect through the owner.\n-\t(ctf_dynhash_create): Only pass in ctf_dynhash_item_free and\n-\tallocate space for the key_free and value_free fields fields\n-\tif necessary.\n-\t(ctf_hashtab_insert): Likewise.  Fix OOM errno value.\n-\t(ctf_dynhash_insert): Only access ctf_hashtab's key_free and\n-\tvalue_free if they will exist.  Set the slot's owner, but only\n-\tif it exists.\n-\t(ctf_dynhash_remove): Adjust.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-hash.c (ctf_hashtab_insert): Free the key passed in if\n-\tthere is a key-freeing function and the key already exists.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-inlines.h: New file.\n-\t* ctf-impl.h: Include it.\n-\t(ctf_hash_iter_find_f): New typedef.\n-\t(ctf_dynhash_elements): New.\n-\t(ctf_dynhash_lookup_kv): New.\n-\t(ctf_dynhash_iter_find): New.\n-\t* ctf-hash.c (ctf_dynhash_lookup_kv): New.\n-\t(ctf_traverse_find_cb_arg_t): New.\n-\t(ctf_hashtab_traverse_find): New.\n-\t(ctf_dynhash_iter_find): New.\n-\t(ctf_dynhash_elements): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h [!__GNUC__] (__extension__): Define to nothing.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (ctf_archive_count): New.\n-\t* libctf.ver: New public function.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_member_count): New.\n-\t* libctf.ver: New public function.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_kind_forwarded): New.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_name_raw): New.\n-\t(ctf_type_aname_raw): Reimplement accordingly.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-subr.c (ctf_dprintf): _libctf_debug is unlikely to be set.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (struct ctf_archive_internal)\n-\t<ctfi_unmap_on_close>: New.\n-\t(ctf_new_archive_internal): Adjust.\n-\t* ctf-archive.c (ctf_new_archive_internal): Likewise.\n-\tInitialize ctfi_unmap_on_close.  Adjust error path.\n-\t(ctf_arc_bufopen): Adjust ctf_new_archive_internal call\n-\t(unmap_on_close is 0).\n-\t(ctf_arc_close): Only unmap if ctfi_unmap_on_close.\n-\t* ctf-open-bfd.c (ctf_fdopen): Adjust.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_aname): Return ECTF_CORRUPT if\n-\tints, floats or typedefs have no name.  Fix comment typo.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_add_slice): Support slices of any kind that\n-\tresolves to an integral type.\n-\t* ctf-types.c (ctf_type_encoding): Resolve the type before\n-\tfishing its encoding out.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_create): Mark dirty.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (membcmp)  Skip nameless members.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_add_member_offset): Support names of \"\"\n-\tas if they were the null pointer.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (init_types): Remove typeless CTF_K_FORWARD\n-\tspecial-casing.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_reference): Add support for dynamic slices.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_serialize): Add cast.\n-\t(ctf_add_slice): Likewise.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_dtdef_t) <dtu_argv>: Fix type.\n-\t* ctf-create.c (ctf_add_function): Check for unimplemented type\n-\tand populate at the same time.  Populate one-by-one, not via\n-\tmemcpy.\n-\t(ctf_serialize): Remove unnecessary cast.\n-\t* ctf-types.c (ctf_func_type_info): Likewise.\n-\t(ctf_func_type_args): Likewise.  Fix comment typo.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_add_reftype): Support refs to type zero.\n-\t(ctf_add_array): Support array contents of type zero.\n-\t(ctf_add_function): Support arguments and return types of\n-\ttype zero.\n-\t(ctf_add_typedef): Support typedefs to type zero.\n-\t(ctf_add_member_offset): Support members of type zero,\n-\tunless added at unspecified (naturally-aligned) offset.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-error.c: Include <stddef.h>, for offsetof.\n-\t(_ctf_errlist): Migrate to...\n-\t(_ctf_errlist_t): ... this.\n-\t(_ctf_erridx): New, indexes into _ctf_errlist_t.\n-\t(_ctf_nerr): Remove.\n-\t(ctf_errmsg): Adjust accordingly.\n-\t* Makefile.am (BUILT_SOURCES): Note...\n-\t(ctf-error.h): ... this new rule.\n-\t* Makefile.in: Regenerate.\n-\t* mkerrors.sed: New, process ctf-api.h to generate ctf-error.h.\n-\t* .gitignore: New, ignore ctf-error.h.\n-\n-2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h: Fix typos in comments.\n-\n-2020-07-22  Nick Clifton  <nickc@redhat.com>\n-\n-\t* ctf-archive.c (ctf_arc_write): Avoid calling close twice on the\n-\tsame file descriptor.\n-\n-2020-07-04  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.35 branch created.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* aclocal.m4: Add config/gettext-sister.m4: Shuffle into\n-\talphabetical order.\n-\t* configure.ac: Add ZW_GNU_GETTEXT_SISTER_DIR.\n-\t* config.h.in: Regenerated.\n-\t* Makefile.in: Likewise.\n-\t* configure: Likewise.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c: Include <unistd.h>.\n-\t* ctf-open-bfd.c: Likewise.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\tPR libctf/25120\n-\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n-\t* swap.h (bswap_16): Do not assume that presence of <byteswap.h>\n-\tmeans this is declared.\n-\t(bswap_32): Likewise.\n-\t(bswap_64): Likewise.\n-\t(bswap_identity_64): Remove, unused.\n-\t* configure: Regenerated.\n-\t* config.h.in: Likewise.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\tPR libctf/25120\n-\t* ctf-impl.h (_libctf_printflike_): Add non-GNU-C fallback.\n-\t(_libctf_unlikely_): Likewise.\n-\t(_libctf_unused): Likewise.\n-\t(_libctf_malloc_): Likewise.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\tPR libctf/25120\n-\t* ctf-archive.c (search_nametbl): No longer global: declare...\n-\t(ctf_arc_open_by_name_internal): ... here. Use bsearch_r.\n-\t(search_modent_by_name): Take and use ARG for the nametbl.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_new_archive_internal): Declare.\n-\t(ctf_arc_bufopen): Remove.\n-\t(ctf_archive_internal) <ctfi_free_symsect>: New.\n-\t* ctf-archive.c (ctf_arc_close): Use it.\n-\t(ctf_arc_bufopen): Fuse into...\n-\t(ctf_new_archive_internal): ... this, moved across from...\n-\t* ctf-open-bfd.c: ... here.\n-\t(ctf_bfdopen_ctfsect): Use ctf_arc_bufopen.\n-\t* libctf.ver: Add it.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_add_forward): Intern in the right namespace.\n-\t(ctf_dtd_delete): Remove correspondingly.\n-\t(ctf_rollback): Likewise.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_add_type_internal): Hand back existing types\n-\tunchanged.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_add_forward): Don't add forwards to\n-\ttypes that already exist.\n-\n-2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (init_types): Only intern root-visible types.\n-\t* ctf-create.c (ctf_dtd_insert): Likewise.\n-\t(ctf_dtd_delete): Only remove root-visible types.\n-\t(ctf_rollback): Likewise.\n-\t(ctf_add_generic): Adjust.\n-\t(ctf_add_struct_sized): Adjust comment.\n-\t(ctf_add_union_sized): Likewise.\n-\t(ctf_add_enum): Likewise.\n-\t* ctf-impl.h (ctf_dtd_insert): Adjust prototype.\n-\n-2020-03-11  John Baldwin  <jhb@FreeBSD.org>\n-\n-\t* swap.h (bswap_identity_64): Make static.\n-\n-2020-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tBinutils 2.34 branch created.\n-\n-2020-01-05  Joel Brobecker  <brobecker@adacore.com>\n-\n-\tPR binutils/25155:\n-\t* configure.ac: Add AC_CHECK_DECLS([asprintf]).\n-\t* configure, config.h.in: Regenerate.\n-\n-2020-01-01  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-2019-10-16  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* swap.h (bswap_16, bswap_32, bswap_64): Make static.\n-\n-2019-09-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (ctf_bufopen_internal): Fix tabdamage.\n-\t* ctf-types.c (ctf_type_lname): Likewise.\n-\n-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (ctf_import): Do not leak a ctf_file_t ref on every\n-\tctf_import after the first for a given file.\n-\n-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_str_append_noerr): Declare.\n-\t* ctf-util.c (ctf_str_append_noerr): Define in terms of\n-\tctf_str_append.\n-\t* ctf-dump.c (str_append): New, call it.\n-\t(ctf_dump_format_type): Use str_append, not ctf_str_append.\n-\t(ctf_dump_label): Likewise.\n-\t(ctf_dump_objts): Likewise.\n-\t(ctf_dump_funcs): Likewise.\n-\t(ctf_dump_var): Likewise.\n-\t(ctf_dump_member): Likewise.\n-\t(ctf_dump_type): Likewise.\n-\t(ctf_dump): Likewise.\n-\n-2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_alloc): Remove.\n-\t(ctf_free): Likewise.\n-\t(ctf_strdup): Likewise.\n-\t* ctf-subr.c (ctf_alloc): Remove.\n-\t(ctf_free): Likewise.\n-\t* ctf-util.c (ctf_strdup): Remove.\n-\n-\t* ctf-create.c (ctf_serialize): Use malloc, not ctf_alloc; free, not\n-\tctf_free; strdup, not ctf_strdup.\n-\t(ctf_dtd_delete): Likewise.\n-\t(ctf_dvd_delete): Likewise.\n-\t(ctf_add_generic): Likewise.\n-\t(ctf_add_function): Likewise.\n-\t(ctf_add_enumerator): Likewise.\n-\t(ctf_add_member_offset): Likewise.\n-\t(ctf_add_variable): Likewise.\n-\t(membadd): Likewise.\n-\t(ctf_compress_write): Likewise.\n-\t(ctf_write_mem): Likewise.\n-\t* ctf-decl.c (ctf_decl_push): Likewise.\n-\t(ctf_decl_fini): Likewise.\n-\t(ctf_decl_sprintf): Likewise.  Check for OOM.\n-\t* ctf-dump.c (ctf_dump_append): Use malloc, not ctf_alloc; free, not\n-\tctf_free; strdup, not ctf_strdup.\n-\t(ctf_dump_free): Likewise.\n-\t(ctf_dump): Likewise.\n-\t* ctf-open.c (upgrade_types_v1): Likewise.\n-\t(init_types): Likewise.\n-\t(ctf_file_close): Likewise.\n-\t(ctf_bufopen_internal): Likewise.  Check for OOM.\n-\t(ctf_parent_name_set): Likewise: report the OOM to the caller.\n-\t(ctf_cuname_set): Likewise.\n-\t(ctf_import): Likewise.\n-\t* ctf-string.c (ctf_str_purge_atom_refs): Use malloc, not ctf_alloc;\n-\tfree, not ctf_free; strdup, not ctf_strdup.\n-\t(ctf_str_free_atom): Likewise.\n-\t(ctf_str_create_atoms): Likewise.\n-\t(ctf_str_add_ref_internal): Likewise.\n-\t(ctf_str_remove_ref): Likewise.\n-\t(ctf_str_write_strtab): Likewise.\n-\n-2019-08-09  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_encoding): Fix the dynamic case to\n-\twork right for non-int/fps.\n-\n-2019-08-08  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_name): Don't strlen a potentially-\n-\tnull pointer.\n-\n-2019-08-07  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_file_t) <ctf_add_processing>: New.\n-\t* ctf-open.c (ctf_file_close): Free it.\n-\t* ctf-create.c (ctf_serialize): Adjust.\n-\t(membcmp): When reporting a conflict due to an error, report the\n-\terror.\n-\t(ctf_add_type): Turn into a ctf_add_processing wrapper.  Rename to...\n-\t(ctf_add_type_internal): ... this.  Hand back types we are already\n-\tin the middle of adding immediately.  Hand back structs/unions with\n-\tthe same number of members immediately.  Do not walk the dynamic\n-\tlist.  Call ctf_add_type_internal, not ctf_add_type.  Handle\n-\tforwards promoted to other types and the inverse case identically.\n-\tAdd structs to the mapping as soon as we intern them, before they\n-\tgain any members.\n-\n-2019-08-09  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_names_t): New.\n-\t(ctf_lookup_t) <ctf_hash>: Now a ctf_names_t, not a ctf_hash_t.\n-\t(ctf_file_t) <ctf_structs>: Likewise.\n-\t<ctf_unions>: Likewise.\n-\t<ctf_enums>: Likewise.\n-\t<ctf_names>: Likewise.\n-\t<ctf_lookups>: Improve comment.\n-\t<ctf_ptrtab_len>: New.\n-\t<ctf_prov_strtab>: New.\n-\t<ctf_str_prov_offset>: New.\n-\t<ctf_dtbyname>: Remove, redundant to the names hashes.\n-\t<ctf_dtnextid>: Remove, redundant to ctf_typemax.\n-\t(ctf_dtdef_t) <dtd_name>: Remove.\n-\t<dtd_data>: Note that the ctt_name is now populated.\n-\t(ctf_str_atom_t) <csa_offset>: This is now the strtab\n-\toffset for internal strings too.\n-\t<csa_external_offset>: New, the external strtab offset.\n-\t(CTF_INDEX_TO_TYPEPTR): Handle the LCTF_RDWR case.\n-\t(ctf_name_table): New declaration.\n-\t(ctf_lookup_by_rawname): Likewise.\n-\t(ctf_lookup_by_rawhash): Likewise.\n-\t(ctf_set_ctl_hashes): Likewise.\n-\t(ctf_serialize): Likewise.\n-\t(ctf_dtd_insert): Adjust.\n-\t(ctf_simple_open_internal): Likewise.\n-\t(ctf_bufopen_internal): Likewise.\n-\t(ctf_list_empty_p): Likewise.\n-\t(ctf_str_remove_ref): Likewise.\n-\t(ctf_str_add): Returns uint32_t now.\n-\t(ctf_str_add_ref): Likewise.\n-\t(ctf_str_add_external): Now returns a boolean (int).\n-\t* ctf-string.c (ctf_strraw_explicit): Check the ctf_prov_strtab\n-\tfor strings in the appropriate range.\n-\t(ctf_str_create_atoms): Create the ctf_prov_strtab.  Detect OOM\n-\twhen adding the null string to the new strtab.\n-\t(ctf_str_free_atoms): Destroy the ctf_prov_strtab.\n-\t(ctf_str_add_ref_internal): Add make_provisional argument.  If\n-\tmake_provisional, populate the offset and fill in the\n-\tctf_prov_strtab accordingly.\n-\t(ctf_str_add): Return the offset, not the string.\n-\t(ctf_str_add_ref): Likewise.\n-\t(ctf_str_add_external): Return a success integer.\n-\t(ctf_str_remove_ref): New, remove a single ref.\n-\t(ctf_str_count_strtab): Do not count the initial null string's\n-\tlength or the existence or length of any unreferenced internal\n-\tatoms.\n-\t(ctf_str_populate_sorttab): Skip atoms with no refs.\n-\t(ctf_str_write_strtab): Populate the nullstr earlier.  Add one\n-\tto the cts_len for the null string, since it is no longer done\n-\tin ctf_str_count_strtab.  Adjust for csa_external_offset rename.\n-\tPopulate the csa_offset for both internal and external cases.\n-\tFlush the ctf_prov_strtab afterwards, and reset the\n-\tctf_str_prov_offset.\n-\t* ctf-create.c (ctf_grow_ptrtab): New.\n-\t(ctf_create): Call it.\tInitialize new fields rather than old\n-\tones.  Tell ctf_bufopen_internal that this is a writable dictionary.\n-\tSet the ctl hashes and data model.\n-\t(ctf_update): Rename to...\n-\t(ctf_serialize): ... this.  Leave a compatibility function behind.\n-\tTell ctf_simple_open_internal that this is a writable dictionary.\n-\tPass the new fields along from the old dictionary.  Drop\n-\tctf_dtnextid and ctf_dtbyname.\tUse ctf_strraw, not dtd_name.\n-\tDo not zero out the DTD's ctt_name.\n-\t(ctf_prefixed_name): Rename to...\n-\t(ctf_name_table): ... this.  No longer return a prefixed name: return\n-\tthe applicable name table instead.\n-\t(ctf_dtd_insert): Use it, and use the right name table.\t Pass in the\n-\tkind we're adding.  Migrate away from dtd_name.\n-\t(ctf_dtd_delete): Adjust similarly.  Remove the ref to the\n-\tdeleted ctt_name.\n-\t(ctf_dtd_lookup_type_by_name): Remove.\n-\t(ctf_dynamic_type): Always return NULL on read-only dictionaries.\n-\tNo longer check ctf_dtnextid: check ctf_typemax instead.\n-\t(ctf_snapshot): No longer use ctf_dtnextid: use ctf_typemax instead.\n-\t(ctf_rollback): Likewise.  No longer fail with ECTF_OVERROLLBACK. Use\n-\tctf_name_table and the right name table, and migrate away from\n-\tdtd_name as in ctf_dtd_delete.\n-\t(ctf_add_generic): Pass in the kind explicitly and pass it to\n-\tctf_dtd_insert. Use ctf_typemax, not ctf_dtnextid.  Migrate away\n-\tfrom dtd_name to using ctf_str_add_ref to populate the ctt_name.\n-\tGrow the ptrtab if needed.\n-\t(ctf_add_encoded): Pass in the kind.\n-\t(ctf_add_slice): Likewise.\n-\t(ctf_add_array): Likewise.\n-\t(ctf_add_function): Likewise.\n-\t(ctf_add_typedef): Likewise.\n-\t(ctf_add_reftype): Likewise. Initialize the ctf_ptrtab, checking\n-\tctt_name rather than dtd_name.\n-\t(ctf_add_struct_sized): Pass in the kind.  Use\n-\tctf_lookup_by_rawname, not ctf_hash_lookup_type /\n-\tctf_dtd_lookup_type_by_name.\n-\t(ctf_add_union_sized): Likewise.\n-\t(ctf_add_enum): Likewise.\n-\t(ctf_add_enum_encoded): Likewise.\n-\t(ctf_add_forward): Likewise.\n-\t(ctf_add_type): Likewise.\n-\t(ctf_compress_write): Call ctf_serialize: adjust for ctf_size not\n-\tbeing initialized until after the call.\n-\t(ctf_write_mem): Likewise.\n-\t(ctf_write): Likewise.\n-\t* ctf-archive.c (arc_write_one_ctf): Likewise.\n-\t* ctf-lookup.c (ctf_lookup_by_name): Use ctf_lookuup_by_rawhash, not\n-\tctf_hash_lookup_type.\n-\t(ctf_lookup_by_id): No longer check the readonly types if the\n-\tdictionary is writable.\n-\t* ctf-open.c (init_types): Assert that this dictionary is not\n-\twritable.  Adjust to use the new name hashes, ctf_name_table,\n-\tand ctf_ptrtab_len.  GNU style fix for the final ptrtab scan.\n-\t(ctf_bufopen_internal): New 'writable' parameter.  Flip on LCTF_RDWR\n-\tif set.\t Drop out early when dictionary is writable.  Split the\n-\tctf_lookups initialization into...\n-\t(ctf_set_cth_hashes): ... this new function.\n-\t(ctf_simple_open_internal): Adjust.  New 'writable' parameter.\n-\t(ctf_simple_open): Adjust accordingly.\n-\t(ctf_bufopen): Likewise.\n-\t(ctf_file_close): Destroy the appropriate name hashes.\tNo longer\n-\tdestroy ctf_dtbyname, which is gone.\n-\t(ctf_getdatasect): Remove spurious \"extern\".\n-\t* ctf-types.c (ctf_lookup_by_rawname): New, look up types in the\n-\tspecified name table, given a kind.\n-\t(ctf_lookup_by_rawhash): Likewise, given a ctf_names_t *.\n-\t(ctf_member_iter): Add support for iterating over the\n-\tdynamic type list.\n-\t(ctf_enum_iter): Likewise.\n-\t(ctf_variable_iter): Likewise.\n-\t(ctf_type_rvisit): Likewise.\n-\t(ctf_member_info): Add support for types in the dynamic type list.\n-\t(ctf_enum_name): Likewise.\n-\t(ctf_enum_value): Likewise.\n-\t(ctf_func_type_info): Likewise.\n-\t(ctf_func_type_args): Likewise.\n-\t* ctf-link.c (ctf_accumulate_archive_names): No longer call\n-\tctf_update.\n-\t(ctf_link_write): Likewise.\n-\t(ctf_link_intern_extern_string): Adjust for new\n-\tctf_str_add_external return value.\n-\t(ctf_link_add_strtab): Likewise.\n-\t* ctf-util.c (ctf_list_empty_p): New.\n-\n-2019-08-05  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_resolve): Return ECTF_NONREPRESENTABLE on\n-\ttype zero.\n-\t* ctf-create.c (ctf_add_type): Detect and skip nonrepresentable\n-\tmembers and types.\n-\t(ctf_add_variable): Likewise for variables pointing to them.\n-\t* ctf-link.c (ctf_link_one_type): Do not warn for nonrepresentable\n-\ttype link failure, but do warn for others.\n-\t* ctf-dump.c (ctf_dump_format_type): Likewise.  Do not assume all\n-\terrors to be ENOMEM.\n-\t(ctf_dump_member): Likewise.\n-\t(ctf_dump_type): Likewise.\n-\t(ctf_dump_header_strfield): Do not assume all errors to be ENOMEM.\n-\t(ctf_dump_header_sectfield): Do not assume all errors to be ENOMEM.\n-\t(ctf_dump_header): Likewise.\n-\t(ctf_dump_label): likewise.\n-\t(ctf_dump_objts): likewise.\n-\t(ctf_dump_funcs): likewise.\n-\t(ctf_dump_var): likewise.\n-\t(ctf_dump_str): Likewise.\n-\n-2019-09-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.ac (AC_DISABLE_SHARED): New, like opcodes/.\n-\t(LT_INIT): Likewise.\n-\t(AM_INSTALL_LIBBFD): Likewise.\n-\t(dlopen): Note why this is necessary in a comment.\n-\t(SHARED_LIBADD): Initialize for possibly-PIC libiberty: derived from\n-\topcodes/.\n-\t(SHARED_LDFLAGS): Likewise.\n-\t(BFD_LIBADD): Likewise, for libbfd.\n-\t(BFD_DEPENDENCIES): Likewise.\n-\t(VERSION_FLAGS): Initialize, using a version script if ld supports\n-\tone, or libtool -export-symbols-regex otherwise.\n-\t(AC_CONFIG_MACRO_DIR): Add ../BFD.\n-\t* Makefile.am (ACLOCAL_AMFLAGS): Likewise.\n-\t(INCDIR): New.\n-\t(AM_CPPFLAGS): Use $(srcdir), not $(top_srcdir).\n-\t(noinst_LIBRARIES): Replace with...\n-\t[INSTALL_LIBBFD] (lib_LTLIBRARIES): This, or...\n-\t[!INSTALL_LIBBFD] (noinst_LTLIBRARIES): ... this, mentioning new\n-\tlibctf-nobfd.la as well.\n-\t[INSTALL_LIBCTF] (include_HEADERS): Add the CTF headers.\n-\t[!INSTALL_LIBCTF] (include_HEADERS): New, empty.\n-\t(libctf_a_SOURCES): Rename to...\n-\t(libctf_nobfd_la_SOURCES): ... this, all of libctf other than\n-\tctf-open-bfd.c.\n-\t(libctf_la_SOURCES): Now derived from libctf_nobfd_la_SOURCES,\n-\twith ctf-open-bfd.c added.\n-\t(libctf_nobfd_la_LIBADD): New, using @SHARED_LIBADD@.\n-\t(libctf_la_LIBADD): New, using @BFD_LIBADD@ as well.\n-\t(libctf_la_DEPENDENCIES): New, using @BFD_DEPENDENCIES@.\n-\t* Makefile.am [INSTALL_LIBCTF]: Use it.\n-\t* aclocal.m4: Add ../bfd/acinclude.m4, ../config/acx.m4, and the\n-\tlibtool macros.\n-\t* libctf.ver: New, everything is version LIBCTF_1.0 currently (even\n-\tthe unstable components).\n-\t* Makefile.in: Regenerated.\n-\t* config.h.in: Likewise.\n-\t* configure: Likewise.\n-\n-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.ac (INSTALL_LIBCTF): New, controlled by\n-\t--enable-install-libctf.\n-\t[INSTALL_LIBCTF] (lib_LIBRARIES): Add libctf.a.\n-\t* Makefile.in: Regenerated.\n-\t* configure: Regenerated.\n-\n-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (ctf_arc_close): Call ctfi_bfd_close if set.\n-\t* ctf-open-bfd.c (ctf_bfdclose): Fix comment.\n-\n-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open-bfd.c (ctf_fdopen): Call bfd_set_cacheable.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (includes): Include <sys/param.h> here.\n-\n-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (flip_lbls): Eschew for-loop initial declarations.\n-\t(flip_objts): Likewise.\n-\t(flip_vars): Likewise.\n-\t(flip_types): Likewise.\n-\n-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value\n-\tfreeing functions: if set, free the key and value if the slot\n-\talready exists.  Always reassign the key.\n-\t(ctf_dynhash_insert): Adjust call appropriately.\n-\t(ctf_hash_insert_type): Likewise.\n-\n-2019-08-03  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_add_type): Look up and use the forwarded-to\n-\ttype kind.  Allow forwards to unify with pre-existing structs/\n-\tunions/enums.\n-\n-2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_file_t) <ctf_link_cu_mappping>: New.\n-\t<ctf_link_memb_name_changer>: Likewise.\n-\t<ctf_link_memb_name_changer_arg>: Likewise.\n-\t* ctf-create.c (ctf_update): Update accordingly.\n-\t* ctf-open.c (ctf_file_close): Likewise.\n-\t* ctf-link.c (ctf_create_per_cu): Apply the cu mapping.\n-\t(ctf_link_add_cu_mapping): New.\n-\t(ctf_link_set_memb_name_changer): Likewise.\n-\t(ctf_change_parent_name): New.\n-\t(ctf_name_list_accum_cb_arg_t) <dynames>: New, storage for names\n-\tallocated by the caller's ctf_link_memb_name_changer.\n-\t<ndynames>: Likewise.\n-\t(ctf_accumulate_archive_names): Call the ctf_link_memb_name_changer.\n-\t(ctf_link_write): Likewise (for _CTF_SECTION only): also call\n-\tctf_change_parent_name.  Free any resulting names.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-link.c (ctf_create_per_cu): New, refactored out of...\n-\t(ctf_link_one_type): ... here, with parent-name setting added.\n-\t(check_variable): New.\n-\t(ctf_link_one_variable): Likewise.\n-\t(ctf_link_one_input_archive_member): Call it.\n-\t* ctf-error.c (_ctf_errlist): Updated with new errors.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_file_t): New field ctf_link_type_mapping.\n-\t(struct ctf_link_type_mapping_key): New.\n-\t(ctf_hash_type_mapping_key): Likewise.\n-\t(ctf_hash_eq_type_mapping_key): Likewise.\n-\t(ctf_add_type_mapping): Likewise.\n-\t(ctf_type_mapping): Likewise.\n-\t(ctf_dynhash_empty): Likewise.\n-\t* ctf-open.c (ctf_file_close): Update accordingly.\n-\t* ctf-create.c (ctf_update): Likewise.\n-\t(ctf_add_type): Populate the mapping.\n-\t* ctf-hash.c (ctf_hash_type_mapping_key): Hash a type mapping key.\n-\t(ctf_hash_eq_type_mapping_key): Check the key for equality.\n-\t(ctf_dynhash_insert): Fix comment typo.\n-\t(ctf_dynhash_empty): New.\n-\t* ctf-link.c (ctf_add_type_mapping): New.\n-\t(ctf_type_mapping): Likewise.\n-\t(empty_link_type_mapping): New.\n-\t(ctf_link_one_input_archive): Call it.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-link.c: New file, linking of the string and type sections.\n-\t* Makefile.am (libctf_a_SOURCES): Add it.\n-\t* Makefile.in: Regenerate.\n-\n-\t* ctf-impl.h (ctf_file_t): New fields ctf_link_inputs,\n-\tctf_link_outputs.\n-\t* ctf-create.c (ctf_update): Update accordingly.\n-\t* ctf-open.c (ctf_file_close): Likewise.\n-\t* ctf-error.c (_ctf_errlist): Updated with new errors.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_dump_funcs): Check the right error value.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_dump): Use ctf_type_iter_all to dump types, not\n-\tctf_type_iter.\n-\t(ctf_dump_type): Pass down the flag from ctf_type_iter_all.\n-\t(ctf_dump_format_type): Add non-root-type { } notation.\n-\tAdd root flag to prototype.\n-\t(ctf_dump_label): Adjust accordingly.\n-\t(ctf_dump_objts): Likewise.\n-\t(ctf_dump_var): Likewise.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_compress_write): Fix double-free.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (ctf_arc_write): Split off, and reimplement in terms\n-\tof...\n-\t(ctf_arc_write_fd): ... this new function.\n-\t* ctf-create.c (ctf_write_mem): New.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_str_atom_t) <csa_offset>: New field.\n-\t(ctf_file_t) <ctf_syn_ext_strtab>: Likewise.\n-\t(ctf_str_add_ref): Name the last arg.\n-\t(ctf_str_add_external) New.\n-\t(ctf_str_add_strraw_explicit): Likewise.\n-\t(ctf_simple_open_internal): Likewise.\n-\t(ctf_bufopen_internal): Likewise.\n-\n-\t* ctf-string.c (ctf_strraw_explicit): Split from...\n-\t(ctf_strraw): ... here, with new support for ctf_syn_ext_strtab.\n-\t(ctf_str_add_ref_internal): Return the atom, not the\n-\tstring.\n-\t(ctf_str_add): Adjust accordingly.\n-\t(ctf_str_add_ref): Likewise.  Move up in the file.\n-\t(ctf_str_add_external): New: update the csa_offset.\n-\t(ctf_str_count_strtab): Only account for strings with no csa_offset\n-\tin the internal strtab length.\n-\t(ctf_str_write_strtab): If the csa_offset is set, update the\n-\tstring's refs without writing the string out, and update the\n-\tctf_syn_ext_strtab.  Make OOM handling less ugly.\n-\t* ctf-create.c (struct ctf_sort_var_arg_cb): New.\n-\t(ctf_update): Handle failure to populate the strtab.  Pass in the\n-\tnew ctf_sort_var arg.  Adjust for ctf_syn_ext_strtab addition.\n-\tCall ctf_simple_open_internal, not ctf_simple_open.\n-\t(ctf_sort_var): Call ctf_strraw_explicit rather than looking up\n-\tstrings by hand.\n-\t* ctf-hash.c (ctf_hash_insert_type): Likewise (but using\n-\tctf_strraw).  Adjust to diagnose ECTF_STRTAB nonetheless.\n-\t* ctf-open.c (init_types): No longer filter out ECTF_STRTAB.\n-\t(ctf_file_close): Destroy the ctf_syn_ext_strtab.\n-\t(ctf_simple_open): Rename to, and reimplement as a wrapper around...\n-\t(ctf_simple_open_internal): ... this new function, which calls\n-\tctf_bufopen_internal.\n-\t(ctf_bufopen): Rename to, and reimplement as a wrapper around...\n-\t(ctf_bufopen_internal): ... this new function, which sets\n-\tctf_syn_ext_strtab.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf_types.c (ctf_type_iter_all): New.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (init_symtab): Check for overflow against the right\n-\tsection.\n-\t(upgrade_header): Set cth_objtidxoff, cth_funcidxoff to zero-length.\n-\t(upgrade_types_v1): Note that these sections are not checked.\n-\t(flip_header): Endian-swap the header fields.\n-\t(flip_ctf): Endian-swap the sections.\n-\t(flip_objts): Update comment.\n-\t(ctf_bufopen): Check header offsets and alignment for validity.\n-\n-2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open-bfd.c: Add <assert.h>.\n-\t(ctf_bfdopen_ctfsect): Open string and symbol tables using\n-\ttechniques borrowed from bfd_elf_sym_name.\n-\t(ctf_new_archive_internal): Improve comment.\n-\t* ctf-archive.c (ctf_arc_close): Do not free the ctfi_strsect.\n-\t* ctf-open.c (ctf_bufopen): Allow opening with a string section but\n-\tno symbol section, but not vice versa.\n-\n-2019-07-08  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_file_t): New field ctf_openflags.\n-\t* ctf-open.c (ctf_bufopen): Set it.  No longer dump header offsets.\n-\t* ctf-dump.c (dump_header): New function, dump the CTF header.\n-\t(ctf_dump): Call it.\n-\t(ctf_dump_header_strfield): New function.\n-\t(ctf_dump_header_sectfield): Likewise.\n-\n-2019-07-06  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_file_t): New fields ctf_header, ctf_dynbase,\n-\tctf_cuname, ctf_dyncuname: ctf_base and ctf_buf are no longer const.\n-\t* ctf-open.c (ctf_set_base): Preserve the gap between ctf_buf and\n-\tctf_base: do not assume that it is always sizeof (ctf_header_t).\n-\tPrint out ctf_cuname: only print out ctf_parname if set.\n-\t(ctf_free_base): Removed, ctf_base is no longer freed: free\n-\tctf_dynbase instead.\n-\t(ctf_set_version): Fix spacing.\n-\t(upgrade_header): New, in-place header upgrading.\n-\t(upgrade_types): Rename to...\n-\t(upgrade_types_v1): ... this.  Free ctf_dynbase, not ctf_base.  No\n-\tlonger track old and new headers separately.  No longer allow for\n-\theader sizes explicitly: squeeze the headers out on upgrade (they\n-\tare preserved in fp->ctf_header).  Set ctf_dynbase, ctf_base and\n-\tctf_buf explicitly.  Use ctf_free, not ctf_free_base.\n-\t(upgrade_types): New, also handle ctf_parmax updating.\n-\t(flip_header): Flip ctf_cuname.\n-\t(flip_types): Flip BUF explicitly rather than deriving BUF from\n-\tBASE.\n-\t(ctf_bufopen): Store the header in fp->ctf_header.  Correct minimum\n-\trequired alignment of objtoff and funcoff.  No longer store it in\n-\tthe ctf_buf unless that buf is derived unmodified from the input.\n-\tSet ctf_dynbase where ctf_base is dynamically allocated. Drop locals\n-\tthat duplicate fields in ctf_file: move allocation of ctf_file\n-\tfurther up instead.  Call upgrade_header as needed.  Move\n-\tversion-specific ctf_parmax initialization into upgrade_types.  More\n-\tconcise error handling.\n-\t(ctf_file_close): No longer test for null pointers before freeing.\n-\tFree ctf_dyncuname, ctf_dynbase, and ctf_header.  Do not call\n-\tctf_free_base.\n-\t(ctf_cuname): New.\n-\t(ctf_cuname_set): New.\n-\t* ctf-create.c (ctf_update): Populate ctf_cuname.\n-\t(ctf_gzwrite): Write out the header explicitly.  Remove obsolescent\n-\tcomment.\n-\t(ctf_write): Likewise.\n-\t(ctf_compress_write): Get the header from ctf_header, not ctf_base.\n-\tFix the compression length: fp->ctf_size never counted the CTF\n-\theader.  Simplify the compress call accordingly.\n-\n-2019-07-11  Hans-Peter Nilsson  <hp@bitrange.com>\n-\n-\t* ctf-endian.h: Don't assume htole64 and le64toh are always\n-\tpresent if HAVE_ENDIAN_H; also check if htole64 is defined.\n-\t[!WORDS_BIGENDIAN] (htole64, le64toh): Define as identity,\n-\tnot bswap_identity_64.\n-\n-2019-09-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* ctf-open-bfd.c: Update throughout for bfd section macro changes.\n-\n-2019-09-09  Phil Blundell  <pb@pbcl.net>\n-\n-\tbinutils 2.33 branch created.\n-\n-2019-07-18  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-types.c (ctf_type_aname_raw): New.\n-\t(ctf_func_type_info): Likewise.\n-\t(ctf_func_type_args): Likewise.\n-\t* ctf-error.c (_ctf_errlist): Fix description.\n-\t* ctf-lookup.c: Fix file description.\n-\n-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_create): Fix off-by-one error.\n-\n-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h: (struct ctf_strs_writable): New, non-const version of\n-\tstruct ctf_strs.\n-\t(struct ctf_dtdef): Note that dtd_data.ctt_name is unpopulated.\n-\t(struct ctf_str_atom): New, disambiguated single string.\n-\t(struct ctf_str_atom_ref): New, points to some other location that\n-\treferences this string's offset.\n-\t(struct ctf_file): New members ctf_str_atoms and ctf_str_num_refs.\n-\tRemove member ctf_dtvstrlen: we no longer track the total strlen\n-\tas we add strings.\n-\t(ctf_str_create_atoms): Declare new function in ctf-string.c.\n-\t(ctf_str_free_atoms): Likewise.\n-\t(ctf_str_add): Likewise.\n-\t(ctf_str_add_ref): Likewise.\n-\t(ctf_str_rollback): Likewise.\n-\t(ctf_str_purge_refs): Likewise.\n-\t(ctf_str_write_strtab): Likewise.\n-\t(ctf_realloc): Declare new function in ctf-util.c.\n-\n-\t* ctf-open.c (ctf_bufopen): Create the atoms table.\n-\t(ctf_file_close): Destroy it.\n-\t* ctf-create.c (ctf_update): Copy-and-free it on update.  No longer\n-\tspecial-case the position of the parname string.  Construct the\n-\tstrtab by calling ctf_str_add_ref and ctf_str_write_strtab after the\n-\trest of each buffer element is constructed, not via open-coding:\n-\trealloc the CTF buffer and append the strtab to it.  No longer\n-\tmaintain ctf_dtvstrlen.  Sort the variable entry table later, after\n-\tstrtab construction.\n-\t(ctf_copy_membnames): Remove: integrated into ctf_copy_{s,l,e}members.\n-\t(ctf_copy_smembers): Drop the string offset: call ctf_str_add_ref\n-\tafter buffer element construction instead.\n-\t(ctf_copy_lmembers): Likewise.\n-\t(ctf_copy_emembers): Likewise.\n-\t(ctf_create): No longer maintain the ctf_dtvstrlen.\n-\t(ctf_dtd_delete): Likewise.\n-\t(ctf_dvd_delete): Likewise.\n-\t(ctf_add_generic): Likewise.\n-\t(ctf_add_enumerator): Likewise.\n-\t(ctf_add_member_offset): Likewise.\n-\t(ctf_add_variable): Likewise.\n-\t(membadd): Likewise.\n-\t* ctf-util.c (ctf_realloc): New, wrapper around realloc that aborts\n-\tif there are active ctf_str_num_refs.\n-\t(ctf_strraw): Move to ctf-string.c.\n-\t(ctf_strptr): Likewise.\n-\t* ctf-string.c: New file, strtab manipulation.\n-\n-\t* Makefile.am (libctf_a_SOURCES): Add it.\n-\t* Makefile.in: Regenerate.\n-\n-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (ctf_hash_iter_f): New.\n-\t(ctf_dynhash_iter): New declaration.\n-\t(ctf_dynhash_iter_remove): New declaration.\n-\t* ctf-hash.c (ctf_dynhash_iter): Define.\n-\t(ctf_dynhash_iter_remove): Likewise.\n-\t(ctf_hashtab_traverse): New.\n-\t(ctf_hashtab_traverse_remove): Likewise.\n-\t(struct ctf_traverse_cb_arg): Likewise.\n-\t(struct ctf_traverse_remove_cb_arg): Likewise.\n-\n-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-hash.c (ctf_dynhash_remove): Call with a mocked-up element.\n-\n-2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_dump_format_type): Prefix hex strings with 0x.\n-\t(ctf_dump_funcs): Likewise.\n-\n-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open-bfd.c: Add swap.h and ctf-endian.h.\n-\t(ctf_fdopen): Check for endian-swapped raw CTF magic, and\n-\tlittle-endian CTF archive magic.  Do not check the CTF version:\n-\tctf_simple_open does that in endian-safe ways.  Do not dereference\n-\tnull pointers on open failure.\n-\n-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (get_vbytes_common): Return the new slice size.\n-\t(ctf_bufopen): Flip the endianness of the CTF-section header copy.\n-\tRemember to copy in the CTF data when opening an uncompressed\n-\tforeign-endian CTF file.  Prune useless variable manipulation.\n-\n-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (ctf_types): Fail when unidentified type kinds are\n-\tseen.\n-\n-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c (ctf_bufopen): Dump header offsets into the debugging\n-\toutput.\n-\n-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-subr.c (_PAGESIZE): Remove.\n-\t(ctf_data_alloc): Likewise.\n-\t(ctf_data_free): Likewise.\n-\t(ctf_data_protect): Likewise.\n-\t* ctf-impl.h: Remove declarations.\n-\t* ctf-create.c (ctf_update): No longer call ctf_data_protect: use\n-\tctf_free, not ctf_data_free.\n-\t(ctf_compress_write): Use ctf_data_alloc, not ctf_alloc.  Free\n-\tthe buffer again on compression error.\n-\t* ctf-open.c (ctf_set_base): No longer track the size: call\n-\tctf_free, not ctf_data_free.\n-\t(upgrade_types): Likewise.  Call ctf_alloc, not ctf_data_alloc.\n-\t(ctf_bufopen): Likewise.  No longer call ctf_data_protect.\n-\n-2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (ctf_dtd_insert): Pass on error returns from\n-\tctf_dynhash_insert.\n-\t(ctf_dvd_insert): Likewise.\n-\t(ctf_add_generic): Likewise.\n-\t(ctf_add_variable): Likewise.\n-\t* ctf-impl.h: Adjust declarations.\n-\n-2019-06-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure: Regenerate.\n-\n-2019-06-06  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-decls.h: Include <libiberty.h>.\n-\t* ctf-lookup.c (ctf_lookup_by_name): Call xstrndup(), not strndup().\n-\n-2019-06-06  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_dump_format_type): Cast size_t's used in printf()s.\n-\t(ctf_dump_objts): Likewise.\n-\t(ctf_dump_funcs): Likewise.\n-\t(ctf_dump_member): Likewise.\n-\t(ctf_dump_str): Likewise.\n-\n-2019-06-06  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (arc_mmap_header): Mark fd as potentially unused.\n-\t* ctf-subr.c (ctf_data_protect): Mark both args as potentially unused.\n-\n-2019-06-05  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c (ctf_arc_write): Eschew %zi format specifier.\n-\t(ctf_arc_open_by_offset): Likewise.\n-\t* ctf-create.c (ctf_add_type): Likewise.\n-\n-2019-06-04  Tom Tromey  <tromey@adacore.com>\n-\n-\t* ctf-create.c (ctf_add_encoded, ctf_add_slice)\n-\t(ctf_add_member_offset): Use CHAR_BIT, not NBBY.\n-\n-2019-06-04  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.ac: Check for O_CLOEXEC.\n-\t* ctf-decls.h (O_CLOEXEC): Define (to 0), if need be.\n-\t* config.h.in: Regenerate.\n-\t* configure: Likewise.\n-\n-2019-06-04  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* qsort_r.c: Rename to...\n-\t* ctf-qsort_r.c: ... this.\n-\t(_quicksort): Define to ctf_qsort_r.\n-\t* ctf-decls.h (qsort_r): Remove.\n-\t(ctf_qsort_r): Add.\n-\t(struct ctf_qsort_arg): New, transport the real ARG and COMPAR.\n-\t(ctf_qsort_compar_thunk): Rearrange the arguments to COMPAR.\n-\t* Makefile.am (libctf_a_LIBADD): Remove.\n-\t(libctf_a_SOURCES): New, add ctf-qsort_r.c.\n-\t* ctf-archive.c (ctf_arc_write): Call ctf_qsort_r, not qsort_r.\n-\t* ctf-create.c (ctf_update): Likewise.\n-\t* configure.ac: Check for BSD versus GNU qsort_r signature.\n-\t* Makefile.in: Regenerate.\n-\t* config.h.in: Likewise.\n-\t* configure: Likewise.\n-\n-2019-06-03  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c (ctf_dump_funcs): Free in the right place.\n-\n-2019-05-29  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* Makefile.am (ZLIB): New.\n-\t(ZLIBINC): Likewise.\n-\t(AM_CFLAGS): Use them.\n-\t(libctf_a_LIBADD): New, for LIBOBJS.\n-\t* configure.ac: Check for zlib, endian.h, and qsort_r.\n-\t* ctf-endian.h: New, providing htole64 and le64toh.\n-\t* swap.h: Code style fixes.\n-\t(bswap_identity_64): New.\n-\t* qsort_r.c: New, from gnulib (with one added #include).\n-\t* ctf-decls.h: New, providing a conditional qsort_r declaration,\n-\tand unconditional definitions of MIN and MAX.\n-\t* ctf-impl.h: Use it.  Do not use <sys/errno.h>.\n-\t(ctf_set_errno): Now returns unsigned long.\n-\t* ctf-util.c (ctf_set_errno): Adjust here too.\n-\t* ctf-archive.c: Use ctf-endian.h.\n-\t(ctf_arc_open_by_offset): Use memset, not bzero.  Drop cts_type,\n-\tcts_flags and cts_offset.\n-\t(ctf_arc_write): Drop debugging dependent on the size of off_t.\n-\t* ctf-create.c: Provide a definition of roundup if not defined.\n-\t(ctf_create): Drop cts_type, cts_flags and cts_offset.\n-\t(ctf_add_reftype): Do not check if type IDs are below zero.\n-\t(ctf_add_slice): Likewise.\n-\t(ctf_add_typedef): Likewise.\n-\t(ctf_add_member_offset): Cast error-returning ssize_t's to size_t\n-\twhen known error-free.  Drop CTF_ERR usage for functions returning\n-\tint.\n-\t(ctf_add_member_encoded): Drop CTF_ERR usage for functions returning\n-\tint.\n-\t(ctf_add_variable): Likewise.\n-\t(enumcmp): Likewise.\n-\t(enumadd): Likewise.\n-\t(membcmp): Likewise.\n-\t(ctf_add_type): Likewise.  Cast error-returning ssize_t's to size_t\n-\twhen known error-free.\n-\t* ctf-dump.c (ctf_is_slice): Drop CTF_ERR usage for functions\n-\treturning int: use CTF_ERR for functions returning ctf_type_id.\n-\t(ctf_dump_label): Likewise.\n-\t(ctf_dump_objts): Likewise.\n-\t* ctf-labels.c (ctf_label_topmost): Likewise.\n-\t(ctf_label_iter): Likewise.\n-\t(ctf_label_info): Likewise.\n-\t* ctf-lookup.c (ctf_func_args): Likewise.\n-\t* ctf-open.c (upgrade_types): Cast to size_t where appropriate.\n-\t(ctf_bufopen): Likewise.  Use zlib types as needed.\n-\t* ctf-types.c (ctf_member_iter): Drop CTF_ERR usage for functions\n-\treturning int.\n-\t(ctf_enum_iter): Likewise.\n-\t(ctf_type_size): Likewise.\n-\t(ctf_type_align): Likewise.  Cast to size_t where appropriate.\n-\t(ctf_type_kind_unsliced): Likewise.\n-\t(ctf_type_kind): Likewise.\n-\t(ctf_type_encoding): Likewise.\n-\t(ctf_member_info): Likewise.\n-\t(ctf_array_info): Likewise.\n-\t(ctf_enum_value): Likewise.\n-\t(ctf_type_rvisit): Likewise.\n-\t* ctf-open-bfd.c (ctf_bfdopen): Drop cts_type, cts_flags and\n-\tcts_offset.\n-\t(ctf_simple_open): Likewise.\n-\t(ctf_bfdopen_ctfsect): Likewise.  Set cts_size properly.\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Likewise.\n-\t* config.h: Likewise.\n-\t* configure: Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* configure.in: Check for bfd_section_from_elf_index.\n-\t* configure: Regenerate.\n-\t* config.h.in [HAVE_BFD_ELF]: Likewise.\n-\t* libctf/ctf_open_bfd (ctf_bfdopen_ctfsect): Use it.\n-\tabfd is potentially unused now.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* Makefile.am: New.\n-\t* Makefile.in: Regenerated.\n-\t* config.h.in: Likewise.\n-\t* aclocal.m4: Likewise.\n-\t* configure: Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-dump.c: New.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-labels.c: New.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h (_libctf_version): New declaration.\n-\t* ctf-subr.c (_libctf_version): Define it.\n-\t(ctf_version): New.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c (enumcmp): New.\n-\t(enumadd): Likewise.\n-\t(membcmp): Likewise.\n-\t(membadd): Likewise.\n-\t(ctf_add_type): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-lookup.c (isqualifier): New.\n-\t(ctf_lookup_by_name): Likewise.\n-\t(struct ctf_lookup_var_key): Likewise.\n-\t(ctf_lookup_var): Likewise.\n-\t(ctf_lookup_variable): Likewise.\n-\t(ctf_lookup_symbol_name): Likewise.\n-\t(ctf_lookup_by_symbol): Likewise.\n-\t(ctf_func_info): Likewise.\n-\t(ctf_func_args): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-decl.c: New file.\n-\t* ctf-types.c: Likewise.\n-\t* ctf-impl.h: New declarations.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open-bfd.c: New file.\n-\t* ctf-open.c (ctf_close): New.\n-\t* ctf-impl.h: Include bfd.h.\n-\t(ctf_file): New members ctf_data_mmapped, ctf_data_mmapped_len.\n-\t(ctf_archive_internal): New members ctfi_abfd, ctfi_data,\n-\tctfi_bfd_close.\n-\t(ctf_bfdopen_ctfsect): New declaration.\n-\t(_CTF_SECTION): likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-archive.c: New.\n-\t* ctf-impl.h (ctf_archive_internal): New type.\n-\t(ctf_arc_open_internal): New declaration.\n-\t(ctf_arc_bufopen): Likewise.\n-\t(ctf_arc_close_internal): Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-open.c: New file.\n-\t* swap.h: Likewise.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-create.c: New file.\n-\t* ctf-lookup.c: New file.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-impl.h: New definitions and declarations for type creation\n-\tand lookup.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-hash.c: New file.\n-\t* ctf-impl.h: New declarations.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-error.c: New file.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n-\n-\t* ctf-util.c: New file.\n-\t* elf.h: Likewise.\n-\t* ctf-impl.h: Include it, and add declarations.\n-\n-2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+For older changes see ChangeLog-2020\n+\f\n+Copyright (C) 2021 Free Software Foundation, Inc.\n \n-\t* ctf-impl.h: New file.\n-\t* ctf-subr.c: New file.\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n \n-\f\n Local Variables:\n mode: change-log\n left-margin: 8\n-fill-column: 76\n+fill-column: 74\n version-control: never\n End:"
    },
    {
      "sha": "f12c88acfa25acc7c8318d3b971cf642236d63e4",
      "filename": "libctf/ChangeLog-2020",
      "status": "added",
      "additions": 1954,
      "deletions": 0,
      "changes": 1954,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/libctf/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/libctf/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52",
      "patch": "@@ -0,0 +1,1954 @@\n+2020-09-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libctf/26934\n+\t* ctf-dump.c (ctf_dump_objts): Pass format argument to asprintf.\n+\n+2020-11-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_dict_t) <ctf_symtab_little_endian>: New.\n+\t(struct ctf_archive_internal) <ctfi_symsect_little_endian>: Likewise.\n+\t* ctf-create.c (ctf_serialize): Adjust for new field.\n+\t* ctf-open.c (init_symtab): Note the semantics of repeated calls.\n+\t(ctf_symsect_endianness): New.\n+\t(ctf_bufopen_internal): Set ctf_symtab_little_endian suitably for\n+\tthe native endianness.\n+\t(_Static_assert): Moved...\n+\t(swap_thing): ... with this...\n+\t* swap.h: ... to here.\n+\t* ctf-util.c (ctf_elf32_to_link_sym): Use it, byteswapping the\n+\tElf32_Sym if the ctf_symtab_little_endian demands it.\n+\t(ctf_elf64_to_link_sym): Likewise swap the Elf64_Sym if needed.\n+\t* ctf-archive.c (ctf_arc_symsect_endianness): New, set the\n+\tendianness of the symtab used by the dicts in an archive.\n+\t(ctf_archive_iter_internal): Initialize to unknown (assumed native,\n+\tdo not call ctf_symsect_endianness).\n+\t(ctf_dict_open_by_offset): Call ctf_symsect_endianness if need be.\n+\t(ctf_dict_open_internal): Propagate the endianness down.\n+\t(ctf_dict_open_sections): Likewise.\n+\t* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Get the endianness from the\n+\tstruct bfd and pass it down to the archive.\n+\t* libctf.ver: Add ctf_symsect_endianness and\n+\tctf_arc_symsect_endianness.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c (ctf_link_deduplicating): Clean up the ctf_link_outputs\n+\thash on error.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_dtd_insert): Set ENOMEM on the dict if out of memory.\n+\t(ctf_dvd_insert): Likewise.\n+\t(ctf_add_function): Report ECTF_RDONLY if this dict is not writable.\n+\t* ctf-subr.c (ctf_err_warn): Only debug-dump passed-in warnings if\n+\tthe passed-in error code is nonzero: the error on the dict for\n+\twarnings may relate to a previous error.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (ctf_getsymsect): New.\n+\t(ctf_getstrsect): Likewise.\n+\t* libctf.ver: Add them.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (struct ctf_archive_internal) <ctfi_dicts>: New, dicts\n+\tthe archive machinery has opened and cached.\n+\t<ctfi_symdicts>: New, cache of dicts containing symbols looked up.\n+\t<ctfi_syms>: New, cache of types of symbols looked up.\n+\t* ctf-archive.c (ctf_arc_close): Free them on close.\n+\t(enosym): New, flag entry for 'symbol not present'.\n+\t(ctf_arc_import_parent): New, automatically import the parent from\n+\t\".ctf\" if this is a child in an archive and \".ctf\" is present.\n+\t(ctf_dict_open_sections): Use it.\n+\t(ctf_archive_iter_internal): Likewise.\n+\t(ctf_cached_dict_close): New, thunk around ctf_dict_close.\n+\t(ctf_dict_open_cached): New, open and cache a dict.\n+\t(ctf_arc_flush_caches): New, flush the caches.\n+\t(ctf_arc_lookup_symbol): New, look up a symbol in (all members of)\n+\tan archive, and cache the lookup.\n+\t(ctf_archive_iter): Note the new caching behaviour.\n+\t(ctf_archive_next): Use ctf_dict_open_cached.\n+\t* libctf.ver: Add ctf_arc_lookup_symbol and ctf_arc_flush_caches.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dedup.c (ctf_dedup_rhash_type): Null out the names of nameless\n+\ttype kinds, just in case the input has named them.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_header): Dump the new flags bits and the index\n+\tsection lengths.\n+\t(ctf_dump_objts): Report indexed sections.  Also dump functions.  Use\n+\tctf_symbol_next, not manual looping.\n+\t(ctf_dump_funcs): Delete.\n+\t(ctf_dump): Use ctf_dump_objts, not ctf_dump_funcs.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (CTF_INDEX_PAD_THRESHOLD): New.\n+\t(_libctf_nonnull_): Likewise.\n+\t(ctf_in_flight_dynsym_t): New.\n+\t(ctf_dict_t) <ctf_funcidx_names>: Likewise.\n+\t<ctf_objtidx_names>: Likewise.\n+\t<ctf_nfuncidx>: Likewise.\n+\t<ctf_nobjtidx>: Likewise.\n+\t<ctf_funcidx_sxlate>: Likewise.\n+\t<ctf_objtidx_sxlate>: Likewise.\n+\t<ctf_objthash>: Likewise.\n+\t<ctf_funchash>: Likewise.\n+\t<ctf_dynsyms>: Likewise.\n+\t<ctf_dynsymidx>: Likewise.\n+\t<ctf_dynsymmax>: Likewise.\n+\t<ctf_in_flight_dynsym>: Likewise.\n+\t(struct ctf_next) <u.ctn_next>: Likewise.\n+\t(ctf_symtab_skippable): New prototype.\n+\t(ctf_add_funcobjt_sym): Likewise.\n+\t(ctf_dynhash_sort_by_name): Likewise.\n+\t(ctf_sym_to_elf64): Rename to...\n+\t(ctf_elf32_to_link_sym): ... this, and...\n+\t(ctf_elf64_to_link_sym): ... this.\n+\t* ctf-open.c (init_symtab): Check for lack of CTF_F_NEWFUNCINFO\n+\tflag, and presence of index sections.  Refactor out\n+\tctf_symtab_skippable and ctf_elf*_to_link_sym, and use them.  Use\n+\tctf_link_sym_t, not Elf64_Sym.  Skip initializing objt or func\n+\tsxlate sections if corresponding index section is present.  Adjust\n+\tfor new func info section format.\n+\t(ctf_bufopen_internal): Add ctf_err_warn to corrupt-file error\n+\thandling.  Report incorrect-length index sections.  Always do an\n+\tinit_symtab, even if there is no symtab section (there may be index\n+\tsections still).\n+\t(flip_objts): Adjust comment: func and objt sections are actually\n+\tidentical in structure now, no need to caveat.\n+\t(ctf_dict_close):  Free newly-added data structures.\n+\t* ctf-create.c (ctf_create): Initialize them.\n+\t(ctf_symtab_skippable): New, refactored out of\n+\tinit_symtab, with st_nameidx_set check added.\n+\t(ctf_add_funcobjt_sym): New, add a function or object symbol to the\n+\tctf_objthash or ctf_funchash, by name.\n+\t(ctf_add_objt_sym): Call it.\n+\t(ctf_add_func_sym): Likewise.\n+\t(symtypetab_delete_nonstatic_vars): New, delete vars also present as\n+\tdata objects.\n+\t(CTF_SYMTYPETAB_EMIT_FUNCTION): New flag to symtypetab emitters:\n+\tthis is a function emission, not a data object emission.\n+\t(CTF_SYMTYPETAB_EMIT_PAD): New flag to symtypetab emitters: emit\n+\tpads for symbols with no type (only set for unindexed sections).\n+\t(CTF_SYMTYPETAB_FORCE_INDEXED): New flag to symtypetab emitters:\n+\talways emit indexed.\n+\t(symtypetab_density): New, figure out section sizes.\n+\t(emit_symtypetab): New, emit a symtypetab.\n+\t(emit_symtypetab_index): New, emit a symtypetab index.\n+\t(ctf_serialize): Call them, emitting suitably sorted symtypetab\n+\tsections and indexes.  Set suitable header flags.  Copy over new\n+\tfields.\n+\t* ctf-hash.c (ctf_dynhash_sort_by_name): New, used to impose an\n+\torder on symtypetab index sections.\n+\t* ctf-link.c (ctf_add_type_mapping): Delete erroneous comment\n+\trelating to code that was never committed.\n+\t(ctf_link_one_variable): Improve variable name.\n+\t(check_sym): New, symtypetab analogue of check_variable.\n+\t(ctf_link_deduplicating_one_symtypetab): New.\n+\t(ctf_link_deduplicating_syms): Likewise.\n+\t(ctf_link_deduplicating): Call them.\n+\t(ctf_link_deduplicating_per_cu): Note that we don't call them in\n+\tthis case (yet).\n+\t(ctf_link_add_strtab): Set the error on the fp correctly.\n+\t(ctf_link_add_linker_symbol): New (no longer a do-nothing stub), add\n+\ta linker symbol to the in-flight list.\n+\t(ctf_link_shuffle_syms): New (no longer a do-nothing stub), turn the\n+\tin-flight list into a mapping we can use, now its names are\n+\tresolvable in the external strtab.\n+\t* ctf-string.c (ctf_str_rollback_atom): Don't roll back atoms with\n+\texternal strtab offsets.\n+\t(ctf_str_rollback): Adjust comment.\n+\t(ctf_str_write_strtab): Migrate ctf_syn_ext_strtab population from\n+\twriteout time...\n+\t(ctf_str_add_external): ... to string addition time.\n+\t* ctf-lookup.c (ctf_lookup_var_key_t): Rename to...\n+\t(ctf_lookup_idx_key_t): ... this, now we use it for syms too.\n+\t<clik_names>: New member, a name table.\n+\t(ctf_lookup_var): Adjust accordingly.\n+\t(ctf_lookup_variable): Likewise.\n+\t(ctf_lookup_by_id): Shuffle further up in the file.\n+\t(ctf_symidx_sort_arg_cb): New, callback for...\n+\t(sort_symidx_by_name): ... this new function to sort a symidx\n+\tfound to be unsorted (likely originating from the compiler).\n+\t(ctf_symidx_sort): New, sort a symidx.\n+\t(ctf_lookup_symbol_name): Support dynamic symbols with indexes\n+\tprovided by the linker.  Use ctf_link_sym_t, not Elf64_Sym.\n+\tCheck the parent if a child lookup fails.\n+\t(ctf_lookup_by_symbol): Likewise.  Work for function symbols too.\n+\t(ctf_symbol_next): New, iterate over symbols with types (without\n+\tsorting).\n+\t(ctf_lookup_idx_name): New, bsearch for symbol names in indexes.\n+\t(ctf_try_lookup_indexed): New, attempt an indexed lookup.\n+\t(ctf_func_info): Reimplement in terms of ctf_lookup_by_symbol.\n+\t(ctf_func_args): Likewise.\n+\t(ctf_get_dict): Move...\n+\t* ctf-types.c (ctf_get_dict): ... here.\n+\t* ctf-util.c (ctf_sym_to_elf64): Re-express as...\n+\t(ctf_elf64_to_link_sym): ... this.  Add new st_symidx field, and\n+\tst_nameidx_set (always 0, so st_nameidx can be ignored).  Look in\n+\tthe ELF strtab for names.\n+\t(ctf_elf32_to_link_sym): Likewise, for Elf32_Sym.\n+\t(ctf_next_destroy): Destroy ctf_next_t.u.ctn_next if need be.\n+\t* libctf.ver: Add ctf_symbol_next, ctf_add_objt_sym and\n+\tctf_add_func_sym.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c (ctf_link_shuffle_syms): Adjust.\n+\t(ctf_link_add_linker_symbol): New, unimplemented stub.\n+\t* libctf.ver: Add it.\n+\t* ctf-create.c (ctf_serialize): Set CTF_F_DYNSTR on newly-serialized\n+\tdicts.\n+\t* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Check for the flag: open the\n+\tsymtab/strtab if not present, dynsym/dynstr otherwise.\n+\t* ctf-archive.c (ctf_arc_bufpreamble): New, get the preamble from\n+\tsome arbitrary member of a CTF archive.\n+\t* ctf-impl.h (ctf_arc_bufpreamble): Declare it.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_arc_open_by_offset): Rename to...\n+\t(ctf_dict_open_by_offset): ... this.  Adjust callers.\n+\t(ctf_arc_open_by_name_internal): Rename to...\n+\t(ctf_dict_open_internal): ... this.  Adjust callers.\n+\t(ctf_arc_open_by_name_sections): Rename to...\n+\t(ctf_dict_open_sections): ... this, keeping compatibility function.\n+\t(ctf_arc_open_by_name): Rename to...\n+\t(ctf_dict_open): ... this, keeping compatibility function.\n+\t* libctf.ver: New functions added.\n+\t* ctf-link.c (ctf_link_one_input_archive): Adjusted accordingly.\n+\t(ctf_link_deduplicating_open_inputs): Likewise.\n+\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h: Rename ctf_file_t to ctf_dict_t: all declarations\n+\tadjusted.\n+\t(ctf_fileops): Rename to...\n+\t(ctf_dictops): ... this.\n+\t(ctf_dedup_t) <cd_id_to_file_t>: Rename to...\n+\t<cd_id_to_dict_t>: ... this.\n+\t(ctf_file_t): Fix outdated comment.\n+\t<ctf_fileops>: Rename to...\n+\t<ctf_dictops>: ... this.\n+\t(struct ctf_archive_internal) <ctfi_file>: Rename to...\n+\t<ctfi_dict>: ... this.\n+\t* ctf-archive.c: Rename ctf_file_t to ctf_dict_t.\n+\tRename ctf_archive.ctfa_nfiles to ctfa_ndicts.\n+\tRename ctf_file_close to ctf_dict_close.  All users adjusted.\n+\t* ctf-create.c: Likewise.  Refer to CTF dicts, not CTF containers.\n+\t(ctf_bundle_t) <ctb_file>: Rename to...\n+\t<ctb_dict): ... this.\n+\t* ctf-decl.c: Rename ctf_file_t to ctf_dict_t.\n+\t* ctf-dedup.c: Likewise.  Rename ctf_file_close to\n+\tctf_dict_close. Refer to CTF dicts, not CTF containers.\n+\t* ctf-dump.c: Likewise.\n+\t* ctf-error.c: Likewise.\n+\t* ctf-hash.c: Likewise.\n+\t* ctf-inlines.h: Likewise.\n+\t* ctf-labels.c: Likewise.\n+\t* ctf-link.c: Likewise.\n+\t* ctf-lookup.c: Likewise.\n+\t* ctf-open-bfd.c: Likewise.\n+\t* ctf-string.c: Likewise.\n+\t* ctf-subr.c: Likewise.\n+\t* ctf-types.c: Likewise.\n+\t* ctf-util.c: Likewise.\n+\t* ctf-open.c: Likewise.\n+\t(ctf_file_close): Rename to...\n+\t(ctf_dict_close): ...this.\n+\t(ctf_file_close): New trivial wrapper around ctf_dict_close, for\n+\tcompatibility.\n+\t(ctf_parent_file): Rename to...\n+\t(ctf_parent_dict): ... this.\n+\t(ctf_parent_file): New trivial wrapper around ctf_parent_dict, for\n+\tcompatibility.\n+\t* libctf.ver: Add ctf_dict_close and ctf_parent_dict.\n+\n+2020-10-21  Tom Tromey  <tromey@adacore.com>\n+\n+\t* mkerrors.sed: Remove.\n+\t* ctf-error.c (_CTF_FIRST): New define.\n+\t(_CTF_ITEM): Define this, not _CTF_STR.\n+\t(_ctf_errlist, _ctf_erridx): Use _CTF_ERRORS.\n+\t(ERRSTRFIELD): Rewrite.\n+\t(ERRSTRFIELD1): Remove.\n+\t* Makefile.in: Rebuild.\n+\t* Makefile.am (BUILT_SOURCES): Remove.\n+\t(ctf-error.h): Remove.\n+\n+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-subr.c (open_errors): New list.\n+\t(ctf_err_warn): Calls with NULL fp append to open_errors.  Add err\n+\tparameter, and use it to decorate the debug stream with errmsgs.\n+\t(ctf_err_warn_to_open): Splice errors from a CTF dict into the\n+\topen_errors.\n+\t(ctf_errwarning_next): Calls with NULL fp report from open_errors.\n+\tNew err param to report iteration errors (including end-of-iteration)\n+\twhen fp is NULL.\n+\t(ctf_assert_fail_internal): Adjust ctf_err_warn call for new err\n+\tparameter: gettextize.\n+\t* ctf-impl.h (ctfo_get_vbytes): Add ctf_file_t parameter.\n+\t(LCTF_VBYTES): Adjust.\n+\t(ctf_err_warn_to_open): New.\n+\t(ctf_err_warn): Adjust.\n+\t(ctf_bundle): Used in only one place: move...\n+\t* ctf-create.c: ... here.\n+\t(enumcmp): Use ctf_err_warn, not ctf_dprintf, passing the err number\n+\tdown as needed.  Don't emit the errmsg.  Gettextize.\n+\t(membcmp): Likewise.\n+\t(ctf_add_type_internal): Likewise.\n+\t(ctf_write_mem): Likewise.\n+\t(ctf_compress_write): Likewise.  Report errors writing the header or\n+\tbody.\n+\t(ctf_write): Likewise.\n+\t* ctf-archive.c (ctf_arc_write_fd): Use ctf_err_warn, not\n+\tctf_dprintf, and gettextize, as above.\n+\t(ctf_arc_write): Likewise.\n+\t(ctf_arc_bufopen): Likewise.\n+\t(ctf_arc_open_internal): Likewise.\n+\t* ctf-labels.c (ctf_label_iter): Likewise.\n+\t* ctf-open-bfd.c (ctf_bfdclose): Likewise.\n+\t(ctf_bfdopen): Likewise.\n+\t(ctf_bfdopen_ctfsect): Likewise.\n+\t(ctf_fdopen): Likewise.\n+\t* ctf-string.c (ctf_str_write_strtab): Likewise.\n+\t* ctf-types.c (ctf_type_resolve): Likewise.\n+\t* ctf-open.c (get_vbytes_common): Likewise. Pass down the ctf dict.\n+\t(get_vbytes_v1): Pass down the ctf dict.\n+\t(get_vbytes_v2): Likewise.\n+\t(flip_ctf): Likewise.\n+\t(flip_types): Likewise. Use ctf_err_warn, not ctf_dprintf, and\n+\tgettextize, as above.\n+\t(upgrade_types_v1): Adjust calls.\n+\t(init_types): Use ctf_err_warn, not ctf_dprintf, as above.\n+\t(ctf_bufopen_internal): Likewise. Adjust calls. Transplant errors\n+\temitted into individual dicts into the open errors if this turns\n+\tout to be a failed open in the end.\n+\t* ctf-dump.c (ctf_dump_format_type): Adjust ctf_err_warn for new err\n+\targument.  Gettextize.  Don't emit the errmsg.\n+\t(ctf_dump_funcs): Likewise.  Collapse err label into its only case.\n+\t(ctf_dump_type): Likewise.\n+\t* ctf-link.c (ctf_create_per_cu): Adjust ctf_err_warn for new err\n+\targument.  Gettextize.  Don't emit the errmsg.\n+\t(ctf_link_one_type): Likewise.\n+\t(ctf_link_lazy_open): Likewise.\n+\t(ctf_link_one_input_archive): Likewise.\n+\t(ctf_link_deduplicating_count_inputs): Likewise.\n+\t(ctf_link_deduplicating_open_inputs): Likewise.\n+\t(ctf_link_deduplicating_close_inputs): Likewise.\n+\t(ctf_link_deduplicating): Likewise.\n+\t(ctf_link): Likewise.\n+\t(ctf_link_deduplicating_per_cu): Likewise. Add some missed\n+\tctf_set_errnos to obscure error cases.\n+\t* ctf-dedup.c (ctf_dedup_rhash_type): Adjust ctf_err_warn for new\n+\terr argument.  Gettextize.  Don't emit the errmsg.\n+\t(ctf_dedup_populate_mappings): Likewise.\n+\t(ctf_dedup_detect_name_ambiguity): Likewise.\n+\t(ctf_dedup_init): Likewise.\n+\t(ctf_dedup_multiple_input_dicts): Likewise.\n+\t(ctf_dedup_conflictify_unshared): Likewise.\n+\t(ctf_dedup): Likewise.\n+\t(ctf_dedup_rwalk_one_output_mapping): Likewise.\n+\t(ctf_dedup_id_to_target): Likewise.\n+\t(ctf_dedup_emit_type): Likewise.\n+\t(ctf_dedup_emit_struct_members): Likewise.\n+\t(ctf_dedup_populate_type_mapping): Likewise.\n+\t(ctf_dedup_populate_type_mappings): Likewise.\n+\t(ctf_dedup_emit): Likewise.\n+\t(ctf_dedup_hash_type): Likewise. Fix a bit of messed-up error\n+\tstatus setting.\n+\t(ctf_dedup_rwalk_one_output_mapping): Likewise. Don't hide\n+\tunknown-type-kind messages (which signify file corruption).\n+\n+2020-08-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac: Adjust package name to simply 'libctf': arbitrarily\n+\tdeclare this to be version 1.2.0.\n+\t* Makefile.am (AM_CPPFLAGS): Add @INCINTL@.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* ctf-intl.h: New file, lightly modified from opcodes/opintl.h.\n+\t* ctf-impl.h: Include it.\n+\t* ctf-error.r (_ctf_errlist_t): Mark strings as noop-translatable.\n+\t(ctf_errmsg): Actually translate them.\n+\n+2020-07-26  Eli Zaretskii  <eliz@gnu.org>\n+\n+\tPR binutils/25155:\n+\t* ctf-create.c (EOVERFLOW): If not defined by system header,\n+\tredirect to ERANGE as a poor man's substitute.\n+\t* ctf-subr.c (ENOTSUP): If not defined, use ENOSYS instead.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_dtd_insert): Add uintptr_t casts.\n+\t(ctf_dtd_delete): Likewise.\n+\t(ctf_dtd_lookup): Likewise.\n+\t(ctf_rollback): Likewise.\n+\t* ctf-hash.c (ctf_hash_lookup_type): Likewise.\n+\t* ctf-types.c (ctf_lookup_by_rawhash): Likewise.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-lookup.c (ctf_lookup_by_name): Adjust.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_arc_bufopen): Endian-swap the archive magic\n+\tnumber if needed.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_list_splice): New.\n+\t* ctf-util.h (ctf_list_splice): Likewise.\n+\t* ctf-link.c (link_sort_inputs_cb_arg_t): Likewise.\n+\t(ctf_link_sort_inputs): Likewise.\n+\t(ctf_link_deduplicating_count_inputs): Likewise.\n+\t(ctf_link_deduplicating_open_inputs): Likewise.\n+\t(ctf_link_deduplicating_close_inputs): Likewise.\n+\t(ctf_link_deduplicating_variables): Likewise.\n+\t(ctf_link_deduplicating_per_cu): Likewise.\n+\t(ctf_link_deduplicating): Likewise.\n+\t(ctf_link): Call it.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c (ctf_link_one_input_archive_member): Check\n+\tCTF_LINK_OMIT_VARIABLES_SECTION.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_type_id_key): New, the key in the\n+\tcd_id_to_file_t.\n+\t(ctf_dedup): New, core deduplicator state.\n+\t(ctf_file_t) <ctf_dedup>: New.\n+\t<ctf_dedup_atoms>: New.\n+\t<ctf_dedup_atoms_alloc>: New.\n+\t(ctf_hash_type_id_key): New prototype.\n+\t(ctf_hash_eq_type_id_key): Likewise.\n+\t(ctf_dedup_atoms_init): Likewise.\n+\t* ctf-hash.c (ctf_hash_eq_type_id_key): New.\n+\t(ctf_dedup_atoms_init): Likewise.\n+\t* ctf-create.c (ctf_serialize): Adjusted.\n+\t(ctf_add_encoded): No longer static.\n+\t(ctf_add_reftype): Likewise.\n+\t* ctf-open.c (ctf_file_close): Destroy the\n+\tctf_dedup_atoms_alloc.\n+\t* ctf-dedup.c: New file.\n+        * ctf-decls.h [!HAVE_DECL_STPCPY]: Add prototype.\n+\t* configure.ac: Check for stpcpy.\n+\t* Makefile.am: Add it.\n+\t* Makefile.in: Regenerate.\n+        * config.h.in: Regenerate.\n+        * configure: Regenerate.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac: Add --enable-libctf-hash-debugging.\n+\t* aclocal.m4: Pull in enable.m4, for GCC_ENABLE.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Likewise.\n+\t* config.h.in: Likewise.\n+\t* ctf-impl.h [ENABLE_LIBCTF_HASH_DEBUGGING]\n+\t(ctf_assert): Define to assert.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-sha1.h: New, inline wrappers around sha1_init_ctx and\n+\tsha1_process_bytes.\n+\t* ctf-impl.h: Include it.\n+\t(ctf_sha1_init): New.\n+\t(ctf_sha1_add): Likewise.\n+\t(ctf_sha1_fini): Likewise.\n+\t* ctf-sha1.c: New, non-inline wrapper around sha1_finish_ctx\n+\tproducing strings.\n+\t* Makefile.am: Add file.\n+\t* Makefile.in: Regenerate.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* libctf.ver (ctf_link_set_variable_filter): Add.\n+\t* ctf-impl.h (ctf_file_t) <ctf_link_variable_filter>: New.\n+\t<ctf_link_variable_filter_arg>: Likewise.\n+\t* ctf-create.c (ctf_serialize): Adjust.\n+\t* ctf-link.c (ctf_link_set_variable_filter): New, set it.\n+\t(ctf_link_one_variable): Call it if set.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c (ctf_link_one_variable): Check the dst_type for\n+\tconflicts, not the source type.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_file_t): Improve comments.\n+\t<ctf_link_cu_mapping>: Split into...\n+\t<ctf_link_in_cu_mapping>: ... this...\n+\t<ctf_link_out_cu_mapping>: ... and this.\n+\t* ctf-create.c (ctf_serialize): Adjust.\n+\t* ctf-open.c (ctf_file_close): Likewise.\n+\t* ctf-link.c (ctf_create_per_cu): Look things up in the\n+\tin_cu_mapping instead of the cu_mapping.\n+\t(ctf_link_add_cu_mapping): The deduplicating link will define\n+\twhat happens if many FROMs share a TO.\n+\t(ctf_link_add_cu_mapping): Create in_cu_mapping and\n+\tout_cu_mapping. Do not create ctf_link_outputs here any more, or\n+\tcreate per-CU dicts here: they are already created when needed.\n+\t(ctf_link_one_variable): Log a debug message if we skip a\n+\tvariable due to its type being concealed in a CU-mapped link.\n+\t(This is probably too common a case to make into a warning.)\n+\t(ctf_link): Create empty per-CU dicts if requested.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c (ctf_link_write): Close the fd.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.am: Set -DNOBFD=1 in libctf-nobfd, and =0 elsewhere.\n+\t* Makefile.in: Regenerated.\n+\t* ctf-impl.h (ctf_link_input_name): New.\n+\t(ctf_file_t) <ctf_link_flags>: New.\n+\t* ctf-create.c (ctf_serialize): Adjust accordingly.\n+\t* ctf-link.c: Define ctf_open as weak when PIC.\n+\t(ctf_arc_close_thunk): Remove unnecessary thunk.\n+\t(ctf_file_close_thunk): Likewise.\n+\t(ctf_link_input_name): New.\n+\t(ctf_link_input_t): New value of the ctf_file_t.ctf_link_input.\n+\t(ctf_link_input_close): Adjust accordingly.\n+\t(ctf_link_add_ctf_internal): New, split from...\n+\t(ctf_link_add_ctf): ... here.  Return error if lazy loading of\n+\tCTF is not possible.  Change to just call...\n+\t(ctf_link_add): ... this new function.\n+\t(ctf_link_add_cu_mapping): Transition to ctf_err_warn.  Drop the\n+\tctf_file_close_thunk.\n+\t(ctf_link_in_member_cb_arg_t) <file_name> Rename to...\n+\t<in_file_name>: ... this.\n+\t<arcname>: Drop.\n+\t<share_mode>: Likewise (migrated to ctf_link_flags).\n+\t<done_main_member>: Rename to...\n+\t<done_parent>: ... this.\n+\t<main_input_fp>: Rename to...\n+\t<in_fp_parent>: ... this.\n+\t<cu_mapped>: New.\n+\t(ctf_link_one_type): Adjuwt accordingly.  Transition to\n+\tctf_err_warn, removing a TODO.\n+\t(ctf_link_one_variable): Note a case too common to warn about.\n+\tReport in the debug stream if a cu-mapped link prevents addition\n+\tof a conflicting variable.\n+\t(ctf_link_one_input_archive_member): Adjust.\n+\t(ctf_link_lazy_open): New, open a CTF archive for linking when\n+\tneeded.\n+\t(ctf_link_close_one_input_archive): New, close it again.\n+\t(ctf_link_one_input_archive): Adjust for lazy opening, member\n+\trenames, and ctf_err_warn transition.  Move the\n+\tempty_link_type_mapping call to...\n+\t(ctf_link): ... here.  Adjut for renamings and thunk removal.\n+\tDon't spuriously fail if some input contains no CTF data.\n+\t(ctf_link_write): ctf_err_warn transition.\n+\t* libctf.ver: Remove not-yet-stable comment.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_strerror): Delete.\n+\t* ctf-subr.c (ctf_strerror): Likewise.\n+\t* ctf-error.c (ctf_errmsg): Stop using ctf_strerror: just use\n+\tstrerror directly.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.c (ctf_file_t) <ctf_parent_unreffed>: New.\n+\t(ctf_import_unref): New.\n+\t* ctf-open.c (ctf_file_close) Drop the refcount all the way to\n+\tzero.  Don't recurse back in if the refcount is already zero.\n+\t(ctf_import): Check ctf_parent_unreffed before deciding whether\n+\tto close a pre-existing parent.  Set it to zero.\n+\t(ctf_import_unreffed): New, as above, setting\n+\tctf_parent_unreffed to 1.\n+\t* ctf-create.c (ctf_serialize): Do not ctf_import into the new\n+\tchild: use direct assignment, and set unreffed on the new and\n+\told children.\n+\t* ctf-link.c (ctf_create_per_cu): Import the parent using\n+\tctf_import_unreffed.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_link_type_mapping_key): Rename to...\n+\t(ctf_link_type_key): ... this, adjusting member prefixes to\n+\tmatch.\n+\t(ctf_hash_type_mapping_key): Rename to...\n+\t(ctf_hash_type_key): ... this.\n+\t(ctf_hash_eq_type_mapping_key): Rename to...\n+\t(ctf_hash_eq_type_key): ... this.\n+\t* ctf-hash.c (ctf_hash_type_mapping_key): Rename to...\n+\t(ctf_hash_type_key): ... this, and adjust for member name\n+\tchanges.\n+\t(ctf_hash_eq_type_mapping_key): Rename to...\n+\t(ctf_hash_eq_type_key): ... this, and adjust for member name\n+\tchanges.\n+\t* ctf-link.c (ctf_add_type_mapping): Adjust.  Note the lack of\n+\tneed for out-of-memory checking in this code.\n+\t(ctf_type_mapping): Adjust.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tconfigure.ac: Check for vasprintf.\n+\tconfigure: Regenerated.\n+\tconfig.h.in: Likewise.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_arc_bufopen): Fix message.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (struct ctf_archive_internal) <ctfi_free_strsect>\n+\tNew.\n+\t* ctf-open-bfd.c (ctf_bfdopen_ctfsect): Explicitly open a strtab\n+\tif the input has no symtab, rather than dividing by\n+\tzero. Arrange to free it later via ctfi_free_ctfsect.\n+\t* ctf-archive.c (ctf_new_archive_internal): Do not\n+\tctfi_free_strsect by default.\n+\t(ctf_arc_close): Possibly free it here.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_is_slice): Delete, unnecessary.\n+\t(ctf_dump_format_type): improve slice formatting.  Always print\n+\tthe type size, even of slices.\n+\t(ctf_dump_member): Print slices (-> bitfields) differently from\n+\tnon-slices.  Failure to format a type is not an OOM.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_format_type): Emit a warning.\n+\t(ctf_dump_label): Swallow errors from ctf_dump_format_type.\n+\t(ctf_dump_objts): Likewise.\n+\t(ctf_dump_var): Likewise.\n+\t(ctf_dump_type): Do not emit a duplicate message.  Move to\n+\tctf_err_warning, and swallow all errors.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-decl.c (ctf_decl_fini): Free the cd_buf.\n+\t(ctf_decl_buf): Once it escapes, don't try to free it later.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_aname): Print arg types here...\n+\t* ctf-dump.c (ctf_dump_funcs): ... not here: but do substitute\n+\tin the type name here.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_assert): New.\n+\t(ctf_err_warning_t): Likewise.\n+\t(ctf_file_t) <ctf_errs_warnings>: Likewise.\n+\t(ctf_err_warn): New prototype.\n+\t(ctf_assert_fail_internal): Likewise.\n+\t* ctf-inlines.h (ctf_assert_internal): Likewise.\n+\t* ctf-open.c (ctf_file_close): Free ctf_errs_warnings.\n+\t* ctf-create.c (ctf_serialize): Copy it on serialization.\n+\t* ctf-subr.c (ctf_err_warn): New, add an error/warning.\n+\t(ctf_errwarning_next): New iterator, free and pass back\n+\terrors/warnings in succession.\n+\t* libctf.ver (ctf_errwarning_next): Add.\n+\n+2020-07-22  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n+\n+\t* ctf-types.c (ctf_variable_iter): Fix error return.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (ctf_bufopen_internal): Diagnose invalid flags.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tctf-decls.h (ctf_qsort_compar_thunk): Fix arg passing.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_next_hkv_t): New, kv-pairs passed to\n+\tsorting functions.\n+\t(ctf_next_t) <u.ctn_sorted_hkv>: New, sorted kv-pairs for\n+\tctf_dynhash_next_sorted.\n+\t<cu.ctn_h>: New, pointer to the dynhash under iteration.\n+\t<cu.ctn_s>: New, pointer to the dynset under iteration.\n+\t(ctf_hash_sort_f): Sorting function passed to...\n+\t(ctf_dynhash_next_sorted): ... this new function.\n+\t(ctf_dynhash_next): New.\n+\t(ctf_dynset_next): New.\n+\t* ctf-inlines.h (ctf_dynhash_cnext_sorted): New.\n+\t(ctf_dynhash_cnext): New.\n+\t(ctf_dynset_cnext): New.\n+\t* ctf-hash.c (ctf_dynhash_next_sorted): New.\n+\t(ctf_dynhash_next): New.\n+\t(ctf_dynset_next): New.\n+\t* ctf-util.c (ctf_next_destroy): Free the u.ctn_sorted_hkv if\n+\tneeded.\n+\t(ctf_next_copy): Alloc-and-copy the u.ctn_sorted_hkv if needed.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_next): New.\n+\t(ctf_get_dict): New prototype.\n+\t* ctf-lookup.c (ctf_get_dict): New, split out of...\n+\t(ctf_lookup_by_id): ... here.\n+\t* ctf-util.c (ctf_next_create): New.\n+\t(ctf_next_destroy): New.\n+\t(ctf_next_copy): New.\n+\t* ctf-types.c (includes): Add <assert.h>.\n+\t(ctf_member_next): New.\n+\t(ctf_enum_next): New.\n+\t(ctf_type_iter): Document the lack of iteration over parent\n+\ttypes.\n+\t(ctf_type_next): New.\n+\t(ctf_variable_next): New.\n+\t* ctf-archive.c (ctf_archive_next): New.\n+\t* libctf.ver: Add new public functions.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* libctf.ver (ctf_ref): New.\n+\t* ctf-open.c (ctf_ref): Implement it.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-inlines.h (ctf_forwardable_kind): New.\n+\t* ctf-create.c (ctf_add_forward): Use it.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_get_ctt_size): Move definition from here...\n+\t* ctf-inlines.h (ctf_get_ctt_size): ... to here.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-hash.c (ctf_dynset_eq_string): New.\n+\t(ctf_dynset_create): New.\n+\t(DYNSET_EMPTY_ENTRY_REPLACEMENT): New.\n+\t(DYNSET_DELETED_ENTRY_REPLACEMENT): New.\n+\t(key_to_internal): New.\n+\t(internal_to_key): New.\n+\t(ctf_dynset_insert): New.\n+\t(ctf_dynset_remove): New.\n+\t(ctf_dynset_destroy): New.\n+\t(ctf_dynset_lookup): New.\n+\t(ctf_dynset_exists): New.\n+\t(ctf_dynset_lookup_any): New.\n+\t(ctf_hash_insert_type): Coding style.\n+\t(ctf_hash_define_type): Likewise.\n+\t* ctf-impl.h (ctf_dynset_t): New.\n+\t(ctf_dynset_eq_string): New.\n+\t(ctf_dynset_create): New.\n+\t(ctf_dynset_insert): New.\n+\t(ctf_dynset_remove): New.\n+\t(ctf_dynset_destroy): New.\n+\t(ctf_dynset_lookup): New.\n+\t(ctf_dynset_exists): New.\n+\t(ctf_dynset_lookup_any): New.\n+\t* ctf-inlines.h (ctf_dynset_cinsert): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-hash.c (ctf_helem_t) <key_free>: Remove.\n+\t<value_free>: Likewise.\n+\t<owner>: New.\n+\t(ctf_dynhash_item_free): Indirect through the owner.\n+\t(ctf_dynhash_create): Only pass in ctf_dynhash_item_free and\n+\tallocate space for the key_free and value_free fields fields\n+\tif necessary.\n+\t(ctf_hashtab_insert): Likewise.  Fix OOM errno value.\n+\t(ctf_dynhash_insert): Only access ctf_hashtab's key_free and\n+\tvalue_free if they will exist.  Set the slot's owner, but only\n+\tif it exists.\n+\t(ctf_dynhash_remove): Adjust.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-hash.c (ctf_hashtab_insert): Free the key passed in if\n+\tthere is a key-freeing function and the key already exists.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-inlines.h: New file.\n+\t* ctf-impl.h: Include it.\n+\t(ctf_hash_iter_find_f): New typedef.\n+\t(ctf_dynhash_elements): New.\n+\t(ctf_dynhash_lookup_kv): New.\n+\t(ctf_dynhash_iter_find): New.\n+\t* ctf-hash.c (ctf_dynhash_lookup_kv): New.\n+\t(ctf_traverse_find_cb_arg_t): New.\n+\t(ctf_hashtab_traverse_find): New.\n+\t(ctf_dynhash_iter_find): New.\n+\t(ctf_dynhash_elements): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h [!__GNUC__] (__extension__): Define to nothing.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_archive_count): New.\n+\t* libctf.ver: New public function.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_member_count): New.\n+\t* libctf.ver: New public function.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_kind_forwarded): New.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_name_raw): New.\n+\t(ctf_type_aname_raw): Reimplement accordingly.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-subr.c (ctf_dprintf): _libctf_debug is unlikely to be set.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (struct ctf_archive_internal)\n+\t<ctfi_unmap_on_close>: New.\n+\t(ctf_new_archive_internal): Adjust.\n+\t* ctf-archive.c (ctf_new_archive_internal): Likewise.\n+\tInitialize ctfi_unmap_on_close.  Adjust error path.\n+\t(ctf_arc_bufopen): Adjust ctf_new_archive_internal call\n+\t(unmap_on_close is 0).\n+\t(ctf_arc_close): Only unmap if ctfi_unmap_on_close.\n+\t* ctf-open-bfd.c (ctf_fdopen): Adjust.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_aname): Return ECTF_CORRUPT if\n+\tints, floats or typedefs have no name.  Fix comment typo.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_slice): Support slices of any kind that\n+\tresolves to an integral type.\n+\t* ctf-types.c (ctf_type_encoding): Resolve the type before\n+\tfishing its encoding out.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_create): Mark dirty.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (membcmp)  Skip nameless members.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_member_offset): Support names of \"\"\n+\tas if they were the null pointer.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (init_types): Remove typeless CTF_K_FORWARD\n+\tspecial-casing.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_reference): Add support for dynamic slices.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_serialize): Add cast.\n+\t(ctf_add_slice): Likewise.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_dtdef_t) <dtu_argv>: Fix type.\n+\t* ctf-create.c (ctf_add_function): Check for unimplemented type\n+\tand populate at the same time.  Populate one-by-one, not via\n+\tmemcpy.\n+\t(ctf_serialize): Remove unnecessary cast.\n+\t* ctf-types.c (ctf_func_type_info): Likewise.\n+\t(ctf_func_type_args): Likewise.  Fix comment typo.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_reftype): Support refs to type zero.\n+\t(ctf_add_array): Support array contents of type zero.\n+\t(ctf_add_function): Support arguments and return types of\n+\ttype zero.\n+\t(ctf_add_typedef): Support typedefs to type zero.\n+\t(ctf_add_member_offset): Support members of type zero,\n+\tunless added at unspecified (naturally-aligned) offset.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-error.c: Include <stddef.h>, for offsetof.\n+\t(_ctf_errlist): Migrate to...\n+\t(_ctf_errlist_t): ... this.\n+\t(_ctf_erridx): New, indexes into _ctf_errlist_t.\n+\t(_ctf_nerr): Remove.\n+\t(ctf_errmsg): Adjust accordingly.\n+\t* Makefile.am (BUILT_SOURCES): Note...\n+\t(ctf-error.h): ... this new rule.\n+\t* Makefile.in: Regenerate.\n+\t* mkerrors.sed: New, process ctf-api.h to generate ctf-error.h.\n+\t* .gitignore: New, ignore ctf-error.h.\n+\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h: Fix typos in comments.\n+\n+2020-07-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* ctf-archive.c (ctf_arc_write): Avoid calling close twice on the\n+\tsame file descriptor.\n+\n+2020-07-04  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.35 branch created.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* aclocal.m4: Add config/gettext-sister.m4: Shuffle into\n+\talphabetical order.\n+\t* configure.ac: Add ZW_GNU_GETTEXT_SISTER_DIR.\n+\t* config.h.in: Regenerated.\n+\t* Makefile.in: Likewise.\n+\t* configure: Likewise.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c: Include <unistd.h>.\n+\t* ctf-open-bfd.c: Likewise.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tPR libctf/25120\n+\t* configure.ac: Check for bswap_16, bswap_32, and bswap_64 decls.\n+\t* swap.h (bswap_16): Do not assume that presence of <byteswap.h>\n+\tmeans this is declared.\n+\t(bswap_32): Likewise.\n+\t(bswap_64): Likewise.\n+\t(bswap_identity_64): Remove, unused.\n+\t* configure: Regenerated.\n+\t* config.h.in: Likewise.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tPR libctf/25120\n+\t* ctf-impl.h (_libctf_printflike_): Add non-GNU-C fallback.\n+\t(_libctf_unlikely_): Likewise.\n+\t(_libctf_unused): Likewise.\n+\t(_libctf_malloc_): Likewise.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tPR libctf/25120\n+\t* ctf-archive.c (search_nametbl): No longer global: declare...\n+\t(ctf_arc_open_by_name_internal): ... here. Use bsearch_r.\n+\t(search_modent_by_name): Take and use ARG for the nametbl.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_new_archive_internal): Declare.\n+\t(ctf_arc_bufopen): Remove.\n+\t(ctf_archive_internal) <ctfi_free_symsect>: New.\n+\t* ctf-archive.c (ctf_arc_close): Use it.\n+\t(ctf_arc_bufopen): Fuse into...\n+\t(ctf_new_archive_internal): ... this, moved across from...\n+\t* ctf-open-bfd.c: ... here.\n+\t(ctf_bfdopen_ctfsect): Use ctf_arc_bufopen.\n+\t* libctf.ver: Add it.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_forward): Intern in the right namespace.\n+\t(ctf_dtd_delete): Remove correspondingly.\n+\t(ctf_rollback): Likewise.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_type_internal): Hand back existing types\n+\tunchanged.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_forward): Don't add forwards to\n+\ttypes that already exist.\n+\n+2020-06-26  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (init_types): Only intern root-visible types.\n+\t* ctf-create.c (ctf_dtd_insert): Likewise.\n+\t(ctf_dtd_delete): Only remove root-visible types.\n+\t(ctf_rollback): Likewise.\n+\t(ctf_add_generic): Adjust.\n+\t(ctf_add_struct_sized): Adjust comment.\n+\t(ctf_add_union_sized): Likewise.\n+\t(ctf_add_enum): Likewise.\n+\t* ctf-impl.h (ctf_dtd_insert): Adjust prototype.\n+\n+2020-03-11  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* swap.h (bswap_identity_64): Make static.\n+\n+2020-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tBinutils 2.34 branch created.\n+\n+2020-01-05  Joel Brobecker  <brobecker@adacore.com>\n+\n+\tPR binutils/25155:\n+\t* configure.ac: Add AC_CHECK_DECLS([asprintf]).\n+\t* configure, config.h.in: Regenerate.\n+\n+2020-01-01  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+2019-10-16  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* swap.h (bswap_16, bswap_32, bswap_64): Make static.\n+\n+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (ctf_bufopen_internal): Fix tabdamage.\n+\t* ctf-types.c (ctf_type_lname): Likewise.\n+\n+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (ctf_import): Do not leak a ctf_file_t ref on every\n+\tctf_import after the first for a given file.\n+\n+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_str_append_noerr): Declare.\n+\t* ctf-util.c (ctf_str_append_noerr): Define in terms of\n+\tctf_str_append.\n+\t* ctf-dump.c (str_append): New, call it.\n+\t(ctf_dump_format_type): Use str_append, not ctf_str_append.\n+\t(ctf_dump_label): Likewise.\n+\t(ctf_dump_objts): Likewise.\n+\t(ctf_dump_funcs): Likewise.\n+\t(ctf_dump_var): Likewise.\n+\t(ctf_dump_member): Likewise.\n+\t(ctf_dump_type): Likewise.\n+\t(ctf_dump): Likewise.\n+\n+2019-09-23  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_alloc): Remove.\n+\t(ctf_free): Likewise.\n+\t(ctf_strdup): Likewise.\n+\t* ctf-subr.c (ctf_alloc): Remove.\n+\t(ctf_free): Likewise.\n+\t* ctf-util.c (ctf_strdup): Remove.\n+\n+\t* ctf-create.c (ctf_serialize): Use malloc, not ctf_alloc; free, not\n+\tctf_free; strdup, not ctf_strdup.\n+\t(ctf_dtd_delete): Likewise.\n+\t(ctf_dvd_delete): Likewise.\n+\t(ctf_add_generic): Likewise.\n+\t(ctf_add_function): Likewise.\n+\t(ctf_add_enumerator): Likewise.\n+\t(ctf_add_member_offset): Likewise.\n+\t(ctf_add_variable): Likewise.\n+\t(membadd): Likewise.\n+\t(ctf_compress_write): Likewise.\n+\t(ctf_write_mem): Likewise.\n+\t* ctf-decl.c (ctf_decl_push): Likewise.\n+\t(ctf_decl_fini): Likewise.\n+\t(ctf_decl_sprintf): Likewise.  Check for OOM.\n+\t* ctf-dump.c (ctf_dump_append): Use malloc, not ctf_alloc; free, not\n+\tctf_free; strdup, not ctf_strdup.\n+\t(ctf_dump_free): Likewise.\n+\t(ctf_dump): Likewise.\n+\t* ctf-open.c (upgrade_types_v1): Likewise.\n+\t(init_types): Likewise.\n+\t(ctf_file_close): Likewise.\n+\t(ctf_bufopen_internal): Likewise.  Check for OOM.\n+\t(ctf_parent_name_set): Likewise: report the OOM to the caller.\n+\t(ctf_cuname_set): Likewise.\n+\t(ctf_import): Likewise.\n+\t* ctf-string.c (ctf_str_purge_atom_refs): Use malloc, not ctf_alloc;\n+\tfree, not ctf_free; strdup, not ctf_strdup.\n+\t(ctf_str_free_atom): Likewise.\n+\t(ctf_str_create_atoms): Likewise.\n+\t(ctf_str_add_ref_internal): Likewise.\n+\t(ctf_str_remove_ref): Likewise.\n+\t(ctf_str_write_strtab): Likewise.\n+\n+2019-08-09  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_encoding): Fix the dynamic case to\n+\twork right for non-int/fps.\n+\n+2019-08-08  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_name): Don't strlen a potentially-\n+\tnull pointer.\n+\n+2019-08-07  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_file_t) <ctf_add_processing>: New.\n+\t* ctf-open.c (ctf_file_close): Free it.\n+\t* ctf-create.c (ctf_serialize): Adjust.\n+\t(membcmp): When reporting a conflict due to an error, report the\n+\terror.\n+\t(ctf_add_type): Turn into a ctf_add_processing wrapper.  Rename to...\n+\t(ctf_add_type_internal): ... this.  Hand back types we are already\n+\tin the middle of adding immediately.  Hand back structs/unions with\n+\tthe same number of members immediately.  Do not walk the dynamic\n+\tlist.  Call ctf_add_type_internal, not ctf_add_type.  Handle\n+\tforwards promoted to other types and the inverse case identically.\n+\tAdd structs to the mapping as soon as we intern them, before they\n+\tgain any members.\n+\n+2019-08-09  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_names_t): New.\n+\t(ctf_lookup_t) <ctf_hash>: Now a ctf_names_t, not a ctf_hash_t.\n+\t(ctf_file_t) <ctf_structs>: Likewise.\n+\t<ctf_unions>: Likewise.\n+\t<ctf_enums>: Likewise.\n+\t<ctf_names>: Likewise.\n+\t<ctf_lookups>: Improve comment.\n+\t<ctf_ptrtab_len>: New.\n+\t<ctf_prov_strtab>: New.\n+\t<ctf_str_prov_offset>: New.\n+\t<ctf_dtbyname>: Remove, redundant to the names hashes.\n+\t<ctf_dtnextid>: Remove, redundant to ctf_typemax.\n+\t(ctf_dtdef_t) <dtd_name>: Remove.\n+\t<dtd_data>: Note that the ctt_name is now populated.\n+\t(ctf_str_atom_t) <csa_offset>: This is now the strtab\n+\toffset for internal strings too.\n+\t<csa_external_offset>: New, the external strtab offset.\n+\t(CTF_INDEX_TO_TYPEPTR): Handle the LCTF_RDWR case.\n+\t(ctf_name_table): New declaration.\n+\t(ctf_lookup_by_rawname): Likewise.\n+\t(ctf_lookup_by_rawhash): Likewise.\n+\t(ctf_set_ctl_hashes): Likewise.\n+\t(ctf_serialize): Likewise.\n+\t(ctf_dtd_insert): Adjust.\n+\t(ctf_simple_open_internal): Likewise.\n+\t(ctf_bufopen_internal): Likewise.\n+\t(ctf_list_empty_p): Likewise.\n+\t(ctf_str_remove_ref): Likewise.\n+\t(ctf_str_add): Returns uint32_t now.\n+\t(ctf_str_add_ref): Likewise.\n+\t(ctf_str_add_external): Now returns a boolean (int).\n+\t* ctf-string.c (ctf_strraw_explicit): Check the ctf_prov_strtab\n+\tfor strings in the appropriate range.\n+\t(ctf_str_create_atoms): Create the ctf_prov_strtab.  Detect OOM\n+\twhen adding the null string to the new strtab.\n+\t(ctf_str_free_atoms): Destroy the ctf_prov_strtab.\n+\t(ctf_str_add_ref_internal): Add make_provisional argument.  If\n+\tmake_provisional, populate the offset and fill in the\n+\tctf_prov_strtab accordingly.\n+\t(ctf_str_add): Return the offset, not the string.\n+\t(ctf_str_add_ref): Likewise.\n+\t(ctf_str_add_external): Return a success integer.\n+\t(ctf_str_remove_ref): New, remove a single ref.\n+\t(ctf_str_count_strtab): Do not count the initial null string's\n+\tlength or the existence or length of any unreferenced internal\n+\tatoms.\n+\t(ctf_str_populate_sorttab): Skip atoms with no refs.\n+\t(ctf_str_write_strtab): Populate the nullstr earlier.  Add one\n+\tto the cts_len for the null string, since it is no longer done\n+\tin ctf_str_count_strtab.  Adjust for csa_external_offset rename.\n+\tPopulate the csa_offset for both internal and external cases.\n+\tFlush the ctf_prov_strtab afterwards, and reset the\n+\tctf_str_prov_offset.\n+\t* ctf-create.c (ctf_grow_ptrtab): New.\n+\t(ctf_create): Call it.\tInitialize new fields rather than old\n+\tones.  Tell ctf_bufopen_internal that this is a writable dictionary.\n+\tSet the ctl hashes and data model.\n+\t(ctf_update): Rename to...\n+\t(ctf_serialize): ... this.  Leave a compatibility function behind.\n+\tTell ctf_simple_open_internal that this is a writable dictionary.\n+\tPass the new fields along from the old dictionary.  Drop\n+\tctf_dtnextid and ctf_dtbyname.\tUse ctf_strraw, not dtd_name.\n+\tDo not zero out the DTD's ctt_name.\n+\t(ctf_prefixed_name): Rename to...\n+\t(ctf_name_table): ... this.  No longer return a prefixed name: return\n+\tthe applicable name table instead.\n+\t(ctf_dtd_insert): Use it, and use the right name table.\t Pass in the\n+\tkind we're adding.  Migrate away from dtd_name.\n+\t(ctf_dtd_delete): Adjust similarly.  Remove the ref to the\n+\tdeleted ctt_name.\n+\t(ctf_dtd_lookup_type_by_name): Remove.\n+\t(ctf_dynamic_type): Always return NULL on read-only dictionaries.\n+\tNo longer check ctf_dtnextid: check ctf_typemax instead.\n+\t(ctf_snapshot): No longer use ctf_dtnextid: use ctf_typemax instead.\n+\t(ctf_rollback): Likewise.  No longer fail with ECTF_OVERROLLBACK. Use\n+\tctf_name_table and the right name table, and migrate away from\n+\tdtd_name as in ctf_dtd_delete.\n+\t(ctf_add_generic): Pass in the kind explicitly and pass it to\n+\tctf_dtd_insert. Use ctf_typemax, not ctf_dtnextid.  Migrate away\n+\tfrom dtd_name to using ctf_str_add_ref to populate the ctt_name.\n+\tGrow the ptrtab if needed.\n+\t(ctf_add_encoded): Pass in the kind.\n+\t(ctf_add_slice): Likewise.\n+\t(ctf_add_array): Likewise.\n+\t(ctf_add_function): Likewise.\n+\t(ctf_add_typedef): Likewise.\n+\t(ctf_add_reftype): Likewise. Initialize the ctf_ptrtab, checking\n+\tctt_name rather than dtd_name.\n+\t(ctf_add_struct_sized): Pass in the kind.  Use\n+\tctf_lookup_by_rawname, not ctf_hash_lookup_type /\n+\tctf_dtd_lookup_type_by_name.\n+\t(ctf_add_union_sized): Likewise.\n+\t(ctf_add_enum): Likewise.\n+\t(ctf_add_enum_encoded): Likewise.\n+\t(ctf_add_forward): Likewise.\n+\t(ctf_add_type): Likewise.\n+\t(ctf_compress_write): Call ctf_serialize: adjust for ctf_size not\n+\tbeing initialized until after the call.\n+\t(ctf_write_mem): Likewise.\n+\t(ctf_write): Likewise.\n+\t* ctf-archive.c (arc_write_one_ctf): Likewise.\n+\t* ctf-lookup.c (ctf_lookup_by_name): Use ctf_lookuup_by_rawhash, not\n+\tctf_hash_lookup_type.\n+\t(ctf_lookup_by_id): No longer check the readonly types if the\n+\tdictionary is writable.\n+\t* ctf-open.c (init_types): Assert that this dictionary is not\n+\twritable.  Adjust to use the new name hashes, ctf_name_table,\n+\tand ctf_ptrtab_len.  GNU style fix for the final ptrtab scan.\n+\t(ctf_bufopen_internal): New 'writable' parameter.  Flip on LCTF_RDWR\n+\tif set.\t Drop out early when dictionary is writable.  Split the\n+\tctf_lookups initialization into...\n+\t(ctf_set_cth_hashes): ... this new function.\n+\t(ctf_simple_open_internal): Adjust.  New 'writable' parameter.\n+\t(ctf_simple_open): Adjust accordingly.\n+\t(ctf_bufopen): Likewise.\n+\t(ctf_file_close): Destroy the appropriate name hashes.\tNo longer\n+\tdestroy ctf_dtbyname, which is gone.\n+\t(ctf_getdatasect): Remove spurious \"extern\".\n+\t* ctf-types.c (ctf_lookup_by_rawname): New, look up types in the\n+\tspecified name table, given a kind.\n+\t(ctf_lookup_by_rawhash): Likewise, given a ctf_names_t *.\n+\t(ctf_member_iter): Add support for iterating over the\n+\tdynamic type list.\n+\t(ctf_enum_iter): Likewise.\n+\t(ctf_variable_iter): Likewise.\n+\t(ctf_type_rvisit): Likewise.\n+\t(ctf_member_info): Add support for types in the dynamic type list.\n+\t(ctf_enum_name): Likewise.\n+\t(ctf_enum_value): Likewise.\n+\t(ctf_func_type_info): Likewise.\n+\t(ctf_func_type_args): Likewise.\n+\t* ctf-link.c (ctf_accumulate_archive_names): No longer call\n+\tctf_update.\n+\t(ctf_link_write): Likewise.\n+\t(ctf_link_intern_extern_string): Adjust for new\n+\tctf_str_add_external return value.\n+\t(ctf_link_add_strtab): Likewise.\n+\t* ctf-util.c (ctf_list_empty_p): New.\n+\n+2019-08-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_resolve): Return ECTF_NONREPRESENTABLE on\n+\ttype zero.\n+\t* ctf-create.c (ctf_add_type): Detect and skip nonrepresentable\n+\tmembers and types.\n+\t(ctf_add_variable): Likewise for variables pointing to them.\n+\t* ctf-link.c (ctf_link_one_type): Do not warn for nonrepresentable\n+\ttype link failure, but do warn for others.\n+\t* ctf-dump.c (ctf_dump_format_type): Likewise.  Do not assume all\n+\terrors to be ENOMEM.\n+\t(ctf_dump_member): Likewise.\n+\t(ctf_dump_type): Likewise.\n+\t(ctf_dump_header_strfield): Do not assume all errors to be ENOMEM.\n+\t(ctf_dump_header_sectfield): Do not assume all errors to be ENOMEM.\n+\t(ctf_dump_header): Likewise.\n+\t(ctf_dump_label): likewise.\n+\t(ctf_dump_objts): likewise.\n+\t(ctf_dump_funcs): likewise.\n+\t(ctf_dump_var): likewise.\n+\t(ctf_dump_str): Likewise.\n+\n+2019-09-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac (AC_DISABLE_SHARED): New, like opcodes/.\n+\t(LT_INIT): Likewise.\n+\t(AM_INSTALL_LIBBFD): Likewise.\n+\t(dlopen): Note why this is necessary in a comment.\n+\t(SHARED_LIBADD): Initialize for possibly-PIC libiberty: derived from\n+\topcodes/.\n+\t(SHARED_LDFLAGS): Likewise.\n+\t(BFD_LIBADD): Likewise, for libbfd.\n+\t(BFD_DEPENDENCIES): Likewise.\n+\t(VERSION_FLAGS): Initialize, using a version script if ld supports\n+\tone, or libtool -export-symbols-regex otherwise.\n+\t(AC_CONFIG_MACRO_DIR): Add ../BFD.\n+\t* Makefile.am (ACLOCAL_AMFLAGS): Likewise.\n+\t(INCDIR): New.\n+\t(AM_CPPFLAGS): Use $(srcdir), not $(top_srcdir).\n+\t(noinst_LIBRARIES): Replace with...\n+\t[INSTALL_LIBBFD] (lib_LTLIBRARIES): This, or...\n+\t[!INSTALL_LIBBFD] (noinst_LTLIBRARIES): ... this, mentioning new\n+\tlibctf-nobfd.la as well.\n+\t[INSTALL_LIBCTF] (include_HEADERS): Add the CTF headers.\n+\t[!INSTALL_LIBCTF] (include_HEADERS): New, empty.\n+\t(libctf_a_SOURCES): Rename to...\n+\t(libctf_nobfd_la_SOURCES): ... this, all of libctf other than\n+\tctf-open-bfd.c.\n+\t(libctf_la_SOURCES): Now derived from libctf_nobfd_la_SOURCES,\n+\twith ctf-open-bfd.c added.\n+\t(libctf_nobfd_la_LIBADD): New, using @SHARED_LIBADD@.\n+\t(libctf_la_LIBADD): New, using @BFD_LIBADD@ as well.\n+\t(libctf_la_DEPENDENCIES): New, using @BFD_DEPENDENCIES@.\n+\t* Makefile.am [INSTALL_LIBCTF]: Use it.\n+\t* aclocal.m4: Add ../bfd/acinclude.m4, ../config/acx.m4, and the\n+\tlibtool macros.\n+\t* libctf.ver: New, everything is version LIBCTF_1.0 currently (even\n+\tthe unstable components).\n+\t* Makefile.in: Regenerated.\n+\t* config.h.in: Likewise.\n+\t* configure: Likewise.\n+\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac (INSTALL_LIBCTF): New, controlled by\n+\t--enable-install-libctf.\n+\t[INSTALL_LIBCTF] (lib_LIBRARIES): Add libctf.a.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_arc_close): Call ctfi_bfd_close if set.\n+\t* ctf-open-bfd.c (ctf_bfdclose): Fix comment.\n+\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open-bfd.c (ctf_fdopen): Call bfd_set_cacheable.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (includes): Include <sys/param.h> here.\n+\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (flip_lbls): Eschew for-loop initial declarations.\n+\t(flip_objts): Likewise.\n+\t(flip_vars): Likewise.\n+\t(flip_types): Likewise.\n+\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-hash.c (ctf_hashtab_insert): Pass in the key and value\n+\tfreeing functions: if set, free the key and value if the slot\n+\talready exists.  Always reassign the key.\n+\t(ctf_dynhash_insert): Adjust call appropriately.\n+\t(ctf_hash_insert_type): Likewise.\n+\n+2019-08-03  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_type): Look up and use the forwarded-to\n+\ttype kind.  Allow forwards to unify with pre-existing structs/\n+\tunions/enums.\n+\n+2019-07-30  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_file_t) <ctf_link_cu_mappping>: New.\n+\t<ctf_link_memb_name_changer>: Likewise.\n+\t<ctf_link_memb_name_changer_arg>: Likewise.\n+\t* ctf-create.c (ctf_update): Update accordingly.\n+\t* ctf-open.c (ctf_file_close): Likewise.\n+\t* ctf-link.c (ctf_create_per_cu): Apply the cu mapping.\n+\t(ctf_link_add_cu_mapping): New.\n+\t(ctf_link_set_memb_name_changer): Likewise.\n+\t(ctf_change_parent_name): New.\n+\t(ctf_name_list_accum_cb_arg_t) <dynames>: New, storage for names\n+\tallocated by the caller's ctf_link_memb_name_changer.\n+\t<ndynames>: Likewise.\n+\t(ctf_accumulate_archive_names): Call the ctf_link_memb_name_changer.\n+\t(ctf_link_write): Likewise (for _CTF_SECTION only): also call\n+\tctf_change_parent_name.  Free any resulting names.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c (ctf_create_per_cu): New, refactored out of...\n+\t(ctf_link_one_type): ... here, with parent-name setting added.\n+\t(check_variable): New.\n+\t(ctf_link_one_variable): Likewise.\n+\t(ctf_link_one_input_archive_member): Call it.\n+\t* ctf-error.c (_ctf_errlist): Updated with new errors.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_file_t): New field ctf_link_type_mapping.\n+\t(struct ctf_link_type_mapping_key): New.\n+\t(ctf_hash_type_mapping_key): Likewise.\n+\t(ctf_hash_eq_type_mapping_key): Likewise.\n+\t(ctf_add_type_mapping): Likewise.\n+\t(ctf_type_mapping): Likewise.\n+\t(ctf_dynhash_empty): Likewise.\n+\t* ctf-open.c (ctf_file_close): Update accordingly.\n+\t* ctf-create.c (ctf_update): Likewise.\n+\t(ctf_add_type): Populate the mapping.\n+\t* ctf-hash.c (ctf_hash_type_mapping_key): Hash a type mapping key.\n+\t(ctf_hash_eq_type_mapping_key): Check the key for equality.\n+\t(ctf_dynhash_insert): Fix comment typo.\n+\t(ctf_dynhash_empty): New.\n+\t* ctf-link.c (ctf_add_type_mapping): New.\n+\t(ctf_type_mapping): Likewise.\n+\t(empty_link_type_mapping): New.\n+\t(ctf_link_one_input_archive): Call it.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c: New file, linking of the string and type sections.\n+\t* Makefile.am (libctf_a_SOURCES): Add it.\n+\t* Makefile.in: Regenerate.\n+\n+\t* ctf-impl.h (ctf_file_t): New fields ctf_link_inputs,\n+\tctf_link_outputs.\n+\t* ctf-create.c (ctf_update): Update accordingly.\n+\t* ctf-open.c (ctf_file_close): Likewise.\n+\t* ctf-error.c (_ctf_errlist): Updated with new errors.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_funcs): Check the right error value.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump): Use ctf_type_iter_all to dump types, not\n+\tctf_type_iter.\n+\t(ctf_dump_type): Pass down the flag from ctf_type_iter_all.\n+\t(ctf_dump_format_type): Add non-root-type { } notation.\n+\tAdd root flag to prototype.\n+\t(ctf_dump_label): Adjust accordingly.\n+\t(ctf_dump_objts): Likewise.\n+\t(ctf_dump_var): Likewise.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_compress_write): Fix double-free.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_arc_write): Split off, and reimplement in terms\n+\tof...\n+\t(ctf_arc_write_fd): ... this new function.\n+\t* ctf-create.c (ctf_write_mem): New.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_str_atom_t) <csa_offset>: New field.\n+\t(ctf_file_t) <ctf_syn_ext_strtab>: Likewise.\n+\t(ctf_str_add_ref): Name the last arg.\n+\t(ctf_str_add_external) New.\n+\t(ctf_str_add_strraw_explicit): Likewise.\n+\t(ctf_simple_open_internal): Likewise.\n+\t(ctf_bufopen_internal): Likewise.\n+\n+\t* ctf-string.c (ctf_strraw_explicit): Split from...\n+\t(ctf_strraw): ... here, with new support for ctf_syn_ext_strtab.\n+\t(ctf_str_add_ref_internal): Return the atom, not the\n+\tstring.\n+\t(ctf_str_add): Adjust accordingly.\n+\t(ctf_str_add_ref): Likewise.  Move up in the file.\n+\t(ctf_str_add_external): New: update the csa_offset.\n+\t(ctf_str_count_strtab): Only account for strings with no csa_offset\n+\tin the internal strtab length.\n+\t(ctf_str_write_strtab): If the csa_offset is set, update the\n+\tstring's refs without writing the string out, and update the\n+\tctf_syn_ext_strtab.  Make OOM handling less ugly.\n+\t* ctf-create.c (struct ctf_sort_var_arg_cb): New.\n+\t(ctf_update): Handle failure to populate the strtab.  Pass in the\n+\tnew ctf_sort_var arg.  Adjust for ctf_syn_ext_strtab addition.\n+\tCall ctf_simple_open_internal, not ctf_simple_open.\n+\t(ctf_sort_var): Call ctf_strraw_explicit rather than looking up\n+\tstrings by hand.\n+\t* ctf-hash.c (ctf_hash_insert_type): Likewise (but using\n+\tctf_strraw).  Adjust to diagnose ECTF_STRTAB nonetheless.\n+\t* ctf-open.c (init_types): No longer filter out ECTF_STRTAB.\n+\t(ctf_file_close): Destroy the ctf_syn_ext_strtab.\n+\t(ctf_simple_open): Rename to, and reimplement as a wrapper around...\n+\t(ctf_simple_open_internal): ... this new function, which calls\n+\tctf_bufopen_internal.\n+\t(ctf_bufopen): Rename to, and reimplement as a wrapper around...\n+\t(ctf_bufopen_internal): ... this new function, which sets\n+\tctf_syn_ext_strtab.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf_types.c (ctf_type_iter_all): New.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (init_symtab): Check for overflow against the right\n+\tsection.\n+\t(upgrade_header): Set cth_objtidxoff, cth_funcidxoff to zero-length.\n+\t(upgrade_types_v1): Note that these sections are not checked.\n+\t(flip_header): Endian-swap the header fields.\n+\t(flip_ctf): Endian-swap the sections.\n+\t(flip_objts): Update comment.\n+\t(ctf_bufopen): Check header offsets and alignment for validity.\n+\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open-bfd.c: Add <assert.h>.\n+\t(ctf_bfdopen_ctfsect): Open string and symbol tables using\n+\ttechniques borrowed from bfd_elf_sym_name.\n+\t(ctf_new_archive_internal): Improve comment.\n+\t* ctf-archive.c (ctf_arc_close): Do not free the ctfi_strsect.\n+\t* ctf-open.c (ctf_bufopen): Allow opening with a string section but\n+\tno symbol section, but not vice versa.\n+\n+2019-07-08  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_file_t): New field ctf_openflags.\n+\t* ctf-open.c (ctf_bufopen): Set it.  No longer dump header offsets.\n+\t* ctf-dump.c (dump_header): New function, dump the CTF header.\n+\t(ctf_dump): Call it.\n+\t(ctf_dump_header_strfield): New function.\n+\t(ctf_dump_header_sectfield): Likewise.\n+\n+2019-07-06  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_file_t): New fields ctf_header, ctf_dynbase,\n+\tctf_cuname, ctf_dyncuname: ctf_base and ctf_buf are no longer const.\n+\t* ctf-open.c (ctf_set_base): Preserve the gap between ctf_buf and\n+\tctf_base: do not assume that it is always sizeof (ctf_header_t).\n+\tPrint out ctf_cuname: only print out ctf_parname if set.\n+\t(ctf_free_base): Removed, ctf_base is no longer freed: free\n+\tctf_dynbase instead.\n+\t(ctf_set_version): Fix spacing.\n+\t(upgrade_header): New, in-place header upgrading.\n+\t(upgrade_types): Rename to...\n+\t(upgrade_types_v1): ... this.  Free ctf_dynbase, not ctf_base.  No\n+\tlonger track old and new headers separately.  No longer allow for\n+\theader sizes explicitly: squeeze the headers out on upgrade (they\n+\tare preserved in fp->ctf_header).  Set ctf_dynbase, ctf_base and\n+\tctf_buf explicitly.  Use ctf_free, not ctf_free_base.\n+\t(upgrade_types): New, also handle ctf_parmax updating.\n+\t(flip_header): Flip ctf_cuname.\n+\t(flip_types): Flip BUF explicitly rather than deriving BUF from\n+\tBASE.\n+\t(ctf_bufopen): Store the header in fp->ctf_header.  Correct minimum\n+\trequired alignment of objtoff and funcoff.  No longer store it in\n+\tthe ctf_buf unless that buf is derived unmodified from the input.\n+\tSet ctf_dynbase where ctf_base is dynamically allocated. Drop locals\n+\tthat duplicate fields in ctf_file: move allocation of ctf_file\n+\tfurther up instead.  Call upgrade_header as needed.  Move\n+\tversion-specific ctf_parmax initialization into upgrade_types.  More\n+\tconcise error handling.\n+\t(ctf_file_close): No longer test for null pointers before freeing.\n+\tFree ctf_dyncuname, ctf_dynbase, and ctf_header.  Do not call\n+\tctf_free_base.\n+\t(ctf_cuname): New.\n+\t(ctf_cuname_set): New.\n+\t* ctf-create.c (ctf_update): Populate ctf_cuname.\n+\t(ctf_gzwrite): Write out the header explicitly.  Remove obsolescent\n+\tcomment.\n+\t(ctf_write): Likewise.\n+\t(ctf_compress_write): Get the header from ctf_header, not ctf_base.\n+\tFix the compression length: fp->ctf_size never counted the CTF\n+\theader.  Simplify the compress call accordingly.\n+\n+2019-07-11  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* ctf-endian.h: Don't assume htole64 and le64toh are always\n+\tpresent if HAVE_ENDIAN_H; also check if htole64 is defined.\n+\t[!WORDS_BIGENDIAN] (htole64, le64toh): Define as identity,\n+\tnot bswap_identity_64.\n+\n+2019-09-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* ctf-open-bfd.c: Update throughout for bfd section macro changes.\n+\n+2019-09-09  Phil Blundell  <pb@pbcl.net>\n+\n+\tbinutils 2.33 branch created.\n+\n+2019-07-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_aname_raw): New.\n+\t(ctf_func_type_info): Likewise.\n+\t(ctf_func_type_args): Likewise.\n+\t* ctf-error.c (_ctf_errlist): Fix description.\n+\t* ctf-lookup.c: Fix file description.\n+\n+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_create): Fix off-by-one error.\n+\n+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h: (struct ctf_strs_writable): New, non-const version of\n+\tstruct ctf_strs.\n+\t(struct ctf_dtdef): Note that dtd_data.ctt_name is unpopulated.\n+\t(struct ctf_str_atom): New, disambiguated single string.\n+\t(struct ctf_str_atom_ref): New, points to some other location that\n+\treferences this string's offset.\n+\t(struct ctf_file): New members ctf_str_atoms and ctf_str_num_refs.\n+\tRemove member ctf_dtvstrlen: we no longer track the total strlen\n+\tas we add strings.\n+\t(ctf_str_create_atoms): Declare new function in ctf-string.c.\n+\t(ctf_str_free_atoms): Likewise.\n+\t(ctf_str_add): Likewise.\n+\t(ctf_str_add_ref): Likewise.\n+\t(ctf_str_rollback): Likewise.\n+\t(ctf_str_purge_refs): Likewise.\n+\t(ctf_str_write_strtab): Likewise.\n+\t(ctf_realloc): Declare new function in ctf-util.c.\n+\n+\t* ctf-open.c (ctf_bufopen): Create the atoms table.\n+\t(ctf_file_close): Destroy it.\n+\t* ctf-create.c (ctf_update): Copy-and-free it on update.  No longer\n+\tspecial-case the position of the parname string.  Construct the\n+\tstrtab by calling ctf_str_add_ref and ctf_str_write_strtab after the\n+\trest of each buffer element is constructed, not via open-coding:\n+\trealloc the CTF buffer and append the strtab to it.  No longer\n+\tmaintain ctf_dtvstrlen.  Sort the variable entry table later, after\n+\tstrtab construction.\n+\t(ctf_copy_membnames): Remove: integrated into ctf_copy_{s,l,e}members.\n+\t(ctf_copy_smembers): Drop the string offset: call ctf_str_add_ref\n+\tafter buffer element construction instead.\n+\t(ctf_copy_lmembers): Likewise.\n+\t(ctf_copy_emembers): Likewise.\n+\t(ctf_create): No longer maintain the ctf_dtvstrlen.\n+\t(ctf_dtd_delete): Likewise.\n+\t(ctf_dvd_delete): Likewise.\n+\t(ctf_add_generic): Likewise.\n+\t(ctf_add_enumerator): Likewise.\n+\t(ctf_add_member_offset): Likewise.\n+\t(ctf_add_variable): Likewise.\n+\t(membadd): Likewise.\n+\t* ctf-util.c (ctf_realloc): New, wrapper around realloc that aborts\n+\tif there are active ctf_str_num_refs.\n+\t(ctf_strraw): Move to ctf-string.c.\n+\t(ctf_strptr): Likewise.\n+\t* ctf-string.c: New file, strtab manipulation.\n+\n+\t* Makefile.am (libctf_a_SOURCES): Add it.\n+\t* Makefile.in: Regenerate.\n+\n+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (ctf_hash_iter_f): New.\n+\t(ctf_dynhash_iter): New declaration.\n+\t(ctf_dynhash_iter_remove): New declaration.\n+\t* ctf-hash.c (ctf_dynhash_iter): Define.\n+\t(ctf_dynhash_iter_remove): Likewise.\n+\t(ctf_hashtab_traverse): New.\n+\t(ctf_hashtab_traverse_remove): Likewise.\n+\t(struct ctf_traverse_cb_arg): Likewise.\n+\t(struct ctf_traverse_remove_cb_arg): Likewise.\n+\n+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-hash.c (ctf_dynhash_remove): Call with a mocked-up element.\n+\n+2019-06-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_format_type): Prefix hex strings with 0x.\n+\t(ctf_dump_funcs): Likewise.\n+\n+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open-bfd.c: Add swap.h and ctf-endian.h.\n+\t(ctf_fdopen): Check for endian-swapped raw CTF magic, and\n+\tlittle-endian CTF archive magic.  Do not check the CTF version:\n+\tctf_simple_open does that in endian-safe ways.  Do not dereference\n+\tnull pointers on open failure.\n+\n+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (get_vbytes_common): Return the new slice size.\n+\t(ctf_bufopen): Flip the endianness of the CTF-section header copy.\n+\tRemember to copy in the CTF data when opening an uncompressed\n+\tforeign-endian CTF file.  Prune useless variable manipulation.\n+\n+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (ctf_types): Fail when unidentified type kinds are\n+\tseen.\n+\n+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c (ctf_bufopen): Dump header offsets into the debugging\n+\toutput.\n+\n+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-subr.c (_PAGESIZE): Remove.\n+\t(ctf_data_alloc): Likewise.\n+\t(ctf_data_free): Likewise.\n+\t(ctf_data_protect): Likewise.\n+\t* ctf-impl.h: Remove declarations.\n+\t* ctf-create.c (ctf_update): No longer call ctf_data_protect: use\n+\tctf_free, not ctf_data_free.\n+\t(ctf_compress_write): Use ctf_data_alloc, not ctf_alloc.  Free\n+\tthe buffer again on compression error.\n+\t* ctf-open.c (ctf_set_base): No longer track the size: call\n+\tctf_free, not ctf_data_free.\n+\t(upgrade_types): Likewise.  Call ctf_alloc, not ctf_data_alloc.\n+\t(ctf_bufopen): Likewise.  No longer call ctf_data_protect.\n+\n+2019-06-19  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_dtd_insert): Pass on error returns from\n+\tctf_dynhash_insert.\n+\t(ctf_dvd_insert): Likewise.\n+\t(ctf_add_generic): Likewise.\n+\t(ctf_add_variable): Likewise.\n+\t* ctf-impl.h: Adjust declarations.\n+\n+2019-06-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure: Regenerate.\n+\n+2019-06-06  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-decls.h: Include <libiberty.h>.\n+\t* ctf-lookup.c (ctf_lookup_by_name): Call xstrndup(), not strndup().\n+\n+2019-06-06  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_format_type): Cast size_t's used in printf()s.\n+\t(ctf_dump_objts): Likewise.\n+\t(ctf_dump_funcs): Likewise.\n+\t(ctf_dump_member): Likewise.\n+\t(ctf_dump_str): Likewise.\n+\n+2019-06-06  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (arc_mmap_header): Mark fd as potentially unused.\n+\t* ctf-subr.c (ctf_data_protect): Mark both args as potentially unused.\n+\n+2019-06-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c (ctf_arc_write): Eschew %zi format specifier.\n+\t(ctf_arc_open_by_offset): Likewise.\n+\t* ctf-create.c (ctf_add_type): Likewise.\n+\n+2019-06-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ctf-create.c (ctf_add_encoded, ctf_add_slice)\n+\t(ctf_add_member_offset): Use CHAR_BIT, not NBBY.\n+\n+2019-06-04  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac: Check for O_CLOEXEC.\n+\t* ctf-decls.h (O_CLOEXEC): Define (to 0), if need be.\n+\t* config.h.in: Regenerate.\n+\t* configure: Likewise.\n+\n+2019-06-04  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* qsort_r.c: Rename to...\n+\t* ctf-qsort_r.c: ... this.\n+\t(_quicksort): Define to ctf_qsort_r.\n+\t* ctf-decls.h (qsort_r): Remove.\n+\t(ctf_qsort_r): Add.\n+\t(struct ctf_qsort_arg): New, transport the real ARG and COMPAR.\n+\t(ctf_qsort_compar_thunk): Rearrange the arguments to COMPAR.\n+\t* Makefile.am (libctf_a_LIBADD): Remove.\n+\t(libctf_a_SOURCES): New, add ctf-qsort_r.c.\n+\t* ctf-archive.c (ctf_arc_write): Call ctf_qsort_r, not qsort_r.\n+\t* ctf-create.c (ctf_update): Likewise.\n+\t* configure.ac: Check for BSD versus GNU qsort_r signature.\n+\t* Makefile.in: Regenerate.\n+\t* config.h.in: Likewise.\n+\t* configure: Likewise.\n+\n+2019-06-03  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_funcs): Free in the right place.\n+\n+2019-05-29  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.am (ZLIB): New.\n+\t(ZLIBINC): Likewise.\n+\t(AM_CFLAGS): Use them.\n+\t(libctf_a_LIBADD): New, for LIBOBJS.\n+\t* configure.ac: Check for zlib, endian.h, and qsort_r.\n+\t* ctf-endian.h: New, providing htole64 and le64toh.\n+\t* swap.h: Code style fixes.\n+\t(bswap_identity_64): New.\n+\t* qsort_r.c: New, from gnulib (with one added #include).\n+\t* ctf-decls.h: New, providing a conditional qsort_r declaration,\n+\tand unconditional definitions of MIN and MAX.\n+\t* ctf-impl.h: Use it.  Do not use <sys/errno.h>.\n+\t(ctf_set_errno): Now returns unsigned long.\n+\t* ctf-util.c (ctf_set_errno): Adjust here too.\n+\t* ctf-archive.c: Use ctf-endian.h.\n+\t(ctf_arc_open_by_offset): Use memset, not bzero.  Drop cts_type,\n+\tcts_flags and cts_offset.\n+\t(ctf_arc_write): Drop debugging dependent on the size of off_t.\n+\t* ctf-create.c: Provide a definition of roundup if not defined.\n+\t(ctf_create): Drop cts_type, cts_flags and cts_offset.\n+\t(ctf_add_reftype): Do not check if type IDs are below zero.\n+\t(ctf_add_slice): Likewise.\n+\t(ctf_add_typedef): Likewise.\n+\t(ctf_add_member_offset): Cast error-returning ssize_t's to size_t\n+\twhen known error-free.  Drop CTF_ERR usage for functions returning\n+\tint.\n+\t(ctf_add_member_encoded): Drop CTF_ERR usage for functions returning\n+\tint.\n+\t(ctf_add_variable): Likewise.\n+\t(enumcmp): Likewise.\n+\t(enumadd): Likewise.\n+\t(membcmp): Likewise.\n+\t(ctf_add_type): Likewise.  Cast error-returning ssize_t's to size_t\n+\twhen known error-free.\n+\t* ctf-dump.c (ctf_is_slice): Drop CTF_ERR usage for functions\n+\treturning int: use CTF_ERR for functions returning ctf_type_id.\n+\t(ctf_dump_label): Likewise.\n+\t(ctf_dump_objts): Likewise.\n+\t* ctf-labels.c (ctf_label_topmost): Likewise.\n+\t(ctf_label_iter): Likewise.\n+\t(ctf_label_info): Likewise.\n+\t* ctf-lookup.c (ctf_func_args): Likewise.\n+\t* ctf-open.c (upgrade_types): Cast to size_t where appropriate.\n+\t(ctf_bufopen): Likewise.  Use zlib types as needed.\n+\t* ctf-types.c (ctf_member_iter): Drop CTF_ERR usage for functions\n+\treturning int.\n+\t(ctf_enum_iter): Likewise.\n+\t(ctf_type_size): Likewise.\n+\t(ctf_type_align): Likewise.  Cast to size_t where appropriate.\n+\t(ctf_type_kind_unsliced): Likewise.\n+\t(ctf_type_kind): Likewise.\n+\t(ctf_type_encoding): Likewise.\n+\t(ctf_member_info): Likewise.\n+\t(ctf_array_info): Likewise.\n+\t(ctf_enum_value): Likewise.\n+\t(ctf_type_rvisit): Likewise.\n+\t* ctf-open-bfd.c (ctf_bfdopen): Drop cts_type, cts_flags and\n+\tcts_offset.\n+\t(ctf_simple_open): Likewise.\n+\t(ctf_bfdopen_ctfsect): Likewise.  Set cts_size properly.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Likewise.\n+\t* config.h: Likewise.\n+\t* configure: Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.in: Check for bfd_section_from_elf_index.\n+\t* configure: Regenerate.\n+\t* config.h.in [HAVE_BFD_ELF]: Likewise.\n+\t* libctf/ctf_open_bfd (ctf_bfdopen_ctfsect): Use it.\n+\tabfd is potentially unused now.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.am: New.\n+\t* Makefile.in: Regenerated.\n+\t* config.h.in: Likewise.\n+\t* aclocal.m4: Likewise.\n+\t* configure: Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c: New.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-labels.c: New.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h (_libctf_version): New declaration.\n+\t* ctf-subr.c (_libctf_version): Define it.\n+\t(ctf_version): New.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (enumcmp): New.\n+\t(enumadd): Likewise.\n+\t(membcmp): Likewise.\n+\t(membadd): Likewise.\n+\t(ctf_add_type): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-lookup.c (isqualifier): New.\n+\t(ctf_lookup_by_name): Likewise.\n+\t(struct ctf_lookup_var_key): Likewise.\n+\t(ctf_lookup_var): Likewise.\n+\t(ctf_lookup_variable): Likewise.\n+\t(ctf_lookup_symbol_name): Likewise.\n+\t(ctf_lookup_by_symbol): Likewise.\n+\t(ctf_func_info): Likewise.\n+\t(ctf_func_args): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-decl.c: New file.\n+\t* ctf-types.c: Likewise.\n+\t* ctf-impl.h: New declarations.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open-bfd.c: New file.\n+\t* ctf-open.c (ctf_close): New.\n+\t* ctf-impl.h: Include bfd.h.\n+\t(ctf_file): New members ctf_data_mmapped, ctf_data_mmapped_len.\n+\t(ctf_archive_internal): New members ctfi_abfd, ctfi_data,\n+\tctfi_bfd_close.\n+\t(ctf_bfdopen_ctfsect): New declaration.\n+\t(_CTF_SECTION): likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-archive.c: New.\n+\t* ctf-impl.h (ctf_archive_internal): New type.\n+\t(ctf_arc_open_internal): New declaration.\n+\t(ctf_arc_bufopen): Likewise.\n+\t(ctf_arc_close_internal): Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-open.c: New file.\n+\t* swap.h: Likewise.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c: New file.\n+\t* ctf-lookup.c: New file.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h: New definitions and declarations for type creation\n+\tand lookup.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-hash.c: New file.\n+\t* ctf-impl.h: New declarations.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-error.c: New file.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-util.c: New file.\n+\t* elf.h: Likewise.\n+\t* ctf-impl.h: Include it, and add declarations.\n+\n+2019-05-28  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-impl.h: New file.\n+\t* ctf-subr.c: New file.\n+\n+\f\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 76\n+version-control: never\n+End:"
    },
    {
      "sha": "cf5fd0bb4c265a9a7ec2e055f8566333ac5ae320",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 3269,
      "changes": 3271,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    },
    {
      "sha": "92a95254a541389971760b669bdf67a4bd74bd29",
      "filename": "opcodes/ChangeLog-2020",
      "status": "added",
      "additions": 3281,
      "deletions": 0,
      "changes": 3281,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2795844e6a42cf207cbb7c72c2a898f78374a52/opcodes/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2795844e6a42cf207cbb7c72c2a898f78374a52/opcodes/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog-2020?ref=c2795844e6a42cf207cbb7c72c2a898f78374a52"
    }
  ]
}