{
  "sha": "a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
  "node_id": "C_kwDOANOeidoAKGEzNDZiYjI0Y2YzYjljNzFmNmE2NmYwMjJiZjRhYzgwZGJmMGQ4Zjg",
  "commit": {
    "author": {
      "name": "Richard Sandiford",
      "email": "richard.sandiford@arm.com",
      "date": "2021-12-02T15:00:56Z"
    },
    "committer": {
      "name": "Richard Sandiford",
      "email": "richard.sandiford@arm.com",
      "date": "2021-12-02T15:00:56Z"
    },
    "message": "aarch64: Provide line info for unclosed sequences\n\nWe warn about MOVPRFX instructions that have no following\ninstruction.  This patch adds a line number to the message,\nwhich is useful if the assembly code has multiple text sections.\n\nThe new code is unconditional since OBJ_ELF is always defined\nfor aarch64.\n\ngas/\n\t* config/tc-aarch64.h (aarch64_segment_info_type): Add last_file\n\tand last_line.\n\t* config/tc-aarch64.c (now_instr_sequence): Delete.\n\t(force_automatic_sequence_close): Provide a line number when\n\treporting unclosed sequences.\n\t(md_assemble): Record the location of the instruction in\n\ttc_segment_info.\n\t* testsuite/gas/aarch64/sve-movprfx_4.l: Add line number to error\n\tmessage.\n\t* testsuite/gas/aarch64/sve-movprfx_7.l: Likewise.\n\t* testsuite/gas/aarch64/sve-movprfx_8.l: Likewise.",
    "tree": {
      "sha": "badc91a02271ef2680d74404109c3418480114a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/badc91a02271ef2680d74404109c3418480114a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/comments",
  "author": {
    "login": "rsandifo-arm",
    "id": 28043039,
    "node_id": "MDQ6VXNlcjI4MDQzMDM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rsandifo-arm",
    "html_url": "https://github.com/rsandifo-arm",
    "followers_url": "https://api.github.com/users/rsandifo-arm/followers",
    "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs",
    "repos_url": "https://api.github.com/users/rsandifo-arm/repos",
    "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "rsandifo-arm",
    "id": 28043039,
    "node_id": "MDQ6VXNlcjI4MDQzMDM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rsandifo-arm",
    "html_url": "https://github.com/rsandifo-arm",
    "followers_url": "https://api.github.com/users/rsandifo-arm/followers",
    "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs",
    "repos_url": "https://api.github.com/users/rsandifo-arm/repos",
    "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b3e59f8873b9f07e84b19a19d40810f9a61b6d62",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b3e59f8873b9f07e84b19a19d40810f9a61b6d62",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b3e59f8873b9f07e84b19a19d40810f9a61b6d62"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 17,
    "deletions": 15
  },
  "files": [
    {
      "sha": "497c126ea83bf5b034563bd5a31d4659f6baccfc",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
      "patch": "@@ -160,13 +160,6 @@ static aarch64_instruction inst;\n static bool parse_operands (char *, const aarch64_opcode *);\n static bool programmer_friendly_fixup (aarch64_instruction *);\n \n-#ifdef OBJ_ELF\n-#  define now_instr_sequence seg_info \\\n-\t\t(now_seg)->tc_segment_info_data.insn_sequence\n-#else\n-static struct aarch64_instr_sequence now_instr_sequence;\n-#endif\n-\n /* Diagnostics inline function utilities.\n \n    These are lightweight utilities which should only be called by parse_operands\n@@ -7801,11 +7794,15 @@ warn_unpredictable_ldst (aarch64_instruction *instr, char *str)\n static void\n force_automatic_sequence_close (void)\n {\n-  if (now_instr_sequence.instr)\n+  struct aarch64_segment_info_type *tc_seg_info;\n+\n+  tc_seg_info = &seg_info (now_seg)->tc_segment_info_data;\n+  if (tc_seg_info->insn_sequence.instr)\n     {\n-      as_warn (_(\"previous `%s' sequence has not been closed\"),\n-\t       now_instr_sequence.instr->opcode->name);\n-      init_insn_sequence (NULL, &now_instr_sequence);\n+      as_warn_where (tc_seg_info->last_file, tc_seg_info->last_line,\n+\t\t     _(\"previous `%s' sequence has not been closed\"),\n+\t\t     tc_seg_info->insn_sequence.instr->opcode->name);\n+      init_insn_sequence (NULL, &tc_seg_info->insn_sequence);\n     }\n }\n \n@@ -7855,6 +7852,7 @@ md_assemble (char *str)\n {\n   templates *template;\n   const aarch64_opcode *opcode;\n+  struct aarch64_segment_info_type *tc_seg_info;\n   aarch64_inst *inst_base;\n   unsigned saved_cond;\n \n@@ -7867,7 +7865,9 @@ md_assemble (char *str)\n     }\n \n   /* Update the current insn_sequence from the segment.  */\n-  insn_sequence = &seg_info (now_seg)->tc_segment_info_data.insn_sequence;\n+  tc_seg_info = &seg_info (now_seg)->tc_segment_info_data;\n+  insn_sequence = &tc_seg_info->insn_sequence;\n+  tc_seg_info->last_file = as_where (&tc_seg_info->last_line);\n \n   inst.reloc.type = BFD_RELOC_UNUSED;\n "
    },
    {
      "sha": "78bff0a1b56f07d879f378206e29aeed044f1c33",
      "filename": "gas/config/tc-aarch64.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/config/tc-aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/config/tc-aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.h?ref=a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
      "patch": "@@ -225,6 +225,8 @@ void mapping_state (enum mstate);\n \n struct aarch64_segment_info_type\n {\n+  const char *last_file;\n+  unsigned last_line;\n   enum mstate mapstate;\n   unsigned int marked_pr_dependency;\n   aarch64_instr_sequence insn_sequence;"
    },
    {
      "sha": "6ea4551b4d50ec0f2e55e3290a107ce1e5a0ca2f",
      "filename": "gas/testsuite/gas/aarch64/sve-movprfx_4.l",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/testsuite/gas/aarch64/sve-movprfx_4.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/testsuite/gas/aarch64/sve-movprfx_4.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sve-movprfx_4.l?ref=a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
      "patch": "@@ -1,2 +1,2 @@\n [^:]*: Assembler messages:\n-.*: Warning: previous `movprfx' sequence has not been closed\n+.*:8: Warning: previous `movprfx' sequence has not been closed"
    },
    {
      "sha": "e5776c73595b70296dfb9d52c3b722f7ae080cf5",
      "filename": "gas/testsuite/gas/aarch64/sve-movprfx_7.l",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/testsuite/gas/aarch64/sve-movprfx_7.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/testsuite/gas/aarch64/sve-movprfx_7.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sve-movprfx_7.l?ref=a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
      "patch": "@@ -1,2 +1,2 @@\n [^:]*: Assembler messages:\n-.*: Warning: previous `movprfx' sequence has not been closed\n+.*:7: Warning: previous `movprfx' sequence has not been closed"
    },
    {
      "sha": "e5776c73595b70296dfb9d52c3b722f7ae080cf5",
      "filename": "gas/testsuite/gas/aarch64/sve-movprfx_8.l",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/testsuite/gas/aarch64/sve-movprfx_8.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8/gas/testsuite/gas/aarch64/sve-movprfx_8.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sve-movprfx_8.l?ref=a346bb24cf3b9c71f6a66f022bf4ac80dbf0d8f8",
      "patch": "@@ -1,2 +1,2 @@\n [^:]*: Assembler messages:\n-.*: Warning: previous `movprfx' sequence has not been closed\n+.*:7: Warning: previous `movprfx' sequence has not been closed"
    }
  ]
}