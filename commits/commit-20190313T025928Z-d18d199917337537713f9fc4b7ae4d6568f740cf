{
  "sha": "d18d199917337537713f9fc4b7ae4d6568f740cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDE4ZDE5OTkxNzMzNzUzNzcxM2Y5ZmM0YjdhZTRkNjU2OGY3NDBjZg==",
  "commit": {
    "author": {
      "name": "Christian Eggers",
      "email": "ceggers@gmx.de",
      "date": "2019-03-10T18:21:53Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-03-13T02:59:28Z"
    },
    "message": "Symbols with octets value\n\nUp to now, all symbol values are in units of bytes, where a \"byte\" can\nconsist of one or more octets (e.g. 8 bit or 16 bit).\n\nAllow to specfiy that the \"unit\" of a newly created symbol is octets\n(exactly 8 bit), instead of bytes.\n\n\t* symbols.h (symbol_temp_new_now_octets): Declare.\n\t(symbol_set_value_now_octets, symbol_octets_p): Declare.\n\t* symbols.c (struct symbol_flags): New member sy_octets.\n\t(symbol_temp_new_now_octets): New function.\n\t(resolve_symbol_value): Return octets instead of bytes if\n\tsy_octets is set.\n\t(symbol_set_value_now_octets): New function.\n\t(symbol_octets_p): New function.",
    "tree": {
      "sha": "aef953bb061dd985c773dde8b35c41cccc74916d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aef953bb061dd985c773dde8b35c41cccc74916d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d18d199917337537713f9fc4b7ae4d6568f740cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d18d199917337537713f9fc4b7ae4d6568f740cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d18d199917337537713f9fc4b7ae4d6568f740cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d18d199917337537713f9fc4b7ae4d6568f740cf/comments",
  "author": null,
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "71250b94dc669b285cddcb744a7b3d1c7e2ec94b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71250b94dc669b285cddcb744a7b3d1c7e2ec94b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/71250b94dc669b285cddcb744a7b3d1c7e2ec94b"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 49,
    "deletions": 1
  },
  "files": [
    {
      "sha": "274516cfd41e3914ae35cd99a307c1f1c65a2ccf",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d18d199917337537713f9fc4b7ae4d6568f740cf/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d18d199917337537713f9fc4b7ae4d6568f740cf/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d18d199917337537713f9fc4b7ae4d6568f740cf",
      "patch": "@@ -1,3 +1,14 @@\n+2019-03-13  Christian Eggers  <ceggers@gmx.de>\n+\n+\t* symbols.h (symbol_temp_new_now_octets): Declare.\n+\t(symbol_set_value_now_octets, symbol_octets_p): Declare.\n+\t* symbols.c (struct symbol_flags): New member sy_octets.\n+\t(symbol_temp_new_now_octets): New function.\n+\t(resolve_symbol_value): Return octets instead of bytes if\n+\tsy_octets is set.\n+\t(symbol_set_value_now_octets): New function.\n+\t(symbol_octets_p): New function.\n+\n 2019-03-13  Christian Eggers  <ceggers@gmx.de>\n \n \t* dwarf2dbg.c (dwarf2_emit_insn): Fix calculation of line info offset."
    },
    {
      "sha": "d8a9c9244c00776796e67d7837cbf528dedb8abf",
      "filename": "gas/symbols.c",
      "status": "modified",
      "additions": 35,
      "deletions": 1,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d18d199917337537713f9fc4b7ae4d6568f740cf/gas/symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d18d199917337537713f9fc4b7ae4d6568f740cf/gas/symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.c?ref=d18d199917337537713f9fc4b7ae4d6568f740cf",
      "patch": "@@ -73,6 +73,10 @@ struct symbol_flags\n      before.  It is cleared as soon as any direct reference to the\n      symbol is present.  */\n   unsigned int sy_weakrefd : 1;\n+\n+  /* This if set if the unit of the symbol value is \"octets\" instead\n+     of \"bytes\".  */\n+  unsigned int sy_octets : 1;\n };\n \n /* The information we keep for a symbol.  Note that the symbol table\n@@ -843,6 +847,14 @@ symbol_temp_new_now (void)\n   return symbol_temp_new (now_seg, frag_now_fix (), frag_now);\n }\n \n+symbolS *\n+symbol_temp_new_now_octets (void)\n+{\n+  symbolS * symb = symbol_temp_new (now_seg, frag_now_fix_octets (), frag_now);\n+  symb->sy_flags.sy_octets = 1;\n+  return symb;\n+}\n+\n symbolS *\n symbol_temp_make (void)\n {\n@@ -1324,7 +1336,10 @@ resolve_symbol_value (symbolS *symp)\n \t  /* Fall through.  */\n \n \tcase O_constant:\n-\t  final_val += symp->sy_frag->fr_address / OCTETS_PER_BYTE;\n+\t  if (symp->sy_flags.sy_octets)\n+\t    final_val += symp->sy_frag->fr_address;\n+\t  else\n+\t    final_val += symp->sy_frag->fr_address / OCTETS_PER_BYTE;\n \t  if (final_seg == expr_section)\n \t    final_seg = absolute_section;\n \t  /* Fall through.  */\n@@ -2650,6 +2665,18 @@ symbol_set_value_now (symbolS *sym)\n   symbol_set_frag (sym, frag_now);\n }\n \n+/* Set the value of SYM to the current position in the current segment,\n+   in octets.  */\n+\n+void\n+symbol_set_value_now_octets (symbolS *sym)\n+{\n+  S_SET_SEGMENT (sym, now_seg);\n+  S_SET_VALUE (sym, frag_now_fix_octets ());\n+  symbol_set_frag (sym, frag_now);\n+  sym->sy_flags.sy_octets = 1;\n+}\n+\n /* Set the frag of a symbol.  */\n \n void\n@@ -2921,6 +2948,13 @@ symbol_set_bfdsym (symbolS *s, asymbol *bsym)\n   /* else XXX - What do we do now ?  */\n }\n \n+/* Return whether symbol unit is \"octets\" (instead of \"bytes\").  */\n+\n+int symbol_octets_p (symbolS *s)\n+{\n+  return s->sy_flags.sy_octets;\n+}\n+\n #ifdef OBJ_SYMFIELD_TYPE\n \n /* Get a pointer to the object format information for a symbol.  */"
    },
    {
      "sha": "f8429d97300a85b16ced47d21970022651e16519",
      "filename": "gas/symbols.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d18d199917337537713f9fc4b7ae4d6568f740cf/gas/symbols.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d18d199917337537713f9fc4b7ae4d6568f740cf/gas/symbols.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.h?ref=d18d199917337537713f9fc4b7ae4d6568f740cf",
      "patch": "@@ -57,6 +57,7 @@ symbolS *symbol_clone_if_forward_ref (symbolS *, int);\n #define symbol_clone_if_forward_ref(s) symbol_clone_if_forward_ref (s, 0)\n symbolS *symbol_temp_new (segT, valueT, fragS *);\n symbolS *symbol_temp_new_now (void);\n+symbolS *symbol_temp_new_now_octets (void);\n symbolS *symbol_temp_make (void);\n \n symbolS *colon (const char *sym_name);\n@@ -181,6 +182,7 @@ extern expressionS *symbol_get_value_expression (symbolS *);\n extern void symbol_set_value_expression (symbolS *, const expressionS *);\n extern offsetT *symbol_X_add_number (symbolS *);\n extern void symbol_set_value_now (symbolS *);\n+extern void symbol_set_value_now_octets (symbolS *);\n extern void symbol_set_frag (symbolS *, fragS *);\n extern fragS *symbol_get_frag (symbolS *);\n extern void symbol_mark_used (symbolS *);\n@@ -206,6 +208,7 @@ extern symbolS *symbol_symbolS (symbolS *);\n extern asymbol *symbol_get_bfdsym (symbolS *);\n extern void symbol_set_bfdsym (symbolS *, asymbol *);\n extern int symbol_same_p (symbolS *, symbolS *);\n+extern int symbol_octets_p (symbolS *);\n \n #ifdef OBJ_SYMFIELD_TYPE\n OBJ_SYMFIELD_TYPE *symbol_get_obj (symbolS *);"
    }
  ]
}