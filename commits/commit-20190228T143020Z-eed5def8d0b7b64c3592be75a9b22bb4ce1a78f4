{
  "sha": "eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWVkNWRlZjhkMGI3YjY0YzM1OTJiZTc1YTliMjJiYjRjZTFhNzhmNA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-02-28T14:30:20Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-02-28T14:30:20Z"
    },
    "message": "Prevent a buffer overrun error when attempting to parse a corrupt ELF file.\n\n\tPR 24273\n\t* elf.c (bfd_elf_string_from_elf_section): Check for a string\n\tsection that is not NUL terminated.",
    "tree": {
      "sha": "53dc972a14e15ae73f4f9379ed117b8454f30c3b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/53dc972a14e15ae73f4f9379ed117b8454f30c3b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9c4c331816b14d7020a8a15eed9dac5e5babdb0e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c4c331816b14d7020a8a15eed9dac5e5babdb0e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9c4c331816b14d7020a8a15eed9dac5e5babdb0e"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 17,
    "deletions": 1
  },
  "files": [
    {
      "sha": "100c453eae7cd1c2710432fe1ae4d4f23b36da03",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
      "patch": "@@ -1,3 +1,9 @@\n+2019-02-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24273\n+\t* elf.c (bfd_elf_string_from_elf_section): Check for a string\n+\tsection that is not NUL terminated.\n+\n 2019-02-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/24276"
    },
    {
      "sha": "852b966efbe7ed9b2d246ab1e04676c2b90d3f63",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
      "patch": "@@ -351,6 +351,16 @@ bfd_elf_string_from_elf_section (bfd *abfd,\n       if (bfd_elf_get_str_section (abfd, shindex) == NULL)\n \treturn NULL;\n     }\n+  else\n+    {\n+      /* PR 24273: The string section's contents may have already\n+\t been loaded elsewhere, eg because a corrupt file has the\n+\t string section index in the ELF header pointing at a group\n+\t section.  So be paranoid, and test that the last byte of\n+\t the section is zero.  */\n+      if (hdr->sh_size == 0 || hdr->contents[hdr->sh_size - 1] != 0)\n+\treturn NULL;\n+    }\n \n   if (strindex >= hdr->sh_size)\n     {\n@@ -655,7 +665,7 @@ setup_group (bfd *abfd, Elf_Internal_Shdr *hdr, asection *newsect)\n \t\t  BFD_ASSERT (sizeof (*dest) >= 4);\n \t\t  amt = shdr->sh_size * sizeof (*dest) / 4;\n \t\t  shdr->contents = (unsigned char *)\n-\t\t      bfd_alloc2 (abfd, shdr->sh_size, sizeof (*dest) / 4);\n+\t\t    bfd_alloc2 (abfd, shdr->sh_size, sizeof (*dest) / 4);\n \t\t  /* PR binutils/4110: Handle corrupt group headers.  */\n \t\t  if (shdr->contents == NULL)\n \t\t    {"
    }
  ]
}