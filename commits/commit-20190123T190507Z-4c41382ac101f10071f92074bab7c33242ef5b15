{
  "sha": "4c41382ac101f10071f92074bab7c33242ef5b15",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGM0MTM4MmFjMTAxZjEwMDcxZjkyMDc0YmFiN2MzMzI0MmVmNWIxNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-23T18:58:32Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-01-23T19:05:07Z"
    },
    "message": "Remove delete_just_stopped_threads_infrun_breakpoints_cleanup\n\nv3: sorted earlier in the series, and replaces the cleanup in\nfetch_inferior_event here too instead of in some other patch.\n\nThis removes delete_just_stopped_threads_infrun_breakpoints_cleanup,\nreplacing it with uses of scope_exit.\n\ngdb/ChangeLog:\n2019-01-23  Tom Tromey  <tom@tromey.com>\n\t    Pedro Alves  <palves@redhat.com>\n\n\t* infrun.c: Include \"common/scope-exit.h\"\n\t(delete_just_stopped_threads_infrun_breakpoints_cleanup): Remove.\n\t(wait_for_inferior): Use SCOPE_EXIT.\n\t(fetch_inferior_event): Use scope_exit.",
    "tree": {
      "sha": "56482e9c2259aa8f8e32f55e63dc0d68b9457073",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/56482e9c2259aa8f8e32f55e63dc0d68b9457073"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4c41382ac101f10071f92074bab7c33242ef5b15",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c41382ac101f10071f92074bab7c33242ef5b15",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4c41382ac101f10071f92074bab7c33242ef5b15",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c41382ac101f10071f92074bab7c33242ef5b15/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "89f8fb50fa16b0ef510dcd6de9088cee9820116d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89f8fb50fa16b0ef510dcd6de9088cee9820116d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/89f8fb50fa16b0ef510dcd6de9088cee9820116d"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 13,
    "deletions": 16
  },
  "files": [
    {
      "sha": "6f1bcba29ea2ec7e44e12e4796fd25d62aaf34d4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c41382ac101f10071f92074bab7c33242ef5b15/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c41382ac101f10071f92074bab7c33242ef5b15/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4c41382ac101f10071f92074bab7c33242ef5b15",
      "patch": "@@ -1,3 +1,11 @@\n+2019-01-23  Tom Tromey  <tom@tromey.com>\n+\t    Pedro Alves  <palves@redhat.com>\n+\n+\t* infrun.c: Include \"common/scope-exit.h\"\n+\t(delete_just_stopped_threads_infrun_breakpoints_cleanup): Remove.\n+\t(wait_for_inferior): Use SCOPE_EXIT.\n+\t(fetch_inferior_event): Use scope_exit.\n+\n 2019-01-23  Tom Tromey  <tom@tromey.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "065fbf06d8f774806ff044f22d589761d1ba0edb",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 5,
      "deletions": 16,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c41382ac101f10071f92074bab7c33242ef5b15/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c41382ac101f10071f92074bab7c33242ef5b15/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=4c41382ac101f10071f92074bab7c33242ef5b15",
      "patch": "@@ -67,6 +67,7 @@\n #include \"progspace-and-thread.h\"\n #include \"common/gdb_optional.h\"\n #include \"arch-utils.h\"\n+#include \"common/scope-exit.h\"\n \n /* Prototypes for local functions */\n \n@@ -3247,14 +3248,6 @@ delete_just_stopped_threads_single_step_breakpoints (void)\n   for_each_just_stopped_thread (delete_single_step_breakpoints);\n }\n \n-/* A cleanup wrapper.  */\n-\n-static void\n-delete_just_stopped_threads_infrun_breakpoints_cleanup (void *arg)\n-{\n-  delete_just_stopped_threads_infrun_breakpoints ();\n-}\n-\n /* See infrun.h.  */\n \n void\n@@ -3538,15 +3531,11 @@ prepare_for_detach (void)\n void\n wait_for_inferior (void)\n {\n-  struct cleanup *old_cleanups;\n-\n   if (debug_infrun)\n     fprintf_unfiltered\n       (gdb_stdlog, \"infrun: wait_for_inferior ()\\n\");\n \n-  old_cleanups\n-    = make_cleanup (delete_just_stopped_threads_infrun_breakpoints_cleanup,\n-\t\t    NULL);\n+  SCOPE_EXIT { delete_just_stopped_threads_infrun_breakpoints (); };\n \n   /* If an error happens while handling the event, propagate GDB's\n      knowledge of the executing state to the frontend/user running\n@@ -3583,8 +3572,6 @@ wait_for_inferior (void)\n \n   /* No error, don't finish the state yet.  */\n   finish_state.release ();\n-\n-  do_cleanups (old_cleanups);\n }\n \n /* Cleanup that reinstalls the readline callback handler, if the\n@@ -3760,7 +3747,8 @@ fetch_inferior_event (void *client_data)\n      still for the thread which has thrown the exception.  */\n   struct cleanup *ts_old_chain = make_bpstat_clear_actions_cleanup ();\n \n-  make_cleanup (delete_just_stopped_threads_infrun_breakpoints_cleanup, NULL);\n+  auto defer_delete_threads\n+    = make_scope_exit (delete_just_stopped_threads_infrun_breakpoints);\n \n   /* Now figure out what to do with the result of the result.  */\n   handle_inferior_event (ecs);\n@@ -3813,6 +3801,7 @@ fetch_inferior_event (void *client_data)\n \t}\n     }\n \n+  defer_delete_threads.release ();\n   discard_cleanups (ts_old_chain);\n \n   /* No error, don't finish the thread states yet.  */"
    }
  ]
}