{
  "sha": "9a9dfb6880e3b093922e3db0cd760ebbce21fe06",
  "node_id": "C_kwDOANOeidoAKDlhOWRmYjY4ODBlM2IwOTM5MjJlM2RiMGNkNzYwZWJiY2UyMWZlMDY",
  "commit": {
    "author": {
      "name": "Tsukasa OI",
      "email": "research_trasio@irq.a4lg.com",
      "date": "2022-01-10T08:22:11Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2022-02-25T06:42:58Z"
    },
    "message": "RISC-V: Fix mask for some fcvt instructions\n\nThis commit fixes incorrect uses of mask values in 'fcvt' instruction\nfamily.\n\nopcodes/ChangeLog:\n\n\t* riscv-opc.c (riscv_opcodes): Fix incorrect uses of mask values\n\tin 'fcvt' instruction family.",
    "tree": {
      "sha": "ff2fa4be2c610f6db13de707251e76f591052c08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ff2fa4be2c610f6db13de707251e76f591052c08"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9a9dfb6880e3b093922e3db0cd760ebbce21fe06",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a9dfb6880e3b093922e3db0cd760ebbce21fe06",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9a9dfb6880e3b093922e3db0cd760ebbce21fe06",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a9dfb6880e3b093922e3db0cd760ebbce21fe06/comments",
  "author": {
    "login": "a4lg",
    "id": 1201934,
    "node_id": "MDQ6VXNlcjEyMDE5MzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1201934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a4lg",
    "html_url": "https://github.com/a4lg",
    "followers_url": "https://api.github.com/users/a4lg/followers",
    "following_url": "https://api.github.com/users/a4lg/following{/other_user}",
    "gists_url": "https://api.github.com/users/a4lg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a4lg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a4lg/subscriptions",
    "organizations_url": "https://api.github.com/users/a4lg/orgs",
    "repos_url": "https://api.github.com/users/a4lg/repos",
    "events_url": "https://api.github.com/users/a4lg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a4lg/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "64a9760601d3d8761fcf0aae121e69ca0cae1a9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64a9760601d3d8761fcf0aae121e69ca0cae1a9c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/64a9760601d3d8761fcf0aae121e69ca0cae1a9c"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 4,
    "deletions": 4
  },
  "files": [
    {
      "sha": "00ee21d783f1c97e3471fcf735b9d36f5070c694",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a9dfb6880e3b093922e3db0cd760ebbce21fe06/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a9dfb6880e3b093922e3db0cd760ebbce21fe06/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=9a9dfb6880e3b093922e3db0cd760ebbce21fe06",
      "patch": "@@ -630,7 +630,7 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"fcvt.wu.s\",  0, INSN_CLASS_F_OR_ZFINX,   \"d,S,m\",     MATCH_FCVT_WU_S, MASK_FCVT_WU_S, match_opcode, 0 },\n {\"fcvt.s.w\",   0, INSN_CLASS_F_OR_ZFINX,   \"D,s\",       MATCH_FCVT_S_W|MASK_RM, MASK_FCVT_S_W|MASK_RM, match_opcode, 0 },\n {\"fcvt.s.w\",   0, INSN_CLASS_F_OR_ZFINX,   \"D,s,m\",     MATCH_FCVT_S_W, MASK_FCVT_S_W, match_opcode, 0 },\n-{\"fcvt.s.wu\",  0, INSN_CLASS_F_OR_ZFINX,   \"D,s\",       MATCH_FCVT_S_WU|MASK_RM, MASK_FCVT_S_W|MASK_RM, match_opcode, 0 },\n+{\"fcvt.s.wu\",  0, INSN_CLASS_F_OR_ZFINX,   \"D,s\",       MATCH_FCVT_S_WU|MASK_RM, MASK_FCVT_S_WU|MASK_RM, match_opcode, 0 },\n {\"fcvt.s.wu\",  0, INSN_CLASS_F_OR_ZFINX,   \"D,s,m\",     MATCH_FCVT_S_WU, MASK_FCVT_S_WU, match_opcode, 0 },\n {\"fclass.s\",   0, INSN_CLASS_F_OR_ZFINX,   \"d,S\",       MATCH_FCLASS_S, MASK_FCLASS_S, match_opcode, 0 },\n {\"feq.s\",      0, INSN_CLASS_F_OR_ZFINX,   \"d,S,T\",     MATCH_FEQ_S, MASK_FEQ_S, match_opcode, 0 },\n@@ -644,7 +644,7 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"fcvt.lu.s\", 64, INSN_CLASS_F_OR_ZFINX,   \"d,S,m\",     MATCH_FCVT_LU_S, MASK_FCVT_LU_S, match_opcode, 0 },\n {\"fcvt.s.l\",  64, INSN_CLASS_F_OR_ZFINX,   \"D,s\",       MATCH_FCVT_S_L|MASK_RM, MASK_FCVT_S_L|MASK_RM, match_opcode, 0 },\n {\"fcvt.s.l\",  64, INSN_CLASS_F_OR_ZFINX,   \"D,s,m\",     MATCH_FCVT_S_L, MASK_FCVT_S_L, match_opcode, 0 },\n-{\"fcvt.s.lu\", 64, INSN_CLASS_F_OR_ZFINX,   \"D,s\",       MATCH_FCVT_S_LU|MASK_RM, MASK_FCVT_S_L|MASK_RM, match_opcode, 0 },\n+{\"fcvt.s.lu\", 64, INSN_CLASS_F_OR_ZFINX,   \"D,s\",       MATCH_FCVT_S_LU|MASK_RM, MASK_FCVT_S_LU|MASK_RM, match_opcode, 0 },\n {\"fcvt.s.lu\", 64, INSN_CLASS_F_OR_ZFINX,   \"D,s,m\",     MATCH_FCVT_S_LU, MASK_FCVT_S_LU, match_opcode, 0 },\n \n /* Double-precision floating-point instruction subset.  */\n@@ -705,7 +705,7 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"fcvt.lu.d\", 64, INSN_CLASS_D_OR_ZDINX,   \"d,S,m\",     MATCH_FCVT_LU_D, MASK_FCVT_LU_D, match_opcode, 0 },\n {\"fcvt.d.l\",  64, INSN_CLASS_D_OR_ZDINX,   \"D,s\",       MATCH_FCVT_D_L|MASK_RM, MASK_FCVT_D_L|MASK_RM, match_opcode, 0 },\n {\"fcvt.d.l\",  64, INSN_CLASS_D_OR_ZDINX,   \"D,s,m\",     MATCH_FCVT_D_L, MASK_FCVT_D_L, match_opcode, 0 },\n-{\"fcvt.d.lu\", 64, INSN_CLASS_D_OR_ZDINX,   \"D,s\",       MATCH_FCVT_D_LU|MASK_RM, MASK_FCVT_D_L|MASK_RM, match_opcode, 0 },\n+{\"fcvt.d.lu\", 64, INSN_CLASS_D_OR_ZDINX,   \"D,s\",       MATCH_FCVT_D_LU|MASK_RM, MASK_FCVT_D_LU|MASK_RM, match_opcode, 0 },\n {\"fcvt.d.lu\", 64, INSN_CLASS_D_OR_ZDINX,   \"D,s,m\",     MATCH_FCVT_D_LU, MASK_FCVT_D_LU, match_opcode, 0 },\n \n /* Quad-precision floating-point instruction subset.  */\n@@ -765,7 +765,7 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"fcvt.lu.q\", 64, INSN_CLASS_Q_OR_ZQINX,   \"d,S,m\",     MATCH_FCVT_LU_Q, MASK_FCVT_LU_Q, match_opcode, 0 },\n {\"fcvt.q.l\",  64, INSN_CLASS_Q_OR_ZQINX,   \"D,s\",       MATCH_FCVT_Q_L|MASK_RM, MASK_FCVT_Q_L|MASK_RM, match_opcode, 0 },\n {\"fcvt.q.l\",  64, INSN_CLASS_Q_OR_ZQINX,   \"D,s,m\",     MATCH_FCVT_Q_L, MASK_FCVT_Q_L, match_opcode, 0 },\n-{\"fcvt.q.lu\", 64, INSN_CLASS_Q_OR_ZQINX,   \"D,s\",       MATCH_FCVT_Q_LU|MASK_RM, MASK_FCVT_Q_L|MASK_RM, match_opcode, 0 },\n+{\"fcvt.q.lu\", 64, INSN_CLASS_Q_OR_ZQINX,   \"D,s\",       MATCH_FCVT_Q_LU|MASK_RM, MASK_FCVT_Q_LU|MASK_RM, match_opcode, 0 },\n {\"fcvt.q.lu\", 64, INSN_CLASS_Q_OR_ZQINX,   \"D,s,m\",     MATCH_FCVT_Q_LU, MASK_FCVT_Q_LU, match_opcode, 0 },\n \n /* Compressed instructions.  */"
    }
  ]
}