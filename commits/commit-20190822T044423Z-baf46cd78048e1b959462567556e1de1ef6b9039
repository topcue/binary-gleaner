{
  "sha": "baf46cd78048e1b959462567556e1de1ef6b9039",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmFmNDZjZDc4MDQ4ZTFiOTU5NDYyNTY3NTU2ZTFkZTFlZjZiOTAzOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-22T01:51:48Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-22T04:44:23Z"
    },
    "message": "ARM CMSE symbols\n\nThis patch removes use of st_target_internal to cache the result of\ncomparing symbol names against CMSE_PREFIX.  The problem with setting\na bit in st_target_internal in swap_symbol_in is that calling\nbfd_elf_sym_name from swap_symbol_in requires symtab_hdr, and you\ndon't know for sure whether swap_symbol_in is operating on dynsyms\n(and thus elf_tdata (abfd)->dynsymtab_hdr should be used) or on the\nnormal symtab (thus elf_tdata (abfd)->symtab_hdr).  You can make an\neducated guess based on abfd->flags & DYNAMIC but that relies on\nknowing a lot about calls to bfd_elf_get_elf_syms, and is fragile in\nthe face of possible future changes.\n\ninclude/\n\t* elf/arm.h (ARM_GET_SYM_CMSE_SPCL, ARM_SET_SYM_CMSE_SPCL): Delete.\nbfd/\n\t* elf32-arm.c (cmse_scan): Don't use ARM_GET_SYM_CMSE_SPCL,\n\tinstead recognize CMSE_PREFIX in symbol name.\n\t(elf32_arm_gc_mark_extra_sections): Likewise.\n\t(elf32_arm_filter_cmse_symbols): Don't test ARM_GET_SYM_CMSE_SPCL.\n\t(elf32_arm_swap_symbol_in): Don't invoke ARM_SET_SYM_CMSE_SPCL.",
    "tree": {
      "sha": "26bc51513545bf742a1f392731b34a21ac2e40de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/26bc51513545bf742a1f392731b34a21ac2e40de"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/baf46cd78048e1b959462567556e1de1ef6b9039",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/baf46cd78048e1b959462567556e1de1ef6b9039",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/baf46cd78048e1b959462567556e1de1ef6b9039",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/baf46cd78048e1b959462567556e1de1ef6b9039/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "65d20a7403f2a2a6b20572e007f43037306d2a09",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65d20a7403f2a2a6b20572e007f43037306d2a09",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/65d20a7403f2a2a6b20572e007f43037306d2a09"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 18,
    "deletions": 27
  },
  "files": [
    {
      "sha": "a725504c025473d20278ff6e5979935e8a1b2bdc",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/baf46cd78048e1b959462567556e1de1ef6b9039/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/baf46cd78048e1b959462567556e1de1ef6b9039/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=baf46cd78048e1b959462567556e1de1ef6b9039",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf32-arm.c (cmse_scan): Don't use ARM_GET_SYM_CMSE_SPCL,\n+\tinstead recognize CMSE_PREFIX in symbol name.\n+\t(elf32_arm_gc_mark_extra_sections): Likewise.\n+\t(elf32_arm_filter_cmse_symbols): Don't test ARM_GET_SYM_CMSE_SPCL.\n+\t(elf32_arm_swap_symbol_in): Don't invoke ARM_SET_SYM_CMSE_SPCL.\n+\n 2019-08-20  Dennis Zhang  <dennis.zhang@arm.com>\n \n \t* cpu-aarch64.c: New entries for Cortex-A34, Cortex-A65,"
    },
    {
      "sha": "b675fc60c1ac82393a1cb05e67a3f4ec2c4b84cc",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 6,
      "deletions": 20,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/baf46cd78048e1b959462567556e1de1ef6b9039/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/baf46cd78048e1b959462567556e1de1ef6b9039/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=baf46cd78048e1b959462567556e1de1ef6b9039",
      "patch": "@@ -6002,22 +6002,20 @@ cmse_scan (bfd *input_bfd, struct elf32_arm_link_hash_table *htab,\n       if (i < ext_start)\n \t{\n \t  cmse_sym = &local_syms[i];\n-\t  /* Not a special symbol.  */\n-\t  if (!ARM_GET_SYM_CMSE_SPCL (cmse_sym->st_target_internal))\n-\t    continue;\n \t  sym_name = bfd_elf_string_from_elf_section (input_bfd,\n \t\t\t\t\t\t      symtab_hdr->sh_link,\n \t\t\t\t\t\t      cmse_sym->st_name);\n+\t  if (!sym_name || !CONST_STRNEQ (sym_name, CMSE_PREFIX))\n+\t    continue;\n+\n \t  /* Special symbol with local binding.  */\n \t  cmse_invalid = TRUE;\n \t}\n       else\n \t{\n \t  cmse_hash = elf32_arm_hash_entry (sym_hashes[i - ext_start]);\n \t  sym_name = (char *) cmse_hash->root.root.root.string;\n-\n-\t  /* Not a special symbol.  */\n-\t  if (!ARM_GET_SYM_CMSE_SPCL (cmse_hash->root.target_internal))\n+\t  if (!CONST_STRNEQ (sym_name, CMSE_PREFIX))\n \t    continue;\n \n \t  /* Special symbol has incorrect binding or type.  */\n@@ -15990,7 +15988,8 @@ elf32_arm_gc_mark_extra_sections (struct bfd_link_info *info,\n \n \t\t  /* Assume it is a special symbol.  If not, cmse_scan will\n \t\t     warn about it and user can do something about it.  */\n-\t\t  if (ARM_GET_SYM_CMSE_SPCL (cmse_hash->root.target_internal))\n+\t\t  if (CONST_STRNEQ (cmse_hash->root.root.root.string,\n+\t\t\t\t    CMSE_PREFIX))\n \t\t    {\n \t\t      cmse_sec = cmse_hash->root.root.u.def.section;\n \t\t      if (!cmse_sec->gc_mark\n@@ -18610,9 +18609,6 @@ elf32_arm_filter_cmse_symbols (bfd *abfd ATTRIBUTE_UNUSED,\n \t  || cmse_hash->root.type != STT_FUNC)\n \tcontinue;\n \n-      if (!ARM_GET_SYM_CMSE_SPCL (cmse_hash->root.target_internal))\n-\tcontinue;\n-\n       syms[dst_count++] = sym;\n     }\n   free (cmse_name);\n@@ -19935,9 +19931,6 @@ elf32_arm_swap_symbol_in (bfd * abfd,\n \t\t\t  const void *pshn,\n \t\t\t  Elf_Internal_Sym *dst)\n {\n-  Elf_Internal_Shdr *symtab_hdr;\n-  const char *name = NULL;\n-\n   if (!bfd_elf32_swap_symbol_in (abfd, psrc, pshn, dst))\n     return FALSE;\n   dst->st_target_internal = 0;\n@@ -19966,13 +19959,6 @@ elf32_arm_swap_symbol_in (bfd * abfd,\n   else\n     ARM_SET_SYM_BRANCH_TYPE (dst->st_target_internal, ST_BRANCH_UNKNOWN);\n \n-  /* Mark CMSE special symbols.  */\n-  symtab_hdr = & elf_symtab_hdr (abfd);\n-  if (symtab_hdr->sh_size)\n-    name = bfd_elf_sym_name (abfd, symtab_hdr, dst, NULL);\n-  if (name && CONST_STRNEQ (name, CMSE_PREFIX))\n-    ARM_SET_SYM_CMSE_SPCL (dst->st_target_internal);\n-\n   return TRUE;\n }\n "
    },
    {
      "sha": "e779c177023786babd2bf4b93b640f18d639701d",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/baf46cd78048e1b959462567556e1de1ef6b9039/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/baf46cd78048e1b959462567556e1de1ef6b9039/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=baf46cd78048e1b959462567556e1de1ef6b9039",
      "patch": "@@ -1,3 +1,7 @@\n+2019-08-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/arm.h (ARM_GET_SYM_CMSE_SPCL, ARM_SET_SYM_CMSE_SPCL): Delete.\n+\n 2019-08-09  Mihailo Stojanovic  <mihailo.stojanovic@rt-rk.com>\n \n \t* elf/mips.h (SHT_GNU_XHASH): New define."
    },
    {
      "sha": "75fb5e26ca0b482c7f693d31e66ee78b1254be5b",
      "filename": "include/elf/arm.h",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/baf46cd78048e1b959462567556e1de1ef6b9039/include/elf/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/baf46cd78048e1b959462567556e1de1ef6b9039/include/elf/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/arm.h?ref=baf46cd78048e1b959462567556e1de1ef6b9039",
      "patch": "@@ -399,11 +399,4 @@ enum arm_st_branch_type {\n \t   | ((TYPE) & ENUM_ARM_ST_BRANCH_TYPE_BITMASK))\n #endif\n \n-/* Get or set whether a symbol is a special symbol of an entry function of CMSE\n-   secure code.  */\n-#define ARM_GET_SYM_CMSE_SPCL(SYM_TARGET_INTERNAL) \\\n-  (((SYM_TARGET_INTERNAL) >> 2) & 1)\n-#define ARM_SET_SYM_CMSE_SPCL(SYM_TARGET_INTERNAL) \\\n-  (SYM_TARGET_INTERNAL) |= 4\n-\n #endif /* _ELF_ARM_H */"
    }
  ]
}