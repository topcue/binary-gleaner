{
  "sha": "595d3787e9cbedbceb6182f873a4774707c0e74f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTk1ZDM3ODdlOWNiZWRiY2ViNjE4MmY4NzNhNDc3NDcwN2MwZTc0Zg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-11-07T03:02:16Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-11-07T09:39:20Z"
    },
    "message": "Remove CR16C support\n\nI think it is past time to remove CR16C support.  CR16C was added in\n2004, and only for ld.  gas and binutils support is lacking, and there\nhave been no commits to bfd/elf32-cr16c.c other than warning fixes or\nglobal maintainers making changes to all targets.  I see no maintainer\nlisted for CR16C, and no commits from anyone at NSC supporting the\ntarget.  Furthermore, at the time the CR16 support was added in 2007,\nconfig.sub was changed upstream to no longer recognise cr16c as a\nvalid cpu.  That means the CR16C ld support is only available as a\nsecondary target by configuring with, for example,\n--enable-targets=all or --enable-targets=cr16c-unknown-elf.  No\ntesting of the CR16C target is possible.\n\ninclude/\n\t* elf/cr16c.h: Delete.\nbfd/\n\t* cpu-cr16c.c: Delete.\n\t* elf32-cr16c.c: Delete.\n\t* Makefile.am,\n\t* archures.c,\n\t* config.bfd,\n\t* configure.ac,\n\t* reloc.c,\n\t* targets.c: Remove cr16c support.\n\t* Makefile.in,\n\t* bfd-in2.h,\n\t* configure,\n\t* libbfd.h,\n\t* po/SRC-POTFILES.in: Regenerate.\nld/\n\t* emulparams/elf32cr16c.sh: Delete.\n\t* scripttempl/elf32cr16c.sc: Delete.\n\t* Makefile.am,\n\t* configure.tgt: Remove cr16c support.\n\t* NEWS: Mention removal of cr16c.\n\t* Makefile.in,\n\t* po/BLD-POTFILES.in: Regenerate.",
    "tree": {
      "sha": "bc30bd7ca198e90ae4a785a25e5ab5a375ea58a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bc30bd7ca198e90ae4a785a25e5ab5a375ea58a6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/595d3787e9cbedbceb6182f873a4774707c0e74f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/595d3787e9cbedbceb6182f873a4774707c0e74f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/595d3787e9cbedbceb6182f873a4774707c0e74f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/595d3787e9cbedbceb6182f873a4774707c0e74f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "984b909a237441995d41a2a04f9b31bd0c3dad2c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/984b909a237441995d41a2a04f9b31bd0c3dad2c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/984b909a237441995d41a2a04f9b31bd0c3dad2c"
    }
  ],
  "stats": {
    "total": 1565,
    "additions": 33,
    "deletions": 1532
  },
  "files": [
    {
      "sha": "07eb053c846cd294c37124bd6c417141546d272e",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -1,3 +1,19 @@\n+2019-11-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* cpu-cr16c.c: Delete.\n+\t* elf32-cr16c.c: Delete.\n+\t* Makefile.am,\n+\t* archures.c,\n+\t* config.bfd,\n+\t* configure.ac,\n+\t* reloc.c,\n+\t* targets.c: Remove cr16c support.\n+\t* Makefile.in,\n+\t* bfd-in2.h,\n+\t* configure,\n+\t* libbfd.h,\n+\t* po/SRC-POTFILES.in: Regenerate.\n+\n 2019-11-05  Tim R\u00fchsen  <tim.ruehsen@gmx.de>\n \n \t* doc/chew.c (add_to_definition): Use correct type when"
    },
    {
      "sha": "e5bd28f03f570eafd3c00df06e88f83d99f6fb28",
      "filename": "bfd/Makefile.am",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.am?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -98,7 +98,6 @@ ALL_MACHINES = \\\n \tcpu-bfin.lo \\\n \tcpu-bpf.lo \\\n \tcpu-cr16.lo \\\n-\tcpu-cr16c.lo \\\n \tcpu-cris.lo \\\n \tcpu-crx.lo \\\n \tcpu-csky.lo \\\n@@ -185,7 +184,6 @@ ALL_MACHINES_CFILES = \\\n \tcpu-bfin.c \\\n \tcpu-bpf.c \\\n \tcpu-cr16.c \\\n-\tcpu-cr16c.c \\\n \tcpu-cris.c \\\n \tcpu-crx.c \\\n \tcpu-csky.c \\\n@@ -304,7 +302,6 @@ BFD32_BACKENDS = \\\n \telf32-avr.lo \\\n \telf32-bfin.lo \\\n \telf32-cr16.lo \\\n-\telf32-cr16c.lo \\\n \telf32-cris.lo \\\n \telf32-crx.lo \\\n \telf32-csky.lo \\\n@@ -441,7 +438,6 @@ BFD32_BACKENDS_CFILES = \\\n \telf32-avr.c \\\n \telf32-bfin.c \\\n \telf32-cr16.c \\\n-\telf32-cr16c.c \\\n \telf32-cris.c \\\n \telf32-crx.c \\\n \telf32-csky.c \\"
    },
    {
      "sha": "15334f10c55aa7388e7e8c752d272a0895fd9c54",
      "filename": "bfd/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.in?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -522,7 +522,6 @@ ALL_MACHINES = \\\n \tcpu-bfin.lo \\\n \tcpu-bpf.lo \\\n \tcpu-cr16.lo \\\n-\tcpu-cr16c.lo \\\n \tcpu-cris.lo \\\n \tcpu-crx.lo \\\n \tcpu-csky.lo \\\n@@ -609,7 +608,6 @@ ALL_MACHINES_CFILES = \\\n \tcpu-bfin.c \\\n \tcpu-bpf.c \\\n \tcpu-cr16.c \\\n-\tcpu-cr16c.c \\\n \tcpu-cris.c \\\n \tcpu-crx.c \\\n \tcpu-csky.c \\\n@@ -729,7 +727,6 @@ BFD32_BACKENDS = \\\n \telf32-avr.lo \\\n \telf32-bfin.lo \\\n \telf32-cr16.lo \\\n-\telf32-cr16c.lo \\\n \telf32-cris.lo \\\n \telf32-crx.lo \\\n \telf32-csky.lo \\\n@@ -866,7 +863,6 @@ BFD32_BACKENDS_CFILES = \\\n \telf32-avr.c \\\n \telf32-bfin.c \\\n \telf32-cr16.c \\\n-\telf32-cr16c.c \\\n \telf32-cris.c \\\n \telf32-crx.c \\\n \telf32-csky.c \\\n@@ -1344,7 +1340,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-bfin.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-bpf.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-cr16.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-cr16c.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-cris.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-crx.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu-csky.Plo@am__quote@\n@@ -1442,7 +1437,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-avr.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-bfin.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-cr16.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-cr16c.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-cris.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-crx.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-csky.Plo@am__quote@"
    },
    {
      "sha": "569876eed0e86e4aaff066658378f9071d27d508",
      "filename": "bfd/archures.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/archures.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/archures.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archures.c?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -448,8 +448,6 @@ DESCRIPTION\n .#define bfd_mach_bfin\t\t1\n .  bfd_arch_cr16,      {* National Semiconductor CompactRISC (ie CR16).  *}\n .#define bfd_mach_cr16\t\t1\n-.  bfd_arch_cr16c,     {* National Semiconductor CompactRISC.  *}\n-.#define bfd_mach_cr16c\t\t1\n .  bfd_arch_crx,       {*  National Semiconductor CRX.  *}\n .#define bfd_mach_crx\t\t1\n .  bfd_arch_cris,      {* Axis CRIS.  *}\n@@ -606,7 +604,6 @@ extern const bfd_arch_info_type bfd_arm_arch;\n extern const bfd_arch_info_type bfd_avr_arch;\n extern const bfd_arch_info_type bfd_bfin_arch;\n extern const bfd_arch_info_type bfd_cr16_arch;\n-extern const bfd_arch_info_type bfd_cr16c_arch;\n extern const bfd_arch_info_type bfd_cris_arch;\n extern const bfd_arch_info_type bfd_crx_arch;\n extern const bfd_arch_info_type bfd_csky_arch;\n@@ -698,7 +695,6 @@ static const bfd_arch_info_type * const bfd_archures_list[] =\n     &bfd_avr_arch,\n     &bfd_bfin_arch,\n     &bfd_cr16_arch,\n-    &bfd_cr16c_arch,\n     &bfd_cris_arch,\n     &bfd_crx_arch,\n     &bfd_csky_arch,"
    },
    {
      "sha": "3244905b4563894e18d1d0dc3af0864777ebb073",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 0,
      "deletions": 44,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -1826,8 +1826,6 @@ enum bfd_architecture\n #define bfd_mach_bfin          1\n   bfd_arch_cr16,      /* National Semiconductor CompactRISC (ie CR16).  */\n #define bfd_mach_cr16          1\n-  bfd_arch_cr16c,     /* National Semiconductor CompactRISC.  */\n-#define bfd_mach_cr16c         1\n   bfd_arch_crx,       /*  National Semiconductor CRX.  */\n #define bfd_mach_crx           1\n   bfd_arch_cris,      /* Axis CRIS.  */\n@@ -4859,48 +4857,6 @@ This is a 15 bit relative address.  If the most significant bits are all zero\n then it may be truncated to 8 bits.  */\n   BFD_RELOC_S12Z_15_PCREL,\n \n-/* NS CR16C Relocations.  */\n-  BFD_RELOC_16C_NUM08,\n-  BFD_RELOC_16C_NUM08_C,\n-  BFD_RELOC_16C_NUM16,\n-  BFD_RELOC_16C_NUM16_C,\n-  BFD_RELOC_16C_NUM32,\n-  BFD_RELOC_16C_NUM32_C,\n-  BFD_RELOC_16C_DISP04,\n-  BFD_RELOC_16C_DISP04_C,\n-  BFD_RELOC_16C_DISP08,\n-  BFD_RELOC_16C_DISP08_C,\n-  BFD_RELOC_16C_DISP16,\n-  BFD_RELOC_16C_DISP16_C,\n-  BFD_RELOC_16C_DISP24,\n-  BFD_RELOC_16C_DISP24_C,\n-  BFD_RELOC_16C_DISP24a,\n-  BFD_RELOC_16C_DISP24a_C,\n-  BFD_RELOC_16C_REG04,\n-  BFD_RELOC_16C_REG04_C,\n-  BFD_RELOC_16C_REG04a,\n-  BFD_RELOC_16C_REG04a_C,\n-  BFD_RELOC_16C_REG14,\n-  BFD_RELOC_16C_REG14_C,\n-  BFD_RELOC_16C_REG16,\n-  BFD_RELOC_16C_REG16_C,\n-  BFD_RELOC_16C_REG20,\n-  BFD_RELOC_16C_REG20_C,\n-  BFD_RELOC_16C_ABS20,\n-  BFD_RELOC_16C_ABS20_C,\n-  BFD_RELOC_16C_ABS24,\n-  BFD_RELOC_16C_ABS24_C,\n-  BFD_RELOC_16C_IMM04,\n-  BFD_RELOC_16C_IMM04_C,\n-  BFD_RELOC_16C_IMM16,\n-  BFD_RELOC_16C_IMM16_C,\n-  BFD_RELOC_16C_IMM20,\n-  BFD_RELOC_16C_IMM20_C,\n-  BFD_RELOC_16C_IMM24,\n-  BFD_RELOC_16C_IMM24_C,\n-  BFD_RELOC_16C_IMM32,\n-  BFD_RELOC_16C_IMM32_C,\n-\n /* NS CR16 Relocations.  */\n   BFD_RELOC_CR16_NUM8,\n   BFD_RELOC_CR16_NUM16,"
    },
    {
      "sha": "0a96927e0edcea2515229677eab8ba0aadf50fe8",
      "filename": "bfd/config.bfd",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/config.bfd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/config.bfd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/config.bfd?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -85,6 +85,7 @@ case $targ in\n  arm-*-oabi | \\\n  arm-*-riscix* | \\\n  arm-epoc-pe* | \\\n+ cr16c-*-* | \\\n  h8300*-*-coff | \\\n  h8500*-*-coff | \\\n  hppa*-*-rtems* | \\\n@@ -436,11 +437,6 @@ case \"${targ}\" in\n     targ_underscore=yes\n     ;;\n \n-  cr16c-*-elf*)\n-    targ_defvec=cr16c_elf32_vec\n-    targ_underscore=yes\n-    ;;\n-\n #ifdef BFD64\n   cris-*-* | crisv32-*-*)\n     targ_defvec=cris_aout_vec"
    },
    {
      "sha": "abd7b2a83e596e7090b7848ae383b3b88aad571b",
      "filename": "bfd/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -14722,7 +14722,6 @@ do\n     bfin_elf32_vec)\t\t tb=\"$tb elf32-bfin.lo elf32.lo $elf\" ;;\n     bfin_elf32_fdpic_vec)\t tb=\"$tb elf32-bfin.lo elf32.lo $elf\" ;;\n     cr16_elf32_vec)\t\t tb=\"$tb elf32-cr16.lo elf32.lo $elf\" ;;\n-    cr16c_elf32_vec)\t\t tb=\"$tb elf32-cr16c.lo elf32.lo $elf\" ;;\n     cris_aout_vec)\t\t tb=\"$tb aout-cris.lo\" ;;\n     cris_elf32_vec)\t\t tb=\"$tb elf32-cris.lo elf32.lo $elf\" ;;\n     cris_elf32_us_vec)\t\t tb=\"$tb elf32-cris.lo elf32.lo $elf\" ;;"
    },
    {
      "sha": "7eee83ae4d4c9456c7b99d03a1bff905729f23c1",
      "filename": "bfd/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.ac?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -458,7 +458,6 @@ do\n     bfin_elf32_vec)\t\t tb=\"$tb elf32-bfin.lo elf32.lo $elf\" ;;\n     bfin_elf32_fdpic_vec)\t tb=\"$tb elf32-bfin.lo elf32.lo $elf\" ;;\n     cr16_elf32_vec)\t\t tb=\"$tb elf32-cr16.lo elf32.lo $elf\" ;;\n-    cr16c_elf32_vec)\t\t tb=\"$tb elf32-cr16c.lo elf32.lo $elf\" ;;\n     cris_aout_vec)\t\t tb=\"$tb aout-cris.lo\" ;;\n     cris_elf32_vec)\t\t tb=\"$tb elf32-cris.lo elf32.lo $elf\" ;;\n     cris_elf32_us_vec)\t\t tb=\"$tb elf32-cris.lo elf32.lo $elf\" ;;"
    },
    {
      "sha": "ed4a818971871ba1f598545cab88b71186460502",
      "filename": "bfd/cpu-cr16c.c",
      "status": "removed",
      "additions": 0,
      "deletions": 41,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/984b909a237441995d41a2a04f9b31bd0c3dad2c/bfd/cpu-cr16c.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/984b909a237441995d41a2a04f9b31bd0c3dad2c/bfd/cpu-cr16c.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-cr16c.c?ref=984b909a237441995d41a2a04f9b31bd0c3dad2c",
      "patch": "@@ -1,41 +0,0 @@\n-/* BFD support for the CR16C processor.\n-   Copyright (C) 2004-2019 Free Software Foundation, Inc.\n-\n-   This file is part of BFD, the Binary File Descriptor library.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n-   MA 02110-1301, USA.  */\n-\n-#include \"sysdep.h\"\n-#include \"bfd.h\"\n-#include \"libbfd.h\"\n-\n-const bfd_arch_info_type bfd_cr16c_arch =\n-{\n-  16,\t\t/* Bits in a word.  */\n-  32,\t\t/* Bits in an address.  */\n-  8,\t\t/* Bits in a byte.  */\n-  bfd_arch_cr16c,\n-  bfd_mach_cr16c,\n-  \"cr16c\",\n-  \"cr16c\",\n-  1,\n-  TRUE,\t\t/* The one and only.  */\n-  bfd_default_compatible,\n-  bfd_default_scan,\n-  bfd_arch_default_fill,\n-  NULL,\n-  0 /* Maximum offset of a reloc from the start of an insn.  */\n-};"
    },
    {
      "sha": "35bacbbc6faeebc5cda9e76cdf6c40104e63fe66",
      "filename": "bfd/elf32-cr16c.c",
      "status": "removed",
      "additions": 0,
      "deletions": 963,
      "changes": 963,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/984b909a237441995d41a2a04f9b31bd0c3dad2c/bfd/elf32-cr16c.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/984b909a237441995d41a2a04f9b31bd0c3dad2c/bfd/elf32-cr16c.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-cr16c.c?ref=984b909a237441995d41a2a04f9b31bd0c3dad2c",
      "patch": "@@ -1,963 +0,0 @@\n-/* BFD back-end for National Semiconductor's CR16C ELF\n-   Copyright (C) 2004-2019 Free Software Foundation, Inc.\n-\n-   This file is part of BFD, the Binary File Descriptor library.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software\n-   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n-   MA 02110-1301, USA.  */\n-\n-#include \"sysdep.h\"\n-#include \"bfd.h\"\n-#include \"libbfd.h\"\n-#include \"bfdlink.h\"\n-#include \"elf/cr16c.h\"\n-#include \"elf-bfd.h\"\n-\n-\n-#define USE_REL\t1\t/* CR16C uses REL relocations instead of RELA.  */\n-\n-/* The following definition is based on EMPTY_HOWTO macro,\n-   but also initiates the \"name\" field in HOWTO struct.  */\n-#define ONLY_NAME_HOWTO(C) \\\n-  HOWTO ((C), 0, 0, 0, FALSE, 0, complain_overflow_dont, NULL, \\\n-\t  STRINGX(C), FALSE, 0, 0, FALSE)\n-\n-/* reloc_map_index array maps CRASM relocation type into a BFD\n-   relocation enum. The array's indices are synchronized with\n-   RINDEX_16C_* indices, created in include/elf/cr16c.h.\n-   The array is used in:\n-   1. elf32-cr16c.c : elf_cr16c_reloc_type_lookup().\n-   2. asreloc.c : find_reloc_type(). */\n-\n-RELOC_MAP reloc_map_index[RINDEX_16C_MAX] =\n-{\n-  {R_16C_NUM08,     BFD_RELOC_16C_NUM08},\n-  {R_16C_NUM08_C,   BFD_RELOC_16C_NUM08_C},\n-  {R_16C_NUM16,     BFD_RELOC_16C_NUM16},\n-  {R_16C_NUM16_C,   BFD_RELOC_16C_NUM16_C},\n-  {R_16C_NUM32,     BFD_RELOC_16C_NUM32},\n-  {R_16C_NUM32_C,   BFD_RELOC_16C_NUM32_C},\n-  {R_16C_DISP04,    BFD_RELOC_16C_DISP04},\n-  {R_16C_DISP04_C,  BFD_RELOC_16C_DISP04_C},\n-  {R_16C_DISP08,    BFD_RELOC_16C_DISP08},\n-  {R_16C_DISP08_C,  BFD_RELOC_16C_DISP08_C},\n-  {R_16C_DISP16,    BFD_RELOC_16C_DISP16},\n-  {R_16C_DISP16_C,  BFD_RELOC_16C_DISP16_C},\n-  {R_16C_DISP24,    BFD_RELOC_16C_DISP24},\n-  {R_16C_DISP24_C,  BFD_RELOC_16C_DISP24_C},\n-  {R_16C_DISP24a,   BFD_RELOC_16C_DISP24a},\n-  {R_16C_DISP24a_C, BFD_RELOC_16C_DISP24a_C},\n-  {R_16C_REG04,     BFD_RELOC_16C_REG04},\n-  {R_16C_REG04_C,   BFD_RELOC_16C_REG04_C},\n-  {R_16C_REG04a,    BFD_RELOC_16C_REG04a},\n-  {R_16C_REG04a_C,  BFD_RELOC_16C_REG04a_C},\n-  {R_16C_REG14,     BFD_RELOC_16C_REG14},\n-  {R_16C_REG14_C,   BFD_RELOC_16C_REG14_C},\n-  {R_16C_REG16,     BFD_RELOC_16C_REG16},\n-  {R_16C_REG16_C,   BFD_RELOC_16C_REG16_C},\n-  {R_16C_REG20,     BFD_RELOC_16C_REG20},\n-  {R_16C_REG20_C,   BFD_RELOC_16C_REG20_C},\n-  {R_16C_ABS20,     BFD_RELOC_16C_ABS20},\n-  {R_16C_ABS20_C,   BFD_RELOC_16C_ABS20_C},\n-  {R_16C_ABS24,     BFD_RELOC_16C_ABS24},\n-  {R_16C_ABS24_C,   BFD_RELOC_16C_ABS24_C},\n-  {R_16C_IMM04,     BFD_RELOC_16C_IMM04},\n-  {R_16C_IMM04_C,   BFD_RELOC_16C_IMM04_C},\n-  {R_16C_IMM16,     BFD_RELOC_16C_IMM16},\n-  {R_16C_IMM16_C,   BFD_RELOC_16C_IMM16_C},\n-  {R_16C_IMM20,     BFD_RELOC_16C_IMM20},\n-  {R_16C_IMM20_C,   BFD_RELOC_16C_IMM20_C},\n-  {R_16C_IMM24,     BFD_RELOC_16C_IMM24},\n-  {R_16C_IMM24_C,   BFD_RELOC_16C_IMM24_C},\n-  {R_16C_IMM32,     BFD_RELOC_16C_IMM32},\n-  {R_16C_IMM32_C,   BFD_RELOC_16C_IMM32_C}\n-};\n-\n-static reloc_howto_type elf_howto_table[] =\n-{\n-  /* 00 */ ONLY_NAME_HOWTO (RINDEX_16C_NUM08),\n-  /* 01 */ ONLY_NAME_HOWTO (RINDEX_16C_NUM08_C),\n-  /* 02 */ ONLY_NAME_HOWTO (RINDEX_16C_NUM16),\n-  /* 03 */ ONLY_NAME_HOWTO (RINDEX_16C_NUM16_C),\n-  /* 04 */ ONLY_NAME_HOWTO (RINDEX_16C_NUM32),\n-  /* 05 */ ONLY_NAME_HOWTO (RINDEX_16C_NUM32_C),\n-  /* 06 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP04),\n-  /* 07 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP04_C),\n-  /* 08 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP08),\n-  /* 09 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP08_C),\n-  /* 10 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP16),\n-  /* 11 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP16_C),\n-  /* 12 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP24),\n-  /* 13 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP24_C),\n-  /* 14 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP24a),\n-  /* 15 */ ONLY_NAME_HOWTO (RINDEX_16C_DISP24a_C),\n-  /* 16 */ ONLY_NAME_HOWTO (RINDEX_16C_REG04),\n-  /* 17 */ ONLY_NAME_HOWTO (RINDEX_16C_REG04_C),\n-  /* 18 */ ONLY_NAME_HOWTO (RINDEX_16C_REG04a),\n-  /* 19 */ ONLY_NAME_HOWTO (RINDEX_16C_REG04a_C),\n-  /* 20 */ ONLY_NAME_HOWTO (RINDEX_16C_REG14),\n-  /* 21 */ ONLY_NAME_HOWTO (RINDEX_16C_REG14_C),\n-  /* 22 */ ONLY_NAME_HOWTO (RINDEX_16C_REG16),\n-  /* 23 */ ONLY_NAME_HOWTO (RINDEX_16C_REG16_C),\n-  /* 24 */ ONLY_NAME_HOWTO (RINDEX_16C_REG20),\n-  /* 25 */ ONLY_NAME_HOWTO (RINDEX_16C_REG20_C),\n-  /* 26 */ ONLY_NAME_HOWTO (RINDEX_16C_ABS20),\n-  /* 27 */ ONLY_NAME_HOWTO (RINDEX_16C_ABS20_C),\n-  /* 28 */ ONLY_NAME_HOWTO (RINDEX_16C_ABS24),\n-  /* 29 */ ONLY_NAME_HOWTO (RINDEX_16C_ABS24_C),\n-  /* 30 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM04),\n-  /* 31 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM04_C),\n-  /* 32 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM16),\n-  /* 33 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM16_C),\n-  /* 34 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM20),\n-  /* 35 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM20_C),\n-  /* 36 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM24),\n-  /* 37 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM24_C),\n-  /* 38 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM32),\n-  /* 39 */ ONLY_NAME_HOWTO (RINDEX_16C_IMM32_C)\n-};\n-\n-\n-/* Code to turn a code_type into a howto ptr, uses the above howto table.  */\n-\n-static reloc_howto_type *\n-elf_cr16c_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n-\t\t\t     bfd_reloc_code_real_type code)\n-{\n-  unsigned int i;\n-\n-  for (i = 0; i < RINDEX_16C_MAX; i++)\n-    {\n-      if (code == reloc_map_index[i].bfd_reloc_enum)\n-\t{\n-\t  /* printf (\"CR16C Relocation Type is - %x\\n\", code); */\n-\t  return & elf_howto_table[i];\n-\t}\n-    }\n-\n-  /* printf (\"This relocation Type is not supported - %x\\n\", code); */\n-  return 0;\n-}\n-\n-static reloc_howto_type *\n-elf_cr16c_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n-\t\t\t     const char *r_name)\n-{\n-  unsigned int i;\n-\n-  for (i = 0; i < sizeof (elf_howto_table) / sizeof (elf_howto_table[0]); i++)\n-    if (elf_howto_table[i].name != NULL\n-\t&& strcasecmp (elf_howto_table[i].name, r_name) == 0)\n-      return &elf_howto_table[i];\n-\n-  return NULL;\n-}\n-\n-static bfd_boolean\n-elf_cr16c_info_to_howto (bfd *abfd ATTRIBUTE_UNUSED,\n-\t\t\t arelent *cache_ptr ATTRIBUTE_UNUSED,\n-\t\t\t Elf_Internal_Rela *dst ATTRIBUTE_UNUSED)\n-{\n-  return FALSE;\n-}\n-\n-static bfd_boolean\n-elf_cr16c_info_to_howto_rel (bfd *abfd ATTRIBUTE_UNUSED,\n-\t\t\t     arelent *cache_ptr,\n-\t\t\t     Elf_Internal_Rela *dst)\n-{\n-  unsigned int r_type = ELF32_R_TYPE (dst->r_info);\n-\n-  if (r_type >= RINDEX_16C_MAX)\n-    {\n-      /* xgettext:c-format */\n-      _bfd_error_handler (_(\"%pB: unsupported relocation type %#x\"),\n-\t\t\t  abfd, r_type);\n-      bfd_set_error (bfd_error_bad_value);\n-      return FALSE;\n-    }\n-  cache_ptr->howto = &elf_howto_table[r_type];\n-  return TRUE;\n-}\n-\n-/* Perform a relocation as part of a final link.  */\n-\n-static bfd_reloc_status_type\n-cr16c_elf_final_link_relocate (reloc_howto_type *howto,\n-\t\t\t       bfd *abfd,\n-\t\t\t       bfd *output_bfd ATTRIBUTE_UNUSED,\n-\t\t\t       asection *input_section,\n-\t\t\t       bfd_byte *data,\n-\t\t\t       bfd_vma octets,\n-\t\t\t       bfd_vma Rvalue,\n-\t\t\t       bfd_vma addend ATTRIBUTE_UNUSED,\n-\t\t\t       struct bfd_link_info *info ATTRIBUTE_UNUSED,\n-\t\t\t       asection *sym_sec ATTRIBUTE_UNUSED,\n-\t\t\t       int is_local ATTRIBUTE_UNUSED)\n-{\n-  long value;\n-  short sword;\t\t\t/* Extracted from the hole and put back.  */\n-  unsigned long format, addr_type, code_factor;\n-  unsigned short size;\n-  unsigned short r_type;\n-\n-  unsigned long disp20_opcod;\n-  char neg = 0;\n-  char neg2pos = 0;\n-\n-  long left_val = 0;\n-  long plus_factor = 0;\t\t/* To be added to the hole.  */\n-\n-#define MIN_BYTE\t((int) 0xFFFFFF80)\n-#define MIN_WORD\t((int) 0xFFFF8000)\n-#define\tMAX_UWORD\t((unsigned) 0x0000FFFF)\n-#define\tMAX_UBYTE\t((unsigned) 0x000000FF)\n-\n-  r_type = reloc_map_index[howto->type].cr_reloc_type;\n-  format = r_type & R_FORMAT;\n-  size = r_type & R_SIZESP;\n-  addr_type = r_type & R_ADDRTYPE;\n-  code_factor = ((addr_type == R_CODE_ADDR) ? 1 : 0);\n-\n-  switch (format)\n-    {\n-    case R_NUMBER:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_08:\t/* One byte.  */\n-\t  value = bfd_get_8 (abfd, (char *) data + octets);\n-\t  break;\n-\tcase R_S_16C_16:\t/* Two bytes. */\n-\t  sword = bfd_get_16 (abfd, (bfd_byte *) data + octets);\n-\t  value = sword;\n-\t  break;\n-\tcase R_S_16C_32:\t/* Four bytes.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  break;\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_DISPL:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_04:    /* word1(4-7).  */\n-\t  value = bfd_get_8 (abfd, (char *) data + octets);\n-\t  left_val = value & 0xF;\n-\t  value = (value & 0xF0) >> 4;\n-\t  value++;\n-\t  value <<= 1;\n-\t  break;\n-\tcase R_S_16C_08:    /* word1(0-3,8-11).  */\n-\t  sword = bfd_get_16 (abfd, (char *) data + octets);\n-\t  value = sword & 0x000F;\n-\t  value |= ((sword & 0x0F00) >> 4);\n-\t  left_val = sword & 0xF0F0;\n-\t  value <<= 1;\n-\t  if (value & 0x100)\n-\t    value |= 0xFFFFFF00;\n-\t  break;\n-\tcase R_S_16C_16:    /* word2.  */\n-\t  sword = bfd_get_16 (abfd, (bfd_byte *) data + octets);\n-\t  value = sword;\n-\t  value = ((value & 0xFFFE) >> 1) | ((value & 0x1) << 15);\n-\t  value <<= 1;\n-\t  if (value & 0x10000)\n-\t    value |= 0xFFFF0000;\n-\t  break;\n-\tcase R_S_16C_24_a:\t/* word1(0-7),word2.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  left_val = value & 0x0000FF00;\n-\t  value = ((value & 0xFFFE0000) >> 17) |\n-\t    ((value & 0x00010000) << 7) | ((value & 0x000000FF) << 15);\n-\t  value <<= 1;\n-\t  if (value & 0x1000000)\n-\t    value |= 0xFE000000;\n-\t  break;\n-\tcase R_S_16C_24:    /* word2(0-3,8-11),word3.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  left_val = value & 0x0000F0F0;\n-\t  value = ((value >> 16) & 0x0000FFFF) |\n-\t    ((value & 0x00000F00) << 8) | ((value & 0x0000000F) << 20);\n-\n-\t  value = ((value & 0x00FFFFFE) >> 1) | ((value & 0x00000001) << 23);\n-\n-\t  value <<= 1;\n-\t  if (value & 0x1000000)\n-\t    value |= 0xFE000000;\n-\t  break;\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_REGREL:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_04:    /* word1(12-15) not scaled.  */\n-\t  value = bfd_get_8 (abfd, (char *) data + octets);\n-\t  left_val = value & 0xF0;\n-\t  value = value & 0xF;\n-\t  break;\n-\tcase R_S_16C_04_a:\t/* word1(12-15) scaled by 2.  */\n-\t  value = bfd_get_8 (abfd, (char *) data + octets);\n-\t  left_val = value & 0xF0;\n-\t  value = value & 0xF;\n-\t  value <<= 1;\n-\t  break;\n-\tcase R_S_16C_14:    /* word1(4-5),word2(0-3,8-15).  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  left_val = value & 0x00F0FFCF;\n-\t  value = ((value & 0xc0000000) >> 24) |\n-\t    ((value & 0x3F000000) >> 16) |\n-\t    ((value & 0x000F0000) >> 16) | (value & 0x00000030);\n-\t  break;\n-\tcase R_S_16C_16:    /* word2.  */\n-\t  sword = bfd_get_16 (abfd, (bfd_byte *) data + octets);\n-\t  value = sword;\n-\t  break;\n-\tcase R_S_16C_20:    /* word2(8-11),word3.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  left_val = value & 0xF0;\n-\t  value = (value & 0xF) << 16;\n-\t  sword = bfd_get_16 (abfd, (bfd_byte *) data + octets + 1);\n-\t  value = value | (unsigned short) sword;\n-\t  disp20_opcod = bfd_get_32 (abfd, (bfd_byte *) data + octets - 3);\n-\t  disp20_opcod |= 0x0FFF0000;\n-\t  if ((disp20_opcod == 0x4FFF0018) ||\t/* loadb -disp20(reg) */\n-\t      (disp20_opcod == 0x5FFF0018) ||\t/* loadb -disp20(rp)  */\n-\t      (disp20_opcod == 0x8FFF0018) ||\t/* loadd -disp20(reg) */\n-\t      (disp20_opcod == 0x9FFF0018) ||\t/* loadd -disp20(rp)  */\n-\t      (disp20_opcod == 0xCFFF0018) ||\t/* loadw -disp20(reg) */\n-\t      (disp20_opcod == 0xDFFF0018) ||\t/* loadw -disp20(rp)  */\n-\t      (disp20_opcod == 0x4FFF0019) ||\t/* storb -disp20(reg) */\n-\t      (disp20_opcod == 0x5FFF0019) ||\t/* storb -disp20(rp)  */\n-\t      (disp20_opcod == 0x8FFF0019) ||\t/* stord -disp20(reg) */\n-\t      (disp20_opcod == 0x9FFF0019) ||\t/* stord -disp20(rp)  */\n-\t      (disp20_opcod == 0xCFFF0019) ||\t/* storw -disp20(reg) */\n-\t      (disp20_opcod == 0xDFFF0019))\n-\t    {\t/* storw -disp20(rp).  */\n-\t      neg = 1;\n-\t      value |= 0xFFF00000;\n-\t    }\n-\n-\t  break;\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_ABS:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_20:    /* word1(0-3),word2.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  left_val = value & 0x0000FFF0;\n-\t  value = ((value & 0xFFFF0000) >> 16) |\n-\t    ((value & 0x0000000F) << 16);\n-\t  break;\n-\tcase R_S_16C_24:   /* word2(0-3,8-11),word3.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  left_val = value & 0x0000F0F0;\n-\t  value = ((value & 0xFFFF0000) >> 16) |\n-\t    ((value & 0x00000F00) << 8) | ((value & 0x0000000F) << 20);\n-\t  break;\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_IMMED:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_04:    /* word1/2(4-7).  */\n-\t  value = bfd_get_8 (abfd, (char *) data + octets);\n-\t  left_val = value & 0xF;\n-\t  value = (value & 0xF0) >> 4;\n-\t  break;\n-\tcase R_S_16C_16:    /* word2.  */\n-\t  sword = bfd_get_16 (abfd, (bfd_byte *) data + octets);\n-\t  value = sword;\n-\t  break;\n-\tcase R_S_16C_20:    /* word1(0-3),word2.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  left_val = value & 0x0000FFF0;\n-\t  value = ((value & 0xFFFF0000) >> 16) |\n-\t    ((value & 0x0000000F) << 16);\n-\t  break;\n-\tcase R_S_16C_32:    /* word2, word3.  */\n-\t  value = bfd_get_32 (abfd, (bfd_byte *) data + octets);\n-\t  value = ((value & 0x0000FFFF) << 16) |\n-\t    ((value & 0xFFFF0000) >> 16);\n-\t  break;\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-    default:\n-      return bfd_reloc_notsupported;\n-    }\n-\n-  switch ((r_type & R_RELTO) >> 4)\n-    {\n-\n-    case 0:\t/* R_ABS.  */\n-      plus_factor = Rvalue;\n-      break;\n-    case 1:\t/* R_PCREL.  */\n-      plus_factor = Rvalue -\n-\t(input_section->output_section->vma + input_section->output_offset);\n-      break;\n-    default:\n-      return bfd_reloc_notsupported;\n-    }\n-\n-  if (neg)\n-    {\n-      if (plus_factor >= -value)\n-\tneg2pos = 1;\n-      /* We need to change load/stor with negative\n-\t displ opcode to positive disp opcode (CR16C).  */\n-    }\n-\n-  value = value + (plus_factor >> code_factor);\n-\n-  switch (format)\n-    {\n-    case R_NUMBER:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_08:\t/* One byte.  */\n-\t  if (value > (int) MAX_UBYTE || value < MIN_BYTE)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xFF;\n-\t  bfd_put_8 (abfd, (bfd_vma) value, (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_16:\t/* Two bytes.  */\n-\t  if (value > (int) MAX_UWORD || value < MIN_WORD)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xFFFF;\n-\t  sword = value;\n-\t  bfd_put_16 (abfd, (bfd_vma) sword,\n-\t\t      (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_32:\t/* Four bytes.  */\n-\t  value &= 0xFFFFFFFF;\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_DISPL:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_04:\t/* word1(4-7).  */\n-\t  if ((value - 32) > 32 || value < 2)\n-\t    return bfd_reloc_overflow;\n-\t  value >>= 1;\n-\t  value--;\n-\t  value &= 0xF;\n-\t  value <<= 4;\n-\t  value |= left_val;\n-\t  bfd_put_8 (abfd, (bfd_vma) value, (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_08:    /* word1(0-3,8-11).  */\n-\t  if (value > 255 || value < -256 || value == 0x80)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0x1FF;\n-\t  value >>= 1;\n-\t  sword = value & 0x000F;\n-\t  sword |= (value & 0x00F0) << 4;\n-\t  sword |= left_val;\n-\t  bfd_put_16 (abfd, (bfd_vma) sword,\n-\t\t      (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_16:    /* word2.  */\n-\t  if (value > 65535 || value < -65536)\n-\t    return bfd_reloc_overflow;\n-\t  value >>= 1;\n-\t  value &= 0xFFFF;\n-\t  value = ((value & 0x8000) >> 15) | ((value & 0x7FFF) << 1);\n-\t  sword = value;\n-\t  bfd_put_16 (abfd, (bfd_vma) sword,\n-\t\t      (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_24_a:\t/* word1(0-7),word2.  */\n-\t  if (value > 16777215 || value < -16777216)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0x1FFFFFF;\n-\t  value >>= 1;\n-\t  value = ((value & 0x00007FFF) << 17) |\n-\t    ((value & 0x00800000) >> 7) | ((value & 0x007F8000) >> 15);\n-\t  value |= left_val;\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_24:    /* word2(0-3,8-11),word3.  */\n-\t  if (value > 16777215 || value < -16777216)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0x1FFFFFF;\n-\t  value >>= 1;\n-\n-\t  value = ((value & 0x007FFFFF) << 1) | ((value & 0x00800000) >> 23);\n-\n-\t  value = ((value & 0x0000FFFF) << 16) |\n-\t    ((value & 0x000F0000) >> 8) | ((value & 0x00F00000) >> 20);\n-\t  value |= left_val;\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_REGREL:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_04:\t/* word1(12-15) not scaled.  */\n-\t  if (value > 13 || value < 0)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xF;\n-\t  value |= left_val;\n-\t  bfd_put_8 (abfd, (bfd_vma) value, (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_04_a:\t/* word1(12-15) not scaled.  */\n-\t  if (value > 26 || value < 0)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0x1F;\n-\t  value >>= 1;\n-\t  value |= left_val;\n-\t  bfd_put_8 (abfd, (bfd_vma) value, (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_14:\t/* word1(4-5),word2(0-3,8-15).  */\n-\t  if (value < 0 || value > 16383)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0x3FFF;\n-\t  value = ((value & 0x000000c0) << 24) |\n-\t    ((value & 0x00003F00) << 16) |\n-\t    ((value & 0x0000000F) << 16) | (value & 0x00000030);\n-\t  value |= left_val;\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_16:\t/* word2.  */\n-\t  if (value > 65535 || value < 0)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xFFFF;\n-\t  sword = value;\n-\t  bfd_put_16 (abfd, (bfd_vma) sword,\n-\t\t      (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_20:\t/* word2(8-11),word3.  */\n-\t  /* if (value > 1048575 || value < 0) RELOC_ERROR(1); */\n-\t  value &= 0xFFFFF;\n-\t  sword = value & 0x0000FFFF;\n-\t  value = (value & 0x000F0000) >> 16;\n-\t  value |= left_val;\n-\t  bfd_put_8 (abfd, (bfd_vma) value, (unsigned char *) data + octets);\n-\t  bfd_put_16 (abfd, (bfd_vma) sword,\n-\t\t      (unsigned char *) data + octets + 1);\n-\t  if (neg2pos)\n-\t    {\n-\t      /* Change load/stor negative displ opcode\n-\t\t to load/stor positive displ opcode.  */\n-\t      value = bfd_get_8 (abfd, (char *) data + octets - 3);\n-\t      value &= 0xF7;\n-\t      value |= 0x2;\n-\t      bfd_put_8 (abfd, (bfd_vma) value,\n-\t\t\t (unsigned char *) data + octets - 3);\n-\t    }\n-\t  break;\n-\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_ABS:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_20:\t/* word1(0-3),word2.  */\n-\t  if (value > 1048575 || value < 0)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xFFFFF;\n-\t  value = ((value & 0x0000FFFF) << 16) |\n-\t    ((value & 0x000F0000) >> 16);\n-\t  value |= left_val;\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_24:\t/* word2(0-3,8-11),word3.  */\n-\t  /* if (value > 16777215 || value < 0) RELOC_ERROR(1); */\n-\t  value &= 0xFFFFFF;\n-\t  value = ((value & 0x0000FFFF) << 16) |\n-\t    ((value & 0x000F0000) >> 8) | ((value & 0x00F00000) >> 20);\n-\t  value |= left_val;\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-\n-    case R_16C_IMMED:\n-      switch (size)\n-\t{\n-\tcase R_S_16C_04:\t/* word1/2(4-7).  */\n-\t  if (value > 15 || value < -1)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xF;\n-\t  value <<= 4;\n-\t  value |= left_val;\n-\t  bfd_put_8 (abfd, (bfd_vma) value, (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_16:\t/* word2.  */\n-\t  if (value > 32767 || value < -32768)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xFFFF;\n-\t  sword = value;\n-\t  bfd_put_16 (abfd, (bfd_vma) sword,\n-\t\t      (unsigned char *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_20:\t/* word1(0-3),word2.  */\n-\t  if (value > 1048575 || value < 0)\n-\t    return bfd_reloc_overflow;\n-\t  value &= 0xFFFFF;\n-\t  value = ((value & 0x0000FFFF) << 16) |\n-\t    ((value & 0x000F0000) >> 16);\n-\t  value |= left_val;\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tcase R_S_16C_32:\t/* word2, word3.  */\n-\t  value &= 0xFFFFFFFF;\n-\t  value = ((value & 0x0000FFFF) << 16) |\n-\t    ((value & 0xFFFF0000) >> 16);\n-\t  bfd_put_32 (abfd, (bfd_vma) value, (bfd_byte *) data + octets);\n-\t  break;\n-\n-\tdefault:\n-\t  return bfd_reloc_notsupported;\n-\t}\n-      break;\n-    default:\n-      return bfd_reloc_notsupported;\n-    }\n-\n-  return bfd_reloc_ok;\n-}\n-\n-/* Relocate a CR16C ELF section.  */\n-\n-static bfd_boolean\n-elf32_cr16c_relocate_section (bfd *output_bfd,\n-\t\t\t      struct bfd_link_info *info,\n-\t\t\t      bfd *input_bfd,\n-\t\t\t      asection *input_section,\n-\t\t\t      bfd_byte *contents,\n-\t\t\t      Elf_Internal_Rela *relocs,\n-\t\t\t      Elf_Internal_Sym *local_syms,\n-\t\t\t      asection **local_sections)\n-{\n-  Elf_Internal_Shdr *symtab_hdr;\n-  struct elf_link_hash_entry **sym_hashes;\n-  Elf_Internal_Rela *rel, *relend;\n-\n-  symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;\n-  sym_hashes = elf_sym_hashes (input_bfd);\n-\n-  rel = relocs;\n-  relend = relocs + input_section->reloc_count;\n-  for (; rel < relend; rel++)\n-    {\n-      int r_type;\n-      reloc_howto_type *howto;\n-      unsigned long r_symndx;\n-      Elf_Internal_Sym *sym;\n-      asection *sec;\n-      struct elf_link_hash_entry *h;\n-      bfd_vma relocation;\n-      bfd_reloc_status_type r;\n-\n-      r_symndx = ELF32_R_SYM (rel->r_info);\n-      r_type = ELF32_R_TYPE (rel->r_info);\n-      howto = elf_howto_table + r_type;\n-\n-      h = NULL;\n-      sym = NULL;\n-      sec = NULL;\n-      if (r_symndx < symtab_hdr->sh_info)\n-\t{\n-\t  sym = local_syms + r_symndx;\n-\t  sec = local_sections[r_symndx];\n-\t  relocation = _bfd_elf_rela_local_sym (output_bfd, sym, &sec, rel);\n-\t}\n-      else\n-\t{\n-\t  bfd_boolean unresolved_reloc, warned, ignored;\n-\n-\t  RELOC_FOR_GLOBAL_SYMBOL (info, input_bfd, input_section, rel,\n-\t\t\t\t   r_symndx, symtab_hdr, sym_hashes,\n-\t\t\t\t   h, sec, relocation,\n-\t\t\t\t   unresolved_reloc, warned, ignored);\n-\t}\n-\n-      if (sec != NULL && discarded_section (sec))\n-\tRELOC_AGAINST_DISCARDED_SECTION (info, input_bfd, input_section,\n-\t\t\t\t\t rel, 1, relend, howto, 0, contents);\n-\n-      if (bfd_link_relocatable (info))\n-\t{\n-\t  /* This is a relocatable link.  We don't have to change\n-\t     anything, unless the reloc is against a section symbol,\n-\t     in which case we have to adjust according to where the\n-\t     section symbol winds up in the output section.  */\n-\t  if (sym != NULL && ELF_ST_TYPE (sym->st_info) == STT_SECTION)\n-\t    rel->r_addend += sec->output_offset;\n-\t  continue;\n-\t}\n-\n-      r = cr16c_elf_final_link_relocate (howto, input_bfd, output_bfd,\n-\t\t\t\t\t input_section,\n-\t\t\t\t\t contents, rel->r_offset,\n-\t\t\t\t\t relocation, rel->r_addend,\n-\t\t\t\t\t info, sec, h == NULL);\n-\n-      if (r != bfd_reloc_ok)\n-\t{\n-\t  const char *name;\n-\t  const char *msg = (const char *) 0;\n-\n-\t  if (h != NULL)\n-\t    name = h->root.root.string;\n-\t  else\n-\t    {\n-\t      name = (bfd_elf_string_from_elf_section\n-\t\t      (input_bfd, symtab_hdr->sh_link, sym->st_name));\n-\t      if (name == NULL || *name == '\\0')\n-\t\tname = bfd_section_name (sec);\n-\t    }\n-\n-\t  switch (r)\n-\t    {\n-\t    case bfd_reloc_overflow:\n-\t      (*info->callbacks->reloc_overflow)\n-\t\t(info, (h ? &h->root : NULL), name, howto->name,\n-\t\t (bfd_vma) 0, input_bfd, input_section, rel->r_offset);\n-\t      break;\n-\n-\t    case bfd_reloc_undefined:\n-\t      (*info->callbacks->undefined_symbol)\n-\t\t(info, name, input_bfd, input_section, rel->r_offset, TRUE);\n-\t      break;\n-\n-\t    case bfd_reloc_outofrange:\n-\t      msg = _(\"internal error: out of range error\");\n-\t      goto common_error;\n-\n-\t    case bfd_reloc_notsupported:\n-\t      msg = _(\"internal error: unsupported relocation error\");\n-\t      goto common_error;\n-\n-\t    case bfd_reloc_dangerous:\n-\t      msg = _(\"internal error: dangerous error\");\n-\t      goto common_error;\n-\n-\t    default:\n-\t      msg = _(\"internal error: unknown error\");\n-\t      /* fall through */\n-\n-\t    common_error:\n-\t      (*info->callbacks->warning) (info, msg, name, input_bfd,\n-\t\t\t\t\t   input_section, rel->r_offset);\n-\t      break;\n-\t    }\n-\t}\n-    }\n-\n-  return TRUE;\n-}\n-\n-/* CR16C ELF uses three common sections:\n-   One is for default common symbols (placed in usual common section).\n-   Second is for near common symbols (placed in \"ncommon\" section).\n-   Third is for far common symbols (placed in \"fcommon\" section).\n-   The following implementation is based on elf32-mips architecture */\n-\n-static asection  cr16c_elf_fcom_section;\n-static asymbol   cr16c_elf_fcom_symbol;\n-static asymbol * cr16c_elf_fcom_symbol_ptr;\n-static asection  cr16c_elf_ncom_section;\n-static asymbol   cr16c_elf_ncom_symbol;\n-static asymbol * cr16c_elf_ncom_symbol_ptr;\n-\n-/* Given a BFD section, try to locate the\n-   corresponding ELF section index.  */\n-\n-static bfd_boolean\n-elf32_cr16c_section_from_bfd_section (bfd *abfd ATTRIBUTE_UNUSED,\n-\t\t\t\t      asection *sec,\n-\t\t\t\t      int *retval)\n-{\n-  if (strcmp (bfd_section_name (sec), \".fcommon\") == 0)\n-    *retval = SHN_CR16C_FCOMMON;\n-  else if (strcmp (bfd_section_name (sec), \".ncommon\") == 0)\n-    *retval = SHN_CR16C_NCOMMON;\n-  else\n-    return FALSE;\n-\n-  return TRUE;\n-}\n-\n-/* Handle the special CR16C section numbers that a symbol may use.  */\n-\n-static void\n-elf32_cr16c_symbol_processing (bfd *abfd ATTRIBUTE_UNUSED,\n-\t\t\t       asymbol *asym)\n-{\n-  elf_symbol_type *elfsym = (elf_symbol_type *) asym;\n-  unsigned int indx;\n-\n-  indx = elfsym->internal_elf_sym.st_shndx;\n-\n-  switch (indx)\n-    {\n-    case SHN_CR16C_FCOMMON:\n-      if (cr16c_elf_fcom_section.name == NULL)\n-\t{\n-\t  /* Initialize the far common section.  */\n-\t  cr16c_elf_fcom_section.name = \".fcommon\";\n-\t  cr16c_elf_fcom_section.flags = SEC_IS_COMMON | SEC_ALLOC;\n-\t  cr16c_elf_fcom_section.output_section = &cr16c_elf_fcom_section;\n-\t  cr16c_elf_fcom_section.symbol = &cr16c_elf_fcom_symbol;\n-\t  cr16c_elf_fcom_section.symbol_ptr_ptr = &cr16c_elf_fcom_symbol_ptr;\n-\t  cr16c_elf_fcom_symbol.name = \".fcommon\";\n-\t  cr16c_elf_fcom_symbol.flags = BSF_SECTION_SYM;\n-\t  cr16c_elf_fcom_symbol.section = &cr16c_elf_fcom_section;\n-\t  cr16c_elf_fcom_symbol_ptr = &cr16c_elf_fcom_symbol;\n-\t}\n-      asym->section = &cr16c_elf_fcom_section;\n-      asym->value = elfsym->internal_elf_sym.st_size;\n-      break;\n-    case SHN_CR16C_NCOMMON:\n-      if (cr16c_elf_ncom_section.name == NULL)\n-\t{\n-\t  /* Initialize the far common section.  */\n-\t  cr16c_elf_ncom_section.name = \".ncommon\";\n-\t  cr16c_elf_ncom_section.flags = SEC_IS_COMMON | SEC_ALLOC;\n-\t  cr16c_elf_ncom_section.output_section = &cr16c_elf_ncom_section;\n-\t  cr16c_elf_ncom_section.symbol = &cr16c_elf_ncom_symbol;\n-\t  cr16c_elf_ncom_section.symbol_ptr_ptr = &cr16c_elf_ncom_symbol_ptr;\n-\t  cr16c_elf_ncom_symbol.name = \".ncommon\";\n-\t  cr16c_elf_ncom_symbol.flags = BSF_SECTION_SYM;\n-\t  cr16c_elf_ncom_symbol.section = &cr16c_elf_ncom_section;\n-\t  cr16c_elf_ncom_symbol_ptr = &cr16c_elf_ncom_symbol;\n-\t}\n-      asym->section = &cr16c_elf_ncom_section;\n-      asym->value = elfsym->internal_elf_sym.st_size;\n-      break;\n-    }\n-}\n-\n-/* Hook called by the linker routine which adds symbols from an object\n-   file.  We must handle the special cr16c section numbers here.  */\n-\n-static bfd_boolean\n-elf32_cr16c_add_symbol_hook (bfd *abfd,\n-\t\t\t     struct bfd_link_info *info ATTRIBUTE_UNUSED,\n-\t\t\t     Elf_Internal_Sym *sym,\n-\t\t\t     const char **namep ATTRIBUTE_UNUSED,\n-\t\t\t     flagword *flagsp ATTRIBUTE_UNUSED,\n-\t\t\t     asection **secp,\n-\t\t\t     bfd_vma *valp)\n-{\n-  unsigned int indx = sym->st_shndx;\n-\n-  switch (indx)\n-    {\n-    case SHN_CR16C_FCOMMON:\n-      *secp = bfd_make_section_old_way (abfd, \".fcommon\");\n-      (*secp)->flags |= SEC_IS_COMMON;\n-      *valp = sym->st_size;\n-      break;\n-    case SHN_CR16C_NCOMMON:\n-      *secp = bfd_make_section_old_way (abfd, \".ncommon\");\n-      (*secp)->flags |= SEC_IS_COMMON;\n-      *valp = sym->st_size;\n-      break;\n-    }\n-\n-  return TRUE;\n-}\n-\n-static int\n-elf32_cr16c_link_output_symbol_hook (struct bfd_link_info *info ATTRIBUTE_UNUSED,\n-\t\t\t\t     const char *name ATTRIBUTE_UNUSED,\n-\t\t\t\t     Elf_Internal_Sym *sym,\n-\t\t\t\t     asection *input_sec,\n-\t\t\t\t     struct elf_link_hash_entry *h ATTRIBUTE_UNUSED)\n-{\n-  /* If we see a common symbol, which implies a relocatable link, then\n-     if a symbol was in a special common section in an input file, mark\n-     it as a special common in the output file.  */\n-\n-  if (sym->st_shndx == SHN_COMMON)\n-    {\n-      if (strcmp (input_sec->name, \".fcommon\") == 0)\n-\tsym->st_shndx = SHN_CR16C_FCOMMON;\n-      else if (strcmp (input_sec->name, \".ncommon\") == 0)\n-\tsym->st_shndx = SHN_CR16C_NCOMMON;\n-    }\n-\n-  return 1;\n-}\n-\n-/* Definitions for setting CR16C target vector.  */\n-#define TARGET_LITTLE_SYM\t\tcr16c_elf32_vec\n-#define TARGET_LITTLE_NAME\t\t\"elf32-cr16c\"\n-#define ELF_ARCH\t\t\tbfd_arch_cr16c\n-#define ELF_MACHINE_CODE\t\tEM_CR\n-#define ELF_MAXPAGESIZE\t\t\t0x1\n-#define elf_symbol_leading_char\t\t'_'\n-\n-#define bfd_elf32_bfd_reloc_type_lookup\t\telf_cr16c_reloc_type_lookup\n-#define bfd_elf32_bfd_reloc_name_lookup\telf_cr16c_reloc_name_lookup\n-#define elf_info_to_howto\t\t\telf_cr16c_info_to_howto\n-#define elf_info_to_howto_rel\t\t\telf_cr16c_info_to_howto_rel\n-#define elf_backend_relocate_section\t\telf32_cr16c_relocate_section\n-#define elf_backend_symbol_processing\t\telf32_cr16c_symbol_processing\n-#define elf_backend_section_from_bfd_section\telf32_cr16c_section_from_bfd_section\n-#define elf_backend_add_symbol_hook\t\telf32_cr16c_add_symbol_hook\n-#define elf_backend_link_output_symbol_hook\telf32_cr16c_link_output_symbol_hook\n-\n-#define elf_backend_can_gc_sections     1\n-\n-#include \"elf32-target.h\""
    },
    {
      "sha": "77b732ee4b08229889bfa3e2a078a7ff90d19caa",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -2579,46 +2579,6 @@ static const char *const bfd_reloc_code_real_names[] = { \"@@uninitialized@@\",\n   \"BFD_RELOC_M68HC12_LO8XG\",\n   \"BFD_RELOC_M68HC12_HI8XG\",\n   \"BFD_RELOC_S12Z_15_PCREL\",\n-  \"BFD_RELOC_16C_NUM08\",\n-  \"BFD_RELOC_16C_NUM08_C\",\n-  \"BFD_RELOC_16C_NUM16\",\n-  \"BFD_RELOC_16C_NUM16_C\",\n-  \"BFD_RELOC_16C_NUM32\",\n-  \"BFD_RELOC_16C_NUM32_C\",\n-  \"BFD_RELOC_16C_DISP04\",\n-  \"BFD_RELOC_16C_DISP04_C\",\n-  \"BFD_RELOC_16C_DISP08\",\n-  \"BFD_RELOC_16C_DISP08_C\",\n-  \"BFD_RELOC_16C_DISP16\",\n-  \"BFD_RELOC_16C_DISP16_C\",\n-  \"BFD_RELOC_16C_DISP24\",\n-  \"BFD_RELOC_16C_DISP24_C\",\n-  \"BFD_RELOC_16C_DISP24a\",\n-  \"BFD_RELOC_16C_DISP24a_C\",\n-  \"BFD_RELOC_16C_REG04\",\n-  \"BFD_RELOC_16C_REG04_C\",\n-  \"BFD_RELOC_16C_REG04a\",\n-  \"BFD_RELOC_16C_REG04a_C\",\n-  \"BFD_RELOC_16C_REG14\",\n-  \"BFD_RELOC_16C_REG14_C\",\n-  \"BFD_RELOC_16C_REG16\",\n-  \"BFD_RELOC_16C_REG16_C\",\n-  \"BFD_RELOC_16C_REG20\",\n-  \"BFD_RELOC_16C_REG20_C\",\n-  \"BFD_RELOC_16C_ABS20\",\n-  \"BFD_RELOC_16C_ABS20_C\",\n-  \"BFD_RELOC_16C_ABS24\",\n-  \"BFD_RELOC_16C_ABS24_C\",\n-  \"BFD_RELOC_16C_IMM04\",\n-  \"BFD_RELOC_16C_IMM04_C\",\n-  \"BFD_RELOC_16C_IMM16\",\n-  \"BFD_RELOC_16C_IMM16_C\",\n-  \"BFD_RELOC_16C_IMM20\",\n-  \"BFD_RELOC_16C_IMM20_C\",\n-  \"BFD_RELOC_16C_IMM24\",\n-  \"BFD_RELOC_16C_IMM24_C\",\n-  \"BFD_RELOC_16C_IMM32\",\n-  \"BFD_RELOC_16C_IMM32_C\",\n   \"BFD_RELOC_CR16_NUM8\",\n   \"BFD_RELOC_CR16_NUM16\",\n   \"BFD_RELOC_CR16_NUM32\","
    },
    {
      "sha": "04c4c0754f3e22e890d8f53aff67cadd1ea68907",
      "filename": "bfd/po/SRC-POTFILES.in",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/po/SRC-POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/po/SRC-POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/po/SRC-POTFILES.in?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -53,7 +53,6 @@ cpu-avr.c\n cpu-bfin.c\n cpu-bpf.c\n cpu-cr16.c\n-cpu-cr16c.c\n cpu-cris.c\n cpu-crx.c\n cpu-csky.c\n@@ -165,7 +164,6 @@ elf32-bfin.c\n elf32-bfin.h\n elf32-cr16.c\n elf32-cr16.h\n-elf32-cr16c.c\n elf32-cris.c\n elf32-crx.c\n elf32-csky.c"
    },
    {
      "sha": "ae71f6b0054c53e4594add9c799cc4034dfd9368",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 0,
      "deletions": 82,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -5945,88 +5945,6 @@ ENUMDOC\n   Freescale S12Z reloc.\n   This is a 15 bit relative address.  If the most significant bits are all zero\n   then it may be truncated to 8 bits.\n-ENUM\n-  BFD_RELOC_16C_NUM08\n-ENUMX\n-  BFD_RELOC_16C_NUM08_C\n-ENUMX\n-  BFD_RELOC_16C_NUM16\n-ENUMX\n-  BFD_RELOC_16C_NUM16_C\n-ENUMX\n-  BFD_RELOC_16C_NUM32\n-ENUMX\n-  BFD_RELOC_16C_NUM32_C\n-ENUMX\n-  BFD_RELOC_16C_DISP04\n-ENUMX\n-  BFD_RELOC_16C_DISP04_C\n-ENUMX\n-  BFD_RELOC_16C_DISP08\n-ENUMX\n-  BFD_RELOC_16C_DISP08_C\n-ENUMX\n-  BFD_RELOC_16C_DISP16\n-ENUMX\n-  BFD_RELOC_16C_DISP16_C\n-ENUMX\n-  BFD_RELOC_16C_DISP24\n-ENUMX\n-  BFD_RELOC_16C_DISP24_C\n-ENUMX\n-  BFD_RELOC_16C_DISP24a\n-ENUMX\n-  BFD_RELOC_16C_DISP24a_C\n-ENUMX\n-  BFD_RELOC_16C_REG04\n-ENUMX\n-  BFD_RELOC_16C_REG04_C\n-ENUMX\n-  BFD_RELOC_16C_REG04a\n-ENUMX\n-  BFD_RELOC_16C_REG04a_C\n-ENUMX\n-  BFD_RELOC_16C_REG14\n-ENUMX\n-  BFD_RELOC_16C_REG14_C\n-ENUMX\n-  BFD_RELOC_16C_REG16\n-ENUMX\n-  BFD_RELOC_16C_REG16_C\n-ENUMX\n-  BFD_RELOC_16C_REG20\n-ENUMX\n-  BFD_RELOC_16C_REG20_C\n-ENUMX\n-  BFD_RELOC_16C_ABS20\n-ENUMX\n-  BFD_RELOC_16C_ABS20_C\n-ENUMX\n-  BFD_RELOC_16C_ABS24\n-ENUMX\n-  BFD_RELOC_16C_ABS24_C\n-ENUMX\n-  BFD_RELOC_16C_IMM04\n-ENUMX\n-  BFD_RELOC_16C_IMM04_C\n-ENUMX\n-  BFD_RELOC_16C_IMM16\n-ENUMX\n-  BFD_RELOC_16C_IMM16_C\n-ENUMX\n-  BFD_RELOC_16C_IMM20\n-ENUMX\n-  BFD_RELOC_16C_IMM20_C\n-ENUMX\n-  BFD_RELOC_16C_IMM24\n-ENUMX\n-  BFD_RELOC_16C_IMM24_C\n-ENUMX\n-  BFD_RELOC_16C_IMM32\n-ENUMX\n-  BFD_RELOC_16C_IMM32_C\n-ENUMDOC\n-  NS CR16C Relocations.\n \n ENUM\n   BFD_RELOC_CR16_NUM8"
    },
    {
      "sha": "fb0c669e7f7046409a97f16eabdee6671bf3899f",
      "filename": "bfd/targets.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/targets.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/bfd/targets.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/targets.c?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -697,7 +697,6 @@ extern const bfd_target avr_elf32_vec;\n extern const bfd_target bfin_elf32_vec;\n extern const bfd_target bfin_elf32_fdpic_vec;\n extern const bfd_target cr16_elf32_vec;\n-extern const bfd_target cr16c_elf32_vec;\n extern const bfd_target cris_aout_vec;\n extern const bfd_target cris_elf32_vec;\n extern const bfd_target cris_elf32_us_vec;\n@@ -1029,7 +1028,6 @@ static const bfd_target * const _bfd_target_vector[] =\n \t&bfin_elf32_fdpic_vec,\n \n \t&cr16_elf32_vec,\n-\t&cr16c_elf32_vec,\n \n \t&cris_aout_vec,\n \t&cris_elf32_vec,"
    },
    {
      "sha": "64e59d9b7ce3acd9515c48f8ceee095c77cc02c4",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -1,3 +1,7 @@\n+2019-11-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/cr16c.h: Delete.\n+\n 2019-10-29  Andrew Eikum  <aeikum@codeweavers.com>\n \n \t* coff/internal.h (struct internal_extra_pe_filehdr): Use ints"
    },
    {
      "sha": "523e548ba866b791364fa35d9727fa7c99efb5d6",
      "filename": "include/elf/cr16c.h",
      "status": "removed",
      "additions": 0,
      "deletions": 258,
      "changes": 258,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/984b909a237441995d41a2a04f9b31bd0c3dad2c/include/elf/cr16c.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/984b909a237441995d41a2a04f9b31bd0c3dad2c/include/elf/cr16c.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/cr16c.h?ref=984b909a237441995d41a2a04f9b31bd0c3dad2c",
      "patch": "@@ -1,258 +0,0 @@\n-/* CR16C ELF support for BFD.\n-   Copyright (C) 2004-2019 Free Software Foundation, Inc.\n-\n-   This file is part of BFD, the Binary File Descriptor library.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program; if not, write to the Free Software Foundation,\n-   Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */\n-\n-#ifndef _ELF_CR16C_H\n-#define _ELF_CR16C_H\n-\n-#include \"bfd.h\"\n-#include \"elf/reloc-macros.h\"\n-\n-/* Creating indices for reloc_map_index array.  */\n-START_RELOC_NUMBERS (elf_cr16c_reloc_type)\n-     RELOC_NUMBER (RINDEX_16C_NUM08,\t\t0)\n-     RELOC_NUMBER (RINDEX_16C_NUM08_C,\t\t1)\n-     RELOC_NUMBER (RINDEX_16C_NUM16,\t\t2)\n-     RELOC_NUMBER (RINDEX_16C_NUM16_C,\t\t3)\n-     RELOC_NUMBER (RINDEX_16C_NUM32,\t\t4)\n-     RELOC_NUMBER (RINDEX_16C_NUM32_C,\t\t5)\n-     RELOC_NUMBER (RINDEX_16C_DISP04,\t\t6)\n-     RELOC_NUMBER (RINDEX_16C_DISP04_C,\t\t7)\n-     RELOC_NUMBER (RINDEX_16C_DISP08,\t\t8)\n-     RELOC_NUMBER (RINDEX_16C_DISP08_C,\t\t9)\n-     RELOC_NUMBER (RINDEX_16C_DISP16,\t\t10)\n-     RELOC_NUMBER (RINDEX_16C_DISP16_C,\t\t11)\n-     RELOC_NUMBER (RINDEX_16C_DISP24,\t\t12)\n-     RELOC_NUMBER (RINDEX_16C_DISP24_C,\t\t13)\n-     RELOC_NUMBER (RINDEX_16C_DISP24a,\t\t14)\n-     RELOC_NUMBER (RINDEX_16C_DISP24a_C,\t15)\n-     RELOC_NUMBER (RINDEX_16C_REG04,\t\t16)\n-     RELOC_NUMBER (RINDEX_16C_REG04_C,\t\t17)\n-     RELOC_NUMBER (RINDEX_16C_REG04a,\t\t18)\n-     RELOC_NUMBER (RINDEX_16C_REG04a_C,\t\t19)\n-     RELOC_NUMBER (RINDEX_16C_REG14,\t\t20)\n-     RELOC_NUMBER (RINDEX_16C_REG14_C,\t\t21)\n-     RELOC_NUMBER (RINDEX_16C_REG16,\t\t22)\n-     RELOC_NUMBER (RINDEX_16C_REG16_C,\t\t23)\n-     RELOC_NUMBER (RINDEX_16C_REG20,\t\t24)\n-     RELOC_NUMBER (RINDEX_16C_REG20_C,\t\t25)\n-     RELOC_NUMBER (RINDEX_16C_ABS20,\t\t26)\n-     RELOC_NUMBER (RINDEX_16C_ABS20_C,\t\t27)\n-     RELOC_NUMBER (RINDEX_16C_ABS24,\t\t28)\n-     RELOC_NUMBER (RINDEX_16C_ABS24_C,\t\t29)\n-     RELOC_NUMBER (RINDEX_16C_IMM04,\t\t30)\n-     RELOC_NUMBER (RINDEX_16C_IMM04_C,\t\t31)\n-     RELOC_NUMBER (RINDEX_16C_IMM16,\t\t32)\n-     RELOC_NUMBER (RINDEX_16C_IMM16_C,\t\t33)\n-     RELOC_NUMBER (RINDEX_16C_IMM20,\t\t34)\n-     RELOC_NUMBER (RINDEX_16C_IMM20_C,\t\t35)\n-     RELOC_NUMBER (RINDEX_16C_IMM24,\t\t36)\n-     RELOC_NUMBER (RINDEX_16C_IMM24_C,\t\t37)\n-     RELOC_NUMBER (RINDEX_16C_IMM32,\t\t38)\n-     RELOC_NUMBER (RINDEX_16C_IMM32_C,\t\t39)\n-END_RELOC_NUMBERS (RINDEX_16C_MAX)\n-\n-/* CR16C Relocation Types ('cr_reloc_type' entry in the reloc_map structure).\n-   The relocation constant name is determined as follows :\n-\n-   R_16C_<format><size>[_C]\n-\n-   Where :\n-\n-     <format> is one of the following:\n-\tNUM  - R_NUMBER mnemonic,\n-\tDISP - R_16C_DISPL mnemonic,\n-\tREG  - R_16C_REGREL mnemonic,\n-\tABS  - R_16C_ABS mnemonic,\n-\tIMM  - R_16C_IMMED mnemonic,\n-     <size> stands for R_S_16C_<size> \n-     _C means 'code label' and is only added when R_ADDRTYPE subfield \n-     is of type R_CODE_ADDR.  */\n-   \n-/* The table below shows what the hex digits in the definition of the\n-   relocation type constants correspond to.\n-   ------------------------------------------------------------------\n-\tR_SIZESP\tR_FORMAT\tR_RELTO\t      R_ADDRTYPE\n-   ------------------------------------------------------------------  */\n-/*\tR_S_16C_08\tR_NUMBER \tR_ABS \t      R_ADDRESS */\n-#define R_16C_NUM08\t0X0001\n-\n-/*\tR_S_16C_08\tR_NUMBER \tR_ABS \t      R_CODE_ADDR */\n-#define R_16C_NUM08_C\t0X0006\n-\n-/*\tR_S_16C_16\tR_NUMBER \tR_ABS \t      R_ADDRESS */\n-#define R_16C_NUM16\t0X1001\n-\n-/*\tR_S_16C_16\tR_NUMBER \tR_ABS \t      R_CODE_ADDR */\n-#define R_16C_NUM16_C \t0X1006\n-\n-/*      R_S_16C_32      R_NUMBER\tR_ABS\t      R_ADDRESS */\n-#define R_16C_NUM32     0X2001\n-\n-/*      R_S_16C_32      R_NUMBER\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_NUM32_C   0X2006\n-\n-/*\tR_S_16C_04\tR_16C_DISPL \tR_PCREL\t      R_ADDRESS */\n-#define R_16C_DISP04\t0X5411\n-\n-/*\tR_S_16C_04\tR_16C_DISPL \tR_PCREL\t      R_CODE_ADDR */\n-#define R_16C_DISP04_C\t0X5416\n-\n-/*\tR_S_16C_08\tR_16C_DISPL \tR_PCREL\t      R_ADDRESS */\n-#define R_16C_DISP08\t0X0411\n-\n-/*\tR_S_16C_08\tR_16C_DISPL \tR_PCREL\t      R_CODE_ADDR */\n-#define R_16C_DISP08_C\t0X0416\n-\n-/*\tR_S_16C_16\tR_16C_DISPL \tR_PCREL\t      R_ADDRESS */\n-#define R_16C_DISP16\t0X1411\n-\n-/*\tR_S_16C_16\tR_16C_DISPL \tR_PCREL\t      R_CODE_ADDR */\n-#define R_16C_DISP16_C\t0X1416\n-\n-/*\tR_S_16C_24\tR_16C_DISPL \tR_PCREL\t      R_ADDRESS */\n-#define R_16C_DISP24\t0X7411\n-\n-/*\tR_S_16C_24\tR_16C_DISPL \tR_PCREL\t      R_CODE_ADDR */\n-#define R_16C_DISP24_C\t0X7416\n-\n-/*\tR_S_16C_24a\tR_16C_DISPL \tR_PCREL\t      R_ADDRESS */\n-#define R_16C_DISP24a\t0X6411\n-\n-/*\tR_S_16C_24a\tR_16C_DISPL \tR_PCREL\t      R_CODE_ADDR */\n-#define R_16C_DISP24a_C\t0X6416\n-\n-/*\tR_S_16C_04\tR_16C_REGREL \tR_ABS \t      R_ADDRESS */\n-#define R_16C_REG04\t0X5201\n-\n-/*\tR_S_16C_04\tR_16C_REGREL \tR_ABS \t      R_CODE_ADDR */\n-#define R_16C_REG04_C\t0X5206\n-\n-/*\tR_S_16C_04_a\tR_16C_REGREL \tR_ABS \t      R_ADDRESS */\n-#define R_16C_REG04a\t0X4201\n-\n-/*\tR_S_16C_04_a\tR_16C_REGREL \tR_ABS \t      R_CODE_ADDR */\n-#define R_16C_REG04a_C\t0X4206\n-\n-/*\tR_S_16C_14\tR_16C_REGREL \tR_ABS \t      R_ADDRESS */\n-#define R_16C_REG14\t0X3201\n-\n-/*\tR_S_16C_14\tR_16C_REGREL \tR_ABS \t      R_CODE_ADDR */\n-#define R_16C_REG14_C\t0X3206\n-\n-/*\tR_S_16C_16\tR_16C_REGREL \tR_ABS \t      R_ADDRESS */\n-#define R_16C_REG16\t0X1201\n-\n-/*\tR_S_16C_16\tR_16C_REGREL \tR_ABS \t      R_CODE_ADDR */\n-#define R_16C_REG16_C\t0X1206\n-\n-/*\tR_S_16C_20\tR_16C_REGREL \tR_ABS \t      R_ADDRESS */\n-#define R_16C_REG20\t0X8201\n-\n-/*\tR_S_16C_20\tR_16C_REGREL \tR_ABS \t      R_CODE_ADDR */\n-#define R_16C_REG20_C\t0X8206\n-\n-/*      R_S_16C_20      R_16C_ABS\tR_ABS\t      R_ADDRESS */\n-#define R_16C_ABS20     0X8101\n-\n-/*      R_S_16C_20      R_16C_ABS\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_ABS20_C   0X8106\n-\n-/*      R_S_16C_24      R_16C_ABS\tR_ABS\t      R_ADDRESS */\n-#define R_16C_ABS24     0X7101\n-\n-/*      R_S_16C_24      R_16C_ABS\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_ABS24_C   0X7106\n-\n-/*      R_S_16C_04      R_16C_IMMED\tR_ABS\t      R_ADDRESS */\n-#define R_16C_IMM04     0X5301\n-\n-/*      R_S_16C_04      R_16C_IMMED\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_IMM04_C   0X5306\n-\n-/*      R_S_16C_16      R_16C_IMMED\tR_ABS\t      R_ADDRESS */\n-#define R_16C_IMM16     0X1301\n-\n-/*      R_S_16C_16      R_16C_IMMED\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_IMM16_C   0X1306\n-\n-/*      R_S_16C_20      R_16C_IMMED\tR_ABS\t      R_ADDRESS */\n-#define R_16C_IMM20     0X8301\n-\n-/*      R_S_16C_20      R_16C_IMMED\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_IMM20_C   0X8306\n-\n-/*      R_S_16C_24      R_16C_IMMED\tR_ABS\t      R_ADDRESS */\n-#define R_16C_IMM24     0X7301\n-\n-/*      R_S_16C_24      R_16C_IMMED\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_IMM24_C   0X7306\n-\n-/*      R_S_16C_32      R_16C_IMMED\tR_ABS\t      R_ADDRESS */\n-#define R_16C_IMM32     0X2301\n-\n-/*      R_S_16C_32      R_16C_IMMED\tR_ABS\t      R_CODE_ADDR */\n-#define R_16C_IMM32_C   0X2306\n-\n-\n-/* Relocation item type.  */\n-#define   R_ADDRTYPE\t 0x000f\n-#define   R_ADDRESS      0x0001    /* Take address of symbol.  */\n-#define   R_CODE_ADDR    0x0006    /* Take address of symbol divided by 2.  */\n-\n-/* Relocation action.  */\n-#define   R_RELTO        0x00f0\n-#define   R_ABS          0x0000    /* Keep symbol's address as such.  */\n-#define   R_PCREL        0x0010    /* Subtract the pc address of hole.  */\n-\n-/* Relocation item data format.  */\n-#define   R_FORMAT       0x0f00\n-#define   R_NUMBER       0x0000    /* Retain as two's complement value.  */\n-#define   R_16C_DISPL    0x0400    /* CR16C displacement type.  */\n-#define   R_16C_ABS      0x0100    /* CR16C absolute type.  */\n-#define   R_16C_REGREL   0x0200    /* CR16C register-relative type.  */\n-#define   R_16C_IMMED    0x0300    /* CR16C immediate type.  */\n-\n-/* Relocation item size. */\n-#define   R_SIZESP       0xf000\n-#define   R_S_16C_04     0x5000\n-#define   R_S_16C_04_a   0x4000\n-#define   R_S_16C_08\t 0x0000\n-#define   R_S_16C_14     0x3000\n-#define   R_S_16C_16\t 0x1000\n-#define   R_S_16C_20     0x8000\n-#define   R_S_16C_24_a   0x6000\n-#define   R_S_16C_24\t 0x7000\n-#define   R_S_16C_32     0x2000\n-\n-\n-/* Processor specific section indices.  These sections do not actually\n-   exist.  Symbols with a st_shndx field corresponding to one of these\n-   values have a special meaning.  */\n-\n-/* Far common symbol.  */\n-#define SHN_CR16C_FCOMMON\tSHN_LORESERVE\n-#define SHN_CR16C_NCOMMON\t(SHN_LORESERVE + 1)\n-\n-typedef struct reloc_map\n-{\n-  unsigned short            cr_reloc_type;  /* CR relocation type.  */\n-  bfd_reloc_code_real_type  bfd_reloc_enum; /* BFD relocation enum.  */\n-} RELOC_MAP;\n-\n-#endif /* _ELF_CR16C_H */"
    },
    {
      "sha": "ea262034e060b2da84e8ebb0e7e9808b318df30c",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -1,3 +1,13 @@\n+2019-11-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* emulparams/elf32cr16c.sh: Delete.\n+\t* scripttempl/elf32cr16c.sc: Delete.\n+\t* Makefile.am,\n+\t* configure.tgt: Remove cr16c support.\n+\t* NEWS: Mention removal of cr16c.\n+\t* Makefile.in,\n+\t* po/BLD-POTFILES.in: Regenerate.\n+\n 2019-11-07  Alan Modra  <amodra@gmail.com>\n \n \t* configure.tgt: Order targets by cpu."
    },
    {
      "sha": "ddc7a78368f7a476b5223f2ae5e6439ff326a52f",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -238,7 +238,6 @@ ALL_EMULATION_SOURCES = \\\n \teelf32bfin.c \\\n \teelf32bfinfd.c \\\n \teelf32cr16.c \\\n-\teelf32cr16c.c \\\n \teelf32crx.c \\\n \teelf32epiphany.c \\\n \teelf32epiphany_4x4.c \\\n@@ -729,7 +728,6 @@ $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfin.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfinfd.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16.Pc@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16c.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32crx.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany_4x4.Pc@am__quote@"
    },
    {
      "sha": "fdf06128b27ba9b8214d158ee17627c391ca6bdd",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -728,7 +728,6 @@ ALL_EMULATION_SOURCES = \\\n \teelf32bfin.c \\\n \teelf32bfinfd.c \\\n \teelf32cr16.c \\\n-\teelf32cr16c.c \\\n \teelf32crx.c \\\n \teelf32epiphany.c \\\n \teelf32epiphany_4x4.c \\\n@@ -1296,7 +1295,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32btsmipn32_fbsd.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16.Po@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16c.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32crx.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmip.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32ebmipvxworks.Po@am__quote@\n@@ -2336,7 +2334,6 @@ $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfin.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32bfinfd.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16.Pc@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32cr16c.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32crx.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32epiphany_4x4.Pc@am__quote@"
    },
    {
      "sha": "bc21c39c05bfd27447996359941b7ee9b42795af",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -1,5 +1,7 @@\n -*- text -*-\n \n+* cr16c support removed.\n+\n Changes in 2.33:\n \n * Add command-line option --no-print-map-discarded."
    },
    {
      "sha": "c0c8a697d6b281967d4868f557e2ece14c269246",
      "filename": "ld/configure.tgt",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.tgt?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -224,8 +224,6 @@ bpf-*-*)\t\ttarg_emul=elf64bpf\n \t\t\t;;\n cr16-*-elf*)\t\ttarg_emul=elf32cr16\n \t\t\t;;\n-cr16c-*-elf*)\t\ttarg_emul=elf32cr16c\n-\t\t\t;;\n cris-*-*aout*)\t\ttarg_emul=crisaout\n \t\t\ttarg_extra_emuls=\"criself crislinux\"\n \t\t\ttarg_extra_libpath=$targ_extra_emuls"
    },
    {
      "sha": "986d84df5bbfd00671449eeefd56541eb99999b4",
      "filename": "ld/emulparams/elf32cr16c.sh",
      "status": "removed",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/984b909a237441995d41a2a04f9b31bd0c3dad2c/ld/emulparams/elf32cr16c.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/984b909a237441995d41a2a04f9b31bd0c3dad2c/ld/emulparams/elf32cr16c.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf32cr16c.sh?ref=984b909a237441995d41a2a04f9b31bd0c3dad2c",
      "patch": "@@ -1,5 +0,0 @@\n-SCRIPT_NAME=elf32cr16c\n-TEMPLATE_NAME=elf\n-OUTPUT_FORMAT=\"elf32-cr16c\"\n-ARCH=cr16c\n-ENTRY=_start"
    },
    {
      "sha": "846f2ab5a9bee20772de83d42c044399447a30a9",
      "filename": "ld/po/BLD-POTFILES.in",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/po/BLD-POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/595d3787e9cbedbceb6182f873a4774707c0e74f/ld/po/BLD-POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/po/BLD-POTFILES.in?ref=595d3787e9cbedbceb6182f873a4774707c0e74f",
      "patch": "@@ -97,7 +97,6 @@ eelf32btsmip_fbsd.c\n eelf32btsmipn32.c\n eelf32btsmipn32_fbsd.c\n eelf32cr16.c\n-eelf32cr16c.c\n eelf32crx.c\n eelf32ebmip.c\n eelf32ebmipvxworks.c"
    },
    {
      "sha": "5c120cf795a0fd33e93f4d7c86bc64b8ebe080d7",
      "filename": "ld/scripttempl/elf32cr16c.sc",
      "status": "removed",
      "additions": 0,
      "deletions": 66,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/984b909a237441995d41a2a04f9b31bd0c3dad2c/ld/scripttempl/elf32cr16c.sc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/984b909a237441995d41a2a04f9b31bd0c3dad2c/ld/scripttempl/elf32cr16c.sc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/scripttempl/elf32cr16c.sc?ref=984b909a237441995d41a2a04f9b31bd0c3dad2c",
      "patch": "@@ -1,66 +0,0 @@\n-# Linker Script for National Semiconductor's CR16C-ELF32.\n-#\n-# Copyright (C) 2014-2019 Free Software Foundation, Inc.\n-#\n-# Copying and distribution of this file, with or without modification,\n-# are permitted in any medium without royalty provided the copyright\n-# notice and this notice are preserved.\n-\n-# Using an empty script for ld -r is better than mashing together\n-# sections.  This hack likely leaves ld -Ur broken.\n-test -n \"${RELOCATING}\" || exit 0\n-\n-test -z \"$ENTRY\" && ENTRY=_start\n-cat <<EOF\n-\n-/* Example Linker Script for linking NS CR16C or CR16CPlus\n-   elf32 files, which were compiled with either the near data\n-   model or the default data model.\n-\n-   Copyright (C) 2014-2019 Free Software Foundation, Inc.\n-\n-   Copying and distribution of this script, with or without modification,\n-   are permitted in any medium without royalty provided the copyright\n-   notice and this notice are preserved.  */\n-\n-EOF\n-test -n \"${RELOCATING}\" && cat <<EOF\n-ENTRY(${ENTRY})\n-\n-MEMORY\n-{\n-  near_rom  : ORIGIN = 0x4,     LENGTH = 512K - 4\n-  near_ram  : ORIGIN = 512K,    LENGTH = 512K - 64K\n-  rom\t    : ORIGIN = 1M,      LENGTH = 3M\n-  ram\t    : ORIGIN = 4M,      LENGTH = 10M\n-}\n-\n-EOF\n-\n-cat <<EOF\n-SECTIONS\n-{\n-/* The heap is located in near memory, to suit both the near and\n-   default data models.  The heap and stack are aligned to the bus\n-   width, as a speed optimization for accessing  data located\n-   there. The alignment to 4 bytes is compatible for both the CR16C\n-   bus width (2 bytes) and CR16CPlus bus width (4 bytes).  */\n-\n-  .text            : { __TEXT_START = .;   *(.text)                                        __TEXT_END = .; }${RELOCATING+ > rom}\n-  .rdata           : { __RDATA_START = .;  *(.rdata_4) *(.rdata_2) *(.rdata_1)             __RDATA_END = .; }${RELOCATING+ > near_rom}\n-  .ctor ALIGN(4)   : { __CTOR_LIST = .;    *(.ctors)                                       __CTOR_END = .; }${RELOCATING+ > near_rom}\n-  .dtor ALIGN(4)   : { __DTOR_LIST = .;    *(.dtors)                                       __DTOR_END = .; }${RELOCATING+ > near_rom}\n-  .data            : { __DATA_START = .;   *(.data_4) *(.data_2) *(.data_1) *(.data)       __DATA_END = .; }${RELOCATING+ > ram AT > rom}\n-  .bss (NOLOAD)    : { __BSS_START = .;    *(.bss_4) *(.bss_2) *(.bss_1) *(.bss) *(COMMON) __BSS_END = .; }${RELOCATING+ > ram}\n-  .nrdata          : { __NRDATA_START = .; *(.nrdat_4) *(.nrdat_2) *(.nrdat_1)             __NRDATA_END =  .; }${RELOCATING+ > near_rom}\n-  .ndata           : { __NDATA_START = .;  *(.ndata_4) *(.ndata_2) *(.ndata_1)             __NDATA_END = .; }${RELOCATING+ > near_ram AT > rom}\n-  .nbss (NOLOAD)   : { __NBSS_START = .;   *(.nbss_4) *(.nbss_2) *(.nbss_1) *(.ncommon)    __NBSS_END = .; }${RELOCATING+ > near_ram}\n-  .heap (NOLOAD)   : { . = ALIGN(4); __HEAP_START = .; . += 0x2000;                        __HEAP_MAX = .; }${RELOCATING+ > near_ram}\n-  .stack (NOLOAD)  : { . = ALIGN(4); . += 0x6000; __STACK_START = .; }${RELOCATING+ > ram}\n-  .istack (NOLOAD) : { . = ALIGN(2); . += 0x100; __ISTACK_START = .; }${RELOCATING+ > ram}\n-}\n-\n-${RELOCATING+__DATA_IMAGE_START = LOADADDR(.data);}\n-${RELOCATING+__NDATA_IMAGE_START = LOADADDR(.ndata);}\n-\n-EOF"
    }
  ]
}