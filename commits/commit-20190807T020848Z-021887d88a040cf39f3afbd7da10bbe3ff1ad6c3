{
  "sha": "021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDIxODg3ZDg4YTA0MGNmMzlmM2FmYmQ3ZGExMGJiZTNmZjFhZDZjMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-18T21:56:03Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-07T02:08:48Z"
    },
    "message": "Use obstack_strdup more\n\nThis changes gdb to use obstack_strdup when appropriate, rather than\nthe wordier obstack_copy0.\n\ngdb/ChangeLog\n2019-08-06  Tom Tromey  <tom@tromey.com>\n\n\t* xcoffread.c (SYMNAME_ALLOC, process_xcoff_symbol): Use\n\tobstack_strdup.\n\t* typeprint.c (typedef_hash_table::find_global_typedef): Use\n\tobstack_strdup.\n\t* symfile.c (allocate_compunit_symtab): Use obstack_strdup.\n\t* stabsread.c (common_block_start): Use obstack_strdup.\n\t* objfiles.c (set_objfile_main_name, objfile): Use\n\tobstack_strdup.\n\t* namespace.c (add_using_directive): Use obstack_strdup.\n\t* mdebugread.c (parse_symbol, parse_type): Use obstack_strdup.\n\t* jit.c (finalize_symtab): Use obstack_strdup.\n\t* dwarf2read.c (fixup_go_packaging, dwarf2_physname)\n\t(guess_partial_die_structure_name, partial_die_info::fixup)\n\t(dwarf2_name): Use obstack_strdup.\n\t* coffread.c (coff_read_struct_type, coff_read_enum_type): Use\n\tobstack_strdup.\n\t* c-exp.y (scan_macro_expansion): Use obstack_strdup.\n\t* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use\n\tobstack_strdup.\n\t* ada-lang.c (ada_decode_symbol): Use obstack_strdup.",
    "tree": {
      "sha": "fff72470225d1f60510c029d5e61fdeadcf32f38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fff72470225d1f60510c029d5e61fdeadcf32f38"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b3c6d7ff98954032a3e7989dbd1f50f041e010bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b3c6d7ff98954032a3e7989dbd1f50f041e010bb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b3c6d7ff98954032a3e7989dbd1f50f041e010bb"
    }
  ],
  "stats": {
    "total": 129,
    "additions": 57,
    "deletions": 72
  },
  "files": [
    {
      "sha": "3974808c0782d16c1b3a0c855d15ba03e0c5c000",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -1,3 +1,26 @@\n+2019-08-06  Tom Tromey  <tom@tromey.com>\n+\n+\t* xcoffread.c (SYMNAME_ALLOC, process_xcoff_symbol): Use\n+\tobstack_strdup.\n+\t* typeprint.c (typedef_hash_table::find_global_typedef): Use\n+\tobstack_strdup.\n+\t* symfile.c (allocate_compunit_symtab): Use obstack_strdup.\n+\t* stabsread.c (common_block_start): Use obstack_strdup.\n+\t* objfiles.c (set_objfile_main_name, objfile): Use\n+\tobstack_strdup.\n+\t* namespace.c (add_using_directive): Use obstack_strdup.\n+\t* mdebugread.c (parse_symbol, parse_type): Use obstack_strdup.\n+\t* jit.c (finalize_symtab): Use obstack_strdup.\n+\t* dwarf2read.c (fixup_go_packaging, dwarf2_physname)\n+\t(guess_partial_die_structure_name, partial_die_info::fixup)\n+\t(dwarf2_name): Use obstack_strdup.\n+\t* coffread.c (coff_read_struct_type, coff_read_enum_type): Use\n+\tobstack_strdup.\n+\t* c-exp.y (scan_macro_expansion): Use obstack_strdup.\n+\t* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use\n+\tobstack_strdup.\n+\t* ada-lang.c (ada_decode_symbol): Use obstack_strdup.\n+\n 2019-08-07  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* unittests/help-doc-selftests.c: New file."
    },
    {
      "sha": "21a8e92462f849a456d750989086b234d9b9d8a5",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -1395,8 +1395,7 @@ ada_decode_symbol (const struct general_symbol_info *arg)\n       gsymbol->ada_mangled = 1;\n \n       if (obstack != NULL)\n-\t*resultp\n-\t  = (const char *) obstack_copy0 (obstack, decoded, strlen (decoded));\n+\t*resultp = obstack_strdup (obstack, decoded);\n       else\n         {\n \t  /* Sometimes, we can't find a corresponding objfile, in"
    },
    {
      "sha": "8e05706c4be7ead2ce8dbae8d76f7c7c2a60e6a7",
      "filename": "gdb/buildsym.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/buildsym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/buildsym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -1031,9 +1031,8 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n     {\n       /* Reallocate the dirname on the symbol obstack.  */\n       const char *comp_dir = m_comp_dir.get ();\n-      COMPUNIT_DIRNAME (cu)\n-\t= (const char *) obstack_copy0 (&m_objfile->objfile_obstack,\n-\t\t\t\t\tcomp_dir, strlen (comp_dir));\n+      COMPUNIT_DIRNAME (cu) = obstack_strdup (&m_objfile->objfile_obstack,\n+\t\t\t\t\t      comp_dir);\n     }\n \n   /* Save the debug format string (if any) in the symtab.  */"
    },
    {
      "sha": "439a72a10de426d4e8cbf853178b4baef0720411",
      "filename": "gdb/c-exp.y",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/c-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/c-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-exp.y?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -2490,15 +2490,14 @@ static const struct token ident_tokens[] =\n static void\n scan_macro_expansion (char *expansion)\n {\n-  char *copy;\n+  const char *copy;\n \n   /* We'd better not be trying to push the stack twice.  */\n   gdb_assert (! cpstate->macro_original_text);\n \n   /* Copy to the obstack, and then free the intermediate\n      expansion.  */\n-  copy = (char *) obstack_copy0 (&cpstate->expansion_obstack, expansion,\n-\t\t\t\t strlen (expansion));\n+  copy = obstack_strdup (&cpstate->expansion_obstack, expansion);\n   xfree (expansion);\n \n   /* Save the old lexptr value, so we can return to it when we're done"
    },
    {
      "sha": "e24ab8d2f4bb50a133778f319ea2395a0408c4a5",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -2019,9 +2019,7 @@ coff_read_struct_type (int index, int length, int lastsym,\n \t  list = newobj;\n \n \t  /* Save the data.  */\n-\t  list->field.name\n-\t    = (const char *) obstack_copy0 (&objfile->objfile_obstack,\n-\t\t\t\t\t    name, strlen (name));\n+\t  list->field.name = obstack_strdup (&objfile->objfile_obstack, name);\n \t  FIELD_TYPE (list->field) = decode_type (ms, ms->c_type,\n \t\t\t\t\t\t  &sub_aux, objfile);\n \t  SET_FIELD_BITPOS (list->field, 8 * ms->c_value);\n@@ -2037,9 +2035,7 @@ coff_read_struct_type (int index, int length, int lastsym,\n \t  list = newobj;\n \n \t  /* Save the data.  */\n-\t  list->field.name\n-\t    = (const char *) obstack_copy0 (&objfile->objfile_obstack,\n-\t\t\t\t\t    name, strlen (name));\n+\t  list->field.name = obstack_strdup (&objfile->objfile_obstack, name);\n \t  FIELD_TYPE (list->field) = decode_type (ms, ms->c_type,\n \t\t\t\t\t\t  &sub_aux, objfile);\n \t  SET_FIELD_BITPOS (list->field, ms->c_value);\n@@ -2109,8 +2105,7 @@ coff_read_enum_type (int index, int length, int lastsym,\n \tcase C_MOE:\n \t  sym = allocate_symbol (objfile);\n \n-\t  name = (char *) obstack_copy0 (&objfile->objfile_obstack, name,\n-\t\t\t\t\t strlen (name));\n+\t  name = obstack_strdup (&objfile->objfile_obstack, name);\n \t  SYMBOL_SET_LINKAGE_NAME (sym, name);\n \t  SYMBOL_ACLASS_INDEX (sym) = LOC_CONST;\n \t  SYMBOL_DOMAIN (sym) = VAR_DOMAIN;"
    },
    {
      "sha": "ab974a54a32ee46c15ce251f1af26e95b83fa5bb",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 7,
      "deletions": 17,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -9806,9 +9806,7 @@ fixup_go_packaging (struct dwarf2_cu *cu)\n     {\n       struct objfile *objfile = cu->per_cu->dwarf2_per_objfile->objfile;\n       const char *saved_package_name\n-\t= (const char *) obstack_copy0 (&objfile->per_bfd->storage_obstack,\n-\t\t\t\t\tpackage_name,\n-\t\t\t\t\tstrlen (package_name));\n+\t= obstack_strdup (&objfile->per_bfd->storage_obstack, package_name);\n       struct type *type = init_type (objfile, TYPE_CODE_MODULE, 0,\n \t\t\t\t     saved_package_name);\n       struct symbol *sym;\n@@ -11070,9 +11068,7 @@ dwarf2_physname (const char *name, struct die_info *die, struct dwarf2_cu *cu)\n     retval = canon;\n \n   if (need_copy)\n-    retval = ((const char *)\n-\t      obstack_copy0 (&objfile->per_bfd->storage_obstack,\n-\t\t\t     retval, strlen (retval)));\n+    retval = obstack_strdup (&objfile->per_bfd->storage_obstack, retval);\n \n   return retval;\n }\n@@ -18982,10 +18978,8 @@ guess_partial_die_structure_name (struct partial_die_info *struct_pdi,\n \t    {\n \t      struct objfile *objfile = cu->per_cu->dwarf2_per_objfile->objfile;\n \t      struct_pdi->name\n-\t\t= ((const char *)\n-\t\t   obstack_copy0 (&objfile->per_bfd->storage_obstack,\n-\t\t\t\t  actual_class_name,\n-\t\t\t\t  strlen (actual_class_name)));\n+\t\t= obstack_strdup (&objfile->per_bfd->storage_obstack,\n+\t\t\t\t  actual_class_name);\n \t      xfree (actual_class_name);\n \t    }\n \t  break;\n@@ -19067,10 +19061,7 @@ partial_die_info::fixup (struct dwarf2_cu *cu)\n \t    base = demangled;\n \n \t  struct objfile *objfile = cu->per_cu->dwarf2_per_objfile->objfile;\n-\t  name\n-\t    = ((const char *)\n-\t       obstack_copy0 (&objfile->per_bfd->storage_obstack,\n-\t\t\t      base, strlen (base)));\n+\t  name = obstack_strdup (&objfile->per_bfd->storage_obstack, base);\n \t  xfree (demangled);\n \t}\n     }\n@@ -22725,9 +22716,8 @@ dwarf2_name (struct die_info *die, struct dwarf2_cu *cu)\n \n \t      /* FIXME: we already did this for the partial symbol... */\n \t      DW_STRING (attr)\n-\t\t= ((const char *)\n-\t\t   obstack_copy0 (&objfile->per_bfd->storage_obstack,\n-\t\t\t\t  demangled, strlen (demangled)));\n+\t\t= obstack_strdup (&objfile->per_bfd->storage_obstack,\n+\t\t\t\t  demangled);\n \t      DW_STRING_IS_CANONICAL (attr) = 1;\n \t      xfree (demangled);\n "
    },
    {
      "sha": "87f8d8f88597d924eb878cabaccae5cd5488b731",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -700,10 +700,8 @@ finalize_symtab (struct gdb_symtab *stab, struct objfile *objfile)\n       SYMBOL_TYPE (block_name) = lookup_function_type (block_type);\n       SYMBOL_BLOCK_VALUE (block_name) = new_block;\n \n-      block_name->ginfo.name\n-\t= (const char *) obstack_copy0 (&objfile->objfile_obstack,\n-\t\t\t\t\tgdb_block_iter->name,\n-\t\t\t\t\tstrlen (gdb_block_iter->name));\n+      block_name->ginfo.name = obstack_strdup (&objfile->objfile_obstack,\n+\t\t\t\t\t       gdb_block_iter->name);\n \n       BLOCK_FUNCTION (new_block) = block_name;\n "
    },
    {
      "sha": "18c1d1f7c9ed508125acfba032b892f14c82902c",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -1066,8 +1066,8 @@ parse_symbol (SYMR *sh, union aux_ext *ax, char *ext_sh, int bigend,\n \t\tenum_sym = allocate_symbol (mdebugread_objfile);\n \t\tSYMBOL_SET_LINKAGE_NAME\n \t\t  (enum_sym,\n-\t\t   (char *) obstack_copy0 (&mdebugread_objfile->objfile_obstack,\n-\t\t\t\t\t   f->name, strlen (f->name)));\n+\t\t   obstack_strdup (&mdebugread_objfile->objfile_obstack,\n+\t\t\t\t   f->name));\n \t\tSYMBOL_ACLASS_INDEX (enum_sym) = LOC_CONST;\n \t\tSYMBOL_TYPE (enum_sym) = t;\n \t\tSYMBOL_DOMAIN (enum_sym) = VAR_DOMAIN;\n@@ -1688,9 +1688,7 @@ parse_type (int fd, union aux_ext *ax, unsigned int aux_index, int *bs,\n \t  else if (TYPE_NAME (tp) == NULL\n \t\t   || strcmp (TYPE_NAME (tp), name) != 0)\n \t    TYPE_NAME (tp)\n-\t      = ((const char *)\n-\t\t obstack_copy0 (&mdebugread_objfile->objfile_obstack,\n-\t\t\t\tname, strlen (name)));\n+\t      = obstack_strdup (&mdebugread_objfile->objfile_obstack, name);\n \t}\n     }\n \n@@ -1726,9 +1724,7 @@ parse_type (int fd, union aux_ext *ax, unsigned int aux_index, int *bs,\n \t  if (TYPE_NAME (tp) == NULL\n \t      || strcmp (TYPE_NAME (tp), name) != 0)\n \t    TYPE_NAME (tp)\n-\t      = ((const char *)\n-\t\t obstack_copy0 (&mdebugread_objfile->objfile_obstack,\n-\t\t\t\tname, strlen (name)));\n+\t      = obstack_strdup (&mdebugread_objfile->objfile_obstack, name);\n \t}\n     }\n   if (t->bt == btTypedef)"
    },
    {
      "sha": "04b49ef0e34abca53e46552f14443f86101cf160",
      "filename": "gdb/namespace.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/namespace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/namespace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/namespace.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -87,10 +87,8 @@ add_using_directive (struct using_direct **using_directives,\n \n   if (copy_names)\n     {\n-      newobj->import_src\n-\t= (const char *) obstack_copy0 (obstack, src, strlen (src));\n-      newobj->import_dest\n-\t= (const char *) obstack_copy0 (obstack, dest, strlen (dest));\n+      newobj->import_src = obstack_strdup (obstack, src);\n+      newobj->import_dest = obstack_strdup (obstack, dest);\n     }\n   else\n     {\n@@ -99,15 +97,12 @@ add_using_directive (struct using_direct **using_directives,\n     }\n \n   if (alias != NULL && copy_names)\n-    newobj->alias\n-      = (const char *) obstack_copy0 (obstack, alias, strlen (alias));\n+    newobj->alias = obstack_strdup (obstack, alias);\n   else\n     newobj->alias = alias;\n \n   if (declaration != NULL && copy_names)\n-    newobj->declaration\n-      = (const char *) obstack_copy0 (obstack, declaration,\n-\t\t\t\t      strlen (declaration));\n+    newobj->declaration = obstack_strdup (obstack, declaration);\n   else\n     newobj->declaration = declaration;\n "
    },
    {
      "sha": "7cbcbbd01b0e9b776afac6180b3f2d733d156520",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -166,8 +166,7 @@ set_objfile_main_name (struct objfile *objfile,\n   if (objfile->per_bfd->name_of_main == NULL\n       || strcmp (objfile->per_bfd->name_of_main, name) != 0)\n     objfile->per_bfd->name_of_main\n-      = (const char *) obstack_copy0 (&objfile->per_bfd->storage_obstack, name,\n-\t\t\t\t      strlen (name));\n+      = obstack_strdup (&objfile->per_bfd->storage_obstack, name);\n   objfile->per_bfd->language_of_main = lang;\n }\n \n@@ -356,10 +355,7 @@ objfile::objfile (bfd *abfd, const char *name, objfile_flags flags_)\n       name_holder = gdb_abspath (name);\n       expanded_name = name_holder.get ();\n     }\n-  original_name\n-    = (char *) obstack_copy0 (&objfile_obstack,\n-\t\t\t      expanded_name,\n-\t\t\t      strlen (expanded_name));\n+  original_name = obstack_strdup (&objfile_obstack, expanded_name);\n \n   /* Update the per-objfile information that comes from the bfd, ensuring\n      that any data that is reference is saved in the per-objfile data"
    },
    {
      "sha": "b7524e71a35f162ebf088658221900c35ab7a199",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -4293,8 +4293,7 @@ common_block_start (const char *name, struct objfile *objfile)\n     }\n   common_block = *get_local_symbols ();\n   common_block_i = common_block ? common_block->nsyms : 0;\n-  common_block_name = (char *) obstack_copy0 (&objfile->objfile_obstack, name,\n-\t\t\t\t\t      strlen (name));\n+  common_block_name = obstack_strdup (&objfile->objfile_obstack, name);\n }\n \n /* Process a N_ECOMM symbol.  */"
    },
    {
      "sha": "b927de5e9bfe163415fc5b94590cbf4fb008549d",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -2882,9 +2882,7 @@ allocate_compunit_symtab (struct objfile *objfile, const char *name)\n      Just save the basename to avoid path issues (too long for display,\n      relative vs absolute, etc.).  */\n   saved_name = lbasename (name);\n-  cu->name\n-    = (const char *) obstack_copy0 (&objfile->objfile_obstack, saved_name,\n-\t\t\t\t    strlen (saved_name));\n+  cu->name = obstack_strdup (&objfile->objfile_obstack, saved_name);\n \n   COMPUNIT_DEBUGFORMAT (cu) = \"unknown\";\n "
    },
    {
      "sha": "c87f6d13e02ec5aa191027ce3f5795c6352df639",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -325,9 +325,8 @@ typedef_hash_table::find_global_typedef (const struct type_print_options *flags,\n \n   if (applied != NULL)\n     {\n-      new_tf->name\n-\t= (const char *) obstack_copy0 (&flags->global_typedefs->m_storage,\n-\t\t\t\t\tapplied, strlen (applied));\n+      new_tf->name = obstack_strdup (&flags->global_typedefs->m_storage,\n+\t\t\t\t     applied);\n       xfree (applied);\n     }\n "
    },
    {
      "sha": "0dacea44d12799238cb409be9969355bbff12578",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/021887d88a040cf39f3afbd7da10bbe3ff1ad6c3/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=021887d88a040cf39f3afbd7da10bbe3ff1ad6c3",
      "patch": "@@ -1539,8 +1539,8 @@ read_xcoff_symtab (struct objfile *objfile, struct partial_symtab *pst)\n \n \n #define\tSYMNAME_ALLOC(NAME, ALLOCED)\t\\\n-  ((ALLOCED) ? (NAME) : obstack_copy0 (&objfile->objfile_obstack, \\\n-\t\t\t\t       (NAME), strlen (NAME)))\n+  ((ALLOCED) ? (NAME) : obstack_strdup (&objfile->objfile_obstack, \\\n+\t\t\t\t\t(NAME)))\n \n \n /* process one xcoff symbol.  */\n@@ -1586,8 +1586,7 @@ process_xcoff_symbol (struct coff_symbol *cs, struct objfile *objfile)\n          will be patched with the type from its stab entry later on in\n          patch_block_stabs (), unless the file was compiled without -g.  */\n \n-      SYMBOL_SET_LINKAGE_NAME (sym, ((const char *)\n-\t\t\t\t     SYMNAME_ALLOC (name, symname_alloced)));\n+      SYMBOL_SET_LINKAGE_NAME (sym, SYMNAME_ALLOC (name, symname_alloced));\n       SYMBOL_TYPE (sym) = objfile_type (objfile)->nodebug_text_symbol;\n \n       SYMBOL_ACLASS_INDEX (sym) = LOC_BLOCK;"
    }
  ]
}