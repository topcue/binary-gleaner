{
  "sha": "56ba3848dc13ea58359f7eb1a5440297bfe82c6e",
  "node_id": "C_kwDOANOeidoAKDU2YmEzODQ4ZGMxM2VhNTgzNTlmN2ViMWE1NDQwMjk3YmZlODJjNmU",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@axis.com",
      "date": "2022-02-14T22:50:36Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2022-02-14T22:50:36Z"
    },
    "message": "sim/testsuite/cris/c: Use -sim3 but only for newlib targets\n\nCommit a39487c6685f \"sim: cris: use -sim with C tests for cris-elf\ntargets\" caused \" -sim\" to be appended to CFLAGS_FOR_TARGET for\ncris*-*-elf, where testing had until then relied on\n\"RUNTESTFLAGS=--target_board=cris-sim\" being passed when running \"make\ncheck-sim\", adding the right options.  While \"-sim\" happens to work,\nthe baseboard-file cris-sim.exp uses \"-sim3\" so for consistency use\nthat instead.\n\nThen commit b42f20d2ac72 \"sim: testsuite: drop most specific istarget\nchecks\" caused \" -sim\" to be appended for *all* targets, which just\ndoesn't work.  For example, for crisv32-linux-gnu, that's not a\nrecognized option and will cause a dejagnu error and further testing\nin c.exp will be aborted.\n\nWhile cris-sim.exp appends \"-static\" for *-linux-gnu, further changes\nin the test-suite have caused \"linux\"-specific tests to break, so that\npart will be tended to separately.\n\nBut, save and restore CFLAGS_FOR_TARGET around the modification and\nuse where needed, to not have the CRIS-specific modification affect a\ncontinuing test-run (possibly for other targets).\n\nsim/testsuite/cris:\n\t* c/c.exp (CFLAGS_FOR_TARGET): Replace appended option \" -sim\"\n\twith \" -sim3\", but do it conditionally for newlib targets.  Save\n\tand restore CFLAGS_FOR_TARGET in saved_CFLAGS_FOR_TARGET such\n\tthat it doesn't affect the value of CFLAGS_FOR_TARGET outside\n\tc.exp.",
    "tree": {
      "sha": "9e9a43daeea03874df86938c64b4f19cd28964fe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9e9a43daeea03874df86938c64b4f19cd28964fe"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/56ba3848dc13ea58359f7eb1a5440297bfe82c6e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56ba3848dc13ea58359f7eb1a5440297bfe82c6e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/56ba3848dc13ea58359f7eb1a5440297bfe82c6e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56ba3848dc13ea58359f7eb1a5440297bfe82c6e/comments",
  "author": {
    "login": "hpataxisdotcom",
    "id": 80339731,
    "node_id": "MDQ6VXNlcjgwMzM5NzMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hpataxisdotcom",
    "html_url": "https://github.com/hpataxisdotcom",
    "followers_url": "https://api.github.com/users/hpataxisdotcom/followers",
    "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}",
    "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions",
    "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs",
    "repos_url": "https://api.github.com/users/hpataxisdotcom/repos",
    "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3e6dc39ed7a82facdc2b78c6f7a73ce5beff3cdf"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 12,
    "deletions": 4
  },
  "files": [
    {
      "sha": "3e186e072d8e53f70ba21d0bf6e75d3a4354c87d",
      "filename": "sim/testsuite/cris/c/c.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56ba3848dc13ea58359f7eb1a5440297bfe82c6e/sim/testsuite/cris/c/c.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56ba3848dc13ea58359f7eb1a5440297bfe82c6e/sim/testsuite/cris/c/c.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cris/c/c.exp?ref=56ba3848dc13ea58359f7eb1a5440297bfe82c6e",
      "patch": "@@ -17,20 +17,26 @@\n \n sim_init\n \n+global global_cc_works\n+global global_cc_os\n+\n set CFLAGS_FOR_TARGET \"-O2\"\n if [istarget cris-*-*] {\n     set mach \"crisv10\"\n } {\n     set mach \"crisv32\"\n }\n \n-if [istarget *] {\n-    append CFLAGS_FOR_TARGET \" -sim\"\n+# Make sure we're using the right runtime for simulator runs.  If the\n+# cris-sim dejagnu baseboard is used, -sim3 will be duplicated, but\n+# that's ok.  For e.g. cris*-linux-gnu, neither -sim not -sim3 are\n+# supported options and likely not other targets too.\n+set saved_CFLAGS_FOR_TARGET $CFLAGS_FOR_TARGET\n+if { $global_cc_os == \"newlib\" } {\n+    append CFLAGS_FOR_TARGET \" -sim3\"\n }\n \n # Using target_compile, since it is less noisy,\n-global global_cc_works\n-global global_cc_os\n if { $global_cc_works == 1 } {\n     # Now check if we can link a program dynamically, and where\n     # libc.so is located.  If it is, we provide a sym link to the\n@@ -239,3 +245,5 @@ foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {\n \t$status \"$mach $testname\"\n     }\n }\n+\n+set CFLAGS_FOR_TARGET $saved_CFLAGS_FOR_TARGET"
    }
  ]
}