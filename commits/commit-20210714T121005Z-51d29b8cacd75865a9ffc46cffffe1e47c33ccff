{
  "sha": "51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTFkMjliOGNhY2Q3NTg2NWE5ZmZjNDZjZmZmZmUxZTQ3YzMzY2NmZg==",
  "commit": {
    "author": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-06-11T09:00:56Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-14T12:10:05Z"
    },
    "message": "objdump: add DWARF support for AIX\n\nDWARF sections have special names on AIX which need be handled\nby objdump in order to correctly print them.\nThis patch also adds the correlation in bfd for future uses.\n\nbfd/\n\t* libxcoff.h (struct xcoff_dwsect_name): Add DWARF name.\n\t* coff-rs6000.c (xcoff_dwsect_names): Update.\n\t* coffcode.h (sec_to_styp_flags): Likewise.\n\t(coff_new_section_hook): Likewise.\nbinutils/\n\t* dwarf.h (struct dwarf_section): Add XCOFF name.\n\t* dwarf.c (struct dwarf_section_display): Update.\n\t* objdump.c (load_debug_section): Add XCOFF name handler.\n\t(dump_dwarf_section): Likewise.\ngas/\n\t* config/tc-ppc.c (ppc_change_debug_section): Update to\n\tmatch new name's field.",
    "tree": {
      "sha": "8800eb84ab44902fb543d25dfa7ad60f29503b6b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8800eb84ab44902fb543d25dfa7ad60f29503b6b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/comments",
  "author": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "be36c6e3374821fe5699556bbfa2280e3a4696df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be36c6e3374821fe5699556bbfa2280e3a4696df",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/be36c6e3374821fe5699556bbfa2280e3a4696df"
    }
  ],
  "stats": {
    "total": 164,
    "additions": 99,
    "deletions": 65
  },
  "files": [
    {
      "sha": "ff44a7e76fbf6a582e63022db6ba1c3aebb04629",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -1,3 +1,10 @@\n+2021-07-14  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* libxcoff.h (struct xcoff_dwsect_name): Add DWARF name.\n+\t* coff-rs6000.c (xcoff_dwsect_names): Update.\n+\t* coffcode.h (sec_to_styp_flags): Likewise.\n+\t(coff_new_section_hook): Likewise.\n+\n 2021-07-10  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf2.c (read_address): Remove accidental commit."
    },
    {
      "sha": "689f9f5b37a787c52a82ba941fdb30ffa559edcd",
      "filename": "bfd/coff-rs6000.c",
      "status": "modified",
      "additions": 14,
      "deletions": 12,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/coff-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/coff-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-rs6000.c?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -4265,20 +4265,22 @@ static const unsigned long xcoff_glink_code[9] =\n     0x00000000,\t/* traceback table */\n   };\n \n-/* Table to convert DWARF flags to section names.  */\n+/* Table to convert DWARF flags to section names.\n+   Remember to update binutils/dwarf.c:debug_displays\n+   if new DWARF sections are supported by XCOFF.  */\n \n const struct xcoff_dwsect_name xcoff_dwsect_names[] = {\n-  { SSUBTYP_DWINFO,  \".dwinfo\",   true },\n-  { SSUBTYP_DWLINE,  \".dwline\",   true },\n-  { SSUBTYP_DWPBNMS, \".dwpbnms\",  true },\n-  { SSUBTYP_DWPBTYP, \".dwpbtyp\",  true },\n-  { SSUBTYP_DWARNGE, \".dwarnge\",  true },\n-  { SSUBTYP_DWABREV, \".dwabrev\",  false },\n-  { SSUBTYP_DWSTR,   \".dwstr\",    true },\n-  { SSUBTYP_DWRNGES, \".dwrnges\",  true },\n-  { SSUBTYP_DWLOC,   \".dwloc\",    true },\n-  { SSUBTYP_DWFRAME, \".dwframe\",  true },\n-  { SSUBTYP_DWMAC,   \".dwmac\",    true }\n+  { SSUBTYP_DWINFO,  \".dwinfo\",  \".debug_info\",     true },\n+  { SSUBTYP_DWLINE,  \".dwline\",  \".debug_line\",     true },\n+  { SSUBTYP_DWPBNMS, \".dwpbnms\", \".debug_pubnames\", true },\n+  { SSUBTYP_DWPBTYP, \".dwpbtyp\", \".debug_pubtypes\", true },\n+  { SSUBTYP_DWARNGE, \".dwarnge\", \".debug_aranges\",  true },\n+  { SSUBTYP_DWABREV, \".dwabrev\", \".debug_abbrev\",   false },\n+  { SSUBTYP_DWSTR,   \".dwstr\",   \".debug_str\",      true },\n+  { SSUBTYP_DWRNGES, \".dwrnges\", \".debug_ranges\",   true },\n+  { SSUBTYP_DWLOC,   \".dwloc\",   \".debug_loc\",      true },\n+  { SSUBTYP_DWFRAME, \".dwframe\", \".debug_frame\",    true },\n+  { SSUBTYP_DWMAC,   \".dwmac\",   \".debug_macro\",    true }\n };\n \n /* For generic entry points.  */"
    },
    {
      "sha": "9b8798c86313f389d2e1afe75c72bf1a8b384d5f",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -577,7 +577,7 @@ sec_to_styp_flags (const char *sec_name, flagword sec_flags)\n       int i;\n \n       for (i = 0; i < XCOFF_DWSECT_NBR_NAMES; i++)\n-\tif (!strcmp (sec_name, xcoff_dwsect_names[i].name))\n+\tif (!strcmp (sec_name, xcoff_dwsect_names[i].xcoff_name))\n \t  {\n \t    styp_flags = STYP_DWARF | xcoff_dwsect_names[i].flag;\n \t    break;\n@@ -1809,7 +1809,7 @@ coff_new_section_hook (bfd * abfd, asection * section)\n \n       for (i = 0; i < XCOFF_DWSECT_NBR_NAMES; i++)\n \tif (strcmp (bfd_section_name (section),\n-\t\t    xcoff_dwsect_names[i].name) == 0)\n+\t\t    xcoff_dwsect_names[i].xcoff_name) == 0)\n \t  {\n \t    section->alignment_power = 0;\n \t    sclass = C_DWARF;"
    },
    {
      "sha": "4556a38bc1566b2993685315c62f794f8055109c",
      "filename": "bfd/libxcoff.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/libxcoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/bfd/libxcoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libxcoff.h?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -244,7 +244,10 @@ struct xcoff_dwsect_name {\n   unsigned int flag;\n \n   /* Corresponding XCOFF section name.  */\n-  const char *name;\n+  const char *xcoff_name;\n+\n+  /* Corresponding DWARF section name.  */\n+  const char *dwarf_name;\n \n   /* True if size must be prepended.  */\n   bool def_size;"
    },
    {
      "sha": "b775f0a6b23913b85e6faeb3628de71c2a5d496f",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -1,3 +1,10 @@\n+2021-07-14  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* dwarf.h (struct dwarf_section): Add XCOFF name.\n+\t* dwarf.c (struct dwarf_section_display): Update.\n+\t* objdump.c (load_debug_section): Add XCOFF name handler.\n+\t(dump_dwarf_section): Likewise.\n+\n 2021-07-12  Nick Clifton  <nickc@redhat.com>\n \n \t* po/fr.po: Updated French translation."
    },
    {
      "sha": "bd030f3eb7eb3b8426d9d70062713ef39d2d87cd",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 45,
      "deletions": 45,
      "changes": 90,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -11678,53 +11678,53 @@ dwarf_select_sections_all (void)\n \n struct dwarf_section_display debug_displays[] =\n {\n-  { { \".debug_abbrev\",\t    \".zdebug_abbrev\",\tNO_ABBREVS },      display_debug_abbrev,   &do_debug_abbrevs,\tfalse },\n-  { { \".debug_aranges\",\t    \".zdebug_aranges\",\tNO_ABBREVS },      display_debug_aranges,  &do_debug_aranges,\ttrue },\n-  { { \".debug_frame\",       \".zdebug_frame\",\tNO_ABBREVS },      display_debug_frames,   &do_debug_frames,\ttrue },\n-  { { \".debug_info\",\t    \".zdebug_info\",\tABBREV (abbrev)},  display_debug_info,\t   &do_debug_info,\ttrue },\n-  { { \".debug_line\",\t    \".zdebug_line\",\tNO_ABBREVS },      display_debug_lines,    &do_debug_lines,\ttrue },\n-  { { \".debug_pubnames\",    \".zdebug_pubnames\",\tNO_ABBREVS },      display_debug_pubnames, &do_debug_pubnames,\tfalse },\n-  { { \".debug_gnu_pubnames\", \".zdebug_gnu_pubnames\", NO_ABBREVS }, display_debug_gnu_pubnames, &do_debug_pubnames, false },\n-  { { \".eh_frame\",\t    \"\",\t\t\tNO_ABBREVS },      display_debug_frames,   &do_debug_frames,\ttrue },\n-  { { \".debug_macinfo\",\t    \".zdebug_macinfo\",\tNO_ABBREVS },      display_debug_macinfo,  &do_debug_macinfo,\tfalse },\n-  { { \".debug_macro\",\t    \".zdebug_macro\",\tNO_ABBREVS },      display_debug_macro,    &do_debug_macinfo,\ttrue },\n-  { { \".debug_str\",\t    \".zdebug_str\",\tNO_ABBREVS },      display_debug_str,\t   &do_debug_str,\tfalse },\n-  { { \".debug_line_str\",    \".zdebug_line_str\",\tNO_ABBREVS },      display_debug_str,\t   &do_debug_str,\tfalse },\n-  { { \".debug_loc\",\t    \".zdebug_loc\",\tNO_ABBREVS },      display_debug_loc,\t   &do_debug_loc,\ttrue },\n-  { { \".debug_loclists\",    \".zdebug_loclists\",\tNO_ABBREVS },      display_debug_loc,\t   &do_debug_loc,\ttrue },\n-  { { \".debug_pubtypes\",    \".zdebug_pubtypes\",\tNO_ABBREVS },      display_debug_pubnames, &do_debug_pubtypes,\tfalse },\n-  { { \".debug_gnu_pubtypes\", \".zdebug_gnu_pubtypes\", NO_ABBREVS }, display_debug_gnu_pubnames, &do_debug_pubtypes, false },\n-  { { \".debug_ranges\",\t    \".zdebug_ranges\",\tNO_ABBREVS },      display_debug_ranges,   &do_debug_ranges,\ttrue },\n-  { { \".debug_rnglists\",    \".zdebug_rnglists\",\tNO_ABBREVS },      display_debug_ranges,   &do_debug_ranges,\ttrue },\n-  { { \".debug_static_func\", \".zdebug_static_func\", NO_ABBREVS },   display_debug_not_supported, NULL,\t\tfalse },\n-  { { \".debug_static_vars\", \".zdebug_static_vars\", NO_ABBREVS },   display_debug_not_supported, NULL,\t\tfalse },\n-  { { \".debug_types\",\t    \".zdebug_types\",\tABBREV (abbrev) }, display_debug_types,    &do_debug_info,\ttrue },\n-  { { \".debug_weaknames\",   \".zdebug_weaknames\", NO_ABBREVS },     display_debug_not_supported, NULL,\t\tfalse },\n-  { { \".gdb_index\",\t    \"\",\t\t\tNO_ABBREVS },      display_gdb_index,      &do_gdb_index,\tfalse },\n-  { { \".debug_names\",\t    \"\",\t\t\tNO_ABBREVS },      display_debug_names,    &do_gdb_index,\tfalse },\n-  { { \".trace_info\",\t    \"\",\t\t\tABBREV (trace_abbrev) }, display_trace_info, &do_trace_info,\ttrue },\n-  { { \".trace_abbrev\",\t    \"\",\t\t\tNO_ABBREVS },      display_debug_abbrev,   &do_trace_abbrevs,\tfalse },\n-  { { \".trace_aranges\",\t    \"\",\t\t\tNO_ABBREVS },      display_debug_aranges,  &do_trace_aranges,\tfalse },\n-  { { \".debug_info.dwo\",    \".zdebug_info.dwo\",\tABBREV (abbrev_dwo) }, display_debug_info, &do_debug_info,\ttrue },\n-  { { \".debug_abbrev.dwo\",  \".zdebug_abbrev.dwo\", NO_ABBREVS },    display_debug_abbrev,   &do_debug_abbrevs,\tfalse },\n-  { { \".debug_types.dwo\",   \".zdebug_types.dwo\", ABBREV (abbrev_dwo) }, display_debug_types, &do_debug_info,\ttrue },\n-  { { \".debug_line.dwo\",    \".zdebug_line.dwo\", NO_ABBREVS },      display_debug_lines,    &do_debug_lines,\ttrue },\n-  { { \".debug_loc.dwo\",\t    \".zdebug_loc.dwo\",\tNO_ABBREVS },      display_debug_loc,\t   &do_debug_loc,\ttrue },\n-  { { \".debug_macro.dwo\",   \".zdebug_macro.dwo\", NO_ABBREVS },     display_debug_macro,    &do_debug_macinfo,\ttrue },\n-  { { \".debug_macinfo.dwo\", \".zdebug_macinfo.dwo\", NO_ABBREVS },   display_debug_macinfo,  &do_debug_macinfo,\tfalse },\n-  { { \".debug_str.dwo\",     \".zdebug_str.dwo\",  NO_ABBREVS },      display_debug_str,      &do_debug_str,\ttrue },\n-  { { \".debug_str_offsets\", \".zdebug_str_offsets\", NO_ABBREVS },   display_debug_str_offsets, &do_debug_str_offsets, true },\n-  { { \".debug_str_offsets.dwo\", \".zdebug_str_offsets.dwo\", NO_ABBREVS }, display_debug_str_offsets, &do_debug_str_offsets, true },\n-  { { \".debug_addr\",\t    \".zdebug_addr\",     NO_ABBREVS },      display_debug_addr,     &do_debug_addr,\ttrue },\n-  { { \".debug_cu_index\",    \"\",\t\t\tNO_ABBREVS },      display_cu_index,       &do_debug_cu_index,\tfalse },\n-  { { \".debug_tu_index\",    \"\",\t\t\tNO_ABBREVS },      display_cu_index,       &do_debug_cu_index,\tfalse },\n-  { { \".gnu_debuglink\",     \"\",                 NO_ABBREVS },      display_debug_links,    &do_debug_links,     false },\n-  { { \".gnu_debugaltlink\",  \"\",                 NO_ABBREVS },      display_debug_links,    &do_debug_links,     false },\n-  { { \".debug_sup\",         \"\",\t\t\tNO_ABBREVS },      display_debug_sup,      &do_debug_links,\tfalse },\n+  { { \".debug_abbrev\",\t    \".zdebug_abbrev\",\t     \".dwabrev\", NO_ABBREVS },\t    display_debug_abbrev,   &do_debug_abbrevs,\tfalse },\n+  { { \".debug_aranges\",\t    \".zdebug_aranges\",\t     \".dwarnge\", NO_ABBREVS },\t    display_debug_aranges,  &do_debug_aranges,\ttrue },\n+  { { \".debug_frame\",\t    \".zdebug_frame\",\t     \".dwframe\", NO_ABBREVS },\t    display_debug_frames,   &do_debug_frames,\ttrue },\n+  { { \".debug_info\",\t    \".zdebug_info\",\t     \".dwinfo\",\t ABBREV (abbrev)},  display_debug_info,\t    &do_debug_info,\ttrue },\n+  { { \".debug_line\",\t    \".zdebug_line\",\t     \".dwline\",\t NO_ABBREVS },\t    display_debug_lines,    &do_debug_lines,\ttrue },\n+  { { \".debug_pubnames\",    \".zdebug_pubnames\",\t     \".dwpbnms\", NO_ABBREVS },\t    display_debug_pubnames, &do_debug_pubnames, false },\n+  { { \".debug_gnu_pubnames\", \".zdebug_gnu_pubnames\", \"\",\t NO_ABBREVS },\t    display_debug_gnu_pubnames, &do_debug_pubnames, false },\n+  { { \".eh_frame\",\t    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_debug_frames,   &do_debug_frames,\ttrue },\n+  { { \".debug_macinfo\",\t    \".zdebug_macinfo\",\t     \"\",\t NO_ABBREVS },\t    display_debug_macinfo,  &do_debug_macinfo,\tfalse },\n+  { { \".debug_macro\",\t    \".zdebug_macro\",\t     \".dwmac\",\t NO_ABBREVS },\t    display_debug_macro,    &do_debug_macinfo,\ttrue },\n+  { { \".debug_str\",\t    \".zdebug_str\",\t     \".dwstr\",\t NO_ABBREVS },\t    display_debug_str,\t    &do_debug_str,\tfalse },\n+  { { \".debug_line_str\",    \".zdebug_line_str\",\t     \"\",\t NO_ABBREVS },\t    display_debug_str,\t    &do_debug_str,\tfalse },\n+  { { \".debug_loc\",\t    \".zdebug_loc\",\t     \".dwloc\",\t NO_ABBREVS },\t    display_debug_loc,\t    &do_debug_loc,\ttrue },\n+  { { \".debug_loclists\",    \".zdebug_loclists\",\t     \"\",\t NO_ABBREVS },\t    display_debug_loc,\t    &do_debug_loc,\ttrue },\n+  { { \".debug_pubtypes\",    \".zdebug_pubtypes\",\t     \".dwpbtyp\", NO_ABBREVS },\t    display_debug_pubnames, &do_debug_pubtypes, false },\n+  { { \".debug_gnu_pubtypes\", \".zdebug_gnu_pubtypes\", \"\",\t NO_ABBREVS },\t    display_debug_gnu_pubnames, &do_debug_pubtypes, false },\n+  { { \".debug_ranges\",\t    \".zdebug_ranges\",\t     \".dwrnges\", NO_ABBREVS },\t    display_debug_ranges,   &do_debug_ranges,\ttrue },\n+  { { \".debug_rnglists\",    \".zdebug_rnglists\",\t     \"\",\t NO_ABBREVS },\t    display_debug_ranges,   &do_debug_ranges,\ttrue },\n+  { { \".debug_static_func\", \".zdebug_static_func\",   \"\",\t NO_ABBREVS },\t    display_debug_not_supported, NULL,\t\tfalse },\n+  { { \".debug_static_vars\", \".zdebug_static_vars\",   \"\",\t NO_ABBREVS },\t    display_debug_not_supported, NULL,\t\tfalse },\n+  { { \".debug_types\",\t    \".zdebug_types\",\t     \"\",\t ABBREV (abbrev) }, display_debug_types,    &do_debug_info,\ttrue },\n+  { { \".debug_weaknames\",   \".zdebug_weaknames\",     \"\",\t NO_ABBREVS },\t    display_debug_not_supported, NULL,\t\tfalse },\n+  { { \".gdb_index\",\t    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_gdb_index,\t    &do_gdb_index,\tfalse },\n+  { { \".debug_names\",\t    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_debug_names,    &do_gdb_index,\tfalse },\n+  { { \".trace_info\",\t    \"\",\t\t\t     \"\",\t ABBREV (trace_abbrev) }, display_trace_info, &do_trace_info,\ttrue },\n+  { { \".trace_abbrev\",\t    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_debug_abbrev,   &do_trace_abbrevs,\tfalse },\n+  { { \".trace_aranges\",\t    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_debug_aranges,  &do_trace_aranges,\tfalse },\n+  { { \".debug_info.dwo\",    \".zdebug_info.dwo\",\t     \"\",\t ABBREV (abbrev_dwo) }, display_debug_info, &do_debug_info,\ttrue },\n+  { { \".debug_abbrev.dwo\",  \".zdebug_abbrev.dwo\",    \"\",\t NO_ABBREVS },\t  display_debug_abbrev,\t    &do_debug_abbrevs,\tfalse },\n+  { { \".debug_types.dwo\",   \".zdebug_types.dwo\",     \"\",\t ABBREV (abbrev_dwo) }, display_debug_types, &do_debug_info,\ttrue },\n+  { { \".debug_line.dwo\",    \".zdebug_line.dwo\",\t     \"\",\t NO_ABBREVS },\t    display_debug_lines,    &do_debug_lines,\ttrue },\n+  { { \".debug_loc.dwo\",\t    \".zdebug_loc.dwo\",\t     \"\",\t NO_ABBREVS },\t    display_debug_loc,\t    &do_debug_loc,\ttrue },\n+  { { \".debug_macro.dwo\",   \".zdebug_macro.dwo\",     \"\",\t NO_ABBREVS },\t    display_debug_macro,    &do_debug_macinfo,\ttrue },\n+  { { \".debug_macinfo.dwo\", \".zdebug_macinfo.dwo\",   \"\",\t NO_ABBREVS },\t    display_debug_macinfo,  &do_debug_macinfo,\tfalse },\n+  { { \".debug_str.dwo\",\t    \".zdebug_str.dwo\",\t     \"\",\t NO_ABBREVS },\t    display_debug_str,\t    &do_debug_str,\ttrue },\n+  { { \".debug_str_offsets\", \".zdebug_str_offsets\",   \"\",\t NO_ABBREVS },\t    display_debug_str_offsets, &do_debug_str_offsets, true },\n+  { { \".debug_str_offsets.dwo\", \".zdebug_str_offsets.dwo\", \"\",\t NO_ABBREVS },\t    display_debug_str_offsets, &do_debug_str_offsets, true },\n+  { { \".debug_addr\",\t    \".zdebug_addr\",\t     \"\",\t NO_ABBREVS },\t    display_debug_addr,\t    &do_debug_addr,\ttrue },\n+  { { \".debug_cu_index\",    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_cu_index,\t    &do_debug_cu_index, false },\n+  { { \".debug_tu_index\",    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_cu_index,\t    &do_debug_cu_index, false },\n+  { { \".gnu_debuglink\",\t    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_debug_links,    &do_debug_links,\tfalse },\n+  { { \".gnu_debugaltlink\",  \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_debug_links,    &do_debug_links,\tfalse },\n+  { { \".debug_sup\",\t    \"\",\t\t\t     \"\",\t NO_ABBREVS },\t    display_debug_sup,\t    &do_debug_links,\tfalse },\n   /* Separate debug info files can containt their own .debug_str section,\n      and this might be in *addition* to a .debug_str section already present\n-     in the main file.  Hence we need to have two entries for .debug_str.  */\n-  { { \".debug_str\",\t    \".zdebug_str\",\tNO_ABBREVS },      display_debug_str,\t   &do_debug_str,\tfalse },\n+     in the main file.\tHence we need to have two entries for .debug_str.  */\n+  { { \".debug_str\",\t    \".zdebug_str\",\t\"\",\t  NO_ABBREVS },\t     display_debug_str,\t   &do_debug_str,\tfalse },\n };\n \n /* A static assertion.  */"
    },
    {
      "sha": "dd4f4c8251e2f03eb2ae29c3a99f2d21cba06641",
      "filename": "binutils/dwarf.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/dwarf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/dwarf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.h?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -128,11 +128,13 @@ enum dwarf_section_display_enum\n struct dwarf_section\n {\n   /* A debug section has a different name when it's stored compressed\n-     or not.  COMPRESSED_NAME and UNCOMPRESSED_NAME are the two\n+     or not.  XCOFF DWARF section also have a special name.\n+     COMPRESSED_NAME, UNCOMPRESSED_NAME and XCOFF_NAME are the three\n      possibilities.  NAME is set to whichever one is used for this\n      input file, as determined by load_debug_section().  */\n   const char *                     uncompressed_name;\n   const char *                     compressed_name;\n+  const char *                     xcoff_name;\n   const char *                     name;\n   /* If non-NULL then FILENAME is the name of the separate debug info\n      file containing the section.  */"
    },
    {
      "sha": "f78b70a8d401d454d53ffd2c90559bffb9c38204",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -3718,7 +3718,6 @@ load_debug_section (enum dwarf_section_display_enum debug, void *file)\n       if (streq (section->filename, bfd_get_filename (abfd)))\n \treturn true;\n     }\n-\n   /* Locate the debug section.  */\n   sec = bfd_get_section_by_name (abfd, section->uncompressed_name);\n   if (sec != NULL)\n@@ -3728,6 +3727,12 @@ load_debug_section (enum dwarf_section_display_enum debug, void *file)\n       sec = bfd_get_section_by_name (abfd, section->compressed_name);\n       if (sec != NULL)\n         section->name = section->compressed_name;\n+      else\n+\t{\n+\t  sec = bfd_get_section_by_name (abfd, section->xcoff_name);\n+\t  if (sec != NULL)\n+\t    section->name = section->xcoff_name;\n+\t}\n     }\n   if (sec == NULL)\n     return false;\n@@ -3811,16 +3816,19 @@ dump_dwarf_section (bfd *abfd, asection *section,\n \n   for (i = 0; i < max; i++)\n     if ((strcmp (debug_displays [i].section.uncompressed_name, match) == 0\n-\t || strcmp (debug_displays [i].section.compressed_name, match) == 0)\n+\t || strcmp (debug_displays [i].section.compressed_name, match) == 0\n+\t || strcmp (debug_displays [i].section.xcoff_name, match) == 0)\n \t&& debug_displays [i].enabled != NULL\n \t&& *debug_displays [i].enabled)\n       {\n \tstruct dwarf_section *sec = &debug_displays [i].section;\n \n \tif (strcmp (sec->uncompressed_name, match) == 0)\n \t  sec->name = sec->uncompressed_name;\n-\telse\n+\telse if (strcmp (sec->compressed_name, match) == 0)\n \t  sec->name = sec->compressed_name;\n+\telse\n+\t  sec->name = sec->xcoff_name;\n \tif (load_specific_debug_section ((enum dwarf_section_display_enum) i,\n                                          section, abfd))\n \t  {"
    },
    {
      "sha": "7aaf08f0afe4f9a10f358d5c08c5f6ab02acd9f1",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -1,3 +1,8 @@\n+2021-07-14  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* config/tc-ppc.c (ppc_change_debug_section): Update to\n+\tmatch new name's field.\n+\n 2021-07-12  Tucker  <tuckkern@sourceware@gmail.com>\n \n \tPR 28054"
    },
    {
      "sha": "567f8011a5f5fbaf338f850d03012726ba93f74c",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/51d29b8cacd75865a9ffc46cffffe1e47c33ccff/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=51d29b8cacd75865a9ffc46cffffe1e47c33ccff",
      "patch": "@@ -4628,7 +4628,7 @@ ppc_change_debug_section (unsigned int idx, subsegT subseg)\n   flagword oldflags;\n   const struct xcoff_dwsect_name *dw = &xcoff_dwsect_names[idx];\n \n-  sec = subseg_new (dw->name, subseg);\n+  sec = subseg_new (dw->xcoff_name, subseg);\n   oldflags = bfd_section_flags (sec);\n   if (oldflags == SEC_NO_FLAGS)\n     {"
    }
  ]
}