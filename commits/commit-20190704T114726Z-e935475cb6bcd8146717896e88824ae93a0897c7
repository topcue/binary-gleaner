{
  "sha": "e935475cb6bcd8146717896e88824ae93a0897c7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTkzNTQ3NWNiNmJjZDgxNDY3MTc4OTZlODg4MjRhZTkzYTA4OTdjNw==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-07-04T11:41:20Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-07-04T11:47:26Z"
    },
    "message": "Arm/AArch64: Split DISPLACED_MODIFIED_INSNS name clash\n\nBoth targets define DISPLACED_MODIFIED_INSNS, each with different values.\nAdd ARM_ and AARCH64_ to the start of the name to prevent confusion.\n\nNo functionality changes.\n\ngdb/ChangeLog:\n\n\t* aarch64-linux-tdep.c (aarch64_linux_init_abi): Use\n\tAARCH64_DISPLACED_MODIFIED_INSNS.\n\t* aarch64-tdep.c (struct aarch64_displaced_step_data)\n\t(aarch64_displaced_step_copy_insn): Likewise.\n\t* aarch64-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..\n\t(AARCH64_DISPLACED_MODIFIED_INSNS): ...to this.\n\t* arm-linux-tdep.c (arm_linux_cleanup_svc): Use\n\tARM_DISPLACED_MODIFIED_INSNS.\n\t* arm-tdep.c (arm_gdbarch_init): Likewise.\n\t* arm-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..\n\t(ARM_DISPLACED_MODIFIED_INSNS): ...to this.\n\t(struct arm_displaced_step_closure): Use\n\tARM_DISPLACED_MODIFIED_INSNS.",
    "tree": {
      "sha": "eb5596ff723475a39bb57d980124b635063720ef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eb5596ff723475a39bb57d980124b635063720ef"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e935475cb6bcd8146717896e88824ae93a0897c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e935475cb6bcd8146717896e88824ae93a0897c7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e935475cb6bcd8146717896e88824ae93a0897c7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e935475cb6bcd8146717896e88824ae93a0897c7/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "df0bb381e27a8b1594c492a34c48ff6e6bbd29d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df0bb381e27a8b1594c492a34c48ff6e6bbd29d1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/df0bb381e27a8b1594c492a34c48ff6e6bbd29d1"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 24,
    "deletions": 8
  },
  "files": [
    {
      "sha": "ae1b4f3b782e2d65c2b518ca4023f15d5f1d2f68",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e935475cb6bcd8146717896e88824ae93a0897c7",
      "patch": "@@ -1,3 +1,19 @@\n+2019-07-04  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* aarch64-linux-tdep.c (aarch64_linux_init_abi): Use\n+\tAARCH64_DISPLACED_MODIFIED_INSNS.\n+\t* aarch64-tdep.c (struct aarch64_displaced_step_data)\n+\t(aarch64_displaced_step_copy_insn): Likewise.\n+\t* aarch64-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..\n+\t(AARCH64_DISPLACED_MODIFIED_INSNS): ...to this.\n+\t* arm-linux-tdep.c (arm_linux_cleanup_svc): Use\n+\tARM_DISPLACED_MODIFIED_INSNS.\n+\t* arm-tdep.c (arm_gdbarch_init): Likewise.\n+\t* arm-tdep.h (DISPLACED_MODIFIED_INSNS): Rename from..\n+\t(ARM_DISPLACED_MODIFIED_INSNS): ...to this.\n+\t(struct arm_displaced_step_closure): Use\n+\tARM_DISPLACED_MODIFIED_INSNS.\n+\n 2019-07-04  Alan Hayward  <alan.hayward@arm.com>\n \n \t* features/Makefile: Remove unused xml files."
    },
    {
      "sha": "831e62fb863248e5cde9985cc8dfa91457597e3d",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=e935475cb6bcd8146717896e88824ae93a0897c7",
      "patch": "@@ -1658,7 +1658,7 @@ aarch64_linux_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n   set_gdbarch_get_syscall_number (gdbarch, aarch64_linux_get_syscall_number);\n \n   /* Displaced stepping.  */\n-  set_gdbarch_max_insn_length (gdbarch, 4 * DISPLACED_MODIFIED_INSNS);\n+  set_gdbarch_max_insn_length (gdbarch, 4 * AARCH64_DISPLACED_MODIFIED_INSNS);\n   set_gdbarch_displaced_step_copy_insn (gdbarch,\n \t\t\t\t\taarch64_displaced_step_copy_insn);\n   set_gdbarch_displaced_step_fixup (gdbarch, aarch64_displaced_step_fixup);"
    },
    {
      "sha": "17f5e1ee4580f1a0104981924e0a5af9786bab9a",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=e935475cb6bcd8146717896e88824ae93a0897c7",
      "patch": "@@ -2756,7 +2756,7 @@ struct aarch64_displaced_step_data\n   /* The address where the instruction will be executed at.  */\n   CORE_ADDR new_addr;\n   /* Buffer of instructions to be copied to NEW_ADDR to execute.  */\n-  uint32_t insn_buf[DISPLACED_MODIFIED_INSNS];\n+  uint32_t insn_buf[AARCH64_DISPLACED_MODIFIED_INSNS];\n   /* Number of instructions in INSN_BUF.  */\n   unsigned insn_count;\n   /* Registers when doing displaced stepping.  */\n@@ -3000,7 +3000,7 @@ aarch64_displaced_step_copy_insn (struct gdbarch *gdbarch,\n   dsd.insn_count = 0;\n   aarch64_relocate_instruction (insn, &visitor,\n \t\t\t\t(struct aarch64_insn_data *) &dsd);\n-  gdb_assert (dsd.insn_count <= DISPLACED_MODIFIED_INSNS);\n+  gdb_assert (dsd.insn_count <= AARCH64_DISPLACED_MODIFIED_INSNS);\n \n   if (dsd.insn_count != 0)\n     {"
    },
    {
      "sha": "e4b045b599966adf91a375fa1c4d880ce14e3457",
      "filename": "gdb/aarch64-tdep.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/aarch64-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/aarch64-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.h?ref=e935475cb6bcd8146717896e88824ae93a0897c7",
      "patch": "@@ -56,7 +56,7 @@ struct regset;\n \n /* The maximum number of modified instructions generated for one\n    single-stepped instruction.  */\n-#define DISPLACED_MODIFIED_INSNS 1\n+#define AARCH64_DISPLACED_MODIFIED_INSNS 1\n \n /* Target-dependent structure in gdbarch.  */\n struct gdbarch_tdep"
    },
    {
      "sha": "8c0c0585d7231897861ea5a8614f23dadcde5b3b",
      "filename": "gdb/arm-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/arm-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/arm-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-linux-tdep.c?ref=e935475cb6bcd8146717896e88824ae93a0897c7",
      "patch": "@@ -954,7 +954,7 @@ arm_linux_cleanup_svc (struct gdbarch *gdbarch,\n \n   within_scratch = (apparent_pc >= dsc->scratch_base\n \t\t    && apparent_pc < (dsc->scratch_base\n-\t\t\t\t      + DISPLACED_MODIFIED_INSNS * 4 + 4));\n+\t\t\t\t      + ARM_DISPLACED_MODIFIED_INSNS * 4 + 4));\n \n   if (debug_displaced)\n     {"
    },
    {
      "sha": "42fa1b251e26e4dbf386634148dae0db8fa6dc31",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=e935475cb6bcd8146717896e88824ae93a0897c7",
      "patch": "@@ -9268,7 +9268,7 @@ arm_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   /* Note: for displaced stepping, this includes the breakpoint, and one word\n      of additional scratch space.  This setting isn't used for anything beside\n      displaced stepping at present.  */\n-  set_gdbarch_max_insn_length (gdbarch, 4 * DISPLACED_MODIFIED_INSNS);\n+  set_gdbarch_max_insn_length (gdbarch, 4 * ARM_DISPLACED_MODIFIED_INSNS);\n \n   /* This should be low enough for everything.  */\n   tdep->lowest_pc = 0x20;"
    },
    {
      "sha": "7da11656c273dff4bffa2156462c8a5d836bdc30",
      "filename": "gdb/arm-tdep.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/arm-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e935475cb6bcd8146717896e88824ae93a0897c7/gdb/arm-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.h?ref=e935475cb6bcd8146717896e88824ae93a0897c7",
      "patch": "@@ -152,7 +152,7 @@ struct gdbarch_tdep\n /* The maximum number of modified instructions generated for one single-stepped\n    instruction, including the breakpoint (usually at the end of the instruction\n    sequence) and any scratch words, etc.  */\n-#define DISPLACED_MODIFIED_INSNS\t8\n+#define ARM_DISPLACED_MODIFIED_INSNS\t8\n \n struct arm_displaced_step_closure : public displaced_step_closure\n {\n@@ -215,7 +215,7 @@ struct arm_displaced_step_closure : public displaced_step_closure\n      - ARM instruction occupies one slot,\n      - Thumb 16 bit instruction occupies one slot,\n      - Thumb 32-bit instruction occupies *two* slots, one part for each.  */\n-  unsigned long modinsn[DISPLACED_MODIFIED_INSNS];\n+  unsigned long modinsn[ARM_DISPLACED_MODIFIED_INSNS];\n   int numinsns;\n   CORE_ADDR insn_addr;\n   CORE_ADDR scratch_base;"
    }
  ]
}