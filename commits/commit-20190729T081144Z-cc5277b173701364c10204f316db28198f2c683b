{
  "sha": "cc5277b173701364c10204f316db28198f2c683b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2M1Mjc3YjE3MzcwMTM2NGMxMDIwNGYzMTZkYjI4MTk4ZjJjNjgzYg==",
  "commit": {
    "author": {
      "name": "Martin Liska",
      "email": "mliska@suse.cz",
      "date": "2019-07-04T14:39:08Z"
    },
    "committer": {
      "name": "Martin Liska",
      "email": "mliska@suse.cz",
      "date": "2019-07-29T08:11:44Z"
    },
    "message": "Support .gnu.lto_.lto section in ELF files (PR 24768).\n\nbfd/ChangeLog:\n\n2019-07-22  Martin Liska  <mliska@suse.cz>\n\n\tPR 24768\n\t* archive.c (_bfd_compute_and_write_armap): Come up with\n\treport_plugin_err variable.\n\t* bfd-in2.h (struct bfd): Add lto_slim_object flag.\n\t* elf.c (struct lto_section): New.\n\t(_bfd_elf_make_section_from_shdr): Parse content of\n\t.gnu_lto_.lto section.\n\t* elflink.c: Report error for a missing LTO plugin.\n\t* linker.c (_bfd_generic_link_add_one_symbol): Likewise.\n\nbinutils/ChangeLog:\n\n2019-07-22  Martin Liska  <mliska@suse.cz>\n\n\tPR 24768\n\t* nm.c (filter_symbols): Set report_plugin_err if\n\terror is reported.\n\t(display_rel_file): Report error for a missing LTO plugin.\n\ngold/ChangeLog:\n\n2019-07-22  Martin Liska  <mliska@suse.cz>\n\n\tPR 24768\n\t* layout.h (class Layout): Add is_lto_slim_object and\n\tset_lto_slim_object.\n\t* object.cc (struct lto_section): Add lto_slim_object_.\n\t(big_endian>::do_layout): Parse content of\n\t.gnu_lto_.lto section.\n\t(big_endian>::do_add_symbols): Report error for a missing\n\tLTO plugin.",
    "tree": {
      "sha": "a8f2b4749dc337a6e2b265785fe818c247329371",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a8f2b4749dc337a6e2b265785fe818c247329371"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc5277b173701364c10204f316db28198f2c683b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc5277b173701364c10204f316db28198f2c683b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc5277b173701364c10204f316db28198f2c683b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc5277b173701364c10204f316db28198f2c683b/comments",
  "author": {
    "login": "marxin",
    "id": 2658545,
    "node_id": "MDQ6VXNlcjI2NTg1NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marxin",
    "html_url": "https://github.com/marxin",
    "followers_url": "https://api.github.com/users/marxin/followers",
    "following_url": "https://api.github.com/users/marxin/following{/other_user}",
    "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marxin/subscriptions",
    "organizations_url": "https://api.github.com/users/marxin/orgs",
    "repos_url": "https://api.github.com/users/marxin/repos",
    "events_url": "https://api.github.com/users/marxin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marxin/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "marxin",
    "id": 2658545,
    "node_id": "MDQ6VXNlcjI2NTg1NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marxin",
    "html_url": "https://github.com/marxin",
    "followers_url": "https://api.github.com/users/marxin/followers",
    "following_url": "https://api.github.com/users/marxin/following{/other_user}",
    "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marxin/subscriptions",
    "organizations_url": "https://api.github.com/users/marxin/orgs",
    "repos_url": "https://api.github.com/users/marxin/repos",
    "events_url": "https://api.github.com/users/marxin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marxin/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ac50aea1311b01c745afc4dba102a8d20d0eea6e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac50aea1311b01c745afc4dba102a8d20d0eea6e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ac50aea1311b01c745afc4dba102a8d20d0eea6e"
    }
  ],
  "stats": {
    "total": 171,
    "additions": 157,
    "deletions": 14
  },
  "files": [
    {
      "sha": "425835179267bdbda021a47be762dab8fd947dd8",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -1,3 +1,15 @@\n+2019-07-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR 24768\n+\t* archive.c (_bfd_compute_and_write_armap): Come up with\n+\treport_plugin_err variable.\n+\t* bfd-in2.h (struct bfd): Add lto_slim_object flag.\n+\t* elf.c (struct lto_section): New.\n+\t(_bfd_elf_make_section_from_shdr): Parse content of\n+\t.gnu_lto_.lto section.\n+\t* elflink.c: Report error for a missing LTO plugin.\n+\t* linker.c (_bfd_generic_link_add_one_symbol): Likewise.\n+\n 2019-07-28  Alan Modra  <amodra@gmail.com>\n \n \tPR 24857"
    },
    {
      "sha": "0a7da3a0cb9c839657aa615107abc67d2d103800",
      "filename": "bfd/archive.c",
      "status": "modified",
      "additions": 17,
      "deletions": 4,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/bfd/archive.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/bfd/archive.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archive.c?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -2236,6 +2236,7 @@ _bfd_compute_and_write_armap (bfd *arch, unsigned int elength)\n   long syms_max = 0;\n   bfd_boolean ret;\n   bfd_size_type amt;\n+  static bfd_boolean report_plugin_err = TRUE;\n \n   /* Dunno if this is the best place for this info...  */\n   if (elength != 0)\n@@ -2270,6 +2271,14 @@ _bfd_compute_and_write_armap (bfd *arch, unsigned int elength)\n \t  long symcount;\n \t  long src_count;\n \n+\t  if (current->lto_slim_object && report_plugin_err)\n+\t    {\n+\t      report_plugin_err = FALSE;\n+\t      _bfd_error_handler\n+\t\t(_(\"%pB: plugin needed to handle lto object\"),\n+\t\t current);\n+\t    }\n+\n \t  storage = bfd_get_symtab_upper_bound (current);\n \t  if (storage < 0)\n \t    goto error_return;\n@@ -2322,10 +2331,14 @@ _bfd_compute_and_write_armap (bfd *arch, unsigned int elength)\n \t\t\t  && syms[src_count]->name[1] == '_'\n \t\t\t  && strcmp (syms[src_count]->name\n \t\t\t\t     + (syms[src_count]->name[2] == '_'),\n-\t\t\t\t     \"__gnu_lto_slim\") == 0)\n-\t\t\t_bfd_error_handler\n-\t\t\t  (_(\"%pB: plugin needed to handle lto object\"),\n-\t\t\t   current);\n+\t\t\t\t     \"__gnu_lto_slim\") == 0\n+\t\t\t  && report_plugin_err)\n+\t\t\t{\n+\t\t\t  report_plugin_err = FALSE;\n+\t\t\t  _bfd_error_handler\n+\t\t\t    (_(\"%pB: plugin needed to handle lto object\"),\n+\t\t\t     current);\n+\t\t\t}\n \t\t      namelen = strlen (syms[src_count]->name);\n \t\t      amt = sizeof (char *);\n \t\t      map[orl_count].name = (char **) bfd_alloc (arch, amt);"
    },
    {
      "sha": "7e6dad78d450b3b555bed9a0994d25fcb2d2da01",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -7196,6 +7196,9 @@ struct bfd\n   /* Set if this is a plugin output file.  */\n   unsigned int lto_output : 1;\n \n+  /* Set if this is a slim LTO object not loaded with a compiler plugin.  */\n+  unsigned int lto_slim_object: 1;\n+\n   /* Set to dummy BFD created when claimed by a compiler plug-in\n      library.  */\n   bfd *plugin_dummy_bfd;"
    },
    {
      "sha": "6b5d12c04433d9705a4ec910958e3153d851262a",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -999,6 +999,18 @@ convert_zdebug_to_debug (bfd *abfd, const char *name)\n   return new_name;\n }\n \n+/* This a copy of lto_section defined in GCC (lto-streamer.h).  */\n+\n+struct lto_section\n+{\n+  int16_t major_version;\n+  int16_t minor_version;\n+  unsigned char slim_object;\n+\n+  /* Flags is a private field that is not defined publicly.  */\n+  uint16_t flags;\n+};\n+\n /* Make a BFD section from an ELF section.  We store a pointer to the\n    BFD section in the bfd_section field of the header.  */\n \n@@ -1275,6 +1287,17 @@ _bfd_elf_make_section_from_shdr (bfd *abfd,\n \tnewsect->flags |= SEC_ELF_RENAME;\n     }\n \n+  /* GCC uses .gnu.lto_.lto.<some_hash> as a LTO bytecode information\n+     section.  */\n+  const char *lto_section_name = \".gnu.lto_.lto.\";\n+  if (strncmp (name, lto_section_name, strlen (lto_section_name)) == 0)\n+    {\n+      struct lto_section lsection;\n+      if (bfd_get_section_contents (abfd, newsect, &lsection, 0,\n+\t\t\t\t    sizeof (struct lto_section)))\n+\tabfd->lto_slim_object = lsection.slim_object;\n+    }\n+\n   return TRUE;\n }\n "
    },
    {
      "sha": "597184582f345c554e123e19ae7e2778f3da7c5a",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -4401,6 +4401,12 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)\n       goto error_free_vers;\n     }\n \n+  if (abfd->lto_slim_object)\n+    {\n+      _bfd_error_handler\n+\t(_(\"%pB: plugin needed to handle lto object\"), abfd);\n+    }\n+\n   for (isym = isymbuf, isymend = isymbuf + extsymcount;\n        isym < isymend;\n        isym++, sym_hash++, ever = (ever != NULL ? ever + 1 : NULL))"
    },
    {
      "sha": "edbd0a7df46901e016f43659ed6b6bdf588c560e",
      "filename": "bfd/linker.c",
      "status": "modified",
      "additions": 18,
      "deletions": 6,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/bfd/linker.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/bfd/linker.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/linker.c?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -1421,12 +1421,24 @@ _bfd_generic_link_add_one_symbol (struct bfd_link_info *info,\n   else if (bfd_is_com_section (section))\n     {\n       row = COMMON_ROW;\n-      if (!bfd_link_relocatable (info)\n-\t  && name[0] == '_'\n-\t  && name[1] == '_'\n-\t  && strcmp (name + (name[2] == '_'), \"__gnu_lto_slim\") == 0)\n-\t_bfd_error_handler\n-\t  (_(\"%pB: plugin needed to handle lto object\"), abfd);\n+      static bfd_boolean report_plugin_err = TRUE;\n+      if (!bfd_link_relocatable (info) && report_plugin_err)\n+\t{\n+\t  if (abfd->lto_slim_object)\n+\t    {\n+\t      report_plugin_err = FALSE;\n+\t      _bfd_error_handler\n+\t\t(_(\"%pB: plugin needed to handle lto object\"), abfd);\n+\t    }\n+\t  else if (name[0] == '_'\n+\t\t   && name[1] == '_'\n+\t\t   && strcmp (name + (name[2] == '_'), \"__gnu_lto_slim\") == 0)\n+\t    {\n+\t      report_plugin_err = FALSE;\n+\t      _bfd_error_handler\n+\t\t(_(\"%pB: plugin needed to handle lto object\"), abfd);\n+\t    }\n+\t}\n     }\n   else\n     row = DEF_ROW;"
    },
    {
      "sha": "f3be2641f15cdcb64ad76f8556d9dbded7d5de1c",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR 24768\n+\t* nm.c (filter_symbols): Set report_plugin_err if\n+\terror is reported.\n+\t(display_rel_file): Report error for a missing LTO plugin.\n+\n 2019-07-26  Alan Modra  <amodra@gmail.com>\n \n \tPR 24798"
    },
    {
      "sha": "5d3d647843493a5ad46f00c6b561563243290682",
      "filename": "binutils/nm.c",
      "status": "modified",
      "additions": 20,
      "deletions": 3,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/binutils/nm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/binutils/nm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/nm.c?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -438,6 +438,10 @@ print_symdef_entry (bfd *abfd)\n     }\n }\n \f\n+\n+/* True when we can report missing plugin error.  */\n+bfd_boolean report_plugin_err = TRUE;\n+\n /* Choose which symbol entries to print;\n    compact them downward to get rid of the rest.\n    Return the number of symbols to be printed.  */\n@@ -470,9 +474,13 @@ filter_symbols (bfd *abfd, bfd_boolean is_dynamic, void *minisyms,\n \n       if (sym->name[0] == '_'\n \t  && sym->name[1] == '_'\n-\t  && strcmp (sym->name + (sym->name[2] == '_'), \"__gnu_lto_slim\") == 0)\n-\tnon_fatal (_(\"%s: plugin needed to handle lto object\"),\n-\t\t   bfd_get_filename (abfd));\n+\t  && strcmp (sym->name + (sym->name[2] == '_'), \"__gnu_lto_slim\") == 0\n+\t  && report_plugin_err)\n+\t{\n+\t  report_plugin_err = FALSE;\n+\t  non_fatal (_(\"%s: plugin needed to handle lto object\"),\n+\t\t     bfd_get_filename (abfd));\n+\t}\n \n       if (undefined_only)\n \tkeep = bfd_is_und_section (sym->section);\n@@ -1164,6 +1172,15 @@ display_rel_file (bfd *abfd, bfd *archive_bfd)\n \t}\n     }\n \n+  /* lto_slim_object is set to false when a bfd is loaded with a compiler\n+     LTO plugin.  */\n+  if (abfd->lto_slim_object)\n+    {\n+      report_plugin_err = FALSE;\n+      non_fatal (_(\"%s: plugin needed to handle lto object\"),\n+\t\t bfd_get_filename (abfd));\n+    }\n+\n   /* Discard the symbols we don't want to print.\n      It's OK to do this in place; we'll free the storage anyway\n      (after printing).  */"
    },
    {
      "sha": "754d0e3eb202e09f9f0b5993654411a8462bdbf6",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -1,3 +1,14 @@\n+2019-07-29  Martin Liska  <mliska@suse.cz>\n+\n+\tPR 24768\n+\t* layout.h (class Layout): Add is_lto_slim_object and\n+\tset_lto_slim_object.\n+\t* object.cc (struct lto_section): Add lto_slim_object_.\n+\t(big_endian>::do_layout): Parse content of\n+\t.gnu_lto_.lto section.\n+\t(big_endian>::do_add_symbols): Report error for a missing\n+\tLTO plugin.\n+\n 2019-07-13  Alan Modra  <amodra@gmail.com>\n \n \t* powerpc.cc (xlate_pcrel_opt): New function."
    },
    {
      "sha": "b9b75816e8ec0364cf8b51ce33d5048d712a3dfc",
      "filename": "gold/layout.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/gold/layout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/gold/layout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/layout.h?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -593,6 +593,14 @@ class Layout\n   set_unique_segment_for_sections_specified()\n   { this->unique_segment_for_sections_specified_ = true; }\n \n+  bool\n+  is_lto_slim_object () const\n+  { return this->lto_slim_object_; }\n+\n+  void\n+  set_lto_slim_object ()\n+  { this->lto_slim_object_ = true; }\n+\n   // For incremental updates, allocate a block of memory from the\n   // free list.  Find a block starting at or after MINOFF.\n   off_t\n@@ -1480,6 +1488,8 @@ class Layout\n   Incremental_inputs* incremental_inputs_;\n   // Whether we record output section data created in script\n   bool record_output_section_data_from_script_;\n+  // Set if this is a slim LTO object not loaded with a compiler plugin\n+  bool lto_slim_object_;\n   // List of output data that needs to be removed at relaxation clean up.\n   Output_section_data_list script_output_section_data_list_;\n   // Structure to save segment states before entering the relaxation loop."
    },
    {
      "sha": "86c519acf72db919ff1f6f2f5540f1514dbf3e10",
      "filename": "gold/object.cc",
      "status": "modified",
      "additions": 30,
      "deletions": 1,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc5277b173701364c10204f316db28198f2c683b/gold/object.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc5277b173701364c10204f316db28198f2c683b/gold/object.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/object.cc?ref=cc5277b173701364c10204f316db28198f2c683b",
      "patch": "@@ -1380,6 +1380,18 @@ Sized_relobj_file<size, big_endian>::layout_gnu_property_section(\n     }\n }\n \n+// This a copy of lto_section defined in GCC (lto-streamer.h)\n+\n+struct lto_section\n+{\n+  int16_t major_version;\n+  int16_t minor_version;\n+  unsigned char slim_object;\n+\n+  /* Flags is a private field that is not defined publicly.  */\n+  uint16_t flags;\n+};\n+\n // Lay out the input sections.  We walk through the sections and check\n // whether they should be included in the link.  If they should, we\n // pass them to the Layout object, which will return an output section\n@@ -1865,6 +1877,19 @@ Sized_relobj_file<size, big_endian>::do_layout(Symbol_table* symtab,\n \t\tdebug_types_sections.push_back(i);\n \t    }\n \t}\n+\n+      /* GCC uses .gnu.lto_.lto.<some_hash> as a LTO bytecode information\n+\t section.  */\n+      const char *lto_section_name = \".gnu.lto_.lto.\";\n+      if (strncmp (name, lto_section_name, strlen (lto_section_name)) == 0)\n+\t{\n+\t  section_size_type contents_len;\n+\t  const unsigned char* pcontents = this->section_contents(i, &contents_len, false);\n+\t  struct lto_section lsection = *(const lto_section*)pcontents;\n+\t  if (lsection.slim_object)\n+\t    gold_info(_(\"%s: plugin needed to handle lto object\"),\n+\t\t      this->name().c_str());\n+\t}\n     }\n \n   if (!is_pass_two)\n@@ -2083,7 +2108,7 @@ template<int size, bool big_endian>\n void\n Sized_relobj_file<size, big_endian>::do_add_symbols(Symbol_table* symtab,\n \t\t\t\t\t\t    Read_symbols_data* sd,\n-\t\t\t\t\t\t    Layout*)\n+\t\t\t\t\t\t    Layout* layout)\n {\n   if (sd->symbols == NULL)\n     {\n@@ -2102,6 +2127,10 @@ Sized_relobj_file<size, big_endian>::do_add_symbols(Symbol_table* symtab,\n \n   this->symbols_.resize(symcount);\n \n+  if (layout->is_lto_slim_object ())\n+    gold_info(_(\"%s: plugin needed to handle lto object\"),\n+\t      this->name().c_str());\n+\n   const char* sym_names =\n     reinterpret_cast<const char*>(sd->symbol_names->data());\n   symtab->add_from_relobj(this,"
    }
  ]
}