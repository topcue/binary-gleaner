{
  "sha": "df35e6262da99acc80bb88d669975f0b52e33876",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGYzNWU2MjYyZGE5OWFjYzgwYmI4OGQ2Njk5NzVmMGI1MmUzMzg3Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-17T15:35:04Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-17T15:35:05Z"
    },
    "message": "Let expand_symtabs_matching short-circuit\n\nThis changes expand_symtabs_exp_notify_ftype to return bool, and\nupdates all the uses.  Now, if the notification function returns\nfalse, the call is short-circuited and stops examining symtabs.  This\nis a step toward replacing map_symtabs_matching_filename with\nexpand_symtabs_matching.\n\ngdb/ChangeLog\n2021-04-17  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.c (default_collect_symbol_completion_matches_break_on):\n\tUpdate.\n\t* symfile.h (expand_symtabs_matching): Return bool.\n\t* symfile.c (expand_symtabs_matching): Return bool.\n\t* symfile-debug.c (objfile::expand_symtabs_matching): Return\n\tbool.\n\t* quick-symbol.h (expand_symtabs_exp_notify_ftype): Return bool.\n\t(struct quick_symbol_functions) <expand_symtabs_matching>: Return\n\tbool.\n\t* psymtab.c (psymbol_functions::expand_symtabs_matching): Return\n\tbool.\n\t* psympriv.h (struct psymbol_functions)\n\t<expand_symtabs_matching>: Return bool.\n\t* objfiles.h (struct objfile) <expand_symtabs_matching>: Return\n\tbool.\n\t* dwarf2/read.c (struct dwarf2_gdb_index)\n\t<expand_symtabs_matching>: Return bool.\n\t(struct dwarf2_debug_names_index) <expand_symtabs_matching>:\n\tReturn bool.\n\t(dw2_expand_symtabs_matching_symbol): Return bool.\n\t(dw2_expand_symtabs_matching_one, dw2_expand_marked_cus)\n\t(dw2_expand_symtabs_matching)\n\t(dwarf2_gdb_index::expand_symtabs_matching)\n\t(dwarf2_debug_names_index::expand_symtabs_matching)\n\t(dwarf2_debug_names_index::expand_symtabs_matching): Return bool.",
    "tree": {
      "sha": "dbef71936b779e3fec07ed64db0a7570186da308",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dbef71936b779e3fec07ed64db0a7570186da308"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/df35e6262da99acc80bb88d669975f0b52e33876",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df35e6262da99acc80bb88d669975f0b52e33876",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/df35e6262da99acc80bb88d669975f0b52e33876",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/df35e6262da99acc80bb88d669975f0b52e33876/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e357e9904cad07ba6aaaa2d1aa06de2c52464486",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e357e9904cad07ba6aaaa2d1aa06de2c52464486",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e357e9904cad07ba6aaaa2d1aa06de2c52464486"
    }
  ],
  "stats": {
    "total": 162,
    "additions": 114,
    "deletions": 48
  },
  "files": [
    {
      "sha": "f1d21931751833989b9de73565379fdbb6ef4a7d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -1,3 +1,31 @@\n+2021-04-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.c (default_collect_symbol_completion_matches_break_on):\n+\tUpdate.\n+\t* symfile.h (expand_symtabs_matching): Return bool.\n+\t* symfile.c (expand_symtabs_matching): Return bool.\n+\t* symfile-debug.c (objfile::expand_symtabs_matching): Return\n+\tbool.\n+\t* quick-symbol.h (expand_symtabs_exp_notify_ftype): Return bool.\n+\t(struct quick_symbol_functions) <expand_symtabs_matching>: Return\n+\tbool.\n+\t* psymtab.c (psymbol_functions::expand_symtabs_matching): Return\n+\tbool.\n+\t* psympriv.h (struct psymbol_functions)\n+\t<expand_symtabs_matching>: Return bool.\n+\t* objfiles.h (struct objfile) <expand_symtabs_matching>: Return\n+\tbool.\n+\t* dwarf2/read.c (struct dwarf2_gdb_index)\n+\t<expand_symtabs_matching>: Return bool.\n+\t(struct dwarf2_debug_names_index) <expand_symtabs_matching>:\n+\tReturn bool.\n+\t(dw2_expand_symtabs_matching_symbol): Return bool.\n+\t(dw2_expand_symtabs_matching_one, dw2_expand_marked_cus)\n+\t(dw2_expand_symtabs_matching)\n+\t(dwarf2_gdb_index::expand_symtabs_matching)\n+\t(dwarf2_debug_names_index::expand_symtabs_matching)\n+\t(dwarf2_debug_names_index::expand_symtabs_matching): Return bool.\n+\n 2021-04-17  Tom Tromey  <tom@tromey.com>\n \n \t* quick-symbol.h (enum block_search_flag_values): New."
    },
    {
      "sha": "b1604a13fc2d320922b8faf018be568cb0d32004",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 54,
      "deletions": 31,
      "changes": 85,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -2283,7 +2283,7 @@ struct dwarf2_gdb_index : public dwarf2_base_index_functions\n      gdb::function_view<symbol_found_callback_ftype> callback,\n      symbol_compare_ftype *ordered_compare) override;\n \n-  void expand_symtabs_matching\n+  bool expand_symtabs_matching\n     (struct objfile *objfile,\n      gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n      const lookup_name_info *lookup_name,\n@@ -2312,7 +2312,7 @@ struct dwarf2_debug_names_index : public dwarf2_base_index_functions\n      gdb::function_view<symbol_found_callback_ftype> callback,\n      symbol_compare_ftype *ordered_compare) override;\n \n-  void expand_symtabs_matching\n+  bool expand_symtabs_matching\n     (struct objfile *objfile,\n      gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n      const lookup_name_info *lookup_name,\n@@ -3822,15 +3822,15 @@ dwarf2_base_index_functions::expand_symtabs_with_fullname\n     }\n }\n \n-static void\n+static bool\n dw2_expand_symtabs_matching_symbol\n   (mapped_index_base &index,\n    const lookup_name_info &lookup_name_in,\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<bool (offset_type)> match_callback,\n    dwarf2_per_objfile *per_objfile);\n \n-static void\n+static bool\n dw2_expand_symtabs_matching_one\n   (dwarf2_per_cu_data *per_cu,\n    dwarf2_per_objfile *per_objfile,\n@@ -4125,7 +4125,7 @@ mapped_index_base::build_name_components (dwarf2_per_objfile *per_objfile)\n    symbol name that matches, calls MATCH_CALLBACK, passing it the\n    symbol's index in the mapped_index_base symbol table.  */\n \n-static void\n+static bool\n dw2_expand_symtabs_matching_symbol\n   (mapped_index_base &index,\n    const lookup_name_info &lookup_name_in,\n@@ -4210,19 +4210,25 @@ dw2_expand_symtabs_matching_symbol\n \n   /* Finally call the callback, once per match.  */\n   ULONGEST prev = -1;\n+  bool result = true;\n   for (offset_type idx : matches)\n     {\n       if (prev != idx)\n \t{\n \t  if (!match_callback (idx))\n-\t    break;\n+\t    {\n+\t      result = false;\n+\t      break;\n+\t    }\n \t  prev = idx;\n \t}\n     }\n \n   /* Above we use a type wider than idx's for 'prev', since 0 and\n      (offset_type)-1 are both possible values.  */\n   static_assert (sizeof (prev) > sizeof (offset_type), \"\");\n+\n+  return result;\n }\n \n #if GDB_SELF_TEST\n@@ -4663,7 +4669,7 @@ run_test ()\n    dw_expand_symtabs_matching_file_matcher), expand the CU and call\n    EXPANSION_NOTIFY on it.  */\n \n-static void\n+static bool\n dw2_expand_symtabs_matching_one\n   (dwarf2_per_cu_data *per_cu,\n    dwarf2_per_objfile *per_objfile,\n@@ -4679,15 +4685,16 @@ dw2_expand_symtabs_matching_one\n       gdb_assert (symtab != nullptr);\n \n       if (expansion_notify != NULL && symtab_was_null)\n-\texpansion_notify (symtab);\n+\treturn expansion_notify (symtab);\n     }\n+  return true;\n }\n \n /* Helper for dw2_expand_matching symtabs.  Called on each symbol\n    matched, to expand corresponding CUs that were marked.  IDX is the\n    index of the symbol name that matched.  */\n \n-static void\n+static bool\n dw2_expand_marked_cus\n   (dwarf2_per_objfile *per_objfile, offset_type idx,\n    gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n@@ -4764,9 +4771,12 @@ dw2_expand_marked_cus\n \t}\n \n       dwarf2_per_cu_data *per_cu = per_objfile->per_bfd->get_cutu (cu_index);\n-      dw2_expand_symtabs_matching_one (per_cu, per_objfile, file_matcher,\n-\t\t\t\t       expansion_notify);\n+      if (!dw2_expand_symtabs_matching_one (per_cu, per_objfile, file_matcher,\n+\t\t\t\t\t    expansion_notify))\n+\treturn false;\n     }\n+\n+  return true;\n }\n \n /* If FILE_MATCHER is non-NULL, set all the\n@@ -4846,7 +4856,7 @@ dw_expand_symtabs_matching_file_matcher\n     }\n }\n \n-void\n+bool\n dwarf2_gdb_index::expand_symtabs_matching\n     (struct objfile *objfile,\n      gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n@@ -4859,7 +4869,7 @@ dwarf2_gdb_index::expand_symtabs_matching\n \n   /* index_table is NULL if OBJF_READNOW.  */\n   if (!per_objfile->per_bfd->index_table)\n-    return;\n+    return true;\n \n   dw_expand_symtabs_matching_file_matcher (per_objfile, file_matcher);\n \n@@ -4869,22 +4879,28 @@ dwarf2_gdb_index::expand_symtabs_matching\n \t{\n \t  QUIT;\n \n-\t  dw2_expand_symtabs_matching_one (per_cu, per_objfile,\n-\t\t\t\t\t   file_matcher, expansion_notify);\n+\t  if (!dw2_expand_symtabs_matching_one (per_cu, per_objfile,\n+\t\t\t\t\t\tfile_matcher,\n+\t\t\t\t\t\texpansion_notify))\n+\t    return false;\n \t}\n-      return;\n+      return true;\n     }\n \n   mapped_index &index = *per_objfile->per_bfd->index_table;\n \n-  dw2_expand_symtabs_matching_symbol (index, *lookup_name,\n-\t\t\t\t      symbol_matcher,\n-\t\t\t\t      [&] (offset_type idx)\n+  bool result\n+    = dw2_expand_symtabs_matching_symbol (index, *lookup_name,\n+\t\t\t\t\t  symbol_matcher,\n+\t\t\t\t\t  [&] (offset_type idx)\n     {\n-      dw2_expand_marked_cus (per_objfile, idx, file_matcher, expansion_notify,\n-\t\t\t     kind);\n+      if (!dw2_expand_marked_cus (per_objfile, idx, file_matcher,\n+\t\t\t\t  expansion_notify, kind))\n+\treturn false;\n       return true;\n     }, per_objfile);\n+\n+  return result;\n }\n \n /* A helper for dw2_find_pc_sect_compunit_symtab which finds the most specific\n@@ -5896,7 +5912,7 @@ dwarf2_debug_names_index::map_matching_symbols\n     }\n }\n \n-void\n+bool\n dwarf2_debug_names_index::expand_symtabs_matching\n   (struct objfile *objfile,\n    gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n@@ -5909,7 +5925,7 @@ dwarf2_debug_names_index::expand_symtabs_matching\n \n   /* debug_names_table is NULL if OBJF_READNOW.  */\n   if (!per_objfile->per_bfd->debug_names_table)\n-    return;\n+    return true;\n \n   dw_expand_symtabs_matching_file_matcher (per_objfile, file_matcher);\n \n@@ -5919,28 +5935,35 @@ dwarf2_debug_names_index::expand_symtabs_matching\n \t{\n \t  QUIT;\n \n-\t  dw2_expand_symtabs_matching_one (per_cu, per_objfile, file_matcher,\n-\t\t\t\t\t   expansion_notify);\n+\t  if (!dw2_expand_symtabs_matching_one (per_cu, per_objfile,\n+\t\t\t\t\t\tfile_matcher,\n+\t\t\t\t\t\texpansion_notify))\n+\t    return false;\n \t}\n-      return;\n+      return true;\n     }\n \n   mapped_debug_names &map = *per_objfile->per_bfd->debug_names_table;\n \n-  dw2_expand_symtabs_matching_symbol (map, *lookup_name,\n-\t\t\t\t      symbol_matcher,\n-\t\t\t\t      [&] (offset_type namei)\n+  bool result\n+    = dw2_expand_symtabs_matching_symbol (map, *lookup_name,\n+\t\t\t\t\t  symbol_matcher,\n+\t\t\t\t\t  [&] (offset_type namei)\n     {\n       /* The name was matched, now expand corresponding CUs that were\n \t marked.  */\n       dw2_debug_names_iterator iter (map, kind, namei, per_objfile);\n \n       struct dwarf2_per_cu_data *per_cu;\n       while ((per_cu = iter.next ()) != NULL)\n-\tdw2_expand_symtabs_matching_one (per_cu, per_objfile, file_matcher,\n-\t\t\t\t\t expansion_notify);\n+\tif (!dw2_expand_symtabs_matching_one (per_cu, per_objfile,\n+\t\t\t\t\t      file_matcher,\n+\t\t\t\t\t      expansion_notify))\n+\t  return false;\n       return true;\n     }, per_objfile);\n+\n+  return result;\n }\n \n /* Get the content of the .gdb_index section of OBJ.  SECTION_OWNER should point"
    },
    {
      "sha": "fd3323fef07d47734f226e9990d304c03b6c223e",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -603,7 +603,7 @@ struct objfile\n      symbol_compare_ftype *ordered_compare);\n \n   /* See quick_symbol_functions.  */\n-  void expand_symtabs_matching\n+  bool expand_symtabs_matching\n     (gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n      const lookup_name_info *lookup_name,\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,"
    },
    {
      "sha": "51b02f586bb3779b893883e09ce5b69052cf76a4",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -541,7 +541,7 @@ struct psymbol_functions : public quick_symbol_functions\n      gdb::function_view<symbol_found_callback_ftype> callback,\n      symbol_compare_ftype *ordered_compare) override;\n \n-  void expand_symtabs_matching\n+  bool expand_symtabs_matching\n     (struct objfile *objfile,\n      gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n      const lookup_name_info *lookup_name,"
    },
    {
      "sha": "6e7bf240a39880afda10cfe1a40d97c2c5c298cd",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -1293,7 +1293,7 @@ recursively_search_psymtabs\n /* Psymtab version of expand_symtabs_matching.  See its definition in\n    the definition of quick_symbol_functions in symfile.h.  */\n \n-void\n+bool\n psymbol_functions::expand_symtabs_matching\n   (struct objfile *objfile,\n    gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n@@ -1346,9 +1346,12 @@ psymbol_functions::expand_symtabs_matching\n \t    psymtab_to_symtab (objfile, ps);\n \n \t  if (expansion_notify != NULL)\n-\t    expansion_notify (symtab);\n+\t    if (!expansion_notify (symtab))\n+\t      return false;\n \t}\n     }\n+\n+  return true;\n }\n \n /* Psymtab version of has_symbols.  See its definition in"
    },
    {
      "sha": "37601d8afbd6f4f1a6619bcc85871b9573959d42",
      "filename": "gdb/quick-symbol.h",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/quick-symbol.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/quick-symbol.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/quick-symbol.h?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -52,9 +52,11 @@ typedef bool (expand_symtabs_file_matcher_ftype) (const char *filename,\n typedef bool (expand_symtabs_symbol_matcher_ftype) (const char *name);\n \n /* Callback for quick_symbol_functions->expand_symtabs_matching\n-   to be called after a symtab has been expanded.  */\n+   to be called after a symtab has been expanded.  If this returns\n+   true, more symtabs are checked; if it returns false, iteration\n+   stops.  */\n \n-typedef void (expand_symtabs_exp_notify_ftype) (compunit_symtab *symtab);\n+typedef bool (expand_symtabs_exp_notify_ftype) (compunit_symtab *symtab);\n \n /* The \"quick\" symbol functions exist so that symbol readers can\n    avoiding an initial read of all the symbols.  For example, symbol\n@@ -206,8 +208,12 @@ struct quick_symbol_functions\n \n      If SYMBOL_MATCHER returns false, then the symbol is skipped.\n \n-     Otherwise, the symbol's symbol table is expanded.  */\n-  virtual void expand_symtabs_matching\n+     Otherwise, the symbol's symbol table is expanded and the\n+     notification function is called.  If the notification function\n+     returns false, execution stops and this method returns false.\n+     Otherwise, more files are considered.  This method will return\n+     true if all calls to the notification function return true.  */\n+  virtual bool expand_symtabs_matching\n     (struct objfile *objfile,\n      gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n      const lookup_name_info *lookup_name,"
    },
    {
      "sha": "eff2e3aa3371ba6fb7697af747a637a0198eed8a",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -265,7 +265,7 @@ objfile::map_matching_symbols\n \t\t\t\tcallback, ordered_compare);\n }\n \n-void\n+bool\n objfile::expand_symtabs_matching\n   (gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n    const lookup_name_info *lookup_name,\n@@ -283,8 +283,11 @@ objfile::expand_symtabs_matching\n \t\t      search_domain_name (kind));\n \n   for (const auto &iter : qf)\n-    iter->expand_symtabs_matching (this, file_matcher, lookup_name,\n-\t\t\t\t   symbol_matcher, expansion_notify, kind);\n+    if (!iter->expand_symtabs_matching (this, file_matcher, lookup_name,\n+\t\t\t\t\tsymbol_matcher, expansion_notify,\n+\t\t\t\t\tkind))\n+      return false;\n+  return true;\n }\n \n struct compunit_symtab *"
    },
    {
      "sha": "3e8859916afaa73c8dad590c34a533482cc55ce9",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -3716,7 +3716,7 @@ symfile_free_objfile (struct objfile *objfile)\n    Expand all symtabs that match the specified criteria.\n    See quick_symbol_functions.expand_symtabs_matching for details.  */\n \n-void\n+bool\n expand_symtabs_matching\n   (gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n    const lookup_name_info &lookup_name,\n@@ -3725,10 +3725,12 @@ expand_symtabs_matching\n    enum search_domain kind)\n {\n   for (objfile *objfile : current_program_space->objfiles ())\n-    objfile->expand_symtabs_matching (file_matcher,\n-\t\t\t\t      &lookup_name,\n-\t\t\t\t      symbol_matcher,\n-\t\t\t\t      expansion_notify, kind);\n+    if (!objfile->expand_symtabs_matching (file_matcher,\n+\t\t\t\t\t   &lookup_name,\n+\t\t\t\t\t   symbol_matcher,\n+\t\t\t\t\t   expansion_notify, kind))\n+      return false;\n+  return true;\n }\n \n /* Wrapper around the quick_symbol_functions map_symbol_filenames \"method\"."
    },
    {
      "sha": "56fc37910fb42a0a9a7afaf8fcea9901a38b3a04",
      "filename": "gdb/symfile.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symfile.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symfile.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.h?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -321,7 +321,7 @@ symfile_segment_data_up get_symfile_segment_data (bfd *abfd);\n \n extern scoped_restore_tmpl<int> increment_reading_symtab (void);\n \n-void expand_symtabs_matching\n+bool expand_symtabs_matching\n   (gdb::function_view<expand_symtabs_file_matcher_ftype> file_matcher,\n    const lookup_name_info &lookup_name,\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,"
    },
    {
      "sha": "907ebd0398457de9b62d3eb35666a70ec76eeedc",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/df35e6262da99acc80bb88d669975f0b52e33876/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=df35e6262da99acc80bb88d669975f0b52e33876",
      "patch": "@@ -5730,6 +5730,7 @@ default_collect_symbol_completion_matches_break_on\n \t\t\t       add_symtab_completions (symtab,\n \t\t\t\t\t\t       tracker, mode, lookup_name,\n \t\t\t\t\t\t       sym_text, word, code);\n+\t\t\t       return true;\n \t\t\t     },\n \t\t\t   ALL_DOMAIN);\n "
    }
  ]
}