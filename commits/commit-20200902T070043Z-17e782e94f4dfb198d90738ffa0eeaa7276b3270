{
  "sha": "17e782e94f4dfb198d90738ffa0eeaa7276b3270",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTdlNzgyZTk0ZjRkZmIxOThkOTA3MzhmZmEwZWVhYTcyNzZiMzI3MA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-02T00:45:09Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-02T07:00:43Z"
    },
    "message": "ubsan: rx-parse.y:1743 shift exponent 32 is too large\n\n\t* config/rx-parse.y (rx_intop): Avoid too large shifts.\n\t(rx_intop, rx_uintop, rx_disp3op, rx_disp5op, displacement),\n\t(rtsd_immediate): Use correctly typed unsigned variables.",
    "tree": {
      "sha": "1bf71aaf6bfa4d8a72d598e3629806b3b3dcd280",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1bf71aaf6bfa4d8a72d598e3629806b3b3dcd280"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/17e782e94f4dfb198d90738ffa0eeaa7276b3270",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17e782e94f4dfb198d90738ffa0eeaa7276b3270",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/17e782e94f4dfb198d90738ffa0eeaa7276b3270",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17e782e94f4dfb198d90738ffa0eeaa7276b3270/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4dda287bf650e908271a1d36ee1fca6dece4eb16",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4dda287bf650e908271a1d36ee1fca6dece4eb16",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4dda287bf650e908271a1d36ee1fca6dece4eb16"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 30,
    "deletions": 24
  },
  "files": [
    {
      "sha": "f6b9e45a5275ae90f022bd6db3ffeb4a6c9835e4",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e782e94f4dfb198d90738ffa0eeaa7276b3270/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e782e94f4dfb198d90738ffa0eeaa7276b3270/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=17e782e94f4dfb198d90738ffa0eeaa7276b3270",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rx-parse.y (rx_intop): Avoid too large shifts.\n+\t(rx_intop, rx_uintop, rx_disp3op, rx_disp5op, displacement),\n+\t(rtsd_immediate): Use correctly typed unsigned variables.\n+\n 2020-09-02  Alan Modra  <amodra@gmail.com>\n \n \t* config/obj-macho.c (obj_mach_o_zerofill): Correct type of"
    },
    {
      "sha": "6ae2ca5edd9dfe7068351a9e8acd40bb836c74f7",
      "filename": "gas/config/rx-parse.y",
      "status": "modified",
      "additions": 24,
      "deletions": 24,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17e782e94f4dfb198d90738ffa0eeaa7276b3270/gas/config/rx-parse.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17e782e94f4dfb198d90738ffa0eeaa7276b3270/gas/config/rx-parse.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/rx-parse.y?ref=17e782e94f4dfb198d90738ffa0eeaa7276b3270",
      "patch": "@@ -1725,8 +1725,8 @@ rx_error (const char * str)\n static int\n rx_intop (expressionS exp, int nbits, int opbits)\n {\n-  long v;\n-  long mask, msb;\n+  valueT v;\n+  valueT mask, msb;\n \n   if (exp.X_op == O_big)\n     {\n@@ -1739,24 +1739,24 @@ rx_intop (expressionS exp, int nbits, int opbits)\n     return 0;\n   v = exp.X_add_number;\n \n-  msb = 1UL << (opbits - 1);\n-  mask = (1UL << opbits) - 1;\n+  msb = (valueT) 1 << (opbits - 1);\n+  mask = (msb << 1) - 1;\n \n   if ((v & msb) && ! (v & ~mask))\n-    v -= 1UL << opbits;\n+    v -= mask + 1;\n \n   switch (nbits)\n     {\n     case 4:\n-      return -0x8 <= v && v <= 0x7;\n+      return v + 0x8 <= 0x7 + 0x8;\n     case 5:\n-      return -0x10 <= v && v <= 0x17;\n+      return v + 0x10 <= 0xf + 0x10;\n     case 8:\n-      return -0x80 <= v && v <= 0x7f;\n+      return v + 0x80 <= 0x7f + 0x80;\n     case 16:\n-      return -0x8000 <= v && v <= 0x7fff;\n+      return v + 0x8000 <= 0x7fff + 0x8000;\n     case 24:\n-      return -0x800000 <= v && v <= 0x7fffff;\n+      return v + 0x800000 <= 0x7fffff + 0x800000;\n     case 32:\n       return 1;\n     default:\n@@ -1769,7 +1769,7 @@ rx_intop (expressionS exp, int nbits, int opbits)\n static int\n rx_uintop (expressionS exp, int nbits)\n {\n-  unsigned long v;\n+  valueT v;\n \n   if (exp.X_op != O_constant)\n     return 0;\n@@ -1795,7 +1795,7 @@ rx_uintop (expressionS exp, int nbits)\n static int\n rx_disp3op (expressionS exp)\n {\n-  unsigned long v;\n+  valueT v;\n \n   if (exp.X_op != O_constant)\n     return 0;\n@@ -1808,7 +1808,7 @@ rx_disp3op (expressionS exp)\n static int\n rx_disp5op (expressionS * exp, int msize)\n {\n-  long v;\n+  valueT v;\n \n   if (exp->X_op != O_constant)\n     return 0;\n@@ -1817,13 +1817,13 @@ rx_disp5op (expressionS * exp, int msize)\n   switch (msize)\n     {\n     case BSIZE:\n-      if (0 <= v && v <= 31)\n+      if (v <= 31)\n \treturn 1;\n       break;\n     case WSIZE:\n       if (v & 1)\n \treturn 0;\n-      if (0 <= v && v <= 63)\n+      if (v <= 63)\n \t{\n \t  exp->X_add_number >>= 1;\n \t  return 1;\n@@ -1832,7 +1832,7 @@ rx_disp5op (expressionS * exp, int msize)\n     case LSIZE:\n       if (v & 3)\n \treturn 0;\n-      if (0 <= v && v <= 127)\n+      if (v <= 127)\n \t{\n \t  exp->X_add_number >>= 2;\n \t  return 1;\n@@ -1931,7 +1931,7 @@ immediate (expressionS exp, int type, int pos, int bits)\n static int\n displacement (expressionS exp, int msize)\n {\n-  int val;\n+  valueT val;\n   int vshift = 0;\n \n   if (exp.X_op == O_symbol\n@@ -2001,18 +2001,18 @@ displacement (expressionS exp, int msize)\n   val >>= vshift;\n   exp.X_add_number = val;\n \n-  if (0 <= val && val <= 255 )\n+  if (val <= 255 )\n     {\n       O1 (exp);\n       return 1;\n     }\n \n-  if (0 <= val && val <= 65535)\n+  if (val <= 65535)\n     {\n       O2 (exp);\n       return 2;\n     }\n-  if (val < 0)\n+  if ((offsetT) val < 0)\n     rx_error (_(\"negative displacements not allowed\"));\n   else\n     rx_error (_(\"displacement too large\"));\n@@ -2022,7 +2022,7 @@ displacement (expressionS exp, int msize)\n static void\n rtsd_immediate (expressionS exp)\n {\n-  int val;\n+  valueT val;\n \n   if (exp.X_op != O_constant)\n     {\n@@ -2033,7 +2033,7 @@ rtsd_immediate (expressionS exp)\n   if (val & 3)\n     rx_error (_(\"rtsd size must be multiple of 4\"));\n \n-  if (val < 0 || val > 1020)\n+  if (val > 1020)\n     rx_error (_(\"rtsd size must be 0..1020\"));\n \n   val >>= 2;\n@@ -2044,14 +2044,14 @@ rtsd_immediate (expressionS exp)\n static void\n rx_range (expressionS exp, int minv, int maxv)\n {\n-  int val;\n+  offsetT val;\n \n   if (exp.X_op != O_constant)\n     return;\n \n   val = exp.X_add_number;\n   if (val < minv || val > maxv)\n-    as_warn (_(\"Value %d out of range %d..%d\"), val, minv, maxv);\n+    as_warn (_(\"Value %ld out of range %d..%d\"), (long) val, minv, maxv);\n }\n \n static void"
    }
  ]
}