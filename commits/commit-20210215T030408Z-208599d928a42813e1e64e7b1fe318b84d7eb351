{
  "sha": "208599d928a42813e1e64e7b1fe318b84d7eb351",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjA4NTk5ZDkyOGE0MjgxM2UxZTY0ZTdiMWZlMzE4Yjg0ZDdlYjM1MQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-15T01:34:11Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-15T03:04:08Z"
    },
    "message": "objdump: don't cache section contents in load_specific_debug_section\n\n\t* objdump.c (load_specific_debug_section): Don't call\n\tbfd_cache_section_contents.  Rearrange so that\n\tbfd_get_full_section_contents is not called on path where\n\tbfd_simple_get_relocated_section_contents is called.\n\tDon't set section->user_data.\n\t(free_debug_section): Always free section->start.  Don't twiddle\n\tsection flags.\n\t* readelf.c (load_specific_debug_section): Don't set user_data.\n\t* dwarf.h (struct dwarf_section): Remove use_data field.\n\t* dwarf.c (NO_ABBREVS, ABBREV): Adjust to suit.",
    "tree": {
      "sha": "3f1d57e54f0bbe3a0c8b449011650b25db6bb8a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3f1d57e54f0bbe3a0c8b449011650b25db6bb8a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/208599d928a42813e1e64e7b1fe318b84d7eb351",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/208599d928a42813e1e64e7b1fe318b84d7eb351",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/208599d928a42813e1e64e7b1fe318b84d7eb351",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/208599d928a42813e1e64e7b1fe318b84d7eb351/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1781a9d0f3d0319abeeae73b1f1f78fbf3778739",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1781a9d0f3d0319abeeae73b1f1f78fbf3778739"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 44,
    "deletions": 61
  },
  "files": [
    {
      "sha": "0edfcbe3f28e0b11b18922b08b2a1521b7d166dd",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=208599d928a42813e1e64e7b1fe318b84d7eb351",
      "patch": "@@ -1,3 +1,16 @@\n+2021-02-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (load_specific_debug_section): Don't call\n+\tbfd_cache_section_contents.  Rearrange so that\n+\tbfd_get_full_section_contents is not called on path where\n+\tbfd_simple_get_relocated_section_contents is called.\n+\tDon't set section->user_data.\n+\t(free_debug_section): Always free section->start.  Don't twiddle\n+\tsection flags.\n+\t* readelf.c (load_specific_debug_section): Don't set user_data.\n+\t* dwarf.h (struct dwarf_section): Remove use_data field.\n+\t* dwarf.c (NO_ABBREVS, ABBREV): Adjust to suit.\n+\n 2021-02-15  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/binutils-all/compress.exp: Remove nds32 xfails."
    },
    {
      "sha": "c863acfeda24f0a58e046327a6d9efe1ace13d76",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=208599d928a42813e1e64e7b1fe318b84d7eb351",
      "patch": "@@ -11491,8 +11491,8 @@ dwarf_select_sections_all (void)\n   do_debug_str_offsets = 1;\n }\n \n-#define NO_ABBREVS   NULL, NULL, NULL, 0, 0, 0, NULL, 0, NULL\n-#define ABBREV(N)    NULL, NULL, NULL, 0, 0, N, NULL, 0, NULL\n+#define NO_ABBREVS   NULL, NULL, NULL, 0, 0, 0, NULL, 0\n+#define ABBREV(N)    NULL, NULL, NULL, 0, 0, N, NULL, 0\n \n /* N.B. The order here must match the order in section_display_enum.  */\n "
    },
    {
      "sha": "98fbef8183dde6e25dc40db1dcaef98d5dae23f1",
      "filename": "binutils/dwarf.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/dwarf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/dwarf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.h?ref=208599d928a42813e1e64e7b1fe318b84d7eb351",
      "patch": "@@ -143,8 +143,6 @@ struct dwarf_section\n   /* Used by clients to help them implement the reloc_at callback.  */\n   void *                           reloc_info;\n   unsigned long                    num_relocs;\n-  /* A spare field for random use.  */\n-  void *                           user_data;\n };\n \n /* A structure containing the name of a debug section"
    },
    {
      "sha": "47b23099ec9f572024e7af8ba40fc52c48d64b70",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 29,
      "deletions": 56,
      "changes": 85,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=208599d928a42813e1e64e7b1fe318b84d7eb351",
      "patch": "@@ -3552,6 +3552,7 @@ load_specific_debug_section (enum dwarf_section_display_enum debug,\n   bfd_byte *contents;\n   bfd_size_type amt;\n   size_t alloced;\n+  bfd_boolean ret;\n \n   if (section->start != NULL)\n     {\n@@ -3565,7 +3566,6 @@ load_specific_debug_section (enum dwarf_section_display_enum debug,\n   section->reloc_info = NULL;\n   section->num_relocs = 0;\n   section->address = bfd_section_vma (sec);\n-  section->user_data = sec;\n   section->size = bfd_section_size (sec);\n   /* PR 24360: On 32-bit hosts sizeof (size_t) < sizeof (bfd_size_type). */\n   alloced = amt = section->size + 1;\n@@ -3578,57 +3578,50 @@ load_specific_debug_section (enum dwarf_section_display_enum debug,\n \t      (unsigned long long) section->size);\n       return FALSE;\n     }\n-  section->start = contents = malloc (alloced);\n-  if (section->start == NULL\n-      || !bfd_get_full_section_contents (abfd, sec, &contents))\n-    {\n-      free_debug_section (debug);\n-      printf (_(\"\\nCan't get contents for section '%s'.\\n\"),\n-\t      sanitize_string (section->name));\n-      return FALSE;\n-    }\n+\n+  section->start = contents = xmalloc (alloced);\n   /* Ensure any string section has a terminating NUL.  */\n   section->start[section->size] = 0;\n \n   if ((abfd->flags & (EXEC_P | DYNAMIC)) == 0\n       && debug_displays [debug].relocate)\n     {\n-      long         reloc_size;\n-      bfd_boolean  ret;\n-\n-      bfd_cache_section_contents (sec, section->start);\n-\n       ret = bfd_simple_get_relocated_section_contents (abfd,\n \t\t\t\t\t\t       sec,\n \t\t\t\t\t\t       section->start,\n \t\t\t\t\t\t       syms) != NULL;\n-\n-      if (! ret)\n-        {\n-          free_debug_section (debug);\n-          printf (_(\"\\nCan't get contents for section '%s'.\\n\"),\n-\t          sanitize_string (section->name));\n-          return FALSE;\n-        }\n-\n-      reloc_size = bfd_get_reloc_upper_bound (abfd, sec);\n-      if (reloc_size > 0)\n+      if (ret)\n \t{\n-\t  unsigned long reloc_count;\n-\t  arelent **relocs;\n-\n-\t  relocs = (arelent **) xmalloc (reloc_size);\n+\t  long reloc_size = bfd_get_reloc_upper_bound (abfd, sec);\n \n-\t  reloc_count = bfd_canonicalize_reloc (abfd, sec, relocs, NULL);\n-\t  if (reloc_count == 0)\n-\t    free (relocs);\n-\t  else\n+\t  if (reloc_size > 0)\n \t    {\n-\t      section->reloc_info = relocs;\n-\t      section->num_relocs = reloc_count;\n+\t      unsigned long reloc_count;\n+\t      arelent **relocs;\n+\n+\t      relocs = (arelent **) xmalloc (reloc_size);\n+\n+\t      reloc_count = bfd_canonicalize_reloc (abfd, sec, relocs, NULL);\n+\t      if (reloc_count == 0)\n+\t\tfree (relocs);\n+\t      else\n+\t\t{\n+\t\t  section->reloc_info = relocs;\n+\t\t  section->num_relocs = reloc_count;\n+\t\t}\n \t    }\n \t}\n     }\n+  else\n+    ret = bfd_get_full_section_contents (abfd, sec, &contents);\n+\n+  if (!ret)\n+    {\n+      free_debug_section (debug);\n+      printf (_(\"\\nCan't get contents for section '%s'.\\n\"),\n+\t      sanitize_string (section->name));\n+      return FALSE;\n+    }\n \n   return TRUE;\n }\n@@ -3686,26 +3679,6 @@ free_debug_section (enum dwarf_section_display_enum debug)\n {\n   struct dwarf_section *section = &debug_displays [debug].section;\n \n-  if (section->start == NULL)\n-    return;\n-\n-  /* PR 17512: file: 0f67f69d.  */\n-  if (section->user_data != NULL)\n-    {\n-      asection * sec = (asection *) section->user_data;\n-\n-      /* If we are freeing contents that are also pointed to by the BFD\n-\t library's section structure then make sure to update those pointers\n-\t too.  Otherwise, the next time we try to load data for this section\n-\t we can end up using a stale pointer.  */\n-      if (section->start == sec->contents)\n-\t{\n-\t  sec->contents = NULL;\n-\t  sec->flags &= ~ SEC_IN_MEMORY;\n-\t  sec->compress_status = COMPRESS_SECTION_NONE;\n-\t}\n-    }\n-\n   free ((char *) section->start);\n   section->start = NULL;\n   section->address = 0;"
    },
    {
      "sha": "755634dfe5d04c5811db923bcbfc3db58139810d",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/208599d928a42813e1e64e7b1fe318b84d7eb351/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=208599d928a42813e1e64e7b1fe318b84d7eb351",
      "patch": "@@ -14898,7 +14898,6 @@ load_specific_debug_section (enum dwarf_section_display_enum  debug,\n \n   snprintf (buf, sizeof (buf), _(\"%s section data\"), section->name);\n   section->address = sec->sh_addr;\n-  section->user_data = NULL;\n   section->filename = filedata->file_name;\n   section->start = (unsigned char *) get_data (NULL, filedata,\n                                                sec->sh_offset, 1,"
    }
  ]
}