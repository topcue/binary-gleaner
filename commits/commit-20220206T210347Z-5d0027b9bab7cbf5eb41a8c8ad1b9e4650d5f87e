{
  "sha": "5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
  "node_id": "C_kwDOANOeidoAKDVkMDAyN2I5YmFiN2NiZjVlYjQxYThjOGFkMWI5ZTQ2NTBkNWY4N2U",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-01-28T03:39:50Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-02-06T21:03:47Z"
    },
    "message": "gdb: remove SYMBOL_LINE macro\n\nAdd a getter and a setter for a symbol's line.  Remove the corresponding macro\nand adjust all callers.\n\nChange-Id: I229f2b8fcf938c07975f641361313a8761fad9a5",
    "tree": {
      "sha": "b54cfc8279c1e0dbafcc9ba758bc62b1d5955c01",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b54cfc8279c1e0dbafcc9ba758bc62b1d5955c01"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5f9c5a63ce38b103f778f54394c6a3d43b7ade90",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f9c5a63ce38b103f778f54394c6a3d43b7ade90",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5f9c5a63ce38b103f778f54394c6a3d43b7ade90"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 34,
    "deletions": 25
  },
  "files": [
    {
      "sha": "0dd83cda8e5a30eae1c43c4e0930eada7f80c467",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -3355,14 +3355,14 @@ See set/show multiple-symbol.\"));\n \t  if (syms[i].symbol->is_objfile_owned ())\n \t    symtab = symbol_symtab (syms[i].symbol);\n \n-\t  if (SYMBOL_LINE (syms[i].symbol) != 0 && symtab != NULL)\n+\t  if (syms[i].symbol->line () != 0 && symtab != NULL)\n \t    {\n \t      printf_filtered (\"[%d] \", i + first_choice);\n \t      ada_print_symbol_signature (gdb_stdout, syms[i].symbol,\n \t\t\t\t\t  &type_print_raw_options);\n \t      printf_filtered (_(\" at %s:%d\\n\"),\n \t\t\t       symtab_to_filename_for_display (symtab),\n-\t\t\t       SYMBOL_LINE (syms[i].symbol));\n+\t\t\t       syms[i].symbol->line ());\n \t    }\n \t  else if (is_enumeral\n \t\t   && syms[i].symbol->type ()->name () != NULL)"
    },
    {
      "sha": "bb156024ffa11386907e387ec6fd0c731da5d073",
      "filename": "gdb/compile/compile-c-symbols.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/compile/compile-c-symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/compile/compile-c-symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-c-symbols.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -58,7 +58,7 @@ convert_one_symbol (compile_c_instance *context,\n {\n   gcc_type sym_type;\n   const char *filename = symbol_symtab (sym.symbol)->filename;\n-  unsigned short line = SYMBOL_LINE (sym.symbol);\n+  unsigned short line = sym.symbol->line ();\n \n   context->error_symbol_once (sym.symbol);\n "
    },
    {
      "sha": "33febaccdfd8871d210f43b5b33a7b0945b39fef",
      "filename": "gdb/compile/compile-cplus-symbols.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/compile/compile-cplus-symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/compile/compile-cplus-symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-cplus-symbols.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -49,7 +49,7 @@ convert_one_symbol (compile_cplus_instance *instance,\n   /* Squash compiler warning.  */\n   gcc_type sym_type = 0;\n   const char *filename = symbol_symtab (sym.symbol)->filename;\n-  unsigned short line = SYMBOL_LINE (sym.symbol);\n+  unsigned short line = sym.symbol->line ();\n \n   instance->error_symbol_once (sym.symbol);\n "
    },
    {
      "sha": "f0ac05f4f2aa24c4a57f526f0d063798834e66c9",
      "filename": "gdb/compile/compile-cplus-types.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/compile/compile-cplus-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/compile/compile-cplus-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-cplus-types.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -626,7 +626,7 @@ compile_cplus_convert_struct_or_union_members\n \t\t    continue;\n \t\t  }\n \t\tconst char *filename = symbol_symtab (sym.symbol)->filename;\n-\t\tunsigned int line = SYMBOL_LINE (sym.symbol);\n+\t\tunsigned int line = sym.symbol->line ();\n \n \t\tphysaddr = SYMBOL_VALUE_ADDRESS (sym.symbol);\n \t\tinstance->plugin ().build_decl\n@@ -765,7 +765,7 @@ compile_cplus_convert_struct_or_union_methods (compile_cplus_instance *instance,\n \t    }\n \n \t  const char *filename = symbol_symtab (sym.symbol)->filename;\n-\t  unsigned int line = SYMBOL_LINE (sym.symbol);\n+\t  unsigned int line = sym.symbol->line ();\n \t  CORE_ADDR address = BLOCK_START (SYMBOL_BLOCK_VALUE (sym.symbol));\n \t  const char *kind;\n "
    },
    {
      "sha": "c063e7baa2b5cf75411b41ffaebd673cefa90890",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -21727,7 +21727,7 @@ new_symbol (struct die_info *die, struct type *type, struct dwarf2_cu *cu,\n \t\t\t  inlined_func ? DW_AT_call_line : DW_AT_decl_line,\n \t\t\t  cu);\n       if (attr != nullptr)\n-\tSYMBOL_LINE (sym) = attr->constant_value (0);\n+\tsym->set_line (attr->constant_value (0));\n \n       attr = dwarf2_attr (die,\n \t\t\t  inlined_func ? DW_AT_call_file : DW_AT_decl_file,"
    },
    {
      "sha": "ce95cf8343bc172d8242cda21e931fb02c211da0",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -2699,10 +2699,10 @@ find_frame_sal (frame_info *frame)\n       gdb_assert (sym);\n \n       symtab_and_line sal;\n-      if (SYMBOL_LINE (sym) != 0)\n+      if (sym->line () != 0)\n \t{\n \t  sal.symtab = symbol_symtab (sym);\n-\t  sal.line = SYMBOL_LINE (sym);\n+\t  sal.line = sym->line ();\n \t}\n       else\n \t/* If the symbol does not have a location, we don't know where"
    },
    {
      "sha": "dbe19865d4e2da6d09ed2764ced90fe21cf20981",
      "filename": "gdb/guile/scm-symbol.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/guile/scm-symbol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/guile/scm-symbol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-symbol.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -510,7 +510,7 @@ gdbscm_symbol_line (SCM self)\n     = syscm_get_valid_symbol_smob_arg_unsafe (self, SCM_ARG1, FUNC_NAME);\n   const struct symbol *symbol = s_smob->symbol;\n \n-  return scm_from_int (SYMBOL_LINE (symbol));\n+  return scm_from_int (symbol->line ());\n }\n \n /* (symbol-value <gdb:symbol> [#:frame <gdb:frame>]) -> <gdb:value>"
    },
    {
      "sha": "9e21df76efad13bbf0c8ee59d0225af1c72293b6",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -4451,7 +4451,7 @@ symbol_to_sal (struct symtab_and_line *result,\n \t  *result = {};\n \t  result->symtab = symbol_symtab (sym);\n \t  result->symbol = sym;\n-\t  result->line = SYMBOL_LINE (sym);\n+\t  result->line = sym->line ();\n \t  result->pc = SYMBOL_VALUE_ADDRESS (sym);\n \t  result->pspace = result->symtab->pspace ();\n \t  result->explicit_pc = 1;\n@@ -4461,13 +4461,13 @@ symbol_to_sal (struct symtab_and_line *result,\n \t{\n \t  /* Nothing.  */\n \t}\n-      else if (SYMBOL_LINE (sym) != 0)\n+      else if (sym->line () != 0)\n \t{\n \t  /* We know its line number.  */\n \t  *result = {};\n \t  result->symtab = symbol_symtab (sym);\n \t  result->symbol = sym;\n-\t  result->line = SYMBOL_LINE (sym);\n+\t  result->line = sym->line ();\n \t  result->pc = SYMBOL_VALUE_ADDRESS (sym);\n \t  result->pspace = result->symtab->pspace ();\n \t  return 1;"
    },
    {
      "sha": "1b08854296c0e753944c2918ac2c3083f6eb6f8a",
      "filename": "gdb/mi/mi-symbol-cmds.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/mi/mi-symbol-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/mi/mi-symbol-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-symbol-cmds.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -74,8 +74,8 @@ output_debug_symbol (ui_out *uiout, enum search_domain kind,\n {\n   ui_out_emit_tuple tuple_emitter (uiout, NULL);\n \n-  if (SYMBOL_LINE (sym) != 0)\n-    uiout->field_unsigned (\"line\", SYMBOL_LINE (sym));\n+  if (sym->line () != 0)\n+    uiout->field_unsigned (\"line\", sym->line ());\n   uiout->field_string (\"name\", sym->print_name ());\n \n   if (kind == FUNCTIONS_DOMAIN || kind == VARIABLES_DOMAIN)"
    },
    {
      "sha": "819a51f7e4147ea23c41a1feff4a9e844649a3ed",
      "filename": "gdb/python/py-symbol.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/python/py-symbol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/python/py-symbol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-symbol.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -221,7 +221,7 @@ sympy_line (PyObject *self, void *closure)\n \n   SYMPY_REQUIRE_VALID (self, symbol);\n \n-  return gdb_py_object_from_longest (SYMBOL_LINE (symbol)).release ();\n+  return gdb_py_object_from_longest (symbol->line ()).release ();\n }\n \n /* Implementation of gdb.Symbol.is_valid (self) -> Boolean."
    },
    {
      "sha": "c6821f893cbdbe1d7621c1bb8a8fca5443048310",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -693,11 +693,11 @@ define_symbol (CORE_ADDR valu, const char *string, int desc, int type,\n     {\n       /* GCC 2.x puts the line number in desc.  SunOS apparently puts in the\n \t number of bytes occupied by a type or object, which we ignore.  */\n-      SYMBOL_LINE (sym) = desc;\n+      sym->set_line (desc);\n     }\n   else\n     {\n-      SYMBOL_LINE (sym) = 0;\t/* unknown */\n+      sym->set_line (0);\t/* unknown */\n     }\n \n   sym->set_language (get_current_subfile ()->language,"
    },
    {
      "sha": "1a39372aad02be4c0cc8f19a9ef24ae04ab46095",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -3987,9 +3987,9 @@ skip_prologue_sal (struct symtab_and_line *sal)\n       b = BLOCK_SUPERBLOCK (b);\n     }\n   if (function_block != NULL\n-      && SYMBOL_LINE (BLOCK_FUNCTION (function_block)) != 0)\n+      && BLOCK_FUNCTION (function_block)->line () != 0)\n     {\n-      sal->line = SYMBOL_LINE (BLOCK_FUNCTION (function_block));\n+      sal->line = BLOCK_FUNCTION (function_block)->line ();\n       sal->symtab = symbol_symtab (BLOCK_FUNCTION (function_block));\n     }\n }\n@@ -4850,7 +4850,7 @@ global_symbol_searcher::add_matching_symbols\n \t\t\t      && sym->domain () != MODULE_DOMAIN)\n \t\t\t  || (kind == MODULES_DOMAIN\n \t\t\t      && sym->domain () == MODULE_DOMAIN\n-\t\t\t      && SYMBOL_LINE (sym) != 0))))\n+\t\t\t      && sym->line () != 0))))\n \t\t{\n \t\t  if (result_set->size () < m_max_search_results)\n \t\t    {\n@@ -5098,8 +5098,8 @@ print_symbol_info (enum search_domain kind,\n \t\t\t\t\t  s_filename));\n \t}\n \n-      if (SYMBOL_LINE (sym) != 0)\n-\tprintf_filtered (\"%d:\\t\", SYMBOL_LINE (sym));\n+      if (sym->line () != 0)\n+\tprintf_filtered (\"%d:\\t\", sym->line ());\n       else\n \tputs_filtered (\"\\t\");\n     }"
    },
    {
      "sha": "d12eee6e9d8c8d3fdeec7606474ddef7ee9d1bc7",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=5d0027b9bab7cbf5eb41a8c8ad1b9e4650d5f87e",
      "patch": "@@ -1213,6 +1213,16 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n     m_type = type;\n   }\n \n+  unsigned short line () const\n+  {\n+    return m_line;\n+  }\n+\n+  void set_line (unsigned short line)\n+  {\n+    m_line = line;\n+  }\n+\n   /* Data type of value */\n \n   struct type *m_type = nullptr;\n@@ -1280,7 +1290,7 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n      to debug files longer than 64K lines?  What about machine\n      generated programs?  */\n \n-  unsigned short line = 0;\n+  unsigned short m_line = 0;\n \n   /* An arbitrary data pointer, allowing symbol readers to record\n      additional information on a per-symbol basis.  Note that this data\n@@ -1315,7 +1325,6 @@ struct block_symbol\n /* Note: There is no accessor macro for symbol.owner because it is\n    \"private\".  */\n \n-#define SYMBOL_LINE(symbol)\t\t(symbol)->line\n #define SYMBOL_COMPUTED_OPS(symbol)\t((symbol)->impl ().ops_computed)\n #define SYMBOL_BLOCK_OPS(symbol)\t((symbol)->impl ().ops_block)\n #define SYMBOL_REGISTER_OPS(symbol)\t((symbol)->impl ().ops_register)"
    }
  ]
}