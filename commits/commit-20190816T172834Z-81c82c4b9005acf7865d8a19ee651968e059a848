{
  "sha": "81c82c4b9005acf7865d8a19ee651968e059a848",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODFjODJjNGI5MDA1YWNmNzg2NWQ4YTE5ZWU2NTE5NjhlMDU5YTg0OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-12T00:42:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-16T17:28:34Z"
    },
    "message": "Introduce tui_source_window_base::set_contents method\n\nThis introduces the tui_source_window_base::set_contents method and\nimplements it in the subclasses.  This removes a check of the window\ntype.\n\ngdb/ChangeLog\n2019-08-16  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (struct tui_source_window_base)\n\t<set_contents>: Declare.\n\t* tui/tui-winsource.c\n\t(tui_source_window_base::update_source_window_as_is): Update.\n\t* tui/tui-source.h (struct tui_source_window) <set_contents>:\n\tDeclare.\n\t(tui_set_source_content): Don't declare.\n\t* tui/tui-source.c (tui_source_window::set_contents): Rename from\n\ttui_set_source_content.\n\t* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>:\n\tDeclare.\n\t(tui_set_disassem_content): Don't declare.\n\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Rename from\n\ttui_set_disassem_content.",
    "tree": {
      "sha": "d6f82f453c5379aa365fe38ed3643f524b3cd572",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d6f82f453c5379aa365fe38ed3643f524b3cd572"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/81c82c4b9005acf7865d8a19ee651968e059a848",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81c82c4b9005acf7865d8a19ee651968e059a848",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/81c82c4b9005acf7865d8a19ee651968e059a848",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81c82c4b9005acf7865d8a19ee651968e059a848/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2ddaf614439b50e6019c5218f2fbfc0d14194e96",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ddaf614439b50e6019c5218f2fbfc0d14194e96",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2ddaf614439b50e6019c5218f2fbfc0d14194e96"
    }
  ],
  "stats": {
    "total": 106,
    "additions": 67,
    "deletions": 39
  },
  "files": [
    {
      "sha": "a83668bfa001bf1000076a539084c99e47b7094c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=81c82c4b9005acf7865d8a19ee651968e059a848",
      "patch": "@@ -1,3 +1,20 @@\n+2019-08-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (struct tui_source_window_base)\n+\t<set_contents>: Declare.\n+\t* tui/tui-winsource.c\n+\t(tui_source_window_base::update_source_window_as_is): Update.\n+\t* tui/tui-source.h (struct tui_source_window) <set_contents>:\n+\tDeclare.\n+\t(tui_set_source_content): Don't declare.\n+\t* tui/tui-source.c (tui_source_window::set_contents): Rename from\n+\ttui_set_source_content.\n+\t* tui/tui-disasm.h (struct tui_disasm_window) <set_contents>:\n+\tDeclare.\n+\t(tui_set_disassem_content): Don't declare.\n+\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Rename from\n+\ttui_set_disassem_content.\n+\n 2019-08-16  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (struct tui_source_window_base)"
    },
    {
      "sha": "2a291831e277c4d4b68b21189acac9222bf0482b",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=81c82c4b9005acf7865d8a19ee651968e059a848",
      "patch": "@@ -162,11 +162,12 @@ tui_find_disassembly_address (struct gdbarch *gdbarch, CORE_ADDR pc, int from)\n \n /* Function to set the disassembly window's content.  */\n enum tui_status\n-tui_set_disassem_content (tui_source_window_base *win_info,\n-\t\t\t  struct gdbarch *gdbarch, CORE_ADDR pc)\n+tui_disasm_window::set_contents (struct gdbarch *arch,\n+\t\t\t\t struct symtab *s,\n+\t\t\t\t struct tui_line_or_address line_or_addr)\n {\n   int i;\n-  int offset = win_info->horizontal_offset;\n+  int offset = horizontal_offset;\n   int max_lines, line_width;\n   CORE_ADDR cur_pc;\n   struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n@@ -176,17 +177,19 @@ tui_set_disassem_content (tui_source_window_base *win_info,\n   int addr_size, insn_size;\n   char *line;\n   \n+  gdb_assert (line_or_addr.loa == LOA_ADDRESS);\n+  CORE_ADDR pc = line_or_addr.u.addr;\n   if (pc == 0)\n     return TUI_FAILURE;\n \n-  win_info->gdbarch = gdbarch;\n-  win_info->start_line_or_addr.loa = LOA_ADDRESS;\n-  win_info->start_line_or_addr.u.addr = pc;\n+  gdbarch = arch;\n+  start_line_or_addr.loa = LOA_ADDRESS;\n+  start_line_or_addr.u.addr = pc;\n   cur_pc = locator->addr;\n \n   /* Window size, excluding highlight box.  */\n-  max_lines = win_info->height - 2;\n-  line_width = win_info->width - 2;\n+  max_lines = height - 2;\n+  line_width = width - 2;\n \n   /* Get temporary table that will hold all strings (addr & insn).  */\n   asm_lines = XALLOCAVEC (struct tui_asm_line, max_lines);\n@@ -216,12 +219,12 @@ tui_set_disassem_content (tui_source_window_base *win_info,\n   line = (char*) alloca (insn_pos + insn_size + 1);\n \n   /* Now construct each line.  */\n-  win_info->content.resize (max_lines);\n+  content.resize (max_lines);\n   for (i = 0; i < max_lines; i++)\n     {\n       int cur_len;\n \n-      tui_source_element *src = &win_info->content[i];\n+      tui_source_element *src = &content[i];\n       strcpy (line, asm_lines[i].addr_string);\n       cur_len = strlen (line);\n       memset (line + cur_len, ' ', insn_pos - cur_len);"
    },
    {
      "sha": "d98953224879548988a748fe680951f0aefdb8b1",
      "filename": "gdb/tui/tui-disasm.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-disasm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-disasm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.h?ref=81c82c4b9005acf7865d8a19ee651968e059a848",
      "patch": "@@ -57,14 +57,17 @@ struct tui_disasm_window : public tui_source_window_base\n \n   void do_scroll_vertical (int num_to_scroll) override;\n \n+  enum tui_status set_contents\n+    (struct gdbarch *gdbarch,\n+     struct symtab *s,\n+     struct tui_line_or_address line_or_addr) override;\n+\n private:\n   /* Answer whether a particular line number or address is displayed\n      in the current source window.  */\n   bool addr_is_displayed (CORE_ADDR addr) const;\n };\n \n-extern enum tui_status tui_set_disassem_content (tui_source_window_base *,\n-\t\t\t\t\t\t struct gdbarch *, CORE_ADDR);\n extern void tui_show_disassem (struct gdbarch *, CORE_ADDR);\n extern void tui_show_disassem_and_update_source (struct gdbarch *, CORE_ADDR);\n extern void tui_get_begin_asm_address (struct gdbarch **, CORE_ADDR *);"
    },
    {
      "sha": "9eb7c48472ee9ccfae1226fe711186753df02658",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 20,
      "deletions": 18,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=81c82c4b9005acf7865d8a19ee651968e059a848",
      "patch": "@@ -123,21 +123,24 @@ copy_source_line (const char **ptr, int line_no, int first_col,\n \n /* Function to display source in the source window.  */\n enum tui_status\n-tui_set_source_content (tui_source_window_base *win_info,\n-\t\t\tstruct symtab *s, \n-\t\t\tint line_no)\n+tui_source_window::set_contents (struct gdbarch *arch,\n+\t\t\t\t struct symtab *s, \n+\t\t\t\t struct tui_line_or_address line_or_addr)\n {\n+  gdb_assert (line_or_addr.loa == LOA_LINE);\n+  int line_no = line_or_addr.u.line_no;\n+\n   enum tui_status ret = TUI_FAILURE;\n \n   if (s != NULL)\n     {\n       int line_width, nlines;\n \n       ret = TUI_SUCCESS;\n-      line_width = win_info->width - 1;\n+      line_width = width - 1;\n       /* Take hilite (window border) into account, when\n \t calculating the number of lines.  */\n-      nlines = (line_no + (win_info->height - 2)) - line_no;\n+      nlines = (line_no + (height - 2)) - line_no;\n \n       std::string srclines;\n       if (!g_source_cache.get_source_lines (s, line_no, line_no + nlines,\n@@ -150,28 +153,27 @@ tui_set_source_content (tui_source_window_base *win_info,\n \t    = tui_locator_win_info_ptr ();\n \t  const char *s_filename = symtab_to_filename_for_display (s);\n \n-\t  xfree (win_info->title);\n-\t  win_info->title = xstrdup (s_filename);\n+\t  xfree (title);\n+\t  title = xstrdup (s_filename);\n \n-\t  xfree (win_info->fullname);\n-\t  win_info->fullname = xstrdup (symtab_to_fullname (s));\n+\t  xfree (fullname);\n+\t  fullname = xstrdup (symtab_to_fullname (s));\n \n \t  cur_line = 0;\n-\t  win_info->gdbarch = get_objfile_arch (SYMTAB_OBJFILE (s));\n-\t  win_info->start_line_or_addr.loa = LOA_LINE;\n-\t  cur_line_no = win_info->start_line_or_addr.u.line_no = line_no;\n+\t  gdbarch = get_objfile_arch (SYMTAB_OBJFILE (s));\n+\t  start_line_or_addr.loa = LOA_LINE;\n+\t  cur_line_no = start_line_or_addr.u.line_no = line_no;\n \n \t  const char *iter = srclines.c_str ();\n-\t  win_info->content.resize (nlines);\n+\t  content.resize (nlines);\n \t  while (cur_line < nlines)\n \t    {\n \t      struct tui_source_element *element\n-\t\t= &win_info->content[cur_line];\n+\t\t= &content[cur_line];\n \n \t      std::string text;\n \t      if (*iter != '\\0')\n-\t\ttext = copy_source_line (&iter, cur_line_no,\n-\t\t\t\t\t win_info->horizontal_offset,\n+\t\ttext = copy_source_line (&iter, cur_line_no, horizontal_offset,\n \t\t\t\t\t line_width);\n \n \t      /* Set whether element is the execution point\n@@ -183,8 +185,8 @@ tui_set_source_content (tui_source_window_base *win_info,\n \t\t\t\t symtab_to_fullname (s)) == 0\n \t\t   && cur_line_no == locator->line_no);\n \n-\t      xfree (win_info->content[cur_line].line);\n-\t      win_info->content[cur_line].line\n+\t      xfree (content[cur_line].line);\n+\t      content[cur_line].line\n \t\t= xstrdup (text.c_str ());\n \n \t      cur_line++;"
    },
    {
      "sha": "c623f5e2941d49a874f74d4d40a3fde022d00841",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=81c82c4b9005acf7865d8a19ee651968e059a848",
      "patch": "@@ -60,6 +60,11 @@ struct tui_source_window : public tui_source_window_base\n \n   void do_scroll_vertical (int num_to_scroll) override;\n \n+  enum tui_status set_contents\n+    (struct gdbarch *gdbarch,\n+     struct symtab *s,\n+     struct tui_line_or_address line_or_addr) override;\n+\n private:\n \n   void style_changed ();\n@@ -72,9 +77,6 @@ struct tui_source_window : public tui_source_window_base\n   gdb::observers::token m_observable;\n };\n \n-extern enum tui_status tui_set_source_content (tui_source_window_base *,\n-\t\t\t\t\t       struct symtab *, \n-\t\t\t\t\t       int);\n extern void tui_show_symtab_source (tui_source_window_base *,\n \t\t\t\t    struct gdbarch *, struct symtab *,\n \t\t\t\t    struct tui_line_or_address);"
    },
    {
      "sha": "3a678f2b531093b0626a8bb2bf64b2590cb1d522",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=81c82c4b9005acf7865d8a19ee651968e059a848",
      "patch": "@@ -88,12 +88,8 @@ tui_source_window_base::update_source_window_as_is\n    struct symtab *s,\n    struct tui_line_or_address line_or_addr)\n {\n-  enum tui_status ret;\n-\n-  if (type == SRC_WIN)\n-    ret = tui_set_source_content (this, s, line_or_addr.u.line_no);\n-  else\n-    ret = tui_set_disassem_content (this, gdbarch, line_or_addr.u.addr);\n+  enum tui_status ret\n+    = set_contents (gdbarch, s, line_or_addr);\n \n   if (ret == TUI_FAILURE)\n     erase_source_content ();"
    },
    {
      "sha": "85e83021be106941c38fe3c7465ad5a9471a0741",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81c82c4b9005acf7865d8a19ee651968e059a848/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=81c82c4b9005acf7865d8a19ee651968e059a848",
      "patch": "@@ -104,6 +104,11 @@ struct tui_source_window_base : public tui_win_info\n \n   void rerender () override;\n \n+  virtual enum tui_status set_contents\n+    (struct gdbarch *gdbarch,\n+     struct symtab *s,\n+     struct tui_line_or_address line_or_addr) = 0;\n+\n public:\n \n   void clear_detail ();"
    }
  ]
}