{
  "sha": "f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Zjg3MWJhZTFhZTVmYmEzZGZiYzMxZTFhNjEzNmI2YzVhYjZhNjI5MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:58Z"
    },
    "message": "Split out eval_op_objc_selector\n\nThis splits OP_OBJC_SELECTOR into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_objc_selector): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "8c42aeb316f00ec11b6957868c9ddc1e161937aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8c42aeb316f00ec11b6957868c9ddc1e161937aa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14a1c64a139777db0c20c1017e5fecdf3b3db5ac",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/14a1c64a139777db0c20c1017e5fecdf3b3db5ac"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 21,
    "deletions": 7
  },
  "files": [
    {
      "sha": "fa52286b6352eba480e635d90fd6571801373738",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_objc_selector): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_string): New function."
    },
    {
      "sha": "b9437837d9ee9f935aba5bcf91a385e79e42ccd6",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 16,
      "deletions": 7,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=f871bae1ae5fba3dfbc31e1a6136b6c5ab6a6291",
      "patch": "@@ -1294,6 +1294,21 @@ eval_op_string (struct type *expect_type, struct expression *exp,\n   return value_string (string, len, type);\n }\n \n+/* Helper function that implements the body of OP_OBJC_SELECTOR.  */\n+\n+static struct value *\n+eval_op_objc_selector (struct type *expect_type, struct expression *exp,\n+\t\t       enum noside noside,\n+\t\t       const char *sel)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+\n+  struct type *selector_type = builtin_type (exp->gdbarch)->builtin_data_ptr;\n+  return value_from_longest (selector_type,\n+\t\t\t     lookup_child_selector (exp->gdbarch, sel));\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -1577,18 +1592,12 @@ evaluate_subexp_standard (struct type *expect_type,\n       {\t\t\t\t/* Objective C @selector operator.  */\n \tchar *sel = &exp->elts[pc + 2].string;\n \tint len = longest_to_int (exp->elts[pc + 1].longconst);\n-\tstruct type *selector_type;\n \n \t(*pos) += 3 + BYTES_TO_EXP_ELEM (len + 1);\n-\tif (noside == EVAL_SKIP)\n-\t  return eval_skip_value (exp);\n-\n \tif (sel[len] != 0)\n \t  sel[len] = 0;\t\t/* Make sure it's terminated.  */\n \n-\tselector_type = builtin_type (exp->gdbarch)->builtin_data_ptr;\n-\treturn value_from_longest (selector_type,\n-\t\t\t\t   lookup_child_selector (exp->gdbarch, sel));\n+\treturn eval_op_objc_selector (expect_type, exp, noside, sel);\n       }\n \n     case OP_OBJC_MSGCALL:"
    }
  ]
}