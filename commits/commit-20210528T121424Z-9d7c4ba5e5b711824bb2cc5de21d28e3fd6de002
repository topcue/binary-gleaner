{
  "sha": "9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWQ3YzRiYTVlNWI3MTE4MjRiYjJjYzVkZTIxZDI4ZTNmZDZkZTAwMg==",
  "commit": {
    "author": {
      "name": "Yoshinori Sato",
      "email": "ysato@users.sourceforge.jp",
      "date": "2021-05-21T13:43:55Z"
    },
    "committer": {
      "name": "Yoshinori Sato",
      "email": "ysato@users.sourceforge.jp",
      "date": "2021-05-28T12:14:24Z"
    },
    "message": "sim: h8300 add special case test.\n\n* addb.s: Add special case reg,<@reg+ / @reg- / @+reg / @-reg>.\n* andb.s: Likewise.\n* cmpb.s: Likewise.\n* orb.s: Likewise.\n* subb.s: Likewise.\n* xorb.s: Likewise.\n* movb.s: Add special case reg,<@reg+ / @reg- / @+reg / @-reg>\n          @reg+,@reg+ / @-reg,@-reg.\n* movw.s: Likewise.\n* movl.s: Likewise.",
    "tree": {
      "sha": "2b8afbec83e20995c8048d38c2b43122872bd60c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2b8afbec83e20995c8048d38c2b43122872bd60c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/comments",
  "author": {
    "login": "ysat0",
    "id": 390647,
    "node_id": "MDQ6VXNlcjM5MDY0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysat0",
    "html_url": "https://github.com/ysat0",
    "followers_url": "https://api.github.com/users/ysat0/followers",
    "following_url": "https://api.github.com/users/ysat0/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions",
    "organizations_url": "https://api.github.com/users/ysat0/orgs",
    "repos_url": "https://api.github.com/users/ysat0/repos",
    "events_url": "https://api.github.com/users/ysat0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysat0/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ysat0",
    "id": 390647,
    "node_id": "MDQ6VXNlcjM5MDY0Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/390647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ysat0",
    "html_url": "https://github.com/ysat0",
    "followers_url": "https://api.github.com/users/ysat0/followers",
    "following_url": "https://api.github.com/users/ysat0/following{/other_user}",
    "gists_url": "https://api.github.com/users/ysat0/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ysat0/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ysat0/subscriptions",
    "organizations_url": "https://api.github.com/users/ysat0/orgs",
    "repos_url": "https://api.github.com/users/ysat0/repos",
    "events_url": "https://api.github.com/users/ysat0/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ysat0/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0ef4c3f83b044a9ed4b49f4ebc9d8480ca9aa4fe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ef4c3f83b044a9ed4b49f4ebc9d8480ca9aa4fe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0ef4c3f83b044a9ed4b49f4ebc9d8480ca9aa4fe"
    }
  ],
  "stats": {
    "total": 536,
    "additions": 520,
    "deletions": 16
  },
  "files": [
    {
      "sha": "828b136fa4b888a41d3f42ff50ccd000660b5dfb",
      "filename": "sim/testsuite/h8300/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/ChangeLog?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -1,3 +1,16 @@\n+2021-05-28  Yoshinori Sato  <ysato@users.sourceforge.jp>\n+\n+\t* addb.s: Add special case reg,<@reg+ / @reg- / @+reg / @-reg>.\n+\t* andb.s: Likewise.\n+\t* cmpb.s: Likewise.\n+\t* orb.s: Likewise.\n+\t* subb.s: Likewise.\n+\t* xorb.s: Likewise.\n+\t* movb.s: Add special case reg,<@reg+ / @reg- / @+reg / @-reg>\n+\t          @reg+,@reg+ / @-reg,@-reg.\n+\t@ movw.s: Likewise.\n+\t@ movl.s: Likewise.\n+\n 2021-05-04  Yoshinori Sato  <ysato@users.sourceforge.jp>\n \n \t* movb.s: Add special case predec test."
    },
    {
      "sha": "1b96867d6034891d18bf2e123ca23fde0c522085",
      "filename": "sim/testsuite/h8300/addb.s",
      "status": "modified",
      "additions": 57,
      "deletions": 1,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/addb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/addb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/addb.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -46,7 +46,7 @@ byte_dest:\t.byte 0\n post_byte:\t.byte 0\n \n \tstart\n-\t\n+\n add_b_imm8_reg:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n \t;;  fixme set ccr\n@@ -493,6 +493,20 @@ add_b_reg8_rdpostinc:\n \tbeq\t.L12\n \tfail\n .L12:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr0l, r1l\n+\tadd.b\tr0l, @er0+\n+\tinc.b\tr1l\n+\tadd.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L22\n+\tfail\n+.L22:\n+\t;; restore previous value\n+\tmov.b\tr1h, @byte_dest\n \n add_b_reg8_rdpostdec:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -527,6 +541,20 @@ add_b_reg8_rdpostdec:\n \tbeq\t.L13\n \tfail\n .L13:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr0l, r1l\n+\tadd.b\tr0l, @er0-\n+\tdec.b\tr1l\n+\tadd.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L23\n+\tfail\n+.L23:\n+\t;; restore previous value\n+\tmov.b\tr1h, @byte_dest\n \n add_b_reg8_rdpreinc:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -561,6 +589,20 @@ add_b_reg8_rdpreinc:\n \tbeq\t.L14\n \tfail\n .L14:\n+\t;; special case same register\n+\tmov.b\t@byte_dest, r1h\n+\tmov.l\t#pre_byte, er0\n+\tmov.b\tr0l, r1l\n+\tadd.b\tr0l, @+er0\n+\tinc.b\tr1l\n+\tadd.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L24\n+\tfail\n+.L24:\n+\t;; restore previous value\n+\tmov.b\tr1h, @byte_dest\n \n add_b_reg8_rdpredec:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -595,6 +637,20 @@ add_b_reg8_rdpredec:\n \tbeq\t.L15\n \tfail\n .L15:\n+\t;; special case same register\n+\tmov.l\t#post_byte, er0\n+\tmov.b\t@byte_dest, r1h\n+\tmov.b\tr0l, r1l\n+\tadd.b\tr0l, @-er0\n+\tdec.b\tr1l\n+\tadd.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L25\n+\tfail\n+.L25:\n+\t;; restore previous value\n+\tmov.b\tr1h, @byte_dest\n \n add_b_reg8_disp16:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern"
    },
    {
      "sha": "c3dc0609c1561f6de22cfa83f28b92e902fc2a62",
      "filename": "sim/testsuite/h8300/andb.s",
      "status": "modified",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/andb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/andb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/andb.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -126,6 +126,18 @@ and_b_imm8_rdpostinc:\n \tbeq\t.L2\n \tfail\n .L2:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr0l, r1l\n+\tand.b\tr0l, @er0+\n+\tinc.b\tr1l\n+\tand.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L22\n+\tfail\n+.L22:\n \n and_b_imm8_rdpostdec:\n \tmov\t#byte_dest, er0\n@@ -163,6 +175,18 @@ and_b_imm8_rdpostdec:\n \tbeq\t.L3\n \tfail\n .L3:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr0l, r1l\n+\tand.b\tr0l, @er0-\n+\tdec.b\tr1l\n+\tand.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L23\n+\tfail\n+.L23:\n \n and_b_imm8_rdpreinc:\n \tmov\t#byte_dest, er0\n@@ -200,6 +224,18 @@ and_b_imm8_rdpreinc:\n \tbeq\t.L4\n \tfail\n .L4:\n+\t;; special case same register\n+\tmov.l\t#pre_byte, er0\n+\tmov.b\t@byte_dest, r1h\n+\tmov.b\tr0l, r1l\n+\tand.b\tr0l, @+er0\n+\tinc.b\tr1l\n+\tand.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L24\n+\tfail\n+.L24:\n \n and_b_imm8_rdpredec:\n \tmov\t#byte_dest, er0\n@@ -237,6 +273,18 @@ and_b_imm8_rdpredec:\n \tbeq\t.L5\n \tfail\n .L5:\n+\t;; special case same register\n+\tmov.l\t#post_byte, er0\n+\tmov.b\t@byte_dest, r1h\n+\tmov.b\tr0l, r1l\n+\tand.b\tr0l, @-er0\n+\tdec.b\tr1l\n+\tand.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L25\n+\tfail\n+.L25:\n \n .endif\t\t\t\t; h8sx\n "
    },
    {
      "sha": "c38bf65222e1acfeffc3a65ab1af13555e20778f",
      "filename": "sim/testsuite/h8300/cmpb.s",
      "status": "modified",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/cmpb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/cmpb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/cmpb.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -477,6 +477,17 @@ cmp_b_reg8_rdpostinc:\n \tbeq\t.L9\n \tfail\n .L9:\n+\t;; special case same register\n+\tmov.l\t#byte_dst, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr0l, r1l\n+\tinc.b\tr1l\n+\tmov.b\tr1l,@er0\n+\tcmp.b\tr0l,@er0+\n+\tbeq\t.L19\n+\tfail\n+.L19:\n+\tmov.b\tr1h, @byte_dst\n \n cmp_b_reg8_rdpostdec:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -530,6 +541,17 @@ cmp_b_reg8_rdpostdec:\n \tbeq\t.L10\n \tfail\n .L10:\n+\t;; special case same register\n+\tmov.l\t#byte_dst, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr0l, r1l\n+\tdec.b\tr1l\n+\tmov.b\tr1l,@er0\n+\tcmp.b\tr0l,@er0-\n+\tbeq\t.L20\n+\tfail\n+.L20:\n+\tmov.b\tr1h, @byte_dst\n \n cmp_b_reg8_rdpreinc:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -583,6 +605,17 @@ cmp_b_reg8_rdpreinc:\n \tbeq\t.L11\n \tfail\n .L11:\n+\t;; special case same register\n+\tmov.l\t#pre_byte, er0\n+\tmov.b\t@byte_dst, r1h\n+\tmov.b\tr0l, r1l\n+\tinc.b\tr1l\n+\tmov.b\tr1l,@(1,er0)\n+\tcmp.b\tr0l,@+er0\n+\tbeq\t.L21\n+\tfail\n+.L21:\n+\tmov.b\tr1h, @byte_dst\n \n cmp_b_reg8_rdpredec:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -636,6 +669,17 @@ cmp_b_reg8_rdpredec:\n \tbeq\t.L12\n \tfail\n .L12:\n+\t;; special case same register\n+\tmov.l\t#post_byte, er0\n+\tmov.b\t@byte_dst, r1h\n+\tmov.b\tr0l, r1l\n+\tdec.b\tr1l\n+\tmov.b\tr1l,@(-1,er0)\n+\tcmp.b\tr0l,@-er0\n+\tbeq\t.L22\n+\tfail\n+.L22:\n+\tmov.b\tr1h, @byte_dst\n \n cmp_b_rsind_rdind:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern"
    },
    {
      "sha": "6c8a686a619491552e5d146c7320716e496e09da",
      "filename": "sim/testsuite/h8300/movb.s",
      "status": "modified",
      "additions": 93,
      "deletions": 4,
      "changes": 97,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/movb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/movb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/movb.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -13,6 +13,8 @@\n \n \t.data\n \t.align\t4\n+byte_dst_dec:\n+\t.byte\t0\n byte_src:\n \t.byte\t0x77\n byte_dst:\n@@ -695,6 +697,16 @@ mov_b_reg8_to_postinc:\t\t; post-increment from register to mem\n \tbeq\t.Lnext49\n \tfail\n .Lnext49:\n+\t;; special case same register\n+\tmov.l\t#byte_dst, er0\n+\tmov.b\tr0l, r1l\n+\tinc.b\tr1l\n+\tmov.b\tr0l, @er0+\n+\tmov.b\t@byte_dst, r0l\n+\tcmp.b\tr0l, r1l\n+\tbeq\t.Lnext53\n+\tfail\n+.Lnext53:\n \tmov.b\t#0, @byte_dst\t; zero it again for the next use.\n \n mov_b_reg8_to_postdec:\t\t; post-decrement from register to mem\n@@ -727,6 +739,16 @@ mov_b_reg8_to_postdec:\t\t; post-decrement from register to mem\n \tbeq\t.Lnext50\n \tfail\n .Lnext50:\n+\t;; special case same register\n+\tmov.l\t#byte_dst, er0\n+\tmov.b\tr0l, r1l\n+\tdec.b\tr1l\n+\tmov.b\tr0l, @er0-\n+\tmov.b\t@byte_dst, r0l\n+\tcmp.b\tr0l, r1l\n+\tbeq\t.Lnext54\n+\tfail\n+.Lnext54:\n \tmov.b\t#0, @byte_dst\t; zero it again for the next use.\n \n mov_b_reg8_to_preinc:\t\t; pre-increment from register to mem\n@@ -759,6 +781,16 @@ mov_b_reg8_to_preinc:\t\t; pre-increment from register to mem\n \tbeq\t.Lnext51\n \tfail\n .Lnext51:\n+\t;; special case same register\n+\tmov.l\t#byte_dst-1, er0\n+\tmov.b\tr0l, r1l\n+\tinc.b\tr1l\n+\tmov.b\tr0l, @+er0\n+\tmov.b\t@byte_dst, r0l\n+\tcmp.b\tr0l, r1l\n+\tbeq\t.Lnext55\n+\tfail\n+.Lnext55:\n \tmov.b\t#0, @byte_dst\t; zero it again for the next use.\n .endif\n \n@@ -796,6 +828,7 @@ mov_b_reg8_to_predec:\t\t; pre-decrement from register to mem\n \t;; CCR confirmation omitted\n \tmov.l\t#byte_dst+1, er1\n \tmov.l\ter1, er0\n+\tdec.b\tr1l\n \tmov.b\tr0l, @-er0\n \tmov.b\t@byte_dst, r0l\n \tcmp.b\tr1l, r0l\n@@ -1641,15 +1674,15 @@ mov_b_indirect_to_indirect:\t; reg indirect, memory to memory\n \n \t;; Now check the result of the move to memory.\n \tcmp.b\t@byte_src, @byte_dst\n-\tbeq\t.Lnext55\n+\tbeq\t.Lnext56\n \tfail\n-.Lnext55:\n+.Lnext56:\n \t;; Now clear the destination location, and verify that.\n \tmov.b\t#0, @byte_dst\n \tcmp.b\t@byte_src, @byte_dst\n-\tbne\t.Lnext56\n+\tbne\t.Lnext57\n \tfail\n-.Lnext56:\t\t\t; OK, pass on.\n+.Lnext57:\t\t\t; OK, pass on.\n \n mov_b_postinc_to_postinc:\t; reg post-increment, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1691,6 +1724,20 @@ mov_b_postinc_to_postinc:\t; reg post-increment, memory to memory\n \tbne\t.Lnext66\n \tfail\n .Lnext66:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#byte_src, er0\n+\tmov.b\t@er0+, @er0+\t; copying byte_src to byte_dst\n+\ttest_h_gr32  byte_src+2 er0\n+\tcmp.b\t@byte_src, @byte_dst\n+\tbeq\t.Lnext67\n+\tfail\n+.Lnext67:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.b\t#0, @byte_dst\n+\tcmp.b\t@byte_src, @byte_dst\n+\tbne\t.Lnext68\n+\tfail\n+.Lnext68:\n \n mov_b_postdec_to_postdec:\t; reg post-decrement, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1732,6 +1779,20 @@ mov_b_postdec_to_postdec:\t; reg post-decrement, memory to memory\n \tbne\t.Lnext76\n \tfail\n .Lnext76:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#byte_src, er0\n+\tmov.b\t@er0-, @er0-\t; copying byte_src to byte_dst_dec\n+\ttest_h_gr32  byte_src-2 er0\n+\tcmp.b\t@byte_src, @byte_dst_dec\n+\tbeq\t.Lnext77\n+\tfail\n+.Lnext77:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.b\t#0, @byte_dst_dec\n+\tcmp.b\t@byte_src, @byte_dst_dec\n+\tbne\t.Lnext78\n+\tfail\n+.Lnext78:\n \n mov_b_preinc_to_preinc:\t\t; reg pre-increment, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1773,6 +1834,20 @@ mov_b_preinc_to_preinc:\t\t; reg pre-increment, memory to memory\n \tbne\t.Lnext86\n \tfail\n .Lnext86:\t\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#byte_src-1, er0\n+\tmov.b\t@+er0, @+er0\t; copying byte_src to byte_dst\n+\ttest_h_gr32  byte_src+1 er0\n+\tcmp.b\t@byte_src, @byte_dst\n+\tbeq\t.Lnext87\n+\tfail\n+.Lnext87:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.b\t#0, @byte_dst\n+\tcmp.b\t@byte_src, @byte_dst\n+\tbne\t.Lnext88\n+\tfail\n+.Lnext88:\n \n mov_b_predec_to_predec:\t\t; reg pre-decrement, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1814,6 +1889,20 @@ mov_b_predec_to_predec:\t\t; reg pre-decrement, memory to memory\n \tbne\t.Lnext96\n \tfail\n .Lnext96:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#byte_src+1, er0\n+\tmov.b\t@-er0, @-er0\t; copying byte_src to byte_dst_dec\n+\ttest_h_gr32  byte_src-1 er0\n+\tcmp.b\t@byte_src, @byte_dst_dec\n+\tbeq\t.Lnext97\n+\tfail\n+.Lnext97:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.b\t#0, @byte_dst_dec\n+\tcmp.b\t@byte_src, @byte_dst_dec\n+\tbne\t.Lnext98\n+\tfail\n+.Lnext98:\n \n mov_b_disp2_to_disp2:\t\t; reg 2-bit disp, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern"
    },
    {
      "sha": "8a8c16a2450bf9b46b15bafa6eb46c0c11464938",
      "filename": "sim/testsuite/h8300/movl.s",
      "status": "modified",
      "additions": 73,
      "deletions": 4,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/movl.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/movl.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/movl.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -13,6 +13,8 @@\n \n \t.data\n \t.align\t4\n+long_dst_dec:\n+\t.long\t0\n long_src:\n \t.long\t0x77777777\n long_dst:\n@@ -1215,6 +1217,16 @@ mov_l_reg32_to_postdec:\t\t; post-decrement from register to mem\n \tbeq\t.Lnext50\n \tfail\n .Lnext50:\n+\t;; special case same register\n+\tmov.l\t#long_dst, er0\n+\tmov.l\ter0, er1\n+\tsubs\t#4, er1\n+\tmov.l\ter0, @er0-\n+\tmov.l\t@long_dst, er0\n+\tcmp.l\ter0, er1\n+\tbeq\t.Lnext54\n+\tfail\n+.Lnext54:\n \tmov.l\t#0, @long_dst\t; zero it again for the next use.\n \n mov_l_reg32_to_preinc:\t\t; pre-increment from register to mem\n@@ -1286,6 +1298,7 @@ mov_l_reg32_to_predec:\t\t; pre-decrement from register to mem\n \t;; CCR confirmation omitted\n \tmov.l\t#long_dst+4, er1\n \tmov.l\ter1, er0\n+\tsubs\t#4, er1\n \tmov.l\ter0, @-er0\n \tmov.l\t@long_dst, er0\n \tcmp.l\ter1, er0\n@@ -1782,15 +1795,15 @@ mov_l_indirect_to_indirect:\t; reg indirect, memory to memory\n \n \t;; Now check the result of the move to memory.\n \tcmp.l\t@long_src, @long_dst\n-\tbeq\t.Lnext55\n+\tbeq\t.Lnext56\n \tfail\n-.Lnext55:\n+.Lnext56:\n \t;; Now clear the destination location, and verify that.\n \tmov.l\t#0, @long_dst\n \tcmp.l\t@long_src, @long_dst\n-\tbne\t.Lnext56\n+\tbne\t.Lnext57\n \tfail\n-.Lnext56:\t\t\t; OK, pass on.\n+.Lnext57:\t\t\t; OK, pass on.\n \n mov_l_postinc_to_postinc:\t; reg post-increment, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1832,6 +1845,20 @@ mov_l_postinc_to_postinc:\t; reg post-increment, memory to memory\n \tbne\t.Lnext66\n \tfail\n .Lnext66:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#long_src, er0\n+\tmov.l\t@er0+, @er0+\t; copying long_src to long_dst\n+\ttest_h_gr32  long_src+8 er0\n+\tcmp.b\t@long_src, @long_dst\n+\tbeq\t.Lnext67\n+\tfail\n+.Lnext67:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.l\t#0, @long_dst\n+\tcmp.l\t@long_src, @long_dst\n+\tbne\t.Lnext68\n+\tfail\n+.Lnext68:\n \n mov_l_postdec_to_postdec:\t; reg post-decrement, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1873,6 +1900,20 @@ mov_l_postdec_to_postdec:\t; reg post-decrement, memory to memory\n \tbne\t.Lnext76\n \tfail\n .Lnext76:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#long_src, er0\n+\tmov.l\t@er0-, @er0-\t; copying long_src to long_dst_dec\n+\ttest_h_gr32  long_src-8 er0\n+\tcmp.l\t@long_src, @long_dst_dec\n+\tbeq\t.Lnext77\n+\tfail\n+.Lnext77:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.l\t#0, @long_dst_dec\n+\tcmp.l\t@long_src, @long_dst_dec\n+\tbne\t.Lnext78\n+\tfail\n+.Lnext78:\n \n mov_l_preinc_to_preinc:\t\t; reg pre-increment, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1914,6 +1955,20 @@ mov_l_preinc_to_preinc:\t\t; reg pre-increment, memory to memory\n \tbne\t.Lnext86\n \tfail\n .Lnext86:\t\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#long_src-4, er0\n+\tmov.l\t@+er0, @+er0\t; copying long_src to long_dst\n+\ttest_h_gr32  long_src+4 er0\n+\tcmp.b\t@long_src, @long_dst\n+\tbeq\t.Lnext87\n+\tfail\n+.Lnext87:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.b\t#0, @long_dst\n+\tcmp.b\t@long_src, @long_dst\n+\tbne\t.Lnext88\n+\tfail\n+.Lnext88:\n \n mov_l_predec_to_predec:\t\t; reg pre-decrement, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1955,6 +2010,20 @@ mov_l_predec_to_predec:\t\t; reg pre-decrement, memory to memory\n \tbne\t.Lnext96\n \tfail\n .Lnext96:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#long_src+4, er0\n+\tmov.l\t@-er0, @-er0\t; copying long_src to long_dst_dec\n+\ttest_h_gr32  long_src-4 er0\n+\tcmp.l\t@long_src, @long_dst_dec\n+\tbeq\t.Lnext97\n+\tfail\n+.Lnext97:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.l\t#0, @long_dst_dec\n+\tcmp.l\t@long_src, @long_dst_dec\n+\tbne\t.Lnext98\n+\tfail\n+.Lnext98:\n \n mov_l_disp2_to_disp2:\t\t; reg 2-bit disp, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern"
    },
    {
      "sha": "a13db7b3aa78ae6843be998f72c24dfb889764ca",
      "filename": "sim/testsuite/h8300/movw.s",
      "status": "modified",
      "additions": 93,
      "deletions": 4,
      "changes": 97,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/movw.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/movw.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/movw.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -13,6 +13,8 @@\n \n \t.data\n \t.align\t2\n+word_dst_dec:\n+\t.word\t0\n word_src:\n \t.word\t0x7777\n word_dst:\n@@ -890,6 +892,16 @@ mov_w_reg16_to_postinc:\t\t; post-increment from register to mem\n \tbeq\t.Lnext49\n \tfail\n .Lnext49:\n+\t;; special case same register\n+\tmov.l\t#word_dst, er0\n+\tmov.w\tr0, r1\n+\tinc.w\t#2,r1\n+\tmov.w\tr0, @er0+\n+\tmov.w\t@word_dst, r0\n+\tcmp.w\tr0, r1\n+\tbeq\t.Lnext53\n+\tfail\n+.Lnext53:\n \tmov.w\t#0, @word_dst\t; zero it again for the next use.\n \n mov_w_reg16_to_postdec:\t\t; post-decrement from register to mem\n@@ -922,6 +934,16 @@ mov_w_reg16_to_postdec:\t\t; post-decrement from register to mem\n \tbeq\t.Lnext50\n \tfail\n .Lnext50:\n+\t;; special case same register\n+\tmov.l\t#word_dst, er0\n+\tmov.w\tr0, r1\n+\tdec.w\t#2, r1\n+\tmov.w\tr0, @er0-\n+\tmov.w\t@word_dst, r0\n+\tcmp.w\tr0, r1\n+\tbeq\t.Lnext54\n+\tfail\n+.Lnext54:\n \tmov.w\t#0, @word_dst\t; zero it again for the next use.\n \n mov_w_reg16_to_preinc:\t\t; pre-increment from register to mem\n@@ -954,6 +976,16 @@ mov_w_reg16_to_preinc:\t\t; pre-increment from register to mem\n \tbeq\t.Lnext51\n \tfail\n .Lnext51:\n+\t;; special case same register\n+\tmov.l\t#word_dst-2, er0\n+\tmov.w\tr0, r1\n+\tinc.w\t#2, r1\n+\tmov.w\tr0, @+er0\n+\tmov.w\t@word_dst, r0\n+\tcmp.w\tr0, r1\n+\tbeq\t.Lnext55\n+\tfail\n+.Lnext55:\n \tmov.w\t#0, @word_dst\t; zero it again for the next use.\n .endif\n \n@@ -992,6 +1024,7 @@ mov_w_reg16_to_predec:\t\t; pre-decrement from register to mem\n \t;; CCR confirmation omitted\n \tmov.l\t#word_dst+2, er1\n \tmov.l\ter1, er0\n+\tdec.w\t#2, r1\n \tmov.w\tr0, @-er0\n \tmov.w\t@word_dst, r0\n \tcmp.w\tr1, r0\n@@ -1479,15 +1512,15 @@ mov_w_indirect_to_indirect:\t; reg indirect, memory to memory\n \n \t;; Now check the result of the move to memory.\n \tcmp.w\t@word_src, @word_dst\n-\tbeq\t.Lnext55\n+\tbeq\t.Lnext56\n \tfail\n-.Lnext55:\n+.Lnext56:\n \t;; Now clear the destination location, and verify that.\n \tmov.w\t#0, @word_dst\n \tcmp.w\t@word_src, @word_dst\n-\tbne\t.Lnext56\n+\tbne\t.Lnext57\n \tfail\n-.Lnext56:\t\t\t; OK, pass on.\n+.Lnext57:\t\t\t; OK, pass on.\n \n mov_w_postinc_to_postinc:\t; reg post-increment, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1529,6 +1562,20 @@ mov_w_postinc_to_postinc:\t; reg post-increment, memory to memory\n \tbne\t.Lnext66\n \tfail\n .Lnext66:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#word_src, er0\n+\tmov.w\t@er0+, @er0+\t; copying word_src to word_dst\n+\ttest_h_gr32  word_src+4 er0\n+\tcmp.w\t@word_src, @word_dst\n+\tbeq\t.Lnext67\n+\tfail\n+.Lnext67:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.w\t#0, @word_dst\n+\tcmp.b\t@word_src, @word_dst\n+\tbne\t.Lnext68\n+\tfail\n+.Lnext68:\n \n mov_w_postdec_to_postdec:\t; reg post-decrement, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1570,6 +1617,20 @@ mov_w_postdec_to_postdec:\t; reg post-decrement, memory to memory\n \tbne\t.Lnext76\n \tfail\n .Lnext76:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#word_src, er0\n+\tmov.w\t@er0-, @er0-\t; copying word_src to word_dst_dec\n+\ttest_h_gr32  word_src-4 er0\n+\tcmp.w\t@word_src, @word_dst_dec\n+\tbeq\t.Lnext77\n+\tfail\n+.Lnext77:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.w\t#0, @word_dst_dec\n+\tcmp.w\t@word_src, @word_dst_dec\n+\tbne\t.Lnext78\n+\tfail\n+.Lnext78:\n \n mov_w_preinc_to_preinc:\t\t; reg pre-increment, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1611,6 +1672,20 @@ mov_w_preinc_to_preinc:\t\t; reg pre-increment, memory to memory\n \tbne\t.Lnext86\n \tfail\n .Lnext86:\t\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#word_src-2, er0\n+\tmov.w\t@+er0, @+er0\t; copying word_src to word_dst\n+\ttest_h_gr32  word_src+2 er0\n+\tcmp.w\t@word_src, @word_dst\n+\tbeq\t.Lnext87\n+\tfail\n+.Lnext87:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.w\t#0, @word_dst\n+\tcmp.w\t@word_src, @word_dst\n+\tbne\t.Lnext88\n+\tfail\n+.Lnext88:\n \n mov_w_predec_to_predec:\t\t; reg pre-decrement, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -1652,6 +1727,20 @@ mov_w_predec_to_predec:\t\t; reg pre-decrement, memory to memory\n \tbne\t.Lnext96\n \tfail\n .Lnext96:\t\t\t; OK, pass on.\n+\t;; special case same register\n+\tmov.l\t#word_src+2, er0\n+\tmov.w\t@-er0, @-er0\t; copying word_src to word_dst_dec\n+\ttest_h_gr32  word_src-2 er0\n+\tcmp.w\t@word_src, @word_dst_dec\n+\tbeq\t.Lnext97\n+\tfail\n+.Lnext97:\n+\t;; Now clear the destination location, and verify that.\n+\tmov.w\t#0, @word_dst_dec\n+\tcmp.w\t@word_src, @word_dst_dec\n+\tbne\t.Lnext98\n+\tfail\n+.Lnext98:\n \n mov_w_disp2_to_disp2:\t\t; reg 2-bit disp, memory to memory\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern"
    },
    {
      "sha": "86ce9ed84258a475d5828c077b918943b6e3c47a",
      "filename": "sim/testsuite/h8300/orb.s",
      "status": "modified",
      "additions": 48,
      "deletions": 1,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/orb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/orb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/orb.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -243,7 +243,6 @@ or_b_imm8_rdpredec:\n \tfail\n .L5:\n \n-\n .endif\n \n or_b_reg8_reg8:\n@@ -343,6 +342,18 @@ or_b_reg8_rdpostinc:\n \tbeq\t.L7\n \tfail\n .L7:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\tr0l, r1l\n+\tmov.b\t@er0, r1h\n+\tor.b\tr0l, @er0+\n+\tinc.b\tr1l\n+\tor.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L27\n+\tfail\n+.L27:\n \n or_b_reg8_rdpostdec:\n \tmov\t#byte_dest, er0\n@@ -381,6 +392,18 @@ or_b_reg8_rdpostdec:\n \tbeq\t.L8\n \tfail\n .L8:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\tr0l, r1l\n+\tmov.b\t@er0, r1h\n+\tor.b\tr0l, @er0-\n+\tdec.b\tr1l\n+\tor.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L28\n+\tfail\n+.L28:\n \n or_b_reg8_rdpreinc:\n \tmov\t#byte_dest, er0\n@@ -419,6 +442,18 @@ or_b_reg8_rdpreinc:\n \tbeq\t.L9\n \tfail\n .L9:\n+\t;; special case same register\n+\tmov.l\t#pre_byte, er0\n+\tmov.b\tr0l, r1l\n+\tmov.b\t@byte_dest, r1h\n+\tor.b\tr0l, @+er0\n+\tinc.b\tr1l\n+\tor.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L29\n+\tfail\n+.L29:\n \n or_b_reg8_rdpredec:\n \tmov\t#byte_dest, er0\n@@ -457,6 +492,18 @@ or_b_reg8_rdpredec:\n \tbeq\t.L10\n \tfail\n .L10:\n+\t;; special case same register\n+\tmov.l\t#post_byte, er0\n+\tmov.b\tr0l, r1l\n+\tmov.b\t@byte_dest, r1h\n+\tor.b\tr0l, @-er0\n+\tdec.b\tr1l\n+\tor.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L30\n+\tfail\n+.L30:\n \n .endif\n "
    },
    {
      "sha": "628521f1d147b8696a64049c4c7e1f5b131816fe",
      "filename": "sim/testsuite/h8300/subb.s",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/subb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/subb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/subb.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -247,6 +247,20 @@ sub_b_reg8_rdpostinc:\n \tbeq\t.L5\n \tfail\n .L5:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr1h, r2l\n+\tmov.b\tr0l, r1l\n+\tsub.b\tr0l, @er0+\n+\tinc.b\tr1l\n+\tsub.b\tr1l, r1h\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1h, r0l\n+\tbeq\t.L25\n+\tfail\n+.L25:\n+\tmov.b\tr2l, @byte_dest\n \n sub_b_reg8_rdpostdec:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -281,6 +295,18 @@ sub_b_reg8_rdpostdec:\n \tbeq\t.L6\n \tfail\n .L6:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\t@er0, r1h\n+\tmov.b\tr0l, r1l\n+\tsub.b\tr0l, @er0-\n+\tdec.b\tr1l\n+\tsub.b\tr1l, r1h\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1h, r0l\n+\tbeq\t.L26\n+\tfail\n+.L26:\n \n .endif\n "
    },
    {
      "sha": "04d43cdb9b20279fae01d81ccb94734b57706c56",
      "filename": "sim/testsuite/h8300/xorb.s",
      "status": "modified",
      "additions": 25,
      "deletions": 2,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/xorb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002/sim/testsuite/h8300/xorb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/h8300/xorb.s?ref=9d7c4ba5e5b711824bb2cc5de21d28e3fd6de002",
      "patch": "@@ -155,8 +155,6 @@ xor_b_imm8_rdpostdec:\n \tbeq\t.L3\n \tfail\n .L3:\n-\n-\n .endif\n \n xor_b_reg8_reg8:\n@@ -248,6 +246,19 @@ xor_b_reg8_rdpostinc:\n \tbeq\t.L5\n \tfail\n .L5:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\tr0l, r1l\n+\tmov.b\t@er0, r1h\n+\txor.b\tr0l, @er0+\n+\tinc.b\tr1l\n+\txor.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L25\n+\tfail\n+.L25:\n+\tmov.b\tr1h, @byte_dest\n \n xor_b_reg8_rdpostdec:\n \tset_grs_a5a5\t\t; Fill all general regs with a fixed pattern\n@@ -282,6 +293,18 @@ xor_b_reg8_rdpostdec:\n \tbeq\t.L6\n \tfail\n .L6:\n+\t;; special case same register\n+\tmov.l\t#byte_dest, er0\n+\tmov.b\tr0l, r1l\n+\tmov.b\t@er0, r1h\n+\txor.b\tr0l, @er0-\n+\tdec.b\tr1l\n+\txor.b\tr1h, r1l\n+\tmov.b\t@byte_dest, r0l\n+\tcmp.b\tr1l, r0l\n+\tbeq\t.L26\n+\tfail\n+.L26:\n \n .endif\t\t\t\t; h8sx\n "
    }
  ]
}