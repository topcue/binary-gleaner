{
  "sha": "0ab92974ab9041d80dbd12303d5e8115436fd61e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGFiOTI5NzRhYjkwNDFkODBkYmQxMjMwM2Q1ZTgxMTU0MzZmZDYxZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-13T22:41:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-20T16:15:56Z"
    },
    "message": "Change set_locator_info to take a symtab_and_line\n\nThis changes set_locator_info to take a symtab_and_line, rather than\nthe individual components.\n\ngdb/ChangeLog\n2019-12-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-stack.h (struct tui_locator_window) <set_locator_info>:\n\tTake a symtab_and_line.\n\t* tui/tui-stack.c (tui_locator_window::set_locator_info): Take a\n\tsymtab_and_line.\n\t(tui_show_frame_info): Update.\n\nChange-Id: Icb58d67e6c5bdc034eede9e5bbe8c1d1e633fbb5",
    "tree": {
      "sha": "f52bb62e72af1115cd1adb98fc5518b92073fdc1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f52bb62e72af1115cd1adb98fc5518b92073fdc1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0ab92974ab9041d80dbd12303d5e8115436fd61e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ab92974ab9041d80dbd12303d5e8115436fd61e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0ab92974ab9041d80dbd12303d5e8115436fd61e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ab92974ab9041d80dbd12303d5e8115436fd61e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ae4393e22cee036eddfa19287cfe774d5f01bb7c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae4393e22cee036eddfa19287cfe774d5f01bb7c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ae4393e22cee036eddfa19287cfe774d5f01bb7c"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 32,
    "deletions": 38
  },
  "files": [
    {
      "sha": "887e04e57dd488cccf0e8980731ce16787ed0539",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ab92974ab9041d80dbd12303d5e8115436fd61e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ab92974ab9041d80dbd12303d5e8115436fd61e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0ab92974ab9041d80dbd12303d5e8115436fd61e",
      "patch": "@@ -1,3 +1,11 @@\n+2019-12-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-stack.h (struct tui_locator_window) <set_locator_info>:\n+\tTake a symtab_and_line.\n+\t* tui/tui-stack.c (tui_locator_window::set_locator_info): Take a\n+\tsymtab_and_line.\n+\t(tui_show_frame_info): Update.\n+\n 2019-12-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-stack.c (tui_show_frame_info): Don't call"
    },
    {
      "sha": "d2443438596a8f46f0e7d48e2dbf10c930bdb079",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 22,
      "deletions": 35,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ab92974ab9041d80dbd12303d5e8115436fd61e/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ab92974ab9041d80dbd12303d5e8115436fd61e/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=0ab92974ab9041d80dbd12303d5e8115436fd61e",
      "patch": "@@ -258,28 +258,26 @@ tui_locator_window::set_locator_fullname (const char *fullname)\n \n bool\n tui_locator_window::set_locator_info (struct gdbarch *gdbarch_in,\n-\t\t\t\t      const char *fullname,\n-\t\t\t\t      const char *procname, \n-\t\t\t\t      int lineno,\n-\t\t\t\t      CORE_ADDR addr_in)\n+\t\t\t\t      const struct symtab_and_line &sal,\n+\t\t\t\t      const char *procname)\n {\n   bool locator_changed_p = false;\n \n-  if (procname == NULL)\n-    procname = \"\";\n+  gdb_assert (procname != NULL);\n \n-  if (fullname == NULL)\n-    fullname = \"\";\n+  const char *fullname = (sal.symtab == nullptr\n+\t\t\t  ? \"??\"\n+\t\t\t  : symtab_to_fullname (sal.symtab));\n \n   locator_changed_p |= proc_name != procname;\n-  locator_changed_p |= lineno != line_no;\n-  locator_changed_p |= addr_in != addr;\n+  locator_changed_p |= sal.line != line_no;\n+  locator_changed_p |= sal.pc != addr;\n   locator_changed_p |= gdbarch_in != gdbarch;\n   locator_changed_p |= full_name != fullname;\n \n   proc_name = procname;\n-  line_no = lineno;\n-  addr = addr_in;\n+  line_no = sal.line;\n+  addr = sal.pc;\n   gdbarch = gdbarch_in;\n   set_locator_fullname (fullname);\n \n@@ -314,37 +312,25 @@ tui_show_frame_info (struct frame_info *fi)\n \n   if (fi)\n     {\n-      CORE_ADDR pc;\n-\n       symtab_and_line sal = find_frame_sal (fi);\n \n-      const char *fullname = nullptr;\n-      if (sal.symtab != nullptr)\n-\tfullname = symtab_to_fullname (sal.symtab);\n-\n-      if (get_frame_pc_if_available (fi, &pc))\n-\tlocator_changed_p\n-\t  = locator->set_locator_info (get_frame_arch (fi),\n-\t\t\t\t       (sal.symtab == 0\n-\t\t\t\t\t? \"??\" : fullname),\n-\t\t\t\t       tui_get_function_from_frame (fi),\n-\t\t\t\t       sal.line,\n-\t\t\t\t       pc);\n+      const char *func_name;\n+      /* find_frame_sal does not always set PC, but we want to ensure\n+\t that it is available in the SAL.  */\n+      if (get_frame_pc_if_available (fi, &sal.pc))\n+\tfunc_name = tui_get_function_from_frame (fi);\n       else\n-\tlocator_changed_p\n-\t  = locator->set_locator_info (get_frame_arch (fi),\n-\t\t\t\t       \"??\", _(\"<unavailable>\"), sal.line, 0);\n+\tfunc_name = _(\"<unavailable>\");\n+\n+      locator_changed_p = locator->set_locator_info (get_frame_arch (fi),\n+\t\t\t\t\t\t     sal, func_name);\n \n       /* If the locator information has not changed, then frame information has\n \t not changed.  If frame information has not changed, then the windows'\n \t contents will not change.  So don't bother refreshing the windows.  */\n       if (!locator_changed_p)\n \treturn 0;\n \n-      /* find_frame_sal does not always set PC, but we want to ensure\n-\t that it is available in the SAL.  */\n-      sal.pc = pc;\n-\n       for (struct tui_source_window_base *win_info : tui_source_windows ())\n \t{\n \t  win_info->maybe_update (fi, sal);\n@@ -355,8 +341,9 @@ tui_show_frame_info (struct frame_info *fi)\n     }\n   else\n     {\n-      locator_changed_p\n-\t= locator->set_locator_info (NULL, NULL, NULL, 0, (CORE_ADDR) 0);\n+      symtab_and_line sal {};\n+\n+      locator_changed_p = locator->set_locator_info (NULL, sal, \"\");\n \n       if (!locator_changed_p)\n \treturn 0;"
    },
    {
      "sha": "3bfe529244c6b2324b4f592c84418c4856d31e13",
      "filename": "gdb/tui/tui-stack.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ab92974ab9041d80dbd12303d5e8115436fd61e/gdb/tui/tui-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ab92974ab9041d80dbd12303d5e8115436fd61e/gdb/tui/tui-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.h?ref=0ab92974ab9041d80dbd12303d5e8115436fd61e",
      "patch": "@@ -54,9 +54,8 @@ struct tui_locator_window : public tui_gen_win_info\n      Returns true if any of the locator's fields were actually\n      changed, and false otherwise.  */\n   bool set_locator_info (struct gdbarch *gdbarch,\n-\t\t\t const char *fullname,\n-\t\t\t const char *procname,\n-\t\t\t int lineno, CORE_ADDR addr);\n+\t\t\t const struct symtab_and_line &sal,\n+\t\t\t const char *procname);\n \n   /* Set the full_name portion of the locator.  */\n   void set_locator_fullname (const char *fullname);"
    }
  ]
}