{
  "sha": "38dc70cfeea6bf0cc97ac08dc61878726cb60204",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzhkYzcwY2ZlZWE2YmYwY2M5N2FjMDhkYzYxODc4NzI2Y2I2MDIwNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:12Z"
    },
    "message": "Split out ada_binop_minmax\n\nThis splits OP_ATR_MIN and OP_ATR_MAX into a new function for future\nuse.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_binop_minmax): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "38e6161e3bf8ba63fe2e24193f4be9403a5510f8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/38e6161e3bf8ba63fe2e24193f4be9403a5510f8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/38dc70cfeea6bf0cc97ac08dc61878726cb60204",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38dc70cfeea6bf0cc97ac08dc61878726cb60204",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/38dc70cfeea6bf0cc97ac08dc61878726cb60204",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38dc70cfeea6bf0cc97ac08dc61878726cb60204/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b84564fc8cecceb0d289e671169391f896382e5e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b84564fc8cecceb0d289e671169391f896382e5e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b84564fc8cecceb0d289e671169391f896382e5e"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 24,
    "deletions": 8
  },
  "files": [
    {
      "sha": "68638776327af7e39bbeb9044dc1383c64a15051",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/38dc70cfeea6bf0cc97ac08dc61878726cb60204/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/38dc70cfeea6bf0cc97ac08dc61878726cb60204/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=38dc70cfeea6bf0cc97ac08dc61878726cb60204",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_binop_minmax): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_unop_atr): New function."
    },
    {
      "sha": "aa2912f8df50d837176cf49b3e76cc444dcfad3d",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 19,
      "deletions": 8,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/38dc70cfeea6bf0cc97ac08dc61878726cb60204/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/38dc70cfeea6bf0cc97ac08dc61878726cb60204/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=38dc70cfeea6bf0cc97ac08dc61878726cb60204",
      "patch": "@@ -10345,6 +10345,24 @@ ada_unop_atr (struct expression *exp, enum noside noside, enum exp_opcode op,\n     }\n }\n \n+/* A helper function for OP_ATR_MIN and OP_ATR_MAX.  */\n+\n+static struct value *\n+ada_binop_minmax (struct type *expect_type,\n+\t\t  struct expression *exp,\n+\t\t  enum noside noside, enum exp_opcode op,\n+\t\t  struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return value_zero (value_type (arg1), not_lval);\n+  else\n+    {\n+      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+      return value_binop (arg1, arg2,\n+\t\t\t  op == OP_ATR_MIN ? BINOP_MIN : BINOP_MAX);\n+    }\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10861,14 +10879,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       arg2 = evaluate_subexp (nullptr, exp, pos, noside);\n       if (noside == EVAL_SKIP)\n \tgoto nosideret;\n-      else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn value_zero (value_type (arg1), not_lval);\n-      else\n-\t{\n-\t  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-\t  return value_binop (arg1, arg2,\n-\t\t\t      op == OP_ATR_MIN ? BINOP_MIN : BINOP_MAX);\n-\t}\n+      return ada_binop_minmax (expect_type, exp, noside, op, arg1, arg2);\n \n     case OP_ATR_MODULUS:\n       {"
    }
  ]
}