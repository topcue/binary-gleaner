{
  "sha": "8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGM1MWYyZjI5MWE1NDU5ZTFlYWJkMDAwYjJjNTJlNWRlNTJiNGM1Ng==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-26T16:43:39Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-26T16:43:39Z"
    },
    "message": "Fix sanitization problems in the BFD library when running the linker testsuite for the AVR target.\n\n\tPR 26433\n\t* elf32-avr.c (avr_final_link_relocate):  Fix undefined shift\n\tbehaviour.\n\t(avr_elf32_load_records_from_section): Use bfd_get_16 and\n\tbfd_get_32 to load values from potentially unaligned pointers.",
    "tree": {
      "sha": "6469a3ac3f202e3179f0181a0f986ca947ed37cf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6469a3ac3f202e3179f0181a0f986ca947ed37cf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c51f2f291a5459e1eabd000b2c52e5de52b4c56/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eae0b5c3b2d6b76c3ed80146bc938e0d6b7e9fec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eae0b5c3b2d6b76c3ed80146bc938e0d6b7e9fec",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eae0b5c3b2d6b76c3ed80146bc938e0d6b7e9fec"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 13,
    "deletions": 7
  },
  "files": [
    {
      "sha": "646036483a9cc489bd89cfb1ffcbced19e007d5d",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c51f2f291a5459e1eabd000b2c52e5de52b4c56/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c51f2f291a5459e1eabd000b2c52e5de52b4c56/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
      "patch": "@@ -1,5 +1,11 @@\n 2020-08-26  Nick Clifton  <nickc@redhat.com>\n \n+\tPR 26433\n+\t* elf32-avr.c (avr_final_link_relocate):  Fix undefined shift\n+\tbehaviour.\n+\t(avr_elf32_load_records_from_section): Use bfd_get_16 and\n+\tbfd_get_32 to load values from potentially unaligned pointers.\n+\n \tPR 26416\n \t* elf64-alpha.c (elf64_alpha_relax_tls_get_addr): Test for and\n \tignore local symbols."
    },
    {
      "sha": "afb38b2c121d4c29a2d0cb6cc7688422da0e9468",
      "filename": "bfd/elf32-avr.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c51f2f291a5459e1eabd000b2c52e5de52b4c56/bfd/elf32-avr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c51f2f291a5459e1eabd000b2c52e5de52b4c56/bfd/elf32-avr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-avr.c?ref=8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
      "patch": "@@ -1052,7 +1052,7 @@ avr_final_link_relocate (reloc_howto_type *\t\t    howto,\n       if (srel > ((1 << 7) - 1) || (srel < - (1 << 7)))\n \treturn bfd_reloc_overflow;\n       x = bfd_get_16 (input_bfd, contents);\n-      x = (x & 0xfc07) | (((srel >> 1) << 3) & 0x3f8);\n+      x = (x & 0xfc07) | (((srel >> 1) * 8) & 0x3f8);\n       bfd_put_16 (input_bfd, x, contents);\n       break;\n \n@@ -4039,7 +4039,7 @@ avr_elf32_load_records_from_section (bfd *abfd, asection *sec)\n   ptr++;\n   flags = *((bfd_byte *) ptr);\n   ptr++;\n-  record_count = *((uint16_t *) ptr);\n+  record_count = bfd_get_16 (abfd, ptr);\n   ptr+=2;\n   BFD_ASSERT (ptr - contents == AVR_PROPERTY_SECTION_HEADER_SIZE);\n \n@@ -4106,7 +4106,7 @@ avr_elf32_load_records_from_section (bfd *abfd, asection *sec)\n \t    }\n \t}\n \n-      address = *((uint32_t *) ptr);\n+      address = bfd_get_32 (abfd, ptr);\n       ptr += 4;\n       size -= 4;\n \n@@ -4148,15 +4148,15 @@ avr_elf32_load_records_from_section (bfd *abfd, asection *sec)\n \t  /* Just a 4-byte fill to load.  */\n \t  if (size < 4)\n \t    goto load_failed;\n-\t  r_list->records [i].data.org.fill = *((uint32_t *) ptr);\n+\t  r_list->records [i].data.org.fill = bfd_get_32 (abfd, ptr);\n \t  ptr += 4;\n \t  size -= 4;\n \t  break;\n \tcase RECORD_ALIGN:\n \t  /* Just a 4-byte alignment to load.  */\n \t  if (size < 4)\n \t    goto load_failed;\n-\t  r_list->records [i].data.align.bytes = *((uint32_t *) ptr);\n+\t  r_list->records [i].data.align.bytes = bfd_get_32 (abfd, ptr);\n \t  ptr += 4;\n \t  size -= 4;\n \t  /* Just initialise PRECEDING_DELETED field, this field is\n@@ -4167,9 +4167,9 @@ avr_elf32_load_records_from_section (bfd *abfd, asection *sec)\n \t  /* A 4-byte alignment, and a 4-byte fill to load.  */\n \t  if (size < 8)\n \t    goto load_failed;\n-\t  r_list->records [i].data.align.bytes = *((uint32_t *) ptr);\n+\t  r_list->records [i].data.align.bytes = bfd_get_32 (abfd, ptr);\n \t  ptr += 4;\n-\t  r_list->records [i].data.align.fill = *((uint32_t *) ptr);\n+\t  r_list->records [i].data.align.fill = bfd_get_32 (abfd, ptr);\n \t  ptr += 4;\n \t  size -= 8;\n \t  /* Just initialise PRECEDING_DELETED field, this field is"
    }
  ]
}