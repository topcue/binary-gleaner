{
  "sha": "2d78f95bb639209254eb7252f9c48c520bd90d56",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmQ3OGY5NWJiNjM5MjA5MjU0ZWI3MjUyZjljNDhjNTIwYmQ5MGQ1Ng==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T10:49:02Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:26Z"
    },
    "message": "[PATCH 24/57][Arm][GAS] Add support for MVE instructions: vmlas, vmulh and vrmulh\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_mve_vmlas): New encoding function.\n\t(do_mve_vmulh): Likewise.\n\t(insns): Add entries for MVE mnemonics.\n\t* testsuite/gas/arm/mve-vmlas-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmlas-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmlas-bad.s: New test.\n\t* testsuite/gas/arm/mve-vmulh-bad.d: New test.\n\t* testsuite/gas/arm/mve-vmulh-bad.l: New test.\n\t* testsuite/gas/arm/mve-vmulh-bad.s: New test.",
    "tree": {
      "sha": "bb3237d867fff47e17ed615ffa491763a43d8cce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bb3237d867fff47e17ed615ffa491763a43d8cce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2d78f95bb639209254eb7252f9c48c520bd90d56",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d78f95bb639209254eb7252f9c48c520bd90d56",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2d78f95bb639209254eb7252f9c48c520bd90d56",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d78f95bb639209254eb7252f9c48c520bd90d56/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a8465a06e0986374f501d0e286a5f351af2aa878",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8465a06e0986374f501d0e286a5f351af2aa878",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a8465a06e0986374f501d0e286a5f351af2aa878"
    }
  ],
  "stats": {
    "total": 168,
    "additions": 168,
    "deletions": 0
  },
  "files": [
    {
      "sha": "890af8630c7cc091d8c674f809edcaa0221c70eb",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -1,3 +1,15 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_mve_vmlas): New encoding function.\n+\t(do_mve_vmulh): Likewise.\n+\t(insns): Add entries for MVE mnemonics.\n+\t* testsuite/gas/arm/mve-vmlas-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmlas-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmlas-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vmulh-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vmulh-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vmulh-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (enum operand_parse_code): New operand."
    },
    {
      "sha": "1b65a26bcdacc64a5f76805eaa062e1b121e5d74",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -15704,6 +15704,33 @@ do_mve_viddup (void)\n   inst.is_neon = 1;\n }\n \n+static void\n+do_mve_vmlas (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_QQR, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (3, rs, N_EQK, N_EQK, N_SU_MVE | N_KEY);\n+\n+  if (inst.operands[2].reg == REG_PC)\n+    as_tsktsk (MVE_BAD_PC);\n+  else if (inst.operands[2].reg == REG_SP)\n+    as_tsktsk (MVE_BAD_SP);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  inst.instruction |= (et.type == NT_unsigned) << 28;\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= neon_logbits (et.size) << 20;\n+  inst.instruction |= LOW4 (inst.operands[1].reg) << 16;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= HI1 (inst.operands[1].reg) << 7;\n+  inst.instruction |= inst.operands[2].reg;\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vmaxnma_vminnma (void)\n {\n@@ -17235,6 +17262,21 @@ do_mve_vsbc (void)\n   mve_encode_qqq (1, 64);\n }\n \n+static void\n+do_mve_vmulh (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_QQQ, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (3, rs, N_EQK, N_EQK, N_SU_MVE | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  mve_encode_qqq (et.type == NT_unsigned, et.size);\n+}\n+\n static void\n do_mve_vmull (void)\n {\n@@ -24649,6 +24691,10 @@ static const struct asm_opcode insns[] =\n  mCEF(vrmlsldavhx,  _vrmlsldavhx,  4, (RRe, RR, RMQ, RMQ),  mve_vrmlaldavh),\n  mCEF(vrmlsldavhax, _vrmlsldavhax, 4, (RRe, RR, RMQ, RMQ),  mve_vrmlaldavh),\n \n+ mToC(\"vmlas\",\t  ee011e40,\t3, (RMQ, RMQ, RR),\t\tmve_vmlas),\n+ mToC(\"vmulh\",\t  ee010e01,\t3, (RMQ, RMQ, RMQ),\t\tmve_vmulh),\n+ mToC(\"vrmulh\",\t  ee011e01,\t3, (RMQ, RMQ, RMQ),\t\tmve_vmulh),\n+\n #undef THUMB_VARIANT\n #define THUMB_VARIANT & mve_fp_ext\n  mToC(\"vcmul\", ee300e00,   4, (RMQ, RMQ, RMQ, EXPi),\t\t  mve_vcmul),"
    },
    {
      "sha": "d33b1853628db5af044eea556e8005c56a409075",
      "filename": "gas/testsuite/gas/arm/mve-vmlas-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmlas-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmlas-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmlas-bad.d?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -0,0 +1,5 @@\n+#name: Bad MVE VMLAS instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vmlas-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "3a06f32f636331a73ae150a5a62bd51b4360122d",
      "filename": "gas/testsuite/gas/arm/mve-vmlas-bad.l",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmlas-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmlas-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmlas-bad.l?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -0,0 +1,16 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmlas.s64 q0,q1,r2'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vmlas.f32 q0,q1,r2'\n+[^:]*:12: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:13: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Error: syntax error -- `vmlaseq.s16 q0,q1,r2'\n+[^:]*:17: Error: syntax error -- `vmlaseq.s16 q0,q1,r2'\n+[^:]*:19: Error: syntax error -- `vmlaseq.s16 q0,q1,r2'\n+[^:]*:20: Error: vector predicated instruction should be in VPT/VPST block -- `vmlast.s16 q0,q1,r2'\n+[^:]*:22: Error: instruction missing MVE vector predication code -- `vmlas.s16 q0,q1,r2'"
    },
    {
      "sha": "5eff30e4f38aed6a3d970b9f0fa7d7f96eae468f",
      "filename": "gas/testsuite/gas/arm/mve-vmlas-bad.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmlas-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmlas-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmlas-bad.s?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -0,0 +1,22 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vmlas.s16 q0, q1, r2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmlas.s64 q0, q1, r2\n+vmlas.f32 q0, q1, r2\n+vmlas.u32 q0, q1, sp\n+vmlas.u32 q0, q1, pc\n+cond\n+it eq\n+vmlaseq.s16 q0, q1, r2\n+vmlaseq.s16 q0, q1, r2\n+vpst\n+vmlaseq.s16 q0, q1, r2\n+vmlast.s16 q0, q1, r2\n+vpst\n+vmlas.s16 q0, q1, r2"
    },
    {
      "sha": "febf2812545e7901a0021f1220c0a78d8749a7d0",
      "filename": "gas/testsuite/gas/arm/mve-vmulh-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmulh-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmulh-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmulh-bad.d?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VMULH and VRMULH instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vmulh-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "7e3c01b38f94f36c69d208110c0a8b51f79c4893",
      "filename": "gas/testsuite/gas/arm/mve-vmulh-bad.l",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmulh-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmulh-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmulh-bad.l?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -0,0 +1,29 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vmulh.f16 q0,q1,q2'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vmulh.i32 q0,q1,q2'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vmulh.s64 q0,q1,q2'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrmulh.f16 q0,q1,q2'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vrmulh.i32 q0,q1,q2'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vrmulh.s64 q0,q1,q2'\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:19: Error: syntax error -- `vmulheq.s16 q0,q1,q2'\n+[^:]*:20: Error: syntax error -- `vmulheq.s16 q0,q1,q2'\n+[^:]*:22: Error: syntax error -- `vmulheq.s16 q0,q1,q2'\n+[^:]*:23: Error: vector predicated instruction should be in VPT/VPST block -- `vmulht.s16 q0,q1,q2'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vmulh.s16 q0,q1,q2'\n+[^:]*:27: Error: syntax error -- `vrmulheq.s16 q0,q1,q2'\n+[^:]*:28: Error: syntax error -- `vrmulheq.s16 q0,q1,q2'\n+[^:]*:30: Error: syntax error -- `vrmulheq.s16 q0,q1,q2'\n+[^:]*:31: Error: vector predicated instruction should be in VPT/VPST block -- `vrmulht.s16 q0,q1,q2'\n+[^:]*:33: Error: instruction missing MVE vector predication code -- `vrmulh.s16 q0,q1,q2'"
    },
    {
      "sha": "84d3cceb87a21ff926e546daf05670fe6f22a39a",
      "filename": "gas/testsuite/gas/arm/mve-vmulh-bad.s",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmulh-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d78f95bb639209254eb7252f9c48c520bd90d56/gas/testsuite/gas/arm/mve-vmulh-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmulh-bad.s?ref=2d78f95bb639209254eb7252f9c48c520bd90d56",
      "patch": "@@ -0,0 +1,33 @@\n+.macro cond op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().u16 q0, q1, q2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vmulh.f16 q0, q1, q2\n+vmulh.i32 q0, q1, q2\n+vmulh.s64 q0, q1, q2\n+vrmulh.f16 q0, q1, q2\n+vrmulh.i32 q0, q1, q2\n+vrmulh.s64 q0, q1, q2\n+cond vmulh\n+cond vrmulh\n+it eq\n+vmulheq.s16 q0, q1, q2\n+vmulheq.s16 q0, q1, q2\n+vpst\n+vmulheq.s16 q0, q1, q2\n+vmulht.s16 q0, q1, q2\n+vpst\n+vmulh.s16 q0, q1, q2\n+it eq\n+vrmulheq.s16 q0, q1, q2\n+vrmulheq.s16 q0, q1, q2\n+vpst\n+vrmulheq.s16 q0, q1, q2\n+vrmulht.s16 q0, q1, q2\n+vpst\n+vrmulh.s16 q0, q1, q2"
    }
  ]
}