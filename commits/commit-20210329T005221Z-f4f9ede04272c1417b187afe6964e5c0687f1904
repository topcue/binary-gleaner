{
  "sha": "f4f9ede04272c1417b187afe6964e5c0687f1904",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjRmOWVkZTA0MjcyYzE0MTdiMTg3YWZlNjk2NGU1YzA2ODdmMTkwNA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-28T23:12:37Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-29T00:52:21Z"
    },
    "message": "Miscellaneous BFD int vs bfd_boolean fixes\n\nnds32 hyper_relax takes values of 0, 1 and 2.  vms_write_data_block\nreturn TRUE/FALSE not positive/negative.\n\n\t* coff-z80.c (z80_is_local_label_name): Return bfd_boolean.\n\t* elf32-z80.c (z80_is_local_label_name): Likewise.\n\t* elf32-spu.c (spu_elf_modify_headers): Likewise.\n\t* elf32-nds32.h (struct elf_nds32_link_hash_table <hyper_relax>):\n\tChange type to int.\n\t* vms-lib.c (_bfd_vms_lib_write_archive_contents): Correct test\n\tfor error return from vms_write_data_block.",
    "tree": {
      "sha": "c8a3f5bfa5203c3fe01dba909ad82b76b4af8be6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8a3f5bfa5203c3fe01dba909ad82b76b4af8be6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f4f9ede04272c1417b187afe6964e5c0687f1904",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4f9ede04272c1417b187afe6964e5c0687f1904",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f4f9ede04272c1417b187afe6964e5c0687f1904",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4f9ede04272c1417b187afe6964e5c0687f1904/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1201fda61b3bcf0028a57e622aebb16ec614f7dc"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 18,
    "deletions": 8
  },
  "files": [
    {
      "sha": "fbfc4dbed1de9984e6302542e9ce8fa532277e75",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=f4f9ede04272c1417b187afe6964e5c0687f1904",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff-z80.c (z80_is_local_label_name): Return bfd_boolean.\n+\t* elf32-z80.c (z80_is_local_label_name): Likewise.\n+\t* elf32-spu.c (spu_elf_modify_headers): Likewise.\n+\t* elf32-nds32.h (struct elf_nds32_link_hash_table <hyper_relax>):\n+\tChange type to int.\n+\t* vms-lib.c (_bfd_vms_lib_write_archive_contents): Correct test\n+\tfor error return from vms_write_data_block.\n+\n 2021-03-29  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-i386.c (elf_i386_finish_local_dynamic_symbol): Return int."
    },
    {
      "sha": "a47a53857736057f3e3ce88f583d52d2a121f8aa",
      "filename": "bfd/coff-z80.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/coff-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/coff-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-z80.c?ref=f4f9ede04272c1417b187afe6964e5c0687f1904",
      "patch": "@@ -452,7 +452,7 @@ extra_case (bfd *in_abfd,\n     }\n }\n \n-static int\n+static bfd_boolean\n z80_is_local_label_name (bfd *        abfd ATTRIBUTE_UNUSED,\n                          const char * name)\n {"
    },
    {
      "sha": "0f496361555f6fa2d7a7f97607822d1251af3d1f",
      "filename": "bfd/elf32-nds32.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/elf32-nds32.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/elf32-nds32.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-nds32.h?ref=f4f9ede04272c1417b187afe6964e5c0687f1904",
      "patch": "@@ -126,7 +126,7 @@ struct elf_nds32_link_hash_table\n   int relax_fp_as_gp;\t\t/* --mrelax-omit-fp.  */\n   int eliminate_gc_relocs;\t/* --meliminate-gc-relocs.  */\n   FILE *sym_ld_script;\t\t/* --mgen-symbol-ld-script=<file>.  */\n-  bfd_boolean hyper_relax;\t/* Relax for symbol not in RW sections.  */\n+  int hyper_relax;\t\t/* Relax for symbol not in RW sections.  */\n   int tls_desc_trampoline;\t/* --m[no-]tlsdesc-trampoline.  */\n   /* Disable if linking a dynamically linked executable.  */\n   int load_store_relax;"
    },
    {
      "sha": "1058df132893f9e5535a9fb144e9ed507b54ff92",
      "filename": "bfd/elf32-spu.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/elf32-spu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/elf32-spu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-spu.c?ref=f4f9ede04272c1417b187afe6964e5c0687f1904",
      "patch": "@@ -5346,7 +5346,7 @@ spu_elf_fake_sections (bfd *obfd ATTRIBUTE_UNUSED,\n \n /* Tweak phdrs before writing them out.  */\n \n-static int\n+static bfd_boolean\n spu_elf_modify_headers (bfd *abfd, struct bfd_link_info *info)\n {\n   if (info != NULL)"
    },
    {
      "sha": "80f4ab521437bff64b84019ea8e3578cb75e5067",
      "filename": "bfd/elf32-z80.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/elf32-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/elf32-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-z80.c?ref=f4f9ede04272c1417b187afe6964e5c0687f1904",
      "patch": "@@ -550,7 +550,7 @@ z80_elf_object_p (bfd *abfd)\n   return bfd_default_set_arch_mach (abfd, bfd_arch_z80, mach);\n }\n \n-static int\n+static bfd_boolean\n z80_is_local_label_name (bfd *\tabfd ATTRIBUTE_UNUSED,\n \t\t\t const char * name)\n {"
    },
    {
      "sha": "72038b4c89e46bb42c0301833a7fb823b7b31ef1",
      "filename": "bfd/vms-lib.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/vms-lib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4f9ede04272c1417b187afe6964e5c0687f1904/bfd/vms-lib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-lib.c?ref=f4f9ede04272c1417b187afe6964e5c0687f1904",
      "patch": "@@ -2280,7 +2280,7 @@ _bfd_vms_lib_write_archive_contents (bfd *arch)\n       else\n \t{\n \t  /* Write the MHD.  */\n-\t  if (vms_write_data_block (arch, &data, &off, blk, sz, 0) < 0)\n+\t  if (!vms_write_data_block (arch, &data, &off, blk, sz, 0))\n \t    goto input_err;\n \n \t  /* Write the member.  */\n@@ -2289,13 +2289,13 @@ _bfd_vms_lib_write_archive_contents (bfd *arch)\n \t      sz = bfd_bread (blk, sizeof (blk), current);\n \t      if (sz == 0)\n \t\tbreak;\n-\t      if (vms_write_data_block (arch, &data, &off, blk, sz, 0) < 0)\n+\t      if (!vms_write_data_block (arch, &data, &off, blk, sz, 0))\n \t\tgoto input_err;\n \t    }\n \n \t  /* Write the end of module marker.  */\n-\t  if (vms_write_data_block (arch, &data, &off,\n-\t\t\t\t    eotdesc, sizeof (eotdesc), 1) < 0)\n+\t  if (!vms_write_data_block (arch, &data, &off,\n+\t\t\t\t     eotdesc, sizeof (eotdesc), 1))\n \t    goto input_err;\n \t}\n     }"
    }
  ]
}