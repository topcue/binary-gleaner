{
  "sha": "9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWY2YzIwMmU1NzNiNzk2YTllNzMyOGNjNWZkYWI3YzBjNjM3NzZiZg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-25T15:32:31Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-25T15:32:31Z"
    },
    "message": "[gdb/symtab] Handle DW_AT_ranges with DW_FORM_sec_off in partial DIE\n\nWhile looking into a failure in gdb.go/package.exp with gcc-11, I noticed that\ngdb shows some complaints when loading the executable (also with gcc-10, where\nthe test-case passes):\n...\n$ gdb -batch -iex \"set complaints 100\" package.10 -ex start\nDuring symbol reading: Attribute value is not a constant (DW_FORM_sec_offset)\nTemporary breakpoint 1 at 0x402ae6: file gdb.go/package1.go, line 8.\nDuring symbol reading: Attribute value is not a constant (DW_FORM_sec_offset)\nDuring symbol reading: Invalid .debug_rnglists data (no base address)\n...\n\nFix this by using as_unsigned () to read DW_AT_ranges in the partial DIE\nreader, similar to how that is done in dwarf2_get_pc_bounds.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2021-01-25  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\t    Simon Marchi  <simon.marchi@polymtl.ca>\n\t    Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf2/read.c (partial_die_info::read): Use as_unsigned () for\n\tDW_AT_ranges.\n\ngdb/testsuite/ChangeLog:\n\n2021-01-25  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.dwarf2/dw2-ranges-psym.exp (gdb_load_no_complaints): New proc.\n\t* lib/gdb.exp: Use gdb_load_no_complaints.",
    "tree": {
      "sha": "310272100983769de46bdd3f11b907e62700b69e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/310272100983769de46bdd3f11b907e62700b69e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 53,
    "deletions": 2
  },
  "files": [
    {
      "sha": "db62ea2832100be0bfd212de51a8920bd98f8af4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-25  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\t    Simon Marchi  <simon.marchi@polymtl.ca>\n+\t    Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf2/read.c (partial_die_info::read): Use as_unsigned () for\n+\tDW_AT_ranges.\n+\n 2021-01-25  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/read.c (get_mpz): New function."
    },
    {
      "sha": "0a00f89cf6dec93d968b1f3569c4977af05321f9",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
      "patch": "@@ -19833,7 +19833,7 @@ partial_die_info::read (const struct die_reader_specs *reader,\n \t    /* It would be nice to reuse dwarf2_get_pc_bounds here,\n \t       but that requires a full DIE, so instead we just\n \t       reimplement it.  */\n-\t    unsigned int ranges_offset = (attr.constant_value (0)\n+\t    unsigned int ranges_offset = (attr.as_unsigned ()\n \t\t\t\t\t  + (need_ranges_base\n \t\t\t\t\t     ? cu->ranges_base\n \t\t\t\t\t     : 0));"
    },
    {
      "sha": "aa18b5449a850a3fce4307c4efdd7070a2098cab",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-25  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.dwarf2/dw2-ranges-psym.exp (gdb_load_no_complaints): New proc.\n+\t* lib/gdb.exp: Use gdb_load_no_complaints.\n+\n 2021-01-25  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/fixed_points.exp: Add regression test."
    },
    {
      "sha": "3ad2d1c567c9a27ef0bec945e5ffe62be5c9681d",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-psym.exp?ref=9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
      "patch": "@@ -120,11 +120,14 @@ Dwarf::assemble $asm_file {\n     }\n }\n \n-if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+if { [build_executable \"failed to prepare\" ${testfile} \\\n \t  [list $srcfile $srcfile2 $asm_file] {nodebug}] } {\n     return -1\n }\n \n+clean_restart\n+gdb_load_no_complaints $binfile\n+\n if ![runto_main] {\n     return -1\n }"
    },
    {
      "sha": "2a952c6146f1379d129b8d4b76a82cbdc3c605a8",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f6c202e573b796a9e7328cc5fdab7c0c63776bf/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=9f6c202e573b796a9e7328cc5fdab7c0c63776bf",
      "patch": "@@ -5095,6 +5095,42 @@ proc gdb_load { arg } {\n     return 0\n }\n \n+#\n+# gdb_load_no_complaints -- As gdb_load, but in addition verifies that\n+# loading caused no symbol reading complaints.\n+#\n+proc gdb_load_no_complaints { arg } {\n+    global gdb_prompt gdb_file_cmd_msg decimal\n+\n+    # Save current setting of complaints.\n+    set save \"\"\n+    set show_complaints_re \\\n+\t\"Max number of complaints about incorrect symbols is ($decimal)\\\\.\"\n+    gdb_test_multiple \"show complaints\" \"\" {\n+\t-re -wrap $show_complaints_re {\n+\t    set save $expect_out(1,string)\n+\t}\n+    }\n+\n+    # Fall back to regular gdb_load if we couldn't get the current setting\n+    # of complaints.\n+    if { $save == \"\" } {\n+\treturn gdb_load $arg\n+    }\n+\n+    # Temporarily set complaint to a small non-zero number.\n+    gdb_test_no_output \"set complaints 5\" \"\"\n+\n+    gdb_load $arg\n+\n+    # Verify that there were no complaints.\n+    set re \"^Reading symbols from \\[^\\r\\n\\]*\\r\\n$gdb_prompt $\"\n+    gdb_assert {[regexp $re $gdb_file_cmd_msg]} \"No complaints\"\n+\n+    # Restore saved setting of complaints.\n+    gdb_test_no_output \"set complaints $save\" \"\"\n+}\n+\n # gdb_reload -- load a file into the target.  Called before \"running\",\n # either the first time or after already starting the program once,\n # for remote targets.  Most files that override gdb_load should now"
    }
  ]
}