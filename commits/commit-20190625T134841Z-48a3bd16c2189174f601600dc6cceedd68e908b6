{
  "sha": "48a3bd16c2189174f601600dc6cceedd68e908b6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDhhM2JkMTZjMjE4OTE3NGY2MDE2MDBkYzZjY2VlZGQ2OGU5MDhiNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-17T19:19:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:41Z"
    },
    "message": "Move make_visible method to tui_gen_win_info\n\nThis moves the make_visible method from tui_win_info to its base\nclass, tui_gen_win_info.  This allows the removal of another window\ntype check.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.c (tui_gen_win_info::make_visible): Rename\n\tfrom make_visible.\n\t(tui_make_visible, tui_make_invisible): Rewrite.\n\t(tui_win_info::make_visible): Remove.\n\t(tui_source_window_base::make_visible): Update.\n\t* tui/tui-data.h (struct tui_gen_win_info) <make_visible>: New\n\tmethod.  Moved from...\n\t(struct tui_win_info) <make_visible>: ...here.",
    "tree": {
      "sha": "b75e64905292ef3215df8ca8d59b11b0efedb453",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b75e64905292ef3215df8ca8d59b11b0efedb453"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/48a3bd16c2189174f601600dc6cceedd68e908b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48a3bd16c2189174f601600dc6cceedd68e908b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/48a3bd16c2189174f601600dc6cceedd68e908b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48a3bd16c2189174f601600dc6cceedd68e908b6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c3bd716ffc20cada32e8a18a209638b578d47f5e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3bd716ffc20cada32e8a18a209638b578d47f5e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c3bd716ffc20cada32e8a18a209638b578d47f5e"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 28,
    "deletions": 30
  },
  "files": [
    {
      "sha": "3780b965e93834a9d8dd16df704bc8fd0243d061",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48a3bd16c2189174f601600dc6cceedd68e908b6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48a3bd16c2189174f601600dc6cceedd68e908b6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=48a3bd16c2189174f601600dc6cceedd68e908b6",
      "patch": "@@ -1,3 +1,14 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.c (tui_gen_win_info::make_visible): Rename\n+\tfrom make_visible.\n+\t(tui_make_visible, tui_make_invisible): Rewrite.\n+\t(tui_win_info::make_visible): Remove.\n+\t(tui_source_window_base::make_visible): Update.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <make_visible>: New\n+\tmethod.  Moved from...\n+\t(struct tui_win_info) <make_visible>: ...here.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.c"
    },
    {
      "sha": "74efddee0f04b8916528d9512ec0fad1b786efc9",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48a3bd16c2189174f601600dc6cceedd68e908b6/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48a3bd16c2189174f601600dc6cceedd68e908b6/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=48a3bd16c2189174f601600dc6cceedd68e908b6",
      "patch": "@@ -51,6 +51,9 @@ struct tui_gen_win_info\n   /* Call to refresh this window.  */\n   virtual void refresh_window ();\n \n+  /* Make this window visible or invisible.  */\n+  virtual void make_visible (bool visible);\n+\n   /* Return the name of this type of window.  */\n   virtual const char *name () const\n   {\n@@ -273,9 +276,6 @@ struct tui_win_info : public tui_gen_win_info\n     return false;\n   }\n \n-  /* Make this window visible or invisible.  */\n-  virtual void make_visible (bool visible);\n-\n   /* Refresh this window and any associated windows.  */\n   virtual void refresh ();\n "
    },
    {
      "sha": "acb8a26765bc533ab1f20ba88f6e5f5bf545b13a",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 14,
      "deletions": 27,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48a3bd16c2189174f601600dc6cceedd68e908b6/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48a3bd16c2189174f601600dc6cceedd68e908b6/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=48a3bd16c2189174f601600dc6cceedd68e908b6",
      "patch": "@@ -168,59 +168,46 @@ tui_make_window (struct tui_gen_win_info *win_info, int box_it)\n /* We can't really make windows visible, or invisible.  So we have to\n    delete the entire window when making it visible, and create it\n    again when making it visible.  */\n-static void\n-make_visible (struct tui_gen_win_info *win_info, bool visible)\n+void\n+tui_gen_win_info::make_visible (bool visible)\n {\n-  /* Don't tear down/recreate command window.  */\n-  if (win_info->type == CMD_WIN)\n-    return;\n-\n   if (visible)\n     {\n-      if (!win_info->is_visible)\n+      if (!is_visible)\n \t{\n-\t  tui_make_window (win_info, !tui_win_is_auxillary (win_info->type));\n-\t  win_info->is_visible = true;\n+\t  tui_make_window (this, !tui_win_is_auxillary (type));\n+\t  is_visible = true;\n \t}\n     }\n   else if (!visible\n-\t   && win_info->is_visible\n-\t   && win_info->handle != NULL)\n+\t   && is_visible\n+\t   && handle != NULL)\n     {\n-      win_info->is_visible = false;\n-      tui_delete_win (win_info->handle);\n-      win_info->handle = NULL;\n+      is_visible = false;\n+      tui_delete_win (handle);\n+      handle = NULL;\n     }\n-\n-  return;\n }\n \n void\n tui_make_visible (struct tui_gen_win_info *win_info)\n {\n-  make_visible (win_info, true);\n+  win_info->make_visible (true);\n }\n \n void\n tui_make_invisible (struct tui_gen_win_info *win_info)\n {\n-  make_visible (win_info, false);\n-}\n-\n-/* See tui-data.h.  */\n-\n-void\n-tui_win_info::make_visible (bool visible)\n-{\n-  ::make_visible (this, visible);\n+  win_info->make_visible (false);\n }\n \n /* See tui-data.h.  */\n \n void\n tui_source_window_base::make_visible (bool visible)\n {\n-  ::make_visible (execution_info, visible);\n+  if (execution_info != nullptr)\n+    execution_info->make_visible (visible);\n   tui_win_info::make_visible (visible);\n }\n "
    }
  ]
}