{
  "sha": "03da31c6764c1bca9b0b0529344a8ea933c825ea",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDNkYTMxYzY3NjRjMWJjYTliMGIwNTI5MzQ0YThlYTkzM2M4MjVlYQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-08-22T13:37:03Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-08-22T13:37:03Z"
    },
    "message": "Fix an illegal memory access when dumping corrupt x86_64 PE unwind data.\n\n\tPR 24922\n\t* pei-x86_64.c (pex64_xdata_print_uwd_codes): Add checks before\n\treading data from extra records.",
    "tree": {
      "sha": "aa83f97d5a4ef3dc0bb96007f3a2eb1c90945950",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aa83f97d5a4ef3dc0bb96007f3a2eb1c90945950"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/03da31c6764c1bca9b0b0529344a8ea933c825ea",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/03da31c6764c1bca9b0b0529344a8ea933c825ea",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/03da31c6764c1bca9b0b0529344a8ea933c825ea",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/03da31c6764c1bca9b0b0529344a8ea933c825ea/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93d6a337d528bcb7519f0cdb931b3ca0e1c943a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93d6a337d528bcb7519f0cdb931b3ca0e1c943a9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93d6a337d528bcb7519f0cdb931b3ca0e1c943a9"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 68,
    "deletions": 9
  },
  "files": [
    {
      "sha": "1c08d389088bcf80c2533a48b5ba506af8d5e6df",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/03da31c6764c1bca9b0b0529344a8ea933c825ea/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/03da31c6764c1bca9b0b0529344a8ea933c825ea/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=03da31c6764c1bca9b0b0529344a8ea933c825ea",
      "patch": "@@ -1,3 +1,9 @@\n+2019-08-22  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24922\n+\t* pei-x86_64.c (pex64_xdata_print_uwd_codes): Add checks before\n+\treading data from extra records.\n+\n 2019-08-22  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR ld/24601"
    },
    {
      "sha": "2588e6c6e904bd9fc9b4d3c3b23d47b62a4f286e",
      "filename": "bfd/pei-x86_64.c",
      "status": "modified",
      "additions": 62,
      "deletions": 9,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/03da31c6764c1bca9b0b0529344a8ea933c825ea/bfd/pei-x86_64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/03da31c6764c1bca9b0b0529344a8ea933c825ea/bfd/pei-x86_64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pei-x86_64.c?ref=03da31c6764c1bca9b0b0529344a8ea933c825ea",
      "patch": "@@ -228,27 +228,41 @@ pex64_xdata_print_uwd_codes (FILE *file, bfd *abfd,\n       int unexpected = FALSE;\n \n       fprintf (file, \"\\t  pc+0x%02x: \", (unsigned int) dta[0]);\n+\n       switch (PEX64_UNWCODE_CODE (dta[1]))\n \t{\n \tcase UWOP_PUSH_NONVOL:\n \t  fprintf (file, \"push %s\", pex_regs[info]);\n \t  break;\n+\n \tcase UWOP_ALLOC_LARGE:\n \t  if (info == 0)\n \t    {\n-\t      tmp = bfd_get_16 (abfd, &dta[2]) * 8;\n+\t      if (dta + 4 > ui->rawUnwindCodesEnd)\n+\t\t{\n+\t\t  fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t\t  return;\n+\t\t}\n+\t      tmp = bfd_get_16 (abfd, dta + 2) * 8;\n \t      i++;\n \t    }\n \t  else\n \t    {\n-\t      tmp = bfd_get_32 (abfd, &dta[2]);\n+\t      if (dta + 6 > ui->rawUnwindCodesEnd)\n+\t\t{\n+\t\t  fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t\t  return;\n+\t\t}\n+\t      tmp = bfd_get_32 (abfd, dta + 2);\n \t      i += 2;\n \t    }\n \t  fprintf (file, \"alloc large area: rsp = rsp - 0x%x\", tmp);\n \t  break;\n+\n \tcase UWOP_ALLOC_SMALL:\n \t  fprintf (file, \"alloc small area: rsp = rsp - 0x%x\", (info + 1) * 8);\n \t  break;\n+\n \tcase UWOP_SET_FPREG:\n \t  /* According to the documentation, info field is unused.  */\n \t  fprintf (file, \"FPReg: %s = rsp + 0x%x (info = 0x%x)\",\n@@ -257,22 +271,40 @@ pex64_xdata_print_uwd_codes (FILE *file, bfd *abfd,\n \t  unexpected = ui->FrameRegister == 0;\n \t  save_allowed = FALSE;\n \t  break;\n+\n \tcase UWOP_SAVE_NONVOL:\n-\t  tmp = bfd_get_16 (abfd, &dta[2]) * 8;\n+\t  if (dta + 4 > ui->rawUnwindCodesEnd)\n+\t    {\n+\t      fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t      return;\n+\t    }\n+\t  tmp = bfd_get_16 (abfd, dta + 2) * 8;\n \t  i++;\n \t  fprintf (file, \"save %s at rsp + 0x%x\", pex_regs[info], tmp);\n \t  unexpected = !save_allowed;\n \t  break;\n+\n \tcase UWOP_SAVE_NONVOL_FAR:\n-\t  tmp = bfd_get_32 (abfd, &dta[2]);\n+\t  if (dta + 6 > ui->rawUnwindCodesEnd)\n+\t    {\n+\t      fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t      return;\n+\t    }\n+\t  tmp = bfd_get_32 (abfd, dta + 2);\n \t  i += 2;\n \t  fprintf (file, \"save %s at rsp + 0x%x\", pex_regs[info], tmp);\n \t  unexpected = !save_allowed;\n \t  break;\n+\n \tcase UWOP_SAVE_XMM:\n \t  if (ui->Version == 1)\n \t    {\n-\t      tmp = bfd_get_16 (abfd, &dta[2]) * 8;\n+\t      if (dta + 4 > ui->rawUnwindCodesEnd)\n+\t\t{\n+\t\t  fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t\t  return;\n+\t\t}\n+\t      tmp = bfd_get_16 (abfd, dta + 2) * 8;\n \t      i++;\n \t      fprintf (file, \"save mm%u at rsp + 0x%x\", info, tmp);\n \t      unexpected = !save_allowed;\n@@ -283,24 +315,43 @@ pex64_xdata_print_uwd_codes (FILE *file, bfd *abfd,\n \t      unexpected = TRUE;\n \t    }\n \t  break;\n+\n \tcase UWOP_SAVE_XMM_FAR:\n-\t  tmp = bfd_get_32 (abfd, &dta[2]) * 8;\n+\t  if (dta + 6 > ui->rawUnwindCodesEnd)\n+\t    {\n+\t      fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t      return;\n+\t    }\n+\t  tmp = bfd_get_32 (abfd, dta + 2) * 8;\n \t  i += 2;\n \t  fprintf (file, \"save mm%u at rsp + 0x%x\", info, tmp);\n \t  unexpected = !save_allowed;\n \t  break;\n+\n \tcase UWOP_SAVE_XMM128:\n-\t  tmp = bfd_get_16 (abfd, &dta[2]) * 16;\n+\t  if (dta + 4 > ui->rawUnwindCodesEnd)\n+\t    {\n+\t      fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t      return;\n+\t    }\n+\t  tmp = bfd_get_16 (abfd, dta + 2) * 16;\n \t  i++;\n \t  fprintf (file, \"save xmm%u at rsp + 0x%x\", info, tmp);\n \t  unexpected = !save_allowed;\n \t  break;\n+\n \tcase UWOP_SAVE_XMM128_FAR:\n-\t  tmp = bfd_get_32 (abfd, &dta[2]) * 16;\n+\t  if (dta + 6 > ui->rawUnwindCodesEnd)\n+\t    {\n+\t      fprintf (file, _(\"warning: corrupt unwind data\\n\"));\n+\t      return;\n+\t    }\n+\t  tmp = bfd_get_32 (abfd, dta + 2) * 16;\n \t  i += 2;\n \t  fprintf (file, \"save xmm%u at rsp + 0x%x\", info, tmp);\n \t  unexpected = !save_allowed;\n \t  break;\n+\n \tcase UWOP_PUSH_MACHFRAME:\n \t  fprintf (file, \"interrupt entry (SS, old RSP, EFLAGS, CS, RIP\");\n \t  if (info == 0)\n@@ -310,11 +361,13 @@ pex64_xdata_print_uwd_codes (FILE *file, bfd *abfd,\n \t  else\n \t    fprintf (file, \", unknown(%u))\", info);\n \t  break;\n+\n \tdefault:\n \t  /* PR 17512: file: 2245-7442-0.004.  */\n \t  fprintf (file, _(\"Unknown: %x\"), PEX64_UNWCODE_CODE (dta[1]));\n \t  break;\n-      }\n+\t}\n+\n       if (unexpected)\n \tfprintf (file, \" [Unexpected!]\");\n       fputc ('\\n', file);"
    }
  ]
}