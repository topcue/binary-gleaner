{
  "sha": "c173cc8a666792a6e864b5beb1c4d6903169b5cd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzE3M2NjOGE2NjY3OTJhNmU4NjRiNWJlYjFjNGQ2OTAzMTY5YjVjZA==",
  "commit": {
    "author": {
      "name": "George Barrett",
      "email": "bob@bob131.so",
      "date": "2021-06-06T18:49:58Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-10T03:20:41Z"
    },
    "message": "guile: fix smob exports\n\nBefore Guile v2.1 [1], calls to `scm_make_smob_type' implicitly added\nthe created class to the exports list of (oop goops); v2.1+ does not\nimplicitly create bindings in any modules. This means that the GDB\nmanual subsection documenting exported types is not quite right when GDB\nis linked against Guile <v2.1 (types are exported from (oop goops))\ninstead of (gdb)) and incorrect when linked against Guile v2.1+ (types\nare not bound to any variables at all!).\n\nThere is a range of cases in which it's necessary or convenient to be\nable to refer to a GDB smob type, for instance:\n\n - Pattern matching based on the type of a value.\n - Defining GOOPS methods handling values from GDB (GOOPS methods\n   typically use dynamic dispatch based on the types of the arguments).\n - Type-checking assertions when applying some defensive programming on\n   an interface.\n - Generally any other situation one might encounter in a dynamically\n   typed language that might need some introspection.\n\nIf you're more familiar with Python, it would be quite similar to being\nunable to refer to the classes exported from the GDB module (which is to\nsay: not crippling for the most part, but makes certain tasks more\ndifficult than necessary).\n\nThis commit makes a small change to GDB's smob registration machinery\nto make sure registered smobs get exported from the current\nmodule. This will likely cause warnings to the user about conflicting\nexports if they load both (gdb) and (oop goops) from a GDB linked\nagainst Guile v2.0, but it shouldn't impact functionality (and seemed\npreferable to trying to un-export bindings from (oop goops) if v2.0\nwas detected).\n\n[1]: This changed with Guile commit\n     28d0871b553a3959a6c59e2e4caec1c1509f8595\n\ngdb/ChangeLog:\n\n2021-06-07  George Barrett  <bob@bob131.so>\n\n\t* guile/scm-gsmob.c (gdbscm_make_smob_type): Export registered\n\tsmob type from the current module.\n\ngdb/testsuite/ChangeLog:\n\n2021-06-07  George Barrett  <bob@bob131.so>\n\n\t* gdb.guile/scm-gsmob.exp (test exports): Add tests to make\n\tsure the smob types currently listed in the GDB manual get\n\texported from the (gdb) module.\n\nChange-Id: I7dcd791276b48dfc9edb64fc71170bbb42a6f6e7",
    "tree": {
      "sha": "c928c8551cbf87757017b0f872b606e9906d429e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c928c8551cbf87757017b0f872b606e9906d429e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c173cc8a666792a6e864b5beb1c4d6903169b5cd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c173cc8a666792a6e864b5beb1c4d6903169b5cd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c173cc8a666792a6e864b5beb1c4d6903169b5cd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c173cc8a666792a6e864b5beb1c4d6903169b5cd/comments",
  "author": {
    "login": "Bob131",
    "id": 4337852,
    "node_id": "MDQ6VXNlcjQzMzc4NTI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4337852?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Bob131",
    "html_url": "https://github.com/Bob131",
    "followers_url": "https://api.github.com/users/Bob131/followers",
    "following_url": "https://api.github.com/users/Bob131/following{/other_user}",
    "gists_url": "https://api.github.com/users/Bob131/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Bob131/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Bob131/subscriptions",
    "organizations_url": "https://api.github.com/users/Bob131/orgs",
    "repos_url": "https://api.github.com/users/Bob131/repos",
    "events_url": "https://api.github.com/users/Bob131/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Bob131/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d2a2c939f187a595fc7ccdac0ffbbab1d39e9d5b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2a2c939f187a595fc7ccdac0ffbbab1d39e9d5b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d2a2c939f187a595fc7ccdac0ffbbab1d39e9d5b"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 56,
    "deletions": 1
  },
  "files": [
    {
      "sha": "72a96a781c136789058c766d826c403fd3a01cd0",
      "filename": "gdb/guile/scm-gsmob.c",
      "status": "modified",
      "additions": 28,
      "deletions": 1,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c173cc8a666792a6e864b5beb1c4d6903169b5cd/gdb/guile/scm-gsmob.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c173cc8a666792a6e864b5beb1c4d6903169b5cd/gdb/guile/scm-gsmob.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-gsmob.c?ref=c173cc8a666792a6e864b5beb1c4d6903169b5cd",
      "patch": "@@ -96,14 +96,41 @@ gdbscm_is_gsmob (SCM scm)\n   return slot != NULL;\n }\n \n-/* Call this to register a smob, instead of scm_make_smob_type.  */\n+/* Call this to register a smob, instead of scm_make_smob_type.\n+   Exports the created smob type from the current module.  */\n \n scm_t_bits\n gdbscm_make_smob_type (const char *name, size_t size)\n {\n   scm_t_bits result = scm_make_smob_type (name, size);\n \n   register_gsmob (result);\n+\n+#if SCM_MAJOR_VERSION == 2 && SCM_MINOR_VERSION == 0\n+  /* Prior to Guile 2.1.0, smob classes were only exposed via exports\n+     from the (oop goops) module.  */\n+  SCM bound_name = scm_string_append (scm_list_3 (scm_from_latin1_string (\"<\"),\n+\t\t\t\t\t\t  scm_from_latin1_string (name),\n+\t\t\t\t\t\t  scm_from_latin1_string (\">\")));\n+  bound_name = scm_string_to_symbol (bound_name);\n+  SCM smob_type = scm_public_ref (scm_list_2 (scm_from_latin1_symbol (\"oop\"),\n+\t\t\t\t\t      scm_from_latin1_symbol (\"goops\")),\n+\t\t\t\t  bound_name);\n+#elif SCM_MAJOR_VERSION == 2 && SCM_MINOR_VERSION == 1 && SCM_MICRO_VERSION == 0\n+  /* Guile 2.1.0 doesn't provide any API for looking up smob classes.\n+     We could try allocating a fake instance and using scm_class_of,\n+     but it's probably not worth the trouble for the sake of a single\n+     development release.  */\n+#  error \"Unsupported Guile version\"\n+#else\n+  /* Guile 2.1.1 and above provides scm_smob_type_class.  */\n+  SCM smob_type = scm_smob_type_class (result);\n+#endif\n+\n+  SCM smob_type_name = scm_class_name (smob_type);\n+  scm_define (smob_type_name, smob_type);\n+  scm_module_export (scm_current_module (), scm_list_1 (smob_type_name));\n+\n   return result;\n }\n "
    },
    {
      "sha": "e309fd2888d791e4bac9e57871f9173d6c5f06b0",
      "filename": "gdb/testsuite/gdb.guile/scm-gsmob.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c173cc8a666792a6e864b5beb1c4d6903169b5cd/gdb/testsuite/gdb.guile/scm-gsmob.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c173cc8a666792a6e864b5beb1c4d6903169b5cd/gdb/testsuite/gdb.guile/scm-gsmob.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-gsmob.exp?ref=c173cc8a666792a6e864b5beb1c4d6903169b5cd",
      "patch": "@@ -66,3 +66,31 @@ set prop_list [lsort $prop_list]\n verbose -log \"prop_list: $prop_list\"\n gdb_test \"gu (print (sort (map car (object-properties arch)) (lambda (a b) (string<? (symbol->string a) (symbol->string b)))))\" \\\n     \"= \\\\($prop_list\\\\)\" \"object-properties\"\n+\n+# Check that smob classes are exported properly\n+with_test_prefix \"test exports\" {\n+    # Import (oop goops) for is-a? and <class>\n+    gdb_scm_test_silent_cmd \"gu (use-modules (oop goops))\" \"import goops\"\n+    gdb_test_no_output \"gu (define-syntax-rule (gdb-exports-class? x) (is-a? (@ (gdb) x) <class>))\"\n+\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:arch>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:block>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:block-symbols-iterator>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:breakpoint>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:command>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:exception>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:frame>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:iterator>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:lazy-string>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:objfile>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:parameter>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:pretty-printer>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:pretty-printer-worker>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:progspace>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:symbol>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:symtab>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:sal>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:type>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:field>))\" \"= #t\"\n+    gdb_test \"gu (print (gdb-exports-class? <gdb:value>))\" \"= #t\"\n+}"
    }
  ]
}