{
  "sha": "dd80d75040a291400c0fddb0f8b05c3f40da49ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGQ4MGQ3NTA0MGEyOTE0MDBjMGZkZGIwZjhiMDVjM2Y0MGRhNDlmZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-19T17:39:18Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-24T16:58:05Z"
    },
    "message": "gdb: use std::string instead of a fixed size buffer\n\nThe 'section' command uses a fixed size buffer into which a section\nname is copied.  This commit replaces this with a use of std::string\nso we can now display very long section names.\n\nThe expected results of one test need to be updated.\n\ngdb/ChangeLog:\n\n\t* exec.c (set_section_command): Move variable declarations into\n\tthe function body, and use std::string instead of a fixed size\n\tbuffer.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/sect-cmd.exp: Update expected results.",
    "tree": {
      "sha": "64425fc2d5a9a68a32b9da4ded3e3795c496b6fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64425fc2d5a9a68a32b9da4ded3e3795c496b6fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dd80d75040a291400c0fddb0f8b05c3f40da49ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd80d75040a291400c0fddb0f8b05c3f40da49ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dd80d75040a291400c0fddb0f8b05c3f40da49ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd80d75040a291400c0fddb0f8b05c3f40da49ff/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "336aa7b740c64070ae14d2364edddb7df7bce011",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/336aa7b740c64070ae14d2364edddb7df7bce011",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/336aa7b740c64070ae14d2364edddb7df7bce011"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 24,
    "deletions": 18
  },
  "files": [
    {
      "sha": "00a71fe90256dd5852511e19c32148c8f6a23162",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=dd80d75040a291400c0fddb0f8b05c3f40da49ff",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* exec.c (set_section_command): Move variable declarations into\n+\tthe function body, and use std::string instead of a fixed size\n+\tbuffer.\n+\n 2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* exec.c (exec_target::get_section_table): Delete member function."
    },
    {
      "sha": "544a05873f11ee287a701e2323a8aa5aac2e0c23",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=dd80d75040a291400c0fddb0f8b05c3f40da49ff",
      "patch": "@@ -989,39 +989,33 @@ static void\n set_section_command (const char *args, int from_tty)\n {\n   const char *secname;\n-  unsigned seclen;\n-  unsigned long secaddr;\n-  char secprint[100];\n-  long offset;\n \n   if (args == 0)\n     error (_(\"Must specify section name and its virtual address\"));\n \n   /* Parse out section name.  */\n   for (secname = args; !isspace (*args); args++);\n-  seclen = args - secname;\n+  unsigned seclen = args - secname;\n \n   /* Parse out new virtual address.  */\n-  secaddr = parse_and_eval_address (args);\n+  CORE_ADDR secaddr = parse_and_eval_address (args);\n \n   for (target_section &p : current_program_space->target_sections ())\n     {\n       if (!strncmp (secname, bfd_section_name (p.the_bfd_section), seclen)\n \t  && bfd_section_name (p.the_bfd_section)[seclen] == '\\0')\n \t{\n-\t  offset = secaddr - p.addr;\n+\t  long offset = secaddr - p.addr;\n \t  p.addr += offset;\n \t  p.endaddr += offset;\n \t  if (from_tty)\n \t    exec_ops.files_info ();\n \t  return;\n \t}\n     }\n-  if (seclen >= sizeof (secprint))\n-    seclen = sizeof (secprint) - 1;\n-  strncpy (secprint, secname, seclen);\n-  secprint[seclen] = '\\0';\n-  error (_(\"Section %s not found\"), secprint);\n+\n+  std::string secprint (secname, seclen);\n+  error (_(\"Section %s not found\"), secprint.c_str ());\n }\n \n /* If we can find a section in FILENAME with BFD index INDEX, adjust"
    },
    {
      "sha": "922ba8caeca83da4d5a7dc517259cb49effd1d30",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=dd80d75040a291400c0fddb0f8b05c3f40da49ff",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/sect-cmd.exp: Update expected results.\n+\n 2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/sect-cmd.exp: Rewrite using modern testsuite"
    },
    {
      "sha": "7aa24ca615ffecf32a4ea655f05ecbf5aaed2ba5",
      "filename": "gdb/testsuite/gdb.base/sect-cmd.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/testsuite/gdb.base/sect-cmd.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd80d75040a291400c0fddb0f8b05c3f40da49ff/gdb/testsuite/gdb.base/sect-cmd.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/sect-cmd.exp?ref=dd80d75040a291400c0fddb0f8b05c3f40da49ff",
      "patch": "@@ -79,14 +79,16 @@ gdb_test_multiple \"section FOOBARBAZ 0x1234\" \"\" {\n     }\n }\n \n-# We \"happen to know\" that GDB uses a fixed size character buffer to\n-# parse the section name into, and the buffer is declared to be 100\n-# characters in length.  Verify that GDB gracefully handles section\n-# names longer than that.  (The section is also non-existent.)\n+# Check that GDB can still print the error message when the section\n+# name is very long.  It used to be the case that GDB could only print\n+# (up to) 100 character section names in this error message, but that\n+# is no longer the case.\n #\n-gdb_test_multiple \"section A234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123 0x1234\" \\\n+set long_sect_name \\\n+    \"A234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123\"\n+gdb_test_multiple \"section $long_sect_name 0x1234\" \\\n     \"non-existent too-long section disallowed\" {\n-\t-re -wrap \"Section A23456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789 not found\" {\n+\t-re -wrap \"Section $long_sect_name not found\" {\n \t    pass $gdb_test_name\n \t}\n     }"
    }
  ]
}