{
  "sha": "968aa7ae389d9e6cecb5fda6826bf889ed959fce",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTY4YWE3YWUzODlkOWU2Y2VjYjVmZGE2ODI2YmY4ODllZDk1OWZjZQ==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-02-13T12:28:38Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-03-22T09:43:35Z"
    },
    "message": "Testsuite: Ensure pie is disabled on some tests\n\nRecent versions of Ubuntu and Debian default GCC to enable pie.\n\nIn dump.exp, pie will causes addresses to be out of range for IHEX.\n\nIn break-interp.exp, pie is explicitly set for some tests and assumed\nto be disabled for the remainder.\n\nEnsure pie is disabled for these tests when required.\n\nIn addition, add a pie option to gdb_compile to match the nopie option\nand simplify use.\n\ngdb/testsuite/ChangeLog:\n\n\t* README: Add pie options.\n\t* gdb.base/break-interp.exp: Ensure pie is disabled.\n\t* gdb.base/dump.exp: Likewise.\n\t* lib/gdb.exp (gdb_compile): Add pie option.",
    "tree": {
      "sha": "b739e35b0f8aa3ae51cd544cdf587736e73a67c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b739e35b0f8aa3ae51cd544cdf587736e73a67c8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/968aa7ae389d9e6cecb5fda6826bf889ed959fce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/968aa7ae389d9e6cecb5fda6826bf889ed959fce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/968aa7ae389d9e6cecb5fda6826bf889ed959fce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/968aa7ae389d9e6cecb5fda6826bf889ed959fce/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d8a95af9dffa36a1004e4cebfe6758c735402f6e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8a95af9dffa36a1004e4cebfe6758c735402f6e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d8a95af9dffa36a1004e4cebfe6758c735402f6e"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 53,
    "deletions": 4
  },
  "files": [
    {
      "sha": "76ffd632b4a08dec4060bd7db265543c0558b0ff",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=968aa7ae389d9e6cecb5fda6826bf889ed959fce",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* README: Add pie options.\n+\t* gdb.base/break-interp.exp: Ensure pie is disabled.\n+\t* gdb.base/dump.exp: Likewise.\n+\t* lib/gdb.exp (gdb_compile): Add pie option.\n+\n 2019-03-19  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.mi/mi2-cli-display.c: New file."
    },
    {
      "sha": "db90ea46982efa101b29e7cde754b474b7b6f42c",
      "filename": "gdb/testsuite/README",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/README",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/README",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/README?ref=968aa7ae389d9e6cecb5fda6826bf889ed959fce",
      "patch": "@@ -482,6 +482,16 @@ gdb,no_thread_names\n \n   The target doesn't support thread names.\n \n+gdb,pie_flag\n+\n+  The flag required to force the compiler to produce position-independent\n+  executables.\n+\n+gdb,pie_ldflag\n+\n+  The flag required to force the linker to produce position-independent\n+  executables.\n+\n gdb,nopie_flag\n \n   The flag required to force the compiler to produce non-position-independent"
    },
    {
      "sha": "51e31f65035403b02ba1650509c9743b931ba2fb",
      "filename": "gdb/testsuite/gdb.base/break-interp.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/gdb.base/break-interp.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/gdb.base/break-interp.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/break-interp.exp?ref=968aa7ae389d9e6cecb5fda6826bf889ed959fce",
      "patch": "@@ -625,8 +625,10 @@ foreach ldprelink {NO YES} {\n \t\t\t\tlappend opts {debug}\n \t\t\t    }\n \t\t\t    if {$binpie != \"NO\"} {\n-\t\t\t\tlappend opts {additional_flags=-fPIE}\n-\t\t\t\tlappend opts {ldflags=-pie}\n+\t\t\t\tlappend opts {pie}\n+\t\t\t    } else {\n+\t\t\t\t# Debian9/Ubuntu16.10 onwards default to PIE enabled. Ensure it is disabled.\n+\t\t\t\tlappend opts {nopie}\n \t\t\t    }\n \n \t\t\t    set dir ${exec}.d"
    },
    {
      "sha": "52ba5f8ebe3dd17c0bdd4752803b57dd64c96b49",
      "filename": "gdb/testsuite/gdb.base/dump.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/gdb.base/dump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/gdb.base/dump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/dump.exp?ref=968aa7ae389d9e6cecb5fda6826bf889ed959fce",
      "patch": "@@ -36,6 +36,10 @@ if {[istarget \"spu*-*-*\"]} then {\n     set is64bitonly \"yes\"\n }\n \n+# Debian9/Ubuntu16.10 onwards default to PIE enabled. Ensure it is disabled as\n+# this causes addresses to be out of range for IHEX.\n+lappend options {nopie}\n+\n if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable ${options}] != \"\" } {\n      untested \"failed to compile\"\n      return -1"
    },
    {
      "sha": "6800c741874b06dcb2f4cee6b5716cd845aed94c",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 2,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/968aa7ae389d9e6cecb5fda6826bf889ed959fce/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=968aa7ae389d9e6cecb5fda6826bf889ed959fce",
      "patch": "@@ -3461,6 +3461,7 @@ set gdb_saved_set_unbuffered_mode_obj \"\"\n #     dynamically load libraries at runtime.  For example, on Linux, this adds\n #     -ldl so that the test can use dlopen.\n #   - nowarnings:  Inhibit all compiler warnings.\n+#   - pie: Force creation of PIE executables.\n #   - nopie: Prevent creation of PIE executables.\n #\n # And here are some of the not too obscure options understood by DejaGnu that\n@@ -3599,8 +3600,33 @@ proc gdb_compile {source dest type options} {\n \tset options [lreplace $options $nowarnings $nowarnings $flag]\n     }\n \n-    # Replace the \"nopie\" option with the appropriate additional_flags\n-    # to disable PIE executables.\n+    # Replace the \"pie\" option with the appropriate compiler and linker flags\n+    # to enable PIE executables.\n+    set pie [lsearch -exact $options pie]\n+    if {$pie != -1} {\n+\tif [target_info exists gdb,pie_flag] {\n+\t    set flag \"additional_flags=[target_info gdb,pie_flag]\"\n+\t} else {\n+\t    # For safety, use fPIE rather than fpie. On AArch64, m68k, PowerPC\n+\t    # and SPARC, fpie can cause compile errors due to the GOT exceeding\n+\t    # a maximum size.  On other architectures the two flags are\n+\t    # identical (see the GCC manual). Note Debian9 and Ubuntu16.10\n+\t    # onwards default GCC to using fPIE.  If you do require fpie, then\n+\t    # it can be set using the pie_flag.\n+\t    set flag \"additional_flags=-fPIE\"\n+\t}\n+\tset options [lreplace $options $pie $pie $flag]\n+\n+\tif [target_info exists gdb,pie_ldflag] {\n+\t    set flag \"ldflags=[target_info gdb,pie_ldflag]\"\n+\t} else {\n+\t    set flag \"ldflags=-pie\"\n+\t}\n+\tlappend options \"$flag\"\n+    }\n+\n+    # Replace the \"nopie\" option with the appropriate linker flag to disable\n+    # PIE executables.  There are no compiler flags for this option.\n     set nopie [lsearch -exact $options nopie]\n     if {$nopie != -1} {\n \tif [target_info exists gdb,nopie_flag] {"
    }
  ]
}