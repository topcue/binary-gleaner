{
  "sha": "a8caed5d7faa639a1e6769eba551d15d8ddd9510",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YThjYWVkNWQ3ZmFhNjM5YTFlNjc2OWViYTU1MWQxNWQ4ZGRkOTUxMA==",
  "commit": {
    "author": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2020-07-01T19:31:44Z"
    },
    "committer": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2020-07-01T19:31:44Z"
    },
    "message": "Recognize -1 as a tombstone value in .debug_line\n\nLLD from 11 onwards (https://reviews.llvm.org/D81784) uses -1 to\nrepresent a relocation in .debug_line referencing a discarded symbol.\nRecognize -1 to fix gdb.base/break-on-linker-gcd-function.exp when the\nlinker is a newer LLD.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (lnp_state_machine::check_line_address): Test -1.",
    "tree": {
      "sha": "650bccaa0261f07d7b0d8778376817bb85996fe9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/650bccaa0261f07d7b0d8778376817bb85996fe9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8caed5d7faa639a1e6769eba551d15d8ddd9510",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8caed5d7faa639a1e6769eba551d15d8ddd9510",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8caed5d7faa639a1e6769eba551d15d8ddd9510",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8caed5d7faa639a1e6769eba551d15d8ddd9510/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "33d1369f183f1c276e3f0f52b5573fb2f5843b1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/33d1369f183f1c276e3f0f52b5573fb2f5843b1c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/33d1369f183f1c276e3f0f52b5573fb2f5843b1c"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 11,
    "deletions": 6
  },
  "files": [
    {
      "sha": "007798135e57ad2d3e206c2d38d7098f783b4d53",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8caed5d7faa639a1e6769eba551d15d8ddd9510/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8caed5d7faa639a1e6769eba551d15d8ddd9510/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a8caed5d7faa639a1e6769eba551d15d8ddd9510",
      "patch": "@@ -1,3 +1,7 @@\n+2020-07-01  Fangrui Song  <maskray@google.com>\n+\n+\t* dwarf2/read.c (lnp_state_machine::check_line_address): Test -1.\n+\n 2020-07-01  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>\n \n \t* dwarf2/read.c (set_die_type): Removed conditions to restrict"
    },
    {
      "sha": "405b5fb3348c94aad10e3bb40f393137ddb0759c",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8caed5d7faa639a1e6769eba551d15d8ddd9510/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8caed5d7faa639a1e6769eba551d15d8ddd9510/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=a8caed5d7faa639a1e6769eba551d15d8ddd9510",
      "patch": "@@ -19983,7 +19983,7 @@ class lnp_state_machine\n      we're processing the end of a sequence.  */\n   void record_line (bool end_sequence);\n \n-  /* Check ADDRESS is zero and less than UNRELOCATED_LOWPC and if true\n+  /* Check ADDRESS is -1, or zero and less than UNRELOCATED_LOWPC, and if true\n      nop-out rest of the lines in this sequence.  */\n   void check_line_address (struct dwarf2_cu *cu,\n \t\t\t   const gdb_byte *line_ptr,\n@@ -20377,12 +20377,13 @@ lnp_state_machine::check_line_address (struct dwarf2_cu *cu,\n \t\t\t\t       const gdb_byte *line_ptr,\n \t\t\t\t       CORE_ADDR unrelocated_lowpc, CORE_ADDR address)\n {\n-  /* If ADDRESS < UNRELOCATED_LOWPC then it's not a usable value, it's outside\n-     the pc range of the CU.  However, we restrict the test to only ADDRESS\n-     values of zero to preserve GDB's previous behaviour which is to handle\n-     the specific case of a function being GC'd by the linker.  */\n+  /* Linkers resolve a symbolic relocation referencing a GC'd function to 0 or\n+     -1.  If ADDRESS is 0, ignoring the opcode will err if the text section is\n+     located at 0x0.  In this case, additionally check that if\n+     ADDRESS < UNRELOCATED_LOWPC.  */\n \n-  if (address == 0 && address < unrelocated_lowpc)\n+  if ((address == 0 && address < unrelocated_lowpc)\n+      || address == (CORE_ADDR) -1)\n     {\n       /* This line table is for a function which has been\n \t GCd by the linker.  Ignore it.  PR gdb/12528 */"
    }
  ]
}