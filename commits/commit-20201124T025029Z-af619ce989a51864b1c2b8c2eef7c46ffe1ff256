{
  "sha": "af619ce989a51864b1c2b8c2eef7c46ffe1ff256",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWY2MTljZTk4OWE1MTg2NGIxYzJiOGMyZWVmN2M0NmZmZTFmZjI1Ng==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-24T02:50:29Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-24T02:50:29Z"
    },
    "message": "valarith.c: Replace INIT_VAL_WITH_FIXED_POINT_VAL macro by lambda\n\ngdb/ChangeLog (Simon Marchi  <simark@simark.ca>):\n\n        * valarith.c (fixed_point_binop): Replace the\n        INIT_VAL_WITH_FIXED_POINT_VAL macro by a lambda.  Update all\n        users accordingly.",
    "tree": {
      "sha": "14035c14f9ebe08254682dc5935bb1a9c0f5c26b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/14035c14f9ebe08254682dc5935bb1a9c0f5c26b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/af619ce989a51864b1c2b8c2eef7c46ffe1ff256",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af619ce989a51864b1c2b8c2eef7c46ffe1ff256",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/af619ce989a51864b1c2b8c2eef7c46ffe1ff256",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af619ce989a51864b1c2b8c2eef7c46ffe1ff256/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e6fcee3a73ddab55e3b35b7705b01035383e5417"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 25,
    "deletions": 15
  },
  "files": [
    {
      "sha": "014687416432d3bfa184afa715ac66fecb10748b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af619ce989a51864b1c2b8c2eef7c46ffe1ff256/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af619ce989a51864b1c2b8c2eef7c46ffe1ff256/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=af619ce989a51864b1c2b8c2eef7c46ffe1ff256",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-24  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* valarith.c (fixed_point_binop): Replace the\n+\tINIT_VAL_WITH_FIXED_POINT_VAL macro by a lambda.  Update all\n+\tusers accordingly.\n+\n 2020-11-24  Joel Brobecker  <brobecker@adacore.com>\n \n \t* gdbtypes.h (struct type) <fixed_point_scaling_factor>: New method,"
    },
    {
      "sha": "5b2bf1889ed9ef108113f7e0f0ec72cdf55af6de",
      "filename": "gdb/valarith.c",
      "status": "modified",
      "additions": 19,
      "deletions": 15,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af619ce989a51864b1c2b8c2eef7c46ffe1ff256/gdb/valarith.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af619ce989a51864b1c2b8c2eef7c46ffe1ff256/gdb/valarith.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valarith.c?ref=af619ce989a51864b1c2b8c2eef7c46ffe1ff256",
      "patch": "@@ -917,44 +917,48 @@ fixed_point_binop (struct value *arg1, struct value *arg2, enum exp_opcode op)\n \t\t       type_byte_order (type2), type2->is_unsigned (),\n \t\t       type2->fixed_point_scaling_factor ());\n \n-#define INIT_VAL_WITH_FIXED_POINT_VAL(RESULT) \\\n-  do { \\\n-      val = allocate_value (type1); \\\n-      (RESULT).write_fixed_point\t\t\t\\\n-        (gdb::make_array_view (value_contents_raw (val), \\\n-\t\t\t       TYPE_LENGTH (type1)), \\\n-\t type_byte_order (type1), type1->is_unsigned (), \\\n-\t type1->fixed_point_scaling_factor ()); \\\n-     } while (0)\n+  auto fixed_point_to_value = [type1] (const gdb_mpq &fp)\n+    {\n+      value *fp_val = allocate_value (type1);\n+\n+      fp.write_fixed_point\n+\t(gdb::make_array_view (value_contents_raw (fp_val),\n+\t\t\t       TYPE_LENGTH (type1)),\n+\t type_byte_order (type1),\n+\t type1->is_unsigned (),\n+\t type1->fixed_point_scaling_factor ());\n+\n+      return fp_val;\n+    };\n \n   switch (op)\n     {\n     case BINOP_ADD:\n       mpq_add (res.val, v1.val, v2.val);\n-      INIT_VAL_WITH_FIXED_POINT_VAL (res);\n+      val = fixed_point_to_value (res);\n       break;\n \n     case BINOP_SUB:\n       mpq_sub (res.val, v1.val, v2.val);\n-      INIT_VAL_WITH_FIXED_POINT_VAL (res);\n+      val = fixed_point_to_value (res);\n       break;\n \n     case BINOP_MIN:\n-      INIT_VAL_WITH_FIXED_POINT_VAL (mpq_cmp (v1.val, v2.val) < 0 ? v1 : v2);\n+      val = fixed_point_to_value (mpq_cmp (v1.val, v2.val) < 0 ? v1 : v2);\n       break;\n \n     case BINOP_MAX:\n-      INIT_VAL_WITH_FIXED_POINT_VAL (mpq_cmp (v1.val, v2.val) > 0 ? v1 : v2);\n+      val = fixed_point_to_value (mpq_cmp (v1.val, v2.val) > 0 ? v1 : v2);\n       break;\n \n     case BINOP_MUL:\n       mpq_mul (res.val, v1.val, v2.val);\n-      INIT_VAL_WITH_FIXED_POINT_VAL (res);\n+      val = fixed_point_to_value (res);\n       break;\n \n     case BINOP_DIV:\n       mpq_div (res.val, v1.val, v2.val);\n-      INIT_VAL_WITH_FIXED_POINT_VAL (res);\n+      val = fixed_point_to_value (res);\n       break;\n \n     case BINOP_EQUAL:"
    }
  ]
}