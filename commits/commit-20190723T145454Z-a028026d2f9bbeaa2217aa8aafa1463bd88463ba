{
  "sha": "a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTAyODAyNmQyZjliYmVhYTIyMTdhYThhYWZhMTQ2M2JkODg0NjNiYQ==",
  "commit": {
    "author": {
      "name": "Kyrylo Tkachov",
      "email": "kyrylo.tkachov@arm.com",
      "date": "2019-07-23T14:54:54Z"
    },
    "committer": {
      "name": "Kyrylo Tkachov",
      "email": "kyrylo.tkachov@arm.com",
      "date": "2019-07-23T14:54:54Z"
    },
    "message": "[AArch64] Add support for GMID_EL1 register for +memtag\n\nWe're missing support for the GMID_EL1 system register from the Memory Tagging Extension in binutils.\nThis is specified at:\nhttps://developer.arm.com/docs/ddi0595/latest/aarch64-system-registers/gmid_el1\n\nThis simple patch adds the support for this read-only register.\nTested make check on gas.",
    "tree": {
      "sha": "bcd55e238e79ebbe935dd5de85b2779ce708437c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bcd55e238e79ebbe935dd5de85b2779ce708437c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/comments",
  "author": {
    "login": "ktkachov-arm",
    "id": 74917949,
    "node_id": "MDQ6VXNlcjc0OTE3OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ktkachov-arm",
    "html_url": "https://github.com/ktkachov-arm",
    "followers_url": "https://api.github.com/users/ktkachov-arm/followers",
    "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs",
    "repos_url": "https://api.github.com/users/ktkachov-arm/repos",
    "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ktkachov-arm",
    "id": 74917949,
    "node_id": "MDQ6VXNlcjc0OTE3OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ktkachov-arm",
    "html_url": "https://github.com/ktkachov-arm",
    "followers_url": "https://api.github.com/users/ktkachov-arm/followers",
    "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs",
    "repos_url": "https://api.github.com/users/ktkachov-arm/repos",
    "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9a618ef61593ea5103aaf17bbe968bf552aa3de0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a618ef61593ea5103aaf17bbe968bf552aa3de0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9a618ef61593ea5103aaf17bbe968bf552aa3de0"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 17,
    "deletions": 1
  },
  "files": [
    {
      "sha": "3c363cc65b16a57bd01815e52a2fb76744af1bf7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* testsuite/gas/aarch64/sysreg-4.s: Test gmid_el1 read.\n+\t* testsuite/gas/aarch64/sysreg-4.d: Update expected output.\n+\t* testsuite/gas/aarch64/illegal-sysreg-4.l: Likewise.\n+\n 2019-07-23  Alan Modra  <amodra@gmail.com>\n \n \t* config/obj-elf.c (obj_elf_change_section): Don't emit a fatal"
    },
    {
      "sha": "590f20e107010a2e531ec6d43b9d2da8fa2ac340",
      "filename": "gas/testsuite/gas/aarch64/illegal-sysreg-4.l",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/testsuite/gas/aarch64/illegal-sysreg-4.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/testsuite/gas/aarch64/illegal-sysreg-4.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/illegal-sysreg-4.l?ref=a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
      "patch": "@@ -23,6 +23,7 @@\n [^:]*:[0-9]+: Error: selected processor does not support system register name 'tfsr_el12'\n [^:]*:[0-9]+: Error: selected processor does not support system register name 'rgsr_el1'\n [^:]*:[0-9]+: Error: selected processor does not support system register name 'gcr_el1'\n+[^:]*:[0-9]+: Error: selected processor does not support system register name 'gmid_el1'\n [^:]*:[0-9]+: Error: selected processor does not support PSTATE field name 'tco'\n [^:]*:[0-9]+: Error: selected processor does not support system register name 'tco'\n [^:]*:[0-9]+: Error: selected processor does not support PSTATE field name 'tco'"
    },
    {
      "sha": "bc3d0bdb7f5d497f1d0729b50f95446184cbb359",
      "filename": "gas/testsuite/gas/aarch64/sysreg-4.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/testsuite/gas/aarch64/sysreg-4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/testsuite/gas/aarch64/sysreg-4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sysreg-4.d?ref=a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
      "patch": "@@ -28,6 +28,7 @@ Disassembly of section \\.text:\n .*:\td53d660c \tmrs\tx12, tfsr_el12\n .*:\td53810a1 \tmrs\tx1, rgsr_el1\n .*:\td53810c3 \tmrs\tx3, gcr_el1\n+.*:\td5390084 \tmrs\tx4, gmid_el1\n .*:\td51b42e1 \tmsr\ttco, x1\n .*:\td51b42e2 \tmsr\ttco, x2\n .*:\td5186621 \tmsr\ttfsre0_el1, x1"
    },
    {
      "sha": "ace9803081f3651e664353308c60de7f89dc988e",
      "filename": "gas/testsuite/gas/aarch64/sysreg-4.s",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/testsuite/gas/aarch64/sysreg-4.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/gas/testsuite/gas/aarch64/sysreg-4.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sysreg-4.s?ref=a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
      "patch": "@@ -24,6 +24,7 @@ func:\n \tmrs x12, TFSR_EL12\n \tmrs x1, rgsr_el1\n \tmrs x3, gcr_el1\n+\tmrs x4, gmid_el1\n \n \t# MSR (register)\n \tmsr tco, x1"
    },
    {
      "sha": "3402ddb2aad43ae86caa1417f4ee0546a65e8ec4",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs): Add gmid_el1 entry.\n+\t(aarch64_sys_reg_supported_p): Handle gmid_el1 encoding.\n+\n 2019-07-22  Barnaby Wilks  <barnaby.wilks@arm.com>\n \n \t* arm-dis.c (is_mve_unpredictable): Stop marking some MVE"
    },
    {
      "sha": "a0085698181ae072a5a28e45afda44915ae6ae3f",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a028026d2f9bbeaa2217aa8aafa1463bd88463ba/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=a028026d2f9bbeaa2217aa8aafa1463bd88463ba",
      "patch": "@@ -3973,6 +3973,7 @@ const aarch64_sys_reg aarch64_sys_regs [] =\n   { \"tfsr_el12\",\tCPENC(3,5,C6,C6,0), F_ARCHEXT },\n   { \"rgsr_el1\",\t\tCPENC(3,0,C1,C0,5), F_ARCHEXT },\n   { \"gcr_el1\",\t\tCPENC(3,0,C1,C0,6), F_ARCHEXT },\n+  { \"gmid_el1\",\t\tCPENC(3,1,C0,C0,4), F_ARCHEXT | F_REG_READ }, /* RO */\n   { \"tpidr_el0\",        CPENC(3,3,C13,C0,2),\t0 },\n   { \"tpidrro_el0\",      CPENC(3,3,C13,C0,3),\t0 }, /* RW */\n   { \"tpidr_el1\",        CPENC(3,0,C13,C0,4),\t0 },\n@@ -4444,7 +4445,8 @@ aarch64_sys_reg_supported_p (const aarch64_feature_set features,\n        || reg->value == CPENC (3, 6, C6, C6, 0)\n        || reg->value == CPENC (3, 5, C6, C6, 0)\n        || reg->value == CPENC (3, 0, C1, C0, 5)\n-       || reg->value == CPENC (3, 0, C1, C0, 6))\n+       || reg->value == CPENC (3, 0, C1, C0, 6)\n+       || reg->value == CPENC (3, 1, C0, C0, 4))\n       && !(AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_MEMTAG)))\n     return FALSE;\n "
    }
  ]
}