{
  "sha": "9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWYxMzJhZjllMTg5YTZjMWU5MGIxYWI3ZWQ4NGM2NjEzYzhhYzU5Ng==",
  "commit": {
    "author": {
      "name": "Jens Bauer",
      "email": "jens@plustv.dk",
      "date": "2020-12-15T12:40:35Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-12-15T12:40:35Z"
    },
    "message": "Add support for the SDIV and UDIV instructions to the ARM simulator.\n\n\t* armemu.c (handle_v6_insn): Add support for SDIV and UDIV.\n\t* thumbemu.c (handle_T2_insn): Likewise.",
    "tree": {
      "sha": "052c3a3094e1ecbb08e2a7f1e0bb5d88825066ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/052c3a3094e1ecbb08e2a7f1e0bb5d88825066ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "77c8aaf716d9f93dc5850f8b2481da5eb7a53662",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77c8aaf716d9f93dc5850f8b2481da5eb7a53662",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/77c8aaf716d9f93dc5850f8b2481da5eb7a53662"
    }
  ],
  "stats": {
    "total": 151,
    "additions": 132,
    "deletions": 19
  },
  "files": [
    {
      "sha": "64171d65c0de572a1555fb9ce25b51b950b6b774",
      "filename": "sim/arm/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog?ref=9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
      "patch": "@@ -1,3 +1,12 @@\n+2020-12-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* wrapper.c (sim_create_inferior): Accept some more ARM machine numbers.\n+\n+2020-12-15  Jens Bauer <jens@plustv.dk>\n+\n+\t* armemu.c (handle_v6_insn): Add support for SDIV and UDIV.\n+\t* thumbemu.c (handle_T2_insn): Likewise.\n+\n 2020-10-20  Dr. David Alan Gilbert  <dgilbert@redhat.com>\n \n \t* armos.c (SWIread): Fix printf format."
    },
    {
      "sha": "922c2e498db9c3b52b048a00debd9708b85e92fe",
      "filename": "sim/arm/armemu.c",
      "status": "modified",
      "additions": 62,
      "deletions": 1,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/armemu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/armemu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/armemu.c?ref=9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
      "patch": "@@ -915,6 +915,68 @@ handle_v6_insn (ARMul_State * state, ARMword instr)\n       }\n       return 1;\n \n+    case 0x71:\n+    case 0x73:\n+      {\n+\tARMword valn, valm;\n+\t/* SDIV<c> <Rd>,<Rn>,<Rm>\n+\t   UDIV<c> <Rd>,<Rn>,<Rm>\n+\t   instr[31,28] = cond\n+\t   instr[27,20] = 0111 0001 (SDIV), 0111 0011 (UDIV)\n+\t   instr[21,21] = sign\n+\t   instr[19,16] = Rn\n+\t   instr[15,12] = 1111\n+\t   instr[11, 8] = Rd\n+\t   instr[ 7, 4] = 1111\n+\t   instr[ 3, 0] = Rm\t*/\n+\t/* These bit-positions are confusing!\n+           instr[15,12] = Rd\n+\t   instr[11, 8] = 1111\t*/\n+\n+#if 0\t/* This is what I would expect:  */\n+\tRn = BITS (16, 19);\n+\tRd = BITS (8, 11);\n+\tRm = BITS (0, 3);\n+#else\t/* This seem to work:  */\n+\tRd = BITS (16, 19);\n+\tRm = BITS (8, 11);\n+\tRn = BITS (0, 3);\n+#endif\n+\tif (Rn == 15 || Rd == 15 || Rm == 15\n+\t    || Rn == 13 || Rd == 13 || Rm == 13)\n+\t  {\n+\t    ARMul_UndefInstr (state, instr);\n+\t    state->Emulate = FALSE;\n+\t    break;\n+\t  }\n+\n+\tvaln = state->Reg[Rn];\n+\tvalm = state->Reg[Rm];\n+\n+\tif (valm == 0)\n+\t  {\n+#if 0\t\n+\t    /* Exceptions: UsageFault, address 20\n+\t       Note: UsageFault is for Cortex-M; I don't know what it would be on non-Cortex-M.  */\n+\t    ARMul_Abort (state, address);\n+#endif\n+\t    printf (\"Unhandled v6 insn: %cDIV divide by zero exception\\n\", \"SU\"[BIT(21)]);\n+\t  }\n+\telse\n+\t  {\n+\t    if(BIT(21))\n+\t      {\n+\t\tval = valn / valm;\n+\t      }\n+\t    else\n+\t      {\n+\t\tval = ((ARMsword)valn / (ARMsword)valm);\n+\t      }\n+\t    state->Reg[Rd] = val;\n+\t  }\n+\treturn 1;\n+      }\n+\n     case 0x7c:\n     case 0x7d:\n       {\n@@ -963,7 +1025,6 @@ handle_v6_insn (ARMul_State * state, ARMword instr)\n \t  }\n \treturn 1;\n       }\n-\n     case 0x7b:\n     case 0x7a: /* SBFX<c> <Rd>,<Rn>,#<lsb>,#<width>.  */\n       {"
    },
    {
      "sha": "fa70d5bfcfbf994f48a7953b5a979c2204df68a0",
      "filename": "sim/arm/thumbemu.c",
      "status": "modified",
      "additions": 53,
      "deletions": 18,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/thumbemu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/thumbemu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/thumbemu.c?ref=9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
      "patch": "@@ -1759,26 +1759,60 @@ handle_T2_insn (ARMul_State * state,\n \tbreak;\n       }\n \n-    case 0xDC: // SMULL\n-      tASSERT (tBIT (4) == 0);\n-      tASSERT (ntBITS (4, 7) == 0);\n-      * ainstr = 0xE0C00090;\n-      * ainstr |= (ntBITS (8, 11) << 16); // RdHi\n-      * ainstr |= (ntBITS (12, 15) << 12); // RdLo\n-      * ainstr |= (ntBITS (0, 3) << 8); // Rm\n-      * ainstr |= tBITS (0, 3); // Rn\n-      * pvalid = t_decoded;\n+    case 0xDC:\n+      if (tBIT (4) == 0 && ntBITS (4, 7) == 0)\n+\t{\n+\t  // SMULL\n+\t  * ainstr = 0xE0C00090;\n+\t  * ainstr |= (ntBITS (8, 11) << 16); // RdHi\n+\t  * ainstr |= (ntBITS (12, 15) << 12); // RdLo\n+\t  * ainstr |= (ntBITS (0, 3) << 8); // Rm\n+\t  * ainstr |= tBITS (0, 3); // Rn\n+\t  * pvalid = t_decoded;\n+\t}\n+      else if (tBIT (4) == 1 && ntBITS (4, 7) == 0xF)\n+\t{\n+\t  // SDIV\n+\t  * ainstr = 0xE710F010;\n+\t  * ainstr |= (ntBITS (8, 11) << 16); // Rd\n+\t  * ainstr |= (ntBITS (0, 3) << 8);   // Rm\n+\t  * ainstr |= tBITS (0, 3); // Rn\n+\t  * pvalid = t_decoded;\n+\t}\n+      else\n+\t{\n+\t  fprintf (stderr, \"(op = %x) \", tBITS (5,12));\n+\t  tASSERT (0);\n+\t  return;\n+\t}\n       break;\n \n-    case 0xDD: // UMULL\n-      tASSERT (tBIT (4) == 0);\n-      tASSERT (ntBITS (4, 7) == 0);\n-      * ainstr = 0xE0800090;\n-      * ainstr |= (ntBITS (8, 11) << 16); // RdHi\n-      * ainstr |= (ntBITS (12, 15) << 12); // RdLo\n-      * ainstr |= (ntBITS (0, 3) << 8); // Rm\n-      * ainstr |= tBITS (0, 3); // Rn\n-      * pvalid = t_decoded;\n+    case 0xDD:\n+      if (tBIT (4) == 0 && ntBITS (4, 7) == 0)\n+\t{\n+\t  // UMULL\n+\t  * ainstr = 0xE0800090;\n+\t  * ainstr |= (ntBITS (8, 11) << 16); // RdHi\n+\t  * ainstr |= (ntBITS (12, 15) << 12); // RdLo\n+\t  * ainstr |= (ntBITS (0, 3) << 8); // Rm\n+\t  * ainstr |= tBITS (0, 3); // Rn\n+\t  * pvalid = t_decoded;\n+\t}\n+      else if (tBIT (4) == 1 && ntBITS (4, 7) == 0xF)\n+\t{\n+\t  // UDIV\n+\t  * ainstr = 0xE730F010;\n+\t  * ainstr |= (ntBITS (8, 11) << 16); // Rd\n+\t  * ainstr |= (ntBITS (0, 3) << 8);   // Rm\n+\t  * ainstr |= tBITS (0, 3); // Rn\n+\t  * pvalid = t_decoded;\n+\t}\n+      else\n+\t{\n+\t  fprintf (stderr, \"(op = %x) \", tBITS (5,12));\n+\t  tASSERT (0);\n+\t  return;\n+\t}\n       break;\n \n     case 0xDF: // UMLAL\n@@ -1896,6 +1930,7 @@ handle_v6_thumb_insn (ARMul_State * state,\n     case 0xEB80: // SUB\n     case 0xEBC0: // RSB\n     case 0xFA80: // UADD, SEL\n+    case 0xFBC0: // UMULL, SMULL, SDIV, UDIV\n       handle_T2_insn (state, tinstr, next_instr, pc, ainstr, pvalid);\n       return;\n "
    },
    {
      "sha": "cc18498151223369eb3eeeeaa6e518497972dba2",
      "filename": "sim/arm/wrapper.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/wrapper.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9f132af9e189a6c1e90b1ab7ed84c6613c8ac596/sim/arm/wrapper.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/wrapper.c?ref=9f132af9e189a6c1e90b1ab7ed84c6613c8ac596",
      "patch": "@@ -241,6 +241,14 @@ sim_create_inferior (SIM_DESC sd ATTRIBUTE_UNUSED,\n       ARMul_SelectProcessor (state, ARM_v5_Prop | ARM_v5e_Prop | ARM_v6_Prop);\n       break;\n \n+#if 1\n+    case bfd_mach_arm_6T2:\n+    case bfd_mach_arm_7:\n+    case bfd_mach_arm_7EM:\n+      ARMul_SelectProcessor (state, ARM_v5_Prop | ARM_v5e_Prop | ARM_v6_Prop);\n+      break;\n+#endif\n+\n     case bfd_mach_arm_XScale:\n       ARMul_SelectProcessor (state, ARM_v5_Prop | ARM_v5e_Prop | ARM_XScale_Prop | ARM_v6_Prop);\n       break;"
    }
  ]
}