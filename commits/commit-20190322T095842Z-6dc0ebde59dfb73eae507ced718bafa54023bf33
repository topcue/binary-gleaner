{
  "sha": "6dc0ebde59dfb73eae507ced718bafa54023bf33",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmRjMGViZGU1OWRmYjczZWFlNTA3Y2VkNzE4YmFmYTU0MDIzYmYzMw==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-03-22T09:58:42Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-03-22T09:58:42Z"
    },
    "message": "AArch64: Add pointer authentication feature\n\nPointer Authentication is a new feature in AArch64 v8.3-a. When enabled in\nthe compiler, function return addresses will be mangled by the kernel.\n\nAdd register description xml and wire up to aarch64_linux_read_description.\nThis description includes the two pauth user registers.\n\nNothing yet uses the feature - that is added in later patches.\n\ngdb/ChangeLog:\n\n\t* aarch64-linux-nat.c\n\t(aarch64_linux_nat_target::read_description): Add pauth param.\n\t* aarch64-linux-tdep.c\n\t(aarch64_linux_core_read_description): Likewise.\n\t* aarch64-tdep.c (struct target_desc): Add in pauth.\n\t(aarch64_read_description): Add pauth param.\n\t(aarch64_gdbarch_init): Likewise.\n\t* aarch64-tdep.h (aarch64_read_description): Likewise.\n\t* arch/aarch64.c (aarch64_create_target_description): Likewise.\n\t* arch/aarch64.h (aarch64_create_target_description): Likewise.\n\t* features/Makefile: Add new files.\n\t* features/aarch64-pauth.c: New file.\n\t* features/aarch64-pauth.xml: New file.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo: Describe pauth feature.\n\ngdb/gdbserver/ChangeLog:\n\n\t* linux-aarch64-ipa.c (get_ipa_tdesc): Add pauth param.\n\t(initialize_low_tracepoint): Likewise.\n\t* linux-aarch64-low.c (aarch64_arch_setup): Likewise.\n\t* linux-aarch64-tdesc-selftest.c (aarch64_tdesc_test): Likewise.\n\t* linux-aarch64-tdesc.c (struct target_desc): Likewise.\n\t(aarch64_linux_read_description): Likewise.\n\t* linux-aarch64-tdesc.h (aarch64_linux_read_description): Likewise.",
    "tree": {
      "sha": "9cc851b66b4b94d633e576f1b955edfe9b63d81c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9cc851b66b4b94d633e576f1b955edfe9b63d81c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6dc0ebde59dfb73eae507ced718bafa54023bf33",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dc0ebde59dfb73eae507ced718bafa54023bf33",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6dc0ebde59dfb73eae507ced718bafa54023bf33",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dc0ebde59dfb73eae507ced718bafa54023bf33/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "968aa7ae389d9e6cecb5fda6826bf889ed959fce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/968aa7ae389d9e6cecb5fda6826bf889ed959fce",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/968aa7ae389d9e6cecb5fda6826bf889ed959fce"
    }
  ],
  "stats": {
    "total": 127,
    "additions": 101,
    "deletions": 26
  },
  "files": [
    {
      "sha": "743f510b29523f34a40a5960df806a63caeaf96c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -1,3 +1,20 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* aarch64-linux-nat.c\n+\t(aarch64_linux_nat_target::read_description): Add pauth param.\n+\t* aarch64-linux-tdep.c\n+\t(aarch64_linux_core_read_description): Likewise.\n+\t* aarch64-tdep.c (struct target_desc): Add in pauth.\n+\t(aarch64_read_description): Add pauth param.\n+\t(aarch64_gdbarch_init): Likewise.\n+\t* aarch64-tdep.h (aarch64_read_description): Likewise.\n+\t* arch/aarch64.c (aarch64_create_target_description): Likewise.\n+\t* arch/aarch64.h (aarch64_create_target_description): Likewise.\n+\t* features/Makefile: Add new files.\n+\t* features/aarch64-pauth.c: New file.\n+\t* features/aarch64-pauth.xml: New file.\n+\n 2019-03-20  Tom Tromey  <tromey@adacore.com>\n \n \t* infrun.c (handle_inferior_event): Rename from"
    },
    {
      "sha": "f58a41e19555b87b07d037ce87b6379d0c3fb1e7",
      "filename": "gdb/aarch64-linux-nat.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-nat.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -605,8 +605,9 @@ aarch64_linux_nat_target::read_description ()\n   ret = ptrace (PTRACE_GETREGSET, tid, NT_ARM_VFP, &iovec);\n   if (ret == 0)\n     return tdesc_arm_with_neon;\n-  else\n-    return aarch64_read_description (aarch64_sve_get_vq (tid));\n+\n+  /* pauth not yet supported.  */\n+  return aarch64_read_description (aarch64_sve_get_vq (tid), false);\n }\n \n /* Convert a native/host siginfo object, into/from the siginfo in the"
    },
    {
      "sha": "445019accc74ead28e3da30416adc856d847aebb",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -640,7 +640,9 @@ aarch64_linux_core_read_description (struct gdbarch *gdbarch,\n   if (target_auxv_search (target, AT_HWCAP, &aarch64_hwcap) != 1)\n     return NULL;\n \n-  return aarch64_read_description (aarch64_linux_core_read_vq (gdbarch, abfd));\n+  /* pauth not yet supported.  */\n+  return aarch64_read_description (aarch64_linux_core_read_vq (gdbarch, abfd),\n+\t\t\t\t   false);\n }\n \n /* Implementation of `gdbarch_stap_is_single_operand', as defined in"
    },
    {
      "sha": "0518837a1f992fd1a901d3d3c73e45faf5913f68",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -69,7 +69,7 @@\n #define HA_MAX_NUM_FLDS\t\t4\n \n /* All possible aarch64 target descriptors.  */\n-struct target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1];\n+struct target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/];\n \n /* The standard register names, and all the valid aliases for them.  */\n static const struct\n@@ -2885,18 +2885,18 @@ aarch64_displaced_step_hw_singlestep (struct gdbarch *gdbarch,\n    (It is not possible to set VQ to zero on an SVE system).  */\n \n const target_desc *\n-aarch64_read_description (uint64_t vq)\n+aarch64_read_description (uint64_t vq, bool pauth_p)\n {\n   if (vq > AARCH64_MAX_SVE_VQ)\n     error (_(\"VQ is %\" PRIu64 \", maximum supported value is %d\"), vq,\n \t   AARCH64_MAX_SVE_VQ);\n \n-  struct target_desc *tdesc = tdesc_aarch64_list[vq];\n+  struct target_desc *tdesc = tdesc_aarch64_list[vq][pauth_p];\n \n   if (tdesc == NULL)\n     {\n-      tdesc = aarch64_create_target_description (vq);\n-      tdesc_aarch64_list[vq] = tdesc;\n+      tdesc = aarch64_create_target_description (vq, pauth_p);\n+      tdesc_aarch64_list[vq][pauth_p] = tdesc;\n     }\n \n   return tdesc;\n@@ -2961,7 +2961,7 @@ aarch64_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n \n   /* Ensure we always have a target description.  */\n   if (!tdesc_has_registers (tdesc))\n-    tdesc = aarch64_read_description (0);\n+    tdesc = aarch64_read_description (0, false);\n   gdb_assert (tdesc);\n \n   feature_core = tdesc_find_feature (tdesc, \"org.gnu.gdb.aarch64.core\");\n@@ -3190,7 +3190,7 @@ When on, AArch64 specific debugging is enabled.\"),\n   selftests::register_test (\"aarch64-process-record\",\n \t\t\t    selftests::aarch64_process_record_test);\n   selftests::record_xml_tdesc (\"aarch64.xml\",\n-\t\t\t       aarch64_create_target_description (0));\n+\t\t\t       aarch64_create_target_description (0, false));\n #endif\n }\n "
    },
    {
      "sha": "3db6bee9f3fed032f9c2ca6234a44599416fb0df",
      "filename": "gdb/aarch64-tdep.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/aarch64-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.h?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -89,7 +89,7 @@ struct gdbarch_tdep\n   }\n };\n \n-const target_desc *aarch64_read_description (uint64_t vq);\n+const target_desc *aarch64_read_description (uint64_t vq, bool pauth_p);\n \n extern int aarch64_process_record (struct gdbarch *gdbarch,\n                                struct regcache *regcache, CORE_ADDR addr);"
    },
    {
      "sha": "11a15dd94cb145a5d0d67fbce6e8809891fabec6",
      "filename": "gdb/arch/aarch64.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/arch/aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/arch/aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/aarch64.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -22,11 +22,12 @@\n #include \"../features/aarch64-core.c\"\n #include \"../features/aarch64-fpu.c\"\n #include \"../features/aarch64-sve.c\"\n+#include \"../features/aarch64-pauth.c\"\n \n /* See arch/aarch64.h.  */\n \n target_desc *\n-aarch64_create_target_description (uint64_t vq)\n+aarch64_create_target_description (uint64_t vq, bool pauth_p)\n {\n   target_desc *tdesc = allocate_target_description ();\n \n@@ -43,5 +44,8 @@ aarch64_create_target_description (uint64_t vq)\n   else\n     regnum = create_feature_aarch64_sve (tdesc, regnum, vq);\n \n+  if (pauth_p)\n+    regnum = create_feature_aarch64_pauth (tdesc, regnum);\n+\n   return tdesc;\n }"
    },
    {
      "sha": "4fe6d02f6e23d47ec9595c170c6fe3450352051b",
      "filename": "gdb/arch/aarch64.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/arch/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/arch/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/aarch64.h?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -24,9 +24,10 @@\n \n /* Create the aarch64 target description.  A non zero VQ value indicates both\n    the presence of SVE and the Vector Quotient - the number of 128bit chunks in\n-   an SVE Z register.  */\n+   an SVE Z register.  HAS_PAUTH_P indicates the presence of the PAUTH\n+   feature.  */\n \n-target_desc *aarch64_create_target_description (uint64_t vq);\n+target_desc *aarch64_create_target_description (uint64_t vq, bool has_pauth_p);\n \n /* Register numbers of various important registers.\n    Note that on SVE, the Z registers reuse the V register numbers and the V"
    },
    {
      "sha": "1f41498dc834baf28104cd63cbd67026fa76c532",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* gdb.texinfo (AArch64 Features): Describe pauth feature.\n+\n 2019-03-20  Tom Tromey  <tromey@adacore.com>\n \n \t* python.texi (Selecting Pretty-Printers): Use @defvar for"
    },
    {
      "sha": "4c1d5e8294fe200c36ac19e7f07e9964296c385b",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -43162,6 +43162,9 @@ The @samp{org.gnu.gdb.aarch64.sve} feature is optional.  If present,\n it should contain registers @samp{z0} through @samp{z31}, @samp{p0}\n through @samp{p15}, @samp{ffr} and @samp{vg}.\n \n+The @samp{org.gnu.gdb.aarch64.pauth} feature is optional.  If present,\n+it should contain registers @samp{pauth_dmask} and @samp{pauth_cmask}.\n+\n @node ARC Features\n @subsection ARC Features\n @cindex target descriptions, ARC Features"
    },
    {
      "sha": "d0cd4f851fc60aa3f4b2a00352086ea6c3c30e24",
      "filename": "gdb/features/Makefile",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/features/Makefile",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/features/Makefile",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/Makefile?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -227,6 +227,7 @@ $(outdir)/%.dat: %.xml number-regs.xsl sort-regs.xsl gdbserver-regs.xsl\n \n FEATURE_XMLFILES = aarch64-core.xml \\\n \taarch64-fpu.xml \\\n+\taarch64-pauth.xml \\\n \ti386/32bit-core.xml \\\n \ti386/32bit-sse.xml \\\n \ti386/32bit-linux.xml \\"
    },
    {
      "sha": "e4b84ffb552fcf8b2939b288bc615d3c52598a92",
      "filename": "gdb/features/aarch64-pauth.c",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/features/aarch64-pauth.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/features/aarch64-pauth.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/aarch64-pauth.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -0,0 +1,16 @@\n+/* THIS FILE IS GENERATED.  -*- buffer-read-only: t -*- vi:set ro:\n+  Original: aarch64-pauth.xml */\n+\n+#include \"common/tdesc.h\"\n+\n+static int\n+create_feature_aarch64_pauth (struct target_desc *result, long regnum)\n+{\n+  struct tdesc_feature *feature;\n+\n+  feature = tdesc_create_feature (result, \"org.gnu.gdb.aarch64.pauth\");\n+  tdesc_create_reg (feature, \"pauth_dmask\", regnum++, 1, NULL, 64, \"int\");\n+  tdesc_create_reg (feature, \"pauth_cmask\", regnum++, 1, NULL, 64, \"int\");\n+\n+  return regnum;\n+}"
    },
    {
      "sha": "9c8987fca7c020f7ad0e467b904312590c35f81e",
      "filename": "gdb/features/aarch64-pauth.xml",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/features/aarch64-pauth.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/features/aarch64-pauth.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/aarch64-pauth.xml?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\"?>\n+<!-- Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+     Copying and distribution of this file, with or without modification,\n+     are permitted in any medium without royalty provided the copyright\n+     notice and this notice are preserved.  -->\n+\n+<!DOCTYPE feature SYSTEM \"gdb-target.dtd\">\n+<feature name=\"org.gnu.gdb.aarch64.pauth\">\n+  <reg name=\"pauth_dmask\" bitsize=\"64\"/>\n+  <reg name=\"pauth_cmask\" bitsize=\"64\"/>\n+</feature>\n+"
    },
    {
      "sha": "9fdbe1d866ee9ce9a4ecfb79ea5f99f6b3ac8c25",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -1,3 +1,14 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* linux-aarch64-ipa.c (get_ipa_tdesc): Add pauth param.\n+\t(initialize_low_tracepoint): Likewise.\n+\t* linux-aarch64-low.c (aarch64_arch_setup): Likewise.\n+\t* linux-aarch64-tdesc-selftest.c (aarch64_tdesc_test): Likewise.\n+\t* linux-aarch64-tdesc.c (struct target_desc): Likewise.\n+\t(aarch64_linux_read_description): Likewise.\n+\t* linux-aarch64-tdesc.h (aarch64_linux_read_description): Likewise.\n+\n 2019-03-12  John Baldwin  <jhb@FreeBSD.org>\n \n \t* linux-x86-tdesc.c (i386_linux_read_description): Update call to"
    },
    {
      "sha": "3804b1e23941a8050c341c516d44678678b949cc",
      "filename": "gdb/gdbserver/linux-aarch64-ipa.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-ipa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-ipa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-ipa.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -147,12 +147,12 @@ get_raw_reg (const unsigned char *raw_regs, int regnum)\n \n /* Return target_desc to use for IPA, given the tdesc index passed by\n    gdbserver.  Index is ignored, since we have only one tdesc\n-   at the moment.  SVE not yet supported.  */\n+   at the moment.  SVE and pauth not yet supported.  */\n \n const struct target_desc *\n get_ipa_tdesc (int idx)\n {\n-  return aarch64_linux_read_description (0);\n+  return aarch64_linux_read_description (0, false);\n }\n \n /* Allocate buffer for the jump pads.  The branch instruction has a reach\n@@ -204,6 +204,6 @@ alloc_jump_pad_buffer (size_t size)\n void\n initialize_low_tracepoint (void)\n {\n-  /* SVE not yet supported.  */\n-  aarch64_linux_read_description (0);\n+  /* SVE and pauth not yet supported.  */\n+  aarch64_linux_read_description (0, false);\n }"
    },
    {
      "sha": "db329da4dc9555054670ce15f7aff6886f2535bb",
      "filename": "gdb/gdbserver/linux-aarch64-low.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-low.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -501,7 +501,8 @@ aarch64_arch_setup (void)\n   if (is_elf64)\n     {\n       uint64_t vq = aarch64_sve_get_vq (tid);\n-      current_process ()->tdesc = aarch64_linux_read_description (vq);\n+      /* pauth not yet supported.  */\n+      current_process ()->tdesc = aarch64_linux_read_description (vq, false);\n     }\n   else\n     current_process ()->tdesc = tdesc_arm_with_neon;"
    },
    {
      "sha": "bf24a27c598b78d1ed0ede3c6409b52086a291f0",
      "filename": "gdb/gdbserver/linux-aarch64-tdesc-selftest.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-tdesc-selftest.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-tdesc-selftest.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-tdesc-selftest.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -29,7 +29,7 @@ namespace tdesc {\n static void\n aarch64_tdesc_test ()\n {\n-  const target_desc *tdesc = aarch64_linux_read_description (0);\n+  const target_desc *tdesc = aarch64_linux_read_description (0, false);\n   SELF_CHECK (*tdesc == *tdesc_aarch64);\n }\n }"
    },
    {
      "sha": "6f9b4f1efc634271c4fe27e6d3872aa6bf559ddb",
      "filename": "gdb/gdbserver/linux-aarch64-tdesc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-tdesc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-tdesc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-tdesc.c?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -24,22 +24,22 @@\n #include <inttypes.h>\n \n /* All possible aarch64 target descriptors.  */\n-struct target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1];\n+struct target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/];\n \n /* Create the aarch64 target description.  */\n \n const target_desc *\n-aarch64_linux_read_description (uint64_t vq)\n+aarch64_linux_read_description (uint64_t vq, bool pauth_p)\n {\n   if (vq > AARCH64_MAX_SVE_VQ)\n     error (_(\"VQ is %\" PRIu64 \", maximum supported value is %d\"), vq,\n \t   AARCH64_MAX_SVE_VQ);\n \n-  struct target_desc *tdesc = tdesc_aarch64_list[vq];\n+  struct target_desc *tdesc = tdesc_aarch64_list[vq][pauth_p];\n \n   if (tdesc == NULL)\n     {\n-      tdesc = aarch64_create_target_description (vq);\n+      tdesc = aarch64_create_target_description (vq, pauth_p);\n \n       static const char *expedite_regs_aarch64[] = { \"x29\", \"sp\", \"pc\", NULL };\n       static const char *expedite_regs_aarch64_sve[] = { \"x29\", \"sp\", \"pc\",\n@@ -50,7 +50,7 @@ aarch64_linux_read_description (uint64_t vq)\n       else\n \tinit_target_desc (tdesc, expedite_regs_aarch64_sve);\n \n-      tdesc_aarch64_list[vq] = tdesc;\n+      tdesc_aarch64_list[vq][pauth_p] = tdesc;\n     }\n \n   return tdesc;"
    },
    {
      "sha": "06b3ec9b1e68a9abf0d0114f70c674b6b08e8d35",
      "filename": "gdb/gdbserver/linux-aarch64-tdesc.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-tdesc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dc0ebde59dfb73eae507ced718bafa54023bf33/gdb/gdbserver/linux-aarch64-tdesc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-tdesc.h?ref=6dc0ebde59dfb73eae507ced718bafa54023bf33",
      "patch": "@@ -20,7 +20,7 @@\n #ifndef GDBSERVER_LINUX_AARCH64_TDESC_H\n #define GDBSERVER_LINUX_AARCH64_TDESC_H\n \n-const target_desc * aarch64_linux_read_description (uint64_t vq);\n+const target_desc * aarch64_linux_read_description (uint64_t vq, bool pauth_p);\n \n #if GDB_SELF_TEST\n void initialize_low_tdesc ();"
    }
  ]
}