{
  "sha": "41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDFiZGNlZDVhZWY5NmIwNDBiOWIzZWFkZjM1MzA2YzhiMmZjNzFkMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:09Z"
    },
    "message": "Split out eval_op_m2_high\n\nThis splits UNOP_HIGH into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* m2-lang.c (eval_op_m2_high): New function.\n\t(evaluate_subexp_modula2): Use it.",
    "tree": {
      "sha": "8269cc788b0de806a203b910cb84e4f4830ef075",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8269cc788b0de806a203b910cb84e4f4830ef075"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41bdced5aef96b040b9b3eadf35306c8b2fc71d3/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "13ea014aeefb4a11d43c2e9d9e28064a46bd5a4a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13ea014aeefb4a11d43c2e9d9e28064a46bd5a4a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/13ea014aeefb4a11d43c2e9d9e28064a46bd5a4a"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 37,
    "deletions": 23
  },
  "files": [
    {
      "sha": "582408f7537477d9a5c8b89299912cef96082b78",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41bdced5aef96b040b9b3eadf35306c8b2fc71d3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41bdced5aef96b040b9b3eadf35306c8b2fc71d3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* m2-lang.c (eval_op_m2_high): New function.\n+\t(evaluate_subexp_modula2): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (evaluate_subexp_for_address_base): New function."
    },
    {
      "sha": "b0dafad8d33333497efa8a56405b59780fa4fea5",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 32,
      "deletions": 23,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41bdced5aef96b040b9b3eadf35306c8b2fc71d3/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41bdced5aef96b040b9b3eadf35306c8b2fc71d3/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
      "patch": "@@ -29,6 +29,37 @@\n #include \"valprint.h\"\n #include \"gdbarch.h\"\n \n+/* A helper function for UNOP_HIGH.  */\n+\n+static struct value *\n+eval_op_m2_high (struct type *expect_type, struct expression *exp,\n+\t\t enum noside noside,\n+\t\t struct value *arg1)\n+{\n+  if (noside == EVAL_SKIP || noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return arg1;\n+  else\n+    {\n+      arg1 = coerce_ref (arg1);\n+      struct type *type = check_typedef (value_type (arg1));\n+\n+      if (m2_is_unbounded_array (type))\n+\t{\n+\t  struct value *temp = arg1;\n+\n+\t  type = type->field (1).type ();\n+\t  /* i18n: Do not translate the \"_m2_high\" part!  */\n+\t  arg1 = value_struct_elt (&temp, NULL, \"_m2_high\", NULL,\n+\t\t\t\t   _(\"unbounded structure \"\n+\t\t\t\t     \"missing _m2_high field\"));\n+\n+\t  if (value_type (arg1) != type)\n+\t    arg1 = value_cast (type, arg1);\n+\t}\n+    }\n+  return arg1;\n+}\n+\n static struct value *\n evaluate_subexp_modula2 (struct type *expect_type, struct expression *exp,\n \t\t\t int *pos, enum noside noside)\n@@ -43,29 +74,7 @@ evaluate_subexp_modula2 (struct type *expect_type, struct expression *exp,\n     case UNOP_HIGH:\n       (*pos)++;\n       arg1 = evaluate_subexp_with_coercion (exp, pos, noside);\n-\n-      if (noside == EVAL_SKIP || noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn arg1;\n-      else\n-\t{\n-\t  arg1 = coerce_ref (arg1);\n-\t  type = check_typedef (value_type (arg1));\n-\n-\t  if (m2_is_unbounded_array (type))\n-\t    {\n-\t      struct value *temp = arg1;\n-\n-\t      type = type->field (1).type ();\n-\t      /* i18n: Do not translate the \"_m2_high\" part!  */\n-\t      arg1 = value_struct_elt (&temp, NULL, \"_m2_high\", NULL,\n-\t\t\t\t       _(\"unbounded structure \"\n-\t\t\t\t\t \"missing _m2_high field\"));\n-\t  \n-\t      if (value_type (arg1) != type)\n-\t\targ1 = value_cast (type, arg1);\n-\t    }\n-\t}\n-      return arg1;\n+      return eval_op_m2_high (expect_type, exp, noside, arg1);\n \n     case BINOP_SUBSCRIPT:\n       (*pos)++;"
    }
  ]
}