{
  "sha": "0363df3db7d3f5edd3a349ab7720eca83f460545",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDM2M2RmM2RiN2QzZjVlZGQzYTM0OWFiNzcyMGVjYTgzZjQ2MDU0NQ==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-09-17T17:10:16Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-09-17T20:17:01Z"
    },
    "message": "Fix ctrl-c when debugging WOW64 processes\n\nDebugBreakProcess starts a new thread in the target process with the\nentry point DbgUiRemoteBreakin, where an int3 triggers a breakpoint\nexception for gdb.\n\nBut this uses DbgUiRemoteBreakin of the 64bit ntdll.dll even for\nWOW64 processes.\nIt stops in 64bit code, Wow64GetThreadContext reports a wrong pc without\nthe int3, and gdb lets the target process continue.\n\nSo this uses DbgUiRemoteBreakin of the 32bit ntdll.dll as the thread\nentry point for WOW64 processes instead.\n\ngdb/ChangeLog:\n\n2020-09-17  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* windows-nat.c (ctrl_c_handler): Use 32bit DbgUiRemoteBreakin\n\tfor WOW64 processes.",
    "tree": {
      "sha": "89f6088ae55e7ebe92b245499de33f3cf4fd6543",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89f6088ae55e7ebe92b245499de33f3cf4fd6543"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0363df3db7d3f5edd3a349ab7720eca83f460545",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0363df3db7d3f5edd3a349ab7720eca83f460545",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0363df3db7d3f5edd3a349ab7720eca83f460545",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0363df3db7d3f5edd3a349ab7720eca83f460545/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "280a9412e483c0e4d253a338477a602cffba058c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/280a9412e483c0e4d253a338477a602cffba058c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/280a9412e483c0e4d253a338477a602cffba058c"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 37,
    "deletions": 3
  },
  "files": [
    {
      "sha": "4b54f4e52047d32b5ad38ba265e46c9788b093ff",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0363df3db7d3f5edd3a349ab7720eca83f460545/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0363df3db7d3f5edd3a349ab7720eca83f460545/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0363df3db7d3f5edd3a349ab7720eca83f460545",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-17  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* windows-nat.c (ctrl_c_handler): Use 32bit DbgUiRemoteBreakin\n+\tfor WOW64 processes.\n+\n 2020-09-17  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (compute_compunit_symtab_includes): Use htab_up."
    },
    {
      "sha": "ec5e4281269e7f1ea8bf12cc62cd380358da0104",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 32,
      "deletions": 3,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0363df3db7d3f5edd3a349ab7720eca83f460545/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0363df3db7d3f5edd3a349ab7720eca83f460545/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=0363df3db7d3f5edd3a349ab7720eca83f460545",
      "patch": "@@ -71,6 +71,7 @@\n #include \"gdbsupport/pathstuff.h\"\n #include \"gdbsupport/gdb_wait.h\"\n #include \"nat/windows-nat.h\"\n+#include \"gdbsupport/symbol.h\"\n \n using namespace windows_nat;\n \n@@ -235,6 +236,7 @@ static int saw_create;\n static int open_process_used = 0;\n #ifdef __x86_64__\n static bool wow64_process = false;\n+static void *wow64_dbgbreak;\n #endif\n \n /* User options.  */\n@@ -1522,9 +1524,36 @@ ctrl_c_handler (DWORD event_type)\n   if (!new_console && !attach_flag)\n     return TRUE;\n \n-  if (!DebugBreakProcess (current_process_handle))\n-    warning (_(\"Could not interrupt program.  \"\n-\t       \"Press Ctrl-c in the program console.\"));\n+#ifdef __x86_64__\n+  if (wow64_process)\n+    {\n+      /* Call DbgUiRemoteBreakin of the 32bit ntdll.dll in the target process.\n+\t DebugBreakProcess would call the one of the 64bit ntdll.dll, which\n+\t can't be correctly handled by gdb.  */\n+      if (wow64_dbgbreak == nullptr)\n+\t{\n+\t  CORE_ADDR addr;\n+\t  if (!find_minimal_symbol_address (\"ntdll!DbgUiRemoteBreakin\",\n+\t\t\t\t\t    &addr, 0))\n+\t    wow64_dbgbreak = (void *) addr;\n+\t}\n+\n+      if (wow64_dbgbreak != nullptr)\n+\t{\n+\t  HANDLE thread = CreateRemoteThread (current_process_handle, NULL,\n+\t\t\t\t\t      0, (LPTHREAD_START_ROUTINE)\n+\t\t\t\t\t      wow64_dbgbreak, NULL, 0, NULL);\n+\t  if (thread)\n+\t    CloseHandle (thread);\n+\t}\n+    }\n+  else\n+#endif\n+    {\n+      if (!DebugBreakProcess (current_process_handle))\n+\twarning (_(\"Could not interrupt program.  \"\n+\t\t   \"Press Ctrl-c in the program console.\"));\n+    }\n \n   /* Return true to tell that Ctrl-C has been handled.  */\n   return TRUE;"
    }
  ]
}