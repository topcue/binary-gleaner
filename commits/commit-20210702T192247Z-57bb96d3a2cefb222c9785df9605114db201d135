{
  "sha": "57bb96d3a2cefb222c9785df9605114db201d135",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTdiYjk2ZDNhMmNlZmIyMjJjOTc4NWRmOTYwNTExNGRiMjAxZDEzNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-07-02T19:22:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-07-02T19:22:47Z"
    },
    "message": "Use 'const' in ada-exp.y\n\nI found a few spots in ada-exp.y that could use 'const'.\nTested by rebuilding.\n\n2021-07-02  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-exp.y (chop_selector, chop_separator, write_selectors)\n\t(write_ambiguous_var, get_symbol_field_type): Use const.",
    "tree": {
      "sha": "0eca412d1367e4584977fa49ff69e3b9a303cd7e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0eca412d1367e4584977fa49ff69e3b9a303cd7e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/57bb96d3a2cefb222c9785df9605114db201d135",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57bb96d3a2cefb222c9785df9605114db201d135",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/57bb96d3a2cefb222c9785df9605114db201d135",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57bb96d3a2cefb222c9785df9605114db201d135/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "90b044ef102df5bf7929c71fc9465f23279eabdd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90b044ef102df5bf7929c71fc9465f23279eabdd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/90b044ef102df5bf7929c71fc9465f23279eabdd"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 15,
    "deletions": 10
  },
  "files": [
    {
      "sha": "6a5f8b569f827cf2fbe6d7708226110b7d47cc33",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57bb96d3a2cefb222c9785df9605114db201d135/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57bb96d3a2cefb222c9785df9605114db201d135/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=57bb96d3a2cefb222c9785df9605114db201d135",
      "patch": "@@ -1,3 +1,8 @@\n+2021-07-02  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-exp.y (chop_selector, chop_separator, write_selectors)\n+\t(write_ambiguous_var, get_symbol_field_type): Use const.\n+\n 2021-07-02  Pedro Alves  <pedro@palves.net>\n \t    Hannes Domani  <ssbssa@yahoo.de>\n "
    },
    {
      "sha": "5b6aca91153b3c8fc6ef2a696a28371690f40c77",
      "filename": "gdb/ada-exp.y",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57bb96d3a2cefb222c9785df9605114db201d135/gdb/ada-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57bb96d3a2cefb222c9785df9605114db201d135/gdb/ada-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.y?ref=57bb96d3a2cefb222c9785df9605114db201d135",
      "patch": "@@ -94,7 +94,7 @@ static const struct block *block_lookup (const struct block *, const char *);\n static LONGEST convert_char_literal (struct type *, LONGEST);\n \n static void write_ambiguous_var (struct parser_state *,\n-\t\t\t\t const struct block *, char *, int);\n+\t\t\t\t const struct block *, const char *, int);\n \n static struct type *type_int (struct parser_state *);\n \n@@ -1400,7 +1400,7 @@ find_primitive_type (struct parser_state *par_state, const char *name)\n }\n \n static int\n-chop_selector (char *name, int end)\n+chop_selector (const char *name, int end)\n {\n   int i;\n   for (i = end - 1; i > 0; i -= 1)\n@@ -1413,8 +1413,8 @@ chop_selector (char *name, int end)\n    '.'), chop this separator and return the result; else, return\n    NAME.  */\n \n-static char *\n-chop_separator (char *name)\n+static const char *\n+chop_separator (const char *name)\n {\n   if (*name == '.')\n    return name + 1;\n@@ -1429,11 +1429,11 @@ chop_separator (char *name)\n    <sep> is '__' or '.', write the indicated sequence of\n    STRUCTOP_STRUCT expression operators. */\n static void\n-write_selectors (struct parser_state *par_state, char *sels)\n+write_selectors (struct parser_state *par_state, const char *sels)\n {\n   while (*sels != '\\0')\n     {\n-      char *p = chop_separator (sels);\n+      const char *p = chop_separator (sels);\n       sels = p;\n       while (*sels != '\\0' && *sels != '.' \n \t     && (sels[0] != '_' || sels[1] != '_'))\n@@ -1450,7 +1450,7 @@ write_selectors (struct parser_state *par_state, char *sels)\n    */\n static void\n write_ambiguous_var (struct parser_state *par_state,\n-\t\t     const struct block *block, char *name, int len)\n+\t\t     const struct block *block, const char *name, int len)\n {\n   struct symbol *sym = new (&temp_parse_space) symbol ();\n \n@@ -1489,10 +1489,10 @@ ada_nget_field_index (const struct type *type, const char *field_name0,\n    In case of failure, we return NULL.  */\n \n static struct type *\n-get_symbol_field_type (struct symbol *sym, char *encoded_field_name)\n+get_symbol_field_type (struct symbol *sym, const char *encoded_field_name)\n {\n-  char *field_name = encoded_field_name;\n-  char *subfield_name;\n+  const char *field_name = encoded_field_name;\n+  const char *subfield_name;\n   struct type *type = SYMBOL_TYPE (sym);\n   int fieldno;\n "
    }
  ]
}