{
  "sha": "55708e99aca33f2ee9036732d778cd5899d2a2b0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTU3MDhlOTlhY2EzM2YyZWU5MDM2NzMyZDc3OGNkNTg5OWQyYTJiMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-11-05T17:12:27Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-11-14T18:58:50Z"
    },
    "message": "Allow re-assigning to convenience variables\n\nA customer reported somewhat odd gdb behavior, where re-assigning an\narray or string to a convenience variable would yield \"Too many array\nelements\".  A test case is:\n\n    (gdb) p $x = \"x\"\n    (gdb) p $x = \"xyz\"\n\nThis patch fixes the problem by making a special case in the evaluator\nfor assignment to convenience variables, which seems like the correct\nbehavior.\n\nNote that a previous patch implemented this for Ada, see commit\nf411722cb (\"Allow re-assigning to convenience variables\").\n\ngdb/ChangeLog\n2019-11-14  Tom Tromey  <tromey@adacore.com>\n\n\t* eval.c (evaluate_subexp_standard) <BINOP_ASSIGN>: Do not pass an\n\texpected type for the RHS if the LHS is a convenience variable.\n\ngdb/testsuite/ChangeLog\n2019-11-14  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.base/gdbvars.exp (test_convenience_variables): Add\n\tregression tests.\n\nChange-Id: I5e66a2d243931a5c43c7af4bc9f6717464c2477e",
    "tree": {
      "sha": "e62533e80ec25aa545539f243bb34d82ec125821",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e62533e80ec25aa545539f243bb34d82ec125821"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/55708e99aca33f2ee9036732d778cd5899d2a2b0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/55708e99aca33f2ee9036732d778cd5899d2a2b0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/55708e99aca33f2ee9036732d778cd5899d2a2b0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/55708e99aca33f2ee9036732d778cd5899d2a2b0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6b92c0d3533b8b01970e6ba5aa92581e027a63c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b92c0d3533b8b01970e6ba5aa92581e027a63c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6b92c0d3533b8b01970e6ba5aa92581e027a63c2"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 33,
    "deletions": 1
  },
  "files": [
    {
      "sha": "1a84242839b36ecb089a3c878fee429bc3ef1714",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=55708e99aca33f2ee9036732d778cd5899d2a2b0",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* eval.c (evaluate_subexp_standard) <BINOP_ASSIGN>: Do not pass an\n+\texpected type for the RHS if the LHS is a convenience variable.\n+\n 2019-11-14  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* unittests/vec-utils-selftests.c (unordered_remove_tests::obj):"
    },
    {
      "sha": "71e79d623a3c67d8de7153546f98980e9b1fa03c",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=55708e99aca33f2ee9036732d778cd5899d2a2b0",
      "patch": "@@ -2151,7 +2151,14 @@ evaluate_subexp_standard (struct type *expect_type,\n \n     case BINOP_ASSIGN:\n       arg1 = evaluate_subexp (NULL_TYPE, exp, pos, noside);\n-      arg2 = evaluate_subexp (value_type (arg1), exp, pos, noside);\n+      /* Special-case assignments where the left-hand-side is a\n+\t convenience variable -- in these, don't bother setting an\n+\t expected type.  This avoids a weird case where re-assigning a\n+\t string or array to an internal variable could error with \"Too\n+\t many array elements\".  */\n+      arg2 = evaluate_subexp (VALUE_LVAL (arg1) == lval_internalvar\n+\t\t\t      ? NULL_TYPE : value_type (arg1),\n+\t\t\t      exp, pos, noside);\n \n       if (noside == EVAL_SKIP || noside == EVAL_AVOID_SIDE_EFFECTS)\n \treturn arg1;"
    },
    {
      "sha": "3a4d2294706afa37026a99fdbffa84a9dadc6e1c",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=55708e99aca33f2ee9036732d778cd5899d2a2b0",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.base/gdbvars.exp (test_convenience_variables): Add\n+\tregression tests.\n+\n 2019-11-12  Tom Tromey  <tom@tromey.com>\n \n \t* lib/tuiterm.exp (_accept): Add wait_for parameter.  Check output"
    },
    {
      "sha": "a4e5b417ac50f394c08d984884829f92b4654e03",
      "filename": "gdb/testsuite/gdb.base/gdbvars.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/testsuite/gdb.base/gdbvars.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55708e99aca33f2ee9036732d778cd5899d2a2b0/gdb/testsuite/gdb.base/gdbvars.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/gdbvars.exp?ref=55708e99aca33f2ee9036732d778cd5899d2a2b0",
      "patch": "@@ -51,6 +51,21 @@ proc test_convenience_variables {} {\n \n     gdb_test \"print \\$bar\"\t\t\" = void\" \\\n \t\"Print contents of uninitialized convenience variable\"\n+\n+\n+    gdb_test \"print \\$str = \\\"some string\\\"\" \\\n+\t\" = \\\"some string\\\"\" \\\n+\t\"Set convenience variable to string value\"\n+    gdb_test \"print \\$str = \\\"some other string\\\"\" \\\n+\t\" = \\\"some other string\\\"\" \\\n+\t\"Change convenience variable to different string value\"\n+\n+    gdb_test \"print \\$arr = {1, 2, 3}\" \\\n+\t\" = \\\\{1, 2, 3\\\\}\" \\\n+\t\"Set convenience variable to array value\"\n+    gdb_test \"print \\$arr = {0, 1, 2, 3}\" \\\n+\t\" = \\\\{0, 1, 2, 3\\\\}\" \\\n+\t\"Set convenience variable to different array value\"\n }\n \n proc test_convenience_functions {} {"
    }
  ]
}