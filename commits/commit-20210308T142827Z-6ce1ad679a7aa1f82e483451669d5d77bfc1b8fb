{
  "sha": "6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmNlMWFkNjc5YTdhYTFmODJlNDgzNDUxNjY5ZDVkNzdiZmMxYjhmYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:27Z"
    },
    "message": "Introduce rust_subscript_operation\n\nThis adds class rust_subscript_operation, which implements\nBINOP_SUBSCRIPT for Rust.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (rust_subscript): No longer static.\n\t* rust-exp.h (class rust_subscript_operation): New.",
    "tree": {
      "sha": "de2631c5f3d13cdb64c0fe6d7559754c52534d3c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/de2631c5f3d13cdb64c0fe6d7559754c52534d3c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "11dd3dce4427792a89a851b8ed290b3c8124f282",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11dd3dce4427792a89a851b8ed290b3c8124f282",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/11dd3dce4427792a89a851b8ed290b3c8124f282"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 63,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a9b47648e2f12fbcac33d22fe8fe7b0046893f1c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (rust_subscript): No longer static.\n+\t* rust-exp.h (class rust_subscript_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (eval_op_rust_ind): No longer static.  Add \"opcode\""
    },
    {
      "sha": "7571009ea39552d29fffc24341e33401434136a3",
      "filename": "gdb/rust-exp.h",
      "status": "modified",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb/gdb/rust-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb/gdb/rust-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.h?ref=6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb",
      "patch": "@@ -38,6 +38,10 @@ extern struct value *eval_op_rust_ind (struct type *expect_type,\n \t\t\t\t       enum noside noside,\n \t\t\t\t       enum exp_opcode opcode,\n \t\t\t\t       struct value *value);\n+extern struct value *rust_subscript (struct type *expect_type,\n+\t\t\t\t     struct expression *exp,\n+\t\t\t\t     enum noside noside, bool for_addr,\n+\t\t\t\t     struct value *lhs, struct value *rhs);\n \n namespace expr\n {\n@@ -67,6 +71,59 @@ class rust_unop_ind_operation\n   }\n };\n \n+/* Subscript operator for Rust.  */\n+class rust_subscript_operation\n+  : public tuple_holding_operation<operation_up, operation_up>\n+{\n+public:\n+\n+  using tuple_holding_operation::tuple_holding_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    value *arg1 = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+    value *arg2 = std::get<1> (m_storage)->evaluate (nullptr, exp, noside);\n+    return rust_subscript (expect_type, exp, noside, false, arg1, arg2);\n+  }\n+\n+  value *slice (struct type *expect_type,\n+\t\tstruct expression *exp,\n+\t\tenum noside noside)\n+  {\n+    value *arg1 = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+    value *arg2 = std::get<1> (m_storage)->evaluate (nullptr, exp, noside);\n+    return rust_subscript (expect_type, exp, noside, true, arg1, arg2);\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return BINOP_SUBSCRIPT; }\n+};\n+\n+class rust_unop_addr_operation\n+  : public tuple_holding_operation<operation_up>\n+{\n+public:\n+\n+  using tuple_holding_operation::tuple_holding_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    operation *oper = std::get<0> (m_storage).get ();\n+    rust_subscript_operation *sub_op\n+      = dynamic_cast<rust_subscript_operation *> (oper);\n+    if (sub_op != nullptr)\n+      return sub_op->slice (expect_type, exp, noside);\n+    return oper->evaluate_for_address (exp, noside);\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return UNOP_ADDR; }\n+};\n+\n } /* namespace expr */\n \n #endif /* RUST_EXP_H */"
    },
    {
      "sha": "81b670240f699cf86999586bb7862e6379c5adc4",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=6ce1ad679a7aa1f82e483451669d5d77bfc1b8fb",
      "patch": "@@ -1168,7 +1168,7 @@ rust_compute_range (struct type *type, struct value *range,\n \n /* A helper for rust_evaluate_subexp that handles BINOP_SUBSCRIPT.  */\n \n-static struct value *\n+struct value *\n rust_subscript (struct type *expect_type, struct expression *exp,\n \t\tenum noside noside, bool for_addr,\n \t\tstruct value *lhs, struct value *rhs)"
    }
  ]
}