{
  "sha": "809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODA5ZjZlYjMzMjFlZGI5MWZjYzk2YjFmODM1M2RiZmUyZjc2MmZhNw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-02T20:31:45Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T16:57:41Z"
    },
    "message": "libctf: add new dynhash functions\n\nFuture commits will use these.\n\nctf_dynhash_elements: count elements in a dynhash\nctf_dynhash_lookup_kv: look up and return pointers to the original key\n                       and value in a dynhash (the only way of getting\n                       a reference to the original key)\nctf_dynhash_iter_find: iterate until an item is found, then return its\n                       key\nctf_dynhash_cinsert: insert a const key / value into a dynhash (a thim\n                     wrapper in a new header dedicated to inline\n                     functions).\n\nAs with the rest of ctf_dynhash, this is not public API.  No impact\non existing callers is expected.\n\nlibctf/\n\t* ctf-inlines.h: New file.\n\t* ctf-impl.h: Include it.\n\t(ctf_hash_iter_find_f): New typedef.\n\t(ctf_dynhash_elements): New.\n\t(ctf_dynhash_lookup_kv): New.\n\t(ctf_dynhash_iter_find): New.\n\t* ctf-hash.c (ctf_dynhash_lookup_kv): New.\n\t(ctf_traverse_find_cb_arg_t): New.\n\t(ctf_hashtab_traverse_find): New.\n\t(ctf_dynhash_iter_find): New.\n\t(ctf_dynhash_elements): New.",
    "tree": {
      "sha": "0dfd5c1aac3b5580c483d03984ce49bbb01282f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0dfd5c1aac3b5580c483d03984ce49bbb01282f2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "469e75b621f6ee0b235d5dbe7566483d356d178d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/469e75b621f6ee0b235d5dbe7566483d356d178d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/469e75b621f6ee0b235d5dbe7566483d356d178d"
    }
  ],
  "stats": {
    "total": 122,
    "additions": 122,
    "deletions": 0
  },
  "files": [
    {
      "sha": "a7a31e70fc1b2c58bf697a9e0e06842fe3c1049c",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
      "patch": "@@ -1,3 +1,17 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-inlines.h: New file.\n+\t* ctf-impl.h: Include it.\n+\t(ctf_hash_iter_find_f): New typedef.\n+\t(ctf_dynhash_elements): New.\n+\t(ctf_dynhash_lookup_kv): New.\n+\t(ctf_dynhash_iter_find): New.\n+\t* ctf-hash.c (ctf_dynhash_lookup_kv): New.\n+\t(ctf_traverse_find_cb_arg_t): New.\n+\t(ctf_hashtab_traverse_find): New.\n+\t(ctf_dynhash_iter_find): New.\n+\t(ctf_dynhash_elements): New.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-impl.h [!__GNUC__] (__extension__): Define to nothing."
    },
    {
      "sha": "4696fcb2d435f6f3633fc001aa5b67af44d8e6c1",
      "filename": "libctf/ctf-hash.c",
      "status": "modified",
      "additions": 55,
      "deletions": 0,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ctf-hash.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ctf-hash.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-hash.c?ref=809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
      "patch": "@@ -218,6 +218,12 @@ ctf_dynhash_empty (ctf_dynhash_t *hp)\n   htab_empty (hp->htab);\n }\n \n+size_t\n+ctf_dynhash_elements (ctf_dynhash_t *hp)\n+{\n+  return htab_elements (hp->htab);\n+}\n+\n void *\n ctf_dynhash_lookup (ctf_dynhash_t *hp, const void *key)\n {\n@@ -231,6 +237,26 @@ ctf_dynhash_lookup (ctf_dynhash_t *hp, const void *key)\n   return NULL;\n }\n \n+/* TRUE/FALSE return.  */\n+int\n+ctf_dynhash_lookup_kv (ctf_dynhash_t *hp, const void *key,\n+\t\t       const void **orig_key, void **value)\n+{\n+  ctf_helem_t **slot;\n+\n+  slot = ctf_hashtab_lookup (hp->htab, key, NO_INSERT);\n+\n+  if (slot)\n+    {\n+      if (orig_key)\n+\t*orig_key = (*slot)->key;\n+      if (value)\n+\t*value = (*slot)->value;\n+      return 1;\n+    }\n+  return 0;\n+}\n+\n typedef struct ctf_traverse_cb_arg\n {\n   ctf_hash_iter_f fun;\n@@ -254,6 +280,35 @@ ctf_dynhash_iter (ctf_dynhash_t *hp, ctf_hash_iter_f fun, void *arg_)\n   htab_traverse (hp->htab, ctf_hashtab_traverse, &arg);\n }\n \n+typedef struct ctf_traverse_find_cb_arg\n+{\n+  ctf_hash_iter_find_f fun;\n+  void *arg;\n+  void *found_key;\n+} ctf_traverse_find_cb_arg_t;\n+\n+static int\n+ctf_hashtab_traverse_find (void **slot, void *arg_)\n+{\n+  ctf_helem_t *helem = *((ctf_helem_t **) slot);\n+  ctf_traverse_find_cb_arg_t *arg = (ctf_traverse_find_cb_arg_t *) arg_;\n+\n+  if (arg->fun (helem->key, helem->value, arg->arg))\n+    {\n+      arg->found_key = helem->key;\n+      return 0;\n+    }\n+  return 1;\n+}\n+\n+void *\n+ctf_dynhash_iter_find (ctf_dynhash_t *hp, ctf_hash_iter_find_f fun, void *arg_)\n+{\n+  ctf_traverse_find_cb_arg_t arg = { fun, arg_, NULL };\n+  htab_traverse (hp->htab, ctf_hashtab_traverse_find, &arg);\n+  return arg.found_key;\n+}\n+\n typedef struct ctf_traverse_remove_cb_arg\n {\n   struct htab *htab;"
    },
    {
      "sha": "3e097795bc6bfc6e82fc5740b6796e8b32e2acc4",
      "filename": "libctf/ctf-impl.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ctf-impl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ctf-impl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-impl.h?ref=809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
      "patch": "@@ -382,6 +382,7 @@ typedef void (*ctf_hash_free_fun) (void *);\n \n typedef void (*ctf_hash_iter_f) (void *key, void *value, void *arg);\n typedef int (*ctf_hash_iter_remove_f) (void *key, void *value, void *arg);\n+typedef int (*ctf_hash_iter_find_f) (void *key, void *value, void *arg);\n \n extern ctf_hash_t *ctf_hash_create (unsigned long, ctf_hash_fun, ctf_hash_eq_fun);\n extern int ctf_hash_insert_type (ctf_hash_t *, ctf_file_t *, uint32_t, uint32_t);\n@@ -394,12 +395,17 @@ extern ctf_dynhash_t *ctf_dynhash_create (ctf_hash_fun, ctf_hash_eq_fun,\n \t\t\t\t\t  ctf_hash_free_fun, ctf_hash_free_fun);\n extern int ctf_dynhash_insert (ctf_dynhash_t *, void *, void *);\n extern void ctf_dynhash_remove (ctf_dynhash_t *, const void *);\n+extern size_t ctf_dynhash_elements (ctf_dynhash_t *);\n extern void ctf_dynhash_empty (ctf_dynhash_t *);\n extern void *ctf_dynhash_lookup (ctf_dynhash_t *, const void *);\n+extern int ctf_dynhash_lookup_kv (ctf_dynhash_t *, const void *key,\n+\t\t\t\t  const void **orig_key, void **value);\n extern void ctf_dynhash_destroy (ctf_dynhash_t *);\n extern void ctf_dynhash_iter (ctf_dynhash_t *, ctf_hash_iter_f, void *);\n extern void ctf_dynhash_iter_remove (ctf_dynhash_t *, ctf_hash_iter_remove_f,\n \t\t\t\t     void *);\n+extern void *ctf_dynhash_iter_find (ctf_dynhash_t *, ctf_hash_iter_find_f,\n+\t\t\t\t    void *);\n \n #define\tctf_list_prev(elem)\t((void *)(((ctf_list_t *)(elem))->l_prev))\n #define\tctf_list_next(elem)\t((void *)(((ctf_list_t *)(elem))->l_next))\n@@ -492,6 +498,8 @@ extern const char _CTF_NULLSTR[];\t/* empty string */\n extern int _libctf_version;\t/* library client version */\n extern int _libctf_debug;\t/* debugging messages enabled */\n \n+#include \"ctf-inlines.h\"\n+\n #ifdef\t__cplusplus\n }\n #endif"
    },
    {
      "sha": "ad74b39f5390f310982ee96aa8f865afb2cb685f",
      "filename": "libctf/ctf-inlines.h",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ctf-inlines.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/809f6eb3321edb91fcc96b1f8353dbfe2f762fa7/libctf/ctf-inlines.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-inlines.h?ref=809f6eb3321edb91fcc96b1f8353dbfe2f762fa7",
      "patch": "@@ -0,0 +1,45 @@\n+/* Inline functions.\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of libctf.\n+\n+   libctf is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+\n+   This program is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n+   See the GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; see the file COPYING.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef\t_CTF_INLINES_H\n+#define\t_CTF_INLINES_H\n+\n+#ifdef\t__cplusplus\n+extern \"C\"\n+{\n+#endif\n+\n+#include \"config.h\"\n+\n+#ifndef _libctf_malloc_\n+#error \"ctf-inlines.h\" should not be included directly: include \"ctf-impl.h\".\n+#endif\n+\n+\n+static inline int\n+ctf_dynhash_cinsert (ctf_dynhash_t *h, const void *k, const void *v)\n+{\n+  return ctf_dynhash_insert (h, (void *) k, (void *) v);\n+}\n+\n+#ifdef\t__cplusplus\n+}\n+#endif\n+\n+#endif /* _CTF_INLINES_H */"
    }
  ]
}