{
  "sha": "4873e2438cf87b14476459ca90b58ed8a7401181",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDg3M2UyNDM4Y2Y4N2IxNDQ3NjQ1OWNhOTBiNThlZDhhNzQwMTE4MQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-03-06T07:55:52Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-03-06T07:55:52Z"
    },
    "message": "x86: drop/replace IgnoreSize\n\nEven after commit dc2be329b950 (\"i386: Only check suffix in instruction\nmnemonic\"), by which many of its uses have become unnecessary (some were\nunnecessary even before), IgnoreSize is still used for various slightly\ndifferent purposes:\n- to suppress emission of an operand size prefix,\n- in Intel syntax mode to zap \"derived\" suffixes in certain cases and to\n  skip certain checks of remaining \"derived\" suffixes,\n- to suppress ambiguous operand size / missing suffix diagnostics,\n- for prefixes to suppress the \"stand-alone ... prefix\" warning.\nDrop entirely unnecessary ones and where possible also replace instances\nby the more focused (because of having just a single purpose) NoRex64.\n\nTo further restrict when IgnoreSize is needed, also generalize the logic\nwhen to skip a template because of a present or derived L or Q suffix,\nby skipping immediate operands. Additionally consider mask registers and\nVecSIB there.\n\nNote that for the time being the attribute needs to be kept in place on\nMMX/SSE/etc insns (but not on VEX/EVEX encoded ones unless an operand\ntemplate of them allows for only non-SIMD-register actuals) allowing for\nDword operands - the logic when to emit a data size prefix would need\nfurther adjustment first.\n\nNote also that the memory forms of {,v}pinsrw get their permission for\nan L or Q suffix dropped. I can only assume that it being this way was a\ncut-and-paste mistake from the register forms, as the latter\nspecifically have NoRex64 set, and the {,v}pextrw counterparts don't\nallow these suffixes either.\n\nConvert VexW= again to their respective VexW* on lines touched anyway.",
    "tree": {
      "sha": "92d50c7efb56473c873b9f75e96b2b8c347d0595",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/92d50c7efb56473c873b9f75e96b2b8c347d0595"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4873e2438cf87b14476459ca90b58ed8a7401181",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4873e2438cf87b14476459ca90b58ed8a7401181",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4873e2438cf87b14476459ca90b58ed8a7401181",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4873e2438cf87b14476459ca90b58ed8a7401181/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e365e234ab7fc245656ec24131afce2b1327576e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e365e234ab7fc245656ec24131afce2b1327576e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e365e234ab7fc245656ec24131afce2b1327576e"
    }
  ],
  "stats": {
    "total": 3231,
    "additions": 1624,
    "deletions": 1607
  },
  "files": [
    {
      "sha": "addef7e50226dc55547feee0ab0dfab036f508cf",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4873e2438cf87b14476459ca90b58ed8a7401181/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4873e2438cf87b14476459ca90b58ed8a7401181/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=4873e2438cf87b14476459ca90b58ed8a7401181",
      "patch": "@@ -1,3 +1,10 @@\n+2020-03-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (match_template): Extend code in logic\n+\trejecting certain suffixes in certain modes to also cover mask\n+\tregister use and VecSIB. Drop special casing of broadcast. Skip\n+\timmediates in the check.\n+\n 2020-03-06  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (match_template): Fold duplicate code in"
    },
    {
      "sha": "3b84ca75ef8d8c2f769f414ffd0c7df0a0572aa6",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4873e2438cf87b14476459ca90b58ed8a7401181/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4873e2438cf87b14476459ca90b58ed8a7401181/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=4873e2438cf87b14476459ca90b58ed8a7401181",
      "patch": "@@ -5877,6 +5877,7 @@ match_template (char mnem_suffix)\n       /* In general, don't allow\n \t - 64-bit operands outside of 64-bit mode,\n \t - 32-bit operands on pre-386.  */\n+      j = i.imm_operands + (t->operands > i.imm_operands + 1);\n       if (((i.suffix == QWORD_MNEM_SUFFIX\n \t    && flag_code != CODE_64BIT\n \t    && (t->base_opcode != 0x0fc7\n@@ -5885,13 +5886,16 @@ match_template (char mnem_suffix)\n \t       && !cpu_arch_flags.bitfield.cpui386))\n \t  && (intel_syntax\n \t      ? (t->opcode_modifier.mnemonicsize != IGNORESIZE\n-\t\t && !t->opcode_modifier.broadcast\n \t\t && !intel_float_operand (t->name))\n \t      : intel_float_operand (t->name) != 2)\n-\t  && ((operand_types[0].bitfield.class != RegMMX\n-\t       && operand_types[0].bitfield.class != RegSIMD)\n-\t      || (operand_types[t->operands > 1].bitfield.class != RegMMX\n-\t\t  && operand_types[t->operands > 1].bitfield.class != RegSIMD)))\n+\t  && (t->operands == i.imm_operands\n+\t      || (operand_types[i.imm_operands].bitfield.class != RegMMX\n+\t       && operand_types[i.imm_operands].bitfield.class != RegSIMD\n+\t       && operand_types[i.imm_operands].bitfield.class != RegMask)\n+\t      || (operand_types[j].bitfield.class != RegMMX\n+\t\t  && operand_types[j].bitfield.class != RegSIMD\n+\t\t  && operand_types[j].bitfield.class != RegMask))\n+\t  && !t->opcode_modifier.vecsib)\n \tcontinue;\n \n       /* Do not verify operands when there are none.  */"
    },
    {
      "sha": "65170a2e3e4df334a38606ddb01ce9a134fb8237",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4873e2438cf87b14476459ca90b58ed8a7401181/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4873e2438cf87b14476459ca90b58ed8a7401181/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=4873e2438cf87b14476459ca90b58ed8a7401181",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from various SIMD insns. Replace\n+\tVexW= by VexW* and VexVVVV=1 by just VexVVVV where applicable.\n+\t* i386-tbl.h: Re-generate.\n+\n 2020-03-06  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-opc.tbl (fildll, fistpll, fisttpll): Add ATTSyntax."
    },
    {
      "sha": "48f5cf02a05c10bc2e13fe849a06fdd68a38c8fd",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 699,
      "deletions": 699,
      "changes": 1398,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4873e2438cf87b14476459ca90b58ed8a7401181/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4873e2438cf87b14476459ca90b58ed8a7401181/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=4873e2438cf87b14476459ca90b58ed8a7401181"
    },
    {
      "sha": "ea5d2747ac4fa33bee169f5f5763b132789df2bd",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 903,
      "deletions": 903,
      "changes": 1806,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4873e2438cf87b14476459ca90b58ed8a7401181/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4873e2438cf87b14476459ca90b58ed8a7401181/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=4873e2438cf87b14476459ca90b58ed8a7401181"
    }
  ]
}