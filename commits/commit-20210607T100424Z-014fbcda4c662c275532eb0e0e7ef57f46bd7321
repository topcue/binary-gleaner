{
  "sha": "014fbcda4c662c275532eb0e0e7ef57f46bd7321",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDE0ZmJjZGE0YzY2MmMyNzU1MzJlYjBlMGU3ZWY1N2Y0NmJkNzMyMQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-07T10:04:24Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-07T10:04:24Z"
    },
    "message": "x86: allow unary operators to start a memory operand\n\nSo far only - was permitted, but +, !, and ~ ought to be treated the\nsame.\n\nRather than adding them to digit_chars[], which was at least odd to have\nheld - so far, drop this array and its wrapper macro for being used just\nonce.\n\nWhile adjusting this logic, also include [ in the characters which may\nstart a displacement expression - gas generally treats [] as equivalent\nto ().",
    "tree": {
      "sha": "6731012674c8d09b313da22e71e5bee039c5d0fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6731012674c8d09b313da22e71e5bee039c5d0fc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/014fbcda4c662c275532eb0e0e7ef57f46bd7321",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/014fbcda4c662c275532eb0e0e7ef57f46bd7321",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/014fbcda4c662c275532eb0e0e7ef57f46bd7321",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/014fbcda4c662c275532eb0e0e7ef57f46bd7321/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9d299bea8cca3bfd91a3c7a47510c52a9e829858",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d299bea8cca3bfd91a3c7a47510c52a9e829858",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9d299bea8cca3bfd91a3c7a47510c52a9e829858"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 40,
    "deletions": 14
  },
  "files": [
    {
      "sha": "cc6f332d832ca802bbb36acef31315cf6a51f958",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=014fbcda4c662c275532eb0e0e7ef57f46bd7321",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-07  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (digit_chars, is_digit_char): Delete.\n+\t(md_begin): Fold digit and lower-case letter handling.\n+\t(starts_memory_operand): Permit more characters.\n+\t* testsuite/gas/i386/unary.s, testsuite/gas/i386/unary.d: New.\n+\t* testsuite/gas/i386/i386.exp: Run new test.\n+\n 2021-06-07  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (starts_memory_operand): New."
    },
    {
      "sha": "bbdb5bd4c577d23a1725398fa5673ff316cf01a9",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 3,
      "deletions": 14,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=014fbcda4c662c275532eb0e0e7ef57f46bd7321",
      "patch": "@@ -518,15 +518,13 @@ static char mnemonic_chars[256];\n static char register_chars[256];\n static char operand_chars[256];\n static char identifier_chars[256];\n-static char digit_chars[256];\n \n /* Lexical macros.  */\n #define is_mnemonic_char(x) (mnemonic_chars[(unsigned char) x])\n #define is_operand_char(x) (operand_chars[(unsigned char) x])\n #define is_register_char(x) (register_chars[(unsigned char) x])\n #define is_space_char(x) ((x) == ' ')\n #define is_identifier_char(x) (identifier_chars[(unsigned char) x])\n-#define is_digit_char(x) (digit_chars[(unsigned char) x])\n \n /* All non-digit non-letter characters that may occur in an operand.  */\n static char operand_special_chars[] = \"%$-+(,)*._~/<>|&^!:[@]\";\n@@ -3140,14 +3138,7 @@ md_begin (void)\n \n     for (c = 0; c < 256; c++)\n       {\n-\tif (ISDIGIT (c))\n-\t  {\n-\t    digit_chars[c] = c;\n-\t    mnemonic_chars[c] = c;\n-\t    register_chars[c] = c;\n-\t    operand_chars[c] = c;\n-\t  }\n-\telse if (ISLOWER (c))\n+\tif (ISDIGIT (c) || ISLOWER (c))\n \t  {\n \t    mnemonic_chars[c] = c;\n \t    register_chars[c] = c;\n@@ -3185,7 +3176,6 @@ md_begin (void)\n     identifier_chars['?'] = '?';\n     operand_chars['?'] = '?';\n #endif\n-    digit_chars['-'] = '-';\n     mnemonic_chars['_'] = '_';\n     mnemonic_chars['-'] = '-';\n     mnemonic_chars['.'] = '.';\n@@ -11370,10 +11360,9 @@ maybe_adjust_templates (void)\n \n static INLINE bool starts_memory_operand (char c)\n {\n-  return is_digit_char (c)\n+  return ISDIGIT (c)\n \t || is_identifier_char (c)\n-\t || c == '\"'\n-\t || c == '(';\n+\t || strchr (\"([\\\"+-!~\", c);\n }\n \n /* Parse OPERAND_STRING into the i386_insn structure I.  Returns zero"
    },
    {
      "sha": "db52df4152f4e4857d547554ffbb83597c8fc9ac",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=014fbcda4c662c275532eb0e0e7ef57f46bd7321",
      "patch": "@@ -97,6 +97,7 @@ if [gas_32_check] then {\n     run_list_test \"equ-bad\"\n     run_dump_test \"divide\"\n     run_dump_test \"quoted\"\n+    run_dump_test \"unary\"\n     run_dump_test \"padlock\"\n     run_dump_test \"crx\"\n     run_list_test \"cr-err\" \"\""
    },
    {
      "sha": "1a4cfaa8480f485a70c8dd3d50d1455aa02b4e58",
      "filename": "gas/testsuite/gas/i386/unary.d",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/testsuite/gas/i386/unary.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/testsuite/gas/i386/unary.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/unary.d?ref=014fbcda4c662c275532eb0e0e7ef57f46bd7321",
      "patch": "@@ -0,0 +1,17 @@\n+#objdump: -dr\n+#name: i386 memory operands w/ unary operators\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <unary>:\n+[ \t]*[a-f0-9]+:[ \t]*8b 40 01[\t ]+mov    0x1\\(%eax\\),%eax\n+[ \t]*[a-f0-9]+:[ \t]*8b 40 ff[\t ]+mov    -0x1\\(%eax\\),%eax\n+[ \t]*[a-f0-9]+:[ \t]*8b 00[\t ]+mov    \\(%eax\\),%eax\n+[ \t]*[a-f0-9]+:[ \t]*8b 40 fe[\t ]+mov    -0x2\\(%eax\\),%eax\n+[ \t]*[a-f0-9]+:[ \t]*8b 40 01[\t ]+mov    0x1\\(%eax\\),%eax\n+[ \t]*[a-f0-9]+:[ \t]*8b 40 ff[\t ]+mov    -0x1\\(%eax\\),%eax\n+[ \t]*[a-f0-9]+:[ \t]*8b 00[\t ]+mov    \\(%eax\\),%eax\n+[ \t]*[a-f0-9]+:[ \t]*8b 40 fe[\t ]+mov    -0x2\\(%eax\\),%eax\n+#pass"
    },
    {
      "sha": "e72121a86b356d70307bf80bc060be4b32442fb8",
      "filename": "gas/testsuite/gas/i386/unary.s",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/testsuite/gas/i386/unary.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/014fbcda4c662c275532eb0e0e7ef57f46bd7321/gas/testsuite/gas/i386/unary.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/unary.s?ref=014fbcda4c662c275532eb0e0e7ef57f46bd7321",
      "patch": "@@ -0,0 +1,11 @@\n+\t.text\n+unary:\n+\tmov\t+1(%eax), %eax\n+\tmov\t-1(%eax), %eax\n+\tmov\t!1(%eax), %eax\n+\tmov\t~1(%eax), %eax\n+\n+\tmov\t[+1](%eax), %eax\n+\tmov\t[-1](%eax), %eax\n+\tmov\t[!1](%eax), %eax\n+\tmov\t[~1](%eax), %eax"
    }
  ]
}