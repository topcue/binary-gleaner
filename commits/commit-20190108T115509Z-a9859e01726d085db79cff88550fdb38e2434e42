{
  "sha": "a9859e01726d085db79cff88550fdb38e2434e42",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTk4NTllMDE3MjZkMDg1ZGI3OWNmZjg4NTUwZmRiMzhlMjQzNGU0Mg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-01-08T11:51:57Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-01-08T11:55:09Z"
    },
    "message": "PR24065, 32-bit objcopy fails with 64-bit address ... out of range\n\n\tPR 23699\n\tPR 24065\n\t* ihex.c (ihex_write_object_contents): Properly check 32-bit\n\taddress range.",
    "tree": {
      "sha": "c9a7e89fd796fe42b7c13b35f227f979b773a7f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c9a7e89fd796fe42b7c13b35f227f979b773a7f4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a9859e01726d085db79cff88550fdb38e2434e42",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9859e01726d085db79cff88550fdb38e2434e42",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a9859e01726d085db79cff88550fdb38e2434e42",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9859e01726d085db79cff88550fdb38e2434e42/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "171b8e19575654ab32321eb99f3fd112663ae7fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/171b8e19575654ab32321eb99f3fd112663ae7fa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/171b8e19575654ab32321eb99f3fd112663ae7fa"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 26,
    "deletions": 15
  },
  "files": [
    {
      "sha": "3b24c239e50444afed35eb2b47ec72b1b8c1889f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9859e01726d085db79cff88550fdb38e2434e42/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9859e01726d085db79cff88550fdb38e2434e42/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a9859e01726d085db79cff88550fdb38e2434e42",
      "patch": "@@ -1,3 +1,10 @@\n+2019-01-08  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23699\n+\tPR 24065\n+\t* ihex.c (ihex_write_object_contents): Properly check 32-bit\n+\taddress range.\n+\n 2019-01-05  Yoshinori Sato <ysato@users.sourceforge.jp>\n \n \t* bfd/archures.c: Add bfd_mach_rx_v2 and bfd_mach_rx_v3."
    },
    {
      "sha": "101e0a76155fc48f95312c08307739cf9c1ee5eb",
      "filename": "bfd/ihex.c",
      "status": "modified",
      "additions": 19,
      "deletions": 15,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9859e01726d085db79cff88550fdb38e2434e42/bfd/ihex.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9859e01726d085db79cff88550fdb38e2434e42/bfd/ihex.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ihex.c?ref=a9859e01726d085db79cff88550fdb38e2434e42",
      "patch": "@@ -775,25 +775,29 @@ ihex_write_object_contents (bfd *abfd)\n       bfd_vma where;\n       bfd_byte *p;\n       bfd_size_type count;\n-      const bfd_vma sign = (bfd_vma) 0xffffffff80000000ULL;\n-      const bfd_vma top = (bfd_vma) 0xffffffff00000000ULL;\n \n       where = l->where;\n \n-      /* Check for unacceptable addresses sign extension.\n-\t See PR 23699 for more details.  */\n-      if ((where & sign) == top\n-\t  || ((where & top) != 0 && (where & top) != top))\n-       {\n-         _bfd_error_handler\n-           /* xgettext:c-format */\n-           (_(\"%pB 64-bit address %#\" PRIx64 \" out of range for Intel Hex file\"),\n-            abfd, (uint64_t) where);\n-         bfd_set_error (bfd_error_bad_value);\n-         return FALSE;\n-       }\n-\n+#ifdef BFD64\n+      /* IHex only supports 32-bit addresses, and we want to check\n+\t that 64-bit addresses are in range.  This isn't quite as\n+\t obvious as it may seem, since some targets have 32-bit\n+\t addresses that are sign extended to 64 bits.  So complain\n+\t only if addresses overflow both unsigned and signed 32-bit\n+\t integers.  */\n+      if (where > 0xffffffff\n+\t  && where + 0x80000000 > 0xffffffff)\n+\t{\n+\t  _bfd_error_handler\n+\t    /* xgettext:c-format */\n+\t    (_(\"%pB 64-bit address %#\" PRIx64\n+\t       \" out of range for Intel Hex file\"),\n+\t     abfd, (uint64_t) where);\n+\t  bfd_set_error (bfd_error_bad_value);\n+\t  return FALSE;\n+\t}\n       where &= 0xffffffff;\n+#endif\n \n       p = l->data;\n       count = l->size;"
    }
  ]
}