{
  "sha": "58e07198f34c3a8bb7d64392e8b978a0d741244e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NThlMDcxOThmMzRjM2E4YmI3ZDY0MzkyZThiOTc4YTBkNzQxMjQ0ZQ==",
  "commit": {
    "author": {
      "name": "Christos Zoulas",
      "email": "christos@zoulas.com",
      "date": "2019-06-10T13:41:35Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-10T13:41:35Z"
    },
    "message": "Add support for NetBSD/sh3 core file sections.  Merge multiple copies of auxv section creation into one function.\n\n\tPR 24650\n\t* elf.c (elfcore_make_auxv_note_section): New function.\n\t(elfcore_grok_note): Use it.\n\t(elfcore_grok_freebsd_note): Likewise.\n\t(elfcore_grok_openbsd_note): Likewise.\n\t(elfcore_grok_netbsd_note): Likewise.  Plus add support for\n\tNT_NETBSDCORE_AUXV notes.",
    "tree": {
      "sha": "0eb790d1b10a9127593d9202f3e507ccf40615b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0eb790d1b10a9127593d9202f3e507ccf40615b6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/58e07198f34c3a8bb7d64392e8b978a0d741244e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58e07198f34c3a8bb7d64392e8b978a0d741244e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/58e07198f34c3a8bb7d64392e8b978a0d741244e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58e07198f34c3a8bb7d64392e8b978a0d741244e/comments",
  "author": {
    "login": "zoulasc",
    "id": 579573,
    "node_id": "MDQ6VXNlcjU3OTU3Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/579573?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zoulasc",
    "html_url": "https://github.com/zoulasc",
    "followers_url": "https://api.github.com/users/zoulasc/followers",
    "following_url": "https://api.github.com/users/zoulasc/following{/other_user}",
    "gists_url": "https://api.github.com/users/zoulasc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zoulasc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zoulasc/subscriptions",
    "organizations_url": "https://api.github.com/users/zoulasc/orgs",
    "repos_url": "https://api.github.com/users/zoulasc/repos",
    "events_url": "https://api.github.com/users/zoulasc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zoulasc/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "25ce02ee7b7667fb7bb882421ff869c080777bee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25ce02ee7b7667fb7bb882421ff869c080777bee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/25ce02ee7b7667fb7bb882421ff869c080777bee"
    }
  ],
  "stats": {
    "total": 96,
    "additions": 57,
    "deletions": 39
  },
  "files": [
    {
      "sha": "72f35b8873884062573c80c9f50c0cce52fde2b6",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58e07198f34c3a8bb7d64392e8b978a0d741244e/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58e07198f34c3a8bb7d64392e8b978a0d741244e/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=58e07198f34c3a8bb7d64392e8b978a0d741244e",
      "patch": "@@ -1,3 +1,13 @@\n+2019-06-10  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24650\n+\t* elf.c (elfcore_make_auxv_note_section): New function.\n+\t(elfcore_grok_note): Use it.\n+\t(elfcore_grok_freebsd_note): Likewise.\n+\t(elfcore_grok_openbsd_note): Likewise.\n+\t(elfcore_grok_netbsd_note): Likewise.  Plus add support for\n+\tNT_NETBSDCORE_AUXV notes.\n+\n 2019-06-06  Sudakshina Das  <sudi.das@arm.com>\n \n \t* elfxx-aarch64.c (_bfd_aarch64_elf_link_setup_gnu_properties): Set"
    },
    {
      "sha": "2094fca1ff54bb077c8750993d3d46a30e73cb8a",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 47,
      "deletions": 39,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58e07198f34c3a8bb7d64392e8b978a0d741244e/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58e07198f34c3a8bb7d64392e8b978a0d741244e/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=58e07198f34c3a8bb7d64392e8b978a0d741244e",
      "patch": "@@ -9236,6 +9236,23 @@ _bfd_elfcore_make_pseudosection (bfd *abfd,\n   return elfcore_maybe_make_sect (abfd, name, sect);\n }\n \n+static bfd_boolean\n+elfcore_make_auxv_note_section (bfd *abfd, Elf_Internal_Note *note,\n+\t\t\t\tsize_t offs)\n+{\n+  asection *sect = bfd_make_section_anyway_with_flags (abfd, \".auxv\",\n+\t\t\t\t\t\t       SEC_HAS_CONTENTS);\n+\n+  if (sect == NULL)\n+    return FALSE;\n+\n+  sect->size = note->descsz - offs;\n+  sect->filepos = note->descpos + offs;\n+  sect->alignment_power = 1 + bfd_get_arch_size (abfd) / 32;\n+\n+  return TRUE;\n+}\n+\n /* prstatus_t exists on:\n      solaris 2.5+\n      linux 2.[01] + glibc\n@@ -10177,18 +10194,7 @@ elfcore_grok_note (bfd *abfd, Elf_Internal_Note *note)\n #endif\n \n     case NT_AUXV:\n-      {\n-\tasection *sect = bfd_make_section_anyway_with_flags (abfd, \".auxv\",\n-\t\t\t\t\t\t\t     SEC_HAS_CONTENTS);\n-\n-\tif (sect == NULL)\n-\t  return FALSE;\n-\tsect->size = note->descsz;\n-\tsect->filepos = note->descpos;\n-\tsect->alignment_power = 1 + bfd_get_arch_size (abfd) / 32;\n-\n-\treturn TRUE;\n-      }\n+      return elfcore_make_auxv_note_section (abfd, note, 0);\n \n     case NT_FILE:\n       return elfcore_make_note_pseudosection (abfd, \".note.linuxcore.file\",\n@@ -10434,18 +10440,7 @@ elfcore_grok_freebsd_note (bfd *abfd, Elf_Internal_Note *note)\n \t\t\t\t\t      note);\n \n     case NT_FREEBSD_PROCSTAT_AUXV:\n-      {\n-\tasection *sect = bfd_make_section_anyway_with_flags (abfd, \".auxv\",\n-\t\t\t\t\t\t\t     SEC_HAS_CONTENTS);\n-\n-\tif (sect == NULL)\n-\t  return FALSE;\n-\tsect->size = note->descsz - 4;\n-\tsect->filepos = note->descpos + 4;\n-\tsect->alignment_power = 1 + bfd_get_arch_size (abfd) / 32;\n-\n-\treturn TRUE;\n-      }\n+      return elfcore_make_auxv_note_section (abfd, note, 4);\n \n     case NT_X86_XSTATE:\n       if (note->namesz == 8)\n@@ -10509,17 +10504,24 @@ elfcore_grok_netbsd_note (bfd *abfd, Elf_Internal_Note *note)\n   if (elfcore_netbsd_get_lwpid (note, &lwp))\n     elf_tdata (abfd)->core->lwpid = lwp;\n \n-  if (note->type == NT_NETBSDCORE_PROCINFO)\n+  switch (note->type)\n     {\n+    case NT_NETBSDCORE_PROCINFO:\n       /* NetBSD-specific core \"procinfo\".  Note that we expect to\n \t find this note before any of the others, which is fine,\n \t since the kernel writes this note out first when it\n \t creates a core file.  */\n-\n       return elfcore_grok_netbsd_procinfo (abfd, note);\n+#ifdef NT_NETBSDCORE_AUXV\n+    case NT_NETBSDCORE_AUXV:\n+      /* NetBSD-specific Elf Auxiliary Vector data. */\n+      return elfcore_make_auxv_note_section (abfd, note, 4);\n+#endif\n+    default:\n+      break;\n     }\n \n-  /* As of Jan 2002 there are no other machine-independent notes\n+  /* As of March 2017 there are no other machine-independent notes\n      defined for NetBSD core files.  If the note type is less\n      than the start of the machine-dependent note types, we don't\n      understand it.  */\n@@ -10547,6 +10549,23 @@ elfcore_grok_netbsd_note (bfd *abfd, Elf_Internal_Note *note)\n \t  return TRUE;\n \t}\n \n+      /* On SuperH, PT_GETREGS == mach+3 and PT_GETFPREGS == mach+5.\n+\t There's also old PT___GETREGS40 == mach + 1 for old reg\n+\t structure which lacks GBR.  */\n+\n+    case bfd_arch_sh:\n+      switch (note->type)\n+\t{\n+\tcase NT_NETBSDCORE_FIRSTMACH+3:\n+\t  return elfcore_make_note_pseudosection (abfd, \".reg\", note);\n+\n+\tcase NT_NETBSDCORE_FIRSTMACH+5:\n+\t  return elfcore_make_note_pseudosection (abfd, \".reg2\", note);\n+\n+\tdefault:\n+\t  return TRUE;\n+\t}\n+\n       /* On all other arch's, PT_GETREGS == mach+1 and\n \t PT_GETFPREGS == mach+3.  */\n \n@@ -10603,18 +10622,7 @@ elfcore_grok_openbsd_note (bfd *abfd, Elf_Internal_Note *note)\n     return elfcore_make_note_pseudosection (abfd, \".reg-xfp\", note);\n \n   if (note->type == NT_OPENBSD_AUXV)\n-    {\n-      asection *sect = bfd_make_section_anyway_with_flags (abfd, \".auxv\",\n-\t\t\t\t\t\t\t   SEC_HAS_CONTENTS);\n-\n-      if (sect == NULL)\n-\treturn FALSE;\n-      sect->size = note->descsz;\n-      sect->filepos = note->descpos;\n-      sect->alignment_power = 1 + bfd_get_arch_size (abfd) / 32;\n-\n-      return TRUE;\n-    }\n+    return elfcore_make_auxv_note_section (abfd, note, 0);\n \n   if (note->type == NT_OPENBSD_WCOOKIE)\n     {"
    }
  ]
}