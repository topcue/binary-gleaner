{
  "sha": "8e25bafe932b090850854321b816685b2462c17e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGUyNWJhZmU5MzJiMDkwODUwODU0MzIxYjgxNjY4NWIyNDYyYzE3ZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-05-02T08:12:30Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-02T12:53:10Z"
    },
    "message": "gdb: Convert language la_get_compile_instance field to a method\n\nThis commit changes the language_data::la_get_compile_instance\nfunction pointer member variable into a member function of\nlanguage_defn.  Unlike previous commits converting fields of\nlanguage_data to member function in language_defn, this field is NULL\nfor some languages.  As a result I had to change the API slightly so\nthat the base language_defn class provides an implementation.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Delete la_get_compile_instance\n\tinitializer.\n\t* c-lang.c (class compile_instance): Declare.\n\t(c_language_data): Delete la_get_compile_instance initializer.\n\t(c_language::get_compile_instance): New member function.\n\t(cplus_language_data): Delete la_get_compile_instance initializer.\n\t(cplus_language::get_compile_instance): New member function.\n\t(asm_language_data): Delete la_get_compile_instance initializer.\n\t(minimal_language_data): Likewise.\n\t* c-lang.h (c_get_compile_context): Update comment.\n\t(cplus_get_compile_context): Update comment.\n\t* compile/compile.c (compile_to_object): Update calls, don't rely\n\ton function pointer being NULL.\n\t* d-lang.c (d_language_data): Delete la_get_compile_instance\n\tinitializer.\n\t* f-lang.c (f_language_data): Likewise.\n\t* go-lang.c (go_language_data): Likewise.\n\t* language.c (unknown_language_data): Likewise.\n\t(auto_language_data): Likewise.\n\t* language.h (language_data): Delete la_get_compile_instance field.\n\t(language_defn::get_compile_instance): New member function.\n\t* m2-lang.c (m2_language_data): Delete la_get_compile_instance\n\tinitializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.",
    "tree": {
      "sha": "1880a9eb0b407aa9aa4286a8dc2f2a2a6e36d153",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1880a9eb0b407aa9aa4286a8dc2f2a2a6e36d153"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8e25bafe932b090850854321b816685b2462c17e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e25bafe932b090850854321b816685b2462c17e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8e25bafe932b090850854321b816685b2462c17e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e25bafe932b090850854321b816685b2462c17e/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4009ee92c4ec3ee63f455c5abd761e26a819ef4a"
    }
  ],
  "stats": {
    "total": 94,
    "additions": 62,
    "deletions": 32
  },
  "files": [
    {
      "sha": "a05b6b14a31d4068001a8139966b08ab4ad86952",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -1,3 +1,33 @@\n+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Delete la_get_compile_instance\n+\tinitializer.\n+\t* c-lang.c (class compile_instance): Declare.\n+\t(c_language_data): Delete la_get_compile_instance initializer.\n+\t(c_language::get_compile_instance): New member function.\n+\t(cplus_language_data): Delete la_get_compile_instance initializer.\n+\t(cplus_language::get_compile_instance): New member function.\n+\t(asm_language_data): Delete la_get_compile_instance initializer.\n+\t(minimal_language_data): Likewise.\n+\t* c-lang.h (c_get_compile_context): Update comment.\n+\t(cplus_get_compile_context): Update comment.\n+\t* compile/compile.c (compile_to_object): Update calls, don't rely\n+\ton function pointer being NULL.\n+\t* d-lang.c (d_language_data): Delete la_get_compile_instance\n+\tinitializer.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t* go-lang.c (go_language_data): Likewise.\n+\t* language.c (unknown_language_data): Likewise.\n+\t(auto_language_data): Likewise.\n+\t* language.h (language_data): Delete la_get_compile_instance field.\n+\t(language_defn::get_compile_instance): New member function.\n+\t* m2-lang.c (m2_language_data): Delete la_get_compile_instance\n+\tinitializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\n 2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_add_all_symbols): Update comment."
    },
    {
      "sha": "f0f5ee593a692457e5be154e37bc89b23e8754fc",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -13980,7 +13980,6 @@ extern const struct language_data ada_language_data =\n   default_search_name_hash,\n   &ada_varobj_ops,\n   NULL,\n-  NULL,\n   ada_is_string_type,\n   \"(...)\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "eb9ebdb9f54c00b6d17db57683b67b532d1766be",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -37,6 +37,8 @@\n #include \"gdbcore.h\"\n #include \"gdbarch.h\"\n \n+class compile_instance;\n+\n /* Given a C string type, STR_TYPE, return the corresponding target\n    character set name.  */\n \n@@ -924,7 +926,6 @@ extern const struct language_data c_language_data =\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   default_search_name_hash,\n   &c_varobj_ops,\n-  c_get_compile_context,\n   c_compute_program,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n@@ -945,6 +946,12 @@ class c_language : public language_defn\n   {\n     c_language_arch_info (gdbarch, lai);\n   }\n+\n+  /* See language.h.  */\n+  compile_instance *get_compile_instance () const override\n+  {\n+    return c_get_compile_context ();\n+  }\n };\n \n /* Single instance of the C language class.  */\n@@ -1023,7 +1030,6 @@ extern const struct language_data cplus_language_data =\n   cp_get_symbol_name_matcher,\n   cp_search_name_hash,\n   &cplus_varobj_ops,\n-  cplus_get_compile_context,\n   cplus_compute_program,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n@@ -1114,6 +1120,12 @@ class cplus_language : public language_defn\n   {\n     return cp_lookup_transparent_type (name);\n   }\n+\n+  /* See language.h.  */\n+  compile_instance *get_compile_instance () const override\n+  {\n+    return cplus_get_compile_context ();\n+  }\n };\n \n /* The single instance of the C++ language class.  */\n@@ -1165,7 +1177,6 @@ extern const struct language_data asm_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };\n@@ -1235,7 +1246,6 @@ extern const struct language_data minimal_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "3e07dc9c88d11569a489a8913ad3457adc183d5d",
      "filename": "gdb/c-lang.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/c-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/c-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.h?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -157,15 +157,15 @@ extern int c_textual_element_type (struct type *, char);\n    compiler is owned by the caller and must be freed using the destroy\n    method.  This function never returns NULL, but rather throws an\n    exception on failure.  This is suitable for use as the\n-   la_get_compile_instance language method.  */\n+   language_defn::get_compile_instance method.  */\n \n extern compile_instance *c_get_compile_context (void);\n \n /* Create a new instance of the C++ compiler and return it.  The new\n    compiler is owned by the caller and must be freed using the destroy\n    method.  This function never returns NULL, but rather throws an\n    exception on failure.  This is suitable for use as the\n-   la_get_compile_instance language method.  */\n+   language_defn::get_compile_instance method.  */\n \n extern compile_instance *cplus_get_compile_context ();\n "
    },
    {
      "sha": "3a3afa85736c7d676912ee49aa5047f11add9d0c",
      "filename": "gdb/compile/compile.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/compile/compile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/compile/compile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -691,13 +691,11 @@ compile_to_object (struct command_line *cmd, const char *cmd_string,\n   expr_pc = get_frame_address_in_block (get_selected_frame (NULL));\n \n   /* Set up instance and context for the compiler.  */\n-  if (current_language->la_get_compile_instance == NULL)\n+  std::unique_ptr <compile_instance> compiler\n+\t\t\t(current_language->get_compile_instance ());\n+  if (compiler == nullptr)\n     error (_(\"No compiler support for language %s.\"),\n \t   current_language->la_name);\n-\n-  compile_instance *compiler_instance\n-    = current_language->la_get_compile_instance ();\n-  std::unique_ptr<compile_instance> compiler (compiler_instance);\n   compiler->set_print_callback (print_callback, NULL);\n   compiler->set_scope (scope);\n   compiler->set_block (expr_block);"
    },
    {
      "sha": "08b884de733e9d4a6d538ae0079327fdbf543597",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -179,7 +179,6 @@ extern const struct language_data d_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "9e647f5374e786ad01e7fe30c7f8ed30d706b129",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -636,7 +636,6 @@ extern const struct language_data f_language_data =\n   cp_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   f_is_string_type_p,\n   \"(...)\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "8f9ea6330d5710019b65ee02965bb38a7cd2e16b",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -564,7 +564,6 @@ extern const struct language_data go_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   go_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "941e0df5e95d04d08882d3829c5aaf6e9befe7e4",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -841,7 +841,6 @@ extern const struct language_data unknown_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   default_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };\n@@ -907,7 +906,6 @@ extern const struct language_data auto_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   default_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "57f0adb3d608a32bc948c71e79843774e757cb69",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -392,16 +392,6 @@ struct language_data\n     /* Various operations on varobj.  */\n     const struct lang_varobj_ops *la_varobj_ops;\n \n-    /* If this language allows compilation from the gdb command line,\n-       this method should be non-NULL.  When called it should return\n-       an instance of struct gcc_context appropriate to the language.\n-       When defined this method must never return NULL; instead it\n-       should throw an exception on failure.  The returned compiler\n-       instance is owned by its caller and must be deallocated by\n-       calling its 'destroy' method.  */\n-\n-    compile_instance *(*la_get_compile_instance) (void);\n-\n     /* This method must be defined if 'la_get_gcc_context' is defined.\n        If 'la_get_gcc_context' is not defined, then this method is\n        ignored.\n@@ -511,6 +501,19 @@ struct language_defn : language_data\n     return ::iterate_over_symbols (block, name, domain, callback);\n   }\n \n+  /* If this language allows compilation from the gdb command line, then\n+     this method will return an instance of struct gcc_context appropriate\n+     to the language.  If compilation for this language is generally\n+     supported, but something goes wrong then an exception is thrown.  The\n+     returned compiler instance is owned by its caller and must be\n+     deallocated by the caller.  If compilation is not supported for this\n+     language then this method returns NULL.  */\n+\n+  virtual compile_instance *get_compile_instance () const\n+  {\n+    return nullptr;\n+  }\n+\n   /* List of all known languages.  */\n   static const struct language_defn *languages[nr_languages];\n };"
    },
    {
      "sha": "21cafb9ba6b9c73cec44a1dbc7868f4048837271",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -389,7 +389,6 @@ extern const struct language_data m2_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   m2_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "4a84f84cb88efabaf34cd45a516439e8731cf0a6",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -404,7 +404,6 @@ extern const struct language_data objc_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "bfb462c17c8cf604ce4c4a36072b588d7d4b177b",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -1064,7 +1064,6 @@ extern const struct language_data opencl_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "f040f9a14c48129fe3427964a81687992c26c6f6",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -419,7 +419,6 @@ extern const struct language_data pascal_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   pascal_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "fbc454cc3374129862f34f778918a4c3633cb490",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e25bafe932b090850854321b816685b2462c17e/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e25bafe932b090850854321b816685b2462c17e/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=8e25bafe932b090850854321b816685b2462c17e",
      "patch": "@@ -2096,7 +2096,6 @@ extern const struct language_data rust_language_data =\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n-  NULL,\n   rust_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    }
  ]
}