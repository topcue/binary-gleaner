{
  "sha": "4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGFlYTAwMWZkODRhMDVmMWU1NTJjNWRlYTEwMjVlM2Y2MmRkMmQ3ZQ==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-12-18T16:23:06Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-12-18T21:04:16Z"
    },
    "message": "Add address keyword to Value.format_string\n\nThis makes it possible to disable the address in the result string:\n\nconst char *str = \"alpha\";\n\n(gdb) py print(gdb.parse_and_eval(\"str\").format_string())\n0x404000 \"alpha\"\n(gdb) py print(gdb.parse_and_eval(\"str\").format_string(address=False))\n\"alpha\"\n\ngdb/ChangeLog:\n\n2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* python/py-value.c (valpy_format_string): Implement address keyword.\n\ngdb/doc/ChangeLog:\n\n2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* python.texi (Values From Inferior): Document the address keyword.\n\ngdb/testsuite/ChangeLog:\n\n2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* gdb.python/py-format-string.exp: Add tests for address keyword.",
    "tree": {
      "sha": "27ae942e59baf13662d1cf7217f511d407f297d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/27ae942e59baf13662d1cf7217f511d407f297d3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b3f9469bfa42ef352e1d96f8733817242dd41a2e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b3f9469bfa42ef352e1d96f8733817242dd41a2e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b3f9469bfa42ef352e1d96f8733817242dd41a2e"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 66,
    "deletions": 1
  },
  "files": [
    {
      "sha": "7891f491906209cea39f258829a443fc450bebb3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* python/py-value.c (valpy_format_string): Implement address keyword.\n+\n 2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* python/py-type.c (typy_get_composite): Add TYPE_CODE_METHOD."
    },
    {
      "sha": "f5ab5432b98bb13542d41eb02242482dac161a3a",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* python.texi (Values From Inferior): Document the address keyword.\n+\n 2020-12-17  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \tPR gdb/27088"
    },
    {
      "sha": "ad7df2cdd325f303e56d3ef43bb52e58d133a460",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
      "patch": "@@ -906,6 +906,11 @@ corresponding symbol name (if one exists), @code{False} if it shouldn't\n should be expanded, @code{False} if they shouldn't (see @code{set print\n union} in @ref{Print Settings}).\n \n+@item address\n+@code{True} if the string representation of a pointer should include the\n+address, @code{False} if it shouldn't (see @code{set print address} in\n+@ref{Print Settings}).\n+\n @item deref_refs\n @code{True} if C@t{++} references should be resolved to the value they\n refer to, @code{False} (the default) if they shouldn't.  Note that, unlike"
    },
    {
      "sha": "a6afcad4f2b81e08d3026749e3628c0ee06bb6b6",
      "filename": "gdb/python/py-value.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/python/py-value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/python/py-value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-value.c?ref=4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
      "patch": "@@ -617,6 +617,7 @@ valpy_format_string (PyObject *self, PyObject *args, PyObject *kw)\n       \"array_indexes\",\t\t/* See set print array-indexes on|off.  */\n       \"symbols\",\t\t/* See set print symbol on|off.  */\n       \"unions\",\t\t\t/* See set print union on|off.  */\n+      \"address\",\t\t/* See set print address on|off.  */\n       /* C++ options.  */\n       \"deref_refs\",\t\t/* No corresponding setting.  */\n       \"actual_objects\",\t\t/* See set print object on|off.  */\n@@ -660,20 +661,22 @@ valpy_format_string (PyObject *self, PyObject *args, PyObject *kw)\n   PyObject *array_indexes_obj = NULL;\n   PyObject *symbols_obj = NULL;\n   PyObject *unions_obj = NULL;\n+  PyObject *address_obj = NULL;\n   PyObject *deref_refs_obj = NULL;\n   PyObject *actual_objects_obj = NULL;\n   PyObject *static_members_obj = NULL;\n   char *format = NULL;\n   if (!gdb_PyArg_ParseTupleAndKeywords (args,\n \t\t\t\t\tkw,\n-\t\t\t\t\t\"|O!O!O!O!O!O!O!O!O!IIIs\",\n+\t\t\t\t\t\"|O!O!O!O!O!O!O!O!O!O!IIIs\",\n \t\t\t\t\tkeywords,\n \t\t\t\t\t&PyBool_Type, &raw_obj,\n \t\t\t\t\t&PyBool_Type, &pretty_arrays_obj,\n \t\t\t\t\t&PyBool_Type, &pretty_structs_obj,\n \t\t\t\t\t&PyBool_Type, &array_indexes_obj,\n \t\t\t\t\t&PyBool_Type, &symbols_obj,\n \t\t\t\t\t&PyBool_Type, &unions_obj,\n+\t\t\t\t\t&PyBool_Type, &address_obj,\n \t\t\t\t\t&PyBool_Type, &deref_refs_obj,\n \t\t\t\t\t&PyBool_Type, &actual_objects_obj,\n \t\t\t\t\t&PyBool_Type, &static_members_obj,\n@@ -696,6 +699,8 @@ valpy_format_string (PyObject *self, PyObject *args, PyObject *kw)\n     return NULL;\n   if (!copy_py_bool_obj (&opts.unionprint, unions_obj))\n     return NULL;\n+  if (!copy_py_bool_obj (&opts.addressprint, address_obj))\n+    return NULL;\n   if (!copy_py_bool_obj (&opts.deref_ref, deref_refs_obj))\n     return NULL;\n   if (!copy_py_bool_obj (&opts.objectprint, actual_objects_obj))"
    },
    {
      "sha": "551dd7192daa6e77b5a5f036a6ba96abdc835bf7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* gdb.python/py-format-string.exp: Add tests for address keyword.\n+\n 2020-12-18  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* gdb.python/py-type.exp: Add tests for TYPE_CODE_METHOD."
    },
    {
      "sha": "f4eaad0450468270c6662ee9d6309f98f53a81f3",
      "filename": "gdb/testsuite/gdb.python/py-format-string.exp",
      "status": "modified",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/testsuite/gdb.python/py-format-string.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aea001fd84a05f1e552c5dea1025e3f62dd2d7e/gdb/testsuite/gdb.python/py-format-string.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-format-string.exp?ref=4aea001fd84a05f1e552c5dea1025e3f62dd2d7e",
      "patch": "@@ -487,6 +487,48 @@ proc test_unions {} {\n   }\n }\n \n+# Test the address option for gdb.Value.format_string.\n+proc test_address {} {\n+  global undefined\n+  global current_lang\n+\n+  check_var_with_bool_opt \"address\" \"a_point_t\"\n+  check_var_with_bool_opt \"address\" \"a_point_t_pointer\" \\\n+    $undefined \\\n+    \"\"\n+  check_var_with_bool_opt \"address\" \"another_point\"\n+  check_var_with_bool_opt \"symbols\" \"a_struct_with_union\"\n+  check_var_with_bool_opt \"address\" \"an_enum\"\n+  check_var_with_bool_opt \"address\" \"a_string\" \\\n+    $undefined \\\n+    \"\\\"hello world\\\"\"\n+  check_var_with_bool_opt \"address\" \"a_binary_string\" \\\n+    $undefined \\\n+    \"\\\"hello\\\"\"\n+  check_var_with_bool_opt \"address\" \"a_binary_string_array\"\n+  check_var_with_bool_opt \"address\" \"a_big_string\"\n+  check_var_with_bool_opt \"address\" \"an_array\"\n+  check_var_with_bool_opt \"address\" \"an_array_with_repetition\"\n+  check_var_with_bool_opt \"address\" \"a_symbol_pointer\" \\\n+    $undefined \\\n+    \"<global_symbol>\"\n+\n+  if { $current_lang == \"c++\" } {\n+    check_var_with_bool_opt \"address\" \"a_point_t_ref\"\n+    check_var_with_bool_opt \"address\" \"a_base_ref\" \\\n+      $undefined \\\n+      \"\"\n+  }\n+\n+  with_temp_option \"set print address off\" \"set print address on\" {\n+    check_var_with_no_opts \"a_string\" \\\n+      \"\\\"hello world\\\"\"\n+    check_var_with_bool_opt \"address\" \"a_string\" \\\n+      $undefined \\\n+      \"\\\"hello world\\\"\"\n+  }\n+}\n+\n # Test the deref_refs option for gdb.Value.format_string.\n proc test_deref_refs {} {\n   global current_lang\n@@ -943,6 +985,7 @@ proc test_all_common {} {\n   test_array_indexes\n   test_symbols\n   test_unions\n+  test_address\n   test_deref_refs\n   test_actual_objects\n   test_static_members"
    }
  ]
}