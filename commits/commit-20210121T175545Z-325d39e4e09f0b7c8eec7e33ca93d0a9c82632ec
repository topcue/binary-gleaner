{
  "sha": "325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzI1ZDM5ZTRlMDlmMGI3YzhlZWM3ZTMzY2E5M2QwYTljODI2MzJlYw==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2021-01-02T12:51:27Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2021-01-21T17:55:45Z"
    },
    "message": "Add Python support for hardware breakpoints\n\nThis allows the creation of hardware breakpoints in Python with\ngdb.Breakpoint(type=gdb.BP_HARDWARE_BREAKPOINT)\nAnd they are included in the sequence returned by gdb.breakpoints().\n\ngdb/ChangeLog:\n\n2021-01-21  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR python/19151\n\t* python/py-breakpoint.c (bppy_get_location): Handle\n\tbp_hardware_breakpoint.\n\t(bppy_init): Likewise.\n\t(gdbpy_breakpoint_created): Likewise.\n\ngdb/doc/ChangeLog:\n\n2021-01-21  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR python/19151\n\t* python.texi (Breakpoints In Python): Document\n\tgdb.BP_HARDWARE_BREAKPOINT.\n\ngdb/testsuite/ChangeLog:\n\n2021-01-21  Hannes Domani  <ssbssa@yahoo.de>\n\n\tPR python/19151\n\t* gdb.python/py-breakpoint.exp: Add tests for hardware breakpoints.",
    "tree": {
      "sha": "4f977273e946326896d6961751d7eebd26199d00",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4f977273e946326896d6961751d7eebd26199d00"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7cb6d92a3f723f26830ca23b39ec94c2920936c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cb6d92a3f723f26830ca23b39ec94c2920936c4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7cb6d92a3f723f26830ca23b39ec94c2920936c4"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 53,
    "deletions": 2
  },
  "files": [
    {
      "sha": "468447dd03abd8469e8b9b6491aed3416b44195b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
      "patch": "@@ -1,3 +1,11 @@\n+2021-01-21  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR python/19151\n+\t* python/py-breakpoint.c (bppy_get_location): Handle\n+\tbp_hardware_breakpoint.\n+\t(bppy_init): Likewise.\n+\t(gdbpy_breakpoint_created): Likewise.\n+\n 2021-01-21  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* arm-tdep.c (arm_debug_printf): Add and use throughout file."
    },
    {
      "sha": "64eb52bd5218e33ef60184f1cd7cf111bb868e2e",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-21  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR python/19151\n+\t* python.texi (Breakpoints In Python): Document\n+\tgdb.BP_HARDWARE_BREAKPOINT.\n+\n 2021-01-01  Joel Brobecker  <brobecker@adacore.com>\n \n \t* gdb.texinfo, refcard.tex: Update copyright year range."
    },
    {
      "sha": "35568594f5872e59f0bdb89bf112c4a6f7e518fb",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
      "patch": "@@ -5402,6 +5402,10 @@ module:\n @item gdb.BP_BREAKPOINT\n Normal code breakpoint.\n \n+@vindex BP_HARDWARE_BREAKPOINT\n+@item gdb.BP_HARDWARE_BREAKPOINT\n+Hardware assisted code breakpoint.\n+\n @vindex BP_WATCHPOINT\n @item gdb.BP_WATCHPOINT\n Watchpoint breakpoint."
    },
    {
      "sha": "3fbb1c633ff49ff91d013cb22980df9d78c332bc",
      "filename": "gdb/python/py-breakpoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/python/py-breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/python/py-breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-breakpoint.c?ref=325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
      "patch": "@@ -58,6 +58,7 @@ static struct pybp_code pybp_codes[] =\n {\n   { \"BP_NONE\", bp_none},\n   { \"BP_BREAKPOINT\", bp_breakpoint},\n+  { \"BP_HARDWARE_BREAKPOINT\", bp_hardware_breakpoint},\n   { \"BP_WATCHPOINT\", bp_watchpoint},\n   { \"BP_HARDWARE_WATCHPOINT\", bp_hardware_watchpoint},\n   { \"BP_READ_WATCHPOINT\", bp_read_watchpoint},\n@@ -383,7 +384,8 @@ bppy_get_location (PyObject *self, void *closure)\n \n   BPPY_REQUIRE_VALID (obj);\n \n-  if (obj->bp->type != bp_breakpoint)\n+  if (obj->bp->type != bp_breakpoint\n+      && obj->bp->type != bp_hardware_breakpoint)\n     Py_RETURN_NONE;\n \n   const char *str = event_location_to_string (obj->bp->location.get ());\n@@ -793,6 +795,7 @@ bppy_init (PyObject *self, PyObject *args, PyObject *kwargs)\n       switch (type)\n \t{\n \tcase bp_breakpoint:\n+\tcase bp_hardware_breakpoint:\n \t  {\n \t    event_location_up location;\n \t    symbol_name_match_type func_name_match_type\n@@ -834,7 +837,7 @@ bppy_init (PyObject *self, PyObject *args, PyObject *kwargs)\n \t    create_breakpoint (python_gdbarch,\n \t\t\t       location.get (), NULL, -1, NULL,\n \t\t\t       0,\n-\t\t\t       temporary_bp, bp_breakpoint,\n+\t\t\t       temporary_bp, type,\n \t\t\t       0,\n \t\t\t       AUTO_BOOLEAN_TRUE,\n \t\t\t       ops,\n@@ -1008,6 +1011,7 @@ gdbpy_breakpoint_created (struct breakpoint *bp)\n     return;\n \n   if (bp->type != bp_breakpoint\n+      && bp->type != bp_hardware_breakpoint\n       && bp->type != bp_watchpoint\n       && bp->type != bp_hardware_watchpoint\n       && bp->type != bp_read_watchpoint"
    },
    {
      "sha": "507b985e7a82be4b0c56962b5c47df40b3a72e58",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-21  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\tPR python/19151\n+\t* gdb.python/py-breakpoint.exp: Add tests for hardware breakpoints.\n+\n 2021-01-20  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* lib/tuiterm.exp: Rename _cur_x/_cur_y to _cur_col/_cur_row."
    },
    {
      "sha": "64a70abb1264f187f46738dd116d8e0366ced740",
      "filename": "gdb/testsuite/gdb.python/py-breakpoint.exp",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/testsuite/gdb.python/py-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec/gdb/testsuite/gdb.python/py-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-breakpoint.exp?ref=325d39e4e09f0b7c8eec7e33ca93d0a9c82632ec",
      "patch": "@@ -252,6 +252,29 @@ proc_with_prefix test_bkpt_invisible { } {\n \t\"Check maint info breakpoints shows invisible breakpoints\"\n }\n \n+proc_with_prefix test_hardware_breakpoints { } {\n+    global srcfile testfile hex decimal\n+\n+    # Start with a fresh gdb.\n+    clean_restart ${testfile}\n+\n+    if ![runto_main] then {\n+\tfail \"cannot run to main.\"\n+\treturn 0\n+    }\n+\n+    delete_breakpoints\n+\n+    gdb_test \"python hbp1 = gdb.Breakpoint(\\\"add\\\", type=gdb.BP_HARDWARE_BREAKPOINT)\" \\\n+\t\".*Hardware assisted breakpoint ($decimal)+ at .*$srcfile, line ($decimal)+\\.\" \\\n+\t\"Set hardware breakpoint\"\n+    gdb_test \"python print (gdb.breakpoints()\\[0\\].type == gdb.BP_HARDWARE_BREAKPOINT)\" \\\n+\t\"True\" \"Check hardware breakpoint type\"\n+    gdb_test \"continue\" \\\n+\t\".*Breakpoint ($decimal)+, add.*\" \\\n+\t\"Test hardware breakpoint stop\"\n+}\n+\n proc_with_prefix test_watchpoints { } {\n     global srcfile testfile hex decimal\n \n@@ -718,6 +741,7 @@ test_bkpt_basic\n test_bkpt_deletion\n test_bkpt_cond_and_cmds\n test_bkpt_invisible\n+test_hardware_breakpoints\n test_watchpoints\n test_bkpt_internal\n test_bkpt_eval_funcs"
    }
  ]
}