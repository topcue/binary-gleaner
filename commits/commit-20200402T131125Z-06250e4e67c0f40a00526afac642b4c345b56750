{
  "sha": "06250e4e67c0f40a00526afac642b4c345b56750",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDYyNTBlNGU2N2MwZjQwYTAwNTI2YWZhYzY0MmI0YzM0NWI1Njc1MA==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:25Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:25Z"
    },
    "message": "gdbserver/linux-low: turn 'breakpoint_kind_from_{pc, current_state}' into methods\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tRemove the 'breakpoint_kind_from_pc' and\n\t'breakpoint_kind_from_current_state' linux target ops, and let the\n\tconcrete linux target define them by overriding the ops of\n\tprocess_stratum_target.\n\n\t* linux-low.cc (linux_process_target::breakpoint_kind_from_pc):\n\tRemove.\n\t(linux_process_target::breakpoint_kind_from_current_state): Remove.\n\t* linux-low.h (struct linux_target_ops): Remove ops.\n\t(class linux_process_target) <breakpoint_kind_from_pc>: Remove.\n\t<breakpoint_kind_from_current_state>: Remove.\n\t* linux-x86-low.cc (the_low_target): Remove the op fields.\n\t* linux-bfin-low.cc (the_low_target): Ditto.\n\t* linux-cris-low.cc (the_low_target): Ditto.\n\t* linux-crisv32-low.cc (the_low_target): Ditto.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-mips-low.cc (the_low_target): Ditto.\n\t* linux-nios2-low.cc (the_low_target): Ditto.\n\t* linux-ppc-low.cc (the_low_target): Ditto.\n\t* linux-s390-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-sparc-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.\n\t* linux-aarch64-low.cc (class aarch64_target)\n\t<breakpoint_kind_from_pc>\n\t<breakpoint_kind_from_current_state>: Declare.\n\t(aarch64_breakpoint_kind_from_pc): Turn into...\n\t(aarch64_target::breakpoint_kind_from_pc): ...this.\n\t(aarch64_breakpoint_kind_from_current_state): Turn into...\n\t(aarch64_target::breakpoint_kind_from_current_state): ...this.\n\t(the_low_target): Remove the op fields.\n\t* linux-arm-low.cc (class arm_target):\n\t<breakpoint_kind_from_pc>\n\t<breakpoint_kind_from_current_state>: Declare.\n\t(arm_target::breakpoint_kind_from_pc): Define.\n\t(arm_target::breakpoint_kind_from_current_state): Define.\n\t(the_low_target): Remove the op fields.\n\t* linux-riscv-low.cc (class riscv_target):\n\t<breakpoint_kind_from_pc>: Declare.\n\t(riscv_breakpoint_kind_from_pc): Turn into...\n\t(riscv_target::breakpoint_kind_from_pc): ...this.\n\t(the_low_target): Remove the op fields.",
    "tree": {
      "sha": "4c50e4701772ddde8b219dbfd272e2ba9131f414",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4c50e4701772ddde8b219dbfd272e2ba9131f414"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/06250e4e67c0f40a00526afac642b4c345b56750",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06250e4e67c0f40a00526afac642b4c345b56750",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/06250e4e67c0f40a00526afac642b4c345b56750",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/06250e4e67c0f40a00526afac642b4c345b56750/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bf9ae9d8c37a4e1dfd192f266c20ea5786fd1bbd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf9ae9d8c37a4e1dfd192f266c20ea5786fd1bbd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bf9ae9d8c37a4e1dfd192f266c20ea5786fd1bbd"
    }
  ],
  "stats": {
    "total": 152,
    "additions": 79,
    "deletions": 73
  },
  "files": [
    {
      "sha": "d81641cc19749ff6d442ccb57831af57e095e204",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -1,3 +1,51 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tRemove the 'breakpoint_kind_from_pc' and\n+\t'breakpoint_kind_from_current_state' linux target ops, and let the\n+\tconcrete linux target define them by overriding the ops of\n+\tprocess_stratum_target.\n+\n+\t* linux-low.cc (linux_process_target::breakpoint_kind_from_pc):\n+\tRemove.\n+\t(linux_process_target::breakpoint_kind_from_current_state): Remove.\n+\t* linux-low.h (struct linux_target_ops): Remove ops.\n+\t(class linux_process_target) <breakpoint_kind_from_pc>: Remove.\n+\t<breakpoint_kind_from_current_state>: Remove.\n+\t* linux-x86-low.cc (the_low_target): Remove the op fields.\n+\t* linux-bfin-low.cc (the_low_target): Ditto.\n+\t* linux-cris-low.cc (the_low_target): Ditto.\n+\t* linux-crisv32-low.cc (the_low_target): Ditto.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-mips-low.cc (the_low_target): Ditto.\n+\t* linux-nios2-low.cc (the_low_target): Ditto.\n+\t* linux-ppc-low.cc (the_low_target): Ditto.\n+\t* linux-s390-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-sparc-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\t* linux-aarch64-low.cc (class aarch64_target)\n+\t<breakpoint_kind_from_pc>\n+\t<breakpoint_kind_from_current_state>: Declare.\n+\t(aarch64_breakpoint_kind_from_pc): Turn into...\n+\t(aarch64_target::breakpoint_kind_from_pc): ...this.\n+\t(aarch64_breakpoint_kind_from_current_state): Turn into...\n+\t(aarch64_target::breakpoint_kind_from_current_state): ...this.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-arm-low.cc (class arm_target):\n+\t<breakpoint_kind_from_pc>\n+\t<breakpoint_kind_from_current_state>: Declare.\n+\t(arm_target::breakpoint_kind_from_pc): Define.\n+\t(arm_target::breakpoint_kind_from_current_state): Define.\n+\t(the_low_target): Remove the op fields.\n+\t* linux-riscv-low.cc (class riscv_target):\n+\t<breakpoint_kind_from_pc>: Declare.\n+\t(riscv_breakpoint_kind_from_pc): Turn into...\n+\t(riscv_target::breakpoint_kind_from_pc): ...this.\n+\t(the_low_target): Remove the op fields.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn the 'get_pc' and 'set_pc' linux target ops into methods"
    },
    {
      "sha": "c9c9b30b36fdcb271acc2f93ac34983a4ab676c8",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -57,6 +57,10 @@ class aarch64_target : public linux_process_target\n \n   const regs_info *get_regs_info () override;\n \n+  int breakpoint_kind_from_pc (CORE_ADDR *pcptr) override;\n+\n+  int breakpoint_kind_from_current_state (CORE_ADDR *pcptr) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -3064,22 +3068,22 @@ aarch64_sw_breakpoint_from_kind (int kind, int *size)\n     return arm_sw_breakpoint_from_kind (kind, size);\n }\n \n-/* Implementation of linux_target_ops method \"breakpoint_kind_from_pc\".  */\n+/* Implementation of target ops method \"breakpoint_kind_from_pc\".  */\n \n-static int\n-aarch64_breakpoint_kind_from_pc (CORE_ADDR *pcptr)\n+int\n+aarch64_target::breakpoint_kind_from_pc (CORE_ADDR *pcptr)\n {\n   if (is_64bit_tdesc ())\n     return aarch64_breakpoint_len;\n   else\n     return arm_breakpoint_kind_from_pc (pcptr);\n }\n \n-/* Implementation of the linux_target_ops method\n+/* Implementation of the target ops method\n    \"breakpoint_kind_from_current_state\".  */\n \n-static int\n-aarch64_breakpoint_kind_from_current_state (CORE_ADDR *pcptr)\n+int\n+aarch64_target::breakpoint_kind_from_current_state (CORE_ADDR *pcptr)\n {\n   if (is_64bit_tdesc ())\n     return aarch64_breakpoint_len;\n@@ -3097,7 +3101,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_breakpoint_kind_from_pc,\n   aarch64_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   0,    /* decr_pc_after_break */\n@@ -3123,7 +3126,6 @@ struct linux_target_ops the_low_target =\n   aarch64_emit_ops,\n   aarch64_get_min_fast_tracepoint_insn_len,\n   aarch64_supports_range_stepping,\n-  aarch64_breakpoint_kind_from_current_state,\n   aarch64_supports_hardware_single_step,\n   aarch64_get_syscall_trapinfo,\n };"
    },
    {
      "sha": "d02ead70fa9d0e7987ab90524a37cac27f12989f",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -62,6 +62,10 @@ class arm_target : public linux_process_target\n \n   const regs_info *get_regs_info () override;\n \n+  int breakpoint_kind_from_pc (CORE_ADDR *pcptr) override;\n+\n+  int breakpoint_kind_from_current_state (CORE_ADDR *pcptr) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -99,6 +103,18 @@ arm_target::low_set_pc (regcache *regcache, CORE_ADDR pc)\n   linux_set_pc_32bit (regcache, pc);\n }\n \n+int\n+arm_target::breakpoint_kind_from_pc (CORE_ADDR *pcptr)\n+{\n+  return arm_breakpoint_kind_from_pc (pcptr);\n+}\n+\n+int\n+arm_target::breakpoint_kind_from_current_state (CORE_ADDR *pcptr)\n+{\n+  return arm_breakpoint_kind_from_current_state (pcptr);\n+}\n+\n /* Information describing the hardware breakpoint capabilities.  */\n static struct\n {\n@@ -1051,7 +1067,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  arm_breakpoint_kind_from_pc,\n   arm_sw_breakpoint_from_kind,\n   arm_gdbserver_get_next_pcs,\n   0,\n@@ -1077,7 +1092,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  arm_breakpoint_kind_from_current_state,\n   arm_supports_hardware_single_step,\n   arm_get_syscall_trapinfo,\n };"
    },
    {
      "sha": "1a0938ef5846e1a968ed33ccfa856c9b6af80ad7",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -159,7 +159,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   bfin_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   2,\n@@ -185,7 +184,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   bfin_supports_hardware_single_step,\n };\n "
    },
    {
      "sha": "882e4c61eb09c9fe0cfde427f07981130448ced3",
      "filename": "gdbserver/linux-cris-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-cris-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-cris-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-cris-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -156,7 +156,6 @@ cris_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   cris_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   0,"
    },
    {
      "sha": "270c206e8062e4a547ecdd06b1bbe9afcabb1d03",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -453,7 +453,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   cris_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   0,\n@@ -479,7 +478,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   cris_supports_hardware_single_step,\n };\n "
    },
    {
      "sha": "730f23bb6f034311febbe7fe6eaad047fa4af81f",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -7230,17 +7230,6 @@ current_lwp_ptid (void)\n   return ptid_of (current_thread);\n }\n \n-/* Implementation of the target_ops method \"breakpoint_kind_from_pc\".  */\n-\n-int\n-linux_process_target::breakpoint_kind_from_pc (CORE_ADDR *pcptr)\n-{\n-  if (the_low_target.breakpoint_kind_from_pc != NULL)\n-    return (*the_low_target.breakpoint_kind_from_pc) (pcptr);\n-  else\n-    return process_stratum_target::breakpoint_kind_from_pc (pcptr);\n-}\n-\n /* Implementation of the target_ops method \"sw_breakpoint_from_kind\".  */\n \n const gdb_byte *\n@@ -7251,18 +7240,6 @@ linux_process_target::sw_breakpoint_from_kind (int kind, int *size)\n   return (*the_low_target.sw_breakpoint_from_kind) (kind, size);\n }\n \n-/* Implementation of the target_ops method\n-   \"breakpoint_kind_from_current_state\".  */\n-\n-int\n-linux_process_target::breakpoint_kind_from_current_state (CORE_ADDR *pcptr)\n-{\n-  if (the_low_target.breakpoint_kind_from_current_state != NULL)\n-    return (*the_low_target.breakpoint_kind_from_current_state) (pcptr);\n-  else\n-    return breakpoint_kind_from_pc (pcptr);\n-}\n-\n const char *\n linux_process_target::thread_name (ptid_t thread)\n {"
    },
    {
      "sha": "60ec910057f2e2a4d0fb024a807070520eaca864",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -131,9 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* See target.h for details.  */\n-  int (*breakpoint_kind_from_pc) (CORE_ADDR *pcptr);\n-\n   /* See target.h for details.  */\n   const gdb_byte *(*sw_breakpoint_from_kind) (int kind, int *size);\n \n@@ -227,9 +224,6 @@ struct linux_target_ops\n   /* Returns true if the low target supports range stepping.  */\n   int (*supports_range_stepping) (void);\n \n-  /* See target.h.  */\n-  int (*breakpoint_kind_from_current_state) (CORE_ADDR *pcptr);\n-\n   /* See target.h.  */\n   int (*supports_hardware_single_step) (void);\n \n@@ -442,12 +436,8 @@ class linux_process_target : public process_stratum_target\n   ssize_t multifs_readlink (int pid, const char *filename, char *buf,\n \t\t\t    size_t bufsiz) override;\n \n-  int breakpoint_kind_from_pc (CORE_ADDR *pcptr) override;\n-\n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n-  int breakpoint_kind_from_current_state (CORE_ADDR *pcptr) override;\n-\n   const char *thread_name (ptid_t thread) override;\n \n #if USE_THREAD_DB"
    },
    {
      "sha": "c7bb811e64cf14030486b98bf913560ba17adac7",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -158,7 +158,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_from_pc */\n   m32r_sw_breakpoint_from_kind,\n   NULL,\n   0,\n@@ -184,7 +183,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   m32r_supports_hardware_single_step,\n };\n "
    },
    {
      "sha": "6483c27698e082a9daaa38c4d847e128aad0008a",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -253,7 +253,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   m68k_sw_breakpoint_from_kind,\n   NULL,\n   2,\n@@ -279,7 +278,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   m68k_supports_hardware_single_step,\n };\n "
    },
    {
      "sha": "d36836669dbd72af3a6ccd84c83c4f6b24dc0a1b",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -964,7 +964,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   mips_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   0,"
    },
    {
      "sha": "4f10df53d205efc7e1773627ce6ba566bac06739",
      "filename": "gdbserver/linux-nios2-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-nios2-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-nios2-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-nios2-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -275,7 +275,6 @@ nios2_target::get_regs_info ()\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* breakpoint_kind_from_pc */\n   nios2_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   0,"
    },
    {
      "sha": "167c3b60f761542ed892b32e0d7dc3398a16f838",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -3404,7 +3404,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   ppc_sw_breakpoint_from_kind,\n   NULL,\n   0,\n@@ -3430,7 +3429,6 @@ struct linux_target_ops the_low_target = {\n   ppc_emit_ops,\n   ppc_get_min_fast_tracepoint_insn_len,\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   ppc_supports_hardware_single_step,\n   NULL, /* get_syscall_trapinfo */\n   ppc_get_ipa_tdesc_idx,"
    },
    {
      "sha": "87266395e96b3bbcdd61b661dc56045b06b1340b",
      "filename": "gdbserver/linux-riscv-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-riscv-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-riscv-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-riscv-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -38,6 +38,8 @@ class riscv_target : public linux_process_target\n \n   const regs_info *get_regs_info () override;\n \n+  int breakpoint_kind_from_pc (CORE_ADDR *pcptr) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -245,10 +247,10 @@ riscv_target::low_set_pc (regcache *regcache, CORE_ADDR newpc)\n static const uint16_t riscv_ibreakpoint[] = { 0x0073, 0x0010 };\n static const uint16_t riscv_cbreakpoint = 0x9002;\n \n-/* Implementation of linux_target_ops method \"breakpoint_kind_from_pc\".  */\n+/* Implementation of target ops method \"breakpoint_kind_from_pc\".  */\n \n-static int\n-riscv_breakpoint_kind_from_pc (CORE_ADDR *pcptr)\n+int\n+riscv_target::breakpoint_kind_from_pc (CORE_ADDR *pcptr)\n {\n   union\n     {\n@@ -305,7 +307,6 @@ riscv_breakpoint_at (CORE_ADDR pc)\n /* RISC-V/Linux target operations.  */\n struct linux_target_ops the_low_target =\n {\n-  riscv_breakpoint_kind_from_pc,\n   riscv_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   0,    /* decr_pc_after_break */"
    },
    {
      "sha": "44f3be6c98e52c32b1eeaca4c32257c30de8fbd8",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -2824,7 +2824,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   s390_sw_breakpoint_from_kind,\n   NULL,\n   s390_breakpoint_len,\n@@ -2850,7 +2849,6 @@ struct linux_target_ops the_low_target = {\n   s390_emit_ops,\n   s390_get_min_fast_tracepoint_insn_len,\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   s390_supports_hardware_single_step,\n   NULL, /* get_syscall_trapinfo */\n   s390_get_ipa_tdesc_idx,"
    },
    {
      "sha": "36c193347580793e3f12c69a345a7891aecb7541",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -188,7 +188,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   sh_sw_breakpoint_from_kind,\n   NULL,\n   0,\n@@ -214,7 +213,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   sh_supports_hardware_single_step,\n };\n "
    },
    {
      "sha": "18a529adb70255942c3930b93d9c59e6b33d506a",
      "filename": "gdbserver/linux-sparc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-sparc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-sparc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sparc-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -337,7 +337,6 @@ sparc_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   sparc_sw_breakpoint_from_kind,\n   NULL, /* get_next_pcs */\n   0,"
    },
    {
      "sha": "1486829594d6aa4d9262e4854d235deec5590a6a",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -419,7 +419,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   tic6x_sw_breakpoint_from_kind,\n   NULL,\n   0,\n@@ -445,7 +444,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   tic6x_supports_hardware_single_step,\n };\n "
    },
    {
      "sha": "d577b589b4ae0d1ee205e01d3bd1f69e9135c526",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -220,7 +220,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* breakpoint_kind_from_pc */\n   tile_sw_breakpoint_from_kind,\n   NULL,\n   0,\n@@ -246,7 +245,6 @@ struct linux_target_ops the_low_target =\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   tile_supports_hardware_single_step,\n };\n "
    },
    {
      "sha": "1da48db30272798dafabe0de65fa8cc7ece32f7c",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -2897,7 +2897,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* breakpoint_kind_from_pc */\n   x86_sw_breakpoint_from_kind,\n   NULL,\n   1,\n@@ -2927,7 +2926,6 @@ struct linux_target_ops the_low_target =\n   x86_emit_ops,\n   x86_get_min_fast_tracepoint_insn_len,\n   x86_supports_range_stepping,\n-  NULL, /* breakpoint_kind_from_current_state */\n   x86_supports_hardware_single_step,\n   x86_get_syscall_trapinfo,\n   x86_get_ipa_tdesc_idx,"
    },
    {
      "sha": "32643307cb7b76980915ab44bc9df2fc3916a16f",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/06250e4e67c0f40a00526afac642b4c345b56750/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=06250e4e67c0f40a00526afac642b4c345b56750",
      "patch": "@@ -326,7 +326,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* breakpoint_kind_from_pc */\n   xtensa_sw_breakpoint_from_kind,\n   NULL,\n   0,\n@@ -352,7 +351,6 @@ struct linux_target_ops the_low_target = {\n   NULL, /* emit_ops */\n   NULL, /* get_min_fast_tracepoint_insn_len */\n   NULL, /* supports_range_stepping */\n-  NULL, /* breakpoint_kind_from_current_state */\n   xtensa_supports_hardware_single_step,\n };\n "
    }
  ]
}