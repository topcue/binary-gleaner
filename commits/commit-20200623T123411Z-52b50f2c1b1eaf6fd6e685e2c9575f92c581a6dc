{
  "sha": "52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTJiNTBmMmMxYjFlYWY2ZmQ2ZTY4NWUyYzk1NzVmOTJjNTgxYTZkYw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-03T14:54:19Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-23T12:34:11Z"
    },
    "message": "gdb: Convert language la_printchar field to a method\n\nThis commit changes the language_data::la_printchar function pointer\nmember variable into a member function of language_defn.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Delete la_printchar initializer.\n\t(ada_language::printchar): New member function.\n\t* c-lang.c (c_language_data): Delete la_printchar initializer.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_printchar): Rename to f_language::printchar.\n\t(f_language_data): Delete la_printchar initializer.\n\t(f_language::printchar): New member function, implementation from\n\tf_printchar.\n\t* go-lang.c (go_language_data): Delete la_printchar initializer.\n\t* language.c (unk_lang_printchar): Delete.\n\t(language_defn::printchar): Define new member function.\n\t(unknown_language_data): Delete la_printchar initializer.\n\t(unknown_language::printchar): New member function.\n\t(auto_language_data): Delete la_printchar initializer.\n\t(auto_language::printchar): New member function.\n\t* language.h (language_data): Delete la_printchar field.\n\t(language_defn::printchar): Declare new member function.\n\t(LA_PRINT_CHAR): Update call to printchar.\n\t* m2-lang.c (m2_language_data): Delete la_printchar initializer.\n\t(m2_language::printchar): New member function.\n\t* objc-lang.c (objc_language_data): Delete la_printchar\n\tinitializer.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Delete la_printchar\n\tinitializer.\n\t(pascal_language::printchar): New member function.\n\t* rust-lang.c (rust_printchar): Rename to\n\trust_language::printchar.\n\t(rust_language_data): Delete la_printchar initializer.\n\t(rust_language::printchar): New member function, implementation\n\tfrom rust_printchar.",
    "tree": {
      "sha": "e8c703b45b2074b1eb8f335c4c55387151d41d5b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e8c703b45b2074b1eb8f335c4c55387151d41d5b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ec8cec5b96e2ebbd5e25a737c69d311970a8b219",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec8cec5b96e2ebbd5e25a737c69d311970a8b219",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ec8cec5b96e2ebbd5e25a737c69d311970a8b219"
    }
  ],
  "stats": {
    "total": 162,
    "additions": 111,
    "deletions": 51
  },
  "files": [
    {
      "sha": "8287719e931de8798a900fde151f365265da0b8d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -1,3 +1,40 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Delete la_printchar initializer.\n+\t(ada_language::printchar): New member function.\n+\t* c-lang.c (c_language_data): Delete la_printchar initializer.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_printchar): Rename to f_language::printchar.\n+\t(f_language_data): Delete la_printchar initializer.\n+\t(f_language::printchar): New member function, implementation from\n+\tf_printchar.\n+\t* go-lang.c (go_language_data): Delete la_printchar initializer.\n+\t* language.c (unk_lang_printchar): Delete.\n+\t(language_defn::printchar): Define new member function.\n+\t(unknown_language_data): Delete la_printchar initializer.\n+\t(unknown_language::printchar): New member function.\n+\t(auto_language_data): Delete la_printchar initializer.\n+\t(auto_language::printchar): New member function.\n+\t* language.h (language_data): Delete la_printchar field.\n+\t(language_defn::printchar): Declare new member function.\n+\t(LA_PRINT_CHAR): Update call to printchar.\n+\t* m2-lang.c (m2_language_data): Delete la_printchar initializer.\n+\t(m2_language::printchar): New member function.\n+\t* objc-lang.c (objc_language_data): Delete la_printchar\n+\tinitializer.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Delete la_printchar\n+\tinitializer.\n+\t(pascal_language::printchar): New member function.\n+\t* rust-lang.c (rust_printchar): Rename to\n+\trust_language::printchar.\n+\t(rust_language_data): Delete la_printchar initializer.\n+\t(rust_language::printchar): New member function, implementation\n+\tfrom rust_printchar.\n+\n 2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (emit_char): Renamed to ada_language::emitchar."
    },
    {
      "sha": "e69c3cbf50c5425132e6a59048b473a2ce3b6bcf",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -13681,7 +13681,6 @@ extern const struct language_data ada_language_data =\n   macro_expansion_no,\n   ada_extensions,\n   &ada_exp_descriptor,\n-  ada_printchar,                /* Print a character constant */\n   ada_printstr,                 /* Function to print string constant */\n   ada_print_typedef,            /* Print a typedef using appropriate syntax */\n   NULL,                         /* name_of_this */\n@@ -14115,6 +14114,14 @@ class ada_language : public language_defn\n     ada_emit_char (ch, chtype, stream, quoter, 1);\n   }\n \n+  /* See language.h.  */\n+\n+  void printchar (int ch, struct type *chtype,\n+\t\t  struct ui_file *stream) const override\n+  {\n+    ada_printchar (ch, chtype, stream);\n+  }\n+\n protected:\n   /* See language.h.  */\n "
    },
    {
      "sha": "f7b1b80cd5610a2bfce62b31801970fb9d2ed45c",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -889,7 +889,6 @@ extern const struct language_data c_language_data =\n   macro_expansion_c,\n   c_extensions,\n   &exp_descriptor_c,\n-  c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */\n@@ -994,7 +993,6 @@ extern const struct language_data cplus_language_data =\n   macro_expansion_c,\n   cplus_extensions,\n   &exp_descriptor_c,\n-  c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   \"this\",                       /* name_of_this */\n@@ -1196,7 +1194,6 @@ extern const struct language_data asm_language_data =\n   macro_expansion_c,\n   asm_extensions,\n   &exp_descriptor_c,\n-  c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */\n@@ -1256,7 +1253,6 @@ extern const struct language_data minimal_language_data =\n   macro_expansion_c,\n   NULL,\n   &exp_descriptor_c,\n-  c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */"
    },
    {
      "sha": "f76b74f18b481b17df88869c56ac7b224c2a8149",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -142,7 +142,6 @@ extern const struct language_data d_language_data =\n   macro_expansion_no,\n   d_extensions,\n   &exp_descriptor_c,\n-  c_printchar,\t\t\t/* Print a character constant.  */\n   c_printstr,\t\t\t/* Function to print string constant.  */\n   c_print_typedef,\t\t/* Print a typedef using appropriate\n \t\t\t\t   syntax.  */"
    },
    {
      "sha": "68d0a4e6d0c10578d185dc460c3eb818171c14a2",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 10,
      "deletions": 13,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -41,8 +41,6 @@\n \n /* Local functions */\n \n-static void f_printchar (int c, struct type *type, struct ui_file * stream);\n-\n /* Return the encoding that should be used for the character type\n    TYPE.  */\n \n@@ -70,16 +68,6 @@ f_get_encoding (struct type *type)\n   return encoding;\n }\n \n-/* Implementation of la_printchar.  */\n-\n-static void\n-f_printchar (int c, struct type *type, struct ui_file *stream)\n-{\n-  fputs_filtered (\"'\", stream);\n-  LA_EMIT_CHAR (c, type, stream, '\\'');\n-  fputs_filtered (\"'\", stream);\n-}\n-\n /* Print the character string STRING, printing at most LENGTH characters.\n    Printing stops early if the number hits print_max; repeat counts\n    are printed as appropriate.  Print ellipses at the end if we\n@@ -548,7 +536,6 @@ extern const struct language_data f_language_data =\n   macro_expansion_no,\n   f_extensions,\n   &exp_descriptor_f,\n-  f_printchar,\t\t\t/* Print character constant */\n   f_printstr,\t\t\t/* function to print string constant */\n   f_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,                    \t/* name_of_this */\n@@ -710,6 +697,16 @@ class f_language : public language_defn\n     generic_emit_char (ch, chtype, stream, quoter, encoding);\n   }\n \n+  /* See language.h.  */\n+\n+  void printchar (int ch, struct type *chtype,\n+\t\t  struct ui_file *stream) const override\n+  {\n+    fputs_filtered (\"'\", stream);\n+    LA_EMIT_CHAR (ch, chtype, stream, '\\'');\n+    fputs_filtered (\"'\", stream);\n+  }\n+\n protected:\n \n   /* See language.h.  */"
    },
    {
      "sha": "819780bc30e6a9b13e33243645f05d3e1fc43393",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -527,7 +527,6 @@ extern const struct language_data go_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_c,\n-  c_printchar,\t\t\t/* Print a character constant.  */\n   c_printstr,\t\t\t/* Function to print string constant.  */\n   c_print_typedef,\t\t/* Print a typedef using appropriate\n \t\t\t\t   syntax.  */"
    },
    {
      "sha": "34990e040cdc5d77a186025ed4b4d731c63e9542",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 25,
      "deletions": 12,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -49,9 +49,6 @@\n \n static void set_range_case (void);\n \n-static void unk_lang_printchar (int c, struct type *type,\n-\t\t\t\tstruct ui_file *stream);\n-\n /* The current (default at startup) state of type and range checking.\n    (If the modes are set to \"auto\", though, these are changed based\n    on the default language at startup, and then again based on the\n@@ -663,6 +660,15 @@ language_defn::emitchar (int ch, struct type *chtype,\n   c_emit_char (ch, chtype, stream, quoter);\n }\n \n+/* See language.h.  */\n+\n+void\n+language_defn::printchar (int ch, struct type *chtype,\n+\t\t\t  struct ui_file * stream) const\n+{\n+  c_printchar (ch, chtype, stream);\n+}\n+\n /* The default implementation of the get_symbol_name_matcher_inner method\n    from the language_defn class.  Matches with strncmp_iw.  */\n \n@@ -728,13 +734,6 @@ default_is_string_type_p (struct type *type)\n   return (type->code ()  == TYPE_CODE_STRING);\n }\n \n-static void\n-unk_lang_printchar (int c, struct type *type, struct ui_file *stream)\n-{\n-  error (_(\"internal error - unimplemented \"\n-\t   \"function unk_lang_printchar called.\"));\n-}\n-\n static void\n unk_lang_printstr (struct ui_file *stream, struct type *type,\n \t\t   const gdb_byte *string, unsigned int length,\n@@ -773,7 +772,6 @@ extern const struct language_data unknown_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_standard,\n-  unk_lang_printchar,\t\t/* Print character constant */\n   unk_lang_printstr,\n   default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   \"this\",        \t    \t/* name_of_this */\n@@ -851,6 +849,14 @@ class unknown_language : public language_defn\n   {\n     error (_(\"unimplemented unknown_language::emitchar called\"));\n   }\n+\n+  /* See language.h.  */\n+\n+  void printchar (int ch, struct type *chtype,\n+\t\t  struct ui_file *stream) const override\n+  {\n+    error (_(\"unimplemented unknown_language::printchar called\"));\n+  }\n };\n \n /* Single instance of the unknown language class.  */\n@@ -870,7 +876,6 @@ extern const struct language_data auto_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_standard,\n-  unk_lang_printchar,\t\t/* Print character constant */\n   unk_lang_printstr,\n   default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   \"this\",\t\t        /* name_of_this */\n@@ -948,6 +953,14 @@ class auto_language : public language_defn\n   {\n     error (_(\"unimplemented auto_language::emitchar called\"));\n   }\n+\n+  /* See language.h.  */\n+\n+  void printchar (int ch, struct type *chtype,\n+\t\t  struct ui_file *stream) const override\n+  {\n+    error (_(\"unimplemented auto_language::printchar called\"));\n+  }\n };\n \n /* Single instance of the fake \"auto\" language.  */"
    },
    {
      "sha": "fc9efd8993993f1c9bc13869c73f0d275fc926fd",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -225,9 +225,6 @@ struct language_data\n \n     const struct exp_descriptor *la_exp_desc;\n \n-    void (*la_printchar) (int ch, struct type *chtype,\n-\t\t\t  struct ui_file * stream);\n-\n     void (*la_printstr) (struct ui_file * stream, struct type *elttype,\n \t\t\t const gdb_byte *string, unsigned int length,\n \t\t\t const char *encoding, int force_ellipses,\n@@ -547,6 +544,9 @@ struct language_defn : language_data\n   virtual void emitchar (int ch, struct type *chtype,\n \t\t\t struct ui_file *stream, int quoter) const;\n \n+  virtual void printchar (int ch, struct type *chtype,\n+\t\t\t  struct ui_file * stream) const;\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method.\n@@ -649,7 +649,7 @@ extern enum language set_language (enum language);\n   (current_language->value_print (val,stream,options))\n \n #define LA_PRINT_CHAR(ch, type, stream) \\\n-  (current_language->la_printchar(ch, type, stream))\n+  (current_language->printchar (ch, type, stream))\n #define LA_PRINT_STRING(stream, elttype, string, length, encoding, force_ellipses, options) \\\n   (current_language->la_printstr(stream, elttype, string, length, \\\n \t\t\t\t encoding, force_ellipses,options))"
    },
    {
      "sha": "bdb1a460aea7dd93570d74f76af894d41abf38db",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -309,7 +309,6 @@ extern const struct language_data m2_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_modula2,\n-  m2_printchar,\t\t\t/* Print character constant */\n   m2_printstr,\t\t\t/* function to print string constant */\n   m2_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t                /* name_of_this */\n@@ -426,6 +425,14 @@ class m2_language : public language_defn\n \t  }\n       }\n   }\n+\n+  /* See language.h.  */\n+\n+  void printchar (int ch, struct type *chtype,\n+\t\t  struct ui_file *stream) const override\n+  {\n+    m2_printchar (ch, chtype, stream);\n+  }\n };\n \n /* Single instance of the M2 language.  */"
    },
    {
      "sha": "736c8684523f9436cc1033fbea0da5aec0b6b965",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -337,7 +337,6 @@ extern const struct language_data objc_language_data =\n   macro_expansion_c,\n   objc_extensions,\n   &exp_descriptor_standard,\n-  c_printchar,\t\t       /* Print a character constant */\n   c_printstr,\t\t       /* Function to print string constant */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   \"self\",\t\t        /* name_of_this */"
    },
    {
      "sha": "d66f3f8aec3fa148f6035d106b05b0e839c3917d",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -1016,7 +1016,6 @@ extern const struct language_data opencl_language_data =\n   macro_expansion_c,\n   NULL,\n   &exp_descriptor_opencl,\n-  c_printchar,\t\t\t/* Print a character constant */\n   c_printstr,\t\t\t/* Function to print string constant */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,                         /* name_of_this */"
    },
    {
      "sha": "b8c99c4650f40293f60cae89f18983a1316752bb",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -376,7 +376,6 @@ extern const struct language_data pascal_language_data =\n   macro_expansion_no,\n   p_extensions,\n   &exp_descriptor_standard,\n-  pascal_printchar,\t\t/* Print a character constant */\n   pascal_printstr,\t\t/* Function to print string constant */\n   pascal_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   \"this\",\t\t        /* name_of_this */\n@@ -491,6 +490,15 @@ class pascal_language : public language_defn\n     if (in_quotes)\n       fputs_filtered (\"'\", stream);\n   }\n+\n+  /* See language.h.  */\n+\n+  void printchar (int ch, struct type *chtype,\n+\t\t  struct ui_file *stream) const override\n+  {\n+    pascal_printchar (ch, chtype, stream);\n+  }\n+\n };\n \n /* Single instance of the Pascal language class.  */"
    },
    {
      "sha": "36e26179f3456e7f92d237baaf7ed6254e2a556f",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=52b50f2c1b1eaf6fd6e685e2c9575f92c581a6dc",
      "patch": "@@ -281,16 +281,6 @@ rust_get_trait_object_pointer (struct value *value)\n \n \f\n \n-/* la_printchar implementation for Rust.  */\n-\n-static void\n-rust_printchar (int c, struct type *type, struct ui_file *stream)\n-{\n-  fputs_filtered (\"'\", stream);\n-  LA_EMIT_CHAR (c, type, stream, '\\'');\n-  fputs_filtered (\"'\", stream);\n-}\n-\n /* la_printstr implementation for Rust.  */\n \n static void\n@@ -1963,7 +1953,6 @@ extern const struct language_data rust_language_data =\n   macro_expansion_no,\n   rust_extensions,\n   &exp_descriptor_rust,\n-  rust_printchar,\t\t/* Print a character constant */\n   rust_printstr,\t\t/* Function to print string constant */\n   rust_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */\n@@ -2146,6 +2135,16 @@ class rust_language : public language_defn\n     else\n       fprintf_filtered (stream, \"\\\\u{%06x}\", ch);\n   }\n+\n+  /* See language.h.  */\n+\n+  void printchar (int ch, struct type *chtype,\n+\t\t  struct ui_file *stream) const override\n+  {\n+    fputs_filtered (\"'\", stream);\n+    LA_EMIT_CHAR (ch, chtype, stream, '\\'');\n+    fputs_filtered (\"'\", stream);\n+  }\n };\n \n /* Single instance of the Rust language class.  */"
    }
  ]
}