{
  "sha": "c3b149eb7697b376df1b3a47d0102afda389ee6d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzNiMTQ5ZWI3Njk3YjM3NmRmMWIzYTQ3ZDAxMDJhZmRhMzg5ZWU2ZA==",
  "commit": {
    "author": {
      "name": "Alok Kumar Sharma",
      "email": "alokkumar.sharma@amd.com",
      "date": "2020-02-04T17:17:20Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-02-04T17:17:20Z"
    },
    "message": "gdb/fortran: Allow for using Flang in Fortran testing\n\nIn lib/fortran.exp, in the helper function fortran_int4, there is\ncurrently no support for the LLVM Fortran compiler, Flang.  As a\nresult we return the default pattern 'unknown' to match against all\n4-byte integer types, which causes many tests to fail.\n\nThe same is true for all of the other helper functions related to\nfinding a suitable type pattern.\n\nThis commit adds support for Flang.  There should be no change when\ntesting with gfortran.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/fortran.exp (fortran_int4): Handle clang.\n\t(fortran_int8): Likewise.\n\t(fortran_real4): Likewise.\n\t(fortran_real8): Likewise.\n\t(fortran_complex4): Likewise.\n\t(fortran_logical4): Likewise.\n\t(fortran_character1): Likewise.\n\nChange-Id: Ife0d9828f78361fbd992bf21af746042b017dafc",
    "tree": {
      "sha": "88ebc515e517a4a47f23e8fbf6792fa8bbe41b14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/88ebc515e517a4a47f23e8fbf6792fa8bbe41b14"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c3b149eb7697b376df1b3a47d0102afda389ee6d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3b149eb7697b376df1b3a47d0102afda389ee6d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c3b149eb7697b376df1b3a47d0102afda389ee6d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3b149eb7697b376df1b3a47d0102afda389ee6d/comments",
  "author": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dcc9fbc6da9536f65c55dbb67f50ab3c2e086c6e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dcc9fbc6da9536f65c55dbb67f50ab3c2e086c6e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dcc9fbc6da9536f65c55dbb67f50ab3c2e086c6e"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 24,
    "deletions": 7
  },
  "files": [
    {
      "sha": "eb4388031b5449cc5dcf3b2efa55ad904da3c6f3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3b149eb7697b376df1b3a47d0102afda389ee6d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3b149eb7697b376df1b3a47d0102afda389ee6d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c3b149eb7697b376df1b3a47d0102afda389ee6d",
      "patch": "@@ -1,3 +1,13 @@\n+2020-02-04  Alok Kumar Sharma  <alokkumar.sharma@amd.com>\n+\n+\t* lib/fortran.exp (fortran_int4): Handle clang.\n+\t(fortran_int8): Likewise.\n+\t(fortran_real4): Likewise.\n+\t(fortran_real8): Likewise.\n+\t(fortran_complex4): Likewise.\n+\t(fortran_logical4): Likewise.\n+\t(fortran_character1): Likewise.\n+\n 2020-02-04  Tom de Vries  <tdevries@suse.de>\n \n \t* README (Race detection): Add note."
    },
    {
      "sha": "54f32936773930b47e334607b91ac5a3643ba098",
      "filename": "gdb/testsuite/lib/fortran.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 7,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3b149eb7697b376df1b3a47d0102afda389ee6d/gdb/testsuite/lib/fortran.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3b149eb7697b376df1b3a47d0102afda389ee6d/gdb/testsuite/lib/fortran.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/fortran.exp?ref=c3b149eb7697b376df1b3a47d0102afda389ee6d",
      "patch": "@@ -32,7 +32,8 @@ proc set_lang_fortran {} {\n proc fortran_int4 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"int4\"\n-    } elseif {[test_compiler_info {gcc-*}]} {\n+    } elseif {[test_compiler_info {gcc-*}]\n+\t      || [test_compiler_info {clang-*}]} {\n \treturn \"integer\\\\(kind=4\\\\)\"\n     } elseif {[test_compiler_info {icc-*}]} {\n \treturn \"INTEGER\\\\(4\\\\)\"\n@@ -44,7 +45,8 @@ proc fortran_int4 {} {\n proc fortran_int8 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"int8\"\n-    } elseif {[test_compiler_info {gcc-*}]} {\n+    } elseif {[test_compiler_info {gcc-*}]\n+\t      || [test_compiler_info {clang-*}]} {\n \treturn \"integer\\\\(kind=8\\\\)\"\n     } elseif {[test_compiler_info {icc-*}]} {\n \treturn \"INTEGER\\\\(8\\\\)\"\n@@ -56,7 +58,8 @@ proc fortran_int8 {} {\n proc fortran_real4 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"real4\"\n-    } elseif {[test_compiler_info {gcc-*}]} {\n+    } elseif {[test_compiler_info {gcc-*}]\n+\t      || [test_compiler_info {clang-*}]} {\n \treturn \"real\\\\(kind=4\\\\)\"\n     } elseif {[test_compiler_info {icc-*}]} {\n \treturn \"REAL\\\\(4\\\\)\"\n@@ -68,7 +71,8 @@ proc fortran_real4 {} {\n proc fortran_real8 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"real8\"\n-    } elseif {[test_compiler_info {gcc-*}]} {\n+    } elseif {[test_compiler_info {gcc-*}]\n+\t      || [test_compiler_info {clang-*}]} {\n \treturn \"real\\\\(kind=8\\\\)\"\n     } elseif {[test_compiler_info {icc-*}]} {\n \treturn \"REAL\\\\(8\\\\)\"\n@@ -80,7 +84,8 @@ proc fortran_real8 {} {\n proc fortran_complex4 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"complex4\"\n-    } elseif {[test_compiler_info {gcc-*}]} {\n+    } elseif {[test_compiler_info {gcc-*}]\n+\t      || [test_compiler_info {clang-*}]} {\n \treturn \"complex\\\\(kind=4\\\\)\"\n     } elseif {[test_compiler_info {icc-*}]} {\n \treturn \"COMPLEX\\\\(4\\\\)\"\n@@ -92,7 +97,8 @@ proc fortran_complex4 {} {\n proc fortran_logical4 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"logical4\"\n-    } elseif {[test_compiler_info {gcc-*}]} {\n+    } elseif {[test_compiler_info {gcc-*}]\n+\t      || [test_compiler_info {clang-*}]} {\n \treturn \"logical\\\\(kind=4\\\\)\"\n     } elseif {[test_compiler_info {icc-*}]} {\n \treturn \"LOGICAL\\\\(4\\\\)\"\n@@ -104,7 +110,8 @@ proc fortran_logical4 {} {\n proc fortran_character1 {} {\n     if {[test_compiler_info {gcc-4-[012]-*}]} {\n \treturn \"character1\"\n-    } elseif {[test_compiler_info {gcc-*}]} {\n+    } elseif {[test_compiler_info {gcc-*}]\n+\t      || [test_compiler_info {clang-*}]} {\n \treturn \"character\\\\(kind=1\\\\)\"\n     } elseif {[test_compiler_info {icc-*}]} {\n \treturn \"CHARACTER\\\\(1\\\\)\""
    }
  ]
}