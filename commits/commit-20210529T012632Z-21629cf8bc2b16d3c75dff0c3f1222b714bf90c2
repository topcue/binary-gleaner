{
  "sha": "21629cf8bc2b16d3c75dff0c3f1222b714bf90c2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjE2MjljZjhiYzJiMTZkM2M3NWRmZjBjM2YxMjIyYjcxNGJmOTBjMg==",
  "commit": {
    "author": {
      "name": "Maciej W. Rozycki",
      "email": "macro@orcam.me.uk",
      "date": "2021-05-29T01:26:32Z"
    },
    "committer": {
      "name": "Maciej W. Rozycki",
      "email": "macro@orcam.me.uk",
      "date": "2021-05-29T01:26:32Z"
    },
    "message": "MIPS/opcodes: Properly handle ISA exclusion\n\nRemove the hack used for MIPSr6 ISA exclusion from `cpu_is_member' and\nhandle the exclusion for any ISA levels properly in `opcode_is_member'.\nFlatten the structure of the `if' statements there.  No functional\nchange for the existing opcode tables.\n\n\tinclude/\n\t* opcode/mips.h (cpu_is_member): Remove code for MIPSr6 ISA\n\texclusion.\n\t(opcode_is_member): Handle ISA level exclusion.",
    "tree": {
      "sha": "9e0d8099afb0614bd53bb12aa10e704c200204ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9e0d8099afb0614bd53bb12aa10e704c200204ec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "b1458c4569ec9eeb077e928b0eb6b210c7eb647f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1458c4569ec9eeb077e928b0eb6b210c7eb647f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b1458c4569ec9eeb077e928b0eb6b210c7eb647f"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 24,
    "deletions": 19
  },
  "files": [
    {
      "sha": "d1a0485fb12d17b4041dcdb84d0321bea6c947a5",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=21629cf8bc2b16d3c75dff0c3f1222b714bf90c2",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-29  Maciej W. Rozycki  <macro@orcam.me.uk>\n+\n+\t* opcode/mips.h (cpu_is_member): Remove code for MIPSr6 ISA\n+\texclusion.\n+\t(opcode_is_member): Handle ISA level exclusion.\n+\n 2021-05-29  Maciej W. Rozycki  <macro@orcam.me.uk>\n \n \t* opcode/mips.h (isa_is_member): New inline function, factored"
    },
    {
      "sha": "9add3c9d5bf5b99921ca95da2cfcaad895207992",
      "filename": "include/opcode/mips.h",
      "status": "modified",
      "additions": 18,
      "deletions": 19,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2/include/opcode/mips.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21629cf8bc2b16d3c75dff0c3f1222b714bf90c2/include/opcode/mips.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/mips.h?ref=21629cf8bc2b16d3c75dff0c3f1222b714bf90c2",
      "patch": "@@ -1459,13 +1459,6 @@ cpu_is_member (int cpu, unsigned int mask)\n     case CPU_INTERAPTIV_MR2:\n       return (mask & INSN_INTERAPTIV_MR2) != 0;\n \n-    case CPU_MIPS32R6:\n-      return (mask & INSN_ISA_MASK) == INSN_ISA32R6;\n-\n-    case CPU_MIPS64R6:\n-      return ((mask & INSN_ISA_MASK) == INSN_ISA32R6)\n-\t     || ((mask & INSN_ISA_MASK) == INSN_ISA64R6);\n-\n     default:\n       return false;\n     }\n@@ -1500,20 +1493,26 @@ isa_is_member (int isa, unsigned int mask)\n static inline bool\n opcode_is_member (const struct mips_opcode *insn, int isa, int ase, int cpu)\n {\n-  if (!cpu_is_member (cpu, insn->exclusions))\n-    {\n-      /* Test for ISA level compatibility.  */\n-      if (isa_is_member (isa, insn->membership))\n-\treturn true;\n+  /* Test for ISA level exclusion.  */\n+  if (isa_is_member (isa, insn->exclusions))\n+    return false;\n \n-      /* Test for ASE compatibility.  */\n-      if ((ase & insn->ase) != 0)\n-\treturn true;\n+  /* Test for processor-specific exclusion.  */\n+  if (cpu_is_member (cpu, insn->exclusions))\n+    return false;\n+\n+  /* Test for ISA level compatibility.  */\n+  if (isa_is_member (isa, insn->membership))\n+    return true;\n+\n+  /* Test for ASE compatibility.  */\n+  if ((ase & insn->ase) != 0)\n+    return true;\n+\n+  /* Test for processor-specific extensions.  */\n+  if (cpu_is_member (cpu, insn->membership))\n+    return true;\n \n-      /* Test for processor-specific extensions.  */\n-      if (cpu_is_member (cpu, insn->membership))\n-\treturn true;\n-    }\n   return false;\n }\n "
    }
  ]
}