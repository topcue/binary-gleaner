{
  "sha": "747656685b3e8477868478cd927fbb2834937aff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzQ3NjU2Njg1YjNlODQ3Nzg2ODQ3OGNkOTI3ZmJiMjgzNDkzN2FmZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-08-17T12:29:22Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-09-07T14:10:37Z"
    },
    "message": "gdb: make use of std::string in utils.c\n\nReplace some of the manual string management (malloc/free) with\nstd::string when creating commands in utils.c.\n\nThings are a little bit messy as, creating the prefix commands (using\nadd_basic_prefix_cmd and add_show_prefix_cmd), doesn't copy the doc\nstring, while creating the actual set/show commands (using\nadd_setshow_enum_cmd) does copy the doc string.\n\nAs a result, I have retained the use of xstrprintf when creating the\nprefix command doc strings, but switched to using std::string when\ncreating the actual set/show commands.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "029d92127ea0f6b4a181712a606fe23e1b090e69",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/029d92127ea0f6b4a181712a606fe23e1b090e69"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/747656685b3e8477868478cd927fbb2834937aff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/747656685b3e8477868478cd927fbb2834937aff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/747656685b3e8477868478cd927fbb2834937aff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/747656685b3e8477868478cd927fbb2834937aff/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "64dbf74d428e97de737c13f42767dab88493f187",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64dbf74d428e97de737c13f42767dab88493f187",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/64dbf74d428e97de737c13f42767dab88493f187"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 25,
    "deletions": 29
  },
  "files": [
    {
      "sha": "0a7c270b40db2646170a609b5189df4fee9fafaa",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 25,
      "deletions": 29,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/747656685b3e8477868478cd927fbb2834937aff/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/747656685b3e8477868478cd927fbb2834937aff/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=747656685b3e8477868478cd927fbb2834937aff",
      "patch": "@@ -508,19 +508,21 @@ add_internal_problem_command (struct internal_problem *problem)\n {\n   struct cmd_list_element **set_cmd_list;\n   struct cmd_list_element **show_cmd_list;\n-  char *set_doc;\n-  char *show_doc;\n \n   set_cmd_list = XNEW (struct cmd_list_element *);\n   show_cmd_list = XNEW (struct cmd_list_element *);\n   *set_cmd_list = NULL;\n   *show_cmd_list = NULL;\n \n-  set_doc = xstrprintf (_(\"Configure what GDB does when %s is detected.\"),\n-\t\t\tproblem->name);\n-\n-  show_doc = xstrprintf (_(\"Show what GDB does when %s is detected.\"),\n-\t\t\t problem->name);\n+  /* The add_basic_prefix_cmd and add_show_prefix_cmd functions take\n+     ownership of the string passed in, which is why we don't need to free\n+     set_doc and show_doc in this function.  */\n+  const char *set_doc\n+    = xstrprintf (_(\"Configure what GDB does when %s is detected.\"),\n+\t\t  problem->name);\n+  const char *show_doc\n+    = xstrprintf (_(\"Show what GDB does when %s is detected.\"),\n+\t\t  problem->name);\n \n   add_basic_prefix_cmd (problem->name, class_maintenance, set_doc,\n \t\t\tset_cmd_list,\n@@ -532,48 +534,42 @@ add_internal_problem_command (struct internal_problem *problem)\n \n   if (problem->user_settable_should_quit)\n     {\n-      set_doc = xstrprintf (_(\"Set whether GDB should quit \"\n-\t\t\t      \"when an %s is detected.\"),\n-\t\t\t    problem->name);\n-      show_doc = xstrprintf (_(\"Show whether GDB will quit \"\n-\t\t\t       \"when an %s is detected.\"),\n-\t\t\t     problem->name);\n+      std::string set_quit_doc\n+\t= string_printf (_(\"Set whether GDB should quit when an %s is \"\n+\t\t\t   \"detected.\"), problem->name);\n+      std::string show_quit_doc\n+\t= string_printf (_(\"Show whether GDB will quit when an %s is \"\n+\t\t\t   \"detected.\"), problem->name);\n       add_setshow_enum_cmd (\"quit\", class_maintenance,\n \t\t\t    internal_problem_modes,\n \t\t\t    &problem->should_quit,\n-\t\t\t    set_doc,\n-\t\t\t    show_doc,\n+\t\t\t    set_quit_doc.c_str (),\n+\t\t\t    show_quit_doc.c_str (),\n \t\t\t    NULL, /* help_doc */\n \t\t\t    NULL, /* setfunc */\n \t\t\t    NULL, /* showfunc */\n \t\t\t    set_cmd_list,\n \t\t\t    show_cmd_list);\n-\n-      xfree (set_doc);\n-      xfree (show_doc);\n     }\n \n   if (problem->user_settable_should_dump_core)\n     {\n-      set_doc = xstrprintf (_(\"Set whether GDB should create a core \"\n-\t\t\t      \"file of GDB when %s is detected.\"),\n-\t\t\t    problem->name);\n-      show_doc = xstrprintf (_(\"Show whether GDB will create a core \"\n-\t\t\t       \"file of GDB when %s is detected.\"),\n-\t\t\t     problem->name);\n+      std::string set_core_doc\n+\t= string_printf (_(\"Set whether GDB should create a core file of \"\n+\t\t\t   \"GDB when %s is detected.\"), problem->name);\n+      std::string show_core_doc\n+\t= string_printf (_(\"Show whether GDB will create a core file of \"\n+\t\t\t   \"GDB when %s is detected.\"), problem->name);\n       add_setshow_enum_cmd (\"corefile\", class_maintenance,\n \t\t\t    internal_problem_modes,\n \t\t\t    &problem->should_dump_core,\n-\t\t\t    set_doc,\n-\t\t\t    show_doc,\n+\t\t\t    set_core_doc.c_str (),\n+\t\t\t    show_core_doc.c_str (),\n \t\t\t    NULL, /* help_doc */\n \t\t\t    NULL, /* setfunc */\n \t\t\t    NULL, /* showfunc */\n \t\t\t    set_cmd_list,\n \t\t\t    show_cmd_list);\n-\n-      xfree (set_doc);\n-      xfree (show_doc);\n     }\n }\n "
    }
  ]
}