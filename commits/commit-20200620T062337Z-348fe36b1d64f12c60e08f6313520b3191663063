{
  "sha": "348fe36b1d64f12c60e08f6313520b3191663063",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzQ4ZmUzNmIxZDY0ZjEyYzYwZTA4ZjYzMTM1MjBiMzE5MTY2MzA2Mw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-20T06:23:37Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-20T06:23:37Z"
    },
    "message": "Remove perror from ld_assemble, ld_compile and ld_nm\n\nERROR should really be reserved for errors in the testsuite framework,\nnot just normal errors from the tools under test.  Removing use of\nperror has been suggested before but without action, over concerns\nthat some test failures might be missed.  This patch removes uses of\nperror in ld_assemble, ld_compile and ld_nm, and updates numerous\nplaces that ignored the result of these functions by inappropriately\nreturning an \"unresolved\" test status.  Net result over my large set\nof targets look good, in some cases improving the diagnostics, eg:\n\ni386-msdos  -ERROR: tmpdir/script: nm failed\ni386-msdos  -ERROR: tmpdir/script: nm failed\ni386-msdos  -ERROR: tmpdir/script: nm failed\ni386-msdos  -ERROR: tmpdir/script: nm failed\ni386-msdos  +FAIL: script\ni386-msdos  +FAIL: MRI script\ni386-msdos  +FAIL: MEMORY\ni386-msdos  +FAIL: MEMORY with symbols\n\n\t* testsuite/lib/ld-lib.exp (default_ld_compile): Don't perror on\n\ta compiler error.\n\t(default_ld_assemble): Similarly for an assembler error.\n\t(default_ld_nm): Similarly for an nm error.\n\t(run_ld_link_tests): Report ld_assemble errors as a fail.\n\t(check_as_cfi): Remove now unnecessary perror substitution.\n\t* testsuite/ld-elf/exclude.exp: Report ld_nm error return as test\n\tfails rather then unresolved.\n\t* testsuite/ld-gc/gc.exp: Likewise.\n\t* testsuite/ld-scripts/alignof.exp: Likewise.\n\t* testsuite/ld-scripts/defined.exp: Likewise.\n\t* testsuite/ld-scripts/script.exp: Likewise.\n\t* testsuite/ld-scripts/sizeof.exp: Likewise.\n\t* testsuite/ld-selective/selective.exp: Likewise.\n\t* testsuite/ld-scripts/extern.exp: Likewise.  Return on ld_link\n\tfailure.\n\t* testsuite/ld-elfweak/elfweak.exp: Report compiler errors as\n\ttest unresolved.\n\t* testsuite/ld-fastcall/fastcall.exp: Report assember errors as\n\ttest fails.\n\t* testsuite/ld-i386/i386.exp (iamcu_tests): Likewise.\n\t* testsuite/ld-ia64/line.exp: Likewise.\n\t* testsuite/ld-mep/mep.exp: Likewise.\n\t* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.\n\t* testsuite/ld-nios2/nios2.exp: Likewise.\n\t* testsuite/ld-scripts/alignof.exp: Likewise.\n\t* testsuite/ld-x86-64/line.exp: Likewise.\n\t* testsuite/ld-x86-64/x86-64.exp: Likewise.\n\t* testsuite/ld-scripts/log2.exp: Formatting.\n\t* testsuite/ld-tic6x/tic6x.exp: Report ld_link errors as a test fail.",
    "tree": {
      "sha": "0ba7dba17349d8877b3c73e1685405e8933f660a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ba7dba17349d8877b3c73e1685405e8933f660a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/348fe36b1d64f12c60e08f6313520b3191663063",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/348fe36b1d64f12c60e08f6313520b3191663063",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/348fe36b1d64f12c60e08f6313520b3191663063",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/348fe36b1d64f12c60e08f6313520b3191663063/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b0ee49d21ba0c4b7f9817db01dc247255eebd516",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0ee49d21ba0c4b7f9817db01dc247255eebd516",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b0ee49d21ba0c4b7f9817db01dc247255eebd516"
    }
  ],
  "stats": {
    "total": 175,
    "additions": 99,
    "deletions": 76
  },
  "files": [
    {
      "sha": "b089073dacd01bae5493dd3d66b9af514ac57a60",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -1,3 +1,36 @@\n+2020-06-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/ld-lib.exp (default_ld_compile): Don't perror on\n+\ta compiler error.\n+\t(default_ld_assemble): Similarly for an assembler error.\n+\t(default_ld_nm): Similarly for an nm error.\n+\t(run_ld_link_tests): Report ld_assemble errors as a fail.\n+\t(check_as_cfi): Remove now unnecessary perror substitution.\n+\t* testsuite/ld-elf/exclude.exp: Report ld_nm error return as test\n+\tfails rather then unresolved.\n+\t* testsuite/ld-gc/gc.exp: Likewise.\n+\t* testsuite/ld-scripts/alignof.exp: Likewise.\n+\t* testsuite/ld-scripts/defined.exp: Likewise.\n+\t* testsuite/ld-scripts/script.exp: Likewise.\n+\t* testsuite/ld-scripts/sizeof.exp: Likewise.\n+\t* testsuite/ld-selective/selective.exp: Likewise.\n+\t* testsuite/ld-scripts/extern.exp: Likewise.  Return on ld_link\n+\tfailure.\n+\t* testsuite/ld-elfweak/elfweak.exp: Report compiler errors as\n+\ttest unresolved.\n+\t* testsuite/ld-fastcall/fastcall.exp: Report assember errors as\n+\ttest fails.\n+\t* testsuite/ld-i386/i386.exp (iamcu_tests): Likewise.\n+\t* testsuite/ld-ia64/line.exp: Likewise.\n+\t* testsuite/ld-mep/mep.exp: Likewise.\n+\t* testsuite/ld-mips-elf/mips-elf-flags.exp: Likewise.\n+\t* testsuite/ld-nios2/nios2.exp: Likewise.\n+\t* testsuite/ld-scripts/alignof.exp: Likewise.\n+\t* testsuite/ld-x86-64/line.exp: Likewise.\n+\t* testsuite/ld-x86-64/x86-64.exp: Likewise.\n+\t* testsuite/ld-scripts/log2.exp: Formatting.\n+\t* testsuite/ld-tic6x/tic6x.exp: Report ld_link errors as a test fail.\n+\n 2020-06-20  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-alpha/alpha.exp: Exclude *ecoff targets."
    },
    {
      "sha": "af57509acd355d67cc764578780cea3a8ec5bdb1",
      "filename": "ld/testsuite/ld-elf/exclude.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-elf/exclude.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-elf/exclude.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/exclude.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -75,10 +75,9 @@ if { [ld_link $ld tmpdir/exclude.so \"--shared tmpdir/exclude1.o -Ltmpdir -lexclu\n     return\n }\n \n-if ![ld_nm $nm \"-D\" tmpdir/exclude.so] {\n-    unresolved $test2\n-} elseif { [info exists nm_output(exclude_common)]\n-\t    && [info exists nm_output(exclude_sym)] } {\n+if { [ld_nm $nm \"-D\" tmpdir/exclude.so]\n+     && [info exists nm_output(exclude_common)]\n+     && [info exists nm_output(exclude_sym)] } {\n     pass $test2\n } else {\n     fail $test2\n@@ -92,10 +91,9 @@ if { [ld_link $ld tmpdir/exclude.so \"--exclude-libs libexclude --shared tmpdir/e\n     fail $test3\n }\n \n-if ![ld_nm $nm \"-D\" tmpdir/exclude.so] {\n-    unresolved $test4\n-} elseif { ! [info exists nm_output(exclude_common)]\n-\t   &&  ! [info exists nm_output(exclude_sym)] } {\n+if { [ld_nm $nm \"-D\" tmpdir/exclude.so]\n+     && ! [info exists nm_output(exclude_common)]\n+     &&  ! [info exists nm_output(exclude_sym)] } {\n     pass $test4\n } else {\n     fail $test4"
    },
    {
      "sha": "1d5c438aa34729a3c2ba8789c1bf81313b69a3ab",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -392,10 +392,11 @@ if {![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n     || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/bar1a.c $tmpdir/bar1a.o]\n     || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n     || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]\n-    || ![ld_link $CC $tmpdir/libfoo1a.so \"$shared $tmpdir/foo1a.o\"]\n-    || ![ld_link $CC $tmpdir/libfoo1b.so \"$shared $tmpdir/foo1b.o\"]\n-    || ![ld_link $CC $tmpdir/libbar1a.so \"$shared $tmpdir/bar1a.o $tmpdir/libfoo1a.so\"]} then {\n+    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n+    unresolved \"ELF weak\"\n+} elseif {![ld_link $CC $tmpdir/libfoo1a.so \"$shared $tmpdir/foo1a.o\"]\n+\t  || ![ld_link $CC $tmpdir/libfoo1b.so \"$shared $tmpdir/foo1b.o\"]\n+\t  || ![ld_link $CC $tmpdir/libbar1a.so \"$shared $tmpdir/bar1a.o $tmpdir/libfoo1a.so\"]} then {\n     fail \"ELF weak\"\n } else {\n     build_lib \"ELF DSO weak func first\" libfoo \"foo.o bar.o\" dso.dsym"
    },
    {
      "sha": "06139cf20240e977d04f9d87ef8cfc3e6b4b8674",
      "filename": "ld/testsuite/ld-fastcall/fastcall.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-fastcall/fastcall.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-fastcall/fastcall.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-fastcall/fastcall.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -35,13 +35,13 @@ set ldflags \"\"\n \n if ![ld_assemble $as $srcdir/$subdir/export.s tmpdir/export.o] {\n     verbose \"Unable to assemble test file!\" 1\n-    unresolved $testname\n+    fail $testname\n     return\n }\n \n if ![ld_assemble $as $srcdir/$subdir/import.s tmpdir/import.o] {\n     verbose \"Unable to assemble test file!\" 1\n-    unresolved $testname\n+    fail $testname\n     return\n }\n "
    },
    {
      "sha": "ea3316887e3df0cb6b3d38db9eeab6b30b22292e",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -61,7 +61,7 @@ proc test_gc { testname filename linker ldflags} {\n \treturn\n     }\n     if ![ld_nm $nm \"\" $outfile] {\n-\tunresolved $testname\n+\tfail $testname\n \treturn\n     }\n     if {![info exists nm_output(used_func)] \\"
    },
    {
      "sha": "d71b9781648329f7d74028eeec84224a98f92bd0",
      "filename": "ld/testsuite/ld-i386/i386.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/i386.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -277,22 +277,22 @@ proc iamcu_tests {} {\n     global subdir\n \n     if ![ld_assemble $as \"--32 -march=iamcu $srcdir/$subdir/start.s\" tmpdir/startiamcu.o] {\n-\tunresolved \"Build Intel MCU start.o\"\n+\tfail \"Build Intel MCU start.o\"\n \treturn\n     }\n \n     if ![ld_assemble $as \"--32 $srcdir/$subdir/start.s\" tmpdir/start32.o] {\n-\tunresolved \"Build ia32 start.o\"\n+\tfail \"Build ia32 start.o\"\n \treturn\n      }\n \n     if ![ld_assemble $as \"--32 -march=iamcu $srcdir/$subdir/foo.s\" tmpdir/fooiamcu.o] {\n-\tunresolved \"Build Intel MCU foo.o\"\n+\tfail \"Build Intel MCU foo.o\"\n \treturn\n     }\n \n     if ![ld_assemble $as \"--32 $srcdir/$subdir/foo.s\" tmpdir/foo32.o] {\n-\tunresolved \"Build ia32 foo.o\"\n+\tfail \"Build ia32 foo.o\"\n \treturn\n     }\n "
    },
    {
      "sha": "bc7c7abacbc3e8b63d4c56182130989439992eab",
      "filename": "ld/testsuite/ld-ia64/line.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-ia64/line.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-ia64/line.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ia64/line.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -28,7 +28,7 @@ set testline \"undefined line\"\n \n if ![ld_assemble $as \"-x $srcdir/$subdir/undefined.s\" tmpdir/undefined.o] {\n     verbose \"Unable to assemble test file!\" 1\n-    unresolved $testline\n+    fail $testline\n     return\n }\n "
    },
    {
      "sha": "29e004418f5a9cf051a527edcf5464a3558a9607",
      "filename": "ld/testsuite/ld-mep/mep.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-mep/mep.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-mep/mep.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mep/mep.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -30,7 +30,7 @@ if ![istarget mep*-*-*] {\n set testbsrweak \"MeP bsr to undefined weak function\"\n \n if ![ld_assemble $as \"$srcdir/$subdir/mep1.s\" tmpdir/mep1.o] {\n-    unresolved $testbsrweak\n+    fail $testbsrweak\n } else { if ![ld_link $ld tmpdir/mep1 \"-T$srcdir/$subdir/mep1.ld tmpdir/mep1.o\"] {\n     fail $testbsrweak\n } else {"
    },
    {
      "sha": "1b5e3506a7c5d4beb792c7c982917a894a8072f8",
      "filename": "ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-mips-elf/mips-elf-flags.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mips-elf/mips-elf-flags.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -103,7 +103,7 @@ proc good_combination {arglist flags args} {\n     }\n \n     if {$objs == \"\"} {\n-\tunresolved $testname\n+\tfail $testname\n     } elseif {![ld_link \"$ld $ldemul\" $finalobj \"-r $objs\"]} {\n \tfail $testname\n     } else {\n@@ -201,7 +201,7 @@ proc bad_combination {arglist message} {\n     }\n \n     if {$objs == \"\"} {\n-\tunresolved $testname\n+\tfail $testname\n     } elseif {[ld_link \"$ld $ldemul\" $finalobj \"-r $objs\"]\n \t      || [string first $message $link_output] < 0} {\n \tfail $testname"
    },
    {
      "sha": "c7860a4680015d785af63c67e7a3376f3b5f9611",
      "filename": "ld/testsuite/ld-nios2/nios2.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-nios2/nios2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-nios2/nios2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-nios2/nios2.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -10,12 +10,12 @@ set test_name \"NIOS2 Mixed R1 and R2 objects\"\n set test mixed1\n \n if ![ld_assemble $as \"-march=r1 $srcdir/$subdir/${test}a.s\" tmpdir/${test}a.o] {\n-    unresolved \"Build mixed1a.o\"\n+    fail \"Build mixed1a.o\"\n     return\n }\n \n if ![ld_assemble $as \"-march=r2 $srcdir/$subdir/${test}b.s\" tmpdir/${test}b.o] {\n-    unresolved \"Build mixed1b.o\"\n+    fail \"Build mixed1b.o\"\n     return\n }\n "
    },
    {
      "sha": "9bb0421dbbd60039684d0b896cba4797a7cc8498",
      "filename": "ld/testsuite/ld-scripts/alignof.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/alignof.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/alignof.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/alignof.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -28,7 +28,7 @@ if {![is_elf_format] && ![is_pecoff_format]} {\n set testname \"ALIGNOF\"\n \n if ![ld_assemble $as $srcdir/$subdir/alignof.s tmpdir/alignof.o] {\n-    unresolved $testname\n+    fail $testname\n     return\n }\n \n@@ -38,7 +38,7 @@ if ![ld_link $ld tmpdir/alignof \"-T $srcdir/$subdir/alignof.t tmpdir/alignof.o\"]\n }\n \n if ![ld_nm $nm \"\" tmpdir/alignof] {\n-    unresolved $testname\n+    fail $testname\n     return\n }\n "
    },
    {
      "sha": "6889f04c167a30d53b7a46ca362d29699c5e4cb9",
      "filename": "ld/testsuite/ld-scripts/defined.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 25,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/defined.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/defined.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/defined.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -32,33 +32,25 @@ if [istarget \"x86_64-*-mingw*\"] then {\n   set LDFLAGS \"$LDFLAGS --image-base 0\"\n }\n \n-if ![ld_link $ld tmpdir/def \"$LDFLAGS -T $srcdir/$subdir/defined.t tmpdir/def.o\"] {\n+if { ![ld_link $ld tmpdir/def \"$LDFLAGS -T $srcdir/$subdir/defined.t tmpdir/def.o\"] } {\n+    fail $testname\n+} elseif { ![ld_nm $nm \"\" tmpdir/def] } {\n+    fail $testname\n+} elseif { ![info exists nm_output(value1)]\n+\t   || ![info exists nm_output(value2)]} {\n+    send_log \"bad output from nm\\n\"\n+    verbose \"bad output from nm\"\n+    fail $testname\n+} elseif {$nm_output(value1) != 1} {\n+    send_log \"value1 == $nm_output(value1)\\n\"\n+    verbose \"value1 == $nm_output(value1)\"\n+    fail $testname\n+} elseif {$nm_output(value2) != 2} {\n+    send_log \"value2 == $nm_output(value2)\\n\"\n+    verbose \"value2 == $nm_output(value2)\"\n     fail $testname\n } else {\n-    if ![ld_nm $nm \"\" tmpdir/def] {\n-\tunresolved $testname\n-    } else {\n-\tif {![info exists nm_output(value1)] \\\n-\t     || ![info exists nm_output(value2)]} {\n-\t    send_log \"bad output from nm\\n\"\n-\t    verbose \"bad output from nm\"\n-\t    fail $testname\n-\t} else {\n-\t    if {$nm_output(value1) != 1} {\n-\t\tsend_log \"value1 == $nm_output(value1)\\n\"\n-\t\tverbose \"value1 == $nm_output(value1)\"\n-\t\tfail $testname\n-\t    } else {\n-\t\tif {$nm_output(value2) != 2} {\n-\t\t    send_log \"value2 == $nm_output(value2)\\n\"\n-\t\t    verbose \"value2 == $nm_output(value2)\"\n-\t\t    fail $testname\n-\t\t} else {\n-\t\t    pass $testname\n-\t\t}\n-\t    }\n-\t}\n-    }\n+    pass $testname\n }\n \n set saved_ASFLAGS \"$ASFLAGS\""
    },
    {
      "sha": "d6faef811fcae886e15b33229aaea149593647e3",
      "filename": "ld/testsuite/ld-scripts/extern.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/extern.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/extern.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/extern.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -28,10 +28,11 @@ if ![ld_assemble $as $srcdir/$subdir/extern.s tmpdir/extern.o] {\n \n if ![ld_link $ld tmpdir/extern \"-T $srcdir/$subdir/extern.t tmpdir/extern.o\"] {\n     fail $testname\n+    return\n }\n \n if ![ld_nm $nm \"\" tmpdir/extern] {\n-    unresolved $testname\n+    fail $testname\n     return\n }\n "
    },
    {
      "sha": "d67504b4b068f9791bd6c30cf4d71c8244827b60",
      "filename": "ld/testsuite/ld-scripts/log2.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/log2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/log2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/log2.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -22,12 +22,12 @@\n set testname \"binary logarithm\"\n \n if {![ld_assemble $as $srcdir/$subdir/log2.s tmpdir/log2.o]} {\n-\tunresolved $testname\n-\treturn\n+    unresolved $testname\n+    return\n }\n \n if {![ld_link $ld tmpdir/log2 \"-T $srcdir/$subdir/log2.t tmpdir/log2.o\"]} {\n-\tfail $testname\n+    fail $testname\n } else {\n-\tpass $testname\n+    pass $testname\n }"
    },
    {
      "sha": "42bd452d6a1d1a64f723c4ddc866d3b43ff24aec",
      "filename": "ld/testsuite/ld-scripts/script.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/script.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/script.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/script.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -32,7 +32,7 @@ proc check_script { } {\n     global nm_output\n \n     if ![ld_nm $nm \"\" tmpdir/script] {\n-\tunresolved $testname\n+\tfail $testname\n \treturn\n     } \n "
    },
    {
      "sha": "4381573f8994112543b474182517840bd06a240b",
      "filename": "ld/testsuite/ld-scripts/sizeof.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/sizeof.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-scripts/sizeof.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/sizeof.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -33,7 +33,7 @@ if ![ld_link $ld tmpdir/sizeof \"-T $srcdir/$subdir/sizeof.t tmpdir/sizeof.o\"] {\n }\n \n if ![ld_nm $nm \"\" tmpdir/sizeof] {\n-    unresolved $testname\n+    fail $testname\n     return\n }\n "
    },
    {
      "sha": "ce66dc88e2f6f994257ce89b5ac46b5b7b46731c",
      "filename": "ld/testsuite/ld-selective/selective.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-selective/selective.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-selective/selective.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-selective/selective.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -151,7 +151,7 @@ foreach testitem $seltests {\n     }\n \n     if ![ld_nm $nm --demangle $ldfile] {\n-\tunresolved $testname\n+\tfail $testname\n \tcontinue\n     }\n "
    },
    {
      "sha": "c4b1d8ac037cc2a2bf9da8453cdb360bd46c89f1",
      "filename": "ld/testsuite/ld-tic6x/tic6x.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-tic6x/tic6x.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-tic6x/tic6x.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-tic6x/tic6x.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -154,7 +154,7 @@ if { ![ld_assemble_flags $as \"-mpic -mpid=near\" $srcdir/$subdir/shlib-1.s tmpdir\n      || ![ld_link $ld tmpdir/shlibb.o \"-r -EB tmpdir/shlib-1b.o tmpdir/shlib-2b.o\"]\n      || ![ld_link $ld tmpdir/dynapp-1 \"tmpdir/libtest.so tmpdir/shlib-app-1.o\"]\n      || ![ld_link $ld tmpdir/dynapp-1b \"-EB tmpdir/libtestb.so tmpdir/shlib-app-1b.o\"] } {\n-    unresolved \"TIC6X OSABI tests\"\n+    fail \"TIC6X OSABI tests\"\n     return\n }\n "
    },
    {
      "sha": "7eb6cf732aba53fe24bf62311d65e2f31fc2de19",
      "filename": "ld/testsuite/ld-x86-64/line.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-x86-64/line.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-x86-64/line.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/line.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -35,7 +35,7 @@ set testline \"undefined line\"\n \n if ![ld_assemble $as \"--64 $srcdir/$subdir/undefined.s\" tmpdir/undefined.o] {\n     verbose \"Unable to assemble test file!\" 1\n-    unresolved $testline\n+    fail $testline\n     return\n }\n "
    },
    {
      "sha": "6bd1f123317ee1299e848e306988ba65b8368df8",
      "filename": "ld/testsuite/ld-x86-64/x86-64.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/ld-x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/x86-64.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -475,32 +475,32 @@ if { ![istarget \"x86_64-*-linux*\"] && ![istarget \"x86_64-*-nacl*\"]} {\n }\n \n if ![ld_assemble $as \"--x32 $srcdir/$subdir/start.s\" tmpdir/startx32.o] {\n-    unresolved \"Build ILP32 start.o\"\n+    fail \"Build ILP32 start.o\"\n     return\n }\n \n if ![ld_assemble $as \"--32 $srcdir/$subdir/start.s\" tmpdir/start32.o] {\n-    unresolved \"Build ia32 start.o\"\n+    fail \"Build ia32 start.o\"\n     return\n }\n \n if ![ld_assemble $as \"--64 $srcdir/$subdir/start.s\" tmpdir/start64.o] {\n-    unresolved \"Build LP64 start.o\"\n+    fail \"Build LP64 start.o\"\n     return\n }\n \n if ![ld_assemble $as \"--x32 $srcdir/$subdir/foo.s\" tmpdir/foox32.o] {\n-    unresolved \"Build ILP32 foo.o\"\n+    fail \"Build ILP32 foo.o\"\n     return\n }\n \n if ![ld_assemble $as \"--32 $srcdir/$subdir/foo.s\" tmpdir/foo32.o] {\n-    unresolved \"Build ia32 foo.o\"\n+    fail \"Build ia32 foo.o\"\n     return\n }\n \n if ![ld_assemble $as \"--64 $srcdir/$subdir/foo.s\" tmpdir/foo64.o] {\n-    unresolved \"Build LP64 foo.o\"\n+    fail \"Build LP64 foo.o\"\n     return\n }\n "
    },
    {
      "sha": "8d851a94b710e310e759fdd2398c26ddb0d06d2d",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/348fe36b1d64f12c60e08f6313520b3191663063/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=348fe36b1d64f12c60e08f6313520b3191663063",
      "patch": "@@ -289,7 +289,6 @@ proc default_ld_compile { cc source object } {\n \treturn 1\n     } else {\n \tverbose -log \"$exec_output\"\n-\tperror \"$source: compilation failed\"\n \treturn 0\n     }\n }\n@@ -310,7 +309,6 @@ proc default_ld_assemble { as in_flags source object } {\n     if [string match \"\" $exec_output] then {\n \treturn 1\n     } else {\n-\tperror \"$source: assembly failed\"\n \treturn 0\n     }\n }\n@@ -361,7 +359,6 @@ proc default_ld_nm { nm nmflags object } {\n \treturn 1\n     } else {\n \tverbose -log \"$exec_output\"\n-\tperror \"$object: nm failed\"\n \treturn 0\n     }\n }\n@@ -520,12 +517,17 @@ proc run_ld_link_tests { ldtests args } {\n \t\tset as_file \"$srcdir/$subdir/$src_file\"\n \t    }\n \t    if ![ld_assemble $as \"$as_options $as_file\" $objfile] {\n-\t\tset is_unresolved 1\n+\t\tset failed 1\n \t\tbreak\n \t    }\n \t}\n \n \t# Catch assembler errors.\n+\tif { $failed } {\n+\t    fail $testname\n+\t    continue\n+\t}\n+\t# Catch compiler errors.\n \tif { $is_unresolved } {\n \t    unresolved $testname\n \t    continue\n@@ -1367,11 +1369,7 @@ proc check_as_cfi { } {\n     close $as_fh\n     remote_download host $as_file\n     verbose -log \"Checking CFI support:\"\n-    rename \"perror\" \"check_as_cfi_perror\"\n-    proc perror { args } { }\n     set success [ld_assemble $as $as_file \"/dev/null\"]\n-    rename \"perror\" \"\"\n-    rename \"check_as_cfi_perror\" \"perror\"\n     #remote_file host delete $as_file\n     set check_as_cfi_result $success\n     return $success"
    }
  ]
}