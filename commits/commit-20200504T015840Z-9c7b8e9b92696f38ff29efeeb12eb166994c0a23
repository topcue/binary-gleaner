{
  "sha": "9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWM3YjhlOWI5MjY5NmYzOGZmMjllZmVlYjEyZWIxNjY5OTRjMGEyMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-04T00:50:54Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-04T01:58:40Z"
    },
    "message": "readelf: nds32 specific decoding\n\n\t* readelf.c (process_nds32_specific): Check size of .nds32_e_flags\n\tsection.  Don't assume endian of host matches nds32 target.  Free\n\tbuffer.",
    "tree": {
      "sha": "b213f04eac47577b58a4e28dc4b716ed4cc2223b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b213f04eac47577b58a4e28dc4b716ed4cc2223b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c7b8e9b92696f38ff29efeeb12eb166994c0a23/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c3bf7d31de6b0c693c1c873ce3c36bc8c43ca06a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3bf7d31de6b0c693c1c873ce3c36bc8c43ca06a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c3bf7d31de6b0c693c1c873ce3c36bc8c43ca06a"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 15,
    "deletions": 6
  },
  "files": [
    {
      "sha": "7b0d1a0477ed0c08a0f7fda0919ca413aa0f8a3d",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c7b8e9b92696f38ff29efeeb12eb166994c0a23/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c7b8e9b92696f38ff29efeeb12eb166994c0a23/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_nds32_specific): Check size of .nds32_e_flags\n+\tsection.  Don't assume endian of host matches nds32 target.  Free\n+\tbuffer.\n+\n 2020-05-01  Alan Modra  <amodra@gmail.com>\n \t    Haim Shimonovich  <Haim.Shimonovich@ceva-dsp.com>\n "
    },
    {
      "sha": "25c2cce21ae8ecbc84a3519d5e01d6310a664ffa",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c7b8e9b92696f38ff29efeeb12eb166994c0a23/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c7b8e9b92696f38ff29efeeb12eb166994c0a23/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
      "patch": "@@ -17481,18 +17481,21 @@ process_nds32_specific (Filedata * filedata)\n   Elf_Internal_Shdr *sect = NULL;\n \n   sect = find_section (filedata, \".nds32_e_flags\");\n-  if (sect != NULL)\n+  if (sect != NULL && sect->sh_size >= 4)\n     {\n-      unsigned int *flag;\n+      unsigned char *buf;\n+      unsigned int flag;\n \n       printf (\"\\nNDS32 elf flags section:\\n\");\n-      flag = get_data (NULL, filedata, sect->sh_offset, 1,\n-\t\t       sect->sh_size, _(\"NDS32 elf flags section\"));\n+      buf = get_data (NULL, filedata, sect->sh_offset, 1, 4,\n+\t\t      _(\"NDS32 elf flags section\"));\n \n-      if (! flag)\n+      if (buf == NULL)\n \treturn FALSE;\n \n-      switch ((*flag) & 0x3)\n+      flag = byte_get (buf, 4);\n+      free (buf);\n+      switch (flag & 0x3)\n \t{\n \tcase 0:\n \t  printf (\"(VEC_SIZE):\\tNo entry.\\n\");"
    }
  ]
}