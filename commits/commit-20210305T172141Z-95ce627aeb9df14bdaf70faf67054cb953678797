{
  "sha": "95ce627aeb9df14bdaf70faf67054cb953678797",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTVjZTYyN2FlYjlkZjE0YmRhZjcwZmFmNjcwNTRjYjk1MzY3ODc5Nw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-27T15:41:52Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-05T17:21:41Z"
    },
    "message": "gdb: write target description into core file\n\nWhen a core file is created from within GDB add the target description\ninto a note within the core file.\n\nWhen loading a core file, if the target description note is present\nthen load the target description from the core file.\n\nThe benefit of this is that we can be sure that, when analysing the\ncore file within GDB, that we are using the exact same target\ndescription as was in use at the time the core file was created.\n\nGDB already supports a mechanism for figuring out the target\ndescription from a given corefile; gdbarch_core_read_description.\nThis new mechanism (GDB adding the target description) is not going to\nreplace the old mechanism.  Core files generated outside of GDB will\nnot include a target description, and so GDB still needs to be able to\nfigure out a target description for these files.\n\nMy primary motivation for adding this feature is that, in a future\ncommit, I will be adding support for bare metal core dumps on some\ntargets.  For RISC-V specifically, I want to be able to dump all the\navailable control status registers.  As different targets will present\ndifferent sets of register in their target description, including\nregisters that are possibly not otherwise known to GDB I wanted a way\nto capture these registers in the core dump.\n\nI therefore need a mechanism to write out an arbitrary set of\nregisters, and to then derive a target description from this arbitrary\nset when later loading the core file.  The obvious approach (I think)\nis to just reuse the target description.\n\nOnce I'd decided to add support for writing out the target description\nI could either choose to make this RISC-V only, or make it generic.  I\nfigure that having the target description in the core file doesn't\nhurt, and _might_ be helpful.  So that's how I got here, general\nsupport for including the target description in GDB generated core\nfiles.\n\nIn previous versions of this patch I added the target description from\ngeneric code (in gcore.c).  However, doing this creates a dependency\nbetween GDB's common code and bfd ELF support.  As ELF support in gdb\nis optional (for example the target x86_64-apple-darwin20.3.0 does not\ninclude ELF support) then having gcore.c require ELF support would\nbreak the GDB build in some cases.\n\nInstead, in this version of the patch, writing the target description\nnote is done from each specific targets make notes function.  Each of\nthese now calls a common function in gcore-elf.c (which is only linked\nin when bfd has ELF support).  And so only targets that are ELF based\nwill call the new function and we can therefore avoid an unconditional\ndependency on ELF support.\n\ngdb/ChangeLog:\n\n\t* corelow.c: Add 'xml-tdesc.h' include.\n\t(core_target::read_description): Load the target description from\n\tthe core file when possible.\n\t* fbsd-tdep.c (fbsd_make_corefile_notes): Add target description\n\tnote.\n\t* gcore-elf.c: Add 'gdbsupport/tdesc.h' include.\n\t(gcore_elf_make_tdesc_note): New function.\n\t* gcore-elf.h (gcore_elf_make_tdesc_note): Declare.\n\t* linux-tdep.c (linux_make_corefile_notes): Add target description\n\tnote.",
    "tree": {
      "sha": "9ccba4435c9e71c6bbc017edd41dcb33542b7e97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ccba4435c9e71c6bbc017edd41dcb33542b7e97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/95ce627aeb9df14bdaf70faf67054cb953678797",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95ce627aeb9df14bdaf70faf67054cb953678797",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/95ce627aeb9df14bdaf70faf67054cb953678797",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95ce627aeb9df14bdaf70faf67054cb953678797/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b63a5e38efa2dc6df46eafb0bbad3f48472e1bef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b63a5e38efa2dc6df46eafb0bbad3f48472e1bef",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b63a5e38efa2dc6df46eafb0bbad3f48472e1bef"
    }
  ],
  "stats": {
    "total": 82,
    "additions": 82,
    "deletions": 0
  },
  "files": [
    {
      "sha": "dbcc524a083843e1145a75d3ce19e7aa07b6c7f3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=95ce627aeb9df14bdaf70faf67054cb953678797",
      "patch": "@@ -1,3 +1,17 @@\n+2021-03-05  Craig Blackmore  <craig.blackmore@embecosm.com>\n+\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* corelow.c: Add 'xml-tdesc.h' include.\n+\t(core_target::read_description): Load the target description from\n+\tthe core file when possible.\n+\t* fbsd-tdep.c (fbsd_make_corefile_notes): Add target description\n+\tnote.\n+\t* gcore-elf.c: Add 'gdbsupport/tdesc.h' include.\n+\t(gcore_elf_make_tdesc_note): New function.\n+\t* gcore-elf.h (gcore_elf_make_tdesc_note): Declare.\n+\t* linux-tdep.c (linux_make_corefile_notes): Add target description\n+\tnote.\n+\n 2021-03-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* Makefile.in (SFILES): Add gcore-elf.c."
    },
    {
      "sha": "a2d2d20afc627e6a71833e3bfb0e3769d746e4d2",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=95ce627aeb9df14bdaf70faf67054cb953678797",
      "patch": "@@ -49,6 +49,7 @@\n #include <unordered_map>\n #include <unordered_set>\n #include \"gdbcmd.h\"\n+#include \"xml-tdesc.h\"\n \n #ifndef O_LARGEFILE\n #define O_LARGEFILE 0\n@@ -1000,6 +1001,29 @@ core_target::thread_alive (ptid_t ptid)\n const struct target_desc *\n core_target::read_description ()\n {\n+  /* If the core file contains a target description note then we will use\n+     that in preference to anything else.  */\n+  bfd_size_type tdesc_note_size = 0;\n+  struct bfd_section *tdesc_note_section\n+    = bfd_get_section_by_name (core_bfd, \".gdb-tdesc\");\n+  if (tdesc_note_section != nullptr)\n+    tdesc_note_size = bfd_section_size (tdesc_note_section);\n+  if (tdesc_note_size > 0)\n+    {\n+      gdb::char_vector contents (tdesc_note_size + 1);\n+      if (bfd_get_section_contents (core_bfd, tdesc_note_section,\n+\t\t\t\t    contents.data (), (file_ptr) 0,\n+\t\t\t\t    tdesc_note_size))\n+\t{\n+\t  /* Ensure we have a null terminator.  */\n+\t  contents[tdesc_note_size] = '\\0';\n+\t  const struct target_desc *result\n+\t    = string_read_description_xml (contents.data ());\n+\t  if (result != nullptr)\n+\t    return result;\n+\t}\n+    }\n+\n   if (m_core_gdbarch && gdbarch_core_read_description_p (m_core_gdbarch))\n     {\n       const struct target_desc *result;"
    },
    {
      "sha": "170e8f5e84e2d5e99a2e3a3f205d44214e0de78b",
      "filename": "gdb/fbsd-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/fbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/fbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/fbsd-tdep.c?ref=95ce627aeb9df14bdaf70faf67054cb953678797",
      "patch": "@@ -712,6 +712,9 @@ fbsd_make_corefile_notes (struct gdbarch *gdbarch, bfd *obfd, int *note_size)\n \treturn NULL;\n     }\n \n+  /* Include the target description when possible.  */\n+  gcore_elf_make_tdesc_note (obfd, &note_data, note_size);\n+\n   return note_data;\n }\n "
    },
    {
      "sha": "d9c216be2fae4215ac471a313e9c8322124cd3be",
      "filename": "gdb/gcore-elf.c",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/gcore-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/gcore-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gcore-elf.c?ref=95ce627aeb9df14bdaf70faf67054cb953678797",
      "patch": "@@ -24,6 +24,7 @@\n #include \"gdbthread.h\"\n #include \"inferior.h\"\n #include \"regset.h\"\n+#include \"gdbsupport/tdesc.h\"\n \n /* Structure for passing information from GCORE_COLLECT_THREAD_REGISTERS\n    via an iterator to GCORE_COLLECT_REGSET_SECTION_CB. */\n@@ -134,3 +135,32 @@ gcore_elf_build_thread_register_notes\n   gcore_elf_collect_thread_registers (regcache, info->ptid, obfd,\n \t\t\t\t      note_data, note_size, stop_signal);\n }\n+\n+/* See gcore-elf.h.  */\n+\n+void\n+gcore_elf_make_tdesc_note (bfd *obfd,\n+\t\t\t   gdb::unique_xmalloc_ptr<char> *note_data,\n+\t\t\t   int *note_size)\n+{\n+  /* Append the target description to the core file.  */\n+  const struct target_desc *tdesc = gdbarch_target_desc (target_gdbarch ());\n+  const char *tdesc_xml\n+    = tdesc == nullptr ? nullptr : tdesc_get_features_xml (tdesc);\n+  if (tdesc_xml != nullptr && *tdesc_xml != '\\0')\n+    {\n+      /* Skip the leading '@'.  */\n+      if (*tdesc_xml == '@')\n+\t++tdesc_xml;\n+\n+      /* Include the null terminator in the length.  */\n+      size_t tdesc_len = strlen (tdesc_xml) + 1;\n+\n+      /* Now add the target description into the core file.  */\n+      note_data->reset (elfcore_write_register_note (obfd,\n+\t\t\t\t\t\t     note_data->release (),\n+\t\t\t\t\t\t     note_size,\n+\t\t\t\t\t\t     \".gdb-tdesc\", tdesc_xml,\n+\t\t\t\t\t\t     tdesc_len));\n+    }\n+}"
    },
    {
      "sha": "b750165323e901668fe92afbe8f7decc6a725c0c",
      "filename": "gdb/gcore-elf.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/gcore-elf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/gcore-elf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gcore-elf.h?ref=95ce627aeb9df14bdaf70faf67054cb953678797",
      "patch": "@@ -36,4 +36,12 @@ extern void gcore_elf_build_thread_register_notes\n   (struct gdbarch *gdbarch, struct thread_info *info, gdb_signal stop_signal,\n    bfd *obfd, gdb::unique_xmalloc_ptr<char> *note_data, int *note_size);\n \n+/* Add content to *NOTE_DATA (and update *NOTE_SIZE) to include a note\n+   containing the current targtet's target description.  The core file is\n+   being written to OBFD.  If something goes wrong then *NOTE_DATA can be\n+   set to nullptr.  */\n+\n+extern void gcore_elf_make_tdesc_note\n+  (bfd *obfd, gdb::unique_xmalloc_ptr<char> *note_data, int *note_size);\n+\n #endif /* GCORE_ELF_H */"
    },
    {
      "sha": "ab3402a41c219a5af14871be1afdf6b329d3f6f2",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95ce627aeb9df14bdaf70faf67054cb953678797/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=95ce627aeb9df14bdaf70faf67054cb953678797",
      "patch": "@@ -1935,6 +1935,9 @@ linux_make_corefile_notes (struct gdbarch *gdbarch, bfd *obfd, int *note_size)\n   /* File mappings.  */\n   linux_make_mappings_corefile_notes (gdbarch, obfd, note_data, note_size);\n \n+  /* Target description.  */\n+  gcore_elf_make_tdesc_note (obfd, &note_data, note_size);\n+\n   return note_data;\n }\n "
    }
  ]
}