{
  "sha": "95148614026da7353721411dd020d024667e3482",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTUxNDg2MTQwMjZkYTczNTM3MjE0MTFkZDAyMGQwMjQ2NjdlMzQ4Mg==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-02-03T18:42:06Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-02-10T15:26:57Z"
    },
    "message": "bfd, opcodes, libctf: support --with-included-gettext\n\nRight now, these libraries hardwire -L../intl -lintl on a few fixed\nplatforms, which works fine on those platforms but on other platforms\nleads to shared libraries that lack libintl_* symbols when configured\n--with-included-gettext, and/or static libraries that contain libintl as\n*another* static library.  If we instead use the LIBINTL variable\ndefined in ../intl/config.intl, this gives us the right thing on all\nthree classes of platform (gettext in libc, gettext in system libintl,\ngettext in ../intl/libintl.a)..  This also means we can rip out some\nDarwin-specific machinery from configure.ac and also simplify the Cygwin\nside.\n\nThis also means that the libctf testsuite (and other places that include\nlibbfd, libopcodes or libctf) don't need to grow libintl dependencies\njust on account of those libraries (though they still need such\ndependencies if they themselves use gettext machinery).\n\nbfd/ChangeLog\n2021-02-03  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* configure.ac (SHARED_LIBADD): Remove explicit -lintl population in\n\tfavour of LIBINTL.\n\t* configure: Regenerated.\n\nlibctf/ChangeLog\n2021-02-02  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* configure.ac (CTF_LIBADD): Remove explicit -lintl population in\n\tfavour of LIBINTL.\n\t* Makefile.am (libctf_nobfd_la_LIBADD): No longer explicitly\n\tinclude $(LIBINTL).\n\t(check-DEJAGNU): Pass down to tests as well.\n\t* configure: Regenerated.\n\t* Makefile.in: Likewise.\n\nopcodes/ChangeLog\n2021-02-04  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* configure.ac (SHARED_LIBADD): Remove explicit -lintl population in\n\tfavour of LIBINTL.\n\t* configure: Regenerated.",
    "tree": {
      "sha": "39af646d728d6f1c7a7e78d592bb9c56dbed99cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/39af646d728d6f1c7a7e78d592bb9c56dbed99cb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/95148614026da7353721411dd020d024667e3482",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95148614026da7353721411dd020d024667e3482",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/95148614026da7353721411dd020d024667e3482",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95148614026da7353721411dd020d024667e3482/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aee224d6434c08a1404a4357cf0a664a4c2f02eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aee224d6434c08a1404a4357cf0a664a4c2f02eb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/aee224d6434c08a1404a4357cf0a664a4c2f02eb"
    }
  ],
  "stats": {
    "total": 107,
    "additions": 74,
    "deletions": 33
  },
  "files": [
    {
      "sha": "ebe2b5882e364da421fd020df0574324a2448fbf",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-03  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac (SHARED_LIBADD): Remove explicit -lintl population in\n+\tfavour of LIBINTL.\n+\t* configure: Regenerated.\n+\n 2021-02-09  Alan Modra  <amodra@gmail.com>\n \n \t* config.bfd (arm*-*-symbianelf*): Move from obsolete to removed."
    },
    {
      "sha": "accd39cc59ea86032e4b74bb7dec41afe789154a",
      "filename": "bfd/configure",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/bfd/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/bfd/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -14632,17 +14632,16 @@ if test \"$enable_shared\" = \"yes\"; then\n   if test -n \"$x\"; then\n     SHARED_LIBADD=\"-L`pwd`/../libiberty/pic -liberty\"\n   fi\n+fi\n+\n+SHARED_LIBADD=\"$SHARED_LIBADD $LIBINTL\"\n \n+if test \"$enable_shared\" = \"yes\"; then\n   case \"${host}\" in\n   # More hacks to build DLLs on Windows.\n   *-*-cygwin*)\n     SHARED_LDFLAGS=\"-no-undefined\"\n-    SHARED_LIBADD=\"-L`pwd`/../libiberty -liberty -L`pwd`/../intl -lintl -lcygwin -lkernel32\"\n-  ;;\n-\n-  # Use built-in libintl on macOS, since it is not provided by libc.\n-  *-*-darwin*)\n-    SHARED_LIBADD=\"-L`pwd`/../libiberty/pic -L`pwd`/../intl -liberty -lintl\"\n+    SHARED_LIBADD=\"-L`pwd`/../libiberty -liberty $SHARED_LIBADD -lcygwin -lkernel32\"\n   ;;\n   esac\n "
    },
    {
      "sha": "e9a07b8ff05b7ba5ed381fef2bc42852641003c5",
      "filename": "bfd/configure.ac",
      "status": "modified",
      "additions": 5,
      "deletions": 6,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/bfd/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/bfd/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.ac?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -317,17 +317,16 @@ changequote([,])dnl\n   if test -n \"$x\"; then\n     SHARED_LIBADD=\"-L`pwd`/../libiberty/pic -liberty\"\n   fi\n+fi\n+\n+SHARED_LIBADD=\"$SHARED_LIBADD $LIBINTL\"\n \n+if test \"$enable_shared\" = \"yes\"; then\n   case \"${host}\" in\n   # More hacks to build DLLs on Windows.\n   *-*-cygwin*)\n     SHARED_LDFLAGS=\"-no-undefined\"\n-    SHARED_LIBADD=\"-L`pwd`/../libiberty -liberty -L`pwd`/../intl -lintl -lcygwin -lkernel32\"\n-  ;;\n-\n-  # Use built-in libintl on macOS, since it is not provided by libc.\n-  *-*-darwin*)\n-    SHARED_LIBADD=\"-L`pwd`/../libiberty/pic -L`pwd`/../intl -liberty -lintl\"\n+    SHARED_LIBADD=\"-L`pwd`/../libiberty -liberty $SHARED_LIBADD -lcygwin -lkernel32\"\n   ;;\n   esac\n "
    },
    {
      "sha": "c7f3da1d4f6c36c402553e40250ff7bb8c7a62dd",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -1,3 +1,13 @@\n+2021-02-02  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac (CTF_LIBADD): Remove explicit -lintl population in\n+\tfavour of LIBINTL.\n+\t* Makefile.am (libctf_nobfd_la_LIBADD): No longer explicitly\n+\tinclude $(LIBINTL).\n+\t(check-DEJAGNU): Pass down to tests as well.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Likewise.\n+\n 2021-01-27  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-string.c (ctf_str_add): Treat adding a NULL as adding \"\"."
    },
    {
      "sha": "908564c35cbeebe38f388c28fe41fcd216ad52ff",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -41,7 +41,7 @@ include_HEADERS =\n noinst_LTLIBRARIES = libctf.la libctf-nobfd.la\n endif\n \n-libctf_nobfd_la_LIBADD = @CTF_LIBADD@ $(LIBINTL) $(ZLIB)\n+libctf_nobfd_la_LIBADD = @CTF_LIBADD@ $(ZLIB)\n libctf_nobfd_la_LDFLAGS = -version-info 0:0:0 @SHARED_LDFLAGS@ @VERSION_FLAGS@\n libctf_nobfd_la_CPPFLAGS = $(AM_CPPFLAGS) -DNOBFD=1\n libctf_nobfd_la_SOURCES = ctf-archive.c ctf-dump.c ctf-create.c ctf-decl.c ctf-error.c \\\n@@ -86,7 +86,7 @@ check-DEJAGNU: site.exp development.exp\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n \t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n \t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n-\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(LIBS)\" $(RUNTESTFLAGS); \\\n+\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n \telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \tfi\n "
    },
    {
      "sha": "17a9a7f32ba5ca67fbc3d9f7a157dc37bb4cc304",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -164,8 +164,7 @@ am__uninstall_files_from_dir = { \\\n am__installdirs = \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(includedir)\"\n LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n-libctf_nobfd_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\\n-\t$(am__DEPENDENCIES_1)\n+libctf_nobfd_la_DEPENDENCIES = $(am__DEPENDENCIES_1)\n am__libctf_nobfd_la_SOURCES_DIST = ctf-archive.c ctf-dump.c \\\n \tctf-create.c ctf-decl.c ctf-error.c ctf-hash.c ctf-labels.c \\\n \tctf-dedup.c ctf-link.c ctf-lookup.c ctf-open.c ctf-sha1.c \\\n@@ -191,7 +190,7 @@ libctf_nobfd_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t-o $@\n @INSTALL_LIBBFD_FALSE@am_libctf_nobfd_la_rpath =\n @INSTALL_LIBBFD_TRUE@am_libctf_nobfd_la_rpath = -rpath $(libdir)\n-am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)\n+am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)\n libctf_la_DEPENDENCIES = ../bfd/libbfd.la $(am__DEPENDENCIES_2)\n am__libctf_la_SOURCES_DIST = ctf-archive.c ctf-dump.c ctf-create.c \\\n \tctf-decl.c ctf-error.c ctf-hash.c ctf-labels.c ctf-dedup.c \\\n@@ -458,7 +457,7 @@ AM_CFLAGS = -std=gnu99 @ac_libctf_warn_cflags@ @warn@ @c_warn@ @WARN_PEDANTIC@ @\n @INSTALL_LIBBFD_FALSE@include_HEADERS = \n @INSTALL_LIBBFD_TRUE@include_HEADERS = $(INCDIR)/ctf.h $(INCDIR)/ctf-api.h\n @INSTALL_LIBBFD_FALSE@noinst_LTLIBRARIES = libctf.la libctf-nobfd.la\n-libctf_nobfd_la_LIBADD = @CTF_LIBADD@ $(LIBINTL) $(ZLIB)\n+libctf_nobfd_la_LIBADD = @CTF_LIBADD@ $(ZLIB)\n libctf_nobfd_la_LDFLAGS = -version-info 0:0:0 @SHARED_LDFLAGS@ @VERSION_FLAGS@\n libctf_nobfd_la_CPPFLAGS = $(AM_CPPFLAGS) -DNOBFD=1\n libctf_nobfd_la_SOURCES = ctf-archive.c ctf-dump.c ctf-create.c \\\n@@ -1337,7 +1336,7 @@ check-DEJAGNU: site.exp development.exp\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n \t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n \t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n-\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(LIBS)\" $(RUNTESTFLAGS); \\\n+\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n \telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \tfi\n "
    },
    {
      "sha": "bef55bb8cc5c228f9d39de7d9d36a3635aff52c6",
      "filename": "libctf/configure",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/libctf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/libctf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -13357,29 +13357,34 @@ $as_echo \"#define HAVE_O_CLOEXEC 1\" >>confdefs.h\n \n fi\n \n-# Horrible hacks to build DLLs on Windows and a shared library elsewhere.\n-\n CTF_LIBADD=\"-L`pwd`/../libiberty -liberty\"\n SHARED_LDFLAGS=\n+\n+# Horrible hacks to build DLLs on Windows and a shared library elsewhere.\n if test \"$enable_shared\" = \"yes\"; then\n # When building a shared libctf, link against the pic version of libiberty\n # so that apps that use libctf won't need libiberty just to satisfy any\n-# libctf references.\n-# We can't do that if a pic libiberty is unavailable since including non-pic\n-# code would insert text relocations into libctf.\n+# libctf references.  We can't do that if a pic libiberty is unavailable\n+# since including non-pic # code would insert text relocations into libctf.\n # Note that linking against libbfd as we do here, which is itself linked\n # against libiberty, may not satisfy all the libctf libiberty references\n # since libbfd may not pull in the entirety of libiberty.\n+# Also, jam libintl into the right place in all of this: after libiberty,\n+# which uses it, but before -lcygwin, which it uses.\n   x=`sed -n -e 's/^[ \t]*PICFLAG[ \t]*=[ \t]*//p' < ../libiberty/Makefile | sed -n '$p'`\n   if test -n \"$x\"; then\n     CTF_LIBADD=\"-L`pwd`/../libiberty/pic -liberty\"\n   fi\n+fi\n+\n+CTF_LIBADD=\"$CTF_LIBADD $LIBINTL\"\n \n+if test \"$enable_shared\" = \"yes\"; then\n   case \"${host}\" in\n   # More hacks to build DLLs on Windows.\n     *-*-cygwin*)\n       SHARED_LDFLAGS=\"-no-undefined\"\n-      CTF_LIBADD=\"$CTF_LIBADD -L`pwd`/../intl -lintl -lcygwin\"\n+      CTF_LIBADD=\"$CTF_LIBADD -lcygwin\"\n       ;;\n   esac\n fi"
    },
    {
      "sha": "ef00efe1fe1faaf3c8d8829569a972b454ba8ca4",
      "filename": "libctf/configure.ac",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/libctf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/libctf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure.ac?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -169,31 +169,36 @@ if test $ac_cv_libctf_macro_O_CLOEXEC = yes; then\n \t    [Whether the platform has a definition of O_CLOEXEC.])\n fi\n \n-# Horrible hacks to build DLLs on Windows and a shared library elsewhere.\n-\n CTF_LIBADD=\"-L`pwd`/../libiberty -liberty\"\n SHARED_LDFLAGS=\n+\n+# Horrible hacks to build DLLs on Windows and a shared library elsewhere.\n if test \"$enable_shared\" = \"yes\"; then\n # When building a shared libctf, link against the pic version of libiberty\n # so that apps that use libctf won't need libiberty just to satisfy any\n-# libctf references.\n-# We can't do that if a pic libiberty is unavailable since including non-pic\n-# code would insert text relocations into libctf.\n+# libctf references.  We can't do that if a pic libiberty is unavailable\n+# since including non-pic # code would insert text relocations into libctf.\n # Note that linking against libbfd as we do here, which is itself linked\n # against libiberty, may not satisfy all the libctf libiberty references\n # since libbfd may not pull in the entirety of libiberty.\n+# Also, jam libintl into the right place in all of this: after libiberty,\n+# which uses it, but before -lcygwin, which it uses.\n changequote(,)dnl\n   x=`sed -n -e 's/^[ \t]*PICFLAG[ \t]*=[ \t]*//p' < ../libiberty/Makefile | sed -n '$p'`\n changequote([,])dnl\n   if test -n \"$x\"; then\n     CTF_LIBADD=\"-L`pwd`/../libiberty/pic -liberty\"\n   fi\n+fi\n+\n+CTF_LIBADD=\"$CTF_LIBADD $LIBINTL\"\n \n+if test \"$enable_shared\" = \"yes\"; then\n   case \"${host}\" in\n   # More hacks to build DLLs on Windows.\n     *-*-cygwin*)\n       SHARED_LDFLAGS=\"-no-undefined\"\n-      CTF_LIBADD=\"$CTF_LIBADD -L`pwd`/../intl -lintl -lcygwin\"\n+      CTF_LIBADD=\"$CTF_LIBADD -lcygwin\"\n       ;;\n   esac\n fi"
    },
    {
      "sha": "fa1830e6ceef882d6fa4eb761a168e128479de02",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-04  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac (SHARED_LIBADD): Remove explicit -lintl population in\n+\tfavour of LIBINTL.\n+\t* configure: Regenerated.\n+\n 2021-02-08  Mike Frysinger  <vapier@gentoo.org>\n \n \t* tic54x-dis.c (sprint_mmr): Change to tic54x_mmregs."
    },
    {
      "sha": "d17d2543fb7769b62b74ed0064ac8a790f78445c",
      "filename": "opcodes/configure",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/opcodes/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/opcodes/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/configure?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -12798,15 +12798,21 @@ if test \"$enable_shared\" = \"yes\"; then\n # Note that linking against libbfd as we do here, which is itself linked\n # against libiberty, may not satisfy all the libopcodes libiberty references\n # since libbfd may not pull in the entirety of libiberty.\n+# Also, jam libintl into the right place in all of this: after libiberty,\n+# which uses it, but before -lcygwin, which it uses.\n   x=`sed -n -e 's/^[ \t]*PICFLAG[ \t]*=[ \t]*//p' < ../libiberty/Makefile | sed -n '$p'`\n   if test -n \"$x\"; then\n     SHARED_LIBADD=\"-L`pwd`/../libiberty/pic -liberty\"\n   fi\n+fi\n+\n+SHARED_LIBADD=\"$SHARED_LIBADD $LIBINTL\"\n \n+if test \"$enable_shared\" = \"yes\"; then\n   case \"${host}\" in\n     *-*-cygwin*)\n       SHARED_LDFLAGS=\"-no-undefined\"\n-      SHARED_LIBADD=\"-L`pwd`/../bfd -lbfd -L`pwd`/../libiberty -liberty -L`pwd`/../intl -lintl -lcygwin\"\n+      SHARED_LIBADD=\"-L`pwd`/../bfd -lbfd -L`pwd`/../libiberty -liberty $SHARED_LIBADD\"\n       ;;\n    *-*-darwin*)\n      SHARED_LIBADD=\"-Wl,`pwd`/../bfd/.libs/libbfd.dylib ${SHARED_LIBADD}\""
    },
    {
      "sha": "c19d2f8c9584b1487e7439f27c95322d91ab8d00",
      "filename": "opcodes/configure.ac",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95148614026da7353721411dd020d024667e3482/opcodes/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95148614026da7353721411dd020d024667e3482/opcodes/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/configure.ac?ref=95148614026da7353721411dd020d024667e3482",
      "patch": "@@ -166,17 +166,23 @@ if test \"$enable_shared\" = \"yes\"; then\n # Note that linking against libbfd as we do here, which is itself linked\n # against libiberty, may not satisfy all the libopcodes libiberty references\n # since libbfd may not pull in the entirety of libiberty.\n+# Also, jam libintl into the right place in all of this: after libiberty,\n+# which uses it, but before -lcygwin, which it uses.\n changequote(,)dnl\n   x=`sed -n -e 's/^[ \t]*PICFLAG[ \t]*=[ \t]*//p' < ../libiberty/Makefile | sed -n '$p'`\n changequote([,])dnl\n   if test -n \"$x\"; then\n     SHARED_LIBADD=\"-L`pwd`/../libiberty/pic -liberty\"\n   fi\n+fi\n+\n+SHARED_LIBADD=\"$SHARED_LIBADD $LIBINTL\"\n \n+if test \"$enable_shared\" = \"yes\"; then\n   case \"${host}\" in\n     *-*-cygwin*)\n       SHARED_LDFLAGS=\"-no-undefined\"\n-      SHARED_LIBADD=\"-L`pwd`/../bfd -lbfd -L`pwd`/../libiberty -liberty -L`pwd`/../intl -lintl -lcygwin\"\n+      SHARED_LIBADD=\"-L`pwd`/../bfd -lbfd -L`pwd`/../libiberty -liberty $SHARED_LIBADD\"\n       ;;\n    *-*-darwin*)\n      SHARED_LIBADD=\"-Wl,`pwd`/../bfd/.libs/libbfd.dylib ${SHARED_LIBADD}\""
    }
  ]
}