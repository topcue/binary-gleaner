{
  "sha": "f4791f1afad449b81804cb6b62ed238603592d1b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQ3OTFmMWFmYWQ0NDliODE4MDRjYjZiNjJlZDIzODYwMzU5MmQxYg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-11T00:02:56Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-11T11:38:37Z"
    },
    "message": "Power10 vector integer multiply, divide, modulo insns\n\nopcodes/\n\t* ppc-opc.c (powerpc_opcodes): Add vdivuw, vdivud, vdivsw, vmulld,\n\tvdivsd, vmulhuw, vdiveuw, vmulhud, vdiveud, vmulhsw, vdivesw,\n\tvmulhsd, vdivesd, vmoduw, vmodud, vmodsw, vmodsd.\ngas/\n\t* testsuite/gas/ppc/vec_mul.s,\n\t* testsuite/gas/ppc/vec_mul.d: New test.\n\t* testsuite/gas/ppc/ppc.exp: Run it.",
    "tree": {
      "sha": "b1a2c5842d396d174c90dda4fb69d6e96139b2e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b1a2c5842d396d174c90dda4fb69d6e96139b2e8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f4791f1afad449b81804cb6b62ed238603592d1b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4791f1afad449b81804cb6b62ed238603592d1b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f4791f1afad449b81804cb6b62ed238603592d1b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4791f1afad449b81804cb6b62ed238603592d1b/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3ff0a5ba6458db28b5f0bc28afc0678a247357c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ff0a5ba6458db28b5f0bc28afc0678a247357c0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3ff0a5ba6458db28b5f0bc28afc0678a247357c0"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 76,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2c16df23b870db2f95e089417dc13a2ca133f205",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4791f1afad449b81804cb6b62ed238603592d1b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4791f1afad449b81804cb6b62ed238603592d1b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f4791f1afad449b81804cb6b62ed238603592d1b",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/gas/ppc/vec_mul.s,\n+\t* testsuite/gas/ppc/vec_mul.d: New test.\n+\t* testsuite/gas/ppc/ppc.exp: Run it.\n+\n 2020-05-11  Peter Bergner  <bergner@linux.ibm.com>\n \n \t* testsuite/gas/ppc/byte_rev.d,"
    },
    {
      "sha": "ea053fb75407bbecbe5535c684996fd019e6e0fe",
      "filename": "gas/testsuite/gas/ppc/ppc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4791f1afad449b81804cb6b62ed238603592d1b/gas/testsuite/gas/ppc/ppc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4791f1afad449b81804cb6b62ed238603592d1b/gas/testsuite/gas/ppc/ppc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/ppc.exp?ref=f4791f1afad449b81804cb6b62ed238603592d1b",
      "patch": "@@ -132,3 +132,4 @@ if { [supports_ppc64] } then {\n     run_dump_test \"prefix-reloc\"\n }\n run_dump_test \"byte_rev\"\n+run_dump_test \"vec_mul\""
    },
    {
      "sha": "bc799cfab3c474329ad8dd2ed2dc98e749de5e2c",
      "filename": "gas/testsuite/gas/ppc/vec_mul.d",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4791f1afad449b81804cb6b62ed238603592d1b/gas/testsuite/gas/ppc/vec_mul.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4791f1afad449b81804cb6b62ed238603592d1b/gas/testsuite/gas/ppc/vec_mul.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/vec_mul.d?ref=f4791f1afad449b81804cb6b62ed238603592d1b",
      "patch": "@@ -0,0 +1,27 @@\n+#as: -mpower10\n+#objdump: -dr -Mpower10\n+#name: vector integer mul/div/mod\n+\n+.*\n+\n+\n+Disassembly of section \\.text:\n+\n+0+0 <_start>:\n+.*:\t(10 22 1b 89|89 1b 22 10) \tvmulhsw v1,v2,v3\n+.*:\t(10 85 32 89|89 32 85 10) \tvmulhuw v4,v5,v6\n+.*:\t(10 e8 4b c9|c9 4b e8 10) \tvmulhsd v7,v8,v9\n+.*:\t(11 4b 62 c9|c9 62 4b 11) \tvmulhud v10,v11,v12\n+.*:\t(11 ae 79 c9|c9 79 ae 11) \tvmulld  v13,v14,v15\n+.*:\t(12 11 91 8b|8b 91 11 12) \tvdivsw  v16,v17,v18\n+.*:\t(12 74 a8 8b|8b a8 74 12) \tvdivuw  v19,v20,v21\n+.*:\t(12 d7 c3 8b|8b c3 d7 12) \tvdivesw v22,v23,v24\n+.*:\t(13 3a da 8b|8b da 3a 13) \tvdiveuw v25,v26,v27\n+.*:\t(13 9d f1 cb|cb f1 9d 13) \tvdivsd  v28,v29,v30\n+.*:\t(13 e0 08 cb|cb 08 e0 13) \tvdivud  v31,v0,v1\n+.*:\t(10 43 23 cb|cb 23 43 10) \tvdivesd v2,v3,v4\n+.*:\t(10 a6 3a cb|cb 3a a6 10) \tvdiveud v5,v6,v7\n+.*:\t(11 09 57 8b|8b 57 09 11) \tvmodsw  v8,v9,v10\n+.*:\t(11 6c 6e 8b|8b 6e 6c 11) \tvmoduw  v11,v12,v13\n+.*:\t(11 cf 87 cb|cb 87 cf 11) \tvmodsd  v14,v15,v16\n+.*:\t(12 32 9e cb|cb 9e 32 12) \tvmodud  v17,v18,v19"
    },
    {
      "sha": "324919156ecd4206a0dffe4cbffe9d079cb9a986",
      "filename": "gas/testsuite/gas/ppc/vec_mul.s",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4791f1afad449b81804cb6b62ed238603592d1b/gas/testsuite/gas/ppc/vec_mul.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4791f1afad449b81804cb6b62ed238603592d1b/gas/testsuite/gas/ppc/vec_mul.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/vec_mul.s?ref=f4791f1afad449b81804cb6b62ed238603592d1b",
      "patch": "@@ -0,0 +1,19 @@\n+\t.text\n+_start:\n+\tvmulhsw\t1,2,3\n+\tvmulhuw\t4,5,6\n+\tvmulhsd\t7,8,9\n+\tvmulhud\t10,11,12\n+\tvmulld\t13,14,15\n+\tvdivsw\t16,17,18\n+\tvdivuw\t19,20,21\n+\tvdivesw\t22,23,24\n+\tvdiveuw\t25,26,27\n+\tvdivsd\t28,29,30\n+\tvdivud\t31,0,1\n+\tvdivesd\t2,3,4\n+\tvdiveud\t5,6,7\n+\tvmodsw\t8,9,10\n+\tvmoduw\t11,12,13\n+\tvmodsd\t14,15,16\n+\tvmodud\t17,18,19"
    },
    {
      "sha": "0958a3bef6cc5075b6e9e092cb85e53ac971c3cf",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4791f1afad449b81804cb6b62ed238603592d1b/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4791f1afad449b81804cb6b62ed238603592d1b/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=f4791f1afad449b81804cb6b62ed238603592d1b",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (powerpc_opcodes): Add vdivuw, vdivud, vdivsw, vmulld,\n+\tvdivsd, vmulhuw, vdiveuw, vmulhud, vdiveud, vmulhsw, vdivesw,\n+\tvmulhsd, vdivesd, vmoduw, vmodud, vmodsw, vmodsd.\n+\n 2020-05-11  Peter Bergner  <bergner@linux.ibm.com>\n \n \t* ppc-opc.c (powerpc_opcodes) <brd, brh, brw>: New mnemonics."
    },
    {
      "sha": "5cd5cd973ea35715e0ad529d7ce68336a5a5bda2",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4791f1afad449b81804cb6b62ed238603592d1b/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4791f1afad449b81804cb6b62ed238603592d1b/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=f4791f1afad449b81804cb6b62ed238603592d1b",
      "patch": "@@ -3983,6 +3983,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vcmpnew\",\tVXR(4,\t135,0),\tVXR_MASK,    PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vmulouw\",\tVX (4,\t136),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vmuluwm\",\tVX (4,\t137),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vdivuw\",\tVX (4,  139),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmrghw\",\tVX (4,\t140),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vpkuhus\",\tVX (4,\t142),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"ps_mr\",\tXRC(4,\t72,0),\tXRA_MASK,    PPCPS,\t0,\t\t{FRT, FRB}},\n@@ -3996,6 +3997,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vrldmi\",\tVX (4, 197),\tVX_MASK,     PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vcmpeqfp\",\tVXR(4, 198,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpequd\",\tVXR(4, 199,0),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vdivud\",\tVX (4, 203),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vpkuwus\",\tVX (4, 206),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"machhws\",\tXO (4, 108,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"machhws.\",\tXO (4, 108,0,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4036,6 +4038,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vcmpnezw\",\tVXR(4, 391,0),\tVXR_MASK,    PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vmulosw\",\tVX (4, 392),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vexptefp\",\tVX (4, 394),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n+{\"vdivsw\",\tVX (4, 395),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmrglw\",\tVX (4, 396),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vpkshss\",\tVX (4, 398),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"macchwsu\",\tXO (4, 204,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4044,7 +4047,9 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vsl\",\t\tVX (4, 452),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vrldnm\",\tVX (4, 453),\tVX_MASK,     PPCVEC3,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgefp\",\tVXR(4, 454,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vmulld\",\tVX (4, 457),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vlogefp\",\tVX (4, 458),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n+{\"vdivsd\",\tVX (4, 459),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vpkswss\",\tVX (4, 462),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"macchws\",\tXO (4, 236,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"macchws.\",\tXO (4, 236,0,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4134,9 +4139,11 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"evfssqrt\",\tVX_RB_CONST(4, 647, 0),  VX_RB_CONST_MASK,\tPPCEFS2,\t0,\t\t{RD, RA}},\n {\"vmuleuw\",\tVX (4, 648),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"evfsmul\",\tVX (4, 648),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n+{\"vmulhuw\",\tVX (4, 649),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evfsdiv\",\tVX (4, 649),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"evfsnmadd\",\tVX (4, 650),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"vrfip\",\tVX (4, 650),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n+{\"vdiveuw\",\tVX (4, 651),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"evfsnmsub\",\tVX (4, 651),\tVX_MASK,     PPCSPE,\t0,\t\t{RS, RA, RB}},\n {\"evfscmpgt\",\tVX (4, 652),\tVX_MASK,     PPCSPE,\t0,\t\t{CRFD, RA, RB}},\n {\"vspltw\",\tVX (4, 652),   VXUIMM2_MASK, PPCVEC,\t0,\t\t{VD, VB, UIMM2}},\n@@ -4193,9 +4200,11 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"efssqrt\",\tVX_RB_CONST(4, 711, 0), VX_RB_CONST_MASK,PPCEFS2, 0,\t{RD, RA}},\n {\"vcmpgtud\",\tVXR(4, 711,0),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"efsmul\",\tVX (4, 712),\tVX_MASK,     PPCEFS,\t0,\t\t{RS, RA, RB}},\n+{\"vmulhud\",\tVX (4, 713),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"efsdiv\",\tVX (4, 713),\tVX_MASK,     PPCEFS,\t0,\t\t{RS, RA, RB}},\n {\"efsnmadd\",\tVX (4, 714),\tVX_MASK,     PPCEFS2,\t0,\t\t{RS, RA, RB}},\n {\"vrfim\",\tVX (4, 714),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n+{\"vdiveud\",\tVX (4, 715),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"efsnmsub\",\tVX (4, 715),\tVX_MASK,     PPCEFS2,\t0,\t\t{RS, RA, RB}},\n {\"efscmpgt\",\tVX (4, 716),\tVX_MASK,     PPCEFS,\t0,\t\t{CRFD, RA, RB}},\n {\"vextractd\",\tVX (4, 717),   VXUIMM4_MASK, PPCVEC3,\t0,\t\t{VD, VB, UIMM4}},\n@@ -4331,8 +4340,10 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vsraw\",\tVX (4, 900),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgtsw\",\tVXR(4, 902,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vmulesw\",\tVX (4, 904),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vmulhsw\",\tVX (4, 905),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vctuxs\",\tVX (4, 906),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n {\"vcfpuxws\",\tVX (4, 906),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n+{\"vdivesw\",\tVX (4, 907),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vspltisw\",\tVX (4, 908),\tVXVB_MASK,   PPCVEC,\t0,\t\t{VD, SIMM}},\n {\"vinsertw\",\tVX (4, 909),   VXUIMM4_MASK, PPCVEC3,\t0,\t\t{VD, VB, UIMM4}},\n {\"maclhwsu\",\tXO (4, 460,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4341,8 +4352,10 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"vsrad\",\tVX (4, 964),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vcmpbfp\",\tVXR(4, 966,0),\tVXR_MASK,    PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vcmpgtsd\",\tVXR(4, 967,0),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n+{\"vmulhsd\",\tVX (4, 969),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vctsxs\",\tVX (4, 970),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n {\"vcfpsxws\",\tVX (4, 970),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VB, UIMM}},\n+{\"vdivesd\",\tVX (4, 971),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vinsertd\",\tVX (4, 973),   VXUIMM4_MASK, PPCVEC3,\t0,\t\t{VD, VB, UIMM4}},\n {\"vupklpx\",\tVX (4, 974),\tVXVA_MASK,   PPCVEC,\t0,\t\t{VD, VB}},\n {\"maclhws\",\tXO (4, 492,0,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4632,6 +4645,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"udi10fcm.\",\tAPU(4, 835,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"udi10fcm\",\tAPU(4, 835,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vsum2sws\",\tVX (4,1672),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vmoduw\",\tVX (4,1675),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmrgow\",\tVX (4,1676),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vextuwlx\",\tVX (4,1677),\tVX_MASK,     PPCVEC3,\t0,\t\t{RT, RA, VB}},\n {\"vshasigmad\",\tVX (4,1730),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, ST, SIX}},\n@@ -4640,6 +4654,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"udi11fcm.\",\tAPU(4, 867,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vcmpgtud.\",\tVXR(4, 711,1),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"udi11fcm\",\tAPU(4, 867,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n+{\"vmodud\",\tVX (4,1739),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vupklsw\",\tVX (4,1742),\tVXVA_MASK,   PPCVEC2,\t0,\t\t{VD, VB}},\n {\"vsubsbs\",\tVX (4,1792),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n {\"vclzb\",\tVX (4,1794),\tVXVA_MASK,   PPCVEC2,\t0,\t\t{VD, VB}},\n@@ -4671,6 +4686,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"udi14fcm.\",\tAPU(4, 963,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"udi14fcm\",\tAPU(4, 963,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vsumsws\",\tVX (4,1928),\tVX_MASK,     PPCVEC,\t0,\t\t{VD, VA, VB}},\n+{\"vmodsw\",\tVX (4,1931),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"vmrgew\",\tVX (4,1932),\tVX_MASK,     PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"vextuwrx\",\tVX (4,1933),\tVX_MASK,     PPCVEC3,\t0,\t\t{RT, RA, VB}},\n {\"maclhwsuo\",\tXO (4, 460,1,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n@@ -4681,6 +4697,7 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"udi15fcm.\",\tAPU(4, 995,0),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n {\"vcmpgtsd.\",\tVXR(4, 967,1),\tVXR_MASK,    PPCVEC2,\t0,\t\t{VD, VA, VB}},\n {\"udi15fcm\",\tAPU(4, 995,1),\tAPU_MASK,    PPC440,\t0,\t\t{URT, URA, URB}},\n+{\"vmodsd\",\tVX (4,1995),\tVX_MASK,     POWER10,\t0,\t\t{VD, VA, VB}},\n {\"maclhwso\",\tXO (4, 492,1,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"maclhwso.\",\tXO (4, 492,1,1), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},\n {\"nmaclhwso\",\tXO (4, 494,1,0), XO_MASK,    MULHW,\t0,\t\t{RT, RA, RB}},"
    }
  ]
}