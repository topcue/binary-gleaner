{
  "sha": "9a49ad8c522a1ce83645d477bf6ced574c3bf651",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWE0OWFkOGM1MjJhMWNlODM2NDVkNDc3YmY2Y2VkNTc0YzNiZjY1MQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-01T10:07:52Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-17T08:25:09Z"
    },
    "message": "gdb: Convert language la_compute_program field to a method\n\nThis commit changes the language_data::la_compute_program function\npointer member variable into a member function of language_defn.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Delete la_compute_program\n\tinitializer.\n\t* c-lang.c (c_language_data): Likewise.\n\t(c_language::compute_program): New member function.\n\t(cplus_language_data): Delete la_compute_program initializer.\n\t(cplus_language::compute_program): New member function.\n\t(asm_language_data): Delete la_compute_program initializer.\n\t(minimal_language_data): Likewise.\n\t* c-lang.h (c_compute_program): Update comment.\n\t(cplus_compute_program): Likewise.\n\t* compile/compile-c-support.c (c_compute_program): Likewise.\n\t(cplus_compute_program): Likewise.\n\t* compile/compile.c (compile_to_object): Update call to\n\tla_compute_program.\n\t* d-lang.c (d_language_data): Delete la_compute_program\n\tinitializer.\n\t* f-lang.c (f_language_data): Likewise.\n\t* go-lang.c (go_language_data): Likewise.\n\t* language.c (unknown_language_data): Likewise.\n\t(auto_language_data): Likewise.\n\t* language.h (language_data): Delete la_compute_program field.\n\t(language_defn::compute_program): New member function.\n\t* m2-lang.c (m2_language_data): Delete la_compute_program\n\tinitializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.",
    "tree": {
      "sha": "d7094bdb142f991e9147938c8ea7553b62fcab49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d7094bdb142f991e9147938c8ea7553b62fcab49"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9a49ad8c522a1ce83645d477bf6ced574c3bf651",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a49ad8c522a1ce83645d477bf6ced574c3bf651",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9a49ad8c522a1ce83645d477bf6ced574c3bf651",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a49ad8c522a1ce83645d477bf6ced574c3bf651/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eff93b4d48eb0e79b7879475bb47eec55dbb41be",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eff93b4d48eb0e79b7879475bb47eec55dbb41be",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eff93b4d48eb0e79b7879475bb47eec55dbb41be"
    }
  ],
  "stats": {
    "total": 120,
    "additions": 79,
    "deletions": 41
  },
  "files": [
    {
      "sha": "ae93dd6ed6de492dc6231b082d3426e2faf92dde",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -1,3 +1,34 @@\n+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Delete la_compute_program\n+\tinitializer.\n+\t* c-lang.c (c_language_data): Likewise.\n+\t(c_language::compute_program): New member function.\n+\t(cplus_language_data): Delete la_compute_program initializer.\n+\t(cplus_language::compute_program): New member function.\n+\t(asm_language_data): Delete la_compute_program initializer.\n+\t(minimal_language_data): Likewise.\n+\t* c-lang.h (c_compute_program): Update comment.\n+\t(cplus_compute_program): Likewise.\n+\t* compile/compile-c-support.c (c_compute_program): Likewise.\n+\t(cplus_compute_program): Likewise.\n+\t* compile/compile.c (compile_to_object): Update call to\n+\tla_compute_program.\n+\t* d-lang.c (d_language_data): Delete la_compute_program\n+\tinitializer.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t* go-lang.c (go_language_data): Likewise.\n+\t* language.c (unknown_language_data): Likewise.\n+\t(auto_language_data): Likewise.\n+\t* language.h (language_data): Delete la_compute_program field.\n+\t(language_defn::compute_program): New member function.\n+\t* m2-lang.c (m2_language_data): Delete la_compute_program\n+\tinitializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\n 2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data) Delete"
    },
    {
      "sha": "5caa1716b78be79c14b7d73d1e5f13cdcc904b63",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -13922,7 +13922,6 @@ extern const struct language_data ada_language_data =\n   ada_watch_location_expression,\n   ada_get_symbol_name_matcher,\t/* la_get_symbol_name_matcher */\n   &ada_varobj_ops,\n-  NULL,\n   ada_is_string_type,\n   \"(...)\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "9d72c0e324b238d1b5aec6d92cd3894994f6a81e",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 20,
      "deletions": 4,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -919,7 +919,6 @@ extern const struct language_data c_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &c_varobj_ops,\n-  c_compute_program,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };\n@@ -946,6 +945,16 @@ class c_language : public language_defn\n     return c_get_compile_context ();\n   }\n \n+  /* See language.h.  */\n+  std::string compute_program (compile_instance *inst,\n+\t\t\t       const char *input,\n+\t\t\t       struct gdbarch *gdbarch,\n+\t\t\t       const struct block *expr_block,\n+\t\t\t       CORE_ADDR expr_pc) const override\n+  {\n+    return c_compute_program (inst, input, gdbarch, expr_block, expr_pc);\n+  }\n+\n   /* See language.h.  */\n \n   void print_type (struct type *type, const char *varstring,\n@@ -1025,7 +1034,6 @@ extern const struct language_data cplus_language_data =\n   c_watch_location_expression,\n   cp_get_symbol_name_matcher,\n   &cplus_varobj_ops,\n-  cplus_compute_program,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };\n@@ -1122,6 +1130,16 @@ class cplus_language : public language_defn\n     return cplus_get_compile_context ();\n   }\n \n+  /* See language.h.  */\n+  std::string compute_program (compile_instance *inst,\n+\t\t\t       const char *input,\n+\t\t\t       struct gdbarch *gdbarch,\n+\t\t\t       const struct block *expr_block,\n+\t\t\t       CORE_ADDR expr_pc) const override\n+  {\n+    return cplus_compute_program (inst, input, gdbarch, expr_block, expr_pc);\n+  }\n+\n   /* See language.h.  */\n   unsigned int search_name_hash (const char *name) const override\n   {\n@@ -1209,7 +1227,6 @@ extern const struct language_data asm_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };\n@@ -1280,7 +1297,6 @@ extern const struct language_data minimal_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "31ec6f2cf74c41fb302e5c25be9131bf20f70831",
      "filename": "gdb/c-lang.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/c-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/c-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.h?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -172,7 +172,7 @@ extern compile_instance *cplus_get_compile_context ();\n /* This takes the user-supplied text and returns a new bit of code to\n    compile.\n \n-   This is used as the la_compute_program language method; see that\n+   This is used as the compute_program language method; see that\n    for a description of the arguments.  */\n \n extern std::string c_compute_program (compile_instance *inst,\n@@ -183,7 +183,7 @@ extern std::string c_compute_program (compile_instance *inst,\n \n /* This takes the user-supplied text and returns a new bit of code to compile.\n \n-   This is used as the la_compute_program language method; see that\n+   This is used as the compute_program language method; see that\n    for a description of the arguments.  */\n \n extern std::string cplus_compute_program (compile_instance *inst,"
    },
    {
      "sha": "5e4da6703a62e067874ed620f7cb77c1524a9c39",
      "filename": "gdb/compile/compile-c-support.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/compile/compile-c-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/compile/compile-c-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-c-support.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -660,7 +660,7 @@ typedef compile_program<compile_cplus_instance,\n \t\t\tcplus_add_code_header, c_add_code_footer,\n \t\t\tcplus_add_input> cplus_compile_program;\n \n-/* The la_compute_program method for C.  */\n+/* The compute_program method for C.  */\n \n std::string\n c_compute_program (compile_instance *inst,\n@@ -675,7 +675,7 @@ c_compute_program (compile_instance *inst,\n   return program.compute (input, expr_block, expr_pc);\n }\n \n-/* The la_compute_program method for C++.  */\n+/* The compute_program method for C++.  */\n \n std::string\n cplus_compute_program (compile_instance *inst,"
    },
    {
      "sha": "0c29a0476e7c65c5ffb60e659387f12e6dec6cc1",
      "filename": "gdb/compile/compile.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/compile/compile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/compile/compile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -724,8 +724,8 @@ compile_to_object (struct command_line *cmd, const char *cmd_string,\n     error (_(\"Neither a simple expression, or a multi-line specified.\"));\n \n   std::string code\n-    = current_language->la_compute_program (compiler.get (), input, gdbarch,\n-\t\t\t\t\t    expr_block, expr_pc);\n+    = current_language->compute_program (compiler.get (), input, gdbarch,\n+\t\t\t\t\t expr_block, expr_pc);\n   if (compile_debug)\n     fprintf_unfiltered (gdb_stdlog, \"debug output:\\n\\n%s\", code.c_str ());\n "
    },
    {
      "sha": "ad16f991dd375e8aedada1b4d96cb2595d9c9d18",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -162,7 +162,6 @@ extern const struct language_data d_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "d748db82e4ff33c1f4c0fe2a6f685423f51760cc",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -622,7 +622,6 @@ extern const struct language_data f_language_data =\n   c_watch_location_expression,\n   cp_get_symbol_name_matcher,\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   f_is_string_type_p,\n   \"(...)\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "9196cd3c52bea692a5ef5ccb7628165e3f380f9e",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -547,7 +547,6 @@ extern const struct language_data go_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   go_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "2b2584f49768996d846428bb296ee15972a1caa8",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -776,7 +776,6 @@ extern const struct language_data unknown_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   default_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };\n@@ -851,7 +850,6 @@ extern const struct language_data auto_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   default_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "523a7a923beb3b5db93f799c8e77deec59c73cac",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 22,
      "deletions": 20,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -354,26 +354,6 @@ struct language_data\n     /* Various operations on varobj.  */\n     const struct lang_varobj_ops *la_varobj_ops;\n \n-    /* This method must be defined if 'la_get_gcc_context' is defined.\n-       If 'la_get_gcc_context' is not defined, then this method is\n-       ignored.\n-\n-       This takes the user-supplied text and returns a new bit of code\n-       to compile.\n-\n-       INST is the compiler instance being used.\n-       INPUT is the user's input text.\n-       GDBARCH is the architecture to use.\n-       EXPR_BLOCK is the block in which the expression is being\n-       parsed.\n-       EXPR_PC is the PC at which the expression is being parsed.  */\n-\n-    std::string (*la_compute_program) (compile_instance *inst,\n-\t\t\t\t       const char *input,\n-\t\t\t\t       struct gdbarch *gdbarch,\n-\t\t\t\t       const struct block *expr_block,\n-\t\t\t\t       CORE_ADDR expr_pc);\n-\n     /* Return true if TYPE is a string type.  */\n     bool (*la_is_string_type_p) (struct type *type);\n \n@@ -476,6 +456,28 @@ struct language_defn : language_data\n     return nullptr;\n   }\n \n+  /* This method must be overridden if 'get_compile_instance' is\n+     overridden.\n+\n+     This takes the user-supplied text and returns a new bit of code\n+     to compile.\n+\n+     INST is the compiler instance being used.\n+     INPUT is the user's input text.\n+     GDBARCH is the architecture to use.\n+     EXPR_BLOCK is the block in which the expression is being\n+     parsed.\n+     EXPR_PC is the PC at which the expression is being parsed.  */\n+\n+  virtual std::string compute_program (compile_instance *inst,\n+\t\t\t\t       const char *input,\n+\t\t\t\t       struct gdbarch *gdbarch,\n+\t\t\t\t       const struct block *expr_block,\n+\t\t\t\t       CORE_ADDR expr_pc) const\n+  {\n+    gdb_assert_not_reached (\"language_defn::compute_program\");\n+  }\n+\n   /* Hash the given symbol search name.  */\n   virtual unsigned int search_name_hash (const char *name) const;\n "
    },
    {
      "sha": "87bf1eb63d58935e8ccc0d99bc6ab1d56971cb6f",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -381,7 +381,6 @@ extern const struct language_data m2_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   m2_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "8b23c557984ad7bc63b84767d161b3a00a265d4e",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -356,7 +356,6 @@ extern const struct language_data objc_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "00f88c60373a1de5ca63cf8f64b558ed2d8a08bf",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -1035,7 +1035,6 @@ extern const struct language_data opencl_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   c_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "869c89e926a6f1260e9e20638ba65d408f403765",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -412,7 +412,6 @@ extern const struct language_data pascal_language_data =\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_compare_symbol_for_completion */\n   &default_varobj_ops,\n-  NULL,\n   pascal_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    },
    {
      "sha": "296bfe1dcf7afce844c989b8a730734605d8c260",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a49ad8c522a1ce83645d477bf6ced574c3bf651/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=9a49ad8c522a1ce83645d477bf6ced574c3bf651",
      "patch": "@@ -2067,7 +2067,6 @@ extern const struct language_data rust_language_data =\n   rust_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n   &default_varobj_ops,\n-  NULL,\n   rust_is_string_type_p,\n   \"{...}\"\t\t\t/* la_struct_too_deep_ellipsis */\n };"
    }
  ]
}