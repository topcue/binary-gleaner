{
  "sha": "0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGFmODgyOWViMWFlYTRmYTcyZjFhMGEyYzdjNzQ5YzQxMWM4ZWQ0MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:22Z"
    },
    "message": "Introduce decltype_operation\n\nThis adds class decltype_operation, which implements OP_DECLTYPE.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expop.h (class decltype_operation): New.",
    "tree": {
      "sha": "2876e6a11f15bbd8343769a414930d65632ede21",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2876e6a11f15bbd8343769a414930d65632ede21"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4efc574cb9e721c1e29425146d6f51424a730729",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4efc574cb9e721c1e29425146d6f51424a730729",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4efc574cb9e721c1e29425146d6f51424a730729"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 51,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5f9e2bc70cc2215cf28c6f6f38a8ae84e763ea08",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expop.h (class decltype_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (class typeof_operation): New."
    },
    {
      "sha": "183137805f98afe68bba9cfd6ef6038c2528baab",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
      "patch": "@@ -1470,6 +1470,53 @@ class typeof_operation\n   { return OP_TYPEOF; }\n };\n \n+/* Implement 'decltype'.  */\n+class decltype_operation\n+  : public maybe_constant_operation<operation_up>\n+{\n+public:\n+\n+  using maybe_constant_operation::maybe_constant_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    if (noside == EVAL_SKIP)\n+      return eval_skip_value (exp);\n+    else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+      {\n+\tvalue *result\n+\t  = std::get<0> (m_storage)->evaluate (nullptr, exp,\n+\t\t\t\t\t       EVAL_AVOID_SIDE_EFFECTS);\n+\tenum exp_opcode sub_op = std::get<0> (m_storage)->opcode ();\n+\tif (sub_op == BINOP_SUBSCRIPT\n+\t    || sub_op == STRUCTOP_MEMBER\n+\t    || sub_op == STRUCTOP_MPTR\n+\t    || sub_op == UNOP_IND\n+\t    || sub_op == STRUCTOP_STRUCT\n+\t    || sub_op == STRUCTOP_PTR\n+\t    || sub_op == OP_SCOPE)\n+\t  {\n+\t    struct type *type = value_type (result);\n+\n+\t    if (!TYPE_IS_REFERENCE (type))\n+\t      {\n+\t\ttype = lookup_lvalue_reference_type (type);\n+\t\tresult = allocate_value (type);\n+\t      }\n+\t  }\n+\n+\treturn result;\n+      }\n+    else\n+      error (_(\"Attempt to use a type as an expression\"));\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return OP_DECLTYPE; }\n+};\n+\n } /* namespace expr */\n \n #endif /* EXPOP_H */"
    }
  ]
}