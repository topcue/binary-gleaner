{
  "sha": "cd613c1fccd8c3b7872bea76da6a048c41884d41",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Q2MTNjMWZjY2Q4YzNiNzg3MmJlYTc2ZGE2YTA0OGM0MTg4NGQ0MQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-08T12:56:39Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-08T12:56:39Z"
    },
    "message": "x86: minor improvements to optimize_disp() (part II)\n\n- Don't kind-of-open-code fits_in_unsigned_{word,long}().\n- Fold two if()s both using fits_in_unsigned_long().",
    "tree": {
      "sha": "a6ab4fab71904097e202a1519139854fe81dbdf5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a6ab4fab71904097e202a1519139854fe81dbdf5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cd613c1fccd8c3b7872bea76da6a048c41884d41",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd613c1fccd8c3b7872bea76da6a048c41884d41",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cd613c1fccd8c3b7872bea76da6a048c41884d41",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd613c1fccd8c3b7872bea76da6a048c41884d41/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "77c59789070949a1cfbd19578c6935ccd57869c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77c59789070949a1cfbd19578c6935ccd57869c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/77c59789070949a1cfbd19578c6935ccd57869c2"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 10,
    "deletions": 7
  },
  "files": [
    {
      "sha": "5f19f8590cfc5c5fd663300d69be4bfb3382238e",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd613c1fccd8c3b7872bea76da6a048c41884d41/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd613c1fccd8c3b7872bea76da6a048c41884d41/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=cd613c1fccd8c3b7872bea76da6a048c41884d41",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (optimize_disp): Use fits_in_unsigned_word\n+\tand fits_in_unsigned_long. Combine if()s.\n+\n 2021-06-08  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (optimize_disp): Write back updated value."
    },
    {
      "sha": "17398ee987d18276d16d0ca9cd3ad165c363794b",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd613c1fccd8c3b7872bea76da6a048c41884d41/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd613c1fccd8c3b7872bea76da6a048c41884d41/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=cd613c1fccd8c3b7872bea76da6a048c41884d41",
      "patch": "@@ -5893,7 +5893,7 @@ optimize_disp (void)\n \t      }\n \n \t    if (i.types[op].bitfield.disp16\n-\t\t&& (op_disp & ~(offsetT) 0xffff) == 0)\n+\t\t&& fits_in_unsigned_word (op_disp))\n \t      {\n \t\t/* If this operand is at most 16 bits, convert\n \t\t   to a signed 16 bit number and don't use 64bit\n@@ -5905,19 +5905,17 @@ optimize_disp (void)\n #ifdef BFD64\n \t    if (flag_code == CODE_64BIT)\n \t      {\n-\t\tif (want_disp32 (current_templates->start)\n-\t\t    && fits_in_unsigned_long (op_disp))\n-\t\t  i.types[op].bitfield.disp32 = 1;\n-\n \t\t/* Optimize 64-bit displacement to 32-bit for 64-bit BFD.  */\n-\t\tif (i.types[op].bitfield.disp32\n-\t\t    && (op_disp & ~(((offsetT) 2 << 31) - 1)) == 0)\n+\t\tif ((i.types[op].bitfield.disp32\n+\t\t     || want_disp32 (current_templates->start))\n+\t\t    && fits_in_unsigned_long (op_disp))\n \t\t  {\n \t\t    /* If this operand is at most 32 bits, convert\n \t\t       to a signed 32 bit number and don't use 64bit\n \t\t       displacement.  */\n \t\t    op_disp = (op_disp ^ ((offsetT) 1 << 31)) - ((addressT) 1 << 31);\n \t\t    i.types[op].bitfield.disp64 = 0;\n+\t\t    i.types[op].bitfield.disp32 = 1;\n \t\t  }\n \n \t\tif (fits_in_signed_long (op_disp))"
    }
  ]
}