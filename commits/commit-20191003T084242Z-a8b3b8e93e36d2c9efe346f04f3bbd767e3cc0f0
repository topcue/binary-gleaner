{
  "sha": "a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YThiM2I4ZTkzZTM2ZDJjOWVmZTM0NmYwNGYzYmJkNzY3ZTNjYzBmMA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-02T21:01:46Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-03T08:42:42Z"
    },
    "message": "gdb: Remove whitespace in 'std::vector <...>'\n\nIn the following 3 commits:\n\n    commit df07e2c772dab40d268dc44c78bb087c4b75b3c6\n    Date:   Wed Sep 25 16:10:50 2019 +0100\n\n        gdb: Remove a use of VEC from dwarf2read.{c,h}\n\n    commit 554ac434b02465f1fc925b0ae3393fb841e0d59c\n    Date:   Thu Sep 19 13:17:59 2019 -0400\n\n        gdb: Change a VEC to std::vector in btrace.{c,h}\n\n    commit 46f29a9a260da1a03176682aff63bad03d8f2e8b\n    Date:   Mon Sep 16 09:12:27 2019 -0400\n\n        gdb: Remove a VEC from gdbsupport/btrace-common.h\n\nI incorrectly wrote 'std::vector <...>' instead of 'std::vector<...>',\nthis commit fixes this mistake.  There should be no user visible\nchanges after this commit.\n\ngdb/ChangeLog:\n\n\t* btrace.c (btrace_add_pc): Remove whitespace before the template\n\tparameter in 'std::vector <...>'.\n\t(parse_xml_btrace_block): Likewise.\n\t(btrace_maint_decode_pt): Likewise.\n\t(btrace_maint_update_packets): Likewise.\n\t(btrace_maint_print_packets): Likewise.\n\t* btrace.h (struct btrace_maint_info): Likewise.\n\t* dwarf2read.c (struct type_unit_group): Likewise.\n\t(build_type_psymtabs_reader): Likewise.\n\t* gdbsupport/btrace-common.c (btrace_data_append): Likewise.\n\t* gdbsupport/btrace-common.h (struct btrace_data_bts): Likewise.\n\t* nat/linux-btrace.c (perf_event_read_bts): Likewise.",
    "tree": {
      "sha": "e092dacea805adba45bb451efdebb9510082e403",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e092dacea805adba45bb451efdebb9510082e403"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4d825eab2dc70954ce1d229f48741da4936947fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4d825eab2dc70954ce1d229f48741da4936947fb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4d825eab2dc70954ce1d229f48741da4936947fb"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 28,
    "deletions": 13
  },
  "files": [
    {
      "sha": "bcf1de9e7ae08237de65a80291e3d549dd9b5838",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
      "patch": "@@ -1,3 +1,18 @@\n+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* btrace.c (btrace_add_pc): Remove whitespace before the template\n+\tparameter in 'std::vector <...>'.\n+\t(parse_xml_btrace_block): Likewise.\n+\t(btrace_maint_decode_pt): Likewise.\n+\t(btrace_maint_update_packets): Likewise.\n+\t(btrace_maint_print_packets): Likewise.\n+\t* btrace.h (struct btrace_maint_info): Likewise.\n+\t* dwarf2read.c (struct type_unit_group): Likewise.\n+\t(build_type_psymtabs_reader): Likewise.\n+\t* gdbsupport/btrace-common.c (btrace_data_append): Likewise.\n+\t* gdbsupport/btrace-common.h (struct btrace_data_bts): Likewise.\n+\t* nat/linux-btrace.c (perf_event_read_bts): Likewise.\n+\n 2019-10-03  Tom de Vries  <tdevries@suse.de>\n \n \t* cli/cli-style.c (_initialize_cli_style): Adding a '.' at the end of"
    },
    {
      "sha": "e2443a2d2345103cbaa091172cd3abcc5c511f3d",
      "filename": "gdb/btrace.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/btrace.c?ref=a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
      "patch": "@@ -1579,7 +1579,7 @@ btrace_add_pc (struct thread_info *tp)\n   pc = regcache_read_pc (regcache);\n \n   btrace.format = BTRACE_FORMAT_BTS;\n-  btrace.variant.bts.blocks = new std::vector <btrace_block>;\n+  btrace.variant.bts.blocks = new std::vector<btrace_block>;\n \n   btrace.variant.bts.blocks->emplace_back (pc, pc);\n \n@@ -2036,7 +2036,7 @@ parse_xml_btrace_block (struct gdb_xml_parser *parser,\n \n     case BTRACE_FORMAT_NONE:\n       btrace->format = BTRACE_FORMAT_BTS;\n-      btrace->variant.bts.blocks = new std::vector <btrace_block>;\n+      btrace->variant.bts.blocks = new std::vector<btrace_block>;\n       break;\n \n     default:\n@@ -2963,7 +2963,7 @@ btrace_maint_decode_pt (struct btrace_maint_info *maint,\n   int errcode;\n \n   if (maint->variant.pt.packets == NULL)\n-    maint->variant.pt.packets = new std::vector <btrace_pt_packet>;\n+    maint->variant.pt.packets = new std::vector<btrace_pt_packet>;\n \n   for (;;)\n     {\n@@ -3095,7 +3095,7 @@ btrace_maint_update_packets (struct btrace_thread_info *btinfo,\n #if defined (HAVE_LIBIPT)\n     case BTRACE_FORMAT_PT:\n       if (btinfo->maint.variant.pt.packets == nullptr)\n-\tbtinfo->maint.variant.pt.packets = new std::vector <btrace_pt_packet>;\n+\tbtinfo->maint.variant.pt.packets = new std::vector<btrace_pt_packet>;\n \n       if (btinfo->maint.variant.pt.packets->empty ())\n \tbtrace_maint_update_pt_packets (btinfo);\n@@ -3123,7 +3123,7 @@ btrace_maint_print_packets (struct btrace_thread_info *btinfo,\n \n     case BTRACE_FORMAT_BTS:\n       {\n-\tconst std::vector <btrace_block> &blocks\n+\tconst std::vector<btrace_block> &blocks\n \t  = *btinfo->data.variant.bts.blocks;\n \tunsigned int blk;\n \n@@ -3144,7 +3144,7 @@ btrace_maint_print_packets (struct btrace_thread_info *btinfo,\n #if defined (HAVE_LIBIPT)\n     case BTRACE_FORMAT_PT:\n       {\n-\tconst std::vector <btrace_pt_packet> &packets\n+\tconst std::vector<btrace_pt_packet> &packets\n \t  = *btinfo->maint.variant.pt.packets;\n \tunsigned int pkt;\n "
    },
    {
      "sha": "acde64a5122f18b2590596201f4ecf810ef216ec",
      "filename": "gdb/btrace.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/btrace.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/btrace.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/btrace.h?ref=a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
      "patch": "@@ -297,7 +297,7 @@ struct btrace_maint_info\n     struct\n     {\n       /* A vector of decoded packets.  */\n-      std::vector <btrace_pt_packet> *packets;\n+      std::vector<btrace_pt_packet> *packets;\n \n       /* The packet history iterator.\n \t We are iterating over the above PACKETS vector.  */"
    },
    {
      "sha": "9d9dd6db709d78013db992f366e73adfecac8470",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
      "patch": "@@ -620,7 +620,7 @@ struct type_unit_group\n   /* The TUs that share this DW_AT_stmt_list entry.\n      This is added to while parsing type units to build partial symtabs,\n      and is deleted afterwards and not used again.  */\n-  std::vector <signatured_type *> *tus;\n+  std::vector<signatured_type *> *tus;\n \n   /* The compunit symtab.\n      Type units in a group needn't all be defined in the same source file,\n@@ -8191,7 +8191,7 @@ build_type_psymtabs_reader (const struct die_reader_specs *reader,\n   tu_group = get_type_unit_group (cu, attr);\n \n   if (tu_group->tus == nullptr)\n-    tu_group->tus = new std::vector <signatured_type *>;\n+    tu_group->tus = new std::vector<signatured_type *>;\n   tu_group->tus->push_back (sig_type);\n \n   prepare_one_comp_unit (cu, type_unit_die, language_minimal);"
    },
    {
      "sha": "608506c34c9bbc10193461d7e0e2c9648e38b415",
      "filename": "gdb/gdbsupport/btrace-common.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/gdbsupport/btrace-common.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/gdbsupport/btrace-common.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/btrace-common.c?ref=a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
      "patch": "@@ -133,7 +133,7 @@ btrace_data_append (struct btrace_data *dst,\n \n \tcase BTRACE_FORMAT_NONE:\n \t  dst->format = BTRACE_FORMAT_BTS;\n-\t  dst->variant.bts.blocks = new std::vector <btrace_block>;\n+\t  dst->variant.bts.blocks = new std::vector<btrace_block>;\n \n \t  /* Fall-through.  */\n \tcase BTRACE_FORMAT_BTS:"
    },
    {
      "sha": "09a90485cdc89db9fb80a75a51836184d5e3767c",
      "filename": "gdb/gdbsupport/btrace-common.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/gdbsupport/btrace-common.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/gdbsupport/btrace-common.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/btrace-common.h?ref=a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
      "patch": "@@ -141,7 +141,7 @@ struct btrace_data_bts\n   /* Branch trace is represented as a vector of branch trace blocks starting\n      with the most recent block.  This needs to be a pointer as we place\n      btrace_data_bts into a union.  */\n-  std::vector <btrace_block> *blocks;\n+  std::vector<btrace_block> *blocks;\n };\n \n /* Configuration information to go with the trace data.  */"
    },
    {
      "sha": "850fa8df58453fcdaf6488829b8093a756139995",
      "filename": "gdb/nat/linux-btrace.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/nat/linux-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0/gdb/nat/linux-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/linux-btrace.c?ref=a8b3b8e93e36d2c9efe346f04f3bbd767e3cc0f0",
      "patch": "@@ -271,11 +271,11 @@ perf_event_sample_ok (const struct perf_event_sample *sample)\n    In case the buffer overflows during sampling, one sample may have its lower\n    part at the end and its upper part at the beginning of the buffer.  */\n \n-static std::vector <btrace_block> *\n+static std::vector<btrace_block> *\n perf_event_read_bts (struct btrace_target_info* tinfo, const uint8_t *begin,\n \t\t     const uint8_t *end, const uint8_t *start, size_t size)\n {\n-  std::vector <btrace_block> *btrace = new std::vector <btrace_block>;\n+  std::vector<btrace_block> *btrace = new std::vector<btrace_block>;\n   struct perf_event_sample sample;\n   size_t read = 0;\n   struct btrace_block block = { 0, 0 };"
    }
  ]
}