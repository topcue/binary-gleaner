{
  "sha": "44fda089397a9e72a9d82387a97097d1d26a8593",
  "node_id": "C_kwDOANOeidoAKDQ0ZmRhMDg5Mzk3YTllNzJhOWQ4MjM4N2E5NzA5N2QxZDI2YTg1OTM",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-22T08:14:15Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-22T08:14:15Z"
    },
    "message": "[gdb/testsuite] Support .debug_line v5 in dwarf assembler\n\nThe v5 section version for .debug_line has:\n- two new fields address_size and segment_selector_size\n- a different way to encode the directory and filename tables.\n\nAdd support for this in the dwarf assembler.\n\nFor now, make the v5 directory and filename tables work with the v4 type of\nspecification in the test-cases by adding duplicate entries at position 0.\n\nThis will need to be properly fixed with an intrusive fix that changes how\ndirectory and filename entries are specified in the test-cases, f.i:\n...\nset diridx [include_dir \"${srcdir}/${subdir}\"]\nset fileidx [file_name \"$srcfile\" $diridx]\n...\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "14631237bbb1c4a2c4839da5f95ca93fc941bcbc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/14631237bbb1c4a2c4839da5f95ca93fc941bcbc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44fda089397a9e72a9d82387a97097d1d26a8593",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44fda089397a9e72a9d82387a97097d1d26a8593",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44fda089397a9e72a9d82387a97097d1d26a8593",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44fda089397a9e72a9d82387a97097d1d26a8593/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8d52378514e293504f385ae536ef7dcd4c3088d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d52378514e293504f385ae536ef7dcd4c3088d7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8d52378514e293504f385ae536ef7dcd4c3088d7"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 70,
    "deletions": 5
  },
  "files": [
    {
      "sha": "27134af8f5da5fe8a36820b4b011f68837a5755d",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44fda089397a9e72a9d82387a97097d1d26a8593/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44fda089397a9e72a9d82387a97097d1d26a8593/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-lines.exp?ref=44fda089397a9e72a9d82387a97097d1d26a8593",
      "patch": "@@ -154,3 +154,9 @@ for { set cv $cv_low } { $cv <= $cv_high } { incr cv } {\n \t}\n     }\n }\n+\n+foreach cdw64 { 0 1 } {\n+    foreach ldw64 { 0 1 } {\n+\ttest 5 $cdw64 5 $ldw64\n+    }\n+}"
    },
    {
      "sha": "b2a337238c34cafa64fe80d94d9400b368508448",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 64,
      "deletions": 5,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44fda089397a9e72a9d82387a97097d1d26a8593/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44fda089397a9e72a9d82387a97097d1d26a8593/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=44fda089397a9e72a9d82387a97097d1d26a8593",
      "patch": "@@ -2158,6 +2158,9 @@ namespace eval Dwarf {\n     #                default = 4\n     # addr_size n  - the size of addresses in bytes: 4, 8, or default\n     #                default = default\n+    # seg_sel_size n\n+    #              - the size of segment selector_size in bytes:\n+    #                default = 0\n     #\n     # LABEL is the label of the current unit (which is probably\n     # referenced by a DW_AT_stmt_list), or \"\" if there is no such\n@@ -2181,23 +2184,26 @@ namespace eval Dwarf {\n \tvariable _line_header_finalized\n \tvariable _line_saw_program\n \tvariable _line_header_end_label\n+\tvariable _line_unit_version\n \n \t# Establish the defaults.\n \tset is_64 0\n-\tset _unit_version 4\n+\tset _line_unit_version 4\n \tset _unit_addr_size default\n \tset _line_saw_program 0\n \tset _line_saw_file 0\n \tset _line_include_dirs {}\n \tset _line_file_names {}\n \tset _line_header_finalized 0\n \tset _default_is_stmt 1\n+\tset _seg_sel_size 0\n \n \tforeach { name value } $options {\n \t    switch -exact -- $name {\n \t\tis_64 { set is_64 $value }\n-\t\tversion { set _unit_version $value }\n+\t\tversion { set _line_unit_version $value }\n \t\taddr_size { set _unit_addr_size $value }\n+\t\tseg_sel_size { set _seg_sel_size $value }\n \t\tdefault_is_stmt { set _default_is_stmt $value }\n \t\tdefault { error \"unknown option $name\" }\n \t    }\n@@ -2234,7 +2240,13 @@ namespace eval Dwarf {\n \n \tdefine_label $unit_len_label\n \n-\t_op .2byte $_unit_version version\n+\t_op .2byte $_line_unit_version version\n+\n+\tif { $_line_unit_version >= 5 } {\n+\t    _op .byte $_unit_addr_size \"address_size\"\n+\t    # Hardcode to 0 for now.\n+\t    _op .byte $_seg_sel_size \"seg_sel_size\"\n+\t}\n \n \tif {$is_64} {\n \t    _op .8byte \"$_line_header_end_label - $header_len_label\" \"header_length\"\n@@ -2245,7 +2257,7 @@ namespace eval Dwarf {\n \tdefine_label $header_len_label\n \n \t_op .byte 1 \"minimum_instruction_length\"\n-\tif { $_unit_version >= 4 } {\n+\tif { $_line_unit_version >= 4 } {\n \t    # Assume non-VLIW for now.\n \t    _op .byte 1 \"maximum_operations_per_instruction\"\n \t}\n@@ -2293,7 +2305,54 @@ namespace eval Dwarf {\n \t    variable _line_include_dirs\n \t    variable _line_file_names\n \n-\t    if { 1 } {\n+\t    variable _line_unit_version\n+\t    if { $_line_unit_version >= 5 } {\n+\t\t_op .byte 1 \"directory_entry_format_count\"\n+\t\t_op .uleb128 1 \\\n+\t\t    \"directory_entry_format (content type code: DW_LNCT_path)\"\n+\t\t_op .uleb128 0x08 \\\n+\t\t    \"directory_entry_format (form: DW_FORM_string)\"\n+\n+\t\tset nr_dirs [llength $_line_include_dirs]\n+\t\t# For entry 0.\n+\t\tset nr_dirs [expr $nr_dirs + 1]\n+\t\t_op .byte $nr_dirs \"directory_count\"\n+\n+\t\t# Entry 0.\n+\t\tset dirname [lindex $_line_include_dirs 0]\n+\t\tset _line_include_dirs \\\n+\t\t    [concat [list $dirname] $_line_include_dirs]\n+\n+\t\tforeach dirname $_line_include_dirs {\n+\t\t    _op .ascii [_quote $dirname]\n+\t\t}\n+\n+\t\t_op .byte 2 \"file_name_entry_format_count\"\n+\t\t_op .uleb128 1 \\\n+\t\t    \"file_name_entry_format (content type code: DW_LNCT_path)\"\n+\t\t_op .uleb128 0x08 \\\n+\t\t    \"file_name_entry_format (form: DW_FORM_string)\"\n+\t\t_op .uleb128 2 \\\n+\t\t    \"file_name_entry_format (content type code: DW_LNCT_directory_index)\"\n+\t\t_op .uleb128 0x0f \\\n+\t\t    \"file_name_entry_format (form: DW_FORM_udata)\"\n+\n+\t\tset nr_files [expr [llength $_line_file_names] / 2]\n+\t\t# For entry 0.\n+\t\tset nr_files [expr $nr_files + 1]\n+\t\t_op .byte $nr_files \"file_names_count\"\n+\n+\t\t# Entry 0.\n+\t\tset filename [lindex $_line_file_names 0]\n+\t\tset diridx [lindex $_line_file_names 1]\n+\t\tset _line_file_names \\\n+\t\t    [concat [list $filename $diridx] $_line_file_names]\n+\n+\t\tforeach { filename diridx } $_line_file_names {\n+\t\t    _op .ascii [_quote $filename]\n+\t\t    _op .uleb128 $diridx\n+\t\t}\n+\t    } else {\n \t\tforeach dirname $_line_include_dirs {\n \t\t    _op .ascii [_quote $dirname]\n \t\t}"
    }
  ]
}