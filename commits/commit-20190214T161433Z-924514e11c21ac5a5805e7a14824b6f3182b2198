{
  "sha": "924514e11c21ac5a5805e7a14824b6f3182b2198",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTI0NTE0ZTExYzIxYWM1YTU4MDVlN2ExNDgyNGI2ZjMxODJiMjE5OA==",
  "commit": {
    "author": {
      "name": "Thomas Schwinge",
      "email": "thomas@codesourcery.com",
      "date": "2019-02-14T09:22:28Z"
    },
    "committer": {
      "name": "Thomas Schwinge",
      "email": "thomas@codesourcery.com",
      "date": "2019-02-14T16:14:33Z"
    },
    "message": "[gdb, hurd] Address \"ISO C++ forbids converting a string constant to 'char*' [-Wwrite-strings]\" diagnostics\n\n... that appeared with 9bf2a700667c53003ece783c05e8b355801105f2\n\"-Wwrite-strings: Remove -Wno-write-strings\".\n\n\tgdb/\n\t* gnu-nat.c (gnu_write_inferior, parse_int_arg, _parse_bool_arg)\n\t(check_empty): Use \"const char *\".",
    "tree": {
      "sha": "faa2407b0571539acd2a513fed9089b802823a18",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/faa2407b0571539acd2a513fed9089b802823a18"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/924514e11c21ac5a5805e7a14824b6f3182b2198",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/924514e11c21ac5a5805e7a14824b6f3182b2198",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/924514e11c21ac5a5805e7a14824b6f3182b2198",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/924514e11c21ac5a5805e7a14824b6f3182b2198/comments",
  "author": {
    "login": "tschwinge",
    "id": 21753,
    "node_id": "MDQ6VXNlcjIxNzUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tschwinge",
    "html_url": "https://github.com/tschwinge",
    "followers_url": "https://api.github.com/users/tschwinge/followers",
    "following_url": "https://api.github.com/users/tschwinge/following{/other_user}",
    "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions",
    "organizations_url": "https://api.github.com/users/tschwinge/orgs",
    "repos_url": "https://api.github.com/users/tschwinge/repos",
    "events_url": "https://api.github.com/users/tschwinge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tschwinge/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tschwinge",
    "id": 21753,
    "node_id": "MDQ6VXNlcjIxNzUz",
    "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tschwinge",
    "html_url": "https://github.com/tschwinge",
    "followers_url": "https://api.github.com/users/tschwinge/followers",
    "following_url": "https://api.github.com/users/tschwinge/following{/other_user}",
    "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions",
    "organizations_url": "https://api.github.com/users/tschwinge/orgs",
    "repos_url": "https://api.github.com/users/tschwinge/repos",
    "events_url": "https://api.github.com/users/tschwinge/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tschwinge/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c29ee8d45ec2113821c006a18cfedb9023ef9ce1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c29ee8d45ec2113821c006a18cfedb9023ef9ce1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c29ee8d45ec2113821c006a18cfedb9023ef9ce1"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 8,
    "deletions": 4
  },
  "files": [
    {
      "sha": "e427dda8a3a5c7f27cc6a1381a4bddead2a3cdc8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/924514e11c21ac5a5805e7a14824b6f3182b2198/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/924514e11c21ac5a5805e7a14824b6f3182b2198/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=924514e11c21ac5a5805e7a14824b6f3182b2198",
      "patch": "@@ -1,5 +1,8 @@\n 2019-02-14  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* gnu-nat.c (gnu_write_inferior, parse_int_arg, _parse_bool_arg)\n+\t(check_empty): Use \"const char *\".\n+\n \t* gnu-nat.c (gnu_nat_target::detach): Instead of\n \t'detach_inferior (pid)' call\n \t'detach_inferior (find_inferior_pid (pid))'."
    },
    {
      "sha": "395b456ad726eb6b44eb2a67bb0ddbdc63503493",
      "filename": "gdb/gnu-nat.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/924514e11c21ac5a5805e7a14824b6f3182b2198/gdb/gnu-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/924514e11c21ac5a5805e7a14824b6f3182b2198/gdb/gnu-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-nat.c?ref=924514e11c21ac5a5805e7a14824b6f3182b2198",
      "patch": "@@ -2361,7 +2361,7 @@ gnu_write_inferior (task_t task, CORE_ADDR addr,\n   mach_msg_type_number_t copy_count;\n   int deallocate = 0;\n \n-  char *errstr = \"Bug in gnu_write_inferior\";\n+  const char *errstr = \"Bug in gnu_write_inferior\";\n \n   struct vm_region_list *region_element;\n   struct vm_region_list *region_head = NULL;\n@@ -2778,7 +2778,7 @@ show_thread_default_cmd (const char *args, int from_tty)\n }\n \n static int\n-parse_int_arg (const char *args, char *cmd_prefix)\n+parse_int_arg (const char *args, const char *cmd_prefix)\n {\n   if (args)\n     {\n@@ -2793,7 +2793,8 @@ parse_int_arg (const char *args, char *cmd_prefix)\n }\n \n static int\n-_parse_bool_arg (const char *args, char *t_val, char *f_val, char *cmd_prefix)\n+_parse_bool_arg (const char *args, const char *t_val, const char *f_val,\n+\t\t const char *cmd_prefix)\n {\n   if (!args || strcmp (args, t_val) == 0)\n     return 1;\n@@ -2809,7 +2810,7 @@ _parse_bool_arg (const char *args, char *t_val, char *f_val, char *cmd_prefix)\n   _parse_bool_arg (args, \"on\", \"off\", cmd_prefix)\n \n static void\n-check_empty (const char *args, char *cmd_prefix)\n+check_empty (const char *args, const char *cmd_prefix)\n {\n   if (args)\n     error (_(\"Garbage after \\\"%s\\\" command: `%s'\"), cmd_prefix, args);"
    }
  ]
}