{
  "sha": "b293661219c36e72acb80502a86b51160bb88cfd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjI5MzY2MTIxOWMzNmU3MmFjYjgwNTAyYTg2YjUxMTYwYmI4OGNmZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-03T00:33:06Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-03T06:04:17Z"
    },
    "message": "PPC: ensure_undef_dynamic on weak undef only in plt\n\nIt's slightly weird to have a call to a weak function not protected by\na test of that function being non-NULL, but the non-NULL test might be\ncovered by a test of another function.  For example:\n  if (func1)\n    {\n      func1 ();\n      func2 ();\n    }\nwhere func2 is known to exist if func1 exists.\n\n\t* elf32-ppc.c (allocate_dynrelocs): Call ensure_undef_dynamic for\n\tweak undefined symols that only appear on PLT relocs.\n\t* elf64-ppc.c (allocate_dynrelocs): Likewise.",
    "tree": {
      "sha": "deebfdb320ad07d4ca226983cb4346ae81efebaf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/deebfdb320ad07d4ca226983cb4346ae81efebaf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b293661219c36e72acb80502a86b51160bb88cfd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b293661219c36e72acb80502a86b51160bb88cfd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b293661219c36e72acb80502a86b51160bb88cfd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b293661219c36e72acb80502a86b51160bb88cfd/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "337d0bf887a3ed6b6b2123fecfec0736640edcaf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/337d0bf887a3ed6b6b2123fecfec0736640edcaf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/337d0bf887a3ed6b6b2123fecfec0736640edcaf"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 16,
    "deletions": 2
  },
  "files": [
    {
      "sha": "293fd993d8965d82f3809581f8f9c17f69393d1e",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b293661219c36e72acb80502a86b51160bb88cfd/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b293661219c36e72acb80502a86b51160bb88cfd/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=b293661219c36e72acb80502a86b51160bb88cfd",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf32-ppc.c (allocate_dynrelocs): Call ensure_undef_dynamic for\n+\tweak undefined symols that only appear on PLT relocs.\n+\t* elf64-ppc.c (allocate_dynrelocs): Likewise.\n+\n 2021-05-03  Alan Modra  <amodra@gmail.com>\n \n \tPR 27755"
    },
    {
      "sha": "ff618e460a4ca693a1a90b535ee35fa2b6f627c1",
      "filename": "bfd/elf32-ppc.c",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b293661219c36e72acb80502a86b51160bb88cfd/bfd/elf32-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b293661219c36e72acb80502a86b51160bb88cfd/bfd/elf32-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-ppc.c?ref=b293661219c36e72acb80502a86b51160bb88cfd",
      "patch": "@@ -5296,9 +5296,14 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n       for (ent = h->plt.plist; ent != NULL; ent = ent->next)\n \tif (ent->plt.refcount > 0)\n \t  {\n-\t    asection *s = htab->elf.splt;\n-\t    bool dyn = !use_local_plt (info, h);\n+\t    asection *s;\n+\t    bool dyn;\n \n+\t    if (!ensure_undef_dynamic (info, h))\n+\t      return false;\n+\n+\t    dyn = !use_local_plt (info, h);\n+\t    s = htab->elf.splt;\n \t    if (!dyn)\n \t      {\n \t\tif (h->type == STT_GNU_IFUNC)"
    },
    {
      "sha": "bc960bf8e9d371955d80689d121eb638d959e6f2",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b293661219c36e72acb80502a86b51160bb88cfd/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b293661219c36e72acb80502a86b51160bb88cfd/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=b293661219c36e72acb80502a86b51160bb88cfd",
      "patch": "@@ -9855,6 +9855,9 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n       for (pent = h->plt.plist; pent != NULL; pent = pent->next)\n \tif (pent->plt.refcount > 0)\n \t  {\n+\t    if (!ensure_undef_dynamic (info, h))\n+\t      return false;\n+\n \t    if (use_local_plt (info, h))\n \t      {\n \t\tif (h->type == STT_GNU_IFUNC)"
    }
  ]
}