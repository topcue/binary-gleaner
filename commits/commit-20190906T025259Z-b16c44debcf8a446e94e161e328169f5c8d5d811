{
  "sha": "b16c44debcf8a446e94e161e328169f5c8d5d811",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjE2YzQ0ZGViY2Y4YTQ0NmU5NGUxNjFlMzI4MTY5ZjVjOGQ1ZDgxMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-06T02:37:05Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-06T02:52:59Z"
    },
    "message": "bfd_get_filename\n\nThis macro says:\n/* Cast from const char * to char * so that caller can assign to\n   a char * without a warning.  */\n\nI reckon that isn't such a good idea since it can result in char*\nvariables where const char* is appropriate.  Not very many places\nneed the char* cast.\n\nbfd/\n\t* aout-target.h (object_p): Formatting.\n\t* bfd-in.h (bfd_get_filename): Don't cast to char*.\n\t* corefile.c (generic_core_file_matches_executable_p): Constify\n\tvariables and remove cast.\n\t* bfd-in2.h: Regenerate.\nbinutils/\n\t* nm.c (print_object_filename_bsd, print_object_filename_sysv),\n\t(print_object_filename_posix, print_archive_filename_bsd),\n\t(print_archive_filename_sysv, print_archive_filename_posix),\n\t(print_archive_member_bsd, print_archive_member_sysv),\n\t(print_archive_member_posix): Constify parameter.\n\t(struct output_fns <print_object_filename, print_archive_filename>),\n\t(<print_archive_member>): Likewise.\n\t* objcopy.c (copy_archive): Add cast for make_tempdir.\nld/\n\t* emultempl/elf32.em (gld${EMULATION_NAME}_search_needed): Constify\n\tvariable.\n\t* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Likewise.\n\t* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.\ngdb/\n\t* coffread.c (coff_symfile_read): Constify filename variable.\n\t* dbxread.c (dbx_symfile_init, coffstab_build_psymtabs),\n\t(elfstab_build_psymtabs, stabsect_build_psymtabs): Likewise.\n\t* gdb_bfd.c (gdb_bfd_close_or_warn): Likewise.\n\t* solib.c (reload_shared_libraries_1): Likewise.\n\t* symfile.c (reread_symbols): Likewise.\n\t* solib-aix.c (solib_aix_bfd_open): Add cast for xfree of filename.\n\t* solib-darwin.c (darwin_bfd_open): Likewise.\n\t* symfile-mem.c (symbol_file_add_from_memory): Likewise.\nsim/cris/\n\t* sim-if.c (sim_open): Constify filename variable.",
    "tree": {
      "sha": "f402c08e8f7fc00a404055e36c416580377f1b3a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f402c08e8f7fc00a404055e36c416580377f1b3a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b16c44debcf8a446e94e161e328169f5c8d5d811",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b16c44debcf8a446e94e161e328169f5c8d5d811",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b16c44debcf8a446e94e161e328169f5c8d5d811",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b16c44debcf8a446e94e161e328169f5c8d5d811/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6ade8373c9e689dece1057366b5adf9f8e86fa22",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ade8373c9e689dece1057366b5adf9f8e86fa22",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6ade8373c9e689dece1057366b5adf9f8e86fa22"
    }
  ],
  "stats": {
    "total": 136,
    "additions": 87,
    "deletions": 49
  },
  "files": [
    {
      "sha": "24f5e33833f0ea7a05e623ca3024953c7e5c5b0b",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1,3 +1,11 @@\n+2019-09-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* aout-target.h (object_p): Formatting.\n+\t* bfd-in.h (bfd_get_filename): Don't cast to char*.\n+\t* corefile.c (generic_core_file_matches_executable_p): Constify\n+\tvariables and remove cast.\n+\t* bfd-in2.h: Regenerate.\n+\n 2019-09-05  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (ppc64_elf_check_relocs): Interpret an addend in"
    },
    {
      "sha": "99a82bb57a27c86c2f36b37bc3c156628f7685d7",
      "filename": "bfd/aout-target.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/aout-target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/aout-target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/aout-target.h?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -180,7 +180,7 @@ MY (object_p) (bfd *abfd)\n #ifndef S_IXUSR\n #define S_IXUSR 0100\t/* Execute by owner.  */\n #endif\n-      if (stat(abfd->filename, &buf) == 0 && (buf.st_mode & S_IXUSR))\n+      if (stat (abfd->filename, &buf) == 0 && (buf.st_mode & S_IXUSR))\n \tabfd->flags |= EXEC_P;\n     }\n #endif /* ENTRY_CAN_BE_ZERO */"
    },
    {
      "sha": "6544838a575e40c97e1c2fc07cf8b99e3e291aa1",
      "filename": "bfd/bfd-in.h",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/bfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/bfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in.h?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -518,9 +518,7 @@ extern int bfd_stat (bfd *, struct stat *);\n #endif\n extern void _bfd_warn_deprecated (const char *, const char *, int, const char *);\n \n-/* Cast from const char * to char * so that caller can assign to\n-   a char * without a warning.  */\n-#define bfd_get_filename(abfd) ((char *) (abfd)->filename)\n+#define bfd_get_filename(abfd) ((abfd)->filename)\n #define bfd_get_cacheable(abfd) ((abfd)->cacheable)\n #define bfd_get_format(abfd) ((abfd)->format)\n #define bfd_get_target(abfd) ((abfd)->xvec->name)"
    },
    {
      "sha": "7b1cfbcf1a27951fb1b3a212995075dd6fdf985b",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -525,9 +525,7 @@ extern int bfd_stat (bfd *, struct stat *);\n #endif\n extern void _bfd_warn_deprecated (const char *, const char *, int, const char *);\n \n-/* Cast from const char * to char * so that caller can assign to\n-   a char * without a warning.  */\n-#define bfd_get_filename(abfd) ((char *) (abfd)->filename)\n+#define bfd_get_filename(abfd) ((abfd)->filename)\n #define bfd_get_cacheable(abfd) ((abfd)->cacheable)\n #define bfd_get_format(abfd) ((abfd)->format)\n #define bfd_get_target(abfd) ((abfd)->xvec->name)"
    },
    {
      "sha": "b2b3d2e26ab8c38b92d97ff94eec1becaf617ace",
      "filename": "bfd/corefile.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/corefile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/bfd/corefile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/corefile.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -157,9 +157,9 @@ DESCRIPTION\n bfd_boolean\n generic_core_file_matches_executable_p (bfd *core_bfd, bfd *exec_bfd)\n {\n-  char *exec;\n-  char *core;\n-  char *last_slash;\n+  const char *exec;\n+  const char *core;\n+  const char *last_slash;\n \n   if (exec_bfd == NULL || core_bfd == NULL)\n     return TRUE;\n@@ -169,7 +169,7 @@ generic_core_file_matches_executable_p (bfd *core_bfd, bfd *exec_bfd)\n      non-const char *.  In this case, the assignement does not lead to\n      breaking the const, as we're only reading the string.  */\n \n-  core = (char *) bfd_core_file_failing_command (core_bfd);\n+  core = bfd_core_file_failing_command (core_bfd);\n   if (core == NULL)\n     return TRUE;\n "
    },
    {
      "sha": "198380eaeab1f5096d14cd4e769692af46cb1ae1",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1,3 +1,14 @@\n+2019-09-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* nm.c (print_object_filename_bsd, print_object_filename_sysv),\n+\t(print_object_filename_posix, print_archive_filename_bsd),\n+\t(print_archive_filename_sysv, print_archive_filename_posix),\n+\t(print_archive_member_bsd, print_archive_member_sysv),\n+\t(print_archive_member_posix): Constify parameter.\n+\t(struct output_fns <print_object_filename, print_archive_filename>),\n+\t(<print_archive_member>): Likewise.\n+\t* objcopy.c (copy_archive): Add cast for make_tempdir.\n+\n 2019-08-29  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf.c (check_uvalue): Remove unnecessary pointer checks."
    },
    {
      "sha": "67b7ac7b1252024b206429f21c6586c4e7e3f758",
      "filename": "binutils/nm.c",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/binutils/nm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/binutils/nm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/nm.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -77,15 +77,15 @@ struct extended_symbol_info\n   (sym->elfinfo ? sym->elfinfo->internal_elf_sym.st_size: sym->ssize)\n \n /* The output formatting functions.  */\n-static void print_object_filename_bsd (char *);\n-static void print_object_filename_sysv (char *);\n-static void print_object_filename_posix (char *);\n-static void print_archive_filename_bsd (char *);\n-static void print_archive_filename_sysv (char *);\n-static void print_archive_filename_posix (char *);\n-static void print_archive_member_bsd (char *, const char *);\n-static void print_archive_member_sysv (char *, const char *);\n-static void print_archive_member_posix (char *, const char *);\n+static void print_object_filename_bsd (const char *);\n+static void print_object_filename_sysv (const char *);\n+static void print_object_filename_posix (const char *);\n+static void print_archive_filename_bsd (const char *);\n+static void print_archive_filename_sysv (const char *);\n+static void print_archive_filename_posix (const char *);\n+static void print_archive_member_bsd (const char *, const char *);\n+static void print_archive_member_sysv (const char *, const char *);\n+static void print_archive_member_posix (const char *, const char *);\n static void print_symbol_filename_bsd (bfd *, bfd *);\n static void print_symbol_filename_sysv (bfd *, bfd *);\n static void print_symbol_filename_posix (bfd *, bfd *);\n@@ -98,13 +98,13 @@ static void print_symbol_info_posix (struct extended_symbol_info *, bfd *);\n struct output_fns\n   {\n     /* Print the name of an object file given on the command line.  */\n-    void (*print_object_filename) (char *);\n+    void (*print_object_filename) (const char *);\n \n     /* Print the name of an archive file given on the command line.  */\n-    void (*print_archive_filename) (char *);\n+    void (*print_archive_filename) (const char *);\n \n     /* Print the name of an archive member file.  */\n-    void (*print_archive_member) (char *, const char *);\n+    void (*print_archive_member) (const char *, const char *);\n \n     /* Print the name of the file (and archive, if there is one)\n        containing a symbol.  */\n@@ -1357,14 +1357,14 @@ display_file (char *filename)\n /* Print the name of an object file given on the command line.  */\n \n static void\n-print_object_filename_bsd (char *filename)\n+print_object_filename_bsd (const char *filename)\n {\n   if (filename_per_file && !filename_per_symbol)\n     printf (\"\\n%s:\\n\", filename);\n }\n \n static void\n-print_object_filename_sysv (char *filename)\n+print_object_filename_sysv (const char *filename)\n {\n   if (undefined_only)\n     printf (_(\"\\n\\nUndefined symbols from %s:\\n\\n\"), filename);\n@@ -1379,7 +1379,7 @@ Name                  Value           Class        Type         Size\n }\n \n static void\n-print_object_filename_posix (char *filename)\n+print_object_filename_posix (const char *filename)\n {\n   if (filename_per_file && !filename_per_symbol)\n     printf (\"%s:\\n\", filename);\n@@ -1388,34 +1388,34 @@ print_object_filename_posix (char *filename)\n /* Print the name of an archive file given on the command line.  */\n \n static void\n-print_archive_filename_bsd (char *filename)\n+print_archive_filename_bsd (const char *filename)\n {\n   if (filename_per_file)\n     printf (\"\\n%s:\\n\", filename);\n }\n \n static void\n-print_archive_filename_sysv (char *filename ATTRIBUTE_UNUSED)\n+print_archive_filename_sysv (const char *filename ATTRIBUTE_UNUSED)\n {\n }\n \n static void\n-print_archive_filename_posix (char *filename ATTRIBUTE_UNUSED)\n+print_archive_filename_posix (const char *filename ATTRIBUTE_UNUSED)\n {\n }\n \f\n /* Print the name of an archive member file.  */\n \n static void\n-print_archive_member_bsd (char *archive ATTRIBUTE_UNUSED,\n+print_archive_member_bsd (const char *archive ATTRIBUTE_UNUSED,\n \t\t\t  const char *filename)\n {\n   if (!filename_per_symbol)\n     printf (\"\\n%s:\\n\", filename);\n }\n \n static void\n-print_archive_member_sysv (char *archive, const char *filename)\n+print_archive_member_sysv (const char *archive, const char *filename)\n {\n   if (undefined_only)\n     printf (_(\"\\n\\nUndefined symbols from %s[%s]:\\n\\n\"), archive, filename);\n@@ -1430,7 +1430,7 @@ Name                  Value           Class        Type         Size\n }\n \n static void\n-print_archive_member_posix (char *archive, const char *filename)\n+print_archive_member_posix (const char *archive, const char *filename)\n {\n   if (!filename_per_symbol)\n     printf (\"%s[%s]:\\n\", archive, filename);"
    },
    {
      "sha": "b702e52d987a260afe419bf27cd66dd8c45689d5",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -3311,7 +3311,7 @@ copy_archive (bfd *ibfd, bfd *obfd, const char *output_target,\n     }\n \n   /* Make a temp directory to hold the contents.  */\n-  dir = make_tempdir (bfd_get_filename (obfd));\n+  dir = make_tempdir ((char *) bfd_get_filename (obfd));\n   if (dir == NULL)\n     fatal (_(\"cannot create tempdir for archive copying (error: %s)\"),\n \t   strerror (errno));"
    },
    {
      "sha": "40bd4d0d02bae102ea88bfb8a9310845a988444b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1,3 +1,15 @@\n+2019-09-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* coffread.c (coff_symfile_read): Constify filename variable.\n+\t* dbxread.c (dbx_symfile_init, coffstab_build_psymtabs),\n+\t(elfstab_build_psymtabs, stabsect_build_psymtabs): Likewise.\n+\t* gdb_bfd.c (gdb_bfd_close_or_warn): Likewise.\n+\t* solib.c (reload_shared_libraries_1): Likewise.\n+\t* symfile.c (reread_symbols): Likewise.\n+\t* solib-aix.c (solib_aix_bfd_open): Add cast for xfree of filename.\n+\t* solib-darwin.c (darwin_bfd_open): Likewise.\n+\t* symfile-mem.c (symbol_file_add_from_memory): Likewise.\n+\n 2019-09-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* psymtab.c (print_partial_symbols): Handle missing domain_enum"
    },
    {
      "sha": "a70461271e7284e22aed74d5c6a5a809aa0c07d2",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -538,7 +538,7 @@ coff_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n   struct coff_symfile_info *info;\n   bfd *abfd = objfile->obfd;\n   coff_data_type *cdata = coff_data (abfd);\n-  char *filename = bfd_get_filename (abfd);\n+  const char *filename = bfd_get_filename (abfd);\n   int val;\n   unsigned int num_symbols;\n   int symtab_offset;"
    },
    {
      "sha": "df3ae5828afaa661ea9c34b8eeb67afab554769b",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -587,7 +587,7 @@ dbx_symfile_init (struct objfile *objfile)\n {\n   int val;\n   bfd *sym_bfd = objfile->obfd;\n-  char *name = bfd_get_filename (sym_bfd);\n+  const char *name = bfd_get_filename (sym_bfd);\n   asection *text_sect;\n   unsigned char size_temp[DBX_STRINGTAB_SIZE_SIZE];\n \n@@ -2939,7 +2939,7 @@ coffstab_build_psymtabs (struct objfile *objfile,\n {\n   int val;\n   bfd *sym_bfd = objfile->obfd;\n-  char *name = bfd_get_filename (sym_bfd);\n+  const char *name = bfd_get_filename (sym_bfd);\n   unsigned int stabsize;\n \n   /* Allocate struct to keep track of stab reading.  */\n@@ -3026,7 +3026,7 @@ elfstab_build_psymtabs (struct objfile *objfile, asection *stabsect,\n {\n   int val;\n   bfd *sym_bfd = objfile->obfd;\n-  char *name = bfd_get_filename (sym_bfd);\n+  const char *name = bfd_get_filename (sym_bfd);\n \n   stabsread_new_init ();\n \n@@ -3107,7 +3107,7 @@ stabsect_build_psymtabs (struct objfile *objfile, char *stab_name,\n {\n   int val;\n   bfd *sym_bfd = objfile->obfd;\n-  char *name = bfd_get_filename (sym_bfd);\n+  const char *name = bfd_get_filename (sym_bfd);\n   asection *stabsect;\n   asection *stabstrsect;\n   asection *text_sect;"
    },
    {
      "sha": "d3b4c749f5066e81a0b7049c7e55e677ab717a6a",
      "filename": "gdb/gdb_bfd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/gdb_bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/gdb_bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb_bfd.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -504,7 +504,7 @@ static int\n gdb_bfd_close_or_warn (struct bfd *abfd)\n {\n   int ret;\n-  char *name = bfd_get_filename (abfd);\n+  const char *name = bfd_get_filename (abfd);\n \n   bfd_map_over_sections (abfd, free_one_bfd_section, NULL);\n "
    },
    {
      "sha": "2b5444293e26eaa6a2f7cde1899f1351880645de",
      "filename": "gdb/solib-aix.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/solib-aix.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/solib-aix.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-aix.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -643,9 +643,9 @@ solib_aix_bfd_open (const char *pathname)\n      along with appended parenthesized member name in order to allow commands\n      listing all shared libraries to display.  Otherwise, we would only be\n      displaying the name of the archive member object.  */\n-  xfree (bfd_get_filename (object_bfd.get ()));\n+  xfree ((char *) bfd_get_filename (object_bfd.get ()));\n   object_bfd->filename = xstrprintf (\"%s%s\",\n-                                     bfd_get_filename (archive_bfd.get ()),\n+\t\t\t\t     bfd_get_filename (archive_bfd.get ()),\n \t\t\t\t     sep);\n \n   return object_bfd;"
    },
    {
      "sha": "3dd30d2aa3c003a2385e9714117ba8364be05734",
      "filename": "gdb/solib-darwin.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/solib-darwin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/solib-darwin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-darwin.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -670,7 +670,7 @@ darwin_bfd_open (const char *pathname)\n   /* The current filename for fat-binary BFDs is a name generated\n      by BFD, usually a string containing the name of the architecture.\n      Reset its value to the actual filename.  */\n-  xfree (bfd_get_filename (res.get ()));\n+  xfree ((char *) bfd_get_filename (res.get ()));\n   res->filename = xstrdup (pathname);\n \n   return res;"
    },
    {
      "sha": "86000f6d61d4ec7ee7915ffc84f728f50b479f68",
      "filename": "gdb/solib.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/solib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/solib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1296,7 +1296,7 @@ reload_shared_libraries_1 (int from_tty)\n \n   for (so = so_list_head; so != NULL; so = so->next)\n     {\n-      char *found_pathname = NULL;\n+      const char *found_pathname = NULL;\n       int was_loaded = so->symbols_loaded;\n       symfile_add_flags add_flags = SYMFILE_DEFER_BP_RESET;\n "
    },
    {
      "sha": "6d1deae1e0ec6d349573b8d1972a6854f90ab201",
      "filename": "gdb/symfile-mem.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/symfile-mem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/symfile-mem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-mem.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -101,7 +101,7 @@ symbol_file_add_from_memory (struct bfd *templ, CORE_ADDR addr,\n   /* Manage the new reference for the duration of this function.  */\n   gdb_bfd_ref_ptr nbfd_holder = gdb_bfd_ref_ptr::new_reference (nbfd);\n \n-  xfree (bfd_get_filename (nbfd));\n+  xfree ((char *) bfd_get_filename (nbfd));\n   if (name == NULL)\n     nbfd->filename = xstrdup (\"shared object read from target memory\");\n   else"
    },
    {
      "sha": "3cd514409b08928f3da014ef61f291f9eab79791",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -2548,7 +2548,7 @@ reread_symbols (void)\n \t  /* Clean up any state BFD has sitting around.  */\n \t  {\n \t    gdb_bfd_ref_ptr obfd (objfile->obfd);\n-\t    char *obfd_filename;\n+\t    const char *obfd_filename;\n \n \t    obfd_filename = bfd_get_filename (objfile->obfd);\n \t    /* Open the new BFD before freeing the old one, so that"
    },
    {
      "sha": "13abd72d8394141d426c3b3789a522763f406b98",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1,3 +1,10 @@\n+2019-09-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* emultempl/elf32.em (gld${EMULATION_NAME}_search_needed): Constify\n+\tvariable.\n+\t* emultempl/pe.em (gld_${EMULATION_NAME}_after_open): Likewise.\n+\t* emultempl/pep.em (gld_${EMULATION_NAME}_after_open): Likewise.\n+\n 2019-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ld/24574"
    },
    {
      "sha": "52db0fde1dfcad1f9433e381bd74c5028992a220",
      "filename": "ld/emultempl/elf32.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/emultempl/elf32.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/emultempl/elf32.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf32.em?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -552,7 +552,7 @@ gld${EMULATION_NAME}_search_needed (const char *path,\n \t     FIXME: The code could be a lot cleverer about allocating space\n \t     for the processed string.  */\n \t  char *    end = strchr (var, '/');\n-\t  char *    replacement = NULL;\n+\t  const char *replacement = NULL;\n \t  char *    v = var + 1;\n \t  char *    freeme = NULL;\n \t  unsigned  flen = strlen (filename);"
    },
    {
      "sha": "49bb66b906a70dd916ca374830195d1946e0f642",
      "filename": "ld/emultempl/pe.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/emultempl/pe.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/emultempl/pe.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pe.em?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1513,7 +1513,7 @@ gld_${EMULATION_NAME}_after_open (void)\n \t\t      {\n \t\t\tstruct bfd_symbol *s;\n \t\t\tstruct bfd_link_hash_entry * blhe;\n-\t\t\tchar *other_bfd_filename;\n+\t\t\tconst char *other_bfd_filename;\n \t\t\tchar *n;\n \n \t\t\ts = (relocs[i]->sym_ptr_ptr)[0];"
    },
    {
      "sha": "4daa32b5c618b2cf4db9666f4a23ff526c5cb10e",
      "filename": "ld/emultempl/pep.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/emultempl/pep.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/ld/emultempl/pep.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pep.em?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1480,7 +1480,7 @@ gld_${EMULATION_NAME}_after_open (void)\n \t\t      {\n \t\t\tstruct bfd_symbol *s;\n \t\t\tstruct bfd_link_hash_entry * blhe;\n-\t\t\tchar *other_bfd_filename;\n+\t\t\tconst char *other_bfd_filename;\n \t\t\tchar *n;\n \n \t\t\ts = (relocs[i]->sym_ptr_ptr)[0];"
    },
    {
      "sha": "d37fc8f56d8fa41871d32188142fab6ee5788592",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -1,3 +1,7 @@\n+2019-09-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* sim-if.c (sim_open): Constify filename variable.\n+\n 2018-12-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* Makefile.in: Replace uses of CGEN_CPU_DIR with CPU_DIR, and"
    },
    {
      "sha": "1a5d421caffe9f9bf7d7425e5803384ea24dc120",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b16c44debcf8a446e94e161e328169f5c8d5d811/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b16c44debcf8a446e94e161e328169f5c8d5d811/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=b16c44debcf8a446e94e161e328169f5c8d5d811",
      "patch": "@@ -746,7 +746,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n      specified.  */\n   if (abfd != NULL && !cris_bare_iron)\n     {\n-      char *name = bfd_get_filename (abfd);\n+      const char *name = bfd_get_filename (abfd);\n       char **my_environ = GET_ENVIRON ();\n       /* We use these maps to give the same behavior as the old xsim\n \t simulator.  */"
    }
  ]
}