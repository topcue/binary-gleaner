{
  "sha": "d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1",
  "node_id": "C_kwDOANOeidoAKGQxZWViZjlhNmYwMjc4NmViMGQ1ZjZiOTYxYjhkNjkyZDIzZTc3YjE",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-22T03:10:47Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-02-06T21:03:46Z"
    },
    "message": "gdb: remove SYMBOL_IMPL macro, add method\n\nAdd a getter for a symbol's \"impl\".  Remove the corresponding macro and\nadjust all callers.\n\nChange-Id: Ibe26ed442f0f99a0f5cddafca30bd96ec7fb9fa8",
    "tree": {
      "sha": "7de58eb38e3f4b1fda26808a5a0d3b637f05ec3e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7de58eb38e3f4b1fda26808a5a0d3b637f05ec3e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ba44b1a3e0bd6ec2e94e6d6c288786114b8a633c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba44b1a3e0bd6ec2e94e6d6c288786114b8a633c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ba44b1a3e0bd6ec2e94e6d6c288786114b8a633c"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 11,
    "deletions": 7
  },
  "files": [
    {
      "sha": "3a22d3e19eee52e508e28093be6aa599f07a6abb",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=d1eebf9a6f02786eb0d5f6b961b8d692d23e77b1",
      "patch": "@@ -1105,6 +1105,8 @@ enum symbol_subclass_kind\n   SYMBOL_RUST_VTABLE\n };\n \n+extern const struct symbol_impl *symbol_impls;\n+\n /* This structure is space critical.  See space comments at the top.  */\n \n struct symbol : public general_symbol_info, public allocate_on_obstack\n@@ -1146,6 +1148,11 @@ struct symbol : public general_symbol_info, public allocate_on_obstack\n     m_aclass_index = aclass_index;\n   }\n \n+  const symbol_impl &impl () const\n+  {\n+    return symbol_impls[this->aclass_index ()];\n+  }\n+\n   /* Data type of value */\n \n   struct type *type = nullptr;\n@@ -1245,24 +1252,21 @@ struct block_symbol\n   const struct block *block;\n };\n \n-extern const struct symbol_impl *symbol_impls;\n-\n /* Note: There is no accessor macro for symbol.owner because it is\n    \"private\".  */\n \n #define SYMBOL_DOMAIN(symbol)\t(symbol)->domain\n-#define SYMBOL_IMPL(symbol)\t\t(symbol_impls[(symbol)->aclass_index ()])\n-#define SYMBOL_CLASS(symbol)\t\t(SYMBOL_IMPL (symbol).aclass)\n+#define SYMBOL_CLASS(symbol)\t\t((symbol)->impl ().aclass)\n #define SYMBOL_OBJFILE_OWNED(symbol)\t((symbol)->is_objfile_owned)\n #define SYMBOL_IS_ARGUMENT(symbol)\t(symbol)->is_argument\n #define SYMBOL_INLINED(symbol)\t\t(symbol)->is_inlined\n #define SYMBOL_IS_CPLUS_TEMPLATE_FUNCTION(symbol) \\\n   (((symbol)->subclass) == SYMBOL_TEMPLATE)\n #define SYMBOL_TYPE(symbol)\t\t(symbol)->type\n #define SYMBOL_LINE(symbol)\t\t(symbol)->line\n-#define SYMBOL_COMPUTED_OPS(symbol)\t(SYMBOL_IMPL (symbol).ops_computed)\n-#define SYMBOL_BLOCK_OPS(symbol)\t(SYMBOL_IMPL (symbol).ops_block)\n-#define SYMBOL_REGISTER_OPS(symbol)\t(SYMBOL_IMPL (symbol).ops_register)\n+#define SYMBOL_COMPUTED_OPS(symbol)\t((symbol)->impl ().ops_computed)\n+#define SYMBOL_BLOCK_OPS(symbol)\t((symbol)->impl ().ops_block)\n+#define SYMBOL_REGISTER_OPS(symbol)\t((symbol)->impl ().ops_register)\n #define SYMBOL_LOCATION_BATON(symbol)   (symbol)->aux_value\n \n extern int register_symbol_computed_impl (enum address_class,"
    }
  ]
}