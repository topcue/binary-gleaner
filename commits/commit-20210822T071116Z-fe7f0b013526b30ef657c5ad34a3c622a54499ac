{
  "sha": "fe7f0b013526b30ef657c5ad34a3c622a54499ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmU3ZjBiMDEzNTI2YjMwZWY2NTdjNWFkMzRhM2M2MjJhNTQ0OTlhYw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-08-20T01:00:42Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-08-22T07:11:16Z"
    },
    "message": "sim: m32r: add __linux__ hack for non-Linux hosts\n\nThe m32r Linux syscall emulation logic assumes the host environment\ndirectly matches -- it's being run on 32-bit little endian Linux.\nThis breaks building for non-Linux systems, so put all the code in\n__linux__ ifdef checks.  This code needs a lot of love to make it\nwork everywhere, but let's at least unbreak it for non-Linux hosts.",
    "tree": {
      "sha": "58b8f1d0d4f56eb2cda60fbee2280e78860e5ec9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/58b8f1d0d4f56eb2cda60fbee2280e78860e5ec9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fe7f0b013526b30ef657c5ad34a3c622a54499ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe7f0b013526b30ef657c5ad34a3c622a54499ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fe7f0b013526b30ef657c5ad34a3c622a54499ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe7f0b013526b30ef657c5ad34a3c622a54499ac/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca4f6fe4fbf9fa0e76fca57ccf4cd4df81dcb47a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca4f6fe4fbf9fa0e76fca57ccf4cd4df81dcb47a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca4f6fe4fbf9fa0e76fca57ccf4cd4df81dcb47a"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 8,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2d7738b1f3cca3fd226db2d9393bea7d9352fbf5",
      "filename": "sim/m32r/traps.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe7f0b013526b30ef657c5ad34a3c622a54499ac/sim/m32r/traps.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe7f0b013526b30ef657c5ad34a3c622a54499ac/sim/m32r/traps.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/traps.c?ref=fe7f0b013526b30ef657c5ad34a3c622a54499ac",
      "patch": "@@ -34,6 +34,11 @@\n #include <time.h>\n #include <unistd.h>\n #include <utime.h>\n+/* TODO: The Linux syscall emulation needs work to support non-Linux hosts.\n+   Use an OS hack for now so the CPU emulation is available everywhere.\n+   NB: The emulation is also missing argument conversion (endian & bitsize)\n+   even on Linux hosts.  */\n+#ifdef __linux__\n #include <sys/mman.h>\n #include <sys/poll.h>\n #include <sys/resource.h>\n@@ -49,6 +54,7 @@\n #include <linux/sysctl.h>\n #include <linux/types.h>\n #include <linux/unistd.h>\n+#endif\n \n #define TRAP_LINUX_SYSCALL 2\n #define TRAP_FLUSH_CACHE 12\n@@ -203,6 +209,7 @@ m32r_trap (SIM_CPU *current_cpu, PCADDR pc, int num)\n \tbreak;\n       }\n \n+#ifdef __linux__\n     case TRAP_LINUX_SYSCALL:\n       {\n \tCB_SYSCALL s;\n@@ -1302,6 +1309,7 @@ m32r_trap (SIM_CPU *current_cpu, PCADDR pc, int num)\n \t  m32rbf_h_gr_set (current_cpu, 0, result);\n \tbreak;\n       }\n+#endif\n \n     case TRAP_BREAKPOINT:\n       sim_engine_halt (sd, current_cpu, NULL, pc,"
    }
  ]
}