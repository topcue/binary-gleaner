{
  "sha": "f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjNiZGMyZGJiOTY3M2VlMmQwZDRkNTFjODZhMjc4ZGNlMTk5ZDM2MA==",
  "commit": {
    "author": {
      "name": "Marco Barisione",
      "email": "mbarisione@undo.io",
      "date": "2021-01-25T15:28:53Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-25T15:29:57Z"
    },
    "message": "gdb/docs: add parentheses in Python examples using print\n\nThis makes the examples work both in Python 2 and 3.\n\ngdb/doc/ChangeLog:\n\n\t* python.texi: Add parentheses to print statements/functions.\n\nChange-Id: I8571f2ee005acd96c7bb43f9882d19b00b2aa3db",
    "tree": {
      "sha": "ecdac0138573049a6754d13ae481938edeb8aebc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ecdac0138573049a6754d13ae481938edeb8aebc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360/comments",
  "author": {
    "login": "barisione",
    "id": 4679325,
    "node_id": "MDQ6VXNlcjQ2NzkzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4679325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisione",
    "html_url": "https://github.com/barisione",
    "followers_url": "https://api.github.com/users/barisione/followers",
    "following_url": "https://api.github.com/users/barisione/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisione/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisione/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisione/subscriptions",
    "organizations_url": "https://api.github.com/users/barisione/orgs",
    "repos_url": "https://api.github.com/users/barisione/repos",
    "events_url": "https://api.github.com/users/barisione/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisione/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a625a8c9eb4b5ae67dc3a6f34ef3c03520ab090d"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 13,
    "deletions": 9
  },
  "files": [
    {
      "sha": "25f4503d4694b76347210d7159abc575cb46f39e",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-25  Marco Barisione  <mbarisione@undo.io>\n+\n+\t* python.texi: Add parentheses to print statements/functions.\n+\n 2021-01-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.texinfo (Specify Location): Move menu to the end of the"
    },
    {
      "sha": "1a5209ae4bd5548385b872f9ca3770f8c28c4151",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3bdc2dbb9673ee2d0d4d51c86a278dce199d360/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=f3bdc2dbb9673ee2d0d4d51c86a278dce199d360",
      "patch": "@@ -559,7 +559,7 @@ rather recognizes it when thrown from user Python code.  Example:\n >    argv = gdb.string_to_argv (args)\n >    if len (argv) != 0:\n >      raise gdb.GdbError (\"hello-world takes no arguments\")\n->    print \"Hello, World!\"\n+>    print (\"Hello, World!\")\n >HelloWorld ()\n >end\n (gdb) hello-world 42\n@@ -3100,8 +3100,8 @@ Here is an example:\n \n @smallexample\n def exit_handler (event):\n-    print \"event type: exit\"\n-    print \"exit code: %d\" % (event.exit_code)\n+    print (\"event type: exit\")\n+    print (\"exit code: %d\" % (event.exit_code))\n \n gdb.events.exited.connect (exit_handler)\n @end smallexample\n@@ -3921,7 +3921,7 @@ class HelloWorld (gdb.Command):\n     super (HelloWorld, self).__init__ (\"hello-world\", gdb.COMMAND_USER)\n \n   def invoke (self, arg, from_tty):\n-    print \"Hello, World!\"\n+    print (\"Hello, World!\")\n \n HelloWorld ()\n @end smallexample\n@@ -4309,7 +4309,7 @@ def clear_objfiles_handler(event):\n     event.progspace.expensive_computation = None\n def expensive(symbol):\n     \"\"\"A mock routine to perform an \"expensive\" computation on symbol.\"\"\"\n-    print \"Computing the answer to the ultimate question ...\"\n+    print (\"Computing the answer to the ultimate question ...\")\n     return 42\n def new_objfile_handler(event):\n     objfile = event.new_objfile\n@@ -4654,7 +4654,7 @@ versions.  Using it, you could write:\n reason = gdb.selected_frame().unwind_stop_reason ()\n reason_str =  gdb.frame_stop_reason_string (reason)\n if reason >=  gdb.FRAME_UNWIND_FIRST_ERROR:\n-    print \"An error occured: %s\" % reason_str\n+    print (\"An error occured: %s\" % reason_str)\n @end smallexample\n @end table\n \n@@ -5295,7 +5295,7 @@ example illustrating iterating over a line table.\n symtab = gdb.selected_frame().find_sal().symtab\n linetable = symtab.linetable()\n for line in linetable:\n-   print \"Line: \"+str(line.line)+\" Address: \"+hex(line.pc)\n+   print (\"Line: \"+str(line.line)+\" Address: \"+hex(line.pc))\n @end smallexample\n \n This will have the following output:\n@@ -5622,11 +5622,11 @@ method:\n @smallexample\n class MyFinishBreakpoint (gdb.FinishBreakpoint)\n     def stop (self):\n-        print \"normal finish\"\n+        print (\"normal finish\")\n         return True\n     \n     def out_of_scope ():\n-        print \"abnormal finish\"\n+        print (\"abnormal finish\")\n @end smallexample \n @end defun\n "
    }
  ]
}