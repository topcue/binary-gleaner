{
  "sha": "c7f839cbf08c397f3ab208054f11cfc1236ee143",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzdmODM5Y2JmMDhjMzk3ZjNhYjIwODA1NGYxMWNmYzEyMzZlZTE0Mw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-09-07T16:03:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-09-07T16:06:01Z"
    },
    "message": "Change lookup_symbol's block_index parameter type to block_enum\n\nThe only two values valid to pass to the block_index parameter of\nquick_symbol_functions::lookup_symbol are GLOBAL_BLOCK and STATIC_BLOCK,\npart of enum block_enum.  Change the type of that parameter to\nblock_enum.\n\nChange also the block_index field of dw2_symtab_iterator in the same\nway..  This makes it consistent with dw2_debug_names_iterator, which\nalready uses block_enum for its block_index field.\n\nThis is a follow-up to this thread:\n\nhttps://sourceware.org/ml/gdb-patches/2019-08/msg00097.html\n\ngdb/ChangeLog:\n\n\t* dwarf2read.c (struct dw2_symtab_iterator) <block_index>:\n\tChange type to gdb::optional<block_enum>.\n\t(dw2_symtab_iter_init): Change block_index parameter type\n\tto gdb::optional<block_enum>.\n\t(dw2_lookup_symbol): Change block_index parameter\n\ttype to block_enum.c\n\t(dw2_debug_names_lookup_symbol): Likewise.\n\t* psymtab.c (psym_lookup_symbol): Likewise.\n\t* symfile-debug.c (debug_qf_lookup_symbol): Likewise.\n\t* symfile.h (struct quick_symbol_functions) <lookup_symbol>:\n\tLikewise.",
    "tree": {
      "sha": "c3d4a9aace481dca628fcf8d9826869f0ae36715",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c3d4a9aace481dca628fcf8d9826869f0ae36715"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7f839cbf08c397f3ab208054f11cfc1236ee143",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7f839cbf08c397f3ab208054f11cfc1236ee143",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7f839cbf08c397f3ab208054f11cfc1236ee143",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7f839cbf08c397f3ab208054f11cfc1236ee143/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "deccd150e1e91c3a0f0557cdeaf95bb816c4af8e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/deccd150e1e91c3a0f0557cdeaf95bb816c4af8e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/deccd150e1e91c3a0f0557cdeaf95bb816c4af8e"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 23,
    "deletions": 9
  },
  "files": [
    {
      "sha": "d5938be9a09f0df60694ea1e1d05e300e27e10b5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c7f839cbf08c397f3ab208054f11cfc1236ee143",
      "patch": "@@ -1,3 +1,17 @@\n+2019-09-07  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2read.c (struct dw2_symtab_iterator) <block_index>:\n+\tChange type to gdb::optional<block_enum>.\n+\t(dw2_symtab_iter_init): Change block_index parameter type\n+\tto gdb::optional<block_enum>.\n+\t(dw2_lookup_symbol): Change block_index parameter\n+\ttype to block_enum.c\n+\t(dw2_debug_names_lookup_symbol): Likewise.\n+\t* psymtab.c (psym_lookup_symbol): Likewise.\n+\t* symfile-debug.c (debug_qf_lookup_symbol): Likewise.\n+\t* symfile.h (struct quick_symbol_functions) <lookup_symbol>:\n+\tLikewise.\n+\n 2019-09-06  Christian Biesinger  <cbiesinger@google.com>\n \n \t* defs.h (relocate_gdb_directory): Change int to bool in"
    },
    {
      "sha": "69bb5bdbaa2058bb2cd1f35012fbf12a7b947f17",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=c7f839cbf08c397f3ab208054f11cfc1236ee143",
      "patch": "@@ -3883,7 +3883,7 @@ struct dw2_symtab_iterator\n   struct dwarf2_per_objfile *dwarf2_per_objfile;\n   /* If set, only look for symbols that match that block.  Valid values are\n      GLOBAL_BLOCK and STATIC_BLOCK.  */\n-  gdb::optional<int> block_index;\n+  gdb::optional<block_enum> block_index;\n   /* The kind of symbol we're looking for.  */\n   domain_enum domain;\n   /* The list of CUs from the index entry of the symbol,\n@@ -3905,7 +3905,7 @@ struct dw2_symtab_iterator\n static void\n dw2_symtab_iter_init (struct dw2_symtab_iterator *iter,\n \t\t      struct dwarf2_per_objfile *dwarf2_per_objfile,\n-\t\t      gdb::optional<int> block_index,\n+\t\t      gdb::optional<block_enum> block_index,\n \t\t      domain_enum domain,\n \t\t      const char *name)\n {\n@@ -4018,7 +4018,7 @@ dw2_symtab_iter_next (struct dw2_symtab_iterator *iter)\n }\n \n static struct compunit_symtab *\n-dw2_lookup_symbol (struct objfile *objfile, int block_index,\n+dw2_lookup_symbol (struct objfile *objfile, block_enum block_index,\n \t\t   const char *name, domain_enum domain)\n {\n   struct compunit_symtab *stab_best = NULL;\n@@ -6004,10 +6004,9 @@ dw2_debug_names_iterator::next ()\n }\n \n static struct compunit_symtab *\n-dw2_debug_names_lookup_symbol (struct objfile *objfile, int block_index_int,\n+dw2_debug_names_lookup_symbol (struct objfile *objfile, block_enum block_index,\n \t\t\t       const char *name, domain_enum domain)\n {\n-  const block_enum block_index = static_cast<block_enum> (block_index_int);\n   struct dwarf2_per_objfile *dwarf2_per_objfile\n     = get_dwarf2_per_objfile (objfile);\n "
    },
    {
      "sha": "70d04f86052c6146ea053684728fba1eb1b965c6",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=c7f839cbf08c397f3ab208054f11cfc1236ee143",
      "patch": "@@ -479,7 +479,7 @@ find_pc_sect_psymbol (struct objfile *objfile,\n \n static struct compunit_symtab *\n psym_lookup_symbol (struct objfile *objfile,\n-\t\t    int block_index, const char *name,\n+\t\t    block_enum block_index, const char *name,\n \t\t    const domain_enum domain)\n {\n   const int psymtab_index = (block_index == GLOBAL_BLOCK ? 1 : 0);"
    },
    {
      "sha": "c5b565fc517e67e7a45b3000e77f0978d2620d53",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=c7f839cbf08c397f3ab208054f11cfc1236ee143",
      "patch": "@@ -140,8 +140,8 @@ debug_qf_map_symtabs_matching_filename\n }\n \n static struct compunit_symtab *\n-debug_qf_lookup_symbol (struct objfile *objfile, int kind, const char *name,\n-\t\t\tdomain_enum domain)\n+debug_qf_lookup_symbol (struct objfile *objfile, block_enum kind,\n+\t\t\tconst char *name, domain_enum domain)\n {\n   const struct debug_sym_fns_data *debug_data\n     = symfile_debug_objfile_data_key.get (objfile);"
    },
    {
      "sha": "5e4d2f5b534891cb04145c5b7a9f6db86e7037d8",
      "filename": "gdb/symfile.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/symfile.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7f839cbf08c397f3ab208054f11cfc1236ee143/gdb/symfile.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.h?ref=c7f839cbf08c397f3ab208054f11cfc1236ee143",
      "patch": "@@ -179,7 +179,8 @@ struct quick_symbol_functions\n      contains !TYPE_OPAQUE symbol prefer its compunit.  If it contains\n      only TYPE_OPAQUE symbol(s), return at least that compunit.  */\n   struct compunit_symtab *(*lookup_symbol) (struct objfile *objfile,\n-\t\t\t\t\t    int block_index, const char *name,\n+\t\t\t\t\t    block_enum block_index,\n+\t\t\t\t\t    const char *name,\n \t\t\t\t\t    domain_enum domain);\n \n   /* Print statistics about any indices loaded for OBJFILE.  The"
    }
  ]
}