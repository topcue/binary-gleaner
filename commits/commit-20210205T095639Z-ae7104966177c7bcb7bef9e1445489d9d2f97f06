{
  "sha": "ae7104966177c7bcb7bef9e1445489d9d2f97f06",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWU3MTA0OTY2MTc3YzdiY2I3YmVmOWUxNDQ1NDg5ZDlkMmY5N2YwNg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-02-05T09:56:39Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-02-05T09:56:39Z"
    },
    "message": "[gdb/exp] Fix assert when adding ptr to imaginary unit\n\nI'm running into this assertion failure:\n...\n$ gdb -batch -ex \"p (void *)0 - 5i\"\ngdbtypes.c:3430: internal-error: \\\n  type* init_complex_type(const char*,   type*): Assertion \\\n  `target_type->code () == TYPE_CODE_INT \\\n   || target_type->code () == TYPE_CODE_FLT' failed.\nA problem internal to GDB has been detected,\nfurther debugging may prove unreliable.\n...\n\nThis is a regression since commit c34e8714662 \"Implement complex arithmetic\".\nBefore that commit we had:\n...\n(gdb) p (void *)0 - 5i\nArgument to arithmetic operation not a number or boolean.\n...\n\nFix this in complex_binop by throwing an error, such that we have:\n...\n(gdb) print (void *)0 - 5i\nArgument to complex arithmetic operation not supported.\n...\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2021-02-05  Tom de Vries  <tdevries@suse.de>\n\n\tPR exp/27265\n\t* valarith.c (complex_binop): Throw an error if complex type can't\n\tbe created.\n\ngdb/testsuite/ChangeLog:\n\n2021-02-05  Tom de Vries  <tdevries@suse.de>\n\n\tPR exp/27265\n\t* gdb.base/complex-parts.exp: Add tests.",
    "tree": {
      "sha": "0db06bfbce6489d5145e0433da37b037cf15f451",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0db06bfbce6489d5145e0433da37b037cf15f451"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ae7104966177c7bcb7bef9e1445489d9d2f97f06",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae7104966177c7bcb7bef9e1445489d9d2f97f06",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ae7104966177c7bcb7bef9e1445489d9d2f97f06",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae7104966177c7bcb7bef9e1445489d9d2f97f06/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d3b54e63f4866551953a03f512049741b0e776c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3b54e63f4866551953a03f512049741b0e776c4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d3b54e63f4866551953a03f512049741b0e776c4"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 36,
    "deletions": 2
  },
  "files": [
    {
      "sha": "07fe6a0184485c31538b6eb99b6d3b41b8f3a319",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ae7104966177c7bcb7bef9e1445489d9d2f97f06",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-05  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR exp/27265\n+\t* valarith.c (complex_binop): Throw an error if complex type can't\n+\tbe created.\n+\n 2021-02-05  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/27307"
    },
    {
      "sha": "c736dff2ca82f9dd588ef1e30227308798bf6b07",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=ae7104966177c7bcb7bef9e1445489d9d2f97f06",
      "patch": "@@ -3413,6 +3413,15 @@ init_decfloat_type (struct objfile *objfile, int bit, const char *name)\n   return t;\n }\n \n+/* Return true if init_complex_type can be called with TARGET_TYPE.  */\n+\n+bool\n+can_create_complex_type (struct type *target_type)\n+{\n+  return (target_type->code () == TYPE_CODE_INT\n+\t  || target_type->code () == TYPE_CODE_FLT);\n+}\n+\n /* Allocate a TYPE_CODE_COMPLEX type structure.  NAME is the type\n    name.  TARGET_TYPE is the component type.  */\n \n@@ -3421,8 +3430,7 @@ init_complex_type (const char *name, struct type *target_type)\n {\n   struct type *t;\n \n-  gdb_assert (target_type->code () == TYPE_CODE_INT\n-\t      || target_type->code () == TYPE_CODE_FLT);\n+  gdb_assert (can_create_complex_type (target_type));\n \n   if (TYPE_MAIN_TYPE (target_type)->flds_bnds.complex_type == nullptr)\n     {"
    },
    {
      "sha": "45014a2b3e83c306ceea139d61edeaf01410c36d",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=ae7104966177c7bcb7bef9e1445489d9d2f97f06",
      "patch": "@@ -2289,6 +2289,7 @@ extern struct type *init_float_type (struct objfile *, int, const char *,\n \t\t\t\t     const struct floatformat **,\n \t\t\t\t     enum bfd_endian = BFD_ENDIAN_UNKNOWN);\n extern struct type *init_decfloat_type (struct objfile *, int, const char *);\n+extern bool can_create_complex_type (struct type *);\n extern struct type *init_complex_type (const char *, struct type *);\n extern struct type *init_pointer_type (struct objfile *, int, const char *,\n \t\t\t\t       struct type *);"
    },
    {
      "sha": "9c24a49676af0a7daea8a8f6e82fc2e5c0e03c57",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ae7104966177c7bcb7bef9e1445489d9d2f97f06",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-05  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR exp/27265\n+\t* gdb.base/complex-parts.exp: Add tests.\n+\n 2021-02-05  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/27307"
    },
    {
      "sha": "6385752a2f004216c892491ce3d9560a1c917311",
      "filename": "gdb/testsuite/gdb.base/complex-parts.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/testsuite/gdb.base/complex-parts.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/testsuite/gdb.base/complex-parts.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/complex-parts.exp?ref=ae7104966177c7bcb7bef9e1445489d9d2f97f06",
      "patch": "@@ -103,3 +103,14 @@ gdb_test \"print (_Complex int) 4\" \" = 4 \\\\+ 0i\"\n gdb_test \"print (_Complex float) 4.5\" \" = 4.5 \\\\+ 0i\"\n gdb_test \"ptype __complex__ short\" \" = _Complex short\"\n gdb_test \"print (_Complex int) (23.75 + 8.88i)\" \" = 23 \\\\+ 8i\"\n+\n+set re_reject_arg \"Argument to complex arithmetic operation not supported\\\\.\"\n+gdb_test \"print (void *)0 + 5i\" $re_reject_arg\n+gdb_test \"print (_Decimal32)0 + 5i\" $re_reject_arg\n+\n+# Set language to c++.  Avoid warning by not having current frame.\n+clean_restart\n+gdb_test_no_output \"set language c++\"\n+\n+# C++ type tests.\n+gdb_test \"print (bool)1 + 1i\" \" = 1 \\\\+ 1i\""
    },
    {
      "sha": "299a99f4703d0e7fd4ffa1c86888ca19a9c744ce",
      "filename": "gdb/valarith.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/valarith.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae7104966177c7bcb7bef9e1445489d9d2f97f06/gdb/valarith.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valarith.c?ref=ae7104966177c7bcb7bef9e1445489d9d2f97f06",
      "patch": "@@ -1076,6 +1076,9 @@ complex_binop (struct value *arg1, struct value *arg2, enum exp_opcode op)\n \n   struct type *comp_type = promotion_type (value_type (arg1_real),\n \t\t\t\t\t   value_type (arg2_real));\n+  if (!can_create_complex_type (comp_type))\n+    error (_(\"Argument to complex arithmetic operation not supported.\"));\n+\n   arg1_real = value_cast (comp_type, arg1_real);\n   arg1_imag = value_cast (comp_type, arg1_imag);\n   arg2_real = value_cast (comp_type, arg2_real);"
    }
  ]
}