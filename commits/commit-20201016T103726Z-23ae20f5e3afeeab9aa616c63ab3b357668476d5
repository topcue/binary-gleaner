{
  "sha": "23ae20f5e3afeeab9aa616c63ab3b357668476d5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjNhZTIwZjVlM2FmZWVhYjlhYTYxNmM2M2FiM2IzNTc2Njg0NzZkNQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-10-16T10:37:26Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-10-16T10:37:26Z"
    },
    "message": "Add a new option to the linker: --error-handling-script=<NAME>.  Run the script <NAME> if an undefined symbol or unfound library error is encountered.\n\n\tPR 26626\n\t* ldmain.c (undefined_symbol): If an error handlign script is\n\tavailable, call it.\n\t* ldfile.c  (error_handling_script): Declare.\n\t(ldfile_open_file): If a library cannot be found and an error\n\thandling script is available, call it.\n\t* ldmain.h  (error_handling_script): Prototype.\n\t* ldlex.h (OPTION_ERROR_HANDLING_SCRIPT): Define.\n\t* lexsup.c (ld_options): Add --error-handling-script.\n\t(parse_args): Add support for --errror-handling-script.\n\t* ld.texi: Document the new feature.\n\t* configure.ac: Add --error-handling-script option to disable\n\tsupport for the new feature.\n\t* NEWS: Mention the new feature.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.",
    "tree": {
      "sha": "77fe952d842fc8b8f4a0efccbc006686a3b05e77",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/77fe952d842fc8b8f4a0efccbc006686a3b05e77"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/23ae20f5e3afeeab9aa616c63ab3b357668476d5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23ae20f5e3afeeab9aa616c63ab3b357668476d5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/23ae20f5e3afeeab9aa616c63ab3b357668476d5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23ae20f5e3afeeab9aa616c63ab3b357668476d5/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "472d09c18a750f483ad974991f4f35ede3dfb10b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/472d09c18a750f483ad974991f4f35ede3dfb10b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/472d09c18a750f483ad974991f4f35ede3dfb10b"
    }
  ],
  "stats": {
    "total": 180,
    "additions": 178,
    "deletions": 2
  },
  "files": [
    {
      "sha": "18dc37bdd865b91d2f5ff05b17ec909783ed3dbf",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -1,3 +1,22 @@\n+2020-10-16  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26626\n+\t* ldmain.c (undefined_symbol): If an error handlign script is\n+\tavailable, call it.\n+\t* ldfile.c  (error_handling_script): Declare.\n+\t(ldfile_open_file): If a library cannot be found and an error\n+\thandling script is available, call it.\n+\t* ldmain.h  (error_handling_script): Prototype.\n+\t* ldlex.h (OPTION_ERROR_HANDLING_SCRIPT): Define.\n+\t* lexsup.c (ld_options): Add --error-handling-script.\n+\t(parse_args): Add support for --errror-handling-script.\n+\t* ld.texi: Document the new feature.\n+\t* configure.ac: Add --error-handling-script option to disable\n+\tsupport for the new feature.\n+\t* NEWS: Mention the new feature.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2020-10-16  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* testsuite/ld-riscv-elf/ifunc-plt-got-overwrite.s: New testcase."
    },
    {
      "sha": "81c44191d2bac9f44dd447cd346acff5f7b9a15a",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -1,5 +1,10 @@\n -*- text -*-\n \n+* Add --error-handling-script=<NAME> command line option to allow a helper\n+  script to be invoked when an undefined symbol or a missing library is\n+  encountered.  This option can be suppressed via the configure time\n+  switch: --enable-error-handling-script=no.\n+\n * Add -z x86-64-v[234] to the x86 ELF linker to mark x86-64-v[234] ISA\n   level as needed.\n "
    },
    {
      "sha": "7b60d77858730fb63c2f6601fdbe7f986bdfc23e",
      "filename": "ld/config.in",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/config.in?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -215,6 +215,10 @@\n /* Define if you can safely include both <string.h> and <strings.h>. */\n #undef STRING_WITH_STRINGS\n \n+/* Define to 1 if you want to support the --error-handling-script command line\n+   option. */\n+#undef SUPPORT_ERROR_HANDLING_SCRIPT\n+\n /* Use b modifier when opening binary files? */\n #undef USE_BINARY_FOPEN\n "
    },
    {
      "sha": "afe52ef5efa2014872367525a6b9022cdf180d33",
      "filename": "ld/configure",
      "status": "modified",
      "additions": 26,
      "deletions": 2,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -835,6 +835,7 @@ enable_new_dtags\n enable_relro\n enable_textrel_check\n enable_separate_code\n+enable_error_handling_script\n enable_default_hash_style\n enable_libctf\n enable_werror\n@@ -1505,6 +1506,9 @@ Optional Features:\n   --enable-textrel-check=[yes|no|warning|error]\n                           enable DT_TEXTREL check in ELF linker\n   --enable-separate-code  enable -z separate-code in ELF linker by default\n+  --enable-error-handling-script\n+                          enable/disable support for the\n+                          --error-handling-script option\n   --enable-default-hash-style={sysv,gnu,both}\n                           use this default hash style\n   --enable-libctf         Handle .ctf type-info sections [default=yes]\n@@ -12039,7 +12043,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12042 \"configure\"\n+#line 12046 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12145,7 +12149,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12148 \"configure\"\n+#line 12152 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15945,6 +15949,17 @@ esac\n fi\n \n \n+# Decide if --error-handling-script should be supported.\n+ac_support_error_handling_script=unset\n+# Check whether --enable-error-handling-script was given.\n+if test \"${enable_error_handling_script+set}\" = set; then :\n+  enableval=$enable_error_handling_script; case \"${enableval}\" in\n+  yes) ac_support_error_handling_script=1 ;;\n+  no)  ac_support_error_handling_script=0 ;;\n+esac\n+fi\n+\n+\n # Decide which \"--hash-style\" to use by default\n # Provide a configure time option to override our default.\n # Check whether --enable-default-hash-style was given.\n@@ -17739,6 +17754,15 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+if test \"${ac_support_error_handling_script}\" = unset; then\n+  ac_support_error_handling_script=1\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define SUPPORT_ERROR_HANDLING_SCRIPT $ac_support_error_handling_script\n+_ACEOF\n+\n+\n \n cat >>confdefs.h <<_ACEOF\n #define DEFAULT_EMIT_SYSV_HASH $ac_default_emit_sysv_hash"
    },
    {
      "sha": "7676009d910ad917117074f309241d4889c272ba",
      "filename": "ld/configure.ac",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.ac?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -195,6 +195,16 @@ AC_ARG_ENABLE(separate-code,\n   no) ac_default_ld_z_separate_code=0 ;;\n esac])\n \n+# Decide if --error-handling-script should be supported.\n+ac_support_error_handling_script=unset\n+AC_ARG_ENABLE(error-handling-script,\n+\t      AS_HELP_STRING([--enable-error-handling-script],\n+\t      [enable/disable support for the --error-handling-script option]),\n+[case \"${enableval}\" in\n+  yes) ac_support_error_handling_script=1 ;;\n+  no)  ac_support_error_handling_script=0 ;;\n+esac])\n+\n # Decide which \"--hash-style\" to use by default\n # Provide a configure time option to override our default.\n AC_ARG_ENABLE([default-hash-style],\n@@ -489,6 +499,13 @@ AC_DEFINE_UNQUOTED(DEFAULT_LD_Z_SEPARATE_CODE,\n   $ac_default_ld_z_separate_code,\n   [Define to 1 if you want to enable -z separate-code in ELF linker by default.])\n \n+if test \"${ac_support_error_handling_script}\" = unset; then\n+  ac_support_error_handling_script=1\n+fi\n+AC_DEFINE_UNQUOTED(SUPPORT_ERROR_HANDLING_SCRIPT,\n+  $ac_support_error_handling_script,\n+  [Define to 1 if you want to support the --error-handling-script command line option.])\n+\n AC_DEFINE_UNQUOTED([DEFAULT_EMIT_SYSV_HASH],\n   [$ac_default_emit_sysv_hash],\n   [Define to 1 if you want to emit sysv hash in the ELF linker by default.])"
    },
    {
      "sha": "95f31ea530be225fc57c43caf68d6b80f24f2d94",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -1923,6 +1923,21 @@ architecture.  This is used, for example, to dynamically select an\n appropriate memset function.\n @end itemize\n \n+@kindex --error-handling-script=@var{scriptname}\n+@item --error-handling-script=@var{scriptname}\n+If this option is provided then the linker will invoke\n+@var{scriptname} whenever an error is encountered.  Currently however\n+only two kinds of error are supported: missing symbols and missing\n+libraries.  Two arguments will be passed to script: the keyword\n+``missing-symbol'' or `missing-lib'' and the @var{name} of the \n+missing symbol or library.  The intention is that the script will\n+provide suggestions to the user as to where the symbol or library\n+might be found.  After the script has finished then the normal linker\n+error message will be displayed.\n+\n+The availability of this option is controlled by a configure time\n+switch, so it may not be present in specific implementations.\n+\n @kindex --no-undefined-version\n @item --no-undefined-version\n Normally when a symbol has an undefined version, the linker will ignore"
    },
    {
      "sha": "51f878de958616729186eeb1a8b80a814aaece58",
      "filename": "ld/ldfile.c",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldfile.c?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -461,6 +461,39 @@ ldfile_open_file (lang_input_statement_type *entry)\n \t       && IS_ABSOLUTE_PATH (entry->local_sym_name))\n \t    einfo (_(\"%P: cannot find %s inside %s\\n\"),\n \t\t   entry->local_sym_name, ld_sysroot);\n+#if SUPPORT_ERROR_HANDLING_SCRIPT\n+\t  else if (error_handling_script != NULL)\n+\t    {\n+\t      char *        argv[4];\n+\t      const char *  res;\n+\t      int           status, err;\n+\n+\t      argv[0] = error_handling_script;\n+\t      argv[1] = \"missing-lib\";\n+\t      argv[2] = (char *) entry->local_sym_name;\n+\t      argv[3] = NULL;\n+      \n+\t      if (verbose)\n+\t\teinfo (_(\"%P: About to run error handling script '%s' with arguments: '%s' '%s'\\n\"),\n+\t\t       argv[0], argv[1], argv[2]);\n+\n+\t      res = pex_one (PEX_SEARCH, error_handling_script, argv,\n+\t\t\t     N_(\"error handling script\"),\n+\t\t\t     NULL /* Send stdout to random, temp file.  */,\n+\t\t\t     NULL /* Write to stderr.  */,\n+\t\t\t     &status, &err);\n+\t      if (res != NULL)\n+\t\t{\n+\t\t  einfo (_(\"%P: Failed to run error handling script '%s', reason: \"),\n+\t\t\t error_handling_script);\n+\t\t  /* FIXME: We assume here that errrno == err.  */\n+\t\t  perror (res);\n+\t\t}\n+\t      else /* We ignore the return status of the script\n+\t\t      and always print the error message.  */\n+\t\teinfo (_(\"%P: cannot find %s\\n\"), entry->local_sym_name);\n+\t    }\n+#endif\n \t  else\n \t    einfo (_(\"%P: cannot find %s\\n\"), entry->local_sym_name);\n \n@@ -479,6 +512,7 @@ ldfile_open_file (lang_input_statement_type *entry)\n \t\t  break;\n \t\t}\n \t    }\n+\n \t  entry->flags.missing_file = TRUE;\n \t  input_flags.missing_file = TRUE;\n \t}"
    },
    {
      "sha": "bb38cca4d6e7c010dbc88b7b65851c9b3bd7d113",
      "filename": "ld/ldlex.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldlex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldlex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlex.h?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -116,6 +116,9 @@ enum option_values\n   OPTION_ALLOW_SHLIB_UNDEFINED,\n   OPTION_NO_ALLOW_SHLIB_UNDEFINED,\n   OPTION_ALLOW_MULTIPLE_DEFINITION,\n+#if SUPPORT_ERROR_HANDLING_SCRIPT\n+  OPTION_ERROR_HANDLING_SCRIPT,\n+#endif\n   OPTION_NO_UNDEFINED_VERSION,\n   OPTION_DEFAULT_SYMVER,\n   OPTION_DEFAULT_IMPORTED_SYMVER,"
    },
    {
      "sha": "cdb4fe58d915feafc309c313dd24d9cc31d2749f",
      "filename": "ld/ldmain.c",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldmain.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldmain.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldmain.c?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -1382,6 +1382,10 @@ warning_find_reloc (bfd *abfd, asection *sec, void *iarg)\n   free (relpp);\n }\n \n+#if SUPPORT_ERROR_HANDLING_SCRIPT\n+char * error_handling_script = NULL;\n+#endif\n+\n /* This is called when an undefined symbol is found.  */\n \n static void\n@@ -1419,6 +1423,40 @@ undefined_symbol (struct bfd_link_info *info,\n       error_name = xstrdup (name);\n     }\n \n+#if SUPPORT_ERROR_HANDLING_SCRIPT\n+  if (error_handling_script != NULL\n+      && error_count < MAX_ERRORS_IN_A_ROW)\n+    {\n+      char *        argv[4];\n+      const char *  res;\n+      int           status, err;\n+\n+      argv[0] = error_handling_script;\n+      argv[1] = \"missing-symbol\";\n+      argv[2] = (char *) name;\n+      argv[3] = NULL;\n+      \n+      if (verbose)\n+\teinfo (_(\"%P: About to run error handling script '%s' with arguments: '%s' '%s'\\n\"),\n+\t       argv[0], argv[1], argv[2]);\n+\n+      res = pex_one (PEX_SEARCH, error_handling_script, argv,\n+\t\t     N_(\"error handling script\"),\n+\t\t     NULL /* Send stdout to random, temp file.  */,\n+\t\t     NULL /* Write to stderr.  */,\n+\t\t     &status, &err);\n+      if (res != NULL)\n+\t{\n+\t  einfo (_(\"%P: Failed to run error handling script '%s', reason: \"),\n+\t\t error_handling_script);\n+\t  /* FIXME: We assume here that errrno == err.  */\n+\t  perror (res);\n+\t}\n+      /* We ignore the return status of the script and\n+\t carry on to issue the normal error message.  */\n+    }\n+#endif /* SUPPORT_ERROR_HANDLING_SCRIPT */\n+  \n   if (section != NULL)\n     {\n       if (error_count < MAX_ERRORS_IN_A_ROW)"
    },
    {
      "sha": "6863727473a95fad2adee5706bb2f64e3ed364f4",
      "filename": "ld/ldmain.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldmain.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/ldmain.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldmain.h?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -37,6 +37,9 @@ extern int g_switch_value;\n extern const char *output_filename;\n extern struct bfd_link_info link_info;\n extern int overflow_cutoff_limit;\n+#if SUPPORT_ERROR_HANDLING_SCRIPT\n+extern char *error_handling_script;\n+#endif\n \n #define RELAXATION_DISABLED_BY_DEFAULT\t\\\n   (link_info.disable_target_specific_optimizations < 0)"
    },
    {
      "sha": "eae64932dfcbeaeec4391fc613bfa459eda56bcb",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ae20f5e3afeeab9aa616c63ab3b357668476d5/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=23ae20f5e3afeeab9aa616c63ab3b357668476d5",
      "patch": "@@ -386,6 +386,11 @@ static const struct ld_option ld_options[] =\n   { {\"allow-multiple-definition\", no_argument, NULL,\n      OPTION_ALLOW_MULTIPLE_DEFINITION},\n     '\\0', NULL, N_(\"Allow multiple definitions\"), TWO_DASHES },\n+#if SUPPORT_ERROR_HANDLING_SCRIPT\n+  { {\"error-handling-script\", required_argument, NULL,\n+     OPTION_ERROR_HANDLING_SCRIPT},\n+    '\\0', N_(\"SCRIPT\"), N_(\"Provide a script to help with undefined symbol errors\"), TWO_DASHES},\n+#endif\n   { {\"no-undefined-version\", no_argument, NULL, OPTION_NO_UNDEFINED_VERSION},\n     '\\0', NULL, N_(\"Disallow undefined version\"), TWO_DASHES },\n   { {\"default-symver\", no_argument, NULL, OPTION_DEFAULT_SYMVER},\n@@ -1043,6 +1048,15 @@ parse_args (unsigned argc, char **argv)\n \tcase OPTION_ALLOW_MULTIPLE_DEFINITION:\n \t  link_info.allow_multiple_definition = TRUE;\n \t  break;\n+\n+#if SUPPORT_ERROR_HANDLING_SCRIPT\n+\tcase OPTION_ERROR_HANDLING_SCRIPT:\n+\t  /* FIXME: Should we warn if the script is being overridden by another ?\n+\t     Or maybe they should be chained together ?  */\n+\t  error_handling_script = optarg;\n+\t  break;\n+#endif\n+\n \tcase OPTION_NO_UNDEFINED_VERSION:\n \t  link_info.allow_undefined_version = FALSE;\n \t  break;"
    }
  ]
}