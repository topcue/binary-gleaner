{
  "sha": "aac1d94f19492fb6bea7193497bce599952c429d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWFjMWQ5NGYxOTQ5MmZiNmJlYTcxOTM0OTdiY2U1OTk5NTJjNDI5ZA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-13T12:10:24Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-10-13T12:10:36Z"
    },
    "message": "Gold: Enable safe ICF for shared object on x86-64\n\nWith\n\ncommit 4aebb6312eb5dcd12f2f8420028547584b708907\nAuthor: Rahul Chaudhry <rahulchaudhry@google.com>\nDate:   Wed Feb 15 00:37:10 2017 -0800\n\n    Improved support for --icf=safe when used with -pie.\n\nwe now check opcode with R_X86_64_PC32 relocation, which tell branches\nfrom other instructions.  We can enable safe ICF for shared object on\nx86-64.  Also, global symbols with non-default visibility should be\nfolded like local symbols.\n\n\tPR gold/21452\n\t* x86_64.cc (Scan::local_reloc_may_be_function_pointer): Remove\n\tcheck for shared library.\n\t(Scan::global_reloc_may_be_function_pointer): Remove check for\n\tshared library and symbol visibility.\n\t* testsuite/icf_safe_so_test.cc (bar_static): New function.\n\t(main): Take function address of bar_static and use it.\n\t* testsuite/icf_safe_so_test.sh (arch_specific_safe_fold): Also\n\tcheck fold on x86-64.  Check bar_static isn't folded.",
    "tree": {
      "sha": "a228a103e97cc042b6d2ea5f5171294da08da4cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a228a103e97cc042b6d2ea5f5171294da08da4cb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aac1d94f19492fb6bea7193497bce599952c429d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aac1d94f19492fb6bea7193497bce599952c429d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aac1d94f19492fb6bea7193497bce599952c429d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aac1d94f19492fb6bea7193497bce599952c429d/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1fb1d64f4a7c817f91a164dc22d5a22a0e75c1b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1fb1d64f4a7c817f91a164dc22d5a22a0e75c1b8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1fb1d64f4a7c817f91a164dc22d5a22a0e75c1b8"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 23,
    "deletions": 17
  },
  "files": [
    {
      "sha": "5defad4ceeac78cbad6e4d1980e952d2c2eed252",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aac1d94f19492fb6bea7193497bce599952c429d/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aac1d94f19492fb6bea7193497bce599952c429d/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=aac1d94f19492fb6bea7193497bce599952c429d",
      "patch": "@@ -1,3 +1,15 @@\n+2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/21452\n+\t* x86_64.cc (Scan::local_reloc_may_be_function_pointer): Remove\n+\tcheck for shared library.\n+\t(Scan::global_reloc_may_be_function_pointer): Remove check for\n+\tshared library and symbol visibility.\n+\t* testsuite/icf_safe_so_test.cc (bar_static): New function.\n+\t(main): Take function address of bar_static and use it.\n+\t* testsuite/icf_safe_so_test.sh (arch_specific_safe_fold): Also\n+\tcheck fold on x86-64.  Check bar_static isn't folded.\n+\n 2020-10-13  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* icf.cc (Icf::find_identical_sections): Skip zero-sized sections."
    },
    {
      "sha": "3256655327609c47978d11a06eae77f85bd3a0f7",
      "filename": "gold/testsuite/icf_safe_so_test.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aac1d94f19492fb6bea7193497bce599952c429d/gold/testsuite/icf_safe_so_test.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aac1d94f19492fb6bea7193497bce599952c429d/gold/testsuite/icf_safe_so_test.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/icf_safe_so_test.cc?ref=aac1d94f19492fb6bea7193497bce599952c429d",
      "patch": "@@ -61,10 +61,18 @@ int bar_glob()\n   return 2;\n }\n \n+static int\n+bar_static()\n+{\n+  return 2;\n+}\n+\n int main()\n {\n   int (*p)() = foo_glob;\n   (void)p;\n+  p = bar_static;\n+  (void)p;\n   foo_static();\n   foo_prot();\n   foo_hidden();"
    },
    {
      "sha": "4c253c55d20d2321fa58c64a762a62303ed81d6c",
      "filename": "gold/testsuite/icf_safe_so_test.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aac1d94f19492fb6bea7193497bce599952c429d/gold/testsuite/icf_safe_so_test.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aac1d94f19492fb6bea7193497bce599952c429d/gold/testsuite/icf_safe_so_test.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/icf_safe_so_test.sh?ref=aac1d94f19492fb6bea7193497bce599952c429d",
      "patch": "@@ -83,7 +83,7 @@ END {\n \n arch_specific_safe_fold()\n {\n-    if grep -q -e \"Intel 80386\" -e \"ARM\" -e \"PowerPC\" $1;\n+    if grep -q -e \"Advanced Micro Devices X86-64\" -e \"Intel 80386\" -e \"ARM\" -e \"PowerPC\" $1;\n     then\n \tshift\n \tshift"
    },
    {
      "sha": "9cb2cf0a322467e3e7c12cbd43c04097792345e8",
      "filename": "gold/x86_64.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 16,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aac1d94f19492fb6bea7193497bce599952c429d/gold/x86_64.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aac1d94f19492fb6bea7193497bce599952c429d/gold/x86_64.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/x86_64.cc?ref=aac1d94f19492fb6bea7193497bce599952c429d",
      "patch": "@@ -3992,12 +3992,6 @@ Target_x86_64<size>::Scan::local_reloc_may_be_function_pointer(\n   unsigned int r_type,\n   const elfcpp::Sym<size, false>&)\n {\n-  // When building a shared library, do not fold any local symbols as it is\n-  // not possible to distinguish pointer taken versus a call by looking at\n-  // the relocation types.\n-  if (parameters->options().shared())\n-    return true;\n-\n   return possible_function_pointer_reloc(src_obj, src_indx,\n                                          reloc.get_r_offset(), r_type);\n }\n@@ -4017,16 +4011,8 @@ Target_x86_64<size>::Scan::global_reloc_may_be_function_pointer(\n   Output_section* ,\n   const elfcpp::Rela<size, false>& reloc,\n   unsigned int r_type,\n-  Symbol* gsym)\n-{\n-  // When building a shared library, do not fold symbols whose visibility\n-  // is hidden, internal or protected.\n-  if (parameters->options().shared()\n-      && (gsym->visibility() == elfcpp::STV_INTERNAL\n-\t  || gsym->visibility() == elfcpp::STV_PROTECTED\n-\t  || gsym->visibility() == elfcpp::STV_HIDDEN))\n-    return true;\n-\n+  Symbol*)\n+{\n   return possible_function_pointer_reloc(src_obj, src_indx,\n                                          reloc.get_r_offset(), r_type);\n }"
    }
  ]
}