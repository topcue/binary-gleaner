{
  "sha": "ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWJkZTZmMmRkYzk4N2U3ZTJkNWEyMThlZThjZjAxMjZlYzE4OTQyNA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-29T12:36:52Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-01-29T12:36:52Z"
    },
    "message": "[gdb/breakpoint] Fix stepping past non-stmt line-table entries\n\nConsider the test-case small.c:\n...\n$ cat -n small.c\n     1  __attribute__ ((noinline, noclone))\n     2  int foo (char *c)\n     3  {\n     4    asm volatile (\"\" : : \"r\" (c) : \"memory\");\n     5    return 1;\n     6  }\n     7\n     8  int main ()\n     9  {\n    10    char tpl1[20] = \"/tmp/test.XXX\";\n    11    char tpl2[20] = \"/tmp/test.XXX\";\n    12    int fd1 = foo (tpl1);\n    13    int fd2 = foo (tpl2);\n    14    if (fd1 == -1) {\n    15      return 1;\n    16    }\n    17\n    18    return 0;\n    19  }\n...\n\nCompiled with gcc-8 and optimization:\n...\n$ gcc-8 -O2 -g small.c\n...\n\nWe step through the calls to foo, but fail to visit line 13:\n...\n12\t  int fd1 = foo (tpl1);\n(gdb) step\nfoo (c=c@entry=0x7fffffffdea0 \"/tmp/test.XXX\") at small.c:5\n5\t  return 1;\n(gdb) step\nfoo (c=c@entry=0x7fffffffdec0 \"/tmp/test.XXX\") at small.c:5\n5\t  return 1;\n(gdb) step\nmain () at small.c:14\n14\t  if (fd1 == -1) {\n(gdb)\n...\n\nThis is caused by the following.  The calls to foo are implemented by these\ninsns:\n....\n  4003df:       0f 29 04 24             movaps %xmm0,(%rsp)\n  4003e3:       0f 29 44 24 20          movaps %xmm0,0x20(%rsp)\n  4003e8:       e8 03 01 00 00          callq  4004f0 <foo>\n  4003ed:       48 8d 7c 24 20          lea    0x20(%rsp),%rdi\n  4003f2:       89 c2                   mov    %eax,%edx\n  4003f4:       e8 f7 00 00 00          callq  4004f0 <foo>\n  4003f9:       31 c0                   xor    %eax,%eax\n...\nwith corresponding line table entries:\n...\nINDEX  LINE   ADDRESS            IS-STMT\n8      12     0x00000000004003df Y\n9      10     0x00000000004003df\n10     11     0x00000000004003e3\n11     12     0x00000000004003e8\n12     13     0x00000000004003ed\n13     12     0x00000000004003f2\n14     13     0x00000000004003f4 Y\n15     13     0x00000000004003f4\n16     14     0x00000000004003f9 Y\n17     14     0x00000000004003f9\n...\n\nOnce we step out of the call to foo at 4003e8, we land at 4003ed, and gdb\nenters process_event_stop_test to figure out what to do.\n\nThat entry has is-stmt=n, so it's not the start of a line, so we don't stop\nthere.  However, we do update ecs->event_thread->current_line to line 13,\nbecause the frame has changed (because we stepped out of the function).\n\nNext we land at 4003f2.  Again the entry has is-stmt=n, so it's not the start\nof a line, so we don't stop there.  However, because the frame hasn't changed,\nwe don't update update ecs->event_thread->current_line, so it stays 13.\n\nNext we land at 4003f4.  Now is-stmt=y, so it's the start of a line, and we'd\nlike to stop here.\n\nBut we don't stop because this test fails:\n...\n  if ((ecs->event_thread->suspend.stop_pc == stop_pc_sal.pc)\n      && (ecs->event_thread->current_line != stop_pc_sal.line\n          || ecs->event_thread->current_symtab != stop_pc_sal.symtab))\n    {\n...\nbecause ecs->event_thread->current_line == 13 and stop_pc_sal.line == 13.\n\nFix this by resetting ecs->event_thread->current_line to 0 if is-stmt=n and\nthe frame has changed, such that we have:\n...\n12        int fd1 = foo (tpl1);\n(gdb) step\nfoo (c=c@entry=0x7fffffffdbc0 \"/tmp/test.XXX\") at small.c:5\n5         return 1;\n(gdb) step\nmain () at small.c:13\n13        int fd2 = foo (tpl2);\n(gdb)\n...\n\nTested on x86_64-linux, with gcc-7 and gcc-8.\n\ngdb/ChangeLog:\n\n2021-01-29  Tom de Vries  <tdevries@suse.de>\n\n\tPR breakpoints/26063\n\t* infrun.c (process_event_stop_test): Reset\n\tecs->event_thread->current_line to 0 if is-stmt=n and frame has\n\tchanged.\n\ngdb/testsuite/ChangeLog:\n\n2021-01-29  Tom de Vries  <tdevries@suse.de>\n\n\tPR breakpoints/26063\n\t* gdb.dwarf2/dw2-step-out-of-function-no-stmt.c: New test.\n\t* gdb.dwarf2/dw2-step-out-of-function-no-stmt.exp: New file.",
    "tree": {
      "sha": "0139faae85bca87713ab18a3a6fa2fff412961c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0139faae85bca87713ab18a3a6fa2fff412961c0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "620ec3caae78dd969fc4bdad7fad4248f52386d5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/620ec3caae78dd969fc4bdad7fad4248f52386d5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/620ec3caae78dd969fc4bdad7fad4248f52386d5"
    }
  ],
  "stats": {
    "total": 216,
    "additions": 208,
    "deletions": 8
  },
  "files": [
    {
      "sha": "9d928b01ebaba91d1f0daa22d4b174dba80bd353",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-29  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR breakpoints/26063\n+\t* infrun.c (process_event_stop_test): Reset\n+\tecs->event_thread->current_line to 0 if is-stmt=n and frame has\n+\tchanged.\n+\n 2021-01-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* thread.c (thr_try_catch_cmd): Replace swith_to_thread with an"
    },
    {
      "sha": "e070eff33d7a3b8618932262a731276917bae4be",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 25,
      "deletions": 8,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
      "patch": "@@ -7000,27 +7000,44 @@ process_event_stop_test (struct execution_control_state *ecs)\n       && (ecs->event_thread->current_line != stop_pc_sal.line\n  \t  || ecs->event_thread->current_symtab != stop_pc_sal.symtab))\n     {\n+      /* We are at a different line.  */\n+\n       if (stop_pc_sal.is_stmt)\n \t{\n-\t  /* We are at the start of a different line.  So stop.  Note that\n-\t     we don't stop if we step into the middle of a different line.\n-\t     That is said to make things like for (;;) statements work\n-\t     better.  */\n+\t  /* We are at the start of a statement.\n+\n+\t     So stop.  Note that we don't stop if we step into the middle of a\n+\t     statement.  That is said to make things like for (;;) statements\n+\t     work better.  */\n \t  infrun_debug_printf (\"stepped to a different line\");\n \t  end_stepping_range (ecs);\n \t  return;\n \t}\n       else if (frame_id_eq (get_frame_id (get_current_frame ()),\n-\t\t\t    ecs->event_thread->control.step_frame_id))\n+                           ecs->event_thread->control.step_frame_id))\n \t{\n-\t  /* We are at the start of a different line, however, this line is\n-\t     not marked as a statement, and we have not changed frame.  We\n-\t     ignore this line table entry, and continue stepping forward,\n+\t  /* We are not at the start of a statement, and we have not changed\n+\t     frame.\n+\n+\t     We ignore this line table entry, and continue stepping forward,\n \t     looking for a better place to stop.  */\n \t  refresh_step_info = false;\n \t  infrun_debug_printf (\"stepped to a different line, but \"\n \t\t\t       \"it's not the start of a statement\");\n \t}\n+      else\n+\t{\n+\t  /* We are not the start of a statement, and we have changed frame.\n+\n+\t     We ignore this line table entry, and continue stepping forward,\n+\t     looking for a better place to stop.  Keep refresh_step_info at\n+\t     true to note that the frame has changed, but ignore the line\n+\t     number to make sure we don't ignore a subsequent entry with the\n+\t     same line number.  */\n+\t  stop_pc_sal.line = 0;\n+\t  infrun_debug_printf (\"stepped to a different frame, but \"\n+\t\t\t       \"it's not the start of a statement\");\n+\t}\n     }\n \n   /* We aren't done stepping."
    },
    {
      "sha": "36ba5d01c4020bb5effac68f27099259cca4ffa9",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-29  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR breakpoints/26063\n+\t* gdb.dwarf2/dw2-step-out-of-function-no-stmt.c: New test.\n+\t* gdb.dwarf2/dw2-step-out-of-function-no-stmt.exp: New file.\n+\n 2021-01-29  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.opt/solib-intra-step.exp: Remove state tracking logic."
    },
    {
      "sha": "a8184f0c1bb8470addadc0bb256f501acdef5f78",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.c",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.c?ref=ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
      "patch": "@@ -0,0 +1,44 @@\n+/*\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+void\n+foo (int x)\n+{\n+\n+}\n+\n+void\n+bar (void)\n+{\n+  asm (\"bar_label: .globl bar_label\");\n+}\n+\n+int\n+main (void)\n+{\n+  asm (\"main_label: .globl main_label\");\n+\n+  bar ();\n+\n+  asm (\"main_label_2: .globl main_label_2\");\n+\n+  foo (10);\n+\n+  asm (\"main_label_3: .globl main_label_3\");\n+\n+  return 0;\n+}\n+"
    },
    {
      "sha": "9249eb590f7cd6ef61bd9bd039fb2c9d73696239",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.exp",
      "status": "added",
      "additions": 126,
      "deletions": 0,
      "changes": 126,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebde6f2ddc987e7e2d5a218ee8cf0126ec189424/gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-step-out-of-function-no-stmt.exp?ref=ebde6f2ddc987e7e2d5a218ee8cf0126ec189424",
      "patch": "@@ -0,0 +1,126 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Check whether stepping out of a function works, in case:\n+# - the first insn after the call has an is-stmt=no entry\n+# - the next insn has an is-stmt=yes entry, for the same line number\n+#\n+# This sort of thing can occur in optimized code, f.i. here a slightly more\n+# elaborate case with another is-stmt=no entry (the one with line number 12)\n+# inbetween:\n+# INDEX  LINE   ADDRESS            IS-STMT\n+# 12     13     0x00000000004003ed\n+# 13     12     0x00000000004003f2\n+# 14     13     0x00000000004003f4 Y\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    verbose \"Skipping $gdb_test_file_name.\"\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    verbose \"Skipping $gdb_test_file_name.\"\n+    return 0\n+}\n+\n+standard_testfile .c -dw.S\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    declare_labels Llines\n+    global srcdir subdir srcfile\n+\n+    lassign [function_range main [list ${srcdir}/${subdir}/$srcfile]] \\\n+\tmain_start main_len\n+    set main_end \"$main_start + $main_len\"\n+\n+    lassign [function_range main [list ${srcdir}/${subdir}/$srcfile]] \\\n+\tbar_start bar_len\n+    set bar_end \"$bar_start + $bar_len\"\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {language @DW_LANG_C}\n+\t    {name $srcfile}\n+\t    {stmt_list $Llines DW_FORM_sec_offset}\n+\t} {\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{MACRO_AT_func {main}}\n+\t    }\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{MACRO_AT_func {bar}}\n+\t    }\n+\t}\n+    }\n+\n+    lines {version 2} Llines {\n+\tinclude_dir \"${srcdir}/${subdir}\"\n+\tfile_name \"$srcfile\" 1\n+\n+\tprogram {\n+\t    {DW_LNE_set_address bar_label}\n+\t    {line 26}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address $bar_end}\n+\t    {DW_LNE_end_sequence}\n+\n+\t    {DW_LNE_set_address main_label}\n+\t    {line 32}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address main_label_2}\n+\t    {line 36}\n+\t    {DW_LNS_negate_stmt}\n+\t    {DW_LNS_copy}\n+\t    {DW_LNS_negate_stmt}\n+\n+\t    {DW_LNE_set_address main_label_3}\n+\t    {line 36}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address $main_end}\n+\t    {DW_LNE_end_sequence}\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+# Step into bar.\n+gdb_breakpoint \"bar\"\n+gdb_continue_to_breakpoint \"bar\"\n+\n+# Step out of bar.\n+gdb_test \"step\" [multi_line \\\n+\t\t     \"main \\\\(\\\\) at \\[^\\r\\n\\]*$srcfile:36\" \\\n+\t\t     \"36\\t\\[^\\r\\n\\]*\"]\n+"
    }
  ]
}