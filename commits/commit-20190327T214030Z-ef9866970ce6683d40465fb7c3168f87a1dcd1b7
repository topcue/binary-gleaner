{
  "sha": "ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWY5ODY2OTcwY2U2NjgzZDQwNDY1ZmI3YzMxNjhmODdhMWRjZDFiNw==",
  "commit": {
    "author": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2019-03-27T21:40:30Z"
    },
    "committer": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2019-03-27T21:40:30Z"
    },
    "message": "sim/common: convert sim-arange to use sim-inline\n\nThis fixes a TODO item and also fixes an error which we get when\nbuilding with no optimizations (-O0) in at least gcc 8.2.1.\n\nTested with sims that use cgen code lm32, or1k, cris, m32r and inlining\nis working corretly.\n\nReference Error:\n\ngcc -DHAVE_CONFIG_H -DWITH_DEFAULT_MODEL='\"or1200\"' -DWITH_ALIGNMENT=STRICT_ALIGNMENT \\\n -DWITH_TARGET_WORD_BITSIZE=32 -DWITH_TARGET_WORD_MSB=31 -DWITH_TARGET_ADDRESS_BITSIZE=32 \\\n -DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG   -DDEFAULT_INLINE=0  -DWITH_SCACHE=16384 \\\n -I. -I../../../binutils-gdb/sim/or1k -I../common -I../../../binutils-gdb/sim/or1k/../common \\\n -I../../include -I../../../binutils-gdb/sim/or1k/../../include -I../../bfd \\\n -I../../../binutils-gdb/sim/or1k/../../bfd -I../../opcodes -I../../../binutils-gdb/sim/or1k/../../opcodes \\\n -g -o run nrun.o libsim.a ../../bfd/libbfd.a ../../opcodes/libopcodes.a  ../../libiberty/libiberty.a \\\n -ldl  -lz -lm\n\n/usr/bin/ld: libsim.a(mloop.o): in function `extract':\n/home/shorne/work/openrisc/gdb-musl/sim/or1k/mloop.c:82: undefined reference to `sim_addr_range_hit_p'\n/usr/bin/ld: /home/shorne/work/openrisc/gdb-musl/sim/or1k/mloop.c:83: undefined reference to `sim_addr_range_hit_p'\ncollect2: error: ld returned 1 exit status\nmake[3]: *** [Makefile:305: run] Error 1\n\nsim/common/ChangeLog:\n\n\t* Make-common.in (sim-arange_h): Remove sim-arange.c\n\t* sim-arange.c: Remove SIM_ARANGE_C.\n\tAdd ifdef for _SIM_ARANGE_C_.\n\tInclude \"sim-arange.h\".\n\tRemove include for unused \"sim-assert.h\".\n\tRemove DEFINE_INLINE_P.  Remove DEFINE_NON_INLINE_P.\n\t(sim_addr_range_add): Declare as INLINE_SIM_ARANGE.\n\t(sim_addr_range_delete): Declare as INLINE_SIM_ARANGE.\n\t(sim_addr_range_hit_p): Change from SIM_ARANGE_INLINE to\n\tINLINE_SIM_ARANGE.\n\t* sim-arange.h (sim_addr_range_add): Declare as\n\tINLINE_SIM_ARANGE.\n\t(sim_addr_range_delete): Declare as INLINE_SIM_ARANGE.\n\t(sim_addr_range_hit_p) Declare as INLINE_SIM_ARANGE.\n\tRemove definition of SIM_ARANGE_INLINE.\n\tRemove [HAVE_INLINE].\n\tWrap include \"sim-arange.c\" in H_REVEALS_MODULE_P.\n\t* sim-base.h: Include \"sim-arange.h\"\n\t* sim-basics.h: Remove include of \"sim-arange.h\"\n\t* sim-inline.c: Include \"sim-arange.c\"\n\t* sim-inline.h: Define INLINE_SIM_ARANGE.\n\tDefine SIM_ARANGE_INLINE.  Define EXTERN_SIM_ARANGE_P.\n\tDefine STATIC_INLINE_SIM_ARANGE.  Define STATIC_SIM_ARANGE.",
    "tree": {
      "sha": "1a7929efbdea522520c1ba5fbeca66cf95c5c554",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1a7929efbdea522520c1ba5fbeca66cf95c5c554"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/comments",
  "author": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "20dc7e9b059edff1d0fab3bd197c460c11cc7a06",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20dc7e9b059edff1d0fab3bd197c460c11cc7a06",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/20dc7e9b059edff1d0fab3bd197c460c11cc7a06"
    }
  ],
  "stats": {
    "total": 119,
    "additions": 83,
    "deletions": 36
  },
  "files": [
    {
      "sha": "653a2fb639d01197e85b4bf48e19d1af4650a405",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -1,3 +1,29 @@\n+2019-03-28  Stafford Horne  <shorne@gmail.com>\n+\n+\t* Make-common.in (sim-arange_h): Remove sim-arange.c\n+\t* sim-arange.c: Remove SIM_ARANGE_C.\n+\tAdd ifdef for _SIM_ARANGE_C_.\n+\tInclude \"sim-arange.h\".\n+\tRemove include for unused \"sim-assert.h\".\n+\tRemove DEFINE_INLINE_P.  Remove DEFINE_NON_INLINE_P.\n+\t(sim_addr_range_add): Declare as INLINE_SIM_ARANGE.\n+\t(sim_addr_range_delete): Declare as INLINE_SIM_ARANGE.\n+\t(sim_addr_range_hit_p): Change from SIM_ARANGE_INLINE to\n+\tINLINE_SIM_ARANGE.\n+\t* sim-arange.h (sim_addr_range_add): Declare as\n+\tINLINE_SIM_ARANGE.\n+\t(sim_addr_range_delete): Declare as INLINE_SIM_ARANGE.\n+\t(sim_addr_range_hit_p) Declare as INLINE_SIM_ARANGE.\n+\tRemove definition of SIM_ARANGE_INLINE.\n+\tRemove [HAVE_INLINE].\n+\tWrap include \"sim-arange.c\" in H_REVEALS_MODULE_P.\n+\t* sim-base.h: Include \"sim-arange.h\"\n+\t* sim-basics.h: Remove include of \"sim-arange.h\"\n+\t* sim-inline.c: Include \"sim-arange.c\"\n+\t* sim-inline.h: Define INLINE_SIM_ARANGE.\n+\tDefine SIM_ARANGE_INLINE.  Define EXTERN_SIM_ARANGE_P.\n+\tDefine STATIC_INLINE_SIM_ARANGE.  Define STATIC_SIM_ARANGE.\n+\n 2019-01-26  Tom Tromey  <tom@tromey.com>\n \n \t* Make-common.in (version.c): Use sim's create-version.sh."
    },
    {
      "sha": "5d8ac910af21873c92ea42cd10b5cc3b750d3aaf",
      "filename": "sim/common/Make-common.in",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/Make-common.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/Make-common.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Make-common.in?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -319,8 +319,7 @@ SIM_MAIN_DEPS = \\\n \t$(sim_main_headers)\n \n sim-alu_h = $(srccom)/sim-alu.h\n-sim-arange_h = $(srccom)/sim-arange.h \\\n-\t\t$(srccom)/sim-arange.c\n+sim-arange_h = $(srccom)/sim-arange.h\n sim-assert_h = $(srccom)/sim-assert.h\n sim-base_h = $(srccom)/sim-base.h \\\n \t\t$(sim-module_h) \\"
    },
    {
      "sha": "c75245b94b9027dd430a160c3ebba7dafbae8eb3",
      "filename": "sim/common/sim-arange.c",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-arange.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-arange.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-arange.c?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -17,12 +17,12 @@ GNU General Public License for more details.\n You should have received a copy of the GNU General Public License\n along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n-/* Tell sim-arange.h it's us.  */\n-#define SIM_ARANGE_C\n+#ifndef _SIM_ARANGE_C_\n+#define _SIM_ARANGE_C_\n \n #include \"libiberty.h\"\n #include \"sim-basics.h\"\n-#include \"sim-assert.h\"\n+#include \"sim-arange.h\"\n \n #ifdef HAVE_STDLIB_H\n #include <stdlib.h>\n@@ -32,8 +32,6 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #include <string.h>\n #endif\n \n-#ifdef SIM_ARANGE_C_INCLUDED\n-\n /* Insert a range.  */\n \n static void\n@@ -251,7 +249,8 @@ build_search_tree (ADDR_RANGE *ar)\n   free (asrtab);\n }\n \n-void\n+INLINE_SIM_ARANGE\\\n+(void)\n sim_addr_range_add (ADDR_RANGE *ar, address_word start, address_word end)\n {\n   frob_range (ar, start, end, 0);\n@@ -264,7 +263,8 @@ sim_addr_range_add (ADDR_RANGE *ar, address_word start, address_word end)\n   build_search_tree (ar);\n }\n \n-void\n+INLINE_SIM_ARANGE\\\n+(void)\n sim_addr_range_delete (ADDR_RANGE *ar, address_word start, address_word end)\n {\n   frob_range (ar, start, end, 1);\n@@ -277,9 +277,8 @@ sim_addr_range_delete (ADDR_RANGE *ar, address_word start, address_word end)\n   build_search_tree (ar);\n }\n \n-#else /* SIM_ARANGE_C_INCLUDED */\n-\n-SIM_ARANGE_INLINE int\n+INLINE_SIM_ARANGE\\\n+(int)\n sim_addr_range_hit_p (ADDR_RANGE *ar, address_word addr)\n {\n   ADDR_RANGE_TREE *t = ar->range_tree;\n@@ -296,4 +295,4 @@ sim_addr_range_hit_p (ADDR_RANGE *ar, address_word addr)\n   return 0;\n }\n \n-#endif /* SIM_ARANGE_C_INCLUDED */\n+#endif /* _SIM_ARANGE_C_ */"
    },
    {
      "sha": "529d1650c2138f7ccf301b35caa3f94f7817b62a",
      "filename": "sim/common/sim-arange.h",
      "status": "modified",
      "additions": 9,
      "deletions": 21,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-arange.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-arange.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-arange.h?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -51,36 +51,24 @@ typedef struct _addr_range {\n } ADDR_RANGE;\n \n /* Add address range START,END to AR.  */\n-extern void sim_addr_range_add (ADDR_RANGE * /*ar*/,\n-\t\t\t\taddress_word /*start*/,\n-\t\t\t\taddress_word /*end*/);\n+INLINE_SIM_ARANGE (void) sim_addr_range_add (ADDR_RANGE * /*ar*/,\n+\t\t\t\t\t     address_word /*start*/,\n+\t\t\t\t\t     address_word /*end*/);\n \n /* Delete address range START,END from AR.  */\n-extern void sim_addr_range_delete (ADDR_RANGE * /*ar*/,\n-\t\t\t\t   address_word /*start*/,\n-\t\t\t\t   address_word /*end*/);\n-\n-/* TODO: This should get moved into sim-inline.h.  */\n-#ifdef HAVE_INLINE\n-#ifdef SIM_ARANGE_C\n-#define SIM_ARANGE_INLINE INLINE\n-#else\n-#define SIM_ARANGE_INLINE EXTERN_INLINE\n-#endif\n-#else\n-#define SIM_ARANGE_INLINE extern\n-#endif\n+INLINE_SIM_ARANGE (void) sim_addr_range_delete (ADDR_RANGE * /*ar*/,\n+\t\t\t\t\t\taddress_word /*start*/,\n+\t\t\t\t\t\taddress_word /*end*/);\n \n /* Return non-zero if ADDR is in range AR, traversing the entire tree.\n    If no range is specified, that is defined to mean \"everything\".  */\n-SIM_ARANGE_INLINE int\n-sim_addr_range_hit_p (ADDR_RANGE * /*ar*/, address_word /*addr*/);\n+INLINE_SIM_ARANGE (int) sim_addr_range_hit_p (ADDR_RANGE * /*ar*/,\n+\t\t\t\t\t      address_word /*addr*/);\n #define ADDR_RANGE_HIT_P(ar, addr) \\\n   ((ar)->range_tree == NULL || sim_addr_range_hit_p ((ar), (addr)))\n \n-#ifdef HAVE_INLINE\n+#if H_REVEALS_MODULE_P (SIM_ARANGE_INLINE)\n #include \"sim-arange.c\"\n #endif\n-#define SIM_ARANGE_C_INCLUDED\n \n #endif /* SIM_ARANGE_H */"
    },
    {
      "sha": "d07ff2168c35c4332b5fd60edbc5005c924f87f7",
      "filename": "sim/common/sim-base.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-base.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-base.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-base.h?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -82,6 +82,7 @@ typedef struct _sim_cpu sim_cpu;\n \n #include \"sim-module.h\"\n \n+#include \"sim-arange.h\"\n #include \"sim-trace.h\"\n #include \"sim-core.h\"\n #include \"sim-events.h\""
    },
    {
      "sha": "5aa76db424930199b59bc3fd8df116c10e952d41",
      "filename": "sim/common/sim-basics.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-basics.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-basics.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-basics.h?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -144,7 +144,6 @@ typedef enum {\n #include \"sim-bits.h\"\n #include \"sim-endian.h\"\n #include \"sim-signal.h\"\n-#include \"sim-arange.h\"\n \n #include \"sim-utils.h\"\n "
    },
    {
      "sha": "3a2af7917aa3e3da2e0fef047ceace8ca716e4ad",
      "filename": "sim/common/sim-inline.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-inline.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-inline.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-inline.c?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -29,6 +29,10 @@\n #include \"sim-inline.h\"\n #include \"sim-main.h\"\n \n+#if C_REVEALS_MODULE_P (SIM_ARANGE_INLINE)\n+#include \"sim-arange.c\"\n+#endif\n+\n \n #if C_REVEALS_MODULE_P (SIM_BITS_INLINE)\n #include \"sim-bits.c\"\n@@ -64,7 +68,6 @@\n #include \"sim-main.c\"\n #endif\n \n-\n #if C_REVEALS_MODULE_P (ENGINE_INLINE)\n /* #include \"engine.c\" - handled by generator */\n #endif"
    },
    {
      "sha": "87dfbb5dc4f894dc53282c07d7062b4c763f5fc9",
      "filename": "sim/common/sim-inline.h",
      "status": "modified",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-inline.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef9866970ce6683d40465fb7c3168f87a1dcd1b7/sim/common/sim-inline.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-inline.h?ref=ef9866970ce6683d40465fb7c3168f87a1dcd1b7",
      "patch": "@@ -348,6 +348,38 @@\n \n \n \f\n+\n+/* sim_arange */\n+\n+#if !defined (SIM_ARANGE_INLINE) && (DEFAULT_INLINE)\n+# define SIM_ARANGE_INLINE (ALL_H_INLINE)\n+#endif\n+\n+#if ((H_REVEALS_MODULE_P (SIM_ARANGE_INLINE) || defined (SIM_INLINE_C)) \\\n+     && !defined (SIM_ARANGE_C) \\\n+     && (REVEAL_MODULE_P (SIM_ARANGE_INLINE)))\n+# if (SIM_ARANGE_INLINE & INLINE_GLOBALS)\n+#  define INLINE_SIM_ARANGE(TYPE) static INLINE TYPE UNUSED\n+#  define EXTERN_SIM_ARANGE_P 0\n+# else\n+#  define INLINE_SIM_ARANGE(TYPE) static TYPE UNUSED\n+#  define EXTERN_SIM_ARANGE_P 0\n+# endif\n+#else\n+# define INLINE_SIM_ARANGE(TYPE) TYPE\n+# define EXTERN_SIM_ARANGE_P 1\n+#endif\n+\n+#if (SIM_ARANGE_INLINE & INLINE_LOCALS)\n+# define STATIC_INLINE_SIM_ARANGE(TYPE) static INLINE TYPE\n+#else\n+# define STATIC_INLINE_SIM_ARANGE(TYPE) static TYPE\n+#endif\n+\n+#define STATIC_SIM_ARANGE(TYPE) static TYPE\n+\n+\n+\n /* *****\n    sim-bits and sim-endian are treated differently from the rest\n    of the modules below.  Their default value is ALL_H_INLINE."
    }
  ]
}