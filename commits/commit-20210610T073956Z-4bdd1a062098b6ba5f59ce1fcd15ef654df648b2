{
  "sha": "4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGJkZDFhMDYyMDk4YjZiYTVmNTljZTFmY2QxNWVmNjU0ZGY2NDhiMg==",
  "commit": {
    "author": {
      "name": "Bhuvanendra Kumar N",
      "email": "Bhuvanendra.KumarN@amd.com",
      "date": "2021-06-10T07:15:27Z"
    },
    "committer": {
      "name": "Alok Kumar Sharma",
      "email": "AlokKumar.Sharma@amd.com",
      "date": "2021-06-10T07:39:56Z"
    },
    "message": "    [gdb/testsuite] Convert multi-line function call into single line.\n\n    After this clang backend patch(https://reviews.llvm.org/D91734), 8 test points\n    started to FAIL in this test case. As mentioned in this PR, \"...this test is\n    trying to next over a function call; gcc attributes all parameter evaluation\n    to the function name, while clang will attribute each parameter to its own\n    location. And when the parameters span across multiple source lines, the\n    is_stmt heuristic kicks in, so we stop on each line with actual parameters...\".\n\n    gdb.base/foll-exec.c test file snippet :\n    . . .\n     42   execlp (prog, /* tbreak-execlp */\n     43           prog,\n     44           \"execlp arg1 from foll-exec\",\n     45           (char *) 0);\n     46\n     47   printf (\"foll-exec is about to execl(execd-prog)...\\n\");\n    . . .\n\n    Line table: (before clang backend patch for the above code snippet) :\n    0x000000b0: 84 address += 8,  line += 2\n                0x000000000020196a     42      3      1   0             0\n    0x000000b1: 08 DW_LNS_const_add_pc (0x0000000000000011)\n    0x000000b2: 41 address += 3,  line += 5\n                0x000000000020197e     47      3      1   0             0\n\n    Line table: (after clang backend patch for the above code snippet) :\n    0x000000b5: 84 address += 8,  line += 2\n                0x0000000000201958     42     11      1   0             0\n    0x000000b6: 05 DW_LNS_set_column (4)\n    0x000000b8: 75 address += 7,  line += 1\n                0x000000000020195f     43      4      1   0             0\n    0x000000b9: 05 DW_LNS_set_column (3)\n    0x000000bb: 73 address += 7,  line += -1\n                0x0000000000201966     42      3      1   0             0\n    0x000000bc: 08 DW_LNS_const_add_pc (0x0000000000000011)\n    0x000000bd: 4f address += 4,  line += 5\n                0x000000000020197b     47      3      1   0             0\n\n    Following 8 test points started to fail after the above clang backend patch.\n\n    FAIL: gdb.base/foll-exec.exp: step through execlp call\n    FAIL: gdb.base/foll-exec.exp: step after execlp call\n    FAIL: gdb.base/foll-exec.exp: print execd-program/global_i (after execlp)\n    FAIL: gdb.base/foll-exec.exp: print execd-program/local_j (after execlp)\n    FAIL: gdb.base/foll-exec.exp: print follow-exec/local_k (after execlp)\n    FAIL: gdb.base/foll-exec.exp: step through execl call\n    FAIL: gdb.base/foll-exec.exp: step after execl call\n    FAIL: gdb.base/foll-exec.exp: print execd-program/local_j (after execl)\n\n    As we can note, reason for these new test failures is due to additional\n    .debug_line entries getting created in case of clang compiler, hence to fix\n    this issue, test case required either additional next command during\n    these multi-line function call or combine these multi-line function call into\n    single line. This PR has taken the latter approach and converted the multi-line\n    function call into single line in foll-exec.c, thereby there is no change in\n    .debug_line entries now and test case works as expected.",
    "tree": {
      "sha": "55c08e0733c4e91f1af7c029c85a423bd46108f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/55c08e0733c4e91f1af7c029c85a423bd46108f4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2/comments",
  "author": {
    "login": "bhuvanendrakumarn",
    "id": 64949312,
    "node_id": "MDQ6VXNlcjY0OTQ5MzEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/64949312?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bhuvanendrakumarn",
    "html_url": "https://github.com/bhuvanendrakumarn",
    "followers_url": "https://api.github.com/users/bhuvanendrakumarn/followers",
    "following_url": "https://api.github.com/users/bhuvanendrakumarn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bhuvanendrakumarn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bhuvanendrakumarn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bhuvanendrakumarn/subscriptions",
    "organizations_url": "https://api.github.com/users/bhuvanendrakumarn/orgs",
    "repos_url": "https://api.github.com/users/bhuvanendrakumarn/repos",
    "events_url": "https://api.github.com/users/bhuvanendrakumarn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bhuvanendrakumarn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36695cf8ffe4b93cb55564f5eabd6a549a0b5cbb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36695cf8ffe4b93cb55564f5eabd6a549a0b5cbb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/36695cf8ffe4b93cb55564f5eabd6a549a0b5cbb"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 15,
    "deletions": 9
  },
  "files": [
    {
      "sha": "65517eacd991bcd2b2ab47e6681a3c19e6707f23",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-10  Bhuvanendra Kumar N  <Bhuvanendra.KumarN@amd.com>\n+\n+\t* gdb.base/foll-exec.c: convert the multi-line function call into\n+\tsingle line.\n+\n 2021-06-10  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/cp-support.exp (cp_test_ptype_class): Break up regexp."
    },
    {
      "sha": "1e9b873fee4fd265db013c8f284c1925625d263d",
      "filename": "gdb/testsuite/gdb.base/foll-exec.c",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2/gdb/testsuite/gdb.base/foll-exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2/gdb/testsuite/gdb.base/foll-exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/foll-exec.c?ref=4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
      "patch": "@@ -39,18 +39,19 @@ int main (int argc, char ** argv)\n   memcpy (prog + len - 9, \"execd-prog\", 10);\n   prog[len + 1] = 0;\n \n-  execlp (prog, /* tbreak-execlp */\n-\t  prog,\n-\t  \"execlp arg1 from foll-exec\",\n-\t  (char *) 0);\n+  /* In the following function call, maximum line length exceed the limit 80.\n+     This is intentional and required for clang compiler such that complete\n+     function call should be in a single line, please do not make it\n+     multi-line.  */\n+  execlp (prog, /* tbreak-execlp */ prog, \"execlp arg1 from foll-exec\", (char *) 0);\n \n   printf (\"foll-exec is about to execl(execd-prog)...\\n\");\n \n-  execl (prog,\t/* tbreak-execl */\n-\t prog,\n-\t \"execl arg1 from foll-exec\",\n-\t \"execl arg2 from foll-exec\",\n-\t (char *) 0);\n+  /* In the following function call, maximum line length exceed the limit 80.\n+     This is intentional and required for clang compiler such that complete\n+     function call should be in a single line, please do not make it\n+     multi-line.  */\n+  execl (prog, /* tbreak-execl */ prog, \"execl arg1 from foll-exec\", \"execl arg2 from foll-exec\", (char *) 0);\n \n   {\n     static char * argv[] = {"
    }
  ]
}