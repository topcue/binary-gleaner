{
  "sha": "bb47f919bfdb8908361de74a0daf1af208ae425b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmI0N2Y5MTliZmRiODkwODM2MWRlNzRhMGRhZjFhZjIwOGFlNDI1Yg==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-11-09T18:09:41Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-12-10T22:42:15Z"
    },
    "message": "Add gdb_caching_proc support_nested_function_tests to lib/gdb.exp\n\nThis commit adds the gdb_caching_proc, support_nested_function_tests,\nto lib/gdb.exp.  It tests to see whether or not the C compiler has\nsupport for nested function calls.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (support_nested_function_tests): New proc.\n\nChange-Id: Ic2c93bc4cc200e07e104a2398f89a9c0514bdc75",
    "tree": {
      "sha": "90d1a4021d6919c5514b2c3b7db9782305870084",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/90d1a4021d6919c5514b2c3b7db9782305870084"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bb47f919bfdb8908361de74a0daf1af208ae425b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb47f919bfdb8908361de74a0daf1af208ae425b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bb47f919bfdb8908361de74a0daf1af208ae425b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb47f919bfdb8908361de74a0daf1af208ae425b/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "26b911fb6411c930cf408a82604dc4355c086e03",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26b911fb6411c930cf408a82604dc4355c086e03",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/26b911fb6411c930cf408a82604dc4355c086e03"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 22,
    "deletions": 3
  },
  "files": [
    {
      "sha": "4b2e13215a0e6e0bd62e0a3ff5bcf17c8e222f66",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb47f919bfdb8908361de74a0daf1af208ae425b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb47f919bfdb8908361de74a0daf1af208ae425b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=bb47f919bfdb8908361de74a0daf1af208ae425b",
      "patch": "@@ -1,8 +1,12 @@\n 2019-12-10  Kevin Buettner  <kevinb@redhat.com>\n \n-            * lib/gdb.exp (gdb_compile_openmp): New proc.\n-            (build_executable_from_specs): Add an \"openmp\" option.\n-            (gdb_compile_pthreads): Add non-executable case.\n+\t* lib/gdb.exp (support_nested_function_tests): New proc.\n+\n+2019-12-10  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* lib/gdb.exp (gdb_compile_openmp): New proc.\n+\t(build_executable_from_specs): Add an \"openmp\" option.\n+\t(gdb_compile_pthreads): Add non-executable case.\n \n 2019-12-10  Tom Tromey  <tromey@adacore.com>\n "
    },
    {
      "sha": "8b1ec62c9c21570f3d3cb4c9d3fa0bdce016876e",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb47f919bfdb8908361de74a0daf1af208ae425b/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb47f919bfdb8908361de74a0daf1af208ae425b/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=bb47f919bfdb8908361de74a0daf1af208ae425b",
      "patch": "@@ -6395,6 +6395,21 @@ gdb_caching_proc target_supports_scheduler_locking {\n     return $supports_schedule_locking\n }\n \n+# Return 1 if compiler supports use of nested functions.  Otherwise,\n+# return 0.\n+\n+gdb_caching_proc support_nested_function_tests {\n+    # Compile a test program containing a nested function\n+    return [gdb_can_simple_compile nested_func {\n+\tint main () {\n+\t    int foo () {\n+\t        return 0;\n+\t    }\n+\t    return foo ();\n+\t}\n+    } executable]\n+}\n+\n # gdb_target_symbol returns the provided symbol with the correct prefix\n # prepended.  (See gdb_target_symbol_prefix, above.)\n "
    }
  ]
}