{
  "sha": "603490bf53fe1885ef45f9d0fb783b32f8ef6049",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjAzNDkwYmY1M2ZlMTg4NWVmNDVmOWQwZmI3ODNiMzJmOGVmNjA0OQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-05-04T23:15:07Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-07-12T11:09:52Z"
    },
    "message": "gdb: Convert dwarf2_evaluate_property to return bool\n\nConvert dwarf2_evaluate_property to return a bool, there should be no\nuser visible change after this commit.\n\ngdb/ChangeLog:\n\n\t* dwarf2loc.c (dwarf2_evaluate_property): Change return type, and\n\tupdate return statements.\n\t* dwarf2loc.h (dwarf2_evaluate_property): Update return type on\n\tdeclaration, and update comment to match.\n\t* gdbtypes.c (resolve_dynamic_array): Update call to\n\tdwarf2_evaluate_property to match new return type.",
    "tree": {
      "sha": "9e27628f4592e507ad0f3d0cd6cc35053ee57548",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9e27628f4592e507ad0f3d0cd6cc35053ee57548"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/603490bf53fe1885ef45f9d0fb783b32f8ef6049",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/603490bf53fe1885ef45f9d0fb783b32f8ef6049",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/603490bf53fe1885ef45f9d0fb783b32f8ef6049",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/603490bf53fe1885ef45f9d0fb783b32f8ef6049/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "592f9d271caaa22a6b299cfaaf6ce3394796e0e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/592f9d271caaa22a6b299cfaaf6ce3394796e0e2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/592f9d271caaa22a6b299cfaaf6ce3394796e0e2"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 23,
    "deletions": 17
  },
  "files": [
    {
      "sha": "29b675d0bcf6fac855046a69bd8916262350375a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=603490bf53fe1885ef45f9d0fb783b32f8ef6049",
      "patch": "@@ -1,3 +1,12 @@\n+2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf2loc.c (dwarf2_evaluate_property): Change return type, and\n+\tupdate return statements.\n+\t* dwarf2loc.h (dwarf2_evaluate_property): Update return type on\n+\tdeclaration, and update comment to match.\n+\t* gdbtypes.c (resolve_dynamic_array): Update call to\n+\tdwarf2_evaluate_property to match new return type.\n+\n 2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* valarith.c (value_subscripted_rvalue): Change lowerbound"
    },
    {
      "sha": "ea6b36e6ed8b99942d2ef9aadb81db1906b926b4",
      "filename": "gdb/dwarf2loc.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/dwarf2loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/dwarf2loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2loc.c?ref=603490bf53fe1885ef45f9d0fb783b32f8ef6049",
      "patch": "@@ -2425,14 +2425,14 @@ dwarf2_locexpr_baton_eval (const struct dwarf2_locexpr_baton *dlbaton,\n \n /* See dwarf2loc.h.  */\n \n-int\n+bool\n dwarf2_evaluate_property (const struct dynamic_prop *prop,\n \t\t\t  struct frame_info *frame,\n \t\t\t  struct property_addr_info *addr_stack,\n \t\t\t  CORE_ADDR *value)\n {\n   if (prop == NULL)\n-    return 0;\n+    return false;\n \n   if (frame == NULL && has_stack_frames ())\n     frame = get_selected_frame (NULL);\n@@ -2454,7 +2454,7 @@ dwarf2_evaluate_property (const struct dynamic_prop *prop,\n \n \t\t*value = value_as_address (val);\n \t      }\n-\t    return 1;\n+\t    return true;\n \t  }\n       }\n       break;\n@@ -2476,15 +2476,15 @@ dwarf2_evaluate_property (const struct dynamic_prop *prop,\n \t    if (!value_optimized_out (val))\n \t      {\n \t\t*value = value_as_address (val);\n-\t\treturn 1;\n+\t\treturn true;\n \t      }\n \t  }\n       }\n       break;\n \n     case PROP_CONST:\n       *value = prop->data.const_val;\n-      return 1;\n+      return true;\n \n     case PROP_ADDR_OFFSET:\n       {\n@@ -2510,11 +2510,11 @@ dwarf2_evaluate_property (const struct dynamic_prop *prop,\n \t  val = value_at (baton->offset_info.type,\n \t\t\t  pinfo->addr + baton->offset_info.offset);\n \t*value = value_as_address (val);\n-\treturn 1;\n+\treturn true;\n       }\n     }\n \n-  return 0;\n+  return false;\n }\n \n /* See dwarf2loc.h.  */"
    },
    {
      "sha": "ac1a771a9f3ec902f843fa5803ca6c272b87c425",
      "filename": "gdb/dwarf2loc.h",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/dwarf2loc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/dwarf2loc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2loc.h?ref=603490bf53fe1885ef45f9d0fb783b32f8ef6049",
      "patch": "@@ -135,13 +135,13 @@ struct property_addr_info\n    property. When evaluating a property that is not related to a type, it can\n    be NULL.\n \n-   Returns 1 if PROP could be converted and the static value is passed back\n-   into VALUE, otherwise returns 0.  */\n+   Returns true if PROP could be converted and the static value is passed\n+   back into VALUE, otherwise returns false.  */\n \n-int dwarf2_evaluate_property (const struct dynamic_prop *prop,\n-\t\t\t      struct frame_info *frame,\n-\t\t\t      struct property_addr_info *addr_stack,\n-\t\t\t      CORE_ADDR *value);\n+bool dwarf2_evaluate_property (const struct dynamic_prop *prop,\n+\t\t\t       struct frame_info *frame,\n+\t\t\t       struct property_addr_info *addr_stack,\n+\t\t\t       CORE_ADDR *value);\n \n /* A helper for the compiler interface that compiles a single dynamic\n    property to C code."
    },
    {
      "sha": "d7a14b7ace953cf50b95730e3ad4e57e342407da",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/603490bf53fe1885ef45f9d0fb783b32f8ef6049/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=603490bf53fe1885ef45f9d0fb783b32f8ef6049",
      "patch": "@@ -2065,10 +2065,7 @@ resolve_dynamic_array (struct type *type,\n   prop = get_dyn_prop (DYN_PROP_BYTE_STRIDE, type);\n   if (prop != NULL)\n     {\n-      int prop_eval_ok\n-\t= dwarf2_evaluate_property (prop, NULL, addr_stack, &value);\n-\n-      if (prop_eval_ok)\n+      if (dwarf2_evaluate_property (prop, NULL, addr_stack, &value))\n \t{\n \t  remove_dyn_prop (DYN_PROP_BYTE_STRIDE, type);\n \t  bit_stride = (unsigned int) (value * 8);"
    }
  ]
}