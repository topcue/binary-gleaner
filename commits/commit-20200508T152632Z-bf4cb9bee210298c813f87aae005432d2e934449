{
  "sha": "bf4cb9bee210298c813f87aae005432d2e934449",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmY0Y2I5YmVlMjEwMjk4YzgxM2Y4N2FhZTAwNTQzMmQyZTkzNDQ0OQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-08T15:26:32Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-08T15:26:32Z"
    },
    "message": "[gdb] Fix stepping over fork with follow-fork-mode child and gcc-8\n\nWhen running test-case gdb.threads/fork-child-threads.exp with gcc-8 instead\nof gcc-7, we have:\n...\n (gdb) next^M\n [Attaching after Thread 0x7ffff7fae740 (LWP 27574) fork to child process \\\n   27578]^M\n [New inferior 2 (process 27578)]^M\n [Detaching after fork from parent process 27574]^M\n [Inferior 1 (process 27574) detached]^M\n [Thread debugging using libthread_db enabled]^M\n Using host libthread_db library \"/lib64/libthread_db.so.1\".^M\n [Switching to Thread 0x7ffff7fae740 (LWP 27578)]^M\n-main () at src/gdb/testsuite/gdb.threads/fork-child-threads.c:41^M\n+main () at src/gdb/testsuite/gdb.threads/fork-child-threads.c:34^M\n-41            i = pthread_create (&thread, NULL, start, NULL);^M\n+34        switch (fork ())^M\n-(gdb) PASS: gdb.threads/fork-child-threads.exp: next over fork\n+(gdb) FAIL: gdb.threads/fork-child-threads.exp: next over fork\n...\n\nThis is due to the fact that gcc-8 generates more precise line info, making\nthe instruction after the call to fork a \"recommended breakpoint location\".\nHowever, it is a bug because next is supposed to move to the next source\nline.\n\nThe problem is that in process_event_stop_test we hit this code:\n...\n  if ((ecs->event_thread->suspend.stop_pc == stop_pc_sal.pc)\n      && (ecs->event_thread->current_line != stop_pc_sal.line\n\t  || ecs->event_thread->current_symtab != stop_pc_sal.symtab))\n    {\n      if (stop_pc_sal.is_stmt)\n\t{\n\t  /* We are at the start of a different line.  So stop.  Note that\n\t     we don't stop if we step into the middle of a different line.\n\t     That is said to make things like for (;;) statements work\n\t     better.  */\n\t  if (debug_infrun)\n\t    fprintf_unfiltered (gdb_stdlog,\n\t\t\t\t\"infrun: stepped to a different line\\n\");\n\t  end_stepping_range (ecs);\n\t  return;\n\t}\n...\nbecause current_line and current_symtab have initial values:\n...\n(gdb) p ecs->event_thread->current_line\n$8 = 0\n(gdb) p ecs->event_thread->current_symtab\n$9 = (symtab *) 0x0\n...\n\nFix this in follow_fork by copying current_line and current_symtab from\nparent thread to child thread.\n\nTested on x86_64-linux, with gcc 7.5.0 and gcc 10.0.1.\n\ngdb/ChangeLog:\n\n2020-05-08  Tom de Vries  <tdevries@suse.de>\n\n\t* infrun.c (follow_fork): Copy current_line and current_symtab to\n\tchild thread.",
    "tree": {
      "sha": "882c85626009ad5779a0092d5b6ba8b4e582a2fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/882c85626009ad5779a0092d5b6ba8b4e582a2fc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bf4cb9bee210298c813f87aae005432d2e934449",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf4cb9bee210298c813f87aae005432d2e934449",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bf4cb9bee210298c813f87aae005432d2e934449",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf4cb9bee210298c813f87aae005432d2e934449/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/283cb58c4ddb8a3dc7a014f5c6a41789fd7de939"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 11,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5edf06faa557be3885d276438aa092513e0692ae",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf4cb9bee210298c813f87aae005432d2e934449/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf4cb9bee210298c813f87aae005432d2e934449/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bf4cb9bee210298c813f87aae005432d2e934449",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-08  Tom de Vries  <tdevries@suse.de>\n+\n+\t* infrun.c (follow_fork): Copy current_line and current_symtab to\n+\tchild thread.\n+\n 2020-05-07  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* async-event.c (struct async_signal_handler, struct"
    },
    {
      "sha": "3c6b201a9fc8cd006b084f5bc6160fa7a6abbb20",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf4cb9bee210298c813f87aae005432d2e934449/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf4cb9bee210298c813f87aae005432d2e934449/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=bf4cb9bee210298c813f87aae005432d2e934449",
      "patch": "@@ -681,6 +681,8 @@ follow_fork ()\n   struct breakpoint *exception_resume_breakpoint = NULL;\n   CORE_ADDR step_range_start = 0;\n   CORE_ADDR step_range_end = 0;\n+  int current_line = 0;\n+  symtab *current_symtab = NULL;\n   struct frame_id step_frame_id = { 0 };\n   struct thread_fsm *thread_fsm = NULL;\n \n@@ -734,6 +736,8 @@ follow_fork ()\n \t\t\t\t\t (tp->control.step_resume_breakpoint);\n \t    step_range_start = tp->control.step_range_start;\n \t    step_range_end = tp->control.step_range_end;\n+\t    current_line = tp->current_line;\n+\t    current_symtab = tp->current_symtab;\n \t    step_frame_id = tp->control.step_frame_id;\n \t    exception_resume_breakpoint\n \t      = clone_momentary_breakpoint (tp->control.exception_resume_breakpoint);\n@@ -794,6 +798,8 @@ follow_fork ()\n \t\t      = step_resume_breakpoint;\n \t\t    tp->control.step_range_start = step_range_start;\n \t\t    tp->control.step_range_end = step_range_end;\n+\t\t    tp->current_line = current_line;\n+\t\t    tp->current_symtab = current_symtab;\n \t\t    tp->control.step_frame_id = step_frame_id;\n \t\t    tp->control.exception_resume_breakpoint\n \t\t      = exception_resume_breakpoint;"
    }
  ]
}