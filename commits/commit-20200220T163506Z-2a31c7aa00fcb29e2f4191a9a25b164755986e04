{
  "sha": "2a31c7aa00fcb29e2f4191a9a25b164755986e04",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmEzMWM3YWEwMGZjYjI5ZTJmNDE5MWE5YTI1YjE2NDc1NTk4NmUwNA==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:53Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:06Z"
    },
    "message": "gdbserver: turn target op 'look_up_symbols' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's look_up_symbols op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.\n\t* target.cc (process_target::look_up_symbols): Define.\n\n\tUpdate the derived classes and callers below.\n\n\t* server.cc (handle_query): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_look_up_symbols): Turn into ...\n\t(linux_process_target::look_up_symbols): ... this.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t* win32-low.cc (win32_target_ops): Update.",
    "tree": {
      "sha": "77b2eb83e4c3e3b3eaa619bd67ff2d52a382a005",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/77b2eb83e4c3e3b3eaa619bd67ff2d52a382a005"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2a31c7aa00fcb29e2f4191a9a25b164755986e04",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a31c7aa00fcb29e2f4191a9a25b164755986e04",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2a31c7aa00fcb29e2f4191a9a25b164755986e04",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a31c7aa00fcb29e2f4191a9a25b164755986e04/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e2558df32b83c2e3b41829d46c0b3d09732d7176",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2558df32b83c2e3b41829d46c0b3d09732d7176",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e2558df32b83c2e3b41829d46c0b3d09732d7176"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 38,
    "deletions": 16
  },
  "files": [
    {
      "sha": "0839105634464c5428b7311b5e68962dd2a32600",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -1,3 +1,23 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's look_up_symbols op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.\n+\t* target.cc (process_target::look_up_symbols): Define.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* server.cc (handle_query): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_look_up_symbols): Turn into ...\n+\t(linux_process_target::look_up_symbols): ... this.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's read_memory and write_memory"
    },
    {
      "sha": "f073a38f0929c218f543842f41f53dd15d5b5d48",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -5898,8 +5898,8 @@ linux_process_target::write_memory (CORE_ADDR memaddr,\n   return 0;\n }\n \n-static void\n-linux_look_up_symbols (void)\n+void\n+linux_process_target::look_up_symbols ()\n {\n #ifdef USE_THREAD_DB\n   struct process_info *proc = current_process ();\n@@ -7369,7 +7369,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_look_up_symbols,\n   linux_request_interrupt,\n   linux_read_auxv,\n   linux_supports_z_point_type,"
    },
    {
      "sha": "05269dc18ab45ad4749c038673bf8f04935ee51e",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -305,6 +305,8 @@ class linux_process_target : public process_target\n \n   int write_memory (CORE_ADDR memaddr, const unsigned char *myaddr,\n \t\t    int len) override;\n+\n+  void look_up_symbols () override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "bedf9182ce2949380a3c79e89fb5b6496ed65648",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -729,7 +729,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* look_up_symbols */\n   lynx_request_interrupt,\n   NULL,  /* read_auxv */\n   NULL,  /* supports_z_point_type */"
    },
    {
      "sha": "c229e41d5251341d9c0415ecc1efaa9cd43f529d",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -943,7 +943,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  NULL, /* nto_look_up_symbols */\n   nto_request_interrupt,\n   nto_read_auxv,\n   nto_supports_z_point_type,"
    },
    {
      "sha": "4785eabaf06e9b5996d60a040707e5df24c3a044",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -2192,8 +2192,8 @@ handle_query (char *own_buf, int packet_len, int *new_packet_len_p)\n       if (target_supports_tracepoints ())\n \ttracepoint_look_up_symbols ();\n \n-      if (current_thread != NULL && the_target->look_up_symbols != NULL)\n-\t(*the_target->look_up_symbols) ();\n+      if (current_thread != NULL)\n+\tthe_target->pt->look_up_symbols ();\n \n       current_thread = save_thread;\n "
    },
    {
      "sha": "dd9ee8dfd47f9b60cf999f983d1dc7674b55bd38",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -408,3 +408,9 @@ process_target::done_accessing_memory ()\n {\n   /* Nop.  */\n }\n+\n+void\n+process_target::look_up_symbols ()\n+{\n+  /* Nop.  */\n+}"
    },
    {
      "sha": "7f37a904f76c8e672adf86e47d2e5c6b28c0547c",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -70,14 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Query GDB for the values of any symbols we're interested in.\n-     This function is called whenever we receive a \"qSymbols::\"\n-     query, which corresponds to every time more symbols (might)\n-     become available.  NULL if we aren't interested in any\n-     symbols.  */\n-\n-  void (*look_up_symbols) (void);\n-\n   /* Send an interrupt request to the inferior process,\n      however is appropriate.  */\n \n@@ -477,6 +469,12 @@ class process_target\n      Returns 0 on success and errno on failure.  */\n   virtual int write_memory (CORE_ADDR memaddr, const unsigned char *myaddr,\n \t\t\t    int len) = 0;\n+\n+  /* Query GDB for the values of any symbols we're interested in.\n+     This function is called whenever we receive a \"qSymbols::\"\n+     query, which corresponds to every time more symbols (might)\n+     become available.  */\n+  virtual void look_up_symbols ();\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "4ac1b3a1ca271b7eb0265c23ba4b6da49a507ce4",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a31c7aa00fcb29e2f4191a9a25b164755986e04/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "patch": "@@ -1838,7 +1838,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  NULL, /* lookup_symbols */\n   win32_request_interrupt,\n   NULL, /* read_auxv */\n   win32_supports_z_point_type,"
    }
  ]
}