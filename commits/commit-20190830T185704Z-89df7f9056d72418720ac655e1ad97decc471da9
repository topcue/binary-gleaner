{
  "sha": "89df7f9056d72418720ac655e1ad97decc471da9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODlkZjdmOTA1NmQ3MjQxODcyMGFjNjU1ZTFhZDk3ZGVjYzQ3MWRhOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-15T01:45:55Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-30T18:57:04Z"
    },
    "message": "Private data members in tui_data_window\n\nThis changes tui_data_window so that the data members are private.\nThis required the addition of a simple accessor method in one case.\n\ngdb/ChangeLog\n2019-08-30  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.h (struct tui_data_window) <regs_content,\n\tregs_column_count, current_group>: Move later.  Now private.\n\t<get_current_group>: New method.\n\t* tui/tui-regs.c (tui_reg_command): Update.\n\t* tui/tui-layout.c (tui_set_layout): Update.",
    "tree": {
      "sha": "d0e7653011223905a3c620f94207d5827ad7aa45",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d0e7653011223905a3c620f94207d5827ad7aa45"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/89df7f9056d72418720ac655e1ad97decc471da9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89df7f9056d72418720ac655e1ad97decc471da9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/89df7f9056d72418720ac655e1ad97decc471da9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89df7f9056d72418720ac655e1ad97decc471da9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1bf2866a59530d9e8384807bc44b833e8647d329",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bf2866a59530d9e8384807bc44b833e8647d329",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1bf2866a59530d9e8384807bc44b833e8647d329"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 20,
    "deletions": 7
  },
  "files": [
    {
      "sha": "2a2c08cae46df69ded50501f465982fabbf96734",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89df7f9056d72418720ac655e1ad97decc471da9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89df7f9056d72418720ac655e1ad97decc471da9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=89df7f9056d72418720ac655e1ad97decc471da9",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-30  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.h (struct tui_data_window) <regs_content,\n+\tregs_column_count, current_group>: Move later.  Now private.\n+\t<get_current_group>: New method.\n+\t* tui/tui-regs.c (tui_reg_command): Update.\n+\t* tui/tui-layout.c (tui_set_layout): Update.\n+\n 2019-08-30  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.c (tui_data_window::display_registers_from_line)"
    },
    {
      "sha": "387a4f51affeafa246d5acd90461cb20c9b35085",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89df7f9056d72418720ac655e1ad97decc471da9/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89df7f9056d72418720ac655e1ad97decc471da9/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=89df7f9056d72418720ac655e1ad97decc471da9",
      "patch": "@@ -189,7 +189,7 @@ tui_set_layout (enum tui_layout_type layout_type)\n       tui_update_source_windows_with_addr (gdbarch, addr);\n       if (new_layout == SRC_DATA_COMMAND\n \t  || new_layout == DISASSEM_DATA_COMMAND)\n-\tTUI_DATA_WIN->show_registers (TUI_DATA_WIN->current_group);\n+\tTUI_DATA_WIN->show_registers (TUI_DATA_WIN->get_current_group ());\n     }\n }\n "
    },
    {
      "sha": "98096e2cdc4881562ca845cc28fb4fd27c186ea8",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89df7f9056d72418720ac655e1ad97decc471da9/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89df7f9056d72418720ac655e1ad97decc471da9/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=89df7f9056d72418720ac655e1ad97decc471da9",
      "patch": "@@ -622,7 +622,7 @@ tui_reg_command (const char *args, int from_tty)\n       if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->is_visible ())\n \ttui_reg_layout ();\n \n-      struct reggroup *current_group = TUI_DATA_WIN->current_group;\n+      struct reggroup *current_group = TUI_DATA_WIN->get_current_group ();\n       if (strncmp (args, \"next\", len) == 0)\n \tmatch = tui_reg_next (current_group, gdbarch);\n       else if (strncmp (args, \"prev\", len) == 0)"
    },
    {
      "sha": "2606c39f5a190bcce744a54f13ca940cee3988a5",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89df7f9056d72418720ac655e1ad97decc471da9/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89df7f9056d72418720ac655e1ad97decc471da9/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=89df7f9056d72418720ac655e1ad97decc471da9",
      "patch": "@@ -63,15 +63,15 @@ struct tui_data_window : public tui_win_info\n     return DATA_NAME;\n   }\n \n-  /* Windows that are used to display registers.  */\n-  std::vector<tui_data_item_window> regs_content;\n-  int regs_column_count = 0;\n-  struct reggroup *current_group = nullptr;\n-\n   void check_register_values (struct frame_info *frame);\n \n   void show_registers (struct reggroup *group);\n \n+  struct reggroup *get_current_group () const\n+  {\n+    return current_group;\n+  }\n+\n protected:\n \n   void do_scroll_vertical (int num_to_scroll) override;\n@@ -126,6 +126,11 @@ struct tui_data_window : public tui_win_info\n   void delete_data_content_windows ();\n \n   void erase_data_content (const char *prompt);\n+\n+  /* Windows that are used to display registers.  */\n+  std::vector<tui_data_item_window> regs_content;\n+  int regs_column_count = 0;\n+  struct reggroup *current_group = nullptr;\n };\n \n #endif /* TUI_TUI_REGS_H */"
    }
  ]
}