{
  "sha": "e3b2741b162209a497db03ed4d19890326f16816",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTNiMjc0MWIxNjIyMDlhNDk3ZGIwM2VkNGQxOTg5MDMyNmYxNjgxNg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-18T05:46:13Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-18T05:46:13Z"
    },
    "message": "gdb: const-ify remote_target::add_current_inferior_and_thread parameter\n\n... and adjust callers / callees.\n\ngdb/ChangeLog:\n\n\t* remote.c (class remote_target):\n\t<add_current_inferior_and_thread>: Constify parameter.\n\t(stop_reply_extract_thread): Likewise.\n\t(remote_target::get_current_thread): Likewise.\n\t(remote_target::add_current_inferior_and_thread): Likewise.\n\nChange-Id: Ifdc6c263104b58852b532cfda81caf836437d29c",
    "tree": {
      "sha": "ac5b43f6970d26d67aa9ae29d4dca8db73b8456d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ac5b43f6970d26d67aa9ae29d4dca8db73b8456d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e3b2741b162209a497db03ed4d19890326f16816",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3b2741b162209a497db03ed4d19890326f16816",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e3b2741b162209a497db03ed4d19890326f16816",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3b2741b162209a497db03ed4d19890326f16816/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cecb19129054860e40d14c78af5c5ab06873e0ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cecb19129054860e40d14c78af5c5ab06873e0ab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cecb19129054860e40d14c78af5c5ab06873e0ab"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 13,
    "deletions": 5
  },
  "files": [
    {
      "sha": "657e707b30fff6ee6e484b5bfed1a405095a31bb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3b2741b162209a497db03ed4d19890326f16816/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3b2741b162209a497db03ed4d19890326f16816/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e3b2741b162209a497db03ed4d19890326f16816",
      "patch": "@@ -1,3 +1,11 @@\n+2021-01-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* remote.c (class remote_target):\n+\t<add_current_inferior_and_thread>: Constify parameter.\n+\t(stop_reply_extract_thread): Likewise.\n+\t(remote_target::get_current_thread): Likewise.\n+\t(remote_target::add_current_inferior_and_thread): Likewise.\n+\n 2021-01-18  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* remote.c (class remote_target)"
    },
    {
      "sha": "49181d3871673c3d4b85a0212c458ca2a5e551ec",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3b2741b162209a497db03ed4d19890326f16816/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3b2741b162209a497db03ed4d19890326f16816/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=e3b2741b162209a497db03ed4d19890326f16816",
      "patch": "@@ -737,7 +737,7 @@ class remote_target : public process_stratum_target\n   int remote_resume_with_vcont (ptid_t ptid, int step,\n \t\t\t\tgdb_signal siggnal);\n \n-  void add_current_inferior_and_thread (char *wait_status);\n+  void add_current_inferior_and_thread (const char *wait_status);\n \n   ptid_t wait_ns (ptid_t ptid, struct target_waitstatus *status,\n \t\t  target_wait_flags options);\n@@ -784,7 +784,7 @@ class remote_target : public process_stratum_target\n \t\t\t\t int try_open_exec);\n \n   ptid_t remote_current_thread (ptid_t oldpid);\n-  ptid_t get_current_thread (char *wait_status);\n+  ptid_t get_current_thread (const char *wait_status);\n \n   void set_thread (ptid_t ptid, int gen);\n   void set_general_thread (ptid_t ptid);\n@@ -4351,7 +4351,7 @@ remote_target::send_interrupt_sequence ()\n    and extract the PTID.  Returns NULL_PTID if not found.  */\n \n static ptid_t\n-stop_reply_extract_thread (char *stop_reply)\n+stop_reply_extract_thread (const char *stop_reply)\n {\n   if (stop_reply[0] == 'T' && strlen (stop_reply) > 3)\n     {\n@@ -4391,7 +4391,7 @@ stop_reply_extract_thread (char *stop_reply)\n    method avoids a roundtrip.  */\n \n ptid_t\n-remote_target::get_current_thread (char *wait_status)\n+remote_target::get_current_thread (const char *wait_status)\n {\n   ptid_t ptid = null_ptid;\n \n@@ -4418,7 +4418,7 @@ remote_target::get_current_thread (char *wait_status)\n    in in WAIT_STATUS, which may be NULL.  */\n \n void\n-remote_target::add_current_inferior_and_thread (char *wait_status)\n+remote_target::add_current_inferior_and_thread (const char *wait_status)\n {\n   struct remote_state *rs = get_remote_state ();\n   bool fake_pid_p = false;"
    }
  ]
}