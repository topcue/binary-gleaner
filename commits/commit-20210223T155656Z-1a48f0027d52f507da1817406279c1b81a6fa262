{
  "sha": "1a48f0027d52f507da1817406279c1b81a6fa262",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWE0OGYwMDI3ZDUyZjUwN2RhMTgxNzQwNjI3OWMxYjgxYTZmYTI2Mg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-23T15:56:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-23T15:56:56Z"
    },
    "message": "gdbserver: linux-low: make linux_process_target::filter_event return void\n\nSame as the previous patch, but for GDBserver.  The return value of this\nmethod is never used, change it to return void.\n\ngdbserver/ChangeLog:\n\n\t* linux-low.cc (linux_process_target::filter_event): Return\n\tvoid.\n\t* linux-low.h (class linux_process_target) <filter_event>:\n\tReturn void.\n\nChange-Id: I79e5dc04d9b21b9f01c6d675fa463d1b1a703b3a",
    "tree": {
      "sha": "70b47730720f7d232ca5dcfb9a9d971e2028b826",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/70b47730720f7d232ca5dcfb9a9d971e2028b826"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1a48f0027d52f507da1817406279c1b81a6fa262",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a48f0027d52f507da1817406279c1b81a6fa262",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1a48f0027d52f507da1817406279c1b81a6fa262",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a48f0027d52f507da1817406279c1b81a6fa262/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "897608ed56a73739aa675011c2104565b68fc8bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/897608ed56a73739aa675011c2104565b68fc8bb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/897608ed56a73739aa675011c2104565b68fc8bb"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 21,
    "deletions": 14
  },
  "files": [
    {
      "sha": "0e713cc6abbad8dac18e85a84b1bcbd94b33f8c5",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a48f0027d52f507da1817406279c1b81a6fa262/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a48f0027d52f507da1817406279c1b81a6fa262/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=1a48f0027d52f507da1817406279c1b81a6fa262",
      "patch": "@@ -1,3 +1,10 @@\n+2021-02-23  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* linux-low.cc (linux_process_target::filter_event): Return\n+\tvoid.\n+\t* linux-low.h (class linux_process_target) <filter_event>:\n+\tReturn void.\n+\n 2021-02-12  Tom Tromey  <tromey@adacore.com>\n \n \t* gdbreplay.cc (remote_desc): Remove."
    },
    {
      "sha": "0baac013129c19c473096044129f783b4c498d90",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a48f0027d52f507da1817406279c1b81a6fa262/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a48f0027d52f507da1817406279c1b81a6fa262/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=1a48f0027d52f507da1817406279c1b81a6fa262",
      "patch": "@@ -2243,7 +2243,7 @@ linux_low_ptrace_options (int attached)\n   return options;\n }\n \n-lwp_info *\n+void\n linux_process_target::filter_event (int lwpid, int wstat)\n {\n   client_state &cs = get_client_state ();\n@@ -2292,10 +2292,10 @@ linux_process_target::filter_event (int lwpid, int wstat)\n   if (child == NULL && WIFSTOPPED (wstat))\n     {\n       add_to_pid_list (&stopped_pids, lwpid, wstat);\n-      return NULL;\n+      return;\n     }\n   else if (child == NULL)\n-    return NULL;\n+    return;\n \n   thread = get_lwp_thread (child);\n \n@@ -2325,12 +2325,12 @@ linux_process_target::filter_event (int lwpid, int wstat)\n \t     report this one right now.  Leave the status pending for\n \t     the next time we're able to report it.  */\n \t  mark_lwp_dead (child, wstat);\n-\t  return child;\n+\t  return;\n \t}\n       else\n \t{\n \t  delete_lwp (child);\n-\t  return NULL;\n+\t  return;\n \t}\n     }\n \n@@ -2358,7 +2358,7 @@ linux_process_target::filter_event (int lwpid, int wstat)\n \t\t the first instruction.  */\n \t      child->status_pending_p = 1;\n \t      child->status_pending = wstat;\n-\t      return child;\n+\t      return;\n \t    }\n \t}\n     }\n@@ -2397,7 +2397,7 @@ linux_process_target::filter_event (int lwpid, int wstat)\n \t{\n \t  /* The event has been handled, so just return without\n \t     reporting it.  */\n-\t  return NULL;\n+\t  return;\n \t}\n     }\n \n@@ -2433,7 +2433,7 @@ linux_process_target::filter_event (int lwpid, int wstat)\n \t    debug_printf (\"LLW: SIGSTOP caught for %s \"\n \t\t\t  \"while stopping threads.\\n\",\n \t\t\t  target_pid_to_str (ptid_of (thread)));\n-\t  return NULL;\n+\t  return;\n \t}\n       else\n \t{\n@@ -2444,13 +2444,13 @@ linux_process_target::filter_event (int lwpid, int wstat)\n \t\t\t  target_pid_to_str (ptid_of (thread)));\n \n \t  resume_one_lwp (child, child->stepping, 0, NULL);\n-\t  return NULL;\n+\t  return;\n \t}\n     }\n \n   child->status_pending_p = 1;\n   child->status_pending = wstat;\n-  return child;\n+  return;\n }\n \n bool"
    },
    {
      "sha": "be97526ced7b7b7ff8179567c8c519859364866b",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a48f0027d52f507da1817406279c1b81a6fa262/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a48f0027d52f507da1817406279c1b81a6fa262/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=1a48f0027d52f507da1817406279c1b81a6fa262",
      "patch": "@@ -326,10 +326,10 @@ class linux_process_target : public process_stratum_target\n      to a new LWP representing the new program.  */\n   int handle_extended_wait (lwp_info **orig_event_lwp, int wstat);\n \n-  /* Do low-level handling of the event, and check if we should go on\n-     and pass it to caller code.  Return the affected lwp if we are, or\n-     NULL otherwise.  */\n-  lwp_info *filter_event (int lwpid, int wstat);\n+  /* Do low-level handling of the event, and check if this is an event we want\n+     to report.  Is so, store it as a pending status in the lwp_info structure\n+     corresponding to LWPID.  */\n+  void filter_event (int lwpid, int wstat);\n \n   /* Wait for an event from child(ren) WAIT_PTID, and return any that\n      match FILTER_PTID (leaving others pending).  The PTIDs can be:"
    }
  ]
}