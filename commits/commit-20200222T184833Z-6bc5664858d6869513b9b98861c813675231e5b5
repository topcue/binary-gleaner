{
  "sha": "6bc5664858d6869513b9b98861c813675231e5b5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmJjNTY2NDg1OGQ2ODY5NTEzYjliOTg4NjFjODEzNjc1MjMxZTViNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:26Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:33Z"
    },
    "message": "Change return type of tui_layout_base::adjust_size\n\nThis changes tui_layout_base::adjust_size to return a new enum type.\nI broke this out into a separate patch because it simplifies a\nsubsequent patch.\n\ngdb/ChangeLog\n2020-02-22  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.h (enum tui_adjust_result): New.\n\t(class tui_layout_base) <adjust_size>: Return tui_adjust_result.\n\t(class tui_layout_window) <adjust_size>: Return\n\ttui_adjust_result.  Rewrite.\n\t(class tui_layout_split) <adjust_size>: Return tui_adjust_result.\n\t* tui/tui-layout.c (tui_layout_split::adjust_size): Update.\n\nChange-Id: I821b48ab06a9b9485875e147bd08a3bc46b900a0",
    "tree": {
      "sha": "1239ed8288fde31acffa27c08b1e0f07c9a58324",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1239ed8288fde31acffa27c08b1e0f07c9a58324"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6bc5664858d6869513b9b98861c813675231e5b5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6bc5664858d6869513b9b98861c813675231e5b5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6bc5664858d6869513b9b98861c813675231e5b5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6bc5664858d6869513b9b98861c813675231e5b5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c22fef7e4cf9d3cb6d7062d248b0cc148dc76137",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c22fef7e4cf9d3cb6d7062d248b0cc148dc76137",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c22fef7e4cf9d3cb6d7062d248b0cc148dc76137"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 34,
    "deletions": 12
  },
  "files": [
    {
      "sha": "cb7160622e20dbfb722dcb392c273a0f25beca1f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bc5664858d6869513b9b98861c813675231e5b5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bc5664858d6869513b9b98861c813675231e5b5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6bc5664858d6869513b9b98861c813675231e5b5",
      "patch": "@@ -1,3 +1,12 @@\n+2020-02-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.h (enum tui_adjust_result): New.\n+\t(class tui_layout_base) <adjust_size>: Return tui_adjust_result.\n+\t(class tui_layout_window) <adjust_size>: Return\n+\ttui_adjust_result.  Rewrite.\n+\t(class tui_layout_split) <adjust_size>: Return tui_adjust_result.\n+\t* tui/tui-layout.c (tui_layout_split::adjust_size): Update.\n+\n 2020-02-22  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.h (class tui_layout_split) <add_split>: Change"
    },
    {
      "sha": "e1833cd44e5faa09bbc3e56097838809a08655dd",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bc5664858d6869513b9b98861c813675231e5b5/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bc5664858d6869513b9b98861c813675231e5b5/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=6bc5664858d6869513b9b98861c813675231e5b5",
      "patch": "@@ -487,7 +487,7 @@ tui_layout_split::set_weights_from_heights ()\n \n /* See tui-layout.h.  */\n \n-bool\n+tui_adjust_result\n tui_layout_split::adjust_size (const char *name, int new_height)\n {\n   /* Look through the children.  If one is a layout holding the named\n@@ -496,20 +496,21 @@ tui_layout_split::adjust_size (const char *name, int new_height)\n   int found_index = -1;\n   for (int i = 0; i < m_splits.size (); ++i)\n     {\n-      if (m_splits[i].layout->adjust_size (name, new_height))\n-\treturn true;\n-      const char *win_name = m_splits[i].layout->get_name ();\n-      if (win_name != nullptr && strcmp (name, win_name) == 0)\n+      tui_adjust_result adjusted\n+\t= m_splits[i].layout->adjust_size (name, new_height);\n+      if (adjusted == HANDLED)\n+\treturn HANDLED;\n+      if (adjusted == FOUND)\n \t{\n \t  found_index = i;\n \t  break;\n \t}\n     }\n \n   if (found_index == -1)\n-    return false;\n+    return NOT_FOUND;\n   if (m_splits[found_index].layout->height == new_height)\n-    return true;\n+    return HANDLED;\n \n   set_weights_from_heights ();\n   int delta = m_splits[found_index].weight - new_height;\n@@ -557,7 +558,7 @@ tui_layout_split::adjust_size (const char *name, int new_height)\n       apply (x, y, width, height);\n     }\n \n-  return true;\n+  return HANDLED;\n }\n \n /* See tui-layout.h.  */"
    },
    {
      "sha": "969e4dfd2319d3e444962327200381a6a4020af7",
      "filename": "gdb/tui/tui-layout.h",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bc5664858d6869513b9b98861c813675231e5b5/gdb/tui/tui-layout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bc5664858d6869513b9b98861c813675231e5b5/gdb/tui/tui-layout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.h?ref=6bc5664858d6869513b9b98861c813675231e5b5",
      "patch": "@@ -27,6 +27,18 @@\n #include \"tui/tui.h\"\n #include \"tui/tui-data.h\"\n \n+/* Values that can be returned when handling a request to adjust a\n+   window's size.  */\n+enum tui_adjust_result\n+{\n+  /* Requested window was not found here.  */\n+  NOT_FOUND,\n+  /* Window was found but not handled.  */\n+  FOUND,\n+  /* Window was found and handled.  */\n+  HANDLED\n+};\n+\n /* The basic object in a TUI layout.  This represents a single piece\n    of screen real estate.  Subclasses determine the exact\n    behavior.  */\n@@ -64,7 +76,7 @@ class tui_layout_base\n \n   /* Adjust the size of the window named NAME to NEW_HEIGHT, updating\n      the sizes of the other windows around it.  */\n-  virtual bool adjust_size (const char *name, int new_height) = 0;\n+  virtual tui_adjust_result adjust_size (const char *name, int new_height) = 0;\n \n   /* Remove some windows from the layout, leaving the command window\n      and the window being passed in here.  */\n@@ -111,9 +123,9 @@ class tui_layout_window : public tui_layout_base\n     return m_contents.c_str ();\n   }\n \n-  bool adjust_size (const char *name, int new_height) override\n+  tui_adjust_result adjust_size (const char *name, int new_height) override\n   {\n-    return false;\n+    return m_contents == name ? FOUND : NOT_FOUND;\n   }\n \n   bool top_boxed_p () const override;\n@@ -165,7 +177,7 @@ class tui_layout_split : public tui_layout_base\n \n   void apply (int x, int y, int width, int height) override;\n \n-  bool adjust_size (const char *name, int new_height) override;\n+  tui_adjust_result adjust_size (const char *name, int new_height) override;\n \n   bool top_boxed_p () const override;\n "
    }
  ]
}