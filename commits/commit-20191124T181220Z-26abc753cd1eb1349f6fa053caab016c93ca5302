{
  "sha": "26abc753cd1eb1349f6fa053caab016c93ca5302",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjZhYmM3NTNjZDFlYjEzNDlmNmZhMDUzY2FhYjAxNmM5M2NhNTMwMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-24T18:12:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-24T18:12:20Z"
    },
    "message": "Use bool in require_partial_symbols\n\nThis changes require_partial_symbols to use bool as its parameter\ntype.\n\ngdb/ChangeLog\n2019-11-24  Tom Tromey  <tom@tromey.com>\n\n\t* symfile.c (read_symbols): Update.\n\t* psymtab.c (require_partial_symbols): Change type of \"verbose\" to\n\tbool.\n\t(psym_map_symtabs_matching_filename, find_pc_sect_psymtab)\n\t(psym_lookup_symbol, psym_find_last_source_symtab)\n\t(psym_forget_cached_source_info, psym_print_stats)\n\t(psym_expand_symtabs_for_function, psym_expand_all_symtabs)\n\t(psym_expand_symtabs_with_fullname, psym_map_symbol_filenames)\n\t(psym_map_matching_symbols, psym_expand_symtabs_matching)\n\t(psym_find_compunit_symtab_by_address)\n\t(maintenance_print_psymbols, maintenance_info_psymtabs)\n\t(maintenance_check_psymtabs): Update.\n\t* psymtab.h (require_partial_symbols): Change type of \"verbose\" to\n\tbool.\n\nChange-Id: Iae87aa5e4590706bb9e90a33adb86f1fe0fbf3c7",
    "tree": {
      "sha": "3b88d92efe5087b62cc52e6815e80b831c2cfccb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3b88d92efe5087b62cc52e6815e80b831c2cfccb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/26abc753cd1eb1349f6fa053caab016c93ca5302",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26abc753cd1eb1349f6fa053caab016c93ca5302",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/26abc753cd1eb1349f6fa053caab016c93ca5302",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26abc753cd1eb1349f6fa053caab016c93ca5302/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "48d4af36c5fd9f9801fb91d7ca31f8d004939c09",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48d4af36c5fd9f9801fb91d7ca31f8d004939c09",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/48d4af36c5fd9f9801fb91d7ca31f8d004939c09"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 37,
    "deletions": 20
  },
  "files": [
    {
      "sha": "63a1508c49ba3be9436c0798017f3e5ce05ffdf9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=26abc753cd1eb1349f6fa053caab016c93ca5302",
      "patch": "@@ -1,3 +1,20 @@\n+2019-11-24  Tom Tromey  <tom@tromey.com>\n+\n+\t* symfile.c (read_symbols): Update.\n+\t* psymtab.c (require_partial_symbols): Change type of \"verbose\" to\n+\tbool.\n+\t(psym_map_symtabs_matching_filename, find_pc_sect_psymtab)\n+\t(psym_lookup_symbol, psym_find_last_source_symtab)\n+\t(psym_forget_cached_source_info, psym_print_stats)\n+\t(psym_expand_symtabs_for_function, psym_expand_all_symtabs)\n+\t(psym_expand_symtabs_with_fullname, psym_map_symbol_filenames)\n+\t(psym_map_matching_symbols, psym_expand_symtabs_matching)\n+\t(psym_find_compunit_symtab_by_address)\n+\t(maintenance_print_psymbols, maintenance_info_psymtabs)\n+\t(maintenance_check_psymtabs): Update.\n+\t* psymtab.h (require_partial_symbols): Change type of \"verbose\" to\n+\tbool.\n+\n 2019-11-22  Tom Tromey  <tom@tromey.com>\n \n \t* observable.h: Update comments."
    },
    {
      "sha": "7074a32956aada55e3c8a24c5f146bb3c43505e3",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=26abc753cd1eb1349f6fa053caab016c93ca5302",
      "patch": "@@ -94,7 +94,7 @@ psymtab_storage::allocate_psymtab ()\n /* See psymtab.h.  */\n \n psymtab_storage::partial_symtab_range\n-require_partial_symbols (struct objfile *objfile, int verbose)\n+require_partial_symbols (struct objfile *objfile, bool verbose)\n {\n   if ((objfile->flags & OBJF_PSYMTABS_READ) == 0)\n     {\n@@ -161,7 +161,7 @@ psym_map_symtabs_matching_filename\n {\n   const char *name_basename = lbasename (name);\n \n-  for (partial_symtab *pst : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *pst : require_partial_symbols (objfile, true))\n     {\n       /* We can skip shared psymtabs here, because any file name will be\n \t attached to the unshared psymtab.  */\n@@ -364,7 +364,7 @@ find_pc_sect_psymtab (struct objfile *objfile, CORE_ADDR pc,\n      its CUs may be missing in PSYMTABS_ADDRMAP as they may be varying\n      debug info type in single OBJFILE.  */\n \n-  for (partial_symtab *pst : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *pst : require_partial_symbols (objfile, true))\n     if (!pst->psymtabs_addrmap_supported\n \t&& pc >= pst->text_low (objfile) && pc < pst->text_high (objfile))\n       {\n@@ -490,7 +490,7 @@ psym_lookup_symbol (struct objfile *objfile,\n \n   lookup_name_info lookup_name (name, symbol_name_match_type::FULL);\n \n-  for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     {\n       if (!ps->readin && lookup_partial_symbol (objfile, ps, name,\n \t\t\t\t\t\tpsymtab_index, domain))\n@@ -780,7 +780,7 @@ psym_find_last_source_symtab (struct objfile *ofp)\n {\n   struct partial_symtab *cs_pst = NULL;\n \n-  for (partial_symtab *ps : require_partial_symbols (ofp, 1))\n+  for (partial_symtab *ps : require_partial_symbols (ofp, true))\n     {\n       const char *name = ps->filename;\n       int len = strlen (name);\n@@ -816,7 +816,7 @@ psym_find_last_source_symtab (struct objfile *ofp)\n static void\n psym_forget_cached_source_info (struct objfile *objfile)\n {\n-  for (partial_symtab *pst : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *pst : require_partial_symbols (objfile, true))\n     {\n       if (pst->fullname != NULL)\n \t{\n@@ -1007,7 +1007,7 @@ psym_print_stats (struct objfile *objfile)\n   int i;\n \n   i = 0;\n-  for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     {\n       if (ps->readin == 0)\n \ti++;\n@@ -1047,7 +1047,7 @@ static void\n psym_expand_symtabs_for_function (struct objfile *objfile,\n \t\t\t\t  const char *func_name)\n {\n-  for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     {\n       if (ps->readin)\n \tcontinue;\n@@ -1066,7 +1066,7 @@ psym_expand_symtabs_for_function (struct objfile *objfile,\n static void\n psym_expand_all_symtabs (struct objfile *objfile)\n {\n-  for (partial_symtab *psymtab : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *psymtab : require_partial_symbols (objfile, true))\n     psymtab_to_symtab (objfile, psymtab);\n }\n \n@@ -1077,7 +1077,7 @@ static void\n psym_expand_symtabs_with_fullname (struct objfile *objfile,\n \t\t\t\t   const char *fullname)\n {\n-  for (partial_symtab *p : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *p : require_partial_symbols (objfile, true))\n     {\n       /* Anonymous psymtabs don't have a name of a source file.  */\n       if (p->anonymous)\n@@ -1100,7 +1100,7 @@ psym_map_symbol_filenames (struct objfile *objfile,\n \t\t\t   symbol_filename_ftype *fun, void *data,\n \t\t\t   int need_fullname)\n {\n-  for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     {\n       const char *fullname;\n \n@@ -1181,7 +1181,7 @@ psym_map_matching_symbols\n {\n   const int block_kind = global ? GLOBAL_BLOCK : STATIC_BLOCK;\n \n-  for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     {\n       QUIT;\n       if (ps->readin\n@@ -1312,7 +1312,7 @@ psym_expand_symtabs_matching\n   lookup_name_info lookup_name = lookup_name_in.make_ignore_params ();\n \n   /* Clear the search flags.  */\n-  for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+  for (partial_symtab *ps : require_partial_symbols (objfile, true))\n     ps->searched_flag = PST_NOT_SEARCHED;\n \n   for (partial_symtab *ps : objfile->psymtabs ())\n@@ -1406,7 +1406,7 @@ psym_find_compunit_symtab_by_address (struct objfile *objfile,\n     {\n       std::set<CORE_ADDR> seen_addrs;\n \n-      for (partial_symtab *pst : require_partial_symbols (objfile, 1))\n+      for (partial_symtab *pst : require_partial_symbols (objfile, true))\n \t{\n \t  psym_fill_psymbol_map (objfile, pst,\n \t\t\t\t &seen_addrs,\n@@ -1901,7 +1901,7 @@ maintenance_print_psymbols (const char *args, int from_tty)\n \t}\n       else\n \t{\n-\t  for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+\t  for (partial_symtab *ps : require_partial_symbols (objfile, true))\n \t    {\n \t      int print_for_source = 0;\n \n@@ -1966,7 +1966,7 @@ maintenance_info_psymtabs (const char *regexp, int from_tty)\n \t   actually find a symtab whose name matches.  */\n \tint printed_objfile_start = 0;\n \n-\tfor (partial_symtab *psymtab : require_partial_symbols (objfile, 1))\n+\tfor (partial_symtab *psymtab : require_partial_symbols (objfile, true))\n \t  {\n \t    QUIT;\n \n@@ -2072,7 +2072,7 @@ maintenance_check_psymtabs (const char *ignore, int from_tty)\n   int length;\n \n   for (objfile *objfile : current_program_space->objfiles ())\n-    for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n+    for (partial_symtab *ps : require_partial_symbols (objfile, true))\n       {\n \tstruct gdbarch *gdbarch = get_objfile_arch (objfile);\n "
    },
    {
      "sha": "a4ac35a7916b12393ea612043cd1a017554af9d7",
      "filename": "gdb/psymtab.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/psymtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/psymtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.h?ref=26abc753cd1eb1349f6fa053caab016c93ca5302",
      "patch": "@@ -147,11 +147,11 @@ extern const struct quick_symbol_functions dwarf2_gdb_index_functions;\n extern const struct quick_symbol_functions dwarf2_debug_names_functions;\n \n /* Ensure that the partial symbols for OBJFILE have been loaded.  If\n-   VERBOSE is non-zero, then this will print a message when symbols\n+   VERBOSE is true, then this will print a message when symbols\n    are loaded.  This function returns a range adapter suitable for\n    iterating over the psymtabs of OBJFILE.  */\n \n extern psymtab_storage::partial_symtab_range require_partial_symbols\n-    (struct objfile *objfile, int verbose);\n+    (struct objfile *objfile, bool verbose);\n \n #endif /* PSYMTAB_H */"
    },
    {
      "sha": "aec07d7a7abd5d3a788b97c69ce6637707e8b6cc",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/26abc753cd1eb1349f6fa053caab016c93ca5302/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=26abc753cd1eb1349f6fa053caab016c93ca5302",
      "patch": "@@ -809,7 +809,7 @@ read_symbols (struct objfile *objfile, symfile_add_flags add_flags)\n \t}\n     }\n   if ((add_flags & SYMFILE_NO_READ) == 0)\n-    require_partial_symbols (objfile, 0);\n+    require_partial_symbols (objfile, false);\n }\n \n /* Initialize entry point information for this objfile.  */"
    }
  ]
}