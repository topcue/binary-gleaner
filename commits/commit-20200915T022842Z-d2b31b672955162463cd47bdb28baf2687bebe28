{
  "sha": "d2b31b672955162463cd47bdb28baf2687bebe28",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDJiMzFiNjcyOTU1MTYyNDYzY2Q0N2JkYjI4YmFmMjY4N2JlYmUyOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-09-15T02:28:42Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-09-15T02:28:42Z"
    },
    "message": "gdb: introduce debuginfod_client_up type\n\nIntroduce and use a unique pointer specialization for the\ndebuginfod_client type.  The deleter calls debuginfod_end to free the\nclient.\n\ngdb/ChangeLog:\n\n\t* debuginfod-support.c (debuginfod_client_deleter): New.\n\t(debuginfod_client_up): New.\n\t(debuginfod_init): Return debuginfod_client_up.\n\t(debuginfod_source_query): Adjust.\n\t(debuginfod_debuginfo_query): Adjust.\n\nChange-Id: Ie56441e123ab80b78e5311c824c162cd804f68c0",
    "tree": {
      "sha": "42ae1f1000d747df74b0b2e64bb98f80c39b407d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/42ae1f1000d747df74b0b2e64bb98f80c39b407d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d2b31b672955162463cd47bdb28baf2687bebe28",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2b31b672955162463cd47bdb28baf2687bebe28",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d2b31b672955162463cd47bdb28baf2687bebe28",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2b31b672955162463cd47bdb28baf2687bebe28/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3246bd8ec50fa312403a8629bcad798a1dbbbc0f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3246bd8ec50fa312403a8629bcad798a1dbbbc0f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3246bd8ec50fa312403a8629bcad798a1dbbbc0f"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 32,
    "deletions": 11
  },
  "files": [
    {
      "sha": "7ed944aa97617def2276918118333b8f1fa17e54",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d2b31b672955162463cd47bdb28baf2687bebe28/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d2b31b672955162463cd47bdb28baf2687bebe28/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d2b31b672955162463cd47bdb28baf2687bebe28",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* debuginfod-support.c (debuginfod_client_deleter): New.\n+\t(debuginfod_client_up): New.\n+\t(debuginfod_init): Return debuginfod_client_up.\n+\t(debuginfod_source_query): Adjust.\n+\t(debuginfod_debuginfo_query): Adjust.\n+\n 2020-09-14  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* debuginfod-support.c (debuginfod_source_query): Use"
    },
    {
      "sha": "ae0f4c6c437d201f4fe6b26b9c727675a8a9f48d",
      "filename": "gdb/debuginfod-support.c",
      "status": "modified",
      "additions": 24,
      "deletions": 11,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d2b31b672955162463cd47bdb28baf2687bebe28/gdb/debuginfod-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d2b31b672955162463cd47bdb28baf2687bebe28/gdb/debuginfod-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/debuginfod-support.c?ref=d2b31b672955162463cd47bdb28baf2687bebe28",
      "patch": "@@ -54,6 +54,19 @@ struct user_data\n   bool has_printed;\n };\n \n+/* Deleter for a debuginfod_client.  */\n+\n+struct debuginfod_client_deleter\n+{\n+  void operator() (debuginfod_client *c)\n+  {\n+    debuginfod_end (c);\n+  }\n+};\n+\n+using debuginfod_client_up\n+  = std::unique_ptr<debuginfod_client, debuginfod_client_deleter>;\n+\n static int\n progressfn (debuginfod_client *c, long cur, long total)\n {\n@@ -79,13 +92,13 @@ progressfn (debuginfod_client *c, long cur, long total)\n   return 0;\n }\n \n-static debuginfod_client *\n+static debuginfod_client_up\n debuginfod_init ()\n {\n-  debuginfod_client *c = debuginfod_begin ();\n+  debuginfod_client_up c (debuginfod_begin ());\n \n   if (c != nullptr)\n-    debuginfod_set_progressfn (c, progressfn);\n+    debuginfod_set_progressfn (c.get (), progressfn);\n \n   return c;\n }\n@@ -101,15 +114,15 @@ debuginfod_source_query (const unsigned char *build_id,\n   if (getenv (DEBUGINFOD_URLS_ENV_VAR) == NULL)\n     return scoped_fd (-ENOSYS);\n \n-  debuginfod_client *c = debuginfod_init ();\n+  debuginfod_client_up c = debuginfod_init ();\n \n   if (c == nullptr)\n     return scoped_fd (-ENOMEM);\n \n   user_data data (\"source file\", srcpath);\n \n-  debuginfod_set_user_data (c, &data);\n-  scoped_fd fd (debuginfod_find_source (c,\n+  debuginfod_set_user_data (c.get (), &data);\n+  scoped_fd fd (debuginfod_find_source (c.get (),\n \t\t\t\t\tbuild_id,\n \t\t\t\t\tbuild_id_len,\n \t\t\t\t\tsrcpath,\n@@ -123,7 +136,6 @@ debuginfod_source_query (const unsigned char *build_id,\n   else\n     *destname = make_unique_xstrdup (srcpath);\n \n-  debuginfod_end (c);\n   return fd;\n }\n \n@@ -138,24 +150,25 @@ debuginfod_debuginfo_query (const unsigned char *build_id,\n   if (getenv (DEBUGINFOD_URLS_ENV_VAR) == NULL)\n     return scoped_fd (-ENOSYS);\n \n-  debuginfod_client *c = debuginfod_init ();\n+  debuginfod_client_up c = debuginfod_init ();\n \n   if (c == nullptr)\n     return scoped_fd (-ENOMEM);\n \n   char *dname = nullptr;\n   user_data data (\"separate debug info for\", filename);\n \n-  debuginfod_set_user_data (c, &data);\n-  scoped_fd fd (debuginfod_find_debuginfo (c, build_id, build_id_len, &dname));\n+  debuginfod_set_user_data (c.get (), &data);\n+  scoped_fd fd (debuginfod_find_debuginfo (c.get (), build_id, build_id_len,\n+\t\t\t\t\t   &dname));\n \n   if (fd.get () < 0 && fd.get () != -ENOENT)\n     printf_filtered (_(\"Download failed: %s.  Continuing without debug info for %ps.\\n\"),\n \t\t     safe_strerror (-fd.get ()),\n \t\t     styled_string (file_name_style.style (),  filename));\n \n   destname->reset (dname);\n-  debuginfod_end (c);\n+\n   return fd;\n }\n #endif"
    }
  ]
}