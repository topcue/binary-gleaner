{
  "sha": "05fb05a94729473cb04b1299fe5c36e06525c78f",
  "node_id": "C_kwDOANOeidoAKDA1ZmIwNWE5NDcyOTQ3M2NiMDRiMTI5OWZlNWMzNmUwNjUyNWM3OGY",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-09-24T20:06:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-10-19T19:03:58Z"
    },
    "message": "Fix bug in dynamic type resolution\n\nA customer-reported problem led us to a bug in dynamic type\nresolution.  resolve_dynamic_struct will recursively call\nresolve_dynamic_type_internal, passing it the sub-object for the\nparticular field being resolved.  While it offsets the address here,\nit does not also offset the \"valaddr\" -- the array of bytes describing\nthe memory.\n\nThis patch fixes the bug, by offsetting both.  A test case is included\nthat can be used to reproduce the bug.",
    "tree": {
      "sha": "aedea01744e7289d9faef886a9ab2a2931edbdca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aedea01744e7289d9faef886a9ab2a2931edbdca"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/05fb05a94729473cb04b1299fe5c36e06525c78f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05fb05a94729473cb04b1299fe5c36e06525c78f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/05fb05a94729473cb04b1299fe5c36e06525c78f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05fb05a94729473cb04b1299fe5c36e06525c78f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d7c68312bdeca52e242326e5cf155e0aa63268bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7c68312bdeca52e242326e5cf155e0aa63268bb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d7c68312bdeca52e242326e5cf155e0aa63268bb"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 35,
    "deletions": 3
  },
  "files": [
    {
      "sha": "3110395b7cb25bb5e85a936897046387aede20d3",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fb05a94729473cb04b1299fe5c36e06525c78f/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fb05a94729473cb04b1299fe5c36e06525c78f/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=05fb05a94729473cb04b1299fe5c36e06525c78f",
      "patch": "@@ -2615,10 +2615,11 @@ resolve_dynamic_struct (struct type *type,\n \t\t \" (invalid location kind)\"));\n \n       pinfo.type = check_typedef (resolved_type->field (i).type ());\n+      size_t offset = TYPE_FIELD_BITPOS (resolved_type, i) / TARGET_CHAR_BIT;\n       pinfo.valaddr = addr_stack->valaddr;\n-      pinfo.addr\n-\t= (addr_stack->addr\n-\t   + (TYPE_FIELD_BITPOS (resolved_type, i) / TARGET_CHAR_BIT));\n+      if (!pinfo.valaddr.empty ())\n+\tpinfo.valaddr = pinfo.valaddr.slice (offset);\n+      pinfo.addr = addr_stack->addr + offset;\n       pinfo.next = addr_stack;\n \n       resolved_type->field (i).set_type"
    },
    {
      "sha": "f8f4d9c130b8b9507fc27c79b878c3dd64a49a1a",
      "filename": "gdb/testsuite/gdb.ada/array_of_variant.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fb05a94729473cb04b1299fe5c36e06525c78f/gdb/testsuite/gdb.ada/array_of_variant.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fb05a94729473cb04b1299fe5c36e06525c78f/gdb/testsuite/gdb.ada/array_of_variant.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/array_of_variant.exp?ref=05fb05a94729473cb04b1299fe5c36e06525c78f",
      "patch": "@@ -97,4 +97,15 @@ foreach_with_prefix scenario {all minimal} {\n \t    [string_to_regexp \"$v2\"] \\\n \t    \"python print second array element\"\n     }\n+\n+    set av1 \"(initial => 0, rest => (tag => unused, cval => 88 'X'))\"\n+    set av2 \"(initial => 0, rest => (tag => object, ival => 88))\"\n+    set full \"($av1, $av2)\"\n+\n+    gdb_test \"print another_array(1)\" \" = [string_to_regexp $av1]\" \\\n+\t\"print first element of another_array\"\n+    gdb_test \"print another_array(2)\" \" = [string_to_regexp $av2]\" \\\n+\t\"print second element of another_array\"\n+    gdb_test \"print another_array\" \" = [string_to_regexp $full]\" \\\n+\t\"print another_array\"\n }"
    },
    {
      "sha": "bf087af81b5003c7abc68c65bbf0e518a2d52b12",
      "filename": "gdb/testsuite/gdb.ada/array_of_variant/p.adb",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fb05a94729473cb04b1299fe5c36e06525c78f/gdb/testsuite/gdb.ada/array_of_variant/p.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fb05a94729473cb04b1299fe5c36e06525c78f/gdb/testsuite/gdb.ada/array_of_variant/p.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/array_of_variant/p.adb?ref=05fb05a94729473cb04b1299fe5c36e06525c78f",
      "patch": "@@ -33,7 +33,27 @@ procedure P is\n \n    Objects : array (1 .. 2) of Payload_T;\n \n+   type Another_Type (Tag : Tag_T := Unused) is\n+      record\n+         case Tag is\n+\t    when Unused =>\n+\t       CVal : Character;\n+            when Object =>\n+\t       IVal : Integer;\n+\t end case;\n+      end record;\n+\n+   type Enclosing is record\n+      Initial : Integer;\n+      Rest : Another_Type;\n+   end record;\n+\n+   Another_Array : array (1 .. 2) of Enclosing\n+      := ((Initial => 0, Rest => (Tag => Unused, CVal => 'X')),\n+          (Initial => 0, Rest => (Tag => Object, IVal => 88)));\n+\n begin\n    Objects (1) := (Tag => Object, Values => (others => 2));\n    Do_Nothing (Objects'Address);  --  START\n+   Do_Nothing (Another_Array'Address);\n end P;"
    }
  ]
}