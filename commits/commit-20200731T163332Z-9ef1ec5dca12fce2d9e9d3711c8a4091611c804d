{
  "sha": "9ef1ec5dca12fce2d9e9d3711c8a4091611c804d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWVmMWVjNWRjYTEyZmNlMmQ5ZTlkMzcxMWM4YTQwOTE2MTFjODA0ZA==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2020-07-31T03:09:05Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2020-07-31T16:33:32Z"
    },
    "message": "Fix gdb.base/corefile2.exp test case for ppc64le\n\nIt turns out that the recently added gdb.base/corefile2.exp test won't\nrun on ppc64le linux.  The test case fails the internal checks which\nensure that a mmap'd region can be placed within the statically\nallocated regions buf_rw[] and buf_ro[].\n\nppc64le linux apparently has 64k pages, which is much larger than\nthe 24k regions originally allocated for buf_rw[] and buf_ro[].\n\nThis patch increases the size of each region to 256 KiB.\n\nTested on either rawhide or Fedora 32 for these architectures: x86_64,\nx86_64/-m32, ppc64le, aarch64, and s390x.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/coremaker2.c (buf_rw): Increase size to 256 KiB.\n\t(C5_24k): Delete.\n\t(C5_8k, C5_64k, C5_256k): New macros.\n\t(buf_ro): Allocate 256 KiB of initialized data.",
    "tree": {
      "sha": "d1be5fb97d35d35ab74fe1eef34c4e3cdda35785",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1be5fb97d35d35ab74fe1eef34c4e3cdda35785"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 22,
    "deletions": 12
  },
  "files": [
    {
      "sha": "4e7bcbe6ac6d32a7a7adef5fa444220f7e0da166",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9ef1ec5dca12fce2d9e9d3711c8a4091611c804d",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-31  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* gdb.base/coremaker2.c (buf_rw): Increase size to 256 KiB.\n+\t(C5_24k): Delete.\n+\t(C5_8k, C5_64k, C5_256k): New macros.\n+\t(buf_ro): Allocate 256 KiB of initialized data.\n+\n 2020-07-30  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.base/condbreak-bad.exp: Extend the test with scenarios"
    },
    {
      "sha": "3c89bd790bd6ad9aca0aa038b567012e4a9d788a",
      "filename": "gdb/testsuite/gdb.base/coremaker2.c",
      "status": "modified",
      "additions": 15,
      "deletions": 12,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d/gdb/testsuite/gdb.base/coremaker2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef1ec5dca12fce2d9e9d3711c8a4091611c804d/gdb/testsuite/gdb.base/coremaker2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/coremaker2.c?ref=9ef1ec5dca12fce2d9e9d3711c8a4091611c804d",
      "patch": "@@ -47,12 +47,8 @@ unsigned long long addr;\n char *mbuf_ro;\n char *mbuf_rw;\n \n-/* 24 KiB buffer.  */\n-char buf_rw[24 * 1024];\n-\n-/* 24 KiB worth of data.  For this test case, we can't allocate a\n-   buffer and then fill it; we want GDB to have to read this data\n-   from the executable; it should NOT find it in the core file.  */\n+/* 256 KiB buffer.  */\n+char buf_rw[256 * 1024];\n \n #define C5_16 \\\n   0xc5, 0xc5, 0xc5, 0xc5, \\\n@@ -69,15 +65,22 @@ char buf_rw[24 * 1024];\n #define C5_1k \\\n   C5_256, C5_256, C5_256, C5_256\n \n-#define C5_24k \\\n-  C5_1k, C5_1k, C5_1k, C5_1k, \\\n-  C5_1k, C5_1k, C5_1k, C5_1k, \\\n-  C5_1k, C5_1k, C5_1k, C5_1k, \\\n-  C5_1k, C5_1k, C5_1k, C5_1k, \\\n+#define C5_8k \\\n   C5_1k, C5_1k, C5_1k, C5_1k, \\\n   C5_1k, C5_1k, C5_1k, C5_1k\n \n-const char buf_ro[] = { C5_24k };\n+#define C5_64k \\\n+  C5_8k, C5_8k, C5_8k, C5_8k, \\\n+  C5_8k, C5_8k, C5_8k, C5_8k\n+\n+#define C5_256k \\\n+  C5_64k, C5_64k, C5_64k, C5_64k\n+\n+/* 256 KiB worth of data.  For this test case, we can't allocate a\n+   buffer and then fill it; we want GDB to have to read this data\n+   from the executable; it should NOT find it in the core file.  */\n+\n+const char buf_ro[] = { C5_256k };\n \n int\n main (int argc, char **argv)"
    }
  ]
}