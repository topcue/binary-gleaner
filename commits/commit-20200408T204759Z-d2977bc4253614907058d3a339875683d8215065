{
  "sha": "d2977bc4253614907058d3a339875683d8215065",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDI5NzdiYzQyNTM2MTQ5MDcwNThkM2EzMzk4NzU2ODNkODIxNTA2NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:33:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:47:59Z"
    },
    "message": "Introduce fetch_pending_stop\n\nThis introduces a new \"fetch_pending_stop\" function and changes gdb to\nuse it.  This function removes the first matching pending stop from\nthe list of such stops.\n\ngdb/ChangeLog\n2020-04-08  Tom Tromey  <tromey@adacore.com>\n\n\t* windows-nat.c (get_windows_debug_event): Use\n\tfetch_pending_stop.\n\t* nat/windows-nat.h (fetch_pending_stop): Declare.\n\t* nat/windows-nat.c (fetch_pending_stop): New function.",
    "tree": {
      "sha": "606cb0b2f1e932e05e87c79077c1dba0253616aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/606cb0b2f1e932e05e87c79077c1dba0253616aa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d2977bc4253614907058d3a339875683d8215065",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2977bc4253614907058d3a339875683d8215065",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d2977bc4253614907058d3a339875683d8215065",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2977bc4253614907058d3a339875683d8215065/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e758e19c596f8d0683f6c8ca750eb4e79071523d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e758e19c596f8d0683f6c8ca750eb4e79071523d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e758e19c596f8d0683f6c8ca750eb4e79071523d"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 51,
    "deletions": 20
  },
  "files": [
    {
      "sha": "738c6c2d779e1672fab7b067dd98460e3925ee84",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d2977bc4253614907058d3a339875683d8215065/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d2977bc4253614907058d3a339875683d8215065/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d2977bc4253614907058d3a339875683d8215065",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* windows-nat.c (get_windows_debug_event): Use\n+\tfetch_pending_stop.\n+\t* nat/windows-nat.h (fetch_pending_stop): Declare.\n+\t* nat/windows-nat.c (fetch_pending_stop): New function.\n+\n 2020-04-08  Tom Tromey  <tromey@adacore.com>\n \n \t* windows-nat.c (windows_continue): Use matching_pending_stop and"
    },
    {
      "sha": "823471eb4dabe18872a4142a98f3821c7e56e8ed",
      "filename": "gdb/nat/windows-nat.c",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d2977bc4253614907058d3a339875683d8215065/gdb/nat/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d2977bc4253614907058d3a339875683d8215065/gdb/nat/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/windows-nat.c?ref=d2977bc4253614907058d3a339875683d8215065",
      "patch": "@@ -343,6 +343,34 @@ matching_pending_stop (bool debug_events)\n \n /* See nat/windows-nat.h.  */\n \n+gdb::optional<pending_stop>\n+fetch_pending_stop (bool debug_events)\n+{\n+  gdb::optional<pending_stop> result;\n+  for (auto iter = pending_stops.begin ();\n+       iter != pending_stops.end ();\n+       ++iter)\n+    {\n+      if (desired_stop_thread_id == -1\n+\t  || desired_stop_thread_id == iter->thread_id)\n+\t{\n+\t  result = *iter;\n+\t  current_event = iter->event;\n+\n+\t  DEBUG_EVENTS ((\"get_windows_debug_event - \"\n+\t\t\t \"pending stop found in 0x%x (desired=0x%x)\\n\",\n+\t\t\t iter->thread_id, desired_stop_thread_id));\n+\n+\t  pending_stops.erase (iter);\n+\t  break;\n+\t}\n+    }\n+\n+  return result;\n+}\n+\n+/* See nat/windows-nat.h.  */\n+\n BOOL\n continue_last_debug_event (DWORD continue_status, bool debug_events)\n {"
    },
    {
      "sha": "68b72d4bbd205f01abaadaee585e758725060817",
      "filename": "gdb/nat/windows-nat.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d2977bc4253614907058d3a339875683d8215065/gdb/nat/windows-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d2977bc4253614907058d3a339875683d8215065/gdb/nat/windows-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/windows-nat.h?ref=d2977bc4253614907058d3a339875683d8215065",
      "patch": "@@ -22,6 +22,7 @@\n #include <windows.h>\n #include <vector>\n \n+#include \"gdbsupport/gdb_optional.h\"\n #include \"target/waitstatus.h\"\n \n namespace windows_nat\n@@ -231,6 +232,12 @@ extern handle_exception_result handle_exception\n \n extern bool matching_pending_stop (bool debug_events);\n \n+/* See if a pending stop matches DESIRED_STOP_THREAD_ID.  If so,\n+   remove it from the list of pending stops, set 'current_event', and\n+   return it.  Otherwise, return an empty optional.  */\n+\n+extern gdb::optional<pending_stop> fetch_pending_stop (bool debug_events);\n+\n /* A simple wrapper for ContinueDebugEvent that continues the last\n    waited-for event.  If DEBUG_EVENTS is true, logging will be\n    enabled.  */"
    },
    {
      "sha": "2ee7a2412a9b1dd5e93756871e40bcf185c655f6",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 9,
      "deletions": 20,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d2977bc4253614907058d3a339875683d8215065/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d2977bc4253614907058d3a339875683d8215065/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=d2977bc4253614907058d3a339875683d8215065",
      "patch": "@@ -1522,29 +1522,18 @@ windows_nat_target::get_windows_debug_event (int pid,\n   /* If there is a relevant pending stop, report it now.  See the\n      comment by the definition of \"pending_stops\" for details on why\n      this is needed.  */\n-  for (auto iter = pending_stops.begin ();\n-       iter != pending_stops.end ();\n-       ++iter)\n+  gdb::optional<pending_stop> stop = fetch_pending_stop (debug_events);\n+  if (stop.has_value ())\n     {\n-      if (desired_stop_thread_id == -1\n-\t  || desired_stop_thread_id == iter->thread_id)\n-\t{\n-\t  thread_id = iter->thread_id;\n-\t  *ourstatus = iter->status;\n-\t  current_event = iter->event;\n-\n-\t  inferior_ptid = ptid_t (current_event.dwProcessId, thread_id, 0);\n-\t  current_windows_thread = thread_rec (inferior_ptid,\n-\t\t\t\t\t       INVALIDATE_CONTEXT);\n-\t  current_windows_thread->reload_context = 1;\n+      thread_id = stop->thread_id;\n+      *ourstatus = stop->status;\n \n-\t  DEBUG_EVENTS ((\"get_windows_debug_event - \"\n-\t\t\t \"pending stop found in 0x%x (desired=0x%x)\\n\",\n-\t\t\t thread_id, desired_stop_thread_id));\n+      inferior_ptid = ptid_t (current_event.dwProcessId, thread_id, 0);\n+      current_windows_thread = thread_rec (inferior_ptid,\n+\t\t\t\t\t   INVALIDATE_CONTEXT);\n+      current_windows_thread->reload_context = 1;\n \n-\t  pending_stops.erase (iter);\n-\t  return thread_id;\n-\t}\n+      return thread_id;\n     }\n \n   last_sig = GDB_SIGNAL_0;"
    }
  ]
}