{
  "sha": "bd7ccaa983158e789e305f4baae245ee4975516f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmQ3Y2NhYTk4MzE1OGU3ODllMzA1ZjRiYWFlMjQ1ZWU0OTc1NTE2Zg==",
  "commit": {
    "author": {
      "name": "Patrick Monnerat",
      "email": "patrick@monnerat.net",
      "date": "2021-08-16T12:44:20Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-16T15:10:19Z"
    },
    "message": "Notify observer of breakpoint auto-disabling\n\nAs breakpoint_modified observer is currently notified upon breakpoint stop\nbefore handling auto-disabling when enable count is reached, the observer\nis never notified of the disabling.\n\nThe problem affects:\n- The MI interpreter enabled= value when reporting =breakpoint-modified\n- A Python event handler for breakpoint_modified using the \"enabled\"\n  member of its parameter\n- insight: breakpoint GUI window is not properly updated upon auto-disable\n\nThis patch moves the observer notification after the auto-disabling\ncode and implements corresponding tests for the MI and Python cases.\n\nFixes https://sourceware.org/bugzilla/show_bug.cgi?id=23336\n\nChange-Id: I0c50df4789334071e5390cb46b3ca0d4a7f83c61",
    "tree": {
      "sha": "d5358844ea8df96dc4d8a1b6a2432ce881037a29",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d5358844ea8df96dc4d8a1b6a2432ce881037a29"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bd7ccaa983158e789e305f4baae245ee4975516f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd7ccaa983158e789e305f4baae245ee4975516f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bd7ccaa983158e789e305f4baae245ee4975516f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd7ccaa983158e789e305f4baae245ee4975516f/comments",
  "author": {
    "login": "monnerat",
    "id": 227821,
    "node_id": "MDQ6VXNlcjIyNzgyMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/227821?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/monnerat",
    "html_url": "https://github.com/monnerat",
    "followers_url": "https://api.github.com/users/monnerat/followers",
    "following_url": "https://api.github.com/users/monnerat/following{/other_user}",
    "gists_url": "https://api.github.com/users/monnerat/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/monnerat/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/monnerat/subscriptions",
    "organizations_url": "https://api.github.com/users/monnerat/orgs",
    "repos_url": "https://api.github.com/users/monnerat/repos",
    "events_url": "https://api.github.com/users/monnerat/events{/privacy}",
    "received_events_url": "https://api.github.com/users/monnerat/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eb09df162bafa67abee713be594a99bd20bd6825",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb09df162bafa67abee713be594a99bd20bd6825",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eb09df162bafa67abee713be594a99bd20bd6825"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 65,
    "deletions": 1
  },
  "files": [
    {
      "sha": "feca224ccf425fe4490f8f9a58c2b19720167580",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd7ccaa983158e789e305f4baae245ee4975516f/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd7ccaa983158e789e305f4baae245ee4975516f/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=bd7ccaa983158e789e305f4baae245ee4975516f",
      "patch": "@@ -5491,7 +5491,6 @@ bpstat_stop_status (const address_space *aspace,\n \t  if (bs->stop)\n \t    {\n \t      ++(b->hit_count);\n-\t      gdb::observers::breakpoint_modified.notify (b);\n \n \t      /* We will stop here.  */\n \t      if (b->disposition == disp_disable)\n@@ -5501,6 +5500,7 @@ bpstat_stop_status (const address_space *aspace,\n \t\t    b->enable_state = bp_disabled;\n \t\t  removed_any = 1;\n \t\t}\n+\t      gdb::observers::breakpoint_modified.notify (b);\n \t      if (b->silent)\n \t\tbs->print = 0;\n \t      bs->commands = b->commands;"
    },
    {
      "sha": "d068a25b9f4886f269ee903ea13588761fec1d94",
      "filename": "gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp",
      "status": "modified",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd7ccaa983158e789e305f4baae245ee4975516f/gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd7ccaa983158e789e305f4baae245ee4975516f/gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-breakpoint-changed.exp?ref=bd7ccaa983158e789e305f4baae245ee4975516f",
      "patch": "@@ -257,3 +257,44 @@ proc test_pending_resolved { } {\n with_test_prefix \"test_pending_resolved\" {\n     test_pending_resolved\n }\n+\n+# Test auto-disable is effective when notifying breakpoint-modified.\n+\n+proc test_auto_disable { } {\n+    global mi_gdb_prompt\n+    global lib_sl1 lib_sl2\n+    global binfile\n+\n+    mi_clean_restart $binfile\n+\n+    mi_load_shlibs $lib_sl1 $lib_sl2\n+\n+    mi_runto_main\n+\n+    # Set the breakpoint.\n+    mi_gdb_test \"-break-insert -f pendfunc1\" \\\n+\t{(&.*)*.*~\"Breakpoint 2 at.*\\\\n\".*=breakpoint-created,bkpt=\\{number=\"2\",type=\"breakpoint\".*\\}.*\\n\\^done}\n+\n+    # Enable for one shot only.\n+    mi_gdb_test \"-break-enable count 1 2\" \\\n+\t{=breakpoint-modified,bkpt=\\{number=\"2\",type=\"breakpoint\",disp=\"dis\",enabled=\"y\".*\\}.*\\n\\^done}\n+\n+    mi_send_resuming_command \"exec-continue\" \"continuing execution to breakpoint\"\n+\n+    set test \"breakpoint auto-disabling after enable count reached\"\n+    gdb_expect {\n+\t-re \".*=breakpoint-modified,bkpt=\\{number=\\\"2\\\".*enabled=\\\"n\\\"\" {\n+\t    pass $test\n+\t}\n+\t-re \".*${mi_gdb_prompt}$\" {\n+\t    fail $test\n+\t}\n+\ttimeout {\n+\t    fail \"$test (timeout)\"\n+\t}\n+    }\n+}\n+\n+with_test_prefix \"test_auto_disable\" {\n+    test_auto_disable\n+}"
    },
    {
      "sha": "857480d4b618c4ade8e40453ad129c6c9c45665b",
      "filename": "gdb/testsuite/gdb.python/py-breakpoint.exp",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd7ccaa983158e789e305f4baae245ee4975516f/gdb/testsuite/gdb.python/py-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd7ccaa983158e789e305f4baae245ee4975516f/gdb/testsuite/gdb.python/py-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-breakpoint.exp?ref=bd7ccaa983158e789e305f4baae245ee4975516f",
      "patch": "@@ -799,6 +799,28 @@ proc_with_prefix test_catchpoints {} {\n     gdb_test \"continue\" \"Stopped at catchpoint event: ${num}\"\n }\n \n+# Test auto-disable is effective when notifying breakpoint_modified.\n+\n+proc_with_prefix test_bkpt_auto_disable { } {\n+    global srcfile testfile hex decimal\n+\n+    # Start with a fresh gdb.\n+    clean_restart ${testfile}\n+\n+    if ![runto_main] then {\n+\tfail \"cannot run to main.\"\n+\treturn 0\n+    }\n+    delete_breakpoints\n+\n+    set mult_line [gdb_get_line_number \"Break at multiply.\"]\n+    gdb_breakpoint ${mult_line}\n+    gdb_test_no_output \"enable count 1 2\" \"one shot enable\"\n+    gdb_test_no_output \"python gdb.events.breakpoint_modified.connect(lambda bp: print(bp.enabled))\" \\\n+\t\"trap breakpoint_modified event\"\n+    gdb_test \"continue\" \"False.*\" \"auto-disabling after enable count reached\"\n+}\n+\n test_bkpt_basic\n test_bkpt_deletion\n test_bkpt_cond_and_cmds\n@@ -815,3 +837,4 @@ test_bkpt_events\n test_bkpt_explicit_loc\n test_bkpt_qualified\n test_bkpt_probe\n+test_bkpt_auto_disable"
    }
  ]
}