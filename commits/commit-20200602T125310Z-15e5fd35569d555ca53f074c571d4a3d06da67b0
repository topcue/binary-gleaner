{
  "sha": "15e5fd35569d555ca53f074c571d4a3d06da67b0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTVlNWZkMzU1NjlkNTU1Y2E1M2YwNzRjNTcxZDRhM2QwNmRhNjdiMA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-05-01T16:33:22Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-02T12:53:10Z"
    },
    "message": "gdb: Convert language la_read_var_value field to a method\n\nThis commit changes the language_data::la_read_var_value function\npointer member variable into a member function of language_defn.\n\nAn interesting aspect of this change is that the implementation of\nlanguage_defn::read_var_value is actually in findvar.c.  This is\npartly historical, the new language_defn::read_var_value is a rename\nof default_read_var_value, which was already in that file, but also,\nthat is the file that contains the helper functions needed by the\nread_var_value method, so it makes sens that the method implementation\nshould continue to live there (I think).\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_read_var_value): Delete function, move\n\timplementation to...\n\t(ada_language::read_var_value): ...here.\n\t(ada_language_data): Delete la_read_var_value initializer.\n\t* c-lang.c (c_language_data): Likewise.\n\t(cplus_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_language_data): Likewise.\n\t* findvar.c (default_read_var_value): Rename to...\n\t(language_defn::read_var_value): ...this.\n\t* findvar.c (read_var_value): Update header comment, and change to\n\tcall member function instead of function pointer.\n\t* go-lang.c (go_language_data): Likewise.\n\t* language.c (unknown_language_data): Delete la_read_var_value\n\tinitializer.\n\t(auto_language_data): Likewise.\n\t* language.h (struct language_data): Delete la_read_var_value\n\tfield.\n\t(language_defn::read_var_value): New member function.\n\t(default_read_var_value): Delete declaration.\n\t* m2-lang.c (m2_language_data): Delete la_read_var_value\n\tinitializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.\n\t* value.h (default_read_var_value): Delete declaration.",
    "tree": {
      "sha": "49ec3f10077bb48996a59c472b36f87660caf3f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/49ec3f10077bb48996a59c472b36f87660caf3f6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/15e5fd35569d555ca53f074c571d4a3d06da67b0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15e5fd35569d555ca53f074c571d4a3d06da67b0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/15e5fd35569d555ca53f074c571d4a3d06da67b0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15e5fd35569d555ca53f074c571d4a3d06da67b0/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5bd40f2a3feb273e92b640544f6e5307c8124d90",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5bd40f2a3feb273e92b640544f6e5307c8124d90",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5bd40f2a3feb273e92b640544f6e5307c8124d90"
    }
  ],
  "stats": {
    "total": 133,
    "additions": 72,
    "deletions": 61
  },
  "files": [
    {
      "sha": "3c2f394d0719654fab64a2ec43d8e4715eea558f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -1,3 +1,34 @@\n+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_read_var_value): Delete function, move\n+\timplementation to...\n+\t(ada_language::read_var_value): ...here.\n+\t(ada_language_data): Delete la_read_var_value initializer.\n+\t* c-lang.c (c_language_data): Likewise.\n+\t(cplus_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t* findvar.c (default_read_var_value): Rename to...\n+\t(language_defn::read_var_value): ...this.\n+\t* findvar.c (read_var_value): Update header comment, and change to\n+\tcall member function instead of function pointer.\n+\t* go-lang.c (go_language_data): Likewise.\n+\t* language.c (unknown_language_data): Delete la_read_var_value\n+\tinitializer.\n+\t(auto_language_data): Likewise.\n+\t* language.h (struct language_data): Delete la_read_var_value\n+\tfield.\n+\t(language_defn::read_var_value): New member function.\n+\t(default_read_var_value): Delete declaration.\n+\t* m2-lang.c (m2_language_data): Delete la_read_var_value\n+\tinitializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\t* value.h (default_read_var_value): Delete declaration.\n+\n 2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_print_array_index): Delete function, move"
    },
    {
      "sha": "d69d2bb735d3368756131699dddbce9228a987ac",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 20,
      "deletions": 21,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -14023,26 +14023,6 @@ ada_get_symbol_name_matcher (const lookup_name_info &lookup_name)\n     }\n }\n \n-/* Implement the \"la_read_var_value\" language_defn method for Ada.  */\n-\n-static struct value *\n-ada_read_var_value (struct symbol *var, const struct block *var_block,\n-\t\t    struct frame_info *frame)\n-{\n-  /* The only case where default_read_var_value is not sufficient\n-     is when VAR is a renaming...  */\n-  if (frame != nullptr)\n-    {\n-      const struct block *frame_block = get_frame_block (frame, NULL);\n-      if (frame_block != nullptr && ada_is_renaming_symbol (var))\n-\treturn ada_read_renaming_var_value (var, frame_block);\n-    }\n-\n-  /* This is a typical case where we expect the default_read_var_value\n-     function to work.  */\n-  return default_read_var_value (var, var_block, frame);\n-}\n-\n static const char *ada_extensions[] =\n {\n   \".adb\", \".ads\", \".a\", \".ada\", \".dg\", NULL\n@@ -14071,7 +14051,6 @@ extern const struct language_data ada_language_data =\n   ada_print_typedef,            /* Print a typedef using appropriate syntax */\n   ada_value_print_inner,\t/* la_value_print_inner */\n   ada_value_print,              /* Print a top-level value */\n-  ada_read_var_value,\t\t/* la_read_var_value */\n   NULL,                         /* Language specific skip_trampoline */\n   NULL,                         /* name_of_this */\n   true,                         /* la_store_sym_names_in_linkage_form_p */\n@@ -14120,6 +14099,26 @@ class ada_language : public language_defn\n     LA_VALUE_PRINT (index_value, stream, options);\n     fprintf_filtered (stream, \" => \");\n   }\n+\n+  /* Implement the \"read_var_value\" language_defn method for Ada.  */\n+\n+  struct value *read_var_value (struct symbol *var,\n+\t\t\t\tconst struct block *var_block,\n+\t\t\t\tstruct frame_info *frame) const override\n+  {\n+    /* The only case where default_read_var_value is not sufficient\n+       is when VAR is a renaming...  */\n+    if (frame != nullptr)\n+      {\n+\tconst struct block *frame_block = get_frame_block (frame, NULL);\n+\tif (frame_block != nullptr && ada_is_renaming_symbol (var))\n+\t  return ada_read_renaming_var_value (var, frame_block);\n+      }\n+\n+    /* This is a typical case where we expect the default_read_var_value\n+       function to work.  */\n+    return language_defn::read_var_value (var, var_block, frame);\n+  }\n };\n \n /* Single instance of the Ada language class.  */"
    },
    {
      "sha": "8663dc1dfa39e95f1efacba17908fe7b87263892",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -907,7 +907,6 @@ extern const struct language_data c_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n@@ -1067,7 +1066,6 @@ extern const struct language_data cplus_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   cplus_skip_trampoline,\t/* Language specific skip_trampoline */\n   \"this\",                       /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n@@ -1136,7 +1134,6 @@ extern const struct language_data asm_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n@@ -1202,7 +1199,6 @@ extern const struct language_data minimal_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "e55d82e08be12233fe72b98a7b18bfb89cc24f56",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -228,7 +228,6 @@ extern const struct language_data d_language_data =\n \t\t\t\t   syntax.  */\n   d_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value.  */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline.  */\n   \"this\",\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "53e44db5caff24b7215f8970c6bd88ae3c29a1e8",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -650,7 +650,6 @@ extern const struct language_data f_language_data =\n   f_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   f_value_print_innner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* FIXME */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   NULL,                    \t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "c7cd31ce1a68066fbd891aad219a36752434f312",
      "filename": "gdb/findvar.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/findvar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/findvar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/findvar.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -578,12 +578,12 @@ get_hosting_frame (struct symbol *var, const struct block *var_block,\n   return frame;\n }\n \n-/* A default implementation for the \"la_read_var_value\" hook in\n-   the language vector which should work in most situations.  */\n+/* See language.h.  */\n \n struct value *\n-default_read_var_value (struct symbol *var, const struct block *var_block,\n-\t\t\tstruct frame_info *frame)\n+language_defn::read_var_value (struct symbol *var,\n+\t\t\t       const struct block *var_block,\n+\t\t\t       struct frame_info *frame) const\n {\n   struct value *v;\n   struct type *type = SYMBOL_TYPE (var);\n@@ -801,7 +801,7 @@ default_read_var_value (struct symbol *var, const struct block *var_block,\n   return v;\n }\n \n-/* Calls VAR's language la_read_var_value hook with the given arguments.  */\n+/* Calls VAR's language read_var_value hook with the given arguments.  */\n \n struct value *\n read_var_value (struct symbol *var, const struct block *var_block,\n@@ -810,9 +810,8 @@ read_var_value (struct symbol *var, const struct block *var_block,\n   const struct language_defn *lang = language_def (var->language ());\n \n   gdb_assert (lang != NULL);\n-  gdb_assert (lang->la_read_var_value != NULL);\n \n-  return lang->la_read_var_value (var, var_block, frame);\n+  return lang->read_var_value (var, var_block, frame);\n }\n \n /* Install default attributes for register values.  */"
    },
    {
      "sha": "caac9bdc646a6ed38ccb37859cc60042300639bb",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -599,7 +599,6 @@ extern const struct language_data go_language_data =\n \t\t\t\t   syntax.  */\n   go_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value.  */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline.  */\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "d541c6f2dd884fbfced936cdfc8b052c87694136",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -833,7 +833,6 @@ extern const struct language_data unknown_language_data =\n   default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   unk_lang_value_print_inner,\t/* la_value_print_inner */\n   unk_lang_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   unk_lang_trampoline,\t\t/* Language specific skip_trampoline */\n   \"this\",        \t    \t/* name_of_this */\n   true,\t\t\t\t/* store_sym_names_in_linkage_form_p */\n@@ -897,7 +896,6 @@ extern const struct language_data auto_language_data =\n   default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   unk_lang_value_print_inner,\t/* la_value_print_inner */\n   unk_lang_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   unk_lang_trampoline,\t\t/* Language specific skip_trampoline */\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "56260fb6ee9df9720636c969fb44b172e9938ec7",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -272,21 +272,6 @@ struct language_data\n     void (*la_value_print) (struct value *, struct ui_file *,\n \t\t\t    const struct value_print_options *);\n \n-    /* Given a symbol VAR, the corresponding block VAR_BLOCK (if any) and a\n-       stack frame id FRAME, read the value of the variable and return (pointer\n-       to a) struct value containing the value.\n-\n-       VAR_BLOCK is needed if there's a possibility for VAR to be outside\n-       FRAME.  This is what happens if FRAME correspond to a nested function\n-       and VAR is defined in the outer function.  If callers know that VAR is\n-       located in FRAME or is global/static, NULL can be passed as VAR_BLOCK.\n-\n-       Throw an error if the variable cannot be found.  */\n-\n-    struct value *(*la_read_var_value) (struct symbol *var,\n-\t\t\t\t\tconst struct block *var_block,\n-\t\t\t\t\tstruct frame_info *frame);\n-\n     /* PC is possibly an unknown languages trampoline.\n        If that PC falls in a trampoline belonging to this language,\n        return the address of the first pc in the real function, or 0\n@@ -497,6 +482,21 @@ struct language_defn : language_data\n \t\t\t\t  struct ui_file *stream,\n \t\t\t\t  const value_print_options *options) const;\n \n+  /* Given a symbol VAR, the corresponding block VAR_BLOCK (if any) and a\n+     stack frame id FRAME, read the value of the variable and return (pointer\n+     to a) struct value containing the value.\n+\n+     VAR_BLOCK is needed if there's a possibility for VAR to be outside\n+     FRAME.  This is what happens if FRAME correspond to a nested function\n+     and VAR is defined in the outer function.  If callers know that VAR is\n+     located in FRAME or is global/static, NULL can be passed as VAR_BLOCK.\n+\n+     Throw an error if the variable cannot be found.  */\n+\n+  virtual struct value *read_var_value (struct symbol *var,\n+\t\t\t\t\tconst struct block *var_block,\n+\t\t\t\t\tstruct frame_info *frame) const;\n+\n   /* List of all known languages.  */\n   static const struct language_defn *languages[nr_languages];\n };"
    },
    {
      "sha": "1769c820228b9119bc63d2b759bf815176df2e2a",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -397,7 +397,6 @@ extern const struct language_data m2_language_data =\n   m2_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   m2_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   NULL,\t\t                /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "f6fd8f5e465f490eabe511f46c9d04defcf57f85",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -386,7 +386,6 @@ extern const struct language_data objc_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   objc_skip_trampoline, \t/* Language specific skip_trampoline */\n   \"self\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "c1c498c7377fd028ff7f0cf6320faf936761ab1e",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -1063,7 +1063,6 @@ extern const struct language_data opencl_language_data =\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   NULL,                         /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "e55f0b0769640be46c0762e914b31f900003fda1",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -451,7 +451,6 @@ extern const struct language_data pascal_language_data =\n   pascal_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   pascal_value_print_inner,\t/* la_value_print_inner */\n   pascal_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "3522ce52f4b3742c4e3c265b5e54206637283b8c",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -2123,7 +2123,6 @@ extern const struct language_data rust_language_data =\n   rust_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   rust_value_print_inner,\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n-  default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */"
    },
    {
      "sha": "70c3d5667aef93f915fc5166c7aa0eb397a46805",
      "filename": "gdb/value.h",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/value.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15e5fd35569d555ca53f074c571d4a3d06da67b0/gdb/value.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.h?ref=15e5fd35569d555ca53f074c571d4a3d06da67b0",
      "patch": "@@ -744,10 +744,6 @@ extern struct value *read_var_value (struct symbol *var,\n \t\t\t\t     const struct block *var_block,\n \t\t\t\t     struct frame_info *frame);\n \n-extern struct value *default_read_var_value (struct symbol *var,\n-\t\t\t\t\t     const struct block *var_block,\n-\t\t\t\t\t     struct frame_info *frame);\n-\n extern struct value *allocate_value (struct type *type);\n extern struct value *allocate_value_lazy (struct type *type);\n extern void value_contents_copy (struct value *dst, LONGEST dst_offset,"
    }
  ]
}