{
  "sha": "261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
  "node_id": "C_kwDOANOeidoAKDI2MWIwNzQ4OGI5ZGZlNjkwOTBlNjk4MGY2ZGU5ZDBmNGYzZjAzY2E",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-11-26T14:31:18Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-12-15T20:00:00Z"
    },
    "message": "New --enable-threading configure option to control use of threads in GDB/GDBserver\n\nAdd the --enable-threading configure option so multithreading can be disabled\nat configure time. This is useful for statically-linked builds of\nGDB/GDBserver, since the thread library doesn't play well with that setup.\n\nIf you try to run a statically-linked GDB built with threading, it will crash\nwhen setting up the number of worker threads.\n\nThis new option is also convenient when debugging GDB in a system with lots of\nthreads, where the thread discovery code in GDB will emit too many messages,\nlike so:\n\n[New Thread 0xfffff74d3a50 (LWP 2625599)]\n\nIf you have X threads, that message will be repeated X times.\n\nThe default for --enable-threading is \"yes\".",
    "tree": {
      "sha": "c962f1627fd0fa4daa203300f8fc2fc77fd0c47b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c962f1627fd0fa4daa203300f8fc2fc77fd0c47b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4d3605c8ca92bcde848581a8ec031827c798501b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4d3605c8ca92bcde848581a8ec031827c798501b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4d3605c8ca92bcde848581a8ec031827c798501b"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 99,
    "deletions": 6
  },
  "files": [
    {
      "sha": "3f78ace82bbfefa1c8242d5aa2b55e832505ee75",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
      "patch": "@@ -3,6 +3,17 @@\n \n *** Changes since GDB 11\n \n+* Configure changes\n+\n+--enable-threading\n+\n+  Enable or disable multithreaded symbol loading.  This is enabled\n+  by default, but passing --disable-threading or --enable-threading=no\n+  to configure will disable it.\n+\n+  Disabling this can cause a performance penalty when there are a lot of\n+  symbols to load, but is useful for debugging purposes.\n+\n * New commands\n \n maint set backtrace-on-fatal-signal on|off"
    },
    {
      "sha": "d13ab37405020ce10284caf49fefe587eaa34754",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
      "patch": "@@ -910,6 +910,7 @@ with_python\n with_python_libdir\n with_guile\n enable_source_highlight\n+enable_threading\n with_intel_pt\n with_libipt_prefix\n with_libipt_type\n@@ -1597,6 +1598,8 @@ Optional Features:\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-source-highlight\n                           enable source-highlight for source listings\n+  --enable-threading      include support for parallel processing of data\n+                          (yes/no)\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-gdb-build-warnings\n@@ -14065,6 +14068,22 @@ fi\n done\n \n \n+  # ----------------------- #\n+  # Check for threading.    #\n+  # ----------------------- #\n+\n+  # Check whether --enable-threading was given.\n+if test \"${enable_threading+set}\" = set; then :\n+  enableval=$enable_threading; case \"$enableval\" in\n+    yes) want_threading=yes ;;\n+    no) want_threading=no ;;\n+    *) as_fn_error $? \"bad value $enableval for threading\" \"$LINENO\" 5 ;;\n+    esac\n+else\n+  want_threading=yes\n+fi\n+\n+\n   # Check for std::thread.  This does not work on some platforms, like\n   # mingw and DJGPP.\n   ac_ext=cpp\n@@ -14762,10 +14781,13 @@ done\n     LIBS=\"$save_LIBS\"\n     CXXFLAGS=\"$save_CXXFLAGS\"\n   fi\n-  if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n+\n+  if test \"$want_threading\" = \"yes\"; then\n+    if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n \n $as_echo \"#define CXX_STD_THREAD 1\" >>confdefs.h\n \n+    fi\n   fi\n   ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'"
    },
    {
      "sha": "d90135be45c5ecceeab04ccd869580576b1571a0",
      "filename": "gdbserver/configure",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdbserver/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdbserver/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/configure?ref=261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
      "patch": "@@ -746,6 +746,7 @@ ac_user_opts='\n enable_option_checking\n enable_maintainer_mode\n enable_largefile\n+enable_threading\n with_intel_pt\n with_gnu_ld\n enable_rpath\n@@ -1396,6 +1397,8 @@ Optional Features:\n                           enable make rules and dependencies not useful (and\n                           sometimes confusing) to the casual installer\n   --disable-largefile     omit support for large files\n+  --enable-threading      include support for parallel processing of data\n+                          (yes/no)\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-unit-tests     Enable the inclusion of unit tests when compiling\n                           GDB\n@@ -7264,6 +7267,22 @@ fi\n done\n \n \n+  # ----------------------- #\n+  # Check for threading.    #\n+  # ----------------------- #\n+\n+  # Check whether --enable-threading was given.\n+if test \"${enable_threading+set}\" = set; then :\n+  enableval=$enable_threading; case \"$enableval\" in\n+    yes) want_threading=yes ;;\n+    no) want_threading=no ;;\n+    *) as_fn_error $? \"bad value $enableval for threading\" \"$LINENO\" 5 ;;\n+    esac\n+else\n+  want_threading=yes\n+fi\n+\n+\n   # Check for std::thread.  This does not work on some platforms, like\n   # mingw and DJGPP.\n   ac_ext=cpp\n@@ -7961,10 +7980,13 @@ done\n     LIBS=\"$save_LIBS\"\n     CXXFLAGS=\"$save_CXXFLAGS\"\n   fi\n-  if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n+\n+  if test \"$want_threading\" = \"yes\"; then\n+    if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n \n $as_echo \"#define CXX_STD_THREAD 1\" >>confdefs.h\n \n+    fi\n   fi\n   ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'"
    },
    {
      "sha": "430d66b555812805a297210cf584f36e008ec696",
      "filename": "gdbsupport/common.m4",
      "status": "modified",
      "additions": 19,
      "deletions": 3,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdbsupport/common.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdbsupport/common.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/common.m4?ref=261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
      "patch": "@@ -76,6 +76,19 @@ AC_DEFUN([GDB_AC_COMMON], [\n   # Define HAVE_KINFO_GETFILE if kinfo_getfile is available.\n   AC_CHECK_FUNCS(kinfo_getfile)\n \n+  # ----------------------- #\n+  # Check for threading.    #\n+  # ----------------------- #\n+\n+  AC_ARG_ENABLE(threading,\n+    AS_HELP_STRING([--enable-threading], [include support for parallel processing of data (yes/no)]),\n+    [case \"$enableval\" in\n+    yes) want_threading=yes ;;\n+    no) want_threading=no ;;\n+    *) AC_MSG_ERROR([bad value $enableval for threading]) ;;\n+    esac],\n+    [want_threading=yes])\n+\n   # Check for std::thread.  This does not work on some platforms, like\n   # mingw and DJGPP.\n   AC_LANG_PUSH([C++])\n@@ -101,9 +114,12 @@ AC_DEFUN([GDB_AC_COMMON], [\n     LIBS=\"$save_LIBS\"\n     CXXFLAGS=\"$save_CXXFLAGS\"\n   fi\n-  if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n-    AC_DEFINE(CXX_STD_THREAD, 1,\n-\t      [Define to 1 if std::thread works.])\n+\n+  if test \"$want_threading\" = \"yes\"; then\n+    if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n+      AC_DEFINE(CXX_STD_THREAD, 1,\n+\t\t[Define to 1 if std::thread works.])\n+    fi\n   fi\n   AC_LANG_POP\n "
    },
    {
      "sha": "8b4cb7e098d310e774e71dcb89d1cc50776269c3",
      "filename": "gdbsupport/configure",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdbsupport/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/261b07488b9dfe69090e6980f6de9d0f4f3f03ca/gdbsupport/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/configure?ref=261b07488b9dfe69090e6980f6de9d0f4f3f03ca",
      "patch": "@@ -767,6 +767,7 @@ enable_silent_rules\n enable_dependency_tracking\n enable_plugins\n enable_largefile\n+enable_threading\n with_intel_pt\n with_gnu_ld\n enable_rpath\n@@ -1419,6 +1420,8 @@ Optional Features:\n                           speeds up one-time build\n   --enable-plugins        Enable support for plugins\n   --disable-largefile     omit support for large files\n+  --enable-threading      include support for parallel processing of data\n+                          (yes/no)\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-unit-tests     Enable the inclusion of unit tests when compiling\n                           GDB\n@@ -8277,6 +8280,22 @@ fi\n done\n \n \n+  # ----------------------- #\n+  # Check for threading.    #\n+  # ----------------------- #\n+\n+  # Check whether --enable-threading was given.\n+if test \"${enable_threading+set}\" = set; then :\n+  enableval=$enable_threading; case \"$enableval\" in\n+    yes) want_threading=yes ;;\n+    no) want_threading=no ;;\n+    *) as_fn_error $? \"bad value $enableval for threading\" \"$LINENO\" 5 ;;\n+    esac\n+else\n+  want_threading=yes\n+fi\n+\n+\n   # Check for std::thread.  This does not work on some platforms, like\n   # mingw and DJGPP.\n   ac_ext=cpp\n@@ -8974,10 +8993,13 @@ done\n     LIBS=\"$save_LIBS\"\n     CXXFLAGS=\"$save_CXXFLAGS\"\n   fi\n-  if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n+\n+  if test \"$want_threading\" = \"yes\"; then\n+    if test \"$gdb_cv_cxx_std_thread\" = \"yes\"; then\n \n $as_echo \"#define CXX_STD_THREAD 1\" >>confdefs.h\n \n+    fi\n   fi\n   ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'"
    }
  ]
}