{
  "sha": "5d0510553eb447bf6861f4641b5ae3aaf9503a13",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWQwNTEwNTUzZWI0NDdiZjY4NjFmNDY0MWI1YWUzYWFmOTUwM2ExMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-21T16:58:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-05T22:23:36Z"
    },
    "message": "Change tui_source_element::line to have type std::string\n\nThis changes tui_source_element::line to be of type std::string.  This\nreduces the number of copies made.\n\ngdb/ChangeLog\n2019-11-05  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (struct tui_source_element) <line>: Now a\n\tstd::string.\n\t* tui/tui-winsource.c (tui_show_source_line): Update.\n\t* tui/tui-source.c (tui_source_window::set_contents): Update.\n\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.\n\nChange-Id: Id600f3e1d386a2911f187366e05e2ec599068dd2",
    "tree": {
      "sha": "e5e9abf7cc0fdc983ac6dbcc32c8659a712b17b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e5e9abf7cc0fdc983ac6dbcc32c8659a712b17b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5d0510553eb447bf6861f4641b5ae3aaf9503a13",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d0510553eb447bf6861f4641b5ae3aaf9503a13",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5d0510553eb447bf6861f4641b5ae3aaf9503a13",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d0510553eb447bf6861f4641b5ae3aaf9503a13/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ade7beeae467e81b809fc124d8bfc2f3c4a8c8ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ade7beeae467e81b809fc124d8bfc2f3c4a8c8ab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ade7beeae467e81b809fc124d8bfc2f3c4a8c8ab"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 14,
    "deletions": 6
  },
  "files": [
    {
      "sha": "0c05afeb13c1df4f687ef8cded81b5122358f360",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5d0510553eb447bf6861f4641b5ae3aaf9503a13",
      "patch": "@@ -1,3 +1,11 @@\n+2019-11-05  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (struct tui_source_element) <line>: Now a\n+\tstd::string.\n+\t* tui/tui-winsource.c (tui_show_source_line): Update.\n+\t* tui/tui-source.c (tui_source_window::set_contents): Update.\n+\t* tui/tui-disasm.c (tui_disasm_window::set_contents): Update.\n+\n 2019-11-05  Christian Biesinger  <cbiesinger@google.com>\n \n \t* symtab.h (gdb_static_assert): Put && operator at the beginning"
    },
    {
      "sha": "91c9845f5dc5663f9cbcd89b7ed2577ce38492c8",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=5d0510553eb447bf6861f4641b5ae3aaf9503a13",
      "patch": "@@ -216,10 +216,10 @@ tui_disasm_window::set_contents (struct gdbarch *arch,\n \t   + asm_lines[i].insn);\n \n       /* Now copy the line taking the offset into account.  */\n-      if (line.size() > offset)\n-\tsrc->line.reset (xstrndup (&line[offset], line_width));\n+      if (line.size () > offset)\n+\tsrc->line = line.substr (offset, line_width);\n       else\n-\tsrc->line = make_unique_xstrdup (\"\");\n+\tsrc->line.clear ();\n \n       src->line_or_addr.loa = LOA_ADDRESS;\n       src->line_or_addr.u.addr = asm_lines[i].addr;"
    },
    {
      "sha": "f956645d89893c7531da0fcf37235e2a9d21b840",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=5d0510553eb447bf6861f4641b5ae3aaf9503a13",
      "patch": "@@ -183,7 +183,7 @@ tui_source_window::set_contents (struct gdbarch *arch,\n \t\t\t\t symtab_to_fullname (s)) == 0\n \t\t   && cur_line_no == locator->line_no);\n \n-\t      content[cur_line].line = make_unique_xstrdup (text.c_str ());\n+\t      content[cur_line].line = std::move (text);\n \n \t      cur_line++;\n \t      cur_line_no++;"
    },
    {
      "sha": "5d0bcb47b111ec50e28750740509cc9849c0ad4a",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=5d0510553eb447bf6861f4641b5ae3aaf9503a13",
      "patch": "@@ -222,7 +222,7 @@ tui_show_source_line (struct tui_source_window_base *win_info, int lineno)\n     tui_set_reverse_mode (win_info->handle.get (), true);\n \n   wmove (win_info->handle.get (), lineno, TUI_EXECINFO_SIZE);\n-  tui_puts (line->line.get (), win_info->handle.get ());\n+  tui_puts (line->line.c_str (), win_info->handle.get ());\n   if (line->is_exec_point)\n     tui_set_reverse_mode (win_info->handle.get (), false);\n "
    },
    {
      "sha": "185d3dd5e0acea364cf8c69cf72564241a22c3af",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d0510553eb447bf6861f4641b5ae3aaf9503a13/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=5d0510553eb447bf6861f4641b5ae3aaf9503a13",
      "patch": "@@ -62,7 +62,7 @@ struct tui_source_element\n   {\n   }\n \n-  gdb::unique_xmalloc_ptr<char> line;\n+  std::string line;\n   struct tui_line_or_address line_or_addr;\n   bool is_exec_point = false;\n   tui_bp_flags break_mode = 0;"
    }
  ]
}