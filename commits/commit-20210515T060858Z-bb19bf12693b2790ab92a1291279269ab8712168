{
  "sha": "bb19bf12693b2790ab92a1291279269ab8712168",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmIxOWJmMTI2OTNiMjc5MGFiOTJhMTI5MTI3OTI2OWFiODcxMjE2OA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T06:07:07Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T06:08:58Z"
    },
    "message": "display_gdb_index\n\n\t* dwarf.c (display_gdb_index): Avoid pointer UB and overflow in\n\tlength calculations.",
    "tree": {
      "sha": "3e04cb3a5c9b1b3629a7bee054a48deea1ff3644",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e04cb3a5c9b1b3629a7bee054a48deea1ff3644"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bb19bf12693b2790ab92a1291279269ab8712168",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb19bf12693b2790ab92a1291279269ab8712168",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bb19bf12693b2790ab92a1291279269ab8712168",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb19bf12693b2790ab92a1291279269ab8712168/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d7870f6304cc62bd3a30ebc9c98dceff2bb50fbb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7870f6304cc62bd3a30ebc9c98dceff2bb50fbb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d7870f6304cc62bd3a30ebc9c98dceff2bb50fbb"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 12,
    "deletions": 11
  },
  "files": [
    {
      "sha": "ec8a6438991b73dc7ef10412147c9d7d3d9d3bed",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb19bf12693b2790ab92a1291279269ab8712168/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb19bf12693b2790ab92a1291279269ab8712168/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=bb19bf12693b2790ab92a1291279269ab8712168",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (display_gdb_index): Avoid pointer UB and overflow in\n+\tlength calculations.\n+\n 2021-05-15  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf.c (display_debug_names): Complain when header length is"
    },
    {
      "sha": "db02be723b445442204c2d52888a474e4af104a1",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 7,
      "deletions": 11,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb19bf12693b2790ab92a1291279269ab8712168/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb19bf12693b2790ab92a1291279269ab8712168/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=bb19bf12693b2790ab92a1291279269ab8712168",
      "patch": "@@ -10105,7 +10105,7 @@ display_gdb_index (struct dwarf_section *section,\n   symbol_table = start + symbol_table_offset;\n   constant_pool = start + constant_pool_offset;\n \n-  if (address_table + address_table_size > section->start + section->size)\n+  if (address_table_offset + address_table_size > section->size)\n     {\n       warn (_(\"Address table extends beyond end of section.\\n\"));\n       return 0;\n@@ -10160,11 +10160,9 @@ display_gdb_index (struct dwarf_section *section,\n \t  || cu_vector_offset != 0)\n \t{\n \t  unsigned int j;\n-\t  unsigned char * adr;\n \n-\t  adr = constant_pool + name_offset;\n \t  /* PR 17531: file: 5b7b07ad.  */\n-\t  if (adr < constant_pool || adr >= section->start + section->size)\n+\t  if (name_offset >= section->size - constant_pool_offset)\n \t    {\n \t      printf (_(\"[%3u] <corrupt offset: %x>\"), i, name_offset);\n \t      warn (_(\"Corrupt name offset of 0x%x found for symbol table slot %d\\n\"),\n@@ -10175,21 +10173,19 @@ display_gdb_index (struct dwarf_section *section,\n \t\t    (int) (section->size - (constant_pool_offset + name_offset)),\n \t\t    constant_pool + name_offset);\n \n-\t  adr = constant_pool + cu_vector_offset;\n-\t  if (adr < constant_pool || adr >= section->start + section->size - 3)\n+\t  if (section->size - constant_pool_offset < 4\n+\t      || cu_vector_offset > section->size - constant_pool_offset - 4)\n \t    {\n \t      printf (_(\"<invalid CU vector offset: %x>\\n\"), cu_vector_offset);\n \t      warn (_(\"Corrupt CU vector offset of 0x%x found for symbol table slot %d\\n\"),\n \t\t    cu_vector_offset, i);\n \t      continue;\n \t    }\n \n-\t  num_cus = byte_get_little_endian (adr, 4);\n+\t  num_cus = byte_get_little_endian (constant_pool + cu_vector_offset, 4);\n \n-\t  adr = constant_pool + cu_vector_offset + 4 + num_cus * 4;\n-\t  if (num_cus * 4 < num_cus\n-\t      || adr >= section->start + section->size\n-\t      || adr < constant_pool)\n+\t  if ((uint64_t) num_cus * 4 > section->size - (constant_pool_offset\n+\t\t\t\t\t\t\t+ cu_vector_offset + 4))\n \t    {\n \t      printf (\"<invalid number of CUs: %d>\\n\", num_cus);\n \t      warn (_(\"Invalid number of CUs (0x%x) for symbol table slot %d\\n\"),"
    }
  ]
}