{
  "sha": "7e955d83c4128ec773d84b92487ed1cdfed09938",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2U5NTVkODNjNDEyOGVjNzczZDg0YjkyNDg3ZWQxY2RmZWQwOTkzOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-16T00:06:38Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-17T22:42:00Z"
    },
    "message": "Change all_objfiles_safe adapter to be a method on program_space\n\nThis changes the all_objfiles_safe range adapter to be a method on the\nprogram space, and fixes up all the users.\n\ngdb/ChangeLog\n2019-01-15  Tom Tromey  <tom@tromey.com>\n\n\t* progspace.h (program_space) <objfiles_safe_range>: New\n\ttypedef.\n\t<objfiles_safe>: New method.\n\t* objfiles.h (class all_objfiles_safe): Remove.\n\t* objfiles.c (free_all_objfiles, objfile_purge_solibs): Update.\n\t* jit.c (jit_inferior_exit_hook): Update.",
    "tree": {
      "sha": "95fd2b230aa1ec340efdf069c98423ae73a6d6bd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/95fd2b230aa1ec340efdf069c98423ae73a6d6bd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7e955d83c4128ec773d84b92487ed1cdfed09938",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e955d83c4128ec773d84b92487ed1cdfed09938",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7e955d83c4128ec773d84b92487ed1cdfed09938",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e955d83c4128ec773d84b92487ed1cdfed09938/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2030c079717475f5b6fad837bb81758891f3b802",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2030c079717475f5b6fad837bb81758891f3b802",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2030c079717475f5b6fad837bb81758891f3b802"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 33,
    "deletions": 28
  },
  "files": [
    {
      "sha": "f59eeb13c7b255a3bf6482f0b5822326bfe05b95",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7e955d83c4128ec773d84b92487ed1cdfed09938",
      "patch": "@@ -1,3 +1,12 @@\n+2019-01-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* progspace.h (program_space) <objfiles_safe_range>: New\n+\ttypedef.\n+\t<objfiles_safe>: New method.\n+\t* objfiles.h (class all_objfiles_safe): Remove.\n+\t* objfiles.c (free_all_objfiles, objfile_purge_solibs): Update.\n+\t* jit.c (jit_inferior_exit_hook): Update.\n+\n 2019-01-17  Tom Tromey  <tom@tromey.com>\n \n \t* progspace.h (program_space) <objfiles_range>: New typedef.\n@@ -1114,7 +1123,7 @@\n \n \tUpdate copyright year range in all GDB files.\n \n-2019-01-01  Joel Brobecker  <brobecker@adacore.com>\n+2019-01-01, 19  Joel Brobecker  <brobecker@adacore.com>\n \n \t* config/djgpp/fnchange.lst: Add entry for gdb/ChangeLog-2018.\n "
    },
    {
      "sha": "81c4af40f926954d1f0567007e91962b1f3580ad",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=7e955d83c4128ec773d84b92487ed1cdfed09938",
      "patch": "@@ -1391,7 +1391,7 @@ jit_breakpoint_re_set (void)\n static void\n jit_inferior_exit_hook (struct inferior *inf)\n {\n-  for (objfile *objf : all_objfiles_safe (current_program_space))\n+  for (objfile *objf : current_program_space->objfiles_safe ())\n     {\n       struct jit_objfile_data *objf_data\n \t= (struct jit_objfile_data *) objfile_data (objf, jit_objfile_data);"
    },
    {
      "sha": "82400a4fe89a1b34d4168115f3d370dfd5d869f3",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=7e955d83c4128ec773d84b92487ed1cdfed09938",
      "patch": "@@ -514,7 +514,7 @@ objfile_separate_debug_iterate (const struct objfile *parent,\n \n /* Put one object file before a specified on in the global list.\n    This can be used to make sure an object file is destroyed before\n-   another when using all_objfiles_safe to free all objfiles.  */\n+   another when using objfiles_safe to free all objfiles.  */\n void\n put_objfile_before (struct objfile *objfile, struct objfile *before_this)\n {\n@@ -587,7 +587,7 @@ add_separate_debug_objfile (struct objfile *objfile, struct objfile *parent)\n   parent->separate_debug_objfile = objfile;\n \n   /* Put the separate debug object before the normal one, this is so that\n-     usage of all_objfiles_safe will stay safe.  */\n+     usage of objfiles_safe will stay safe.  */\n   put_objfile_before (objfile, parent);\n }\n \n@@ -735,7 +735,7 @@ free_all_objfiles (void)\n   for (so = master_so_list (); so; so = so->next)\n     gdb_assert (so->objfile == NULL);\n \n-  for (objfile *objfile : all_objfiles_safe (current_program_space))\n+  for (objfile *objfile : current_program_space->objfiles_safe ())\n     delete objfile;\n   clear_symtab_users (0);\n }\n@@ -1044,7 +1044,7 @@ have_full_symbols (void)\n void\n objfile_purge_solibs (void)\n {\n-  for (objfile *objf : all_objfiles_safe (current_program_space))\n+  for (objfile *objf : current_program_space->objfiles_safe ())\n     {\n       /* We assume that the solib package has been purged already, or will\n \t be soon.  */"
    },
    {
      "sha": "599d8a1bce9cb682d3baa8547433660d64ad0b04",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=7e955d83c4128ec773d84b92487ed1cdfed09938",
      "patch": "@@ -553,28 +553,6 @@ extern void default_iterate_over_objfiles_in_search_order\n    void *cb_data, struct objfile *current_objfile);\n \f\n \n-/* An iterarable object that can be used to iterate over all\n-   objfiles.  The basic use is in a foreach, like:\n-\n-   for (objfile *objf : all_objfiles_safe (pspace)) { ... }\n-\n-   This variant uses a basic_safe_iterator so that objfiles can be\n-   deleted during iteration.  */\n-\n-class all_objfiles_safe\n-  : public next_adapter<struct objfile,\n-\t\t\tbasic_safe_iterator<next_iterator<objfile>>>\n-{\n-public:\n-\n-  explicit all_objfiles_safe (struct program_space *pspace)\n-    : next_adapter<struct objfile,\n-\t\t   basic_safe_iterator<next_iterator<objfile>>>\n-        (pspace->objfiles_head)\n-  {\n-  }\n-};\n-\n /* A range adapter that makes it possible to iterate over all\n    compunits in one objfile.  */\n "
    },
    {
      "sha": "472baeb9a169d98af4d34a4fbda62f752ccf9dbd",
      "filename": "gdb/progspace.h",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/progspace.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e955d83c4128ec773d84b92487ed1cdfed09938/gdb/progspace.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.h?ref=7e955d83c4128ec773d84b92487ed1cdfed09938",
      "patch": "@@ -26,6 +26,8 @@\n #include \"gdb_bfd.h\"\n #include \"gdb_vecs.h\"\n #include \"registry.h\"\n+#include \"common/next-iterator.h\"\n+#include \"common/safe-iterator.h\"\n \n struct target_ops;\n struct bfd;\n@@ -148,6 +150,22 @@ struct program_space\n     return objfiles_range (objfiles_head);\n   }\n \n+  typedef next_adapter<struct objfile,\n+\t\t       basic_safe_iterator<next_iterator<objfile>>>\n+    objfiles_safe_range;\n+\n+  /* An iterable object that can be used to iterate over all objfiles.\n+     The basic use is in a foreach, like:\n+\n+     for (objfile *objf : pspace->objfiles_safe ()) { ... }\n+\n+     This variant uses a basic_safe_iterator so that objfiles can be\n+     deleted during iteration.  */\n+  objfiles_safe_range objfiles_safe ()\n+  {\n+    return objfiles_safe_range (objfiles_head);\n+  }\n+\n   /* Pointer to next in linked list.  */\n   struct program_space *next = NULL;\n "
    }
  ]
}