{
  "sha": "e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTk3N2U3NDcxMmNmOGRmNmZmNDRlYWQwYTVjMGZmZDNjYjlhYTA2NQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T15:53:47Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T15:59:32Z"
    },
    "message": "gold: Handle local IFUNC symbol for APLT\n\nHandle local IFUNC symbol for APLT like global IFUNC symbol.\n\n\tPR gold/25872\n\t* x86_64.cc (Output_data_plt_x86_64_bnd::do_address_for_local):\n\tHandle local IFUNC symbol.\n\t(Output_data_plt_x86_64_ibt::do_address_for_local): Likewise.",
    "tree": {
      "sha": "da1f47d461095f7fcbe1fb48b8494b8f3dc95ee9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/da1f47d461095f7fcbe1fb48b8494b8f3dc95ee9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "693196cba23b888d7014a3533b132b756e8d4e79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/693196cba23b888d7014a3533b132b756e8d4e79",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/693196cba23b888d7014a3533b132b756e8d4e79"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 19,
    "deletions": 2
  },
  "files": [
    {
      "sha": "cc62a3e827573c6d048f96aadd67ea4b20e77cae",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25872\n+\t* x86_64.cc (Output_data_plt_x86_64_bnd::do_address_for_local):\n+\tHandle local IFUNC symbol.\n+\t(Output_data_plt_x86_64_ibt::do_address_for_local): Likewise.\n+\n 2020-03-19  Fangrui Song  <maskray@google.com>\n \n     * options.h (General_options): Add --no-rosegment option."
    },
    {
      "sha": "6219c8e306fffc4d7ccec2e85872d3264db552fa",
      "filename": "gold/x86_64.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065/gold/x86_64.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065/gold/x86_64.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/x86_64.cc?ref=e977e74712cf8df6ff44ead0a5c0ffd3cb9aa065",
      "patch": "@@ -2086,7 +2086,12 @@ Output_data_plt_x86_64_bnd::do_address_for_local(const Relobj* object,\n \t\t\t\t\t\t unsigned int r_sym)\n {\n   // Convert the PLT offset into an APLT offset.\n-  unsigned int plt_offset = ((object->local_plt_offset(r_sym) - plt_entry_size)\n+  const Sized_relobj_file<64, false>* sized_relobj =\n+    static_cast<const Sized_relobj_file<64, false>*>(object);\n+  const Symbol_value<64>* psymval = sized_relobj->local_symbol(r_sym);\n+  unsigned int plt_offset = ((object->local_plt_offset(r_sym)\n+\t\t\t      - (psymval->is_ifunc_symbol()\n+\t\t\t\t ? 0 : plt_entry_size))\n \t\t\t     / (plt_entry_size / aplt_entry_size));\n   return (this->address()\n \t  + this->aplt_offset_\n@@ -2260,7 +2265,12 @@ Output_data_plt_x86_64_ibt<size>::do_address_for_local(const Relobj* object,\n \t\t\t\t\t\t unsigned int r_sym)\n {\n   // Convert the PLT offset into an APLT offset.\n-  unsigned int plt_offset = ((object->local_plt_offset(r_sym) - plt_entry_size)\n+  const Sized_relobj_file<size, false>* sized_relobj =\n+    static_cast<const Sized_relobj_file<size, false>*>(object);\n+  const Symbol_value<size>* psymval = sized_relobj->local_symbol(r_sym);\n+  unsigned int plt_offset = ((object->local_plt_offset(r_sym)\n+\t\t\t      - (psymval->is_ifunc_symbol()\n+\t\t\t\t ? 0 : plt_entry_size))\n \t\t\t     / (plt_entry_size / aplt_entry_size));\n   return (this->address()\n \t  + this->aplt_offset_"
    }
  ]
}