{
  "sha": "6f8f95b4c4785e053f96b473039e244473a85ee5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmY4Zjk1YjRjNDc4NWUwNTNmOTZiNDczMDM5ZTI0NDQ3M2E4NWVlNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-04T23:12:41Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-05T00:45:55Z"
    },
    "message": "Large memory allocation reading fuzzed 64-bit archive\n\nThis patch adds a sanity check for the size of an armap.\n\n\t* archive64.c (_bfd_archive_64_bit_slurp_armap): Check parsed_size\n\tagainst file size before allocating memory.  Use bfd_alloc rather\n\tthan bfd_zalloc for carsym/strings memory.",
    "tree": {
      "sha": "f6c80cbe75bb317c3d13ac09e5d5359e2bd59327",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f6c80cbe75bb317c3d13ac09e5d5359e2bd59327"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6f8f95b4c4785e053f96b473039e244473a85ee5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f8f95b4c4785e053f96b473039e244473a85ee5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6f8f95b4c4785e053f96b473039e244473a85ee5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f8f95b4c4785e053f96b473039e244473a85ee5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8a7adb414e62495559f104bb9895df167d2298e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a7adb414e62495559f104bb9895df167d2298e1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8a7adb414e62495559f104bb9895df167d2298e1"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 15,
    "deletions": 1
  },
  "files": [
    {
      "sha": "9f1a9424ae490d6998294421b5402352e0ee4fa9",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f95b4c4785e053f96b473039e244473a85ee5/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f95b4c4785e053f96b473039e244473a85ee5/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=6f8f95b4c4785e053f96b473039e244473a85ee5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* archive64.c (_bfd_archive_64_bit_slurp_armap): Check parsed_size\n+\tagainst file size before allocating memory.  Use bfd_alloc rather\n+\tthan bfd_zalloc for carsym/strings memory.\n+\n 2020-03-04  Alan Modra  <amodra@gmail.com>\n \n \t* elf.c (elf_fake_sections): Ensure sh_addralign is such that"
    },
    {
      "sha": "5e1443932cef5e10f775cb060908766ccc36534d",
      "filename": "bfd/archive64.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f95b4c4785e053f96b473039e244473a85ee5/bfd/archive64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f95b4c4785e053f96b473039e244473a85ee5/bfd/archive64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archive64.c?ref=6f8f95b4c4785e053f96b473039e244473a85ee5",
      "patch": "@@ -47,6 +47,7 @@ _bfd_archive_64_bit_slurp_armap (bfd *abfd)\n   bfd_byte *raw_armap = NULL;\n   carsym *carsyms;\n   bfd_size_type amt;\n+  ufile_ptr filesize;\n \n   ardata->symdefs = NULL;\n \n@@ -76,6 +77,13 @@ _bfd_archive_64_bit_slurp_armap (bfd *abfd)\n   parsed_size = mapdata->parsed_size;\n   free (mapdata);\n \n+  filesize = bfd_get_file_size (abfd);\n+  if (filesize != 0 && parsed_size > filesize)\n+    {\n+      bfd_set_error (bfd_error_malformed_archive);\n+      return FALSE;\n+    }\n+\n   if (bfd_bread (int_buf, 8, abfd) != 8)\n     {\n       if (bfd_get_error () != bfd_error_system_call)\n@@ -102,7 +110,7 @@ _bfd_archive_64_bit_slurp_armap (bfd *abfd)\n       bfd_set_error (bfd_error_malformed_archive);\n       return FALSE;\n     }\n-  ardata->symdefs = (struct carsym *) bfd_zalloc (abfd, amt);\n+  ardata->symdefs = (struct carsym *) bfd_alloc (abfd, amt);\n   if (ardata->symdefs == NULL)\n     return FALSE;\n   carsyms = ardata->symdefs;"
    }
  ]
}