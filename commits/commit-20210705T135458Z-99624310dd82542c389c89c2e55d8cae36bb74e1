{
  "sha": "99624310dd82542c389c89c2e55d8cae36bb74e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTk2MjQzMTBkZDgyNTQyYzM4OWM4OWMyZTU1ZDhjYWUzNmJiNzRlMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-06-27T19:13:14Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-05T13:54:58Z"
    },
    "message": "gdb: fall back on sigpending + sigwait if sigtimedwait is not available\n\nThe macOS platform does not provide sigtimedwait, so we get:\n\n      CXX    compile/compile.o\n    In file included from /Users/smarchi/src/binutils-gdb/gdb/compile/compile.c:46:\n    /Users/smarchi/src/binutils-gdb/gdb/../gdbsupport/scoped_ignore_signal.h:69:4: error: use of undeclared identifier 'sigtimedwait'\n              sigtimedwait (&set, nullptr, &zero_timeout);\n              ^\n\nAn alternative to sigtimedwait with a timeout of 0 is to use sigpending,\nto first check which signals are pending, and then sigwait, to consume\nthem.  Since that's slightly more expensive (2 syscalls instead of 1),\nkeep using sigtimedwait for the platforms that provide it, and fall back\nto sigpending + sigwait for the others.\n\ngdbsupport/ChangeLog:\n\n\t* scoped_ignore_signal.h (struct scoped_ignore_signal)\n\t<~scoped_ignore_signal>: Use sigtimedwait if HAVE_SIGTIMEDWAIT\n\tis defined, else use sigpending + sigwait.\n\nChange-Id: I2a72798337e81dd1bbd21214736a139dd350af87\nCo-Authored-By: John Baldwin <jhb@FreeBSD.org>",
    "tree": {
      "sha": "2fa728a0011e50c3fd1e43edc54fc05c560748c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2fa728a0011e50c3fd1e43edc54fc05c560748c5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/99624310dd82542c389c89c2e55d8cae36bb74e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/99624310dd82542c389c89c2e55d8cae36bb74e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/99624310dd82542c389c89c2e55d8cae36bb74e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/99624310dd82542c389c89c2e55d8cae36bb74e1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f4931779e4432bde7f04fd1a60a7f055f86e6ccb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4931779e4432bde7f04fd1a60a7f055f86e6ccb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f4931779e4432bde7f04fd1a60a7f055f86e6ccb"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 13,
    "deletions": 2
  },
  "files": [
    {
      "sha": "57dd4b6d4025654ee544353f934145620e2d610d",
      "filename": "gdbsupport/scoped_ignore_signal.h",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/99624310dd82542c389c89c2e55d8cae36bb74e1/gdbsupport/scoped_ignore_signal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/99624310dd82542c389c89c2e55d8cae36bb74e1/gdbsupport/scoped_ignore_signal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/scoped_ignore_signal.h?ref=99624310dd82542c389c89c2e55d8cae36bb74e1",
      "patch": "@@ -58,15 +58,26 @@ class scoped_ignore_signal\n     if (!m_was_blocked)\n       {\n \tsigset_t set;\n-\tconst timespec zero_timeout = {};\n \n \tsigemptyset (&set);\n \tsigaddset (&set, Sig);\n \n \t/* If we got a pending Sig signal, consume it before\n \t   unblocking.  */\n \tif (ConsumePending)\n-\t  sigtimedwait (&set, nullptr, &zero_timeout);\n+\t  {\n+#ifdef HAVE_SIGTIMEDWAIT\n+\t    const timespec zero_timeout = {};\n+\n+\t    sigtimedwait (&set, nullptr, &zero_timeout);\n+#else\n+\t    sigset_t pending;\n+\n+\t    sigpending (&pending);\n+\t    if (sigismember (&pending, Sig))\n+\t      sigwait (&set, nullptr);\n+#endif\n+\t  }\n \n \tsigprocmask (SIG_UNBLOCK, &set, nullptr);\n       }"
    }
  ]
}