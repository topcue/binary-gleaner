{
  "sha": "53215f214c61b850085196a8d69774eed026ecd9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTMyMTVmMjE0YzYxYjg1MDA4NTE5NmE4ZDY5Nzc0ZWVkMDI2ZWNkOQ==",
  "commit": {
    "author": {
      "name": "Christophe Lyon",
      "email": "christophe.lyon@linaro.org",
      "date": "2020-03-17T15:59:01Z"
    },
    "committer": {
      "name": "Christophe Lyon",
      "email": "christophe.lyon@linaro.org",
      "date": "2020-03-18T10:09:43Z"
    },
    "message": "Non-contiguous memory regions support: Avoid calls to abort\n\nUse '%F' format when printing error messages to exit cleanly rather\nthan by calling abort().\n\n2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tbfd/\n\t* elf32-arm.c (arm_build_one_stub): Emit a fatal error message\n\tinstead of calling abort.\n\t* elf32-csky.c (csky_build_one_stub): Likewise.\n\t* elf32-hppa.c (hppa_build_one_stub): Likewise.\n\t* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.\n\t* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.\n\t* elf32-metag.c (metag_build_one_stub): Likewise.\n\t* elf32-nios2.c (nios2_build_one_stub): Likewise.\n\t* elf64-ppc.c (ppc_build_one_stub): Likewise.\n\t(ppc_size_one_stub): Likewise.\n\t* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.\n\n\tld/\n\t* emultempl/xtensaelf.em: Emit a fatal error message\n\tinstead of calling abort.\n\t* ldlang.c: Likewise.\n\nChange-Id: I60deaeeee59d4e7cab06b8a40a3e51837c43a8ab",
    "tree": {
      "sha": "ce76a728bc37dea37feb8b6a5c25aecfda4da522",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce76a728bc37dea37feb8b6a5c25aecfda4da522"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/53215f214c61b850085196a8d69774eed026ecd9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/53215f214c61b850085196a8d69774eed026ecd9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/53215f214c61b850085196a8d69774eed026ecd9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/53215f214c61b850085196a8d69774eed026ecd9/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "5a82b8a12b6a9b8167517ab1df1dcdcc4711ffda",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5a82b8a12b6a9b8167517ab1df1dcdcc4711ffda",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5a82b8a12b6a9b8167517ab1df1dcdcc4711ffda"
    }
  ],
  "stats": {
    "total": 187,
    "additions": 82,
    "deletions": 105
  },
  "files": [
    {
      "sha": "2780b76a907b503021b32d2c8c7d21cbd0f19aa0",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -1,3 +1,17 @@\n+2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* elf32-arm.c (arm_build_one_stub): Emit a fatal error message\n+\tinstead of calling abort.\n+\t* elf32-csky.c (csky_build_one_stub): Likewise.\n+\t* elf32-hppa.c (hppa_build_one_stub): Likewise.\n+\t* elf32-m68hc11.c (m68hc11_elf_build_one_stub): Likewise.\n+\t* elf32-m68hc12.c (m68hc12_elf_build_one_stub): Likewise.\n+\t* elf32-metag.c (metag_build_one_stub): Likewise.\n+\t* elf32-nios2.c (nios2_build_one_stub): Likewise.\n+\t* elf64-ppc.c (ppc_build_one_stub): Likewise.\n+\t(ppc_size_one_stub): Likewise.\n+\t* elfnn-aarch64.c (aarch64_build_one_stub): Likewise.\n+\n 2020-03-17  Nick Clifton  <nickc@redhat.com>\n \n \tPR 25688"
    },
    {
      "sha": "1ccbf143e0aea0ec5c5218285ba110ee8d06b9b0",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -5068,12 +5068,9 @@ arm_build_one_stub (struct bfd_hash_entry *gen_entry,\n      section.  The user should fix his linker script.  */\n   if (stub_entry->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->target_section);\n \n   globals = elf32_arm_hash_table (info);\n   if (globals == NULL)"
    },
    {
      "sha": "06ea26632d147fc01aaf7387cb8f98417bc7d575",
      "filename": "bfd/elf32-csky.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-csky.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-csky.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-csky.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -3625,12 +3625,9 @@ csky_build_one_stub (struct bfd_hash_entry *gen_entry,\n      section.  The user should fix his linker script.  */\n   if (stub_entry->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->target_section);\n \n   globals = csky_elf_hash_table (info);\n   if (globals == NULL)"
    },
    {
      "sha": "6d5382dc26de4a0d9300f80dbebc295e410dd5ca",
      "filename": "bfd/elf32-hppa.c",
      "status": "modified",
      "additions": 14,
      "deletions": 18,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-hppa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-hppa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-hppa.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -735,12 +735,10 @@ hppa_build_one_stub (struct bfd_hash_entry *bh, void *in_arg)\n \t section.  The user should fix his linker script.  */\n       if (hsh->target_section->output_section == NULL\n \t  && info->non_contiguous_regions)\n-\t{\n-\t  _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t\t\"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t      hsh->target_section);\n-\t  abort();\n-    }\n+\tinfo->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output \"\n+\t\t\t\t  \"section. Retry without \"\n+\t\t\t\t  \"--enable-non-contiguous-regions.\\n\"),\n+\t\t\t\thsh->target_section);\n \n       /* Create the long branch.  A long branch is formed with \"ldil\"\n \t loading the upper bits of the target address into a register,\n@@ -766,12 +764,11 @@ hppa_build_one_stub (struct bfd_hash_entry *bh, void *in_arg)\n \t section.  The user should fix his linker script.  */\n       if (hsh->target_section->output_section == NULL\n \t  && info->non_contiguous_regions)\n-\t{\n-\t  _bfd_error_handler (_(\"Could not assign %pA to an output section. \"\n-\t\t\t\t\"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t      hsh->target_section);\n-\t  abort();\n-    }\n+\tinfo->callbacks->einfo (_(\"%F%P: Could not assign %pA to an output \"\n+\t\t\t\t  \"section. Retry without \"\n+\t\t\t\t  \"--enable-non-contiguous-regions.\\n\"),\n+\t\t\t\thsh->target_section);\n+\n       /* Branches are relative.  This is where we are going to.  */\n       sym_value = (hsh->target_value\n \t\t   + hsh->target_section->output_offset\n@@ -848,12 +845,11 @@ hppa_build_one_stub (struct bfd_hash_entry *bh, void *in_arg)\n \t section.  The user should fix his linker script.  */\n       if (hsh->target_section->output_section == NULL\n \t  && info->non_contiguous_regions)\n-\t{\n-\t  _bfd_error_handler (_(\"Could not assign %pA to an output section. \"\n-\t\t\t\t\"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t      hsh->target_section);\n-\t  abort();\n-    }\n+\tinfo->callbacks->einfo (_(\"%F%P: Could not assign %pA to an output \"\n+\t\t\t\t  \"section. Retry without \"\n+\t\t\t\t  \"--enable-non-contiguous-regions.\\n\"),\n+\t\t\t\thsh->target_section);\n+\n       /* Branches are relative.  This is where we are going to.  */\n       sym_value = (hsh->target_value\n \t\t   + hsh->target_section->output_offset"
    },
    {
      "sha": "46aa43806310de287602041a33c32b52c0c2d068",
      "filename": "bfd/elf32-m68hc11.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-m68hc11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-m68hc11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m68hc11.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -419,12 +419,9 @@ m68hc11_elf_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n      section.  The user should fix his linker script.  */\n   if (stub_entry->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->target_section);\n \n   htab = m68hc11_elf_hash_table (info);\n   if (htab == NULL)"
    },
    {
      "sha": "c74f5674db7d6db870f4be24f583fa520b9b934b",
      "filename": "bfd/elf32-m68hc12.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-m68hc12.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-m68hc12.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m68hc12.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -539,12 +539,9 @@ m68hc12_elf_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n      section.  The user should fix his linker script.  */\n   if (stub_entry->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->target_section);\n \n   htab = m68hc11_elf_hash_table (info);\n "
    },
    {
      "sha": "44923edc7b4fc1335eeb4cff35389306b38a6a77",
      "filename": "bfd/elf32-metag.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-metag.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-metag.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-metag.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -3477,12 +3477,9 @@ metag_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n      section.  The user should fix his linker script.  */\n   if (hsh->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  hsh->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    hsh->target_section);\n \n   stub_sec = hsh->stub_sec;\n "
    },
    {
      "sha": "bfb6fd16325666ed508be3dff46f009675bf6d0a",
      "filename": "bfd/elf32-nios2.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-nios2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf32-nios2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-nios2.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -2498,12 +2498,10 @@ nios2_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg ATTRIBUTE_U\n      section.  The user should fix his linker script.  */\n   if (hsh->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  hsh->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    hsh->target_section);\n+\n   /* Make a note of the offset within the stubs for this entry.  */\n   hsh->stub_offset = stub_sec->size;\n "
    },
    {
      "sha": "7f7e190ce2b656d31ba1f163010adcccc924c645",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 16,
      "deletions": 28,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -11367,25 +11367,19 @@ ppc_build_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n   if (stub_entry->target_section != NULL\n       && stub_entry->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->target_section);\n \n   /* Same for the group.  */\n   if (stub_entry->group->stub_sec != NULL\n       && stub_entry->group->stub_sec->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign group %pA target %pA to an \"\n-\t\t\t    \"output section. Retry without \"\n-\t\t\t    \"--enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->group->stub_sec,\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign group %pA target %pA to an \"\n+\t\t\t      \"output section. Retry without \"\n+\t\t\t      \"--enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->group->stub_sec,\n+\t\t\t    stub_entry->target_section);\n \n   htab = ppc_hash_table (info);\n   if (htab == NULL)\n@@ -11917,25 +11911,19 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n   if (stub_entry->target_section != NULL\n       && stub_entry->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign %pA to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign %pA to an output section. \"\n+\t\t\t      \"Retry without --enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->target_section);\n \n   /* Same for the group.  */\n   if (stub_entry->group->stub_sec != NULL\n       && stub_entry->group->stub_sec->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign group %pA target %pA to an \"\n-\t\t\t    \"output section. Retry without \"\n-\t\t\t    \"--enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->group->stub_sec,\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign group %pA target %pA to an \"\n+\t\t\t      \"output section. Retry without \"\n+\t\t\t      \"--enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->group->stub_sec,\n+\t\t\t    stub_entry->target_section);\n \n   /* Make a note of the offset within the stubs for this entry.  */\n   stub_entry->stub_offset = stub_entry->group->stub_sec->size;"
    },
    {
      "sha": "02688ccee10c145a5578e2ee8158d69373a8fd9b",
      "filename": "bfd/elfnn-aarch64.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/bfd/elfnn-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/bfd/elfnn-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-aarch64.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -3302,12 +3302,10 @@ aarch64_build_one_stub (struct bfd_hash_entry *gen_entry,\n      section.  The user should fix his linker script.  */\n   if (stub_entry->target_section->output_section == NULL\n       && info->non_contiguous_regions)\n-    {\n-      _bfd_error_handler (_(\"Could not assign '%pA' to an output section. \"\n-\t\t\t    \"Retry without --enable-non-contiguous-regions.\\n\"),\n-\t\t\t  stub_entry->target_section);\n-      abort();\n-    }\n+    info->callbacks->einfo (_(\"%F%P: Could not assign '%pA' to an output section. \"\n+\t\t\t      \"Retry without \"\n+\t\t\t      \"--enable-non-contiguous-regions.\\n\"),\n+\t\t\t    stub_entry->target_section);\n \n   stub_sec = stub_entry->stub_sec;\n "
    },
    {
      "sha": "f8ee247ed746e447a755d1f4c4a13c74847caf17",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* emultempl/xtensaelf.em: Emit a fatal error message\n+\tinstead of calling abort.\n+\t* ldlang.c: Likewise.\n+\n 2020-03-14  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-elf/non-contiguous.d: Don't xfail generic ELF"
    },
    {
      "sha": "2d9f594969f54a3e6a8065e72e731fa0342a1a93",
      "filename": "ld/emultempl/xtensaelf.em",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/ld/emultempl/xtensaelf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/ld/emultempl/xtensaelf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/xtensaelf.em?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -1225,10 +1225,8 @@ ld_build_required_section_dependence (lang_statement_union_type *s)\n       lang_statement_union_type *l = iter_stack_current (&stack);\n \n       if (l == NULL && link_info.non_contiguous_regions)\n-\t{\n-\t  einfo (_(\"Relaxation not supported with --enable-non-contiguous-regions.\\n\"));\n-\t  abort();\n-\t}\n+\teinfo (_(\"%F%P: Relaxation not supported with \"\n+\t\t \"--enable-non-contiguous-regions.\\n\"));\n \n       if (l->header.type == lang_input_section_enum)\n \t{"
    },
    {
      "sha": "0bb5f3c044c23f3ea3c8ddb1b9e70bc27ebf8076",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 13,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/53215f214c61b850085196a8d69774eed026ecd9/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/53215f214c61b850085196a8d69774eed026ecd9/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=53215f214c61b850085196a8d69774eed026ecd9",
      "patch": "@@ -5220,21 +5220,15 @@ size_input_section\n \t      if (dot + TO_ADDR (i->size) > end)\n \t\t{\n \t\t  if (i->flags & SEC_LINKER_CREATED)\n-\t\t    {\n-\t\t      einfo (_(\"Output section '%s' not large enough for the \"\n-\t\t\t       \"linker-created stubs section '%s'.\\n\"),\n-\t\t\t     i->output_section->name, i->name);\n-\t\t      abort();\n-\t\t    }\n+\t\t    einfo (_(\"%F%P: Output section '%s' not large enough for the \"\n+\t\t\t     \"linker-created stubs section '%s'.\\n\"),\n+\t\t\t   i->output_section->name, i->name);\n \n \t\t  if (i->rawsize && i->rawsize != i->size)\n-\t\t    {\n-\t\t      einfo (_(\"Relaxation not supported with \"\n-\t\t\t       \"--enable-non-contiguous-regions (section '%s' \"\n-\t\t\t       \"would overflow '%s' after it changed size).\\n\"),\n-\t\t\t     i->name, i->output_section->name);\n-\t\t      abort();\n-\t\t    }\n+\t\t    einfo (_(\"%F%P: Relaxation not supported with \"\n+\t\t\t     \"--enable-non-contiguous-regions (section '%s' \"\n+\t\t\t     \"would overflow '%s' after it changed size).\\n\"),\n+\t\t\t   i->name, i->output_section->name);\n \n \t\t  *removed = 1;\n \t\t  dot = end;"
    }
  ]
}