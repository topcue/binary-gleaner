{
  "sha": "cd50a87ae29f163e7d254729a902a5e51fcccbbc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Q1MGE4N2FlMjlmMTYzZTdkMjU0NzI5YTkwMmE1ZTUxZmNjY2JiYw==",
  "commit": {
    "author": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-05-09T09:29:21Z"
    },
    "committer": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-05-09T09:29:21Z"
    },
    "message": "[binutils][aarch64] New sve_size_013 iclass.\n\nAdd sve_size_013 instruction class\n\nThis new iclass handles instructions such as pmullb whose size specifier\ncan only be encoded as 0, 1, or 3.\n\ninclude/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_013 iclass.\n\nopcodes/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n\tsve_size_013 iclass encode.\n\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n\tsve_size_013 iclass decode.",
    "tree": {
      "sha": "846a94ad055f754de290541aae7b6421ce85f1bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/846a94ad055f754de290541aae7b6421ce85f1bb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cd50a87ae29f163e7d254729a902a5e51fcccbbc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd50a87ae29f163e7d254729a902a5e51fcccbbc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cd50a87ae29f163e7d254729a902a5e51fcccbbc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd50a87ae29f163e7d254729a902a5e51fcccbbc/comments",
  "author": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3c705960ca0e12bb5d3a12d14ca6703006102d98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c705960ca0e12bb5d3a12d14ca6703006102d98",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3c705960ca0e12bb5d3a12d14ca6703006102d98"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 30,
    "deletions": 0
  },
  "files": [
    {
      "sha": "600e753f060e9dbc31a3d96c00ff18f30d2eed5a",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd50a87ae29f163e7d254729a902a5e51fcccbbc/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd50a87ae29f163e7d254729a902a5e51fcccbbc/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=cd50a87ae29f163e7d254729a902a5e51fcccbbc",
      "patch": "@@ -1,3 +1,7 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_013 iclass.\n+\n 2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* opcode/aarch64.h (enum aarch64_insn_class): Add sve_size_bh iclass."
    },
    {
      "sha": "9cc73cad223c09a1af074abbe0603db7774bd322",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd50a87ae29f163e7d254729a902a5e51fcccbbc/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd50a87ae29f163e7d254729a902a5e51fcccbbc/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=cd50a87ae29f163e7d254729a902a5e51fcccbbc",
      "patch": "@@ -596,6 +596,7 @@ enum aarch64_insn_class\n   sve_size_sd,\n   sve_size_bh,\n   sve_size_sd2,\n+  sve_size_013,\n   testbranch,\n   cryptosm3,\n   cryptosm4,"
    },
    {
      "sha": "a8051cd500228fc5e15f57dbf8ad1e8fdb92ed13",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd50a87ae29f163e7d254729a902a5e51fcccbbc/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd50a87ae29f163e7d254729a902a5e51fcccbbc/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=cd50a87ae29f163e7d254729a902a5e51fcccbbc",
      "patch": "@@ -1,3 +1,10 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle\n+\tsve_size_013 iclass encode.\n+\t* aarch64-dis.c (aarch64_decode_variant_using_iclass): Handle\n+\tsve_size_013 iclass decode.\n+\n 2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* aarch64-asm.c (aarch64_encode_variant_using_iclass): Handle"
    },
    {
      "sha": "0ec27b24928fac0b3325c9d4817152236d0bf698",
      "filename": "opcodes/aarch64-asm.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd50a87ae29f163e7d254729a902a5e51fcccbbc/opcodes/aarch64-asm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd50a87ae29f163e7d254729a902a5e51fcccbbc/opcodes/aarch64-asm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-asm.c?ref=cd50a87ae29f163e7d254729a902a5e51fcccbbc",
      "patch": "@@ -1613,6 +1613,7 @@ do_special_encoding (struct aarch64_inst *inst)\n static void\n aarch64_encode_variant_using_iclass (struct aarch64_inst *inst)\n {\n+  int variant = 0;\n   switch (inst->opcode->iclass)\n     {\n     case sve_cpy:\n@@ -1669,6 +1670,13 @@ aarch64_encode_variant_using_iclass (struct aarch64_inst *inst)\n \t\t    aarch64_get_variant (inst) + 1, 0);\n       break;\n \n+    case sve_size_013:\n+      variant = aarch64_get_variant (inst);\n+      if (variant == 2)\n+\t  variant = 3;\n+      insert_field (FLD_size, &inst->value, variant, 0);\n+      break;\n+\n     default:\n       break;\n     }"
    },
    {
      "sha": "1a727a4ba848965113debe6b488ecba59733605a",
      "filename": "opcodes/aarch64-dis.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd50a87ae29f163e7d254729a902a5e51fcccbbc/opcodes/aarch64-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd50a87ae29f163e7d254729a902a5e51fcccbbc/opcodes/aarch64-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis.c?ref=cd50a87ae29f163e7d254729a902a5e51fcccbbc",
      "patch": "@@ -2822,6 +2822,16 @@ aarch64_decode_variant_using_iclass (aarch64_inst *inst)\n       variant = i - 1;\n       break;\n \n+    case sve_size_013:\n+      i = extract_field (FLD_size, inst->value, 0);\n+      if (i == 2)\n+\treturn FALSE;\n+      if (i == 3)\n+\tvariant = 2;\n+      else\n+\tvariant = i;\n+      break;\n+\n     default:\n       /* No mapping between instruction class and qualifiers.  */\n       return TRUE;"
    }
  ]
}