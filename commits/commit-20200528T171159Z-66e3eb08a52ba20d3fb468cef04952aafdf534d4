{
  "sha": "66e3eb08a52ba20d3fb468cef04952aafdf534d4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjZlM2ViMDhhNTJiYTIwZDNmYjQ2OGNlZjA0OTUyYWFmZGY1MzRkNA==",
  "commit": {
    "author": {
      "name": "Stephen Casner",
      "email": "casner@acm.org",
      "date": "2020-05-28T17:11:59Z"
    },
    "committer": {
      "name": "Stephen Casner",
      "email": "casner@acm.org",
      "date": "2020-05-28T17:11:59Z"
    },
    "message": "Fix all unexpected failures in gas testsuite for pdp11-aout.\n\nThese failures were caused by the PDP11's mix of little-endian octets\nin shorts but shorts in big endian order for long or quad so regexps\ndid not match.  Also tests used addresses as values in .long which\nrequired BRD_RELOC_32 that was not implemented.\n\n* gas/config/tc-pdp11.c (md_number_to_chars): Implement .quad\n* gas/testsuite/gas/all/gas.exp: Select alternate test scripts for\npdp11, skip octa test completely.\n* gas/testsuite/gas/all/eqv-dot-pdp11.s: Identical to eqv-dot.s\n* gas/testsuite/gas/all/eqv-dot-pdp11.d: Match different octet order.\n* gas/testsuite/gas/all/cond-pdp11.l: Match different octet order.\n\n* bfd/pdp11.c: Implement BRD_RELOC_32 to relocate the low 16 bits of\naddreses in .long (used in testsuites) and .stab values.",
    "tree": {
      "sha": "e0960b4cc192eca87b8baa8c2b211dc8cf9404a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e0960b4cc192eca87b8baa8c2b211dc8cf9404a2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/66e3eb08a52ba20d3fb468cef04952aafdf534d4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66e3eb08a52ba20d3fb468cef04952aafdf534d4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/66e3eb08a52ba20d3fb468cef04952aafdf534d4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66e3eb08a52ba20d3fb468cef04952aafdf534d4/comments",
  "author": {
    "login": "slcasner",
    "id": 5100408,
    "node_id": "MDQ6VXNlcjUxMDA0MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5100408?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slcasner",
    "html_url": "https://github.com/slcasner",
    "followers_url": "https://api.github.com/users/slcasner/followers",
    "following_url": "https://api.github.com/users/slcasner/following{/other_user}",
    "gists_url": "https://api.github.com/users/slcasner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slcasner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slcasner/subscriptions",
    "organizations_url": "https://api.github.com/users/slcasner/orgs",
    "repos_url": "https://api.github.com/users/slcasner/repos",
    "events_url": "https://api.github.com/users/slcasner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slcasner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "slcasner",
    "id": 5100408,
    "node_id": "MDQ6VXNlcjUxMDA0MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5100408?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slcasner",
    "html_url": "https://github.com/slcasner",
    "followers_url": "https://api.github.com/users/slcasner/followers",
    "following_url": "https://api.github.com/users/slcasner/following{/other_user}",
    "gists_url": "https://api.github.com/users/slcasner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slcasner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slcasner/subscriptions",
    "organizations_url": "https://api.github.com/users/slcasner/orgs",
    "repos_url": "https://api.github.com/users/slcasner/repos",
    "events_url": "https://api.github.com/users/slcasner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slcasner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4ad2c6a03ecb7faaf2658d3f8fb94f06441f2ba8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ad2c6a03ecb7faaf2658d3f8fb94f06441f2ba8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4ad2c6a03ecb7faaf2658d3f8fb94f06441f2ba8"
    }
  ],
  "stats": {
    "total": 144,
    "additions": 141,
    "deletions": 3
  },
  "files": [
    {
      "sha": "482bf81e68917075fe64d69d414446697bd0c738",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-28  Stephen Casner  <casner@acm.org>\n+\n+\t* pdp11.c: Implement BRD_RELOC_32 to relocate the low 16 bits of\n+\taddreses in .long (used in testsuites) and .stab values.\n+\n 2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/22909"
    },
    {
      "sha": "375fbedccf10cd209d591e7bf4bbab3b9a0a442a",
      "filename": "bfd/pdp11.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/bfd/pdp11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/bfd/pdp11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pdp11.c?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -255,6 +255,7 @@ reloc_howto_type howto_table_pdp11[] =\n   /* type\t       rs size bsz  pcrel bitpos ovrf\t\t\t  sf name     part_inpl readmask  setmask    pcdone */\n HOWTO( 0,\t       0,  1,  16,  FALSE, 0, complain_overflow_signed,0,\"16\",\tTRUE, 0x0000ffff,0x0000ffff, FALSE),\n HOWTO( 1,\t       0,  1,  16,  TRUE,  0, complain_overflow_signed,0,\"DISP16\",\tTRUE, 0x0000ffff,0x0000ffff, FALSE),\n+HOWTO( 2,\t       0,  2,  32,  FALSE, 0, complain_overflow_signed,0,\"32\",\tTRUE, 0x0000ffff,0x0000ffff, FALSE),\n };\n \n #define TABLE_SIZE(TABLE)\t(sizeof(TABLE)/sizeof(TABLE[0]))\n@@ -276,6 +277,8 @@ NAME (aout, reloc_type_lookup) (bfd * abfd ATTRIBUTE_UNUSED,\n       return &howto_table_pdp11[0];\n     case BFD_RELOC_16_PCREL:\n       return &howto_table_pdp11[1];\n+    case BFD_RELOC_32:\n+      return &howto_table_pdp11[2];\n     default:\n       return NULL;\n     }"
    },
    {
      "sha": "07509cc7379c0ee4402964038a06a45540c29d18",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -1,3 +1,16 @@\n+2020-05-28  Stephen Casner  <casner@acm.org>\n+\n+\tFix unexpected failures in gas testsuite for pdp11-aout target.\n+\tThese are caused by the PDP11's mix of little-endian octets in\n+\tshorts but shorts in big endian order for long or quad.\n+\n+\t* config/tc-pdp11.c (md_number_to_chars): Implement .quad\n+\t* testsuite/gas/all/gas.exp: Select alternate test scripts for\n+\tpdp11, skip octa test completely.\n+\t* testsuite/gas/all/eqv-dot-pdp11.s: Identical to eqv-dot.s\n+\t* testsuite/gas/all/eqv-dot-pdp11.d: Match different octet order.\n+\t* testsuite/gas/all/cond-pdp11.l: Match different octet order.\n+\n 2020-05-28  Alex Coplan  <alex.coplan@arm.com>\n \n \t* frags.c (frag_grow): Fix comment."
    },
    {
      "sha": "7de42aea959f0e472f2eddeaf8b58cac27d0e6f2",
      "filename": "gas/config/tc-pdp11.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/config/tc-pdp11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/config/tc-pdp11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-pdp11.c?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -222,6 +222,16 @@ md_number_to_chars (char con[], valueT value, int nbytes)\n       con[2] =  value        & 0xff;\n       con[3] = (value >>  8) & 0xff;\n       break;\n+    case 8:\n+      con[0] = (value >> 48) & 0xff;\n+      con[1] = (value >> 56) & 0xff;\n+      con[2] = (value >> 32) & 0xff;\n+      con[3] = (value >> 40) & 0xff;\n+      con[4] = (value >> 16) & 0xff;\n+      con[5] = (value >> 24) & 0xff;\n+      con[6] =  value        & 0xff;\n+      con[7] = (value >>  8) & 0xff;\n+      break;\n     default:\n       BAD_CASE (nbytes);\n     }"
    },
    {
      "sha": "d722a0cc66e5a71d16804240689e86d7425a404a",
      "filename": "gas/testsuite/gas/all/cond-pdp11.l",
      "status": "added",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/cond-pdp11.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/cond-pdp11.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/cond-pdp11.l?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -0,0 +1,74 @@\n+# This should match the output of gas -alc cond.s.\n+\n+.*cond.s.*\n+\n+\n+   1[ \t]+.if\t0\n+   8[ \t]+.else\n+   9[ \t]+.if\t1\n+  10[ \t]+.endc\n+  11 0000 00 ?00 ?02 ?00[ \t]+.long[ \t]+2\n+  12[ \t]+.if\t0\n+  14[ \t]+.else\n+  15 0004 00 ?00 ?04 ?00[ \t]+.long[ \t]+4\n+  16[ \t]+.endc\n+  17[ \t]+.endc\n+  18[ \t]+\n+  19[ \t]+.if\t0\n+  21[ \t]+.elseif\t1\n+  22[ \t]+.if\t0\n+  24[ \t]+.elseif\t1\n+  25 0008 00 ?00 ?07 ?00[ \t]+.long[ \t]+7\n+  26[ \t]+.endif\n+  27[ \t]+.elseif\t1\n+  29[ \t]+.else\n+  31[ \t]+.endif\n+[ \t]*[1-9][0-9]*[ \t]+\n+[ \t]*[1-9][0-9]*[ \t]+\\.comm[ \t]+v_c,[ \t]*1[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.ifndef[ \t]+v_c[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+x[ \t]*<>[ \t]*x[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+y,[ \t]*x[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.ifndef[ \t]+y[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+x[ \t]*<>[ \t]*y[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+z,[ \t]*x[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+y[ \t]*<>[ \t]*z[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+v_a,[ \t]*y[ \t]*\\+[ \t]*1[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+v_b,[ \t]*z[ \t]*-[ \t]*1[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*==[ \t]*x[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*-[ \t]*1[ \t]*<>[ \t]*x[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*<>[ \t]*v_b[ \t]*\\+[ \t]*2[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*-[ \t]*v_b[ \t]*<>[ \t]*2[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+x,[ \t]*0[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+y[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.elseif[ \t]+y[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\n+[ \t]*[1-9][0-9]*[ \t]+\\.macro[ \t]+m[ \t]+x,[ \t]*y[ \t]*\n+#...\n+[ \t]*[1-9][0-9]*[ \t]+\\.endm[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]+[048c] FF ?FF ?FF ?FF[ \t]+m[ \t]+,[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+FF ?FF ?FF ?FF[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]+[048c] FF ?FF ?FF ?FF[ \t]+m[ \t]+,[ \t]*10[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+00 ?00 ?0A ?00[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]+[048c] 00 ?00 ?0B ?00[ \t]+m[ \t]+11,[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+FF ?FF ?FF ?FF[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+[0-9a-f]+[048c] 00 ?00 ?0C ?00[ \t]+m[ \t]+12,[ \t]*13[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+00 ?00 ?0D ?00[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+0[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\n+[ \t]*[1-9][0-9]*[ \t]+.*\\.p2align 5,0\n+#pass"
    },
    {
      "sha": "0e2ddcdbcf95c4c14ec362d19b357c2e73a52736",
      "filename": "gas/testsuite/gas/all/eqv-dot-pdp11.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/eqv-dot-pdp11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/eqv-dot-pdp11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/eqv-dot-pdp11.d?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -0,0 +1,12 @@\n+#objdump: -s -j .data\n+#name: eqv involving dot (PDP11)\n+# Special for PDP11 which is little-endian for octets in shorts\n+# but big-endian for shorts in longs per register assignments for\n+# mul/div and in by convention in memory (at least for Unix).\n+\n+.*: .*\n+\n+Contents of section \\.data:\n+ 0000 0+0000 0+0100 0+0200 0+0c00  .*\n+ 0010 0+1000 140+ 0+1000 1c0+  .*\n+#pass"
    },
    {
      "sha": "cd8cb9198b036cc7d3ac7cf79bcdafd11018d8e5",
      "filename": "gas/testsuite/gas/all/eqv-dot-pdp11.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/eqv-dot-pdp11.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/eqv-dot-pdp11.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/eqv-dot-pdp11.s?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -0,0 +1,8 @@\n+\t.data\n+x:\t.long 0, 1, 2, . - x\n+ y = . - x\n+ z == . - x\n+\t.long y\n+\t.long z\n+\t.long y\n+\t.long z"
    },
    {
      "sha": "c782955370ab225f2be4930884743689f39ee535",
      "filename": "gas/testsuite/gas/all/gas.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 3,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/gas.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66e3eb08a52ba20d3fb468cef04952aafdf534d4/gas/testsuite/gas/all/gas.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/gas.exp?ref=66e3eb08a52ba20d3fb468cef04952aafdf534d4",
      "patch": "@@ -91,7 +91,11 @@ switch -glob $target_triplet {\n \n gas_test \"eqv-ok.s\" \"\" \"\" \".eqv support\"\n gas_test_error \"eqv-bad.s\" \"\" \".eqv for symbol already set\"\n-run_dump_test eqv-dot\n+if { [istarget \"pdp11-*-*\"] } then {\n+    run_dump_test eqv-dot-pdp11\n+} else {\n+    run_dump_test eqv-dot\n+}\n \n if { ![istarget \"bfin-*-*\"] } then {\n     gas_test \"assign-ok.s\" \"\" \"\" \"== assignment support\"\n@@ -326,12 +330,17 @@ proc test_cond {} {\n     global subdir\n \n     set testname \"conditional listings\"\n+    if { [istarget \"pdp11-*-*\"] } then {\n+\tset listing \"cond-pdp11.l\"\n+    } else {\n+\tset listing \"cond.l\"\n+    }\n     gas_run cond.s \"-alc\" \">dump.out\"\n     if ![string match \"\" $comp_output] {\n \tsend_log \"$comp_output\\n\"\n \tfail $testname\n     } else {\n-\tif { [regexp_diff dump.out $srcdir/$subdir/cond.l] } {\n+\tif { [regexp_diff dump.out $srcdir/$subdir/$listing] } {\n \t    fail $testname\n \t} else {\n \t    pass $testname\n@@ -392,7 +401,11 @@ if { ![istarget \"powerpc*-*-*\"] && ![istarget \"rs6000*-*-*\"] && ![istarget \"s390\n }\n \n run_dump_test quad\n-run_dump_test octa\n+\n+# poor little PDP-11 can't handle 16-byte values\n+if { ![istarget \"pdp11-*-*\"] } {\n+    run_dump_test octa\n+}\n \n # .set works differently on some targets.\n switch -glob $target_triplet {"
    }
  ]
}