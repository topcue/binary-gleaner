{
  "sha": "39b16f87f720b5cc454eac1e668c2ce2c60bfe15",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzliMTZmODdmNzIwYjVjYzQ1NGVhYzFlNjY4YzJjZTJjNjBiZmUxNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:14:12Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:19:41Z"
    },
    "message": "Move line_header_hash to dwarf2_per_objfile\n\nThe `line_header_hash` field of `struct dwarf2_per_bfd` contains some\n`struct line_header` objects.  A `struct line_header` objects contains\nsome `file_entry` objects.  A `file_entry` object contains a pointer to\nthe `symtab` object created from it.  The `line_header_hash` is\ntherefore ultimately objfile-dependent and can't be shared as-is between\nobjfiles.\n\nMove it from `dwarf2_per_bfd` to `dwarf2_per_objfile`.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.h (struct dwarf2_per_bfd) <line_header_hash>: Move\n\tto...\n\t(struct dwarf2_per_objfile) <line_header_hash>: ... here.\n\t* dwarf2/read.c (handle_DW_AT_stmt_list): Update.\n\nChange-Id: I8d2ee04df4f4847c2db99061fc976c35af98ac71",
    "tree": {
      "sha": "5fd75891054c9b9e0ecf52f68f28219cab3b76d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5fd75891054c9b9e0ecf52f68f28219cab3b76d9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/39b16f87f720b5cc454eac1e668c2ce2c60bfe15",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39b16f87f720b5cc454eac1e668c2ce2c60bfe15",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/39b16f87f720b5cc454eac1e668c2ce2c60bfe15",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39b16f87f720b5cc454eac1e668c2ce2c60bfe15/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fcf23d5b654b0fc05e99c445ebd471221a290cf4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fcf23d5b654b0fc05e99c445ebd471221a290cf4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fcf23d5b654b0fc05e99c445ebd471221a290cf4"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 16,
    "deletions": 9
  },
  "files": [
    {
      "sha": "589c3f4b262785a6ba0c50db06f2ff4009a1d76d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39b16f87f720b5cc454eac1e668c2ce2c60bfe15/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39b16f87f720b5cc454eac1e668c2ce2c60bfe15/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=39b16f87f720b5cc454eac1e668c2ce2c60bfe15",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.h (struct dwarf2_per_bfd) <line_header_hash>: Move\n+\tto...\n+\t(struct dwarf2_per_objfile) <line_header_hash>: ... here.\n+\t* dwarf2/read.c (handle_DW_AT_stmt_list): Update.\n+\n 2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c (struct mapped_index_base) <symbol_name_at,"
    },
    {
      "sha": "c77c356212309b3bbe920807330690401eee2980",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39b16f87f720b5cc454eac1e668c2ce2c60bfe15/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39b16f87f720b5cc454eac1e668c2ce2c60bfe15/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=39b16f87f720b5cc454eac1e668c2ce2c60bfe15",
      "patch": "@@ -10888,10 +10888,10 @@ handle_DW_AT_stmt_list (struct die_info *die, struct dwarf2_cu *cu,\n      compile_unit, then use the line header hash table if it's already\n      created, but don't create one just yet.  */\n \n-  if (dwarf2_per_objfile->per_bfd->line_header_hash == NULL\n+  if (dwarf2_per_objfile->line_header_hash == NULL\n       && die->tag == DW_TAG_partial_unit)\n     {\n-      dwarf2_per_objfile->per_bfd->line_header_hash\n+      dwarf2_per_objfile->line_header_hash\n \t.reset (htab_create_alloc (127, line_header_hash_voidp,\n \t\t\t\t   line_header_eq_voidp,\n \t\t\t\t   free_line_header_voidp,\n@@ -10901,9 +10901,9 @@ handle_DW_AT_stmt_list (struct die_info *die, struct dwarf2_cu *cu,\n   line_header_local.sect_off = line_offset;\n   line_header_local.offset_in_dwz = cu->per_cu->is_dwz;\n   line_header_local_hash = line_header_hash (&line_header_local);\n-  if (dwarf2_per_objfile->per_bfd->line_header_hash != NULL)\n+  if (dwarf2_per_objfile->line_header_hash != NULL)\n     {\n-      slot = htab_find_slot_with_hash (dwarf2_per_objfile->per_bfd->line_header_hash.get (),\n+      slot = htab_find_slot_with_hash (dwarf2_per_objfile->line_header_hash.get (),\n \t\t\t\t       &line_header_local,\n \t\t\t\t       line_header_local_hash, NO_INSERT);\n \n@@ -10927,11 +10927,11 @@ handle_DW_AT_stmt_list (struct die_info *die, struct dwarf2_cu *cu,\n   cu->line_header = lh.release ();\n   cu->line_header_die_owner = die;\n \n-  if (dwarf2_per_objfile->per_bfd->line_header_hash == NULL)\n+  if (dwarf2_per_objfile->line_header_hash == NULL)\n     slot = NULL;\n   else\n     {\n-      slot = htab_find_slot_with_hash (dwarf2_per_objfile->per_bfd->line_header_hash.get (),\n+      slot = htab_find_slot_with_hash (dwarf2_per_objfile->line_header_hash.get (),\n \t\t\t\t       &line_header_local,\n \t\t\t\t       line_header_local_hash, INSERT);\n       gdb_assert (slot != NULL);"
    },
    {
      "sha": "b53aab7be6383e1a0c94a54ba55afa0e5f0c235a",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/39b16f87f720b5cc454eac1e668c2ce2c60bfe15/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/39b16f87f720b5cc454eac1e668c2ce2c60bfe15/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=39b16f87f720b5cc454eac1e668c2ce2c60bfe15",
      "patch": "@@ -234,9 +234,6 @@ struct dwarf2_per_bfd\n   /* The CUs we recently read.  */\n   std::vector<dwarf2_per_cu_data *> just_read_cus;\n \n-  /* Table containing line_header indexed by offset and offset_in_dwz.  */\n-  htab_up line_header_hash;\n-\n   /* Table containing all filenames.  This is an optional because the\n      table is lazily constructed on first access.  */\n   gdb::optional<filename_seen_cache> filenames_cache;\n@@ -368,6 +365,9 @@ struct dwarf2_per_objfile\n      The mapping is done via (CU/TU + DIE offset) -> type.  */\n   htab_up die_type_hash;\n \n+  /* Table containing line_header indexed by offset and offset_in_dwz.  */\n+  htab_up line_header_hash;\n+\n private:\n   /* Hold the corresponding compunit_symtab for each CU or TU.  This\n      is indexed by dwarf2_per_cu_data::index.  A NULL value means"
    }
  ]
}