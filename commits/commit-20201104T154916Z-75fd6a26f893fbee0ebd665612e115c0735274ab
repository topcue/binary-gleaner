{
  "sha": "75fd6a26f893fbee0ebd665612e115c0735274ab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzVmZDZhMjZmODkzZmJlZTBlYmQ2NjU2MTJlMTE1YzA3MzUyNzRhYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:16Z"
    },
    "message": "Avoid crash in ada-lang.c:to_fixed_array_type\n\nWhen debugging Ada programs compiled by certain versions of GNAT with\n-fgnat-encodings=minimal, gdb can crash.  These crashes occur when\nrunning the gdb test suite, once some of the later patches in this\nseries have been applied.\n\nThis patch works around the bug by throwing an exception in the\nfailing case.  I did not implement a full fix because GNAT has been\nchanged to emit better DWARF, and so in the near future this will stop\nbeing a problem.  (Currently, users don't generally use\n-fgnat-encodings=minimal, and the GNAT default will only be changed in\na fully-patched compiler.)\n\ngdb/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (to_fixed_array_type): Error if\n\tdecode_constrained_packed_array_type returns NULL.",
    "tree": {
      "sha": "0b13eb7086bf9ab771fe01db0574601e131de5ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0b13eb7086bf9ab771fe01db0574601e131de5ee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/75fd6a26f893fbee0ebd665612e115c0735274ab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75fd6a26f893fbee0ebd665612e115c0735274ab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/75fd6a26f893fbee0ebd665612e115c0735274ab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75fd6a26f893fbee0ebd665612e115c0735274ab/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93f9561e0fa112bab102dc2c22dd114c84c06a16",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93f9561e0fa112bab102dc2c22dd114c84c06a16",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93f9561e0fa112bab102dc2c22dd114c84c06a16"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 10,
    "deletions": 1
  },
  "files": [
    {
      "sha": "9b905ee091bf0b4bc4119b2fa138ba2e8742e947",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75fd6a26f893fbee0ebd665612e115c0735274ab/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75fd6a26f893fbee0ebd665612e115c0735274ab/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=75fd6a26f893fbee0ebd665612e115c0735274ab",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (to_fixed_array_type): Error if\n+\tdecode_constrained_packed_array_type returns NULL.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/leb.h (read_3_bytes): Use bfd_get_24."
    },
    {
      "sha": "941b35f60815344f189b4b91603c23e24191b302",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75fd6a26f893fbee0ebd665612e115c0735274ab/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75fd6a26f893fbee0ebd665612e115c0735274ab/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=75fd6a26f893fbee0ebd665612e115c0735274ab",
      "patch": "@@ -8350,7 +8350,11 @@ to_fixed_array_type (struct type *type0, struct value *dval,\n \n   constrained_packed_array_p = ada_is_constrained_packed_array_type (type0);\n   if (constrained_packed_array_p)\n-    type0 = decode_constrained_packed_array_type (type0);\n+    {\n+      type0 = decode_constrained_packed_array_type (type0);\n+      if (type0 == nullptr)\n+\terror (_(\"could not decode constrained packed array type\"));\n+    }\n \n   index_type_desc = ada_find_parallel_type (type0, xa_suffix);\n "
    }
  ]
}