{
  "sha": "c8fbd44a018a9923f906bfd2be5489caa87b602a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzhmYmQ0NGEwMThhOTkyM2Y5MDZiZmQyYmU1NDg5Y2FhODdiNjAyYQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-03-23T13:46:49Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-03-23T13:50:36Z"
    },
    "message": "gdb: remove target_is_pushed free function\n\nSame principle as the previous patches.\n\ngdb/ChangeLog:\n\n\t* target.h (target_is_pushed): Remove, update callers to use\n\tinferior::target_is_pushed instead.\n\t* target.c (target_is_pushed): Remove.\n\nChange-Id: I9862e6205acc65672da807cbe4b46cde009e7b9d",
    "tree": {
      "sha": "e671690688c207daef290a5e0a4857712dab73a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e671690688c207daef290a5e0a4857712dab73a7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c8fbd44a018a9923f906bfd2be5489caa87b602a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c8fbd44a018a9923f906bfd2be5489caa87b602a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c8fbd44a018a9923f906bfd2be5489caa87b602a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c8fbd44a018a9923f906bfd2be5489caa87b602a/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "02980c5645e355833b989e9551befddd54e75640",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02980c5645e355833b989e9551befddd54e75640",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/02980c5645e355833b989e9551befddd54e75640"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 24,
    "deletions": 29
  },
  "files": [
    {
      "sha": "b6639ee77ada59a75ffd850c95f88cacd5fcf7f8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-23  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* target.h (target_is_pushed): Remove, update callers to use\n+\tinferior::target_is_pushed instead.\n+\t* target.c (target_is_pushed): Remove.\n+\n 2021-03-23  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* target.h (push_target): Remove, update callers to use"
    },
    {
      "sha": "587f53174163235fbe00a91a65067f513bbd5ad8",
      "filename": "gdb/darwin-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/darwin-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/darwin-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -1658,7 +1658,7 @@ darwin_attach_pid (struct inferior *inf)\n     }\n \n   target_ops *darwin_ops = get_native_target ();\n-  if (!target_is_pushed (darwin_ops))\n+  if (!inf->target_is_pushed (darwin_ops))\n     inf->push_target (darwin_ops);\n }\n "
    },
    {
      "sha": "816f901ce23e2292461c494a51ada51013869c43",
      "filename": "gdb/gnu-nat.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/gnu-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/gnu-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-nat.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -2109,12 +2109,13 @@ gnu_nat_target::create_inferior (const char *exec_file,\n \t\t\t\t int from_tty)\n {\n   struct inf *inf = cur_inf ();\n+  inferior *inferior = current_inferior ();\n   int pid;\n \n   inf_debug (inf, \"creating inferior\");\n \n-  if (!target_is_pushed (this))\n-    current_inferior ()->push_target (this);\n+  if (!inf->target_is_pushed (this))\n+    inf->push_target (this);\n \n   pid = fork_inferior (exec_file, allargs, env, gnu_ptrace_me,\n \t\t       NULL, NULL, NULL, NULL);"
    },
    {
      "sha": "9899545a1e218d948db4632c336eb653b3ae6de3",
      "filename": "gdb/go32-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/go32-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/go32-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go32-nat.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -756,7 +756,7 @@ go32_nat_target::create_inferior (const char *exec_file,\n   inf = current_inferior ();\n   inferior_appeared (inf, SOME_PID);\n \n-  if (!target_is_pushed (this))\n+  if (!inf->target_is_pushed (this))\n     inf->push_target (this);\n \n   thread_info *thr = add_thread_silent (ptid_t (SOME_PID));"
    },
    {
      "sha": "b6fa71fd2c0b08e97acd9a619a3419c8cbb014ea",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -74,15 +74,17 @@ inf_ptrace_target::create_inferior (const char *exec_file,\n \t\t\t\t    const std::string &allargs,\n \t\t\t\t    char **env, int from_tty)\n {\n+  inferior *inf = current_inferior ();\n+\n   /* Do not change either targets above or the same target if already present.\n      The reason is the target stack is shared across multiple inferiors.  */\n-  int ops_already_pushed = target_is_pushed (this);\n+  int ops_already_pushed = inf->target_is_pushed (this);\n \n   target_unpush_up unpusher;\n   if (! ops_already_pushed)\n     {\n       /* Clear possible core file with its process_stratum.  */\n-      current_inferior ()->push_target (this);\n+      inf->push_target (this);\n       unpusher.reset (this);\n     }\n \n@@ -127,20 +129,17 @@ inf_ptrace_target::mourn_inferior ()\n void\n inf_ptrace_target::attach (const char *args, int from_tty)\n {\n-  pid_t pid;\n-  struct inferior *inf;\n+  inferior *inf = current_inferior ();\n \n   /* Do not change either targets above or the same target if already present.\n      The reason is the target stack is shared across multiple inferiors.  */\n-  int ops_already_pushed = target_is_pushed (this);\n+  int ops_already_pushed = inf->target_is_pushed (this);\n \n-  pid = parse_pid_to_attach (args);\n+  pid_t pid = parse_pid_to_attach (args);\n \n   if (pid == getpid ())\t\t/* Trying to masturbate?  */\n     error (_(\"I refuse to debug myself!\"));\n \n-  inf = current_inferior ();\n-\n   target_unpush_up unpusher;\n   if (! ops_already_pushed)\n     {"
    },
    {
      "sha": "41b436cfa27fc2b2ff3aeca583cf1b811fcf5e3f",
      "filename": "gdb/nto-procfs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/nto-procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/nto-procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nto-procfs.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -717,7 +717,7 @@ nto_procfs_target::attach (const char *args, int from_tty)\n   inferior_appeared (inf, pid);\n   inf->attach_flag = 1;\n \n-  if (!target_is_pushed (ops))\n+  if (!inf->target_is_pushed (ops))\n     inf->push_target (ops);\n \n   update_thread_list ();\n@@ -1318,7 +1318,7 @@ nto_procfs_target::create_inferior (const char *exec_file,\n       /* warning( \"Failed to set Kill-on-Last-Close flag: errno = %d(%s)\\n\",\n \t errn, safe_strerror(errn) ); */\n     }\n-  if (!target_is_pushed (ops))\n+  if (!inf->target_is_pushed (ops))\n     inf->push_target (ops);\n   target_terminal::init ();\n "
    },
    {
      "sha": "91d2039e3f9a46d64afd12d1e971efc5324185ef",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -1769,7 +1769,7 @@ procfs_target::attach (const char *args, int from_tty)\n \n   /* Push the target if needed, ensure it gets un-pushed it if attach fails.  */\n   target_unpush_up unpusher;\n-  if (!target_is_pushed (this))\n+  if (!inf->target_is_pushed (this))\n     {\n       current_inferior ()->push_target (this);\n       unpusher.reset (this);\n@@ -2862,7 +2862,7 @@ procfs_target::create_inferior (const char *exec_file,\n       shell_file = tryname;\n     }\n \n-  if (!target_is_pushed (this))\n+  if (!inf->target_is_pushed (this))\n     current_inferior ()->push_target (this);\n \n   pid = fork_inferior (exec_file, allargs, env, procfs_set_exec_trap,"
    },
    {
      "sha": "afc4b2cbbb601585c16547f4bc59a724bbf91eb0",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -647,15 +647,6 @@ pop_all_targets (void)\n   pop_all_targets_above (dummy_stratum);\n }\n \n-/* Return true if T is now pushed in the current inferior's target\n-   stack.  Return false otherwise.  */\n-\n-bool\n-target_is_pushed (target_ops *t)\n-{\n-  return current_inferior ()->target_is_pushed (t);\n-}\n-\n void\n target_unpusher::operator() (struct target_ops *ops) const\n {\n@@ -3097,7 +3088,7 @@ debug_target::info () const\n void\n target_close (struct target_ops *targ)\n {\n-  gdb_assert (!target_is_pushed (targ));\n+  gdb_assert (!current_inferior ()->target_is_pushed (targ));\n \n   fileio_handles_invalidate_target (targ);\n "
    },
    {
      "sha": "6b71e741f6d7c55ec595dfa7c299e9e51d68527c",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -2411,8 +2411,6 @@ extern void pop_all_targets_at_and_above (enum strata stratum);\n    strictly above ABOVE_STRATUM.  */\n extern void pop_all_targets_above (enum strata above_stratum);\n \n-extern bool target_is_pushed (target_ops *t);\n-\n extern CORE_ADDR target_translate_tls_address (struct objfile *objfile,\n \t\t\t\t\t       CORE_ADDR offset);\n "
    },
    {
      "sha": "00f83536e330beb16daf6707eb910777a514dc13",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c8fbd44a018a9923f906bfd2be5489caa87b602a/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=c8fbd44a018a9923f906bfd2be5489caa87b602a",
      "patch": "@@ -2028,7 +2028,7 @@ windows_nat_target::do_initial_windows_stuff (DWORD pid, bool attaching)\n   current_event.dwProcessId = pid;\n   memset (&current_event, 0, sizeof (current_event));\n   inf = current_inferior ();\n-  if (!target_is_pushed (this))\n+  if (!inf->target_is_pushed (this))\n     inf->push_target (this);\n   disable_breakpoints_in_shlibs ();\n   windows_clear_solib ();"
    }
  ]
}