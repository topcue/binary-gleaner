{
  "sha": "621821900289e9ef3472dc430d6fcf4d55b301e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjIxODIxOTAwMjg5ZTllZjM0NzJkYzQzMGQ2ZmNmNGQ1NWIzMDFlMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:40Z"
    },
    "message": "Introduce c_value_print_inner\n\nThis introduces c_value_print_inner, which implements the\nla_value_print_inner method for the C family of languages.  In this\npatch, it is just a simple wrapper of c_val_print.  However,\nsubsequent patches will convert it to use the value API.  The\ntransformation is done this way to make each patch easier to review.\n\nFuture patches will apply this same treatment to other languages as\nwell.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* opencl-lang.c (opencl_language_defn): Use c_value_print_inner.\n\t* objc-lang.c (objc_language_defn): Use c_value_print_inner.\n\t* c-valprint.c (c_value_print_inner): New function.\n\t* c-lang.h (c_value_print_inner): Declare.\n\t* c-lang.c (c_language_defn, cplus_language_defn)\n\t(asm_language_defn, minimal_language_defn): Use\n\tc_value_print_inner.",
    "tree": {
      "sha": "499628efdf03d1e3787edfa9a294a929694281ce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/499628efdf03d1e3787edfa9a294a929694281ce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/621821900289e9ef3472dc430d6fcf4d55b301e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/621821900289e9ef3472dc430d6fcf4d55b301e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/621821900289e9ef3472dc430d6fcf4d55b301e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/621821900289e9ef3472dc430d6fcf4d55b301e2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1e592a8ae0985645e61f6ffbfee064af8826b457",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e592a8ae0985645e61f6ffbfee064af8826b457",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1e592a8ae0985645e61f6ffbfee064af8826b457"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 32,
    "deletions": 6
  },
  "files": [
    {
      "sha": "add19fe186f44ee7216bcb8eaf8b2b19eff70396",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=621821900289e9ef3472dc430d6fcf4d55b301e2",
      "patch": "@@ -1,3 +1,13 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* opencl-lang.c (opencl_language_defn): Use c_value_print_inner.\n+\t* objc-lang.c (objc_language_defn): Use c_value_print_inner.\n+\t* c-valprint.c (c_value_print_inner): New function.\n+\t* c-lang.h (c_value_print_inner): Declare.\n+\t* c-lang.c (c_language_defn, cplus_language_defn)\n+\t(asm_language_defn, minimal_language_defn): Use\n+\tc_value_print_inner.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* p-valprint.c (pascal_object_print_value_fields): Now static."
    },
    {
      "sha": "c919f02fa7215c2bd25621eb5eccc696ea4bf91f",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=621821900289e9ef3472dc430d6fcf4d55b301e2",
      "patch": "@@ -904,7 +904,7 @@ extern const struct language_defn c_language_defn =\n   c_print_type,\t\t\t/* Print a type using appropriate syntax */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_val_print,\t\t\t/* Print a value using appropriate syntax */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n   default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n@@ -1050,7 +1050,7 @@ extern const struct language_defn cplus_language_defn =\n   c_print_type,\t\t\t/* Print a type using appropriate syntax */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_val_print,\t\t\t/* Print a value using appropriate syntax */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n   default_read_var_value,\t/* la_read_var_value */\n   cplus_skip_trampoline,\t/* Language specific skip_trampoline */\n@@ -1105,7 +1105,7 @@ extern const struct language_defn asm_language_defn =\n   c_print_type,\t\t\t/* Print a type using appropriate syntax */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_val_print,\t\t\t/* Print a value using appropriate syntax */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n   default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */\n@@ -1160,7 +1160,7 @@ extern const struct language_defn minimal_language_defn =\n   c_print_type,\t\t\t/* Print a type using appropriate syntax */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_val_print,\t\t\t/* Print a value using appropriate syntax */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n   default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */"
    },
    {
      "sha": "7638ccf6d520fea5c4b10616655c8fbc5feb3a47",
      "filename": "gdb/c-lang.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/c-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/c-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.h?ref=621821900289e9ef3472dc430d6fcf4d55b301e2",
      "patch": "@@ -87,6 +87,11 @@ extern void c_val_print (struct type *,\n \t\t\t struct value *,\n \t\t\t const struct value_print_options *);\n \n+/* Implement la_value_print_inner for the C family of languages.  */\n+\n+extern void c_value_print_inner (struct value *, struct ui_file *, int,\n+\t\t\t\t const struct value_print_options *);\n+\n extern void c_value_print (struct value *, struct ui_file *,\n \t\t\t   const struct value_print_options *);\n "
    },
    {
      "sha": "b5ae3fac48feb8b8014064e78f4c7c0b97febead",
      "filename": "gdb/c-valprint.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/c-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/c-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-valprint.c?ref=621821900289e9ef3472dc430d6fcf4d55b301e2",
      "patch": "@@ -557,6 +557,17 @@ c_val_print (struct type *type,\n       break;\n     }\n }\n+\n+/* See c-lang.h.  */\n+\n+void\n+c_value_print_inner (struct value *val, struct ui_file *stream, int recurse,\n+\t\t     const struct value_print_options *options)\n+{\n+  c_val_print (value_type (val), value_embedded_offset (val),\n+\t       value_address (val), stream, recurse, val, options);\n+}\n+\n \f\n void\n c_value_print (struct value *val, struct ui_file *stream, "
    },
    {
      "sha": "5126e9f4ca90eb613e2d1de362dfb5ed7e7d9ca3",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=621821900289e9ef3472dc430d6fcf4d55b301e2",
      "patch": "@@ -382,7 +382,7 @@ extern const struct language_defn objc_language_defn = {\n   c_print_type,\t\t\t/* Print a type using appropriate syntax */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_val_print,\t\t\t/* Print a value using appropriate syntax */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n   default_read_var_value,\t/* la_read_var_value */\n   objc_skip_trampoline, \t/* Language specific skip_trampoline */"
    },
    {
      "sha": "a48079881b557dba3fdbaf3cc73ef1eb2a452a3c",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/621821900289e9ef3472dc430d6fcf4d55b301e2/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=621821900289e9ef3472dc430d6fcf4d55b301e2",
      "patch": "@@ -1061,7 +1061,7 @@ extern const struct language_defn opencl_language_defn =\n   opencl_print_type,\t\t/* Print a type using appropriate syntax */\n   c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   c_val_print,\t\t\t/* Print a value using appropriate syntax */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  c_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value */\n   default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline */"
    }
  ]
}