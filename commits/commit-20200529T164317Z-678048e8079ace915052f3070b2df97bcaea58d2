{
  "sha": "678048e8079ace915052f3070b2df97bcaea58d2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njc4MDQ4ZTgwNzlhY2U5MTUwNTJmMzA3MGIyZGY5N2JjYWVhNThkMg==",
  "commit": {
    "author": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-05-29T16:43:17Z"
    },
    "committer": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-05-29T16:43:17Z"
    },
    "message": "Fix build errors in with clang in gdb.compile/compile-cplus.c\n\nClang fails to compile the file, with the following error:\n  fatal error: 'iostream' file not found\n\nThis prevents the following testcase from executing:\n  gdb.compile/compile-cplus.exp\n\nThe testcase sets additional_flags when building with GCC, which\nthis commit causes to also be set when building with clang.  This\nmakes the testcase fail to build with a different error:\n  warning: treating 'c' input as 'c++' when in C++ mode, this behavior\n  is deprecated [-Wdeprecated]\nso this commit adds -Wno-deprecated in two places to sidestep this.\nNote that, while allowing the testcase to build, this commit reveals\nfailures when the testsuite is built using clang.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.compile/compile-cplus.exp (additional_flags): Also\n\tset when building with clang.\n\t(additional_flags, srcfilesoptions): Pass -Wno-deprecated\n\twhen building with clang.",
    "tree": {
      "sha": "e4e005b57942b3c9db2ba8502a8b9b2ac896908e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e4e005b57942b3c9db2ba8502a8b9b2ac896908e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/678048e8079ace915052f3070b2df97bcaea58d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/678048e8079ace915052f3070b2df97bcaea58d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/678048e8079ace915052f3070b2df97bcaea58d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/678048e8079ace915052f3070b2df97bcaea58d2/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "9fcafd23fa6d919f112e9a7f73e72895c2457de1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9fcafd23fa6d919f112e9a7f73e72895c2457de1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9fcafd23fa6d919f112e9a7f73e72895c2457de1"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 20,
    "deletions": 2
  },
  "files": [
    {
      "sha": "d4e7220b3269c1c2eb43844959bc8e01cff297ab",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/678048e8079ace915052f3070b2df97bcaea58d2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/678048e8079ace915052f3070b2df97bcaea58d2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=678048e8079ace915052f3070b2df97bcaea58d2",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-29  Gary Benson <gbenson@redhat.com>\n+\n+\t* gdb.compile/compile-cplus.exp (additional_flags): Also\n+\tset when building with clang.\n+\t(additional_flags, srcfilesoptions): Pass -Wno-deprecated\n+\twhen building with clang.\n+\n 2020-05-29  Gary Benson <gbenson@redhat.com>\n \n \t* gdb.arch/i386-avx.exp (additional_flags): Also set when"
    },
    {
      "sha": "85b2f20a8fad20cf5155789c52c22d96cd22df73",
      "filename": "gdb/testsuite/gdb.compile/compile-cplus.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/678048e8079ace915052f3070b2df97bcaea58d2/gdb/testsuite/gdb.compile/compile-cplus.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/678048e8079ace915052f3070b2df97bcaea58d2/gdb/testsuite/gdb.compile/compile-cplus.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.compile/compile-cplus.exp?ref=678048e8079ace915052f3070b2df97bcaea58d2",
      "patch": "@@ -19,11 +19,16 @@ standard_testfile .c compile-shlib.c compile-constvar.S compile-nodebug.c\n \n get_compiler_info\n set options {}\n-if [test_compiler_info gcc*] {\n+if { [test_compiler_info gcc*] || [test_compiler_info clang*] } {\n     lappend options additional_flags=-g3\n     lappend options additional_flags=-std=gnu++11\n     lappend options c++\n }\n+if [test_compiler_info clang*] {\n+    # Treating C input as C++ is deprecated in Clang, so\n+    # the build will fail without disabling -Wdeprecated.\n+    lappend options additional_flags=-Wno-deprecated\n+}\n \n if { ![istarget x86_64-*-* ] || ![is_lp64_target] } {\n     verbose \"Skipping x86_64 LOC_CONST test.\"\n@@ -34,7 +39,13 @@ set srcfilesoptions [list ${srcfile} ${options}]\n if { $srcfile3 != \"\" } {\n     lappend srcfilesoptions $srcfile3 ${options}\n }\n-lappend srcfilesoptions $srcfile4 \"nodebug c++\"\n+set srcfile4options \"nodebug c++\"\n+if [test_compiler_info clang*] {\n+    # Treating C input as C++ is deprecated in Clang, so\n+    # the build will fail without disabling -Wdeprecated.\n+    set srcfile4options \"$srcfile4options additional_flags=-Wno-deprecated\"\n+}\n+lappend srcfilesoptions $srcfile4 $srcfile4options\n if { [eval build_executable_from_specs ${testfile}.exp $testfile {$options} ${srcfilesoptions}] } {\n     return -1\n }"
    }
  ]
}