{
  "sha": "317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzE3ZDI2NjhkMDFjN2RkYzk1NDUwMjliZjU2ZDJiOGM0ZDJiYmZlYg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-22T06:38:44Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-22T06:38:44Z"
    },
    "message": "[gdb/symtab] Store external var decls in psymtab\n\nConsider a test-case consisting of source file test.c:\n...\nextern int aaa;\nint\nmain (void)\n{\n  return 0;\n}\n...\nand test-2.c:\n...\nint aaa = 33;\n...\ncompiled with debug info only for test.c:\n...\n$ gcc -c test.c -g; gcc -c test2.c; gcc test.o test2.o -g\n...\n\nWhen trying to print aaa, we get:\n...\n$ gdb -batch a.out -ex \"print aaa\"\n'aaa' has unknown type; cast it to its declared type\n...\nbut with -readnow we have:\n...\n$ gdb -readnow -batch a.out -ex \"print aaa\"\n$1 = 33\n...\n\nIn the -readnow case, the symbol for aaa in the full symtab has\nLOC_UNRESOLVED, and the symbol type is combined with the minimal symbol\naddress, to read the value and print it without cast.\n\nWithout the -readnow, we create partial symbols, but the aaa decl is missing\nfrom the partial symtabs, so we find it only in the minimal symbols, resulting\nin the cast request.  If the aaa decl would have been in the partial symtabs,\nit would have been found, and the full symtab would have been expanded, after\nwhich things would be as with -readnow.\n\nThe function add_partial_symbol has a comment on the LOC_UNRESOLVED +\nminimal symbol addres construct at DW_TAG_variable handling:\n...\n      else if (pdi->is_external)\n\t{\n\t  /* Global Variable.\n\t     Don't enter into the minimal symbol tables as there is\n\t     a minimal symbol table entry from the ELF symbols already.\n\t     Enter into partial symbol table if it has a location\n\t     descriptor or a type.\n\t     If the location descriptor is missing, new_symbol will create\n\t     a LOC_UNRESOLVED symbol, the address of the variable will then\n\t     be determined from the minimal symbol table whenever the variable\n\t     is referenced.\n...\nbut it's not triggered due to this test in scan_partial_symbols:\n...\n            case DW_TAG_variable:\n\t    ...\n              if (!pdi->is_declaration)\n                {\n                  add_partial_symbol (pdi, cu);\n                }\n...\n\nFix this in scan_partial_symbols by allowing external variable decls to be\nadded to the partial symtabs.\n\nBuild and reg-tested on x86_64-linux.\n\nThe patch caused this regression:\n...\n(gdb) print a_thread_local^M\nCannot find thread-local storage for process 0, executable file tls/tls:^M\nCannot find thread-local variables on this target^M\n(gdb) FAIL: gdb.threads/tls.exp: print a_thread_local\n...\nwhile without the patch we have:\n...\n(gdb) print a_thread_local^M\nCannot read `a_thread_local' without registers^M\n(gdb) PASS: gdb.threads/tls.exp: print a_thread_local\n...\n\nHowever, without the patch but with -readnow we have the same FAIL as with the\npatch (filed as PR25807).  In other words, the patch has the effect that we\nget the same result with and without -readnow.\n\nThis can be explained as follows.  Without the patch, and without -readnow, we\nhave two a_thread_locals, the def and the decl:\n...\n$ gdb -batch outputs/gdb.threads/tls/tls \\\n    -ex \"maint expand-symtabs\" \\\n    -ex \"print a_thread_local\" \\\n    -ex \"maint print symbols\" \\\n    | grep \"a_thread_local;\"\nCannot read `a_thread_local' without registers\n int a_thread_local; computed at runtime\n int a_thread_local; unresolved\n...\nwhile without the patch and with -readnow, we have the opposite order:\n...\n$ gdb -readnow -batch outputs/gdb.threads/tls/tls  \\\n    -ex \"maint expand-symtabs\" \\\n    -ex \"print a_thread_local\" \\\n    -ex \"maint print symbols\" \\\n    | grep \"a_thread_local;\"\nCannot find thread-local storage for process 0, executable file tls/tls:\nCannot find thread-local variables on this target\n int a_thread_local; unresolved\n int a_thread_local; computed at runtime\n...\n\nWith the patch we have the same order with and without -readnow, but just a\ndifferent one than before without -readnow.\n\nMark the \"Cannot find thread-local variables on this target\" variant a PR25807\nkfail.\n\ngdb/ChangeLog:\n\n2020-04-22  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/25764\n\t* dwarf2/read.c (scan_partial_symbols): Allow external variable decls\n\tin psymtabs.\n\ngdb/testsuite/ChangeLog:\n\n2020-04-22  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/25764\n\t* gdb.base/psym-external-decl-2.c: New test.\n\t* gdb.base/psym-external-decl.c: New test.\n\t* gdb.base/psym-external-decl.exp: New file.\n\t* gdb.threads/tls.exp: Add PR25807 kfail.",
    "tree": {
      "sha": "a94c2a56b447fdea0720de72ad67fe00c6a1eb1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a94c2a56b447fdea0720de72ad67fe00c6a1eb1c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eea9e35758138f83e8c44e0e5a5e47e351f8f31a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eea9e35758138f83e8c44e0e5a5e47e351f8f31a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eea9e35758138f83e8c44e0e5a5e47e351f8f31a"
    }
  ],
  "stats": {
    "total": 100,
    "additions": 97,
    "deletions": 3
  },
  "files": [
    {
      "sha": "c4b92762330e40bed78a45d5d5f9ee108b4e2a1b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-22  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/25764\n+\t* dwarf2/read.c (scan_partial_symbols): Allow external variable decls\n+\tin psymtabs.\n+\n 2020-04-22  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/25801"
    },
    {
      "sha": "c2a9103510f0ff7c7e108e12922a1b3fd9ec74ba",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
      "patch": "@@ -7951,7 +7951,8 @@ scan_partial_symbols (struct partial_die_info *first_die, CORE_ADDR *lowpc,\n \t    case DW_TAG_variable:\n \t    case DW_TAG_typedef:\n \t    case DW_TAG_union_type:\n-\t      if (!pdi->is_declaration)\n+\t      if (!pdi->is_declaration\n+\t\t  || (pdi->tag == DW_TAG_variable && pdi->is_external))\n \t\t{\n \t\t  add_partial_symbol (pdi, cu);\n \t\t}"
    },
    {
      "sha": "a81c37fe7800c6a40968a010939d00eb49fc1058",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-22  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/25764\n+\t* gdb.base/psym-external-decl-2.c: New test.\n+\t* gdb.base/psym-external-decl.c: New test.\n+\t* gdb.base/psym-external-decl.exp: New file.\n+\t* gdb.threads/tls.exp: Add PR25807 kfail.\n+\n 2020-04-22  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/25801"
    },
    {
      "sha": "76e058730118fdb50c0790bbf3bf41597a25c647",
      "filename": "gdb/testsuite/gdb.base/psym-external-decl-2.c",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.base/psym-external-decl-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.base/psym-external-decl-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/psym-external-decl-2.c?ref=317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
      "patch": "@@ -0,0 +1,18 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int aaa = 33;"
    },
    {
      "sha": "7a4b107774120f10cda17abb5e240f79bd764d68",
      "filename": "gdb/testsuite/gdb.base/psym-external-decl.c",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.base/psym-external-decl.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.base/psym-external-decl.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/psym-external-decl.c?ref=317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
      "patch": "@@ -0,0 +1,25 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+extern int aaa;\n+\n+int\n+main (void)\n+{\n+  return 0;\n+}\n+"
    },
    {
      "sha": "bbcc27457557bc234de014d397787d3304b9553c",
      "filename": "gdb/testsuite/gdb.base/psym-external-decl.exp",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.base/psym-external-decl.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.base/psym-external-decl.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/psym-external-decl.exp?ref=317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
      "patch": "@@ -0,0 +1,30 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+standard_testfile .c psym-external-decl-2.c\n+\n+set srcfiles [list $srcfile $srcfile2]\n+\n+if { [build_executable_from_specs \\\n+\t  \"failed to prepare\" \\\n+\t  $testfile [list] \\\n+\t  $srcfile [list debug] \\\n+\t  $srcfile2 [list]] == -1 } {\n+    return -1\n+}\n+\n+clean_restart $testfile\n+\n+gdb_test \"print aaa\" \" = 33\""
    },
    {
      "sha": "8147a6c132737cce3c60f666e63a5733194d248c",
      "filename": "gdb/testsuite/gdb.threads/tls.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.threads/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb/gdb/testsuite/gdb.threads/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/tls.exp?ref=317d2668d01c7ddc9545029bf56d2b8c4d2bbfeb",
      "patch": "@@ -153,8 +153,14 @@ proc check_thread_stack {number spin_threads spin_threads_level} {\n \n clean_restart ${binfile}\n \n-gdb_test \"print a_thread_local\" \\\n-    \"Cannot read .a_thread_local. without registers\"\n+gdb_test_multiple \"print a_thread_local\" \"\" {\n+    -re -wrap \"Cannot find thread-local variables on this target\" {\n+\tkfail \"gdb/25807\" $gdb_test_name\n+    }\n+    -re -wrap \"Cannot read .a_thread_local. without registers\" {\n+\tpass $gdb_test_name\n+    }\n+}\n \n if ![runto_main] then {\n    fail \"can't run to main\""
    }
  ]
}