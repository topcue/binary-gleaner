{
  "sha": "e61ef79e3ad236e0cc4860ee984de0dd89d5d69f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTYxZWY3OWUzYWQyMzZlMGNjNDg2MGVlOTg0ZGUwZGQ4OWQ1ZDY5Zg==",
  "commit": {
    "author": {
      "name": "Cooper Qu",
      "email": "cooper.qu@linux.alibaba.com",
      "date": "2020-09-02T06:04:52Z"
    },
    "committer": {
      "name": "Lifang Xia",
      "email": "lifang_xia@c-sky.com",
      "date": "2020-09-02T06:21:02Z"
    },
    "message": "CSKY: Refine literals pool dump process and float register parser.\n\ngas/\n\t* config/tc-csky.c (struct literal): New member bignum.\n\t(dump_literals): Handle big constant.\n\t(enter_literal): Likewise.\n\t(parse_type_freg): Handle vector register.",
    "tree": {
      "sha": "29b629ad28d14bbc978b7a211cb2d31cef2af557",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/29b629ad28d14bbc978b7a211cb2d31cef2af557"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f/comments",
  "author": {
    "login": "Cooper-Qu",
    "id": 68842787,
    "node_id": "MDQ6VXNlcjY4ODQyNzg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/68842787?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Cooper-Qu",
    "html_url": "https://github.com/Cooper-Qu",
    "followers_url": "https://api.github.com/users/Cooper-Qu/followers",
    "following_url": "https://api.github.com/users/Cooper-Qu/following{/other_user}",
    "gists_url": "https://api.github.com/users/Cooper-Qu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Cooper-Qu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Cooper-Qu/subscriptions",
    "organizations_url": "https://api.github.com/users/Cooper-Qu/orgs",
    "repos_url": "https://api.github.com/users/Cooper-Qu/repos",
    "events_url": "https://api.github.com/users/Cooper-Qu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Cooper-Qu/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "Lifang-XIA",
    "id": 22215568,
    "node_id": "MDQ6VXNlcjIyMjE1NTY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/22215568?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Lifang-XIA",
    "html_url": "https://github.com/Lifang-XIA",
    "followers_url": "https://api.github.com/users/Lifang-XIA/followers",
    "following_url": "https://api.github.com/users/Lifang-XIA/following{/other_user}",
    "gists_url": "https://api.github.com/users/Lifang-XIA/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Lifang-XIA/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Lifang-XIA/subscriptions",
    "organizations_url": "https://api.github.com/users/Lifang-XIA/orgs",
    "repos_url": "https://api.github.com/users/Lifang-XIA/repos",
    "events_url": "https://api.github.com/users/Lifang-XIA/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Lifang-XIA/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7d0a7dce3912493b047048278d8d86b6abeac27d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d0a7dce3912493b047048278d8d86b6abeac27d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7d0a7dce3912493b047048278d8d86b6abeac27d"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 58,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0e2434f98624626cf31d9113963efb6f2da6ab9e",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e61ef79e3ad236e0cc4860ee984de0dd89d5d69f",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-02  Cooper Qu  <cooper.qu@linux.alibaba.com>\n+\n+\t* config/tc-csky.c (struct literal): New member bignum.\n+\t(dump_literals): Handle big constant.\n+\t(enter_literal): Likewise.\n+\t(parse_type_freg): Handle vector register.\n+\n 2020-09-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* doc/as.texi: Document the .tls_common directive."
    },
    {
      "sha": "f85c44ddb051c239c0be81e275e05a3c806795a9",
      "filename": "gas/config/tc-csky.c",
      "status": "modified",
      "additions": 51,
      "deletions": 3,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f/gas/config/tc-csky.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e61ef79e3ad236e0cc4860ee984de0dd89d5d69f/gas/config/tc-csky.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-csky.c?ref=e61ef79e3ad236e0cc4860ee984de0dd89d5d69f",
      "patch": "@@ -302,6 +302,7 @@ struct literal\n   struct tls_addend tls_addend;\n   unsigned char   isdouble;\n   uint64_t dbnum;\n+  LITTLENUM_TYPE bignum[SIZE_OF_LARGE_NUMBER + 6];\n };\n \n static void csky_idly (void);\n@@ -1660,7 +1661,7 @@ dump_literals (int isforce)\n \n   colon (S_GET_NAME (poolsym));\n \n-  for (i = 0, p = litpool; i < poolsize; i += (p->isdouble ? 2 : 1), p++)\n+  for (i = 0, p = litpool; i < poolsize; p++)\n     {\n       insn_reloc = p->r_type;\n       if (insn_reloc == BFD_RELOC_CKCORE_TLS_IE32\n@@ -1684,8 +1685,18 @@ dump_literals (int isforce)\n \t      emit_expr (& p->e, 4);\n \t    }\n \t}\n+      else if (p->e.X_op == O_big)\n+\t{\n+\t  memcpy (generic_bignum, p->bignum, sizeof (p->bignum));\n+\t  emit_expr (& p->e, p->e.X_add_number * CHARS_PER_LITTLENUM);\n+\t}\n       else\n \temit_expr (& p->e, 4);\n+\n+      if (p->e.X_op == O_big)\n+\ti += ((p->e.X_add_number  * CHARS_PER_LITTLENUM) >> 2);\n+      else\n+\ti += (p->isdouble ? 2 : 1);\n     }\n \n   if (isforce && IS_CSKY_ARCH_V2 (mach_flag))\n@@ -1739,7 +1750,7 @@ enter_literal (expressionS *e,\n     }\n \n   /* Search pool for value so we don't have duplicates.  */\n-  for (p = litpool, i = 0; i < poolsize; i += (p->isdouble ? 2 : 1), p++)\n+  for (p = litpool,i = 0; i < poolsize; p++)\n     {\n       if (e->X_op == p->e.X_op\n \t  && e->X_add_symbol == p->e.X_add_symbol\n@@ -1751,11 +1762,21 @@ enter_literal (expressionS *e,\n \t  && insn_reloc != BFD_RELOC_CKCORE_TLS_LDM32\n \t  && insn_reloc != BFD_RELOC_CKCORE_TLS_LDO32\n \t  && insn_reloc != BFD_RELOC_CKCORE_TLS_IE32\n-\t  && insn_reloc != BFD_RELOC_CKCORE_TLS_LE32)\n+\t  && insn_reloc != BFD_RELOC_CKCORE_TLS_LE32\n+\t  && (e->X_op != O_big\n+\t      || (memcmp (generic_bignum, p->bignum,\n+\t\t\t  p->e.X_add_number * sizeof (LITTLENUM_TYPE)) == 0)))\n \t{\n \t  p->refcnt ++;\n \t  return i;\n \t}\n+      if (p->e.X_op == O_big)\n+\t{\n+\t  i += (p->e.X_add_number >> 1);\n+\t  i += (p->e.X_add_number & 0x1);\n+    }\n+      else\n+\ti += (p->isdouble ? 2 : 1);\n     }\n   p->refcnt = 1;\n   p->ispcrel = ispcrel;\n@@ -1764,6 +1785,8 @@ enter_literal (expressionS *e,\n   p->isdouble = isdouble;\n   if (isdouble)\n     p->dbnum = dbnum;\n+  if (e->X_op == O_big)\n+    memcpy (p->bignum, generic_bignum, sizeof (p->bignum));\n \n   if (insn_reloc == BFD_RELOC_CKCORE_TLS_GD32\n       || insn_reloc == BFD_RELOC_CKCORE_TLS_LDM32\n@@ -1773,7 +1796,12 @@ enter_literal (expressionS *e,\n       p->tls_addend.offset = csky_insn.output - frag_now->fr_literal;\n       literal_insn_offset = p;\n     }\n+  if (p->e.X_op == O_big) {\n+    poolsize += (p->e.X_add_number >> 1);\n+    poolsize += (p->e.X_add_number & 0x1);\n+  } else\n   poolsize += (p->isdouble ? 2 : 1);\n+\n   return i;\n }\n \n@@ -2956,6 +2984,26 @@ parse_type_freg (char** oper, int even)\n       SET_ERROR_STRING (ERROR_EXP_EVEN_FREG, NULL);\n       return FALSE;\n     }\n+\n+  if (IS_CSKY_V2 (mach_flag)\n+      && (csky_insn.opcode->isa_flag32 & CSKY_ISA_VDSP_2)\n+      && reg > 15)\n+    {\n+      if ((csky_insn.opcode->isa_flag32 & CSKY_ISA_VDSP_2))\n+\t{\n+\t  SET_ERROR_INTEGER (ERROR_VREG_OVER_RANGE, reg);\n+\t}\n+      else\n+\t{\n+\t  SET_ERROR_INTEGER (ERROR_FREG_OVER_RANGE, reg);\n+\t}\n+      return FALSE;\n+    }\n+  /* TODO: recognize vreg or freg.  */\n+  if (reg > 31)\n+    {\n+      SET_ERROR_INTEGER (ERROR_VREG_OVER_RANGE, reg);\n+    }\n   csky_insn.val[csky_insn.idx++] = reg;\n   return TRUE;\n }"
    }
  ]
}