{
  "sha": "a23b33b3d131f240b2525d9a24831b33f2b43e26",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTIzYjMzYjNkMTMxZjI0MGIyNTI1ZDlhMjQ4MzFiMzNmMmI0M2UyNg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-03-06T07:50:56Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-03-06T07:50:56Z"
    },
    "message": "x86: correct MPX insn w/o base or index encoding in 16-bit mode\n\nSince 16-bit addressing isn't allowed, Disp32 needs to be forced; Disp16\nfails to match the templates.\n\nThe SDM leaves open whether BNDC[LNU] with a GPR operand require an\noperand size override; this aspect is therefore left untouched here.",
    "tree": {
      "sha": "99add9964f55a4b6ed0acd13a14388b09537ed91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/99add9964f55a4b6ed0acd13a14388b09537ed91"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a23b33b3d131f240b2525d9a24831b33f2b43e26",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a23b33b3d131f240b2525d9a24831b33f2b43e26",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a23b33b3d131f240b2525d9a24831b33f2b43e26",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a23b33b3d131f240b2525d9a24831b33f2b43e26/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a04973848dc529f4eeb3bd198251da9faf01e2a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a04973848dc529f4eeb3bd198251da9faf01e2a2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a04973848dc529f4eeb3bd198251da9faf01e2a2"
    }
  ],
  "stats": {
    "total": 205,
    "additions": 201,
    "deletions": 4
  },
  "files": [
    {
      "sha": "006c1fd1804e55616954ad8fd174afb0f3e6efa6",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=a23b33b3d131f240b2525d9a24831b33f2b43e26",
      "patch": "@@ -1,3 +1,11 @@\n+2020-03-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (i386_addressing_mode): For 32-bit\n+\taddressing for MPX insns without base/index.\n+\t* testsuite/gas/i386/mpx-16bit.s,\n+\t* testsuite/gas/i386/mpx-16bit.d: New.\n+\t* testsuite/gas/i386/i386.exp: Run new test.\n+\n 2020-03-06  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/adx.s, testsuite/gas/i386/cet.s,"
    },
    {
      "sha": "1c9388b1bdcb3e69185bbd9c16d1216b7f44866e",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=a23b33b3d131f240b2525d9a24831b33f2b43e26",
      "patch": "@@ -10359,6 +10359,21 @@ i386_addressing_mode (void)\n \n   if (i.prefix[ADDR_PREFIX])\n     addr_mode = flag_code == CODE_32BIT ? CODE_16BIT : CODE_32BIT;\n+  else if (flag_code == CODE_16BIT\n+\t   && current_templates->start->cpu_flags.bitfield.cpumpx\n+\t   /* Avoid replacing the \"16-bit addressing not allowed\" diagnostic\n+\t      from md_assemble() by \"is not a valid base/index expression\"\n+\t      when there is a base and/or index.  */\n+\t   && !i.types[this_operand].bitfield.baseindex)\n+    {\n+      /* MPX insn memory operands with neither base nor index must be forced\n+\t to use 32-bit addressing in 16-bit mode.  */\n+      addr_mode = CODE_32BIT;\n+      i.prefix[ADDR_PREFIX] = ADDR_PREFIX_OPCODE;\n+      ++i.prefixes;\n+      gas_assert (!i.types[this_operand].bitfield.disp16);\n+      gas_assert (!i.types[this_operand].bitfield.disp32);\n+    }\n   else\n     {\n       addr_mode = flag_code;"
    },
    {
      "sha": "785d1b9e9ca59aee98da46ea2076d98d601d8dc3",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=a23b33b3d131f240b2525d9a24831b33f2b43e26",
      "patch": "@@ -329,6 +329,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_list_test \"mpx-inval-1\" \"-al\"\n     run_list_test \"mpx-inval-2\" \"-al\"\n     run_dump_test \"mpx-add-bnd-prefix\"\n+    run_dump_test \"mpx-16bit\"\n     run_list_test \"bnd\" \"-al\"\n     run_dump_test \"sha\"\n     run_dump_test \"clflushopt\""
    },
    {
      "sha": "b80fe29b5a1c89633cf506549ee50a32bd5cf80e",
      "filename": "gas/testsuite/gas/i386/mpx-16bit.d",
      "status": "added",
      "additions": 145,
      "deletions": 0,
      "changes": 145,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/testsuite/gas/i386/mpx-16bit.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/testsuite/gas/i386/mpx-16bit.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/mpx-16bit.d?ref=a23b33b3d131f240b2525d9a24831b33f2b43e26",
      "patch": "@@ -0,0 +1,145 @@\n+#as: -I${srcdir}/$subdir\n+#objdump: -drw -Mi8086\n+#name: i386 MPX (16-bit)\n+\n+.*: +file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+ <start>:\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 08       \tbndmk  \\(%eax\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 0d 99 03 00 00 \taddr32 bndmk 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 4a 03    \tbndmk  0x3\\(%edx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 0c 08    \tbndmk  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 0c 0d 00 00 00 00 \tbndmk  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 4c 01 03 \tbndmk  0x3\\(%ecx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 08       \tbndmov \\(%eax\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 0d 99 03 00 00 \taddr32 bndmov 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 52 03    \tbndmov 0x3\\(%edx\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 14 10    \tbndmov \\(%eax,%edx,1\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 14 05 00 00 00 00 \tbndmov 0x0\\(,%eax,1\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 4c 01 03 \tbndmov 0x3\\(%ecx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t66 0f 1a c2          \tbndmov %bnd2,%bnd0\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 08       \tbndmov %bnd1,\\(%eax\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 0d 99 03 00 00 \taddr32 bndmov %bnd1,0x399\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 52 03    \tbndmov %bnd2,0x3\\(%edx\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 14 10    \tbndmov %bnd2,\\(%eax,%edx,1\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 14 05 00 00 00 00 \tbndmov %bnd2,0x0\\(,%eax,1\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 4c 01 03 \tbndmov %bnd1,0x3\\(%ecx,%eax,1\\)\n+[ \t]*[a-f0-9]+:\t66 0f 1a d0          \tbndmov %bnd0,%bnd2\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 09       \tbndcl  \\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf3 0f 1a c9          \tbndcl  %ecx,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 0d 99 03 00 00 \taddr32 bndcl 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 4a 03    \tbndcl  0x3\\(%edx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 0c 08    \tbndcl  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 0c 0d 00 00 00 00 \tbndcl  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 4c 01 03 \tbndcl  0x3\\(%ecx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 09       \tbndcu  \\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf2 0f 1a c9          \tbndcu  %ecx,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 0d 99 03 00 00 \taddr32 bndcu 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 4a 03    \tbndcu  0x3\\(%edx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 0c 08    \tbndcu  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 0c 0d 00 00 00 00 \tbndcu  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 4c 01 03 \tbndcu  0x3\\(%ecx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 09       \tbndcn  \\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf2 0f 1b c9          \tbndcn  %ecx,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 0d 99 03 00 00 \taddr32 bndcn 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 4a 03    \tbndcn  0x3\\(%edx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 0c 08    \tbndcn  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 0c 0d 00 00 00 00 \tbndcn  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 4c 01 03 \tbndcn  0x3\\(%ecx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 0f 1b 44 18 03    \tbndstx %bnd0,0x3\\(%eax,%ebx,1\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 54 13 03    \tbndstx %bnd2,0x3\\(%ebx,%edx,1\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 14 15 03 00 00 00 \tbndstx %bnd2,0x3\\(,%edx,1\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 9a 99 03 00 00 \tbndstx %bnd3,0x399\\(%edx\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 93 34 12 00 00 \tbndstx %bnd2,0x1234\\(%ebx\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 53 03       \tbndstx %bnd2,0x3\\(%ebx\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 0a          \tbndstx %bnd1,\\(%edx\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1a 44 18 03    \tbndldx 0x3\\(%eax,%ebx,1\\),%bnd0\n+[ \t]*[a-f0-9]+:\t67 0f 1a 54 13 03    \tbndldx 0x3\\(%ebx,%edx,1\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 0f 1a 14 15 03 00 00 00 \tbndldx 0x3\\(,%edx,1\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 0f 1a 9a 99 03 00 00 \tbndldx 0x399\\(%edx\\),%bnd3\n+[ \t]*[a-f0-9]+:\t67 0f 1a 93 34 12 00 00 \tbndldx 0x1234\\(%ebx\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 0f 1a 53 03       \tbndldx 0x3\\(%ebx\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 0f 1a 0a          \tbndldx \\(%edx\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf2 e8 91 01          \tbnd call [a-f0-9]+ <foo>\n+[ \t]*[a-f0-9]+:\t67 f2 ff 10          \tbnd call \\*\\(%eax\\)\n+[ \t]*[a-f0-9]+:\tf2 0f 84 88 01       \tbnd je [a-f0-9]+ <foo>\n+[ \t]*[a-f0-9]+:\tf2 e9 84 01          \tbnd jmp [a-f0-9]+ <foo>\n+[ \t]*[a-f0-9]+:\t67 f2 ff 21          \tbnd jmp \\*\\(%ecx\\)\n+[ \t]*[a-f0-9]+:\tf2 c3                \tbnd ret *\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 08       \tbndmk  \\(%eax\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 0d 99 03 00 00 \taddr32 bndmk 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 49 03    \tbndmk  0x3\\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 0c 08    \tbndmk  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 0c 0d 00 00 00 00 \tbndmk  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1b 4c 02 03 \tbndmk  0x3\\(%edx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 08       \tbndmov \\(%eax\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 0d 99 03 00 00 \taddr32 bndmov 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 49 03    \tbndmov 0x3\\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 0c 08    \tbndmov \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 0c 0d 00 00 00 00 \tbndmov 0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 66 0f 1a 4c 02 03 \tbndmov 0x3\\(%edx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t66 0f 1a c1          \tbndmov %bnd1,%bnd0\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 08       \tbndmov %bnd1,\\(%eax\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 0d 99 03 00 00 \taddr32 bndmov %bnd1,0x399\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 49 03    \tbndmov %bnd1,0x3\\(%ecx\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 0c 08    \tbndmov %bnd1,\\(%eax,%ecx,1\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 0c 0d 00 00 00 00 \tbndmov %bnd1,0x0\\(,%ecx,1\\)\n+[ \t]*[a-f0-9]+:\t67 66 0f 1b 4c 02 03 \tbndmov %bnd1,0x3\\(%edx,%eax,1\\)\n+[ \t]*[a-f0-9]+:\t66 0f 1a c8          \tbndmov %bnd0,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 08       \tbndcl  \\(%eax\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf3 0f 1a c9          \tbndcl  %ecx,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 0d 99 03 00 00 \taddr32 bndcl 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 49 03    \tbndcl  0x3\\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 0c 08    \tbndcl  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 0c 0d 00 00 00 00 \tbndcl  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f3 0f 1a 4c 02 03 \tbndcl  0x3\\(%edx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 08       \tbndcu  \\(%eax\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf2 0f 1a c9          \tbndcu  %ecx,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 0d 99 03 00 00 \taddr32 bndcu 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 49 03    \tbndcu  0x3\\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 0c 08    \tbndcu  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 0c 0d 00 00 00 00 \tbndcu  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1a 4c 02 03 \tbndcu  0x3\\(%edx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 08       \tbndcn  \\(%eax\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf2 0f 1b c9          \tbndcn  %ecx,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 0d 99 03 00 00 \taddr32 bndcn 0x399,%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 49 03    \tbndcn  0x3\\(%ecx\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 0c 08    \tbndcn  \\(%eax,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 0c 0d 00 00 00 00 \tbndcn  0x0\\(,%ecx,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 f2 0f 1b 4c 02 03 \tbndcn  0x3\\(%edx,%eax,1\\),%bnd1\n+[ \t]*[a-f0-9]+:\t67 0f 1b 44 18 03    \tbndstx %bnd0,0x3\\(%eax,%ebx,1\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 54 13 03    \tbndstx %bnd2,0x3\\(%ebx,%edx,1\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 14 0d 00 00 00 00 \tbndstx %bnd2,0x0\\(,%ecx,1\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 9a 99 03 00 00 \tbndstx %bnd3,0x399\\(%edx\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 14 1d 03 00 00 00 \tbndstx %bnd2,0x3\\(,%ebx,1\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1b 0a          \tbndstx %bnd1,\\(%edx\\)\n+[ \t]*[a-f0-9]+:\t67 0f 1a 44 18 03    \tbndldx 0x3\\(%eax,%ebx,1\\),%bnd0\n+[ \t]*[a-f0-9]+:\t67 0f 1a 54 13 03    \tbndldx 0x3\\(%ebx,%edx,1\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 0f 1a 14 0d 00 00 00 00 \tbndldx 0x0\\(,%ecx,1\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 0f 1a 9a 99 03 00 00 \tbndldx 0x399\\(%edx\\),%bnd3\n+[ \t]*[a-f0-9]+:\t67 0f 1a 14 1d 03 00 00 00 \tbndldx 0x3\\(,%ebx,1\\),%bnd2\n+[ \t]*[a-f0-9]+:\t67 0f 1a 0a          \tbndldx \\(%edx\\),%bnd1\n+[ \t]*[a-f0-9]+:\tf2 e8 10 00          \tbnd call [a-f0-9]+ <foo>\n+[ \t]*[a-f0-9]+:\t66 f2 ff d0          \tbnd calll? \\*%eax\n+[ \t]*[a-f0-9]+:\tf2 74 09             \tbnd je [a-f0-9]+ <foo>\n+[ \t]*[a-f0-9]+:\tf2 eb 06             \tbnd jmp [a-f0-9]+ <foo>\n+[ \t]*[a-f0-9]+:\t66 f2 ff e1          \tbnd jmpl? \\*%ecx\n+[ \t]*[a-f0-9]+:\tf2 c3                \tbnd ret *\n+\n+[a-f0-9]+ <foo>:\n+[ \t]*[a-f0-9]+:\tf2 c3                \tbnd ret *\n+\n+[a-f0-9]+ <bad>:\n+#...\n+[a-f0-9]+ <bad16>:\n+[ \t]*[a-f0-9]+:\tf3 0f 1b 00          \tbndmk  \\(bad\\),%bnd0\n+[ \t]*[a-f0-9]+:\t66 0f 1a 00          \tbndmov \\(bad\\),%bnd0\n+[ \t]*[a-f0-9]+:\tf3 0f 1a 00          \tbndcl  \\(bad\\),%bnd0\n+[ \t]*[a-f0-9]+:\tf2 0f 1b 00          \tbndcn  \\(bad\\),%bnd0\n+[ \t]*[a-f0-9]+:\tf2 0f 1a 00          \tbndcu  \\(bad\\),%bnd0\n+[ \t]*[a-f0-9]+:\t0f 1b 00             \tbndstx %bnd0,\\(bad\\)\n+[ \t]*[a-f0-9]+:\t0f 1a 00             \tbndldx \\(bad\\),%bnd0\n+#pass"
    },
    {
      "sha": "a272690f244952ecd7e0301fe3ce75a28f79168d",
      "filename": "gas/testsuite/gas/i386/mpx-16bit.s",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/testsuite/gas/i386/mpx-16bit.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a23b33b3d131f240b2525d9a24831b33f2b43e26/gas/testsuite/gas/i386/mpx-16bit.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/mpx-16bit.s?ref=a23b33b3d131f240b2525d9a24831b33f2b43e26",
      "patch": "@@ -0,0 +1,13 @@\n+\t.code16\n+\t.include \"mpx.s\"\n+\n+\t.att_syntax prefix\n+\t.code32\n+bad16: # 16-bit addressing mode seen by the disassembler\n+\tbndmk\t(%eax), %bnd0\n+\tbndmov\t(%eax), %bnd0\n+\tbndcl\t(%eax), %bnd0\n+\tbndcn\t(%eax), %bnd0\n+\tbndcu\t(%eax), %bnd0\n+\tbndstx\t%bnd0, (%eax)\n+\tbndldx\t(%eax), %bnd0"
    },
    {
      "sha": "38f015ddb0d37bbeae8266ccbe47831de41cb4cc",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a23b33b3d131f240b2525d9a24831b33f2b43e26/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a23b33b3d131f240b2525d9a24831b33f2b43e26/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=a23b33b3d131f240b2525d9a24831b33f2b43e26",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (OP_E_memory): Exclude recording of used address\n+\tprefix for \"bnd\" modes only in 64-bit mode. Don't decode 16-bit\n+\taddressed memory operands for MPX insns.\n+\n 2020-03-06  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-opc.tbl (movmskps, mwait, vmread, vmwrite, invept,"
    },
    {
      "sha": "9b2094467d3b39ffb41bc1884c0dc42bef691510",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a23b33b3d131f240b2525d9a24831b33f2b43e26/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a23b33b3d131f240b2525d9a24831b33f2b43e26/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=a23b33b3d131f240b2525d9a24831b33f2b43e26",
      "patch": "@@ -14272,10 +14272,11 @@ OP_E_memory (int bytemode, int sizeflag)\n \t  }\n \n       if ((havebase || haveindex || needindex || needaddr32 || riprel)\n-\t  && (bytemode != v_bnd_mode)\n-\t  && (bytemode != v_bndmk_mode)\n-\t  && (bytemode != bnd_mode)\n-\t  && (bytemode != bnd_swap_mode))\n+\t  && (address_mode != mode_64bit\n+\t      || ((bytemode != v_bnd_mode)\n+\t\t  && (bytemode != v_bndmk_mode)\n+\t\t  && (bytemode != bnd_mode)\n+\t\t  && (bytemode != bnd_swap_mode))))\n \tused_prefixes |= PREFIX_ADDR;\n \n       if (havedisp || (intel_syntax && riprel))\n@@ -14356,6 +14357,14 @@ OP_E_memory (int bytemode, int sizeflag)\n \t    }\n \t}\n     }\n+  else if (bytemode == v_bnd_mode\n+\t   || bytemode == v_bndmk_mode\n+\t   || bytemode == bnd_mode\n+\t   || bytemode == bnd_swap_mode)\n+    {\n+      oappend (\"(bad)\");\n+      return;\n+    }\n   else\n     {\n       /* 16 bit address mode */"
    }
  ]
}