{
  "sha": "cf9c1c753c126c9d18b9cb69929ed6c315143ed3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Y5YzFjNzUzYzEyNmM5ZDE4YjljYjY5OTI5ZWQ2YzMxNTE0M2VkMw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-10T19:54:46Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-10T19:54:46Z"
    },
    "message": "[gdb/testsuite] Reimplement gdb.gdb/python-selftest.exp as unittest\n\nThe test-case gdb.gdb/python-selftest.exp:\n- patches the gdb_python_initialized variable in gdb to 0\n- checks that the output of a python command is \"Python not initialized\"\n\nReimplement gdb.gdb/python-selftest.exp as unittest, using:\n- execute_command_to_string to capture the output\n- try/catch to catch the \"Python not initialized\" exception.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "6e458b5fc670f080a41f8b0c8f27ece8f725a2b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6e458b5fc670f080a41f8b0c8f27ece8f725a2b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf9c1c753c126c9d18b9cb69929ed6c315143ed3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf9c1c753c126c9d18b9cb69929ed6c315143ed3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf9c1c753c126c9d18b9cb69929ed6c315143ed3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf9c1c753c126c9d18b9cb69929ed6c315143ed3/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d7d1029e6261c2455f335663f8c9cffb440f1a6a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7d1029e6261c2455f335663f8c9cffb440f1a6a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d7d1029e6261c2455f335663f8c9cffb440f1a6a"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 46,
    "deletions": 30
  },
  "files": [
    {
      "sha": "5918bb414a33e3b538285e7ab71ec1a341372256",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf9c1c753c126c9d18b9cb69929ed6c315143ed3/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf9c1c753c126c9d18b9cb69929ed6c315143ed3/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=cf9c1c753c126c9d18b9cb69929ed6c315143ed3",
      "patch": "@@ -35,6 +35,7 @@\n #include <ctype.h>\n #include \"location.h\"\n #include \"run-on-main-thread.h\"\n+#include \"gdbsupport/selftest.h\"\n \n /* Declared constants and enum for python stack printing.  */\n static const char python_excp_none[] = \"none\";\n@@ -1879,6 +1880,47 @@ do_start_initialization ()\n \n #endif /* HAVE_PYTHON */\n \n+#if GDB_SELF_TEST\n+namespace selftests {\n+\n+/* Entry point for python unit tests.  */\n+\n+static void\n+test_python ()\n+{\n+#define CMD execute_command_to_string (\"python print(5)\", 0, true);\n+\n+  std::string output;\n+\n+  output = CMD;\n+  SELF_CHECK (output == \"5\\n\");\n+  output.clear ();\n+\n+  bool saw_exception = false;\n+  scoped_restore reset_gdb_python_initialized\n+    = make_scoped_restore (&gdb_python_initialized, 0);\n+  try\n+    {\n+      output = CMD;\n+    }\n+  catch (const gdb_exception &e)\n+    {\n+      saw_exception = true;\n+      SELF_CHECK (e.reason == RETURN_ERROR);\n+      SELF_CHECK (e.error == GENERIC_ERROR);\n+      SELF_CHECK (*e.message == \"Python not initialized\");\n+    }\n+  SELF_CHECK (saw_exception);\n+  SELF_CHECK (output.empty ());\n+\n+#undef CMD\n+}\n+\n+#undef CHECK_OUTPUT\n+\n+} // namespace selftests\n+#endif /* GDB_SELF_TEST */\n+\n /* See python.h.  */\n cmd_list_element *python_cmd_element = nullptr;\n \n@@ -1977,6 +2019,10 @@ python executable.\"),\n \t\t\t\tshow_python_dont_write_bytecode,\n \t\t\t\t&user_set_python_list,\n \t\t\t\t&user_show_python_list);\n+\n+#if GDB_SELF_TEST\n+  selftests::register_test (\"python\", selftests::test_python);\n+#endif /* GDB_SELF_TEST */\n }\n \n #ifdef HAVE_PYTHON"
    },
    {
      "sha": "74b2c52090082643ba784baed95c36ee681d6173",
      "filename": "gdb/testsuite/gdb.gdb/python-selftest.exp",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d7d1029e6261c2455f335663f8c9cffb440f1a6a/gdb/testsuite/gdb.gdb/python-selftest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d7d1029e6261c2455f335663f8c9cffb440f1a6a/gdb/testsuite/gdb.gdb/python-selftest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/python-selftest.exp?ref=d7d1029e6261c2455f335663f8c9cffb440f1a6a",
      "patch": "@@ -1,30 +0,0 @@\n-# Copyright 2013-2021 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-load_lib selftest-support.exp\n-load_lib gdb-python.exp\n-\n-proc selftest_python {} {\n-    if {[skip_python_tests]} {\n-\treturn -1\n-    }\n-\n-    gdb_test_no_output \"set variable gdb_python_initialized = 0\"\n-    gdb_test \"call catch_command_errors(execute_command, \\\"python print(5)\\\", 0, true)\" \\\n-\t\"Python not initialized.* = 0\"\n-    return 0\n-}\n-\n-do_self_tests captured_command_loop selftest_python"
    }
  ]
}