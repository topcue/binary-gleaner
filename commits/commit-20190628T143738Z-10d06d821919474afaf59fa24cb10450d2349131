{
  "sha": "10d06d821919474afaf59fa24cb10450d2349131",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTBkMDZkODIxOTE5NDc0YWZhZjU5ZmEyNGNiMTA0NTBkMjM0OTEzMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-20T19:50:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-28T14:37:38Z"
    },
    "message": "Handle either order of name and linkage name\n\nWe discovered that the Ada support in gdb depends on the order of the\nDW_AT_name and DW_AT_linkage_name attributes in the DWARF.  In\nparticular, if they are emitted in the \"wrong\" order for some system\nsymbols, \"catch exception\" will not work.\n\nThis patch fixes this problem by arranging to always prefer the\nlinkage name if both exist.  This seems to be what the full symbol\nreader already does -- that is, this is another bug arising from\nhaving two different DWARF readers.\n\nAnother possible issue here is that gdb still doesn't really preserve\nmangled names properly.  There's a PR open about this.  However, this\nseems to be somewhat involved to fix, which is why this patch\ncontinues to work around the bigger issue.\n\ngdb/ChangeLog\n2019-06-28  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2read.c (partial_die_info::read): Prefer the linkage name\n\tfor Ada.\n\ngdb/testsuite/ChangeLog\n2019-06-28  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.dwarf2/ada-linkage-name.c: New file.\n\t* gdb.dwarf2/ada-linkage-name.exp: New file.",
    "tree": {
      "sha": "ae3a55c23d50be60d968c547cb0cd17980db8376",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ae3a55c23d50be60d968c547cb0cd17980db8376"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/10d06d821919474afaf59fa24cb10450d2349131",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10d06d821919474afaf59fa24cb10450d2349131",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/10d06d821919474afaf59fa24cb10450d2349131",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10d06d821919474afaf59fa24cb10450d2349131/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7e56c51c7932cfdb178e9457011d09d53e98937b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e56c51c7932cfdb178e9457011d09d53e98937b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7e56c51c7932cfdb178e9457011d09d53e98937b"
    }
  ],
  "stats": {
    "total": 156,
    "additions": 154,
    "deletions": 2
  },
  "files": [
    {
      "sha": "077ab5e7affeb672701f13ce657d845f62abf6ef",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10d06d821919474afaf59fa24cb10450d2349131/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10d06d821919474afaf59fa24cb10450d2349131/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=10d06d821919474afaf59fa24cb10450d2349131",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-28  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2read.c (partial_die_info::read): Prefer the linkage name\n+\tfor Ada.\n+\n 2019-06-27  Tom Tromey  <tromey@adacore.com>\n \n \t* arm-tdep.c (arm_objfile_data_key): Move lower.  Change type to"
    },
    {
      "sha": "d0048632926d1ba2dd4ca592b194cc777fc17fe2",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10d06d821919474afaf59fa24cb10450d2349131/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10d06d821919474afaf59fa24cb10450d2349131/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=10d06d821919474afaf59fa24cb10450d2349131",
      "patch": "@@ -18653,8 +18653,6 @@ partial_die_info::read (const struct die_reader_specs *reader,\n \t  /* Note that both forms of linkage name might appear.  We\n \t     assume they will be the same, and we only store the last\n \t     one we see.  */\n-\t  if (cu->language == language_ada)\n-\t    name = DW_STRING (&attr);\n \t  linkage_name = DW_STRING (&attr);\n \t  break;\n \tcase DW_AT_low_pc:\n@@ -18787,6 +18785,14 @@ partial_die_info::read (const struct die_reader_specs *reader,\n \t}\n     }\n \n+  /* For Ada, if both the name and the linkage name appear, we prefer\n+     the latter.  This lets \"catch exception\" work better, regardless\n+     of the order in which the name and linkage name were emitted.\n+     Really, though, this is just a workaround for the fact that gdb\n+     doesn't store both the name and the linkage name.  */\n+  if (cu->language == language_ada && linkage_name != nullptr)\n+    name = linkage_name;\n+\n   if (high_pc_relative)\n     highpc += lowpc;\n "
    },
    {
      "sha": "8b52d445baf4b78216e9e7354ceb3b21bcf17f5d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10d06d821919474afaf59fa24cb10450d2349131/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10d06d821919474afaf59fa24cb10450d2349131/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=10d06d821919474afaf59fa24cb10450d2349131",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-28  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.dwarf2/ada-linkage-name.c: New file.\n+\t* gdb.dwarf2/ada-linkage-name.exp: New file.\n+\n 2019-06-27  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.cp/constexpr-field.exp: Use setup_xfail."
    },
    {
      "sha": "97e908d410f2660d1038800c3a6cbac9d0655dc5",
      "filename": "gdb/testsuite/gdb.dwarf2/ada-linkage-name.c",
      "status": "added",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10d06d821919474afaf59fa24cb10450d2349131/gdb/testsuite/gdb.dwarf2/ada-linkage-name.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10d06d821919474afaf59fa24cb10450d2349131/gdb/testsuite/gdb.dwarf2/ada-linkage-name.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/ada-linkage-name.c?ref=10d06d821919474afaf59fa24cb10450d2349131",
      "patch": "@@ -0,0 +1,41 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main (void)\n+{\n+  asm (\"main_label: .globl main_label\");\n+  return 0;\n+}\n+\n+/* First dummy function.  */\n+\n+int\n+first (char *x)\n+{\n+  asm (\"first_label: .globl first_label\");\n+  return 0;\n+}\n+\n+/* Second dummy function.  */\n+\n+int\n+second (char *x)\n+{\n+  asm (\"second_label: .globl second_label\");\n+  return 0;\n+}"
    },
    {
      "sha": "293d6500253329ed34c5d503d3a09aa23b54b5d5",
      "filename": "gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp",
      "status": "added",
      "additions": 95,
      "deletions": 0,
      "changes": 95,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/10d06d821919474afaf59fa24cb10450d2349131/gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/10d06d821919474afaf59fa24cb10450d2349131/gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp?ref=10d06d821919474afaf59fa24cb10450d2349131",
      "patch": "@@ -0,0 +1,95 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Regression test to ensure that the order of DW_AT_name and\n+# DW_AT_linkage_name does not affect Ada.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+standard_testfile ada-linkage-name.c ada-linkage-name-debug.S\n+\n+# Set up the DWARF for the test.\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile\n+\n+    lassign [function_range first ${srcdir}/${subdir}/${srcfile}] \\\n+\tfirst_start first_length\n+\n+    lassign [function_range second ${srcdir}/${subdir}/${srcfile}] \\\n+\tsecond_start second_length\n+\n+    cu {} {\n+\tDW_TAG_compile_unit {\n+                {DW_AT_language @DW_LANG_Ada95}\n+                {DW_AT_name     ada-linkage-name.c}\n+                {DW_AT_comp_dir /tmp}\n+\n+        } {\n+\t    declare_labels b_l\n+\n+\t    b_l: DW_TAG_base_type {\n+\t\t{DW_AT_byte_size 1 DW_FORM_sdata}\n+\t\t{DW_AT_encoding  @DW_ATE_signed}\n+\t\t{DW_AT_name      bool}\n+\t    }\n+\t    # Here the name comes first and the linkage name second.\n+            DW_TAG_subprogram {\n+                {name system__namefirst}\n+\t\t{linkage_name __gnat_namefirst}\n+                {low_pc $first_start addr}\n+                {high_pc \"$first_start + $first_length\" addr}\n+                {type :$b_l}\n+\t    }\n+\t    # Here the linkage name comes first and the name second.\n+            DW_TAG_subprogram {\n+\t\t{linkage_name __gnat_namesecond}\n+                {name system__namesecond}\n+                {low_pc $second_start addr}\n+                {high_pc \"$second_start + $second_length\" addr}\n+                {type :$b_l}\n+\t    }\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+with_test_prefix \"first first\" {\n+    gdb_test_no_output \"set language ada\"\n+    gdb_breakpoint \"<__gnat_namefirst>\" message\n+    gdb_breakpoint \"<__gnat_namesecond>\" message\n+}\n+\n+# Run the test again, but this time check the symbols in the other\n+# order.  This ensures we are really testing all the paths --\n+# otherwise if the first symbol is found, it will cause symtab\n+# expansion, which might cause the other symbol to be found.\n+clean_restart ${testfile}\n+\n+with_test_prefix \"second first\" {\n+    gdb_test_no_output \"set language ada\"\n+    gdb_breakpoint \"<__gnat_namesecond>\" message\n+    gdb_breakpoint \"<__gnat_namefirst>\" message\n+}"
    }
  ]
}