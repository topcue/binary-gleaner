{
  "sha": "4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGY0NGFlNmM2OWI4Mzk3MTJhMzNhNDZhYWE2MmQ1OGQyYjE2YjRjYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:14Z"
    },
    "message": "Add dwarf2_section_info::read_string method\n\nThis moves a string-reading function to be a method on\ndwarf2_section_info, and then updates the users.\n\ngdb/ChangeLog\n2020-03-26  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/section.h (struct dwarf2_section_info) <read_string>: New\n\tmethod.\n\t* dwarf2/section.c: New method.  From\n\tread_indirect_string_at_offset_from.\n\t* dwarf2/read.c (mapped_debug_names::namei_to_name): Update.\n\t(read_indirect_string_at_offset_from): Move to section.c.\n\t(read_indirect_string_at_offset): Rewrite.\n\t(read_indirect_line_string_at_offset): Remove.\n\t(read_indirect_string, read_indirect_line_string)\n\t(dwarf_decode_macro_bytes): Update.",
    "tree": {
      "sha": "1f72cc9e602841300aa6cd37cc234dda8602b1cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1f72cc9e602841300aa6cd37cc234dda8602b1cb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0194fa8f23c64bef0f4b4bb4a76e9c64f003169",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0194fa8f23c64bef0f4b4bb4a76e9c64f003169",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0194fa8f23c64bef0f4b4bb4a76e9c64f003169"
    }
  ],
  "stats": {
    "total": 95,
    "additions": 46,
    "deletions": 49
  },
  "files": [
    {
      "sha": "15e65eb2e02bc70eed6d36c64f7fe6791570b229",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
      "patch": "@@ -1,3 +1,16 @@\n+2020-03-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/section.h (struct dwarf2_section_info) <read_string>: New\n+\tmethod.\n+\t* dwarf2/section.c: New method.  From\n+\tread_indirect_string_at_offset_from.\n+\t* dwarf2/read.c (mapped_debug_names::namei_to_name): Update.\n+\t(read_indirect_string_at_offset_from): Move to section.c.\n+\t(read_indirect_string_at_offset): Rewrite.\n+\t(read_indirect_line_string_at_offset): Remove.\n+\t(read_indirect_string, read_indirect_line_string)\n+\t(dwarf_decode_macro_bytes): Update.\n+\n 2020-03-26  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/section.h (struct dwarf2_section_info)"
    },
    {
      "sha": "fab5b94f0a79ce373e59de9979879de3ac7d76ba",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 11,
      "deletions": 49,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
      "patch": "@@ -1256,8 +1256,7 @@ static const char *read_indirect_line_string\n    const struct comp_unit_head *, unsigned int *);\n \n static const char *read_indirect_string_at_offset\n-  (struct dwarf2_per_objfile *dwarf2_per_objfile, bfd *abfd,\n-   LONGEST str_offset);\n+  (struct dwarf2_per_objfile *dwarf2_per_objfile, LONGEST str_offset);\n \n static CORE_ADDR read_addr_index_from_leb128 (struct dwarf2_cu *,\n \t\t\t\t\t      const gdb_byte *,\n@@ -5171,8 +5170,8 @@ mapped_debug_names::namei_to_name (uint32_t namei) const\n \t\t\t\t + namei * offset_size),\n \t\t\t\toffset_size,\n \t\t\t\tdwarf5_byte_order);\n-  return read_indirect_string_at_offset\n-    (dwarf2_per_objfile, dwarf2_per_objfile->objfile->obfd, namei_string_offs);\n+  return read_indirect_string_at_offset (dwarf2_per_objfile,\n+\t\t\t\t\t namei_string_offs);\n }\n \n /* Find a slot in .debug_names for the object named NAME.  If NAME is\n@@ -18770,52 +18769,14 @@ read_checked_initial_length_and_offset (bfd *abfd, const gdb_byte *buf,\n   return length;\n }\n \n-/* Return pointer to string at section SECT offset STR_OFFSET with error\n-   reporting strings FORM_NAME and SECT_NAME.  */\n-\n-static const char *\n-read_indirect_string_at_offset_from (struct objfile *objfile,\n-\t\t\t\t     bfd *abfd, LONGEST str_offset,\n-\t\t\t\t     struct dwarf2_section_info *sect,\n-\t\t\t\t     const char *form_name,\n-\t\t\t\t     const char *sect_name)\n-{\n-  sect->read (objfile);\n-  if (sect->buffer == NULL)\n-    error (_(\"%s used without %s section [in module %s]\"),\n-\t   form_name, sect_name, bfd_get_filename (abfd));\n-  if (str_offset >= sect->size)\n-    error (_(\"%s pointing outside of %s section [in module %s]\"),\n-\t   form_name, sect_name, bfd_get_filename (abfd));\n-  gdb_assert (HOST_CHAR_BIT == 8);\n-  if (sect->buffer[str_offset] == '\\0')\n-    return NULL;\n-  return (const char *) (sect->buffer + str_offset);\n-}\n-\n /* Return pointer to string at .debug_str offset STR_OFFSET.  */\n \n static const char *\n read_indirect_string_at_offset (struct dwarf2_per_objfile *dwarf2_per_objfile,\n-\t\t\t\tbfd *abfd, LONGEST str_offset)\n-{\n-  return read_indirect_string_at_offset_from (dwarf2_per_objfile->objfile,\n-\t\t\t\t\t      abfd, str_offset,\n-\t\t\t\t\t      &dwarf2_per_objfile->str,\n-\t\t\t\t\t      \"DW_FORM_strp\", \".debug_str\");\n-}\n-\n-/* Return pointer to string at .debug_line_str offset STR_OFFSET.  */\n-\n-static const char *\n-read_indirect_line_string_at_offset (struct dwarf2_per_objfile *dwarf2_per_objfile,\n-\t\t\t\t     bfd *abfd, LONGEST str_offset)\n+\t\t\t\tLONGEST str_offset)\n {\n-  return read_indirect_string_at_offset_from (dwarf2_per_objfile->objfile,\n-\t\t\t\t\t      abfd, str_offset,\n-\t\t\t\t\t      &dwarf2_per_objfile->line_str,\n-\t\t\t\t\t      \"DW_FORM_line_strp\",\n-\t\t\t\t\t      \".debug_line_str\");\n+  return dwarf2_per_objfile->str.read_string (dwarf2_per_objfile->objfile,\n+\t\t\t\t\t      str_offset, \"DW_FORM_strp\");\n }\n \n /* Return pointer to string at .debug_str offset as read from BUF.\n@@ -18830,7 +18791,7 @@ read_indirect_string (struct dwarf2_per_objfile *dwarf2_per_objfile, bfd *abfd,\n {\n   LONGEST str_offset = cu_header->read_offset (abfd, buf, bytes_read_ptr);\n \n-  return read_indirect_string_at_offset (dwarf2_per_objfile, abfd, str_offset);\n+  return read_indirect_string_at_offset (dwarf2_per_objfile, str_offset);\n }\n \n /* Return pointer to string at .debug_line_str offset as read from BUF.\n@@ -18845,8 +18806,9 @@ read_indirect_line_string (struct dwarf2_per_objfile *dwarf2_per_objfile,\n {\n   LONGEST str_offset = cu_header->read_offset (abfd, buf, bytes_read_ptr);\n \n-  return read_indirect_line_string_at_offset (dwarf2_per_objfile, abfd,\n-\t\t\t\t\t      str_offset);\n+  return dwarf2_per_objfile->line_str.read_string (dwarf2_per_objfile->objfile,\n+\t\t\t\t\t\t   str_offset,\n+\t\t\t\t\t\t   \"DW_FORM_line_strp\");\n }\n \n /* Given index ADDR_INDEX in .debug_addr, fetch the value.\n@@ -23549,7 +23511,7 @@ dwarf_decode_macro_bytes (struct dwarf2_per_objfile *dwarf2_per_objfile,\n \t\t  }\n \t\telse\n \t\t  body = read_indirect_string_at_offset (dwarf2_per_objfile,\n-\t\t\t\t\t\t\t abfd, str_offset);\n+\t\t\t\t\t\t\t str_offset);\n \t      }\n \n \t    is_define = (macinfo_type == DW_MACRO_define"
    },
    {
      "sha": "776617911a2ad2a7eeb4e0370906e65f251a51a2",
      "filename": "gdb/dwarf2/section.c",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/dwarf2/section.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/dwarf2/section.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/section.c?ref=4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
      "patch": "@@ -187,3 +187,20 @@ dwarf2_section_info::read (struct objfile *objfile)\n \t     bfd_section_name (sectp), bfd_get_filename (abfd));\n     }\n }\n+\n+const char *\n+dwarf2_section_info::read_string (struct objfile *objfile, LONGEST str_offset,\n+\t\t\t\t  const char *form_name)\n+{\n+  read (objfile);\n+  if (buffer == NULL)\n+    error (_(\"%s used without %s section [in module %s]\"),\n+\t   form_name, get_name (), get_file_name ());\n+  if (str_offset >= size)\n+    error (_(\"%s pointing outside of %s section [in module %s]\"),\n+\t   form_name, get_name (), get_file_name ());\n+  gdb_assert (HOST_CHAR_BIT == 8);\n+  if (buffer[str_offset] == '\\0')\n+    return NULL;\n+  return (const char *) (buffer + str_offset);\n+}"
    },
    {
      "sha": "02f42df78c6f662665376175e24b87c209233938",
      "filename": "gdb/dwarf2/section.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/dwarf2/section.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f44ae6c69b839712a33a46aaa62d58d2b16b4ca/gdb/dwarf2/section.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/section.h?ref=4f44ae6c69b839712a33a46aaa62d58d2b16b4ca",
      "patch": "@@ -98,6 +98,11 @@ struct dwarf2_section_info\n      buffer.  */\n   void overflow_complaint () const;\n \n+  /* Return pointer to string in this section at offset STR_OFFSET\n+     with error reporting string FORM_NAME.  */\n+  const char *read_string (struct objfile *objfile, LONGEST str_offset,\n+\t\t\t   const char *form_name);\n+\n   union\n   {\n     /* If this is a real section, the bfd section.  */"
    }
  ]
}