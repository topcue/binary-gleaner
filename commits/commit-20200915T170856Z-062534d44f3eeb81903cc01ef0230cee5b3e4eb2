{
  "sha": "062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDYyNTM0ZDQ0ZjNlZWI4MTkwM2NjMDFlZjAyMzBjZWU1YjNlNGViMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-15T17:08:56Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-15T17:08:56Z"
    },
    "message": "Don't use PyLong_FromLong\n\nThis changes gdb to avoid PyLong_FromLong, preferring to\ngdb_py_object_from_longest instead.\n\ngdb/ChangeLog\n2020-09-15  Tom Tromey  <tromey@adacore.com>\n\n\t* python/python.c (gdbpy_parameter_value): Use\n\tgdb_py_object_from_longest.\n\t* python/py-type.c (convert_field, typy_range): Use\n\tgdb_py_object_from_longest.\n\t* python/py-tui.c (gdbpy_tui_width, gdbpy_tui_height): Use\n\tgdb_py_object_from_longest.\n\t* python/py-lazy-string.c (stpy_get_length): Use\n\tgdb_py_object_from_longest.\n\t* python/py-infthread.c (thpy_get_num, thpy_get_global_num): Use\n\tgdb_py_object_from_longest.\n\t* python/py-infevents.c (create_memory_changed_event_object): Use\n\tgdb_py_object_from_longest.\n\t* python/py-inferior.c (infpy_get_num): Use\n\tgdb_py_object_from_longest.\n\t(infpy_get_pid): Likewise.",
    "tree": {
      "sha": "9ec64c54b962a8f2bb8e7a4fd2977aa74f76e4fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ec64c54b962a8f2bb8e7a4fd2977aa74f76e4fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d1cab9876d72d867b2de82688f5f5a2a4b655edb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1cab9876d72d867b2de82688f5f5a2a4b655edb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d1cab9876d72d867b2de82688f5f5a2a4b655edb"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 38,
    "deletions": 12
  },
  "files": [
    {
      "sha": "eed367a49acba97ca126345c7b6dc8f6e2074c43",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -1,3 +1,21 @@\n+2020-09-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* python/python.c (gdbpy_parameter_value): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-type.c (convert_field, typy_range): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-tui.c (gdbpy_tui_width, gdbpy_tui_height): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-lazy-string.c (stpy_get_length): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-infthread.c (thpy_get_num, thpy_get_global_num): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-infevents.c (create_memory_changed_event_object): Use\n+\tgdb_py_object_from_longest.\n+\t* python/py-inferior.c (infpy_get_num): Use\n+\tgdb_py_object_from_longest.\n+\t(infpy_get_pid): Likewise.\n+\n 2020-09-15  Tom Tromey  <tromey@adacore.com>\n \n \t* python/python-internal.h (gdb_py_long_from_ulongest): Remove"
    },
    {
      "sha": "7204356ac73f1de32e680789d8747c7d9c894c3a",
      "filename": "gdb/python/py-inferior.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-inferior.c?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -423,7 +423,7 @@ infpy_get_num (PyObject *self, void *closure)\n \n   INFPY_REQUIRE_VALID (inf);\n \n-  return PyLong_FromLong (inf->inferior->num);\n+  return gdb_py_object_from_longest (inf->inferior->num).release ();\n }\n \n static PyObject *\n@@ -433,7 +433,7 @@ infpy_get_pid (PyObject *self, void *closure)\n \n   INFPY_REQUIRE_VALID (inf);\n \n-  return PyLong_FromLong (inf->inferior->pid);\n+  return gdb_py_object_from_longest (inf->inferior->pid).release ();\n }\n \n static PyObject *"
    },
    {
      "sha": "f303c395c133319ce9091e6efbc5b498a6bba8a0",
      "filename": "gdb/python/py-infevents.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-infevents.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-infevents.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-infevents.c?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -104,7 +104,7 @@ create_memory_changed_event_object (CORE_ADDR addr, ssize_t len)\n   if (evpy_add_attribute (event.get (), \"address\", addr_obj.get ()) < 0)\n     return NULL;\n \n-  gdbpy_ref<> len_obj (PyLong_FromLong (len));\n+  gdbpy_ref<> len_obj = gdb_py_object_from_longest (len);\n   if (len_obj == NULL)\n     return NULL;\n "
    },
    {
      "sha": "669b6d8b0742552dbdab066f8fc1afe07ad44f96",
      "filename": "gdb/python/py-infthread.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-infthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-infthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-infthread.c?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -130,7 +130,9 @@ thpy_get_num (PyObject *self, void *closure)\n \n   THPY_REQUIRE_VALID (thread_obj);\n \n-  return PyLong_FromLong (thread_obj->thread->per_inf_num);\n+  gdbpy_ref<> result\n+    = gdb_py_object_from_longest (thread_obj->thread->per_inf_num);\n+  return result.release ();\n }\n \n /* Getter for InferiorThread.global_num.  */\n@@ -142,7 +144,9 @@ thpy_get_global_num (PyObject *self, void *closure)\n \n   THPY_REQUIRE_VALID (thread_obj);\n \n-  return PyLong_FromLong (thread_obj->thread->global_num);\n+  gdbpy_ref<> result\n+    = gdb_py_object_from_longest (thread_obj->thread->global_num);\n+  return result.release ();\n }\n \n /* Getter for InferiorThread.ptid  -> (pid, lwp, tid)."
    },
    {
      "sha": "aaee94f5e1f59e7d416ef8941a40ddcc944e7844",
      "filename": "gdb/python/py-lazy-string.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-lazy-string.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-lazy-string.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-lazy-string.c?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -88,7 +88,7 @@ stpy_get_length (PyObject *self, void *closure)\n {\n   lazy_string_object *self_string = (lazy_string_object *) self;\n \n-  return PyLong_FromLong (self_string->length);\n+  return gdb_py_object_from_longest (self_string->length).release ();\n }\n \n static PyObject *"
    },
    {
      "sha": "8a24f2f3af41fdffe6edd6e1ca6c39b221ded946",
      "filename": "gdb/python/py-tui.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-tui.c?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -392,7 +392,9 @@ gdbpy_tui_width (PyObject *self, void *closure)\n {\n   gdbpy_tui_window *win = (gdbpy_tui_window *) self;\n   REQUIRE_WINDOW (win);\n-  return PyLong_FromLong (win->window->viewport_width ());\n+  gdbpy_ref<> result\n+    = gdb_py_object_from_longest (win->window->viewport_width ());\n+  return result.release ();\n }\n \n /* Return the height of the TUI window.  */\n@@ -401,7 +403,9 @@ gdbpy_tui_height (PyObject *self, void *closure)\n {\n   gdbpy_tui_window *win = (gdbpy_tui_window *) self;\n   REQUIRE_WINDOW (win);\n-  return PyLong_FromLong (win->window->viewport_height ());\n+  gdbpy_ref<> result\n+    = gdb_py_object_from_longest (win->window->viewport_height ());\n+  return result.release ();\n }\n \n /* Return the title of the TUI window.  */"
    },
    {
      "sha": "d487a392b11c9ebddd6a09822d6751e305529ec9",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -233,7 +233,7 @@ convert_field (struct type *type, int field)\n   if (PyObject_SetAttrString (result.get (), \"is_base_class\", arg.get ()) < 0)\n     return NULL;\n \n-  arg.reset (PyLong_FromLong (TYPE_FIELD_BITSIZE (type, field)));\n+  arg = gdb_py_object_from_longest (TYPE_FIELD_BITSIZE (type, field));\n   if (arg == NULL)\n     return NULL;\n   if (PyObject_SetAttrString (result.get (), \"bitsize\", arg.get ()) < 0)\n@@ -596,11 +596,11 @@ typy_range (PyObject *self, PyObject *args)\n       break;\n     }\n \n-  gdbpy_ref<> low_bound (PyLong_FromLong (low));\n+  gdbpy_ref<> low_bound = gdb_py_object_from_longest (low);\n   if (low_bound == NULL)\n     return NULL;\n \n-  gdbpy_ref<> high_bound (PyLong_FromLong (high));\n+  gdbpy_ref<> high_bound = gdb_py_object_from_longest (high);\n   if (high_bound == NULL)\n     return NULL;\n "
    },
    {
      "sha": "9cc8af6333831939a90e4547650f96b6a08a3aed",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/062534d44f3eeb81903cc01ef0230cee5b3e4eb2/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=062534d44f3eeb81903cc01ef0230cee5b3e4eb2",
      "patch": "@@ -496,7 +496,7 @@ gdbpy_parameter_value (enum var_types type, void *var)\n       /* Fall through.  */\n     case var_zinteger:\n     case var_zuinteger_unlimited:\n-      return PyLong_FromLong (* (int *) var);\n+      return gdb_py_object_from_longest (* (int *) var).release ();\n \n     case var_uinteger:\n       {"
    }
  ]
}