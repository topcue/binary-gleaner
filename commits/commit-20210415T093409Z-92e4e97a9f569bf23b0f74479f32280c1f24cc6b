{
  "sha": "92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTJlNGU5N2E5ZjU2OWJmMjNiMGY3NDQ3OWYzMjI4MGMxZjI0Y2M2Yg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-25T15:28:05Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-15T09:34:09Z"
    },
    "message": "gdb: process early initialization files and command line options\n\nAdds the ability to process commands at a new phase during GDB's\nstartup.  This phase is earlier than the current initialisation file\nprocessing, before GDB has produced any output.\n\nThe number of commands that can be processed at this early stage will\nbe limited, and it is expected that the only commands that would be\nprocessed at this stage will relate to some of the fundamentals of how\nGDB starts up.\n\nCurrently the only commands that it makes sense to add to this early\ninitialization file are those like 'set style version ....' as the\nversion string is displayed during startup before the standard\ninitialization files are parsed.  As such this commit fully resolved\nbug cli/25956.\n\nThis commit adds a mechanism to execute these early initialization\nfiles from a users HOME directory, as well as some corresponding\ncommand line flags for GDB.\n\nThe early initialization files that GDB will currently check for are\n~/.config/gdb/gdbearlyinit (on Linux like systems) or ~/.gdbearlyinit\nif the former is not found.\n\nThe output of 'gdb --help' has been extended to include a list of the\nearly initialization files being processed.\n\ngdb/ChangeLog:\n\n\tPR cli/25956\n\t* NEWS: Mention new early init files and command line options.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Define GDBEARLYINIT.\n\t* main.c (get_earlyinit_files): New function.\n\t(enum cmdarg_kind): Add CMDARG_EARLYINIT_FILE and\n\tCMDARG_EARLYINIT_COMMAND.\n\t(captured_main_1): Add support for new command line flags, and for\n\tprocessing startup files.\n\t(print_gdb_help): Include startup files in the output.\n\ngdb/doc/ChangeLog:\n\n\tPR cli/25956\n\t* gdb.texinfo (File Options): Mention new command line options.\n\t(Startup): Discuss when early init files are processed.\n\t(Initialization Files): Add description of early init files.\n\t(Output Styling): Update description of 'version' style.\n\t(gdb man): Mention early init files.\n\ngdb/testsuite/ChangeLog:\n\n\tPR cli/25956\n\t* gdb.base/early-init-file.c: New file.\n\t* gdb.base/early-init-file.exp: New file.\n\t* lib/gdb-utils.exp (style): Handle style 'none'.",
    "tree": {
      "sha": "c3c32649c4dd701fef2406701e243be12a27b726",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c3c32649c4dd701fef2406701e243be12a27b726"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "54b4dcc530f0a907d9121aba1a2631d7e3333a8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54b4dcc530f0a907d9121aba1a2631d7e3333a8f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/54b4dcc530f0a907d9121aba1a2631d7e3333a8f"
    }
  ],
  "stats": {
    "total": 368,
    "additions": 357,
    "deletions": 11
  },
  "files": [
    {
      "sha": "ee3aeb888ac2b4d4a081886f92716d2e255b555b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -1,3 +1,17 @@\n+2021-04-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR cli/25956\n+\t* NEWS: Mention new early init files and command line options.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Define GDBEARLYINIT.\n+\t* main.c (get_earlyinit_files): New function.\n+\t(enum cmdarg_kind): Add CMDARG_EARLYINIT_FILE and\n+\tCMDARG_EARLYINIT_COMMAND.\n+\t(captured_main_1): Add support for new command line flags, and for\n+\tprocessing startup files.\n+\t(print_gdb_help): Include startup files in the output.\n+\n 2021-04-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* main.c (relocate_gdbinit_path_maybe_in_datadir): Rename to..."
    },
    {
      "sha": "c5f8605ab414f909814e0380b43d8540e4478b06",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -48,6 +48,18 @@\n   the use of the GNAT encoding (based on information added to the type's\n   name following a GNAT-specific format).\n \n+* GDB will now load and process commands from ~/.config/gdb/gdbearlyinit\n+  or ~/.gdbearlyinit if these files are present.  These files are\n+  processed earlier than any of the other initialization files and\n+  can affect parts of GDB's startup that previously had already been\n+  completed before the initialization files were read, for example\n+  styling of the initial GDB greeting.\n+\n+* GDB now has two new options \"--early-init-command\" and\n+  \"--early-init-eval-command\" with corresponding short options \"-eix\"\n+  and \"-eiex\" that allow options (that would normally appear in a\n+  gdbearlyinit file) to be passed on the command line.\n+\n * New commands\n \n set debug event-loop"
    },
    {
      "sha": "db860c7cea0109ffad5e7f9c4ef3629bd9c1d71f",
      "filename": "gdb/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/config.in?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -43,6 +43,9 @@\n    language is requested. */\n #undef ENABLE_NLS\n \n+/* The .gdbearlyinit filename. */\n+#undef GDBEARLYINIT\n+\n /* The .gdbinit filename. */\n #undef GDBINIT\n "
    },
    {
      "sha": "95fd6b0920293668b45fa412b07460585bf1a35e",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -16778,6 +16778,12 @@ _ACEOF\n \n \n \n+cat >>confdefs.h <<_ACEOF\n+#define GDBEARLYINIT \".gdbearlyinit\"\n+_ACEOF\n+\n+\n+\n # Support for --with-sysroot is a copy of GDB_AC_WITH_DIR,\n # except that the argument to --with-sysroot is optional.\n # --with-sysroot (or --with-sysroot=yes) sets the default sysroot path."
    },
    {
      "sha": "12a59ee45e597d5de468e3fc1641c5bb38df924b",
      "filename": "gdb/configure.ac",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.ac?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -1819,6 +1819,9 @@ case $host_os in\n esac\n AC_DEFINE_UNQUOTED(GDBINIT,\"$gdbinit\",[The .gdbinit filename.])\n \n+dnl Set the host's .gdbearlyinit filename\n+AC_DEFINE_UNQUOTED(GDBEARLYINIT,\".gdbearlyinit\",[The .gdbearlyinit filename.])\n+\n dnl Handle optional features that can be enabled.\n \n # Support for --with-sysroot is a copy of GDB_AC_WITH_DIR,"
    },
    {
      "sha": "b27bd18ab72c9d396460eff47fa01fcb87c1541b",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -1,3 +1,12 @@\n+2021-04-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR cli/25956\n+\t* gdb.texinfo (File Options): Mention new command line options.\n+\t(Startup): Discuss when early init files are processed.\n+\t(Initialization Files): Add description of early init files.\n+\t(Output Styling): Update description of 'version' style.\n+\t(gdb man): Mention early init files.\n+\n 2021-04-14  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.texinfo (GDB/MI Miscellaneous Commands): Add missing"
    },
    {
      "sha": "4351378fd053f4019c122343d842ec95e847d3ae",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 111,
      "deletions": 10,
      "changes": 121,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -1040,6 +1040,20 @@ Execute a single @value{GDBN} command before loading the inferior (but\n after loading gdbinit files).\n @xref{Startup}.\n \n+@item -early-init-command @var{file}\n+@itemx -eix @var{file}\n+@cindex @code{--early-init-command}\n+@cindex @code{-eix}\n+Execute commands from @var{file} very early in the initialization\n+process, before any output is produced.  @xref{Startup}.\n+\n+@item -early-init-eval-command @var{command}\n+@itemx -eiex @var{command}\n+@cindex @code{--early-init-eval-command}\n+@cindex @code{-eiex}\n+Execute a single @value{GDBN} command very early in the initialization\n+process, before any output is produced.\n+\n @item -directory @var{directory}\n @itemx -d @var{directory}\n @cindex @code{--directory}\n@@ -1291,6 +1305,23 @@ important when reporting @value{GDBN} bugs (@pxref{GDB Bugs}).\n Here's the description of what @value{GDBN} does during session startup:\n \n @enumerate\n+\n+@item\n+Performs minimal setup required to initialize basic internal state.\n+\n+@item\n+@cindex early initialization file\n+Reads commands from the early initialization file (if any) in your\n+home directory.  Only a restricted set of commands can be placed into\n+an early initialization file, see @ref{Initialization Files}, for\n+details.\n+\n+@item\n+Executes commands and command files specified by the @samp{-eiex} and\n+@samp{-eix} command line options in their specified order.  Only a\n+restricted set of commands can be used with @samp{-eiex} and\n+@samp{eix}, see @ref{Initialization Files}, for details.\n+\n @item\n Sets up the command interpreter as specified by the command line\n (@pxref{Mode Options, interpreter}).\n@@ -1367,13 +1398,82 @@ To display the list of initialization files loaded by @value{GDBN} at\n startup, in the order they will be loaded, you can use @kbd{gdb\n --help}.\n \n+@cindex early initialization\n+The @dfn{early initialization} file is loaded very early in\n+@value{GDBN}'s initialization process, before the interpreter\n+(@pxref{Interpreters}) has been initialized, and before the default\n+target (@pxref{Targets}) is initialized.  Only @code{set} or\n+@code{source} commands should be placed into an early initialization\n+file, and the only @code{set} commands that can be used are those that\n+control how @value{GDBN} starts up.\n+\n+Commands that can be placed into an early initialization file will be\n+documented as such throughout this manual.  Any command that is not\n+documented as being suitable for an early initialization file should\n+instead be placed into a general initialization file.  Command files\n+passed to @code{--early-init-command} or @code{-eix} are also early\n+initialization files, with the same command restrictions.  Only\n+commands that can appear in an early initialization file should be\n+passed to @code{--early-init-eval-command} or @code{-eiex}.\n+\n+@cindex general initialization\n+In contrast, the @dfn{general initialization} files are processed\n+later, after @value{GDBN} has finished its own internal initialization\n+process, any valid command can be used in these files.\n+\n+@cindex initialization file\n+Throughout the rest of this document the term @dfn{initialization\n+file} refers to one of the general initialization files, not the early\n+initialization file.  Any discussion of the early initialization file\n+will specifically mention that it is the early initialization file\n+being discussed.\n+\n As the system wide and home directory initialization files are\n processed before most command line options, changes to settings\n (e.g. @samp{set complaints}) can affect subsequent processing of\n command line options and operands.\n \n-The following sections describe where @value{GDBN} looks for the\n-initialization and the order that the files are searched for.\n+The following sections describe where @value{GDBN} looks for the early\n+initialization and initialization files, and the order that the files\n+are searched for.\n+\n+@subsubsection Home directory early initialization files\n+\n+@value{GDBN} initially looks for an early initialization file in the\n+users home directory@footnote{On DOS/Windows systems, the home\n+directory is the one pointed to by the @code{HOME} environment\n+variable.}.  There are a number of locations that @value{GDBN} will\n+search in the home directory, these locations are searched in order\n+and @value{GDBN} will load the first file that it finds, and\n+subsequent locations will not be checked.\n+\n+On non-macOS hosts the locations searched are:\n+@itemize\n+@item\n+The file @file{gdb/gdbearlyinit} within the directory pointed to by the\n+environment variable @env{XDG_CONFIG_HOME}, if it is defined.\n+@item\n+The file @file{.config/gdb/gdbearlyinit} within the directory pointed to\n+by the environment variable @env{HOME}, if it is defined.\n+@item\n+The file @file{.gdbearlyinit} within the directory pointed to by the\n+environment variable @env{HOME}, if it is defined.\n+@end itemize\n+\n+By contrast, on macOS hosts the locations searched are:\n+@itemize\n+@item\n+The file @file{Library/Preferences/gdb/gdbearlyinit} within the\n+directory pointed to by the environment variable @env{HOME}, if it is\n+defined.\n+@item\n+The file @file{.gdbearlyinit} within the directory pointed to by the\n+environment variable @env{HOME}, if it is defined.\n+@end itemize\n+\n+It is possible to prevent the home directory early initialization file\n+from being loaded using the @samp{-nx} or @samp{-nh} command line\n+options, @pxref{Mode Options,,Choosing Modes}.\n \n @anchor{System Wide Init Files}\n @subsubsection System wide initialization files\n@@ -25954,11 +26054,10 @@ default, this style's foreground color is magenta and it has bold\n intensity.  The version number is displayed in two places, the output\n of @command{show version}, and when @value{GDBN} starts up.\n \n-Currently the version string displayed at startup is printed before\n-@value{GDBN} has parsed any command line options, or parsed any\n-command files, so there is currently no way to control the styling of\n-this string.  However, @value{GDBN}'s @code{--quiet} command line option\n-can be used to disable printing of the version string on startup.\n+In order to control how @value{GDBN} styles the version number at\n+startup, add the @code{set style version} family of commands to the\n+early initialization command file (@pxref{Initialization\n+Files}).\n \n @item title\n Control the styling of titles.  These are managed with the\n@@ -46877,12 +46976,14 @@ Execute given @value{GDBN} @var{command}.\n Add @var{directory} to the path to search for source files.\n \n @item -nh\n-Do not execute commands from @file{~/.config/gdb/gdbinit} or\n-@file{~/.gdbinit}.\n+Do not execute commands from @file{~/.config/gdb/gdbinit},\n+@file{~/.gdbinit}, @file{~/.config/gdb/gdbearlyinit}, or\n+@file{~/.gdbearlyinit}\n \n @item -nx\n @itemx -n\n-Do not execute commands from any @file{.gdbinit} initialization files.\n+Do not execute commands from any @file{.gdbinit} or\n+@file{.gdbearlyinit} initialization files.\n \n @item -quiet\n @itemx -q"
    },
    {
      "sha": "5633381fdd5a1e6c9a92d03ae9ee8be79eaeef20",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 60,
      "deletions": 1,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -386,6 +386,22 @@ get_init_files (std::vector<std::string> *system_gdbinit,\n   *local_gdbinit = init_files->local_file ();\n }\n \n+/* Compute the location of the early init file GDB should source and return\n+   it in HOME_GDBEARLYINIT.  HOME_GDBEARLYINIT could be returned as an\n+   empty string if there is no early init file found.  */\n+\n+static void\n+get_earlyinit_files (std::string *home_gdbearlyinit)\n+{\n+  /* Cache the file lookup object so we only actually search for the files\n+     once.  */\n+  static gdb::optional<gdb_initfile_finder> init_files;\n+  if (!init_files.has_value ())\n+    init_files.emplace (GDBEARLYINIT, nullptr, false, nullptr, false, false);\n+\n+  *home_gdbearlyinit = init_files->home_file ();\n+}\n+\n /* Start up the event loop.  This is the entry point to the event loop\n    from the command loop.  */\n \n@@ -560,7 +576,13 @@ enum cmdarg_kind\n   CMDARG_INIT_FILE,\n     \n   /* Option type -iex.  */\n-  CMDARG_INIT_COMMAND\n+  CMDARG_INIT_COMMAND,\n+\n+  /* Option type -sx.  */\n+  CMDARG_EARLYINIT_FILE,\n+\n+  /* Option type -sex.  */\n+  CMDARG_EARLYINIT_COMMAND\n };\n \n /* Arguments of --command option and its counterpart.  */\n@@ -738,6 +760,8 @@ captured_main_1 (struct captured_main_args *context)\n       OPT_WINDOWS,\n       OPT_IX,\n       OPT_IEX,\n+      OPT_EIX,\n+      OPT_EIEX,\n       OPT_READNOW,\n       OPT_READNEVER\n     };\n@@ -787,6 +811,10 @@ captured_main_1 (struct captured_main_args *context)\n       {\"init-eval-command\", required_argument, 0, OPT_IEX},\n       {\"ix\", required_argument, 0, OPT_IX},\n       {\"iex\", required_argument, 0, OPT_IEX},\n+      {\"early-init-command\", required_argument, 0, OPT_EIX},\n+      {\"early-init-eval-command\", required_argument, 0, OPT_EIEX},\n+      {\"eix\", required_argument, 0, OPT_EIX},\n+      {\"eiex\", required_argument, 0, OPT_EIEX},\n #ifdef GDBTK\n       {\"tclcommand\", required_argument, 0, 'z'},\n       {\"enable-external-editor\", no_argument, 0, 'y'},\n@@ -899,6 +927,12 @@ captured_main_1 (struct captured_main_args *context)\n \t  case OPT_IEX:\n \t    cmdarg_vec.emplace_back (CMDARG_INIT_COMMAND, optarg);\n \t    break;\n+\t  case OPT_EIX:\n+\t    cmdarg_vec.emplace_back (CMDARG_EARLYINIT_FILE, optarg);\n+\t    break;\n+\t  case OPT_EIEX:\n+\t    cmdarg_vec.emplace_back (CMDARG_EARLYINIT_COMMAND, optarg);\n+\t    break;\n \t  case 'B':\n \t    batch_flag = batch_silent = 1;\n \t    gdb_stdout = new null_file ();\n@@ -1007,6 +1041,18 @@ captured_main_1 (struct captured_main_args *context)\n   /* Initialize all files.  */\n   gdb_init (gdb_program_name);\n \n+  /* Process early init files and early init options from the command line.  */\n+  if (!inhibit_gdbinit)\n+    {\n+      std::string home_gdbearlyinit;\n+      get_earlyinit_files (&home_gdbearlyinit);\n+      if (!home_gdbearlyinit.empty () && !inhibit_home_gdbinit)\n+\tret = catch_command_errors (source_script,\n+\t\t\t\t    home_gdbearlyinit.c_str (), 0);\n+    }\n+  execute_cmdargs (&cmdarg_vec, CMDARG_EARLYINIT_FILE,\n+\t\t   CMDARG_EARLYINIT_COMMAND, &ret);\n+\n   /* Now that gdb_init has created the initial inferior, we're in\n      position to set args for that inferior.  */\n   if (set_args)\n@@ -1334,8 +1380,10 @@ print_gdb_help (struct ui_file *stream)\n   std::vector<std::string> system_gdbinit;\n   std::string home_gdbinit;\n   std::string local_gdbinit;\n+  std::string home_gdbearlyinit;\n \n   get_init_files (&system_gdbinit, &home_gdbinit, &local_gdbinit);\n+  get_earlyinit_files (&home_gdbearlyinit);\n \n   /* Note: The options in the list below are only approximately sorted\n      in the alphabetical order, so as to group closely related options\n@@ -1409,6 +1457,17 @@ Other options:\\n\\n\\\n \t\t     Set GDB's data-directory to DIR.\\n\\\n \"), stream);\n   fputs_unfiltered (_(\"\\n\\\n+At startup, GDB reads the following early init files and executes their\\n\\\n+commands:\\n\\\n+\"), stream);\n+  if (!home_gdbearlyinit.empty ())\n+    fprintf_unfiltered (stream, _(\"\\\n+   * user-specific early init file: %s\\n\\\n+\"), home_gdbearlyinit.c_str ());\n+  if (home_gdbearlyinit.empty ())\n+    fprintf_unfiltered (stream, _(\"\\\n+   None found.\\n\"));\n+  fputs_unfiltered (_(\"\\n\\\n At startup, GDB reads the following init files and executes their commands:\\n\\\n \"), stream);\n   if (!system_gdbinit.empty ())"
    },
    {
      "sha": "04872d85ab0cf2772faaaa0b19a0376fc078a6a0",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR cli/25956\n+\t* gdb.base/early-init-file.c: New file.\n+\t* gdb.base/early-init-file.exp: New file.\n+\t* lib/gdb-utils.exp (style): Handle style 'none'.\n+\n 2021-04-14  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.dwarf2/dw2-inline-with-lexical-scope.exp: Use"
    },
    {
      "sha": "9811b15f06d5a78008ab6a6c585ff933e234aea8",
      "filename": "gdb/testsuite/gdb.base/early-init-file.c",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/gdb.base/early-init-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/gdb.base/early-init-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/early-init-file.c?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "4873e5be3aea84d5be70f4aa8c3ff850267f6361",
      "filename": "gdb/testsuite/gdb.base/early-init-file.exp",
      "status": "added",
      "additions": 109,
      "deletions": 0,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/gdb.base/early-init-file.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/gdb.base/early-init-file.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/early-init-file.exp?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -0,0 +1,109 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test GDB's early init file mechanism.\n+\n+standard_testfile\n+\n+# Compile the test executable.\n+if {[build_executable \"failed to build\" $testfile $srcfile]} {\n+    return -1\n+}\n+\n+# Start gdb and ensure that the initial version string is styled in\n+# STYLE, use MESSAGE as the name of the test.\n+proc check_gdb_startup_version_string { style { message \"\" } } {\n+    if { $message == \"\" } {\n+\tset message \"check startup version string has style $style\"\n+    }\n+\n+    gdb_exit\n+    gdb_spawn\n+    set vers [style \"GNU gdb.*\" $style]\n+    gdb_test \"\" \"^${vers}.*\" $message\n+}\n+\n+# Return a list containing two directory paths for newly created home\n+# directories.\n+#\n+# The first directory is a HOME style home directory, it contains a\n+# .gdbearlyinit file containing CONTENT.\n+#\n+# The second directory is an XDG_CONFIG_HOME style home directory, it\n+# contains a sub-directory gdb/, inside which is a file gdbearlyinit\n+# that also contains CONTENT.\n+#\n+# The PREFIX is used in both directory names and should be unique for\n+# each call to this function.\n+proc setup_home_directories { prefix content } {\n+    set home_dir [standard_output_file \"${prefix}-home\"]\n+    set xdg_home_dir [standard_output_file \"${prefix}-xdg\"]\n+\n+    file mkdir $home_dir\n+    file mkdir \"$xdg_home_dir/gdb\"\n+\n+    # Write the content into the HOME directory.\n+    set fd [open \"$home_dir/.gdbearlyinit\" w]\n+    puts $fd $content\n+    close $fd\n+\n+    # Copy this from the HOME directory into the XDG_CONFIG_HOME\n+    # directory.\n+    file copy -force \"$home_dir/.gdbearlyinit\" \"$xdg_home_dir/gdb/gdbearlyinit\"\n+\n+    return [list $home_dir $xdg_home_dir]\n+}\n+\n+save_vars { env(TERM) } {\n+    # We need an ANSI-capable terminal to get the output.\n+    setenv TERM ansi\n+\n+    # Start GDB and confirm that the version string is styled.\n+    check_gdb_startup_version_string version\n+\n+    # Create an empty directory we can use as HOME for some of the\n+    # tests below.  When we set XDG_CONFIG_HOME we still need to point\n+    # HOME at something otherwise GDB complains that it doesn't know\n+    # where to create the index cache.\n+    set empty_home_dir [standard_output_file fake-empty-home]\n+\n+    # Create two directories to use for the style setting test.\n+    set dirs [setup_home_directories \"style\" \\\n+\t\t  [multi_line_input \\\n+\t\t       \"set style version foreground none\" \\\n+\t\t       \"set style version background none\" \\\n+\t\t       \"set style version intensity normal\"]]\n+    set home_dir [lindex $dirs 0]\n+    set xdg_home_dir [lindex $dirs 1]\n+\n+    # Now arrange to use the fake home directory early init file.\n+    save_vars { INTERNAL_GDBFLAGS env(HOME) env(XDG_CONFIG_HOME) } {\n+\tset INTERNAL_GDBFLAGS [string map {\"-nx\" \"\"} $INTERNAL_GDBFLAGS]\n+\n+\t# Now test GDB when using the HOME directory.\n+\tset env(HOME) $home_dir\n+\tunset -nocomplain env(XDG_CONFIG_HOME)\n+\tcheck_gdb_startup_version_string none \\\n+\t    \"check version string is unstyled using HOME\"\n+\n+\t# Now test using the XDG_CONFIG_HOME folder.  We still need to\n+\t# have a HOME directory set otherwise GDB will issue an error\n+\t# about not knowing where to place the index cache.\n+\tset env(XDG_CONFIG_HOME) $xdg_home_dir\n+\tset env(HOME) $empty_home_dir\n+\tcheck_gdb_startup_version_string none \\\n+\t    \"check version string is unstyled using XDG_CONFIG_HOME\"\n+    }\n+}"
    },
    {
      "sha": "cec157196b3fc307a51a1956287630fcec79b76e",
      "filename": "gdb/testsuite/lib/gdb-utils.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/lib/gdb-utils.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92e4e97a9f569bf23b0f74479f32280c1f24cc6b/gdb/testsuite/lib/gdb-utils.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb-utils.exp?ref=92e4e97a9f569bf23b0f74479f32280c1f24cc6b",
      "patch": "@@ -56,6 +56,7 @@ proc style {str style} {\n \taddress { set style 34 }\n \tmetadata { set style 2 }\n \tversion { set style \"35;1\" }\n+\tnone { return $str }\n     }\n     return \"\\033\\\\\\[${style}m${str}\\033\\\\\\[m\"\n }"
    }
  ]
}