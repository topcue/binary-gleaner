{
  "sha": "3f93af61413b6f6e4381ac286cb510d897971e3f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Y5M2FmNjE0MTNiNmY2ZTQzODFhYzI4NmNiNTEwZDg5Nzk3MWUzZg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-09T10:39:33Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-09T10:39:33Z"
    },
    "message": "x86-64: assert sane internal state for REX conversions\n\nFor the comments about \"hi\" registers to be really applicable, RegRex\nmay not be set on the respective registers. Assert this is the case.",
    "tree": {
      "sha": "0265348806c1c74b594554437b25f43edb6024fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0265348806c1c74b594554437b25f43edb6024fb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3f93af61413b6f6e4381ac286cb510d897971e3f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f93af61413b6f6e4381ac286cb510d897971e3f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3f93af61413b6f6e4381ac286cb510d897971e3f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f93af61413b6f6e4381ac286cb510d897971e3f/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7697afb662b2ffd67d044209d6d807a8e21dfed9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7697afb662b2ffd67d044209d6d807a8e21dfed9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7697afb662b2ffd67d044209d6d807a8e21dfed9"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 8,
    "deletions": 1
  },
  "files": [
    {
      "sha": "26a0075e0792225758fb5d872b18f0a313adb137",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f93af61413b6f6e4381ac286cb510d897971e3f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f93af61413b6f6e4381ac286cb510d897971e3f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=3f93af61413b6f6e4381ac286cb510d897971e3f",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-09  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (md_assemble): Check RegRex is clear during\n+\tREX transformations. Correct comment indentation.\n+\n 2020-01-09  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (optimize_encoding): Generalize register"
    },
    {
      "sha": "645fd38a12c1de6d86dec292a9d87aadc1c2bc79",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f93af61413b6f6e4381ac286cb510d897971e3f/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f93af61413b6f6e4381ac286cb510d897971e3f/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=3f93af61413b6f6e4381ac286cb510d897971e3f",
      "patch": "@@ -4574,6 +4574,7 @@ md_assemble (char *line)\n \t  if (i.types[x].bitfield.class == Reg && i.types[x].bitfield.byte\n \t      && (i.op[x].regs->reg_flags & RegRex64) == 0)\n \t    {\n+\t      gas_assert (!(i.op[x].regs->reg_flags & RegRex));\n \t      /* In case it is \"hi\" register, give up.  */\n \t      if (i.op[x].regs->reg_num > 3)\n \t\tas_bad (_(\"can't encode register '%s%s' in an \"\n@@ -4592,7 +4593,7 @@ md_assemble (char *line)\n   if (i.rex == 0 && i.rex_encoding)\n     {\n       /* Check if we can add a REX_OPCODE byte.  Look for 8 bit operand\n-         that uses legacy register.  If it is \"hi\" register, don't add\n+\t that uses legacy register.  If it is \"hi\" register, don't add\n \t the REX_OPCODE byte.  */\n       int x;\n       for (x = 0; x < 2; x++)\n@@ -4601,6 +4602,7 @@ md_assemble (char *line)\n \t    && (i.op[x].regs->reg_flags & RegRex64) == 0\n \t    && i.op[x].regs->reg_num > 3)\n \t  {\n+\t    gas_assert (!(i.op[x].regs->reg_flags & RegRex));\n \t    i.rex_encoding = FALSE;\n \t    break;\n \t  }"
    }
  ]
}