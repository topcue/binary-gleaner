{
  "sha": "797bcff595c5e161b333077299fcaca19bb4fd17",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Nzk3YmNmZjU5NWM1ZTE2MWIzMzMwNzcyOTlmY2FjYTE5YmI0ZmQxNw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:23Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:23Z"
    },
    "message": "gdbserver/linux-low: turn 'arch_setup' into a method\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn the 'arch_setup' linux target op into a method of\n\tlinux_process_target.\n\n\t* linux-low.h (struct linux_target_ops) <arch_setup>: Delete.\n\t(class linux_process_target) <arch_setup_thread>\n\t<low_arch_setup>: New declarations.\n\t* linux-low.cc (linux_arch_setup): Delete.\n\t(linux_arch_setup_thread): Turn into...\n\t(linux_process_target::arch_setup_thread): ... this.\n\n\tUpdate the callers below.\n\n\t(linux_process_target::handle_extended_wait)\n\t(linux_process_target::post_create_inferior)\n\t(linux_process_target::filter_event)\n\n\t* linux-x86-low.cc (class x86_target) <low_arch_setup>: New\n\tdeclaration.\n\t(x86_linux_update_xmltarget): Turn into...\n\t(x86_target::update_xmltarget): ...this.\n\t(x86_linux_process_qsupported): Update the call to\n\tx86_linux_update_xmltarget.\n\t(x86_arch_setup): Turn into ...\n\t(x86_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-aarch64-low.cc (class aarch64_target) <low_arch_setup>: New\n\tdeclaration.\n\t(aarch64_arch_setup): Turn into ...\n\t(aarch64_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-arm-low.cc (class arm_target) <low_arch_setup>: New\n\tdeclaration.\n\t(arm_arch_setup): Turn into ...\n\t(arm_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-bfin-low.cc (class bfin_target) <low_arch_setup>: New\n\tdeclaration.\n\t(bfin_arch_setup): Turn into ...\n\t(bfin_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-cris-low.cc (class cris_target) <low_arch_setup>: New\n\tdeclaration.\n\t(cris_arch_setup): Turn into ...\n\t(cris_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-crisv32-low.cc (class crisv32_target) <low_arch_setup>: New\n\tdeclaration.\n\t(crisv32_arch_setup): Turn into ...\n\t(crisv32_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-ia64-low.cc (class ia64_target) <low_arch_setup>: New\n\tdeclaration.\n\t(ia64_arch_setup): Turn into ...\n\t(ia64_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-m32r-low.cc (class m32r_target) <low_arch_setup>: New\n\tdeclaration.\n\t(m32r_arch_setup): Turn into ...\n\t(m32r_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-m68k-low.cc (class m68k_target) <low_arch_setup>: New\n\tdeclaration.\n\t(m68k_arch_setup): Turn into ...\n\t(m68k_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-mips-low.cc (class mips_target) <low_arch_setup>: New\n\tdeclaration.\n\t(mips_arch_setup): Turn into ...\n\t(mips_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-nios2-low.cc (class nios2_target) <low_arch_setup>: New\n\tdeclaration.\n\t(nios2_arch_setup): Turn into ...\n\t(nios2_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-ppc-low.cc (class ppc_target) <low_arch_setup>: New\n\tdeclaration.\n\t(ppc_arch_setup): Turn into ...\n\t(ppc_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-riscv-low.cc (class riscv_target) <low_arch_setup>: New\n\tdeclaration.\n\t(riscv_arch_setup): Turn into ...\n\t(riscv_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-s390-low.cc (class s390_target) <low_arch_setup>: New\n\tdeclaration.\n\t(s390_arch_setup): Turn into ...\n\t(s390_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-sh-low.cc (class sh_target) <low_arch_setup>: New\n\tdeclaration.\n\t(sh_arch_setup): Turn into ...\n\t(sh_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-sparc-low.cc (class sparc_target) <low_arch_setup>: New\n\tdeclaration.\n\t(sparc_arch_setup): Turn into ...\n\t(sparc_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-tic6x-low.cc (class tic6x_target) <low_arch_setup>: New\n\tdeclaration.\n\t(tic6x_arch_setup): Turn into ...\n\t(tic6x_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-tile-low.cc (class tile_target) <low_arch_setup>: New\n\tdeclaration.\n\t(tile_arch_setup): Turn into ...\n\t(tile_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-xtensa-low.cc (class xtensa_target) <low_arch_setup>: New\n\tdeclaration.\n\t(xtensa_arch_setup): Turn into ...\n\t(xtensa_target::low_arch_setup): ...this.\n\t(the_low_target): Remove the op field.",
    "tree": {
      "sha": "4be46e20ff8ef62c5965e68f375b87866cef7ddb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4be46e20ff8ef62c5965e68f375b87866cef7ddb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/797bcff595c5e161b333077299fcaca19bb4fd17",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/797bcff595c5e161b333077299fcaca19bb4fd17",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/797bcff595c5e161b333077299fcaca19bb4fd17",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/797bcff595c5e161b333077299fcaca19bb4fd17/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ef0478f6112ede4da9b70e07aa3124f0d2faf108",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef0478f6112ede4da9b70e07aa3124f0d2faf108",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ef0478f6112ede4da9b70e07aa3124f0d2faf108"
    }
  ],
  "stats": {
    "total": 321,
    "additions": 237,
    "deletions": 84
  },
  "files": [
    {
      "sha": "4a9d7bc3e4f8c8910e7552b224e64fecc49229c0",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 118,
      "deletions": 0,
      "changes": 118,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -1,3 +1,121 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn the 'arch_setup' linux target op into a method of\n+\tlinux_process_target.\n+\n+\t* linux-low.h (struct linux_target_ops) <arch_setup>: Delete.\n+\t(class linux_process_target) <arch_setup_thread>\n+\t<low_arch_setup>: New declarations.\n+\t* linux-low.cc (linux_arch_setup): Delete.\n+\t(linux_arch_setup_thread): Turn into...\n+\t(linux_process_target::arch_setup_thread): ... this.\n+\n+\tUpdate the callers below.\n+\n+\t(linux_process_target::handle_extended_wait)\n+\t(linux_process_target::post_create_inferior)\n+\t(linux_process_target::filter_event)\n+\n+\t* linux-x86-low.cc (class x86_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(x86_linux_update_xmltarget): Turn into...\n+\t(x86_target::update_xmltarget): ...this.\n+\t(x86_linux_process_qsupported): Update the call to\n+\tx86_linux_update_xmltarget.\n+\t(x86_arch_setup): Turn into ...\n+\t(x86_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-aarch64-low.cc (class aarch64_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(aarch64_arch_setup): Turn into ...\n+\t(aarch64_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-arm-low.cc (class arm_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(arm_arch_setup): Turn into ...\n+\t(arm_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-bfin-low.cc (class bfin_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(bfin_arch_setup): Turn into ...\n+\t(bfin_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-cris-low.cc (class cris_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(cris_arch_setup): Turn into ...\n+\t(cris_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-crisv32-low.cc (class crisv32_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(crisv32_arch_setup): Turn into ...\n+\t(crisv32_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-ia64-low.cc (class ia64_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(ia64_arch_setup): Turn into ...\n+\t(ia64_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-m32r-low.cc (class m32r_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(m32r_arch_setup): Turn into ...\n+\t(m32r_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-m68k-low.cc (class m68k_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(m68k_arch_setup): Turn into ...\n+\t(m68k_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-mips-low.cc (class mips_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(mips_arch_setup): Turn into ...\n+\t(mips_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-nios2-low.cc (class nios2_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(nios2_arch_setup): Turn into ...\n+\t(nios2_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-ppc-low.cc (class ppc_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(ppc_arch_setup): Turn into ...\n+\t(ppc_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-riscv-low.cc (class riscv_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(riscv_arch_setup): Turn into ...\n+\t(riscv_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-s390-low.cc (class s390_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(s390_arch_setup): Turn into ...\n+\t(s390_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-sh-low.cc (class sh_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(sh_arch_setup): Turn into ...\n+\t(sh_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-sparc-low.cc (class sparc_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(sparc_arch_setup): Turn into ...\n+\t(sparc_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-tic6x-low.cc (class tic6x_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(tic6x_arch_setup): Turn into ...\n+\t(tic6x_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-tile-low.cc (class tile_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(tile_arch_setup): Turn into ...\n+\t(tile_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-xtensa-low.cc (class xtensa_target) <low_arch_setup>: New\n+\tdeclaration.\n+\t(xtensa_arch_setup): Turn into ...\n+\t(xtensa_target::low_arch_setup): ...this.\n+\t(the_low_target): Remove the op field.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* linux-low.h (the_linux_target): New extern declaration."
    },
    {
      "sha": "44f729386cdfa34dfcb399a348c1756c99f31ef3",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -55,6 +55,9 @@ class aarch64_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -515,10 +518,10 @@ aarch64_linux_new_fork (struct process_info *parent,\n /* Matches HWCAP_PACA in kernel header arch/arm64/include/uapi/asm/hwcap.h.  */\n #define AARCH64_HWCAP_PACA (1 << 30)\n \n-/* Implementation of linux_target_ops method \"arch_setup\".  */\n+/* Implementation of linux target ops method \"low_arch_setup\".  */\n \n-static void\n-aarch64_arch_setup (void)\n+void\n+aarch64_target::low_arch_setup ()\n {\n   unsigned int machine;\n   int is_elf64;\n@@ -3062,7 +3065,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_arch_setup,\n   aarch64_regs_info,\n   NULL, /* cannot_fetch_register */\n   NULL, /* cannot_store_register */"
    },
    {
      "sha": "17f9549a8875199f824f93aa65c8a1300a333f13",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -60,6 +60,9 @@ class arm_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -889,8 +892,8 @@ arm_read_description (void)\n   return arm_linux_read_description (ARM_FP_TYPE_NONE);\n }\n \n-static void\n-arm_arch_setup (void)\n+void\n+arm_target::low_arch_setup ()\n {\n   int tid = lwpid_of (current_thread);\n   int gpregs[18];\n@@ -1018,7 +1021,6 @@ arm_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  arm_arch_setup,\n   arm_regs_info,\n   arm_cannot_fetch_register,\n   arm_cannot_store_register,"
    },
    {
      "sha": "8656b20a9321b466ff547188ae3a0dd318924acf",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -29,6 +29,9 @@ class bfin_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -93,8 +96,8 @@ bfin_breakpoint_at (CORE_ADDR where)\n   return 0;\n }\n \n-static void\n-bfin_arch_setup (void)\n+void\n+bfin_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_bfin;\n }\n@@ -126,7 +129,6 @@ bfin_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  bfin_arch_setup,\n   bfin_regs_info,\n   bfin_cannot_fetch_register,\n   bfin_cannot_store_register,"
    },
    {
      "sha": "ea9dbda10e40ec6abef67e336f5db22549cf44b6",
      "filename": "gdbserver/linux-cris-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-cris-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-cris-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-cris-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -26,6 +26,9 @@ class cris_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -98,8 +101,8 @@ cris_breakpoint_at (CORE_ADDR where)\n   return 0;\n }\n \n-static void\n-cris_arch_setup (void)\n+void\n+cris_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_cris;\n }\n@@ -123,7 +126,6 @@ cris_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  cris_arch_setup,\n   cris_regs_info,\n   cris_cannot_fetch_register,\n   cris_cannot_store_register,"
    },
    {
      "sha": "f57be1c1529fc182bc52db870107a18ab609d1c2",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -26,6 +26,9 @@ class crisv32_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -358,8 +361,8 @@ cris_store_gregset (struct regcache *regcache, const void *buf)\n     }\n }\n \n-static void\n-cris_arch_setup (void)\n+void\n+crisv32_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_crisv32;\n }\n@@ -406,7 +409,6 @@ cris_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  cris_arch_setup,\n   cris_regs_info,\n   NULL,\n   NULL,"
    },
    {
      "sha": "bccab15dcc36e211926400f06d5fdd789da9d91f",
      "filename": "gdbserver/linux-ia64-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-ia64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-ia64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ia64-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -29,6 +29,9 @@ class ia64_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -350,15 +353,14 @@ ia64_regs_info (void)\n   return &regs_info;\n }\n \n-static void\n-ia64_arch_setup (void)\n+void\n+ia64_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_ia64;\n }\n \n \n struct linux_target_ops the_low_target = {\n-  ia64_arch_setup,\n   ia64_regs_info,\n   ia64_cannot_fetch_register,\n   ia64_cannot_store_register,"
    },
    {
      "sha": "55533371447fe64d35eb0500a9df9edeace14c17",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 16,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -440,25 +440,15 @@ linux_add_process (int pid, int attached)\n \n static CORE_ADDR get_pc (struct lwp_info *lwp);\n \n-/* Call the target arch_setup function on the current thread.  */\n-\n-static void\n-linux_arch_setup (void)\n-{\n-  the_low_target.arch_setup ();\n-}\n-\n-/* Call the target arch_setup function on THREAD.  */\n-\n-static void\n-linux_arch_setup_thread (struct thread_info *thread)\n+void\n+linux_process_target::arch_setup_thread (thread_info *thread)\n {\n   struct thread_info *saved_thread;\n \n   saved_thread = current_thread;\n   current_thread = thread;\n \n-  linux_arch_setup ();\n+  low_arch_setup ();\n \n   current_thread = saved_thread;\n }\n@@ -706,7 +696,7 @@ linux_process_target::handle_extended_wait (lwp_info **orig_event_lwp,\n       event_lwp = add_lwp (event_ptid);\n       event_thr = get_lwp_thread (event_lwp);\n       gdb_assert (current_thread == event_thr);\n-      linux_arch_setup_thread (event_thr);\n+      arch_setup_thread (event_thr);\n \n       /* Set the event status.  */\n       event_lwp->waitstatus.kind = TARGET_WAITKIND_EXECD;\n@@ -1025,7 +1015,7 @@ linux_process_target::post_create_inferior ()\n {\n   struct lwp_info *lwp = get_thread_lwp (current_thread);\n \n-  linux_arch_setup ();\n+  low_arch_setup ();\n \n   if (lwp->must_set_ptrace_flags)\n     {\n@@ -2433,7 +2423,7 @@ linux_process_target::filter_event (int lwpid, int wstat)\n \t      /* This needs to happen after we have attached to the\n \t\t inferior and it is stopped for the first time, but\n \t\t before we access any inferior registers.  */\n-\t      linux_arch_setup_thread (thread);\n+\t      arch_setup_thread (thread);\n \t    }\n \t  else\n \t    {"
    },
    {
      "sha": "26dc831f874ffe6e5be98027a7d9eda3fdb1a4ac",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -131,9 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Architecture-specific setup.  */\n-  void (*arch_setup) (void);\n-\n   const struct regs_info *(*regs_info) (void);\n \n   /* Return 0 if we can fetch/store the register, 1 if we cannot\n@@ -564,8 +561,14 @@ class linux_process_target : public process_stratum_target\n   /* Move THREAD out of the jump pad.  */\n   void move_out_of_jump_pad (thread_info *thread);\n \n+  /* Call low_arch_setup on THREAD.  */\n+  void arch_setup_thread (thread_info *thread);\n+\n protected:\n   /* The architecture-specific \"low\" methods are listed below.  */\n+\n+  /* Architecture-specific setup for the current thread.  */\n+  virtual void low_arch_setup () = 0;\n };\n \n extern linux_process_target *the_linux_target;"
    },
    {
      "sha": "5186cc5bdc28689fef857765e2cd017f5f945061",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -29,6 +29,9 @@ class m32r_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -92,8 +95,8 @@ m32r_breakpoint_at (CORE_ADDR where)\n   return 0;\n }\n \n-static void\n-m32r_arch_setup (void)\n+void\n+m32r_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_m32r;\n }\n@@ -125,7 +128,6 @@ m32r_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  m32r_arch_setup,\n   m32r_regs_info,\n   m32r_cannot_fetch_register,\n   m32r_cannot_store_register,"
    },
    {
      "sha": "667ca2ec152aa6478053692a75d982d694b3c565",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -25,6 +25,9 @@ class m68k_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -205,8 +208,8 @@ m68k_regs_info (void)\n   return &regs_info;\n }\n \n-static void\n-m68k_arch_setup (void)\n+void\n+m68k_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_m68k;\n }\n@@ -220,7 +223,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  m68k_arch_setup,\n   m68k_regs_info,\n   m68k_cannot_fetch_register,\n   m68k_cannot_store_register,"
    },
    {
      "sha": "53a9d75e9e2a4f0c19c54e294d28efc3b2fa7374",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -31,6 +31,9 @@ class mips_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -159,8 +162,8 @@ mips_read_description (void)\n   return have_dsp ? tdesc_mips_dsp_linux : tdesc_mips_linux;\n }\n \n-static void\n-mips_arch_setup (void)\n+void\n+mips_target::low_arch_setup ()\n {\n   current_process ()->tdesc = mips_read_description ();\n }\n@@ -949,7 +952,6 @@ mips_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  mips_arch_setup,\n   mips_regs_info,\n   mips_cannot_fetch_register,\n   mips_cannot_store_register,"
    },
    {
      "sha": "1b680916547d3bbdff8d792eb8b3496587375495",
      "filename": "gdbserver/linux-nios2-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-nios2-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-nios2-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-nios2-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -37,6 +37,9 @@ class nios2_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -77,10 +80,10 @@ static int nios2_regmap[] = {\n   0\n };\n \n-/* Implement the arch_setup linux_target_ops method.  */\n+/* Implement the low_arch_setup linux target ops method.  */\n \n-static void\n-nios2_arch_setup (void)\n+void\n+nios2_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_nios2_linux;\n }\n@@ -248,7 +251,6 @@ nios2_regs_info (void)\n \n struct linux_target_ops the_low_target =\n {\n-  nios2_arch_setup,\n   nios2_regs_info,\n   nios2_cannot_fetch_register,\n   nios2_cannot_store_register,"
    },
    {
      "sha": "fbd68830843f7771e410966748ab46adef92a0f2",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -50,6 +50,9 @@ class ppc_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -816,8 +819,8 @@ ppc_regs_info (void)\n   return &regs_info;\n }\n \n-static void\n-ppc_arch_setup (void)\n+void\n+ppc_target::low_arch_setup ()\n {\n   const struct target_desc *tdesc;\n   struct regset_info *regset;\n@@ -3383,7 +3386,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  ppc_arch_setup,\n   ppc_regs_info,\n   ppc_cannot_fetch_register,\n   ppc_cannot_store_register,"
    },
    {
      "sha": "4a9cefed7b457b448b9f561d228fd11b738be9d2",
      "filename": "gdbserver/linux-riscv-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-riscv-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-riscv-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-riscv-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -36,16 +36,19 @@ class riscv_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n \n static riscv_target the_riscv_target;\n \n-/* Implementation of linux_target_ops method \"arch_setup\".  */\n+/* Implementation of linux target ops method \"low_arch_setup\".  */\n \n-static void\n-riscv_arch_setup ()\n+void\n+riscv_target::low_arch_setup ()\n {\n   static const char *expedite_regs[] = { \"sp\", \"pc\", NULL };\n \n@@ -268,7 +271,6 @@ riscv_breakpoint_at (CORE_ADDR pc)\n /* RISC-V/Linux target operations.  */\n struct linux_target_ops the_low_target =\n {\n-  riscv_arch_setup,\n   riscv_regs_info,\n   NULL, /* cannot_fetch_register */\n   NULL, /* cannot_store_register */"
    },
    {
      "sha": "012e2fb88f28ec730c5b3f03dc981720a2217fda",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -57,6 +57,9 @@ class s390_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -521,8 +524,8 @@ s390_check_regset (int pid, int regset, int regsize)\n static int have_hwcap_s390_high_gprs = 0;\n static int have_hwcap_s390_vx = 0;\n \n-static void\n-s390_arch_setup (void)\n+void\n+s390_target::low_arch_setup ()\n {\n   const struct target_desc *tdesc;\n   struct regset_info *regset;\n@@ -2803,7 +2806,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  s390_arch_setup,\n   s390_regs_info,\n   s390_cannot_fetch_register,\n   s390_cannot_store_register,"
    },
    {
      "sha": "48b905c960bda561063c232ec8f62f445b02ab36",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -25,6 +25,9 @@ class sh_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -148,14 +151,13 @@ sh_regs_info (void)\n   return &regs_info;\n }\n \n-static void\n-sh_arch_setup (void)\n+void\n+sh_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_sh;\n }\n \n struct linux_target_ops the_low_target = {\n-  sh_arch_setup,\n   sh_regs_info,\n   sh_cannot_fetch_register,\n   sh_cannot_store_register,"
    },
    {
      "sha": "1ede07f44691970302b0a3fd2d43b2488c86670a",
      "filename": "gdbserver/linux-sparc-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-sparc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-sparc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sparc-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -48,6 +48,9 @@ class sparc_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -265,8 +268,8 @@ sparc_breakpoint_at (CORE_ADDR where)\n   return 0;\n }\n \n-static void\n-sparc_arch_setup (void)\n+void\n+sparc_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_sparc64;\n }\n@@ -310,7 +313,6 @@ sparc_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  sparc_arch_setup,\n   sparc_regs_info,\n   sparc_cannot_fetch_register,\n   sparc_cannot_store_register,"
    },
    {
      "sha": "47ca9883a80ba6d5a64a82da671c613a8164573c",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -44,6 +44,9 @@ class tic6x_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -326,8 +329,8 @@ static struct regset_info tic6x_regsets[] = {\n   NULL_REGSET\n };\n \n-static void\n-tic6x_arch_setup (void)\n+void\n+tic6x_target::low_arch_setup ()\n {\n   register unsigned int csr asm (\"B2\");\n   unsigned int cpuid;\n@@ -398,7 +401,6 @@ tic6x_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  tic6x_arch_setup,\n   tic6x_regs_info,\n   tic6x_cannot_fetch_register,\n   tic6x_cannot_store_register,"
    },
    {
      "sha": "293847efa24d6ec576bf3b2833b3fca9128d9fb8",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -29,6 +29,9 @@ class tile_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -159,8 +162,8 @@ tile_regs_info (void)\n   return &regs_info;\n }\n \n-static void\n-tile_arch_setup (void)\n+void\n+tile_target::low_arch_setup ()\n {\n   int pid = pid_of (current_thread);\n   unsigned int machine;\n@@ -187,7 +190,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  tile_arch_setup,\n   tile_regs_info,\n   tile_cannot_fetch_register,\n   tile_cannot_store_register,"
    },
    {
      "sha": "a15d5314b2c413ebd45e9d5fbc17593924581972",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 14,
      "deletions": 8,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -100,6 +100,13 @@ class x86_target : public linux_process_target\n {\n public:\n \n+  /* Update all the target description of all processes; a new GDB\n+     connected, and it may or not support xml target descriptions.  */\n+  void update_xmltarget ();\n+\n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -885,8 +892,8 @@ x86_linux_read_description (void)\n /* Update all the target description of all processes; a new GDB\n    connected, and it may or not support xml target descriptions.  */\n \n-static void\n-x86_linux_update_xmltarget (void)\n+void\n+x86_target::update_xmltarget ()\n {\n   struct thread_info *saved_thread = current_thread;\n \n@@ -895,13 +902,13 @@ x86_linux_update_xmltarget (void)\n      release the current regcache objects.  */\n   regcache_release ();\n \n-  for_each_process ([] (process_info *proc) {\n+  for_each_process ([this] (process_info *proc) {\n     int pid = proc->pid;\n \n     /* Look up any thread of this process.  */\n     current_thread = find_any_thread_of_pid (pid);\n \n-    the_low_target.arch_setup ();\n+    low_arch_setup ();\n   });\n \n   current_thread = saved_thread;\n@@ -942,7 +949,7 @@ x86_linux_process_qsupported (char **features, int count)\n \t  free (copy);\n \t}\n     }\n-  x86_linux_update_xmltarget ();\n+  the_x86_target.update_xmltarget ();\n }\n \n /* Common for x86/x86-64.  */\n@@ -989,8 +996,8 @@ x86_linux_regs_info (void)\n /* Initialize the target description for the architecture of the\n    inferior.  */\n \n-static void\n-x86_arch_setup (void)\n+void\n+x86_target::low_arch_setup ()\n {\n   current_process ()->tdesc = x86_linux_read_description ();\n }\n@@ -2872,7 +2879,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  x86_arch_setup,\n   x86_linux_regs_info,\n   x86_cannot_fetch_register,\n   x86_cannot_store_register,"
    },
    {
      "sha": "a7ed08541f5f45948f0293a1faecc0f8ac7044fe",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/797bcff595c5e161b333077299fcaca19bb4fd17/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=797bcff595c5e161b333077299fcaca19bb4fd17",
      "patch": "@@ -26,6 +26,9 @@ class xtensa_target : public linux_process_target\n {\n public:\n \n+protected:\n+\n+  void low_arch_setup () override;\n };\n \n /* The singleton target ops object.  */\n@@ -258,8 +261,8 @@ static struct regs_info regs_info =\n     &xtensa_regsets_info\n   };\n \n-static void\n-xtensa_arch_setup (void)\n+void\n+xtensa_target::low_arch_setup ()\n {\n   current_process ()->tdesc = tdesc_xtensa;\n }\n@@ -279,7 +282,6 @@ xtensa_regs_info (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  xtensa_arch_setup,\n   xtensa_regs_info,\n   0,\n   0,"
    }
  ]
}