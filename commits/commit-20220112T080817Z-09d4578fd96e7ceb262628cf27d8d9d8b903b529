{
  "sha": "09d4578fd96e7ceb262628cf27d8d9d8b903b529",
  "node_id": "C_kwDOANOeidoAKDA5ZDQ1NzhmZDk2ZTdjZWIyNjI2MjhjZjI3ZDhkOWQ4YjkwM2I1Mjk",
  "commit": {
    "author": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-11-17T15:20:48Z"
    },
    "committer": {
      "name": "Cl\u00e9ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2022-01-12T08:08:17Z"
    },
    "message": "gas: add visibility support using GNU syntax on XCOFF\n\nIn order to ease port of GNU assembly code and especially ld testsuite,\nthis patch allows XCOFF to accept the usual GNU syntax for visibility.\n\nPR 22085\n\ngas/ChangeLog:\n\n\t* config/tc-ppc.c (ppc_GNU_visibility): New function.\n\t* testsuite/gas/ppc/aix.exp: Add new tests.\n\t* testsuite/gas/ppc/xcoff-visibility-2-32.d: New test.\n\t* testsuite/gas/ppc/xcoff-visibility-2-64.d: New test.\n\t* testsuite/gas/ppc/xcoff-visibility-2.s: New test.",
    "tree": {
      "sha": "9db674614027d6776d73e05bd437048847c786a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9db674614027d6776d73e05bd437048847c786a7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/09d4578fd96e7ceb262628cf27d8d9d8b903b529",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09d4578fd96e7ceb262628cf27d8d9d8b903b529",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/09d4578fd96e7ceb262628cf27d8d9d8b903b529",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09d4578fd96e7ceb262628cf27d8d9d8b903b529/comments",
  "author": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "add588a8ef53a5f77f2abda08a5de643923c4cce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/add588a8ef53a5f77f2abda08a5de643923c4cce",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/add588a8ef53a5f77f2abda08a5de643923c4cce"
    }
  ],
  "stats": {
    "total": 85,
    "additions": 85,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ac10772a61ed0c8e87ab5d028eb6c180a9d29062",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=09d4578fd96e7ceb262628cf27d8d9d8b903b529",
      "patch": "@@ -121,6 +121,7 @@ static void ppc_toc (int);\n static void ppc_xcoff_cons (int);\n static void ppc_vbyte (int);\n static void ppc_weak (int);\n+static void ppc_GNU_visibility (int);\n #endif\n \n #ifdef OBJ_ELF\n@@ -246,6 +247,11 @@ const pseudo_typeS md_pseudo_table[] =\n   { \"short\",\tppc_xcoff_cons,\t1 },\n   { \"vbyte\",    ppc_vbyte,\t0 },\n   { \"weak\",     ppc_weak,\t0 },\n+\n+  /* Enable GNU syntax for symbol visibility.  */\n+  {\"internal\",  ppc_GNU_visibility, SYM_V_INTERNAL},\n+  {\"hidden\",    ppc_GNU_visibility, SYM_V_HIDDEN},\n+  {\"protected\", ppc_GNU_visibility, SYM_V_PROTECTED},\n #endif\n \n #ifdef OBJ_ELF\n@@ -4321,6 +4327,38 @@ ppc_xcoff_get_visibility (void) {\n   return 0;\n }\n \n+/* Retrieve visiblity using GNU syntax.  */\n+static void ppc_GNU_visibility (int visibility) {\n+  int c;\n+  char *name;\n+  symbolS *symbolP;\n+  coff_symbol_type *coffsym;\n+\n+  do\n+    {\n+      if ((name = read_symbol_name ()) == NULL)\n+\tbreak;\n+      symbolP = symbol_find_or_make (name);\n+      coffsym = coffsymbol (symbol_get_bfdsym (symbolP));\n+\n+      coffsym->native->u.syment.n_type &= ~SYM_V_MASK;\n+      coffsym->native->u.syment.n_type |= visibility;\n+\n+      c = *input_line_pointer;\n+      if (c == ',')\n+\t{\n+\t  input_line_pointer ++;\n+\n+\t  SKIP_WHITESPACE ();\n+\n+\t  if (*input_line_pointer == '\\n')\n+\t    c = '\\n';\n+\t}\n+    }\n+  while (c == ',');\n+\n+  demand_empty_rest_of_line ();\n+}\n \n /* The .comm and .lcomm pseudo-ops for XCOFF.  XCOFF puts common\n    symbols in the .bss segment as though they were local common"
    },
    {
      "sha": "b2e8400121134af0d1bd966bd62e314d8a496301",
      "filename": "gas/testsuite/gas/ppc/aix.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/aix.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/aix.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/aix.exp?ref=09d4578fd96e7ceb262628cf27d8d9d8b903b529",
      "patch": "@@ -90,4 +90,6 @@ if { [istarget \"powerpc*-*-aix*\"] || [istarget \"rs6000-*-aix*\"] } then {\n \n     run_dump_test \"xcoff-visibility-1-32\"\n     run_dump_test \"xcoff-visibility-1-64\"\n+    run_dump_test \"xcoff-visibility-2-32\"\n+    run_dump_test \"xcoff-visibility-2-64\"\n }"
    },
    {
      "sha": "ec2befbd85edf51c0fdc86a8303edff1c9b80dc3",
      "filename": "gas/testsuite/gas/ppc/xcoff-visibility-2-32.d",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/xcoff-visibility-2-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/xcoff-visibility-2-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-visibility-2-32.d?ref=09d4578fd96e7ceb262628cf27d8d9d8b903b529",
      "patch": "@@ -0,0 +1,18 @@\n+#as: -a32\n+#source: xcoff-visibility-2.s\n+#objdump: -t\n+#name: XCOFF Visibility 2 (32 bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\n+.*\n+\\[  2\\].*\\(ty 1000\\).*internal\n+.*\n+\\[  4\\].*\\(ty 2000\\).*hidden\n+.*\n+\\[  6\\].*\\(ty 3000\\).*protected\n+.*\n+\\[  8\\].*\\(ty 1000\\).*dual\n+.*"
    },
    {
      "sha": "48d50a54d215cc84654a53ac1ca63d9c88042c6f",
      "filename": "gas/testsuite/gas/ppc/xcoff-visibility-2-64.d",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/xcoff-visibility-2-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/xcoff-visibility-2-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-visibility-2-64.d?ref=09d4578fd96e7ceb262628cf27d8d9d8b903b529",
      "patch": "@@ -0,0 +1,18 @@\n+#as: -a64\n+#source: xcoff-visibility-2.s\n+#objdump: -t\n+#name: XCOFF Visibility 2 (64 bit)\n+\n+.*\n+\n+SYMBOL TABLE:\n+.*\n+.*\n+\\[  2\\].*\\(ty 1000\\).*internal\n+.*\n+\\[  4\\].*\\(ty 2000\\).*hidden\n+.*\n+\\[  6\\].*\\(ty 3000\\).*protected\n+.*\n+\\[  8\\].*\\(ty 1000\\).*dual\n+.*"
    },
    {
      "sha": "c5f0f7fce988e0b4a94c0e26557fb1064fa02b7e",
      "filename": "gas/testsuite/gas/ppc/xcoff-visibility-2.s",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/xcoff-visibility-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09d4578fd96e7ceb262628cf27d8d9d8b903b529/gas/testsuite/gas/ppc/xcoff-visibility-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/xcoff-visibility-2.s?ref=09d4578fd96e7ceb262628cf27d8d9d8b903b529",
      "patch": "@@ -0,0 +1,9 @@\n+# Ensure that GNU syntax is accepted even for XCOFF.\n+  .internal internal\n+  .hidden hidden\n+  .protected protected\n+\n+# Ensure that only the last visibility is taken into\n+# account, when several are provided.\n+  .protected dual\n+  .internal dual"
    }
  ]
}