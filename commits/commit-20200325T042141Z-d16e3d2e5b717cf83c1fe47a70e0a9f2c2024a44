{
  "sha": "d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDE2ZTNkMmU1YjcxN2NmODNjMWZlNDdhNzBlMGE5ZjJjMjAyNGE0NA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-24T00:12:45Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-25T04:21:41Z"
    },
    "message": "PR25662, invalid sh_offset for first section in segment with phdrs\n\n\tPR 25662\n\t* elf.c (assign_file_positions_for_load_sections): Adjust offset\n\tfor SHT_NOBITS section if first in segment.",
    "tree": {
      "sha": "c47ce831be747a5f74e963ef3ac523514576b0fe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c47ce831be747a5f74e963ef3ac523514576b0fe"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0d4a4bc56fc947565ef0dd4b440a157e7d592b09",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d4a4bc56fc947565ef0dd4b440a157e7d592b09",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0d4a4bc56fc947565ef0dd4b440a157e7d592b09"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 25,
    "deletions": 3
  },
  "files": [
    {
      "sha": "b4160c943a5b1a1d836edf7146b7bda1b04f9c38",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25662\n+\t* elf.c (assign_file_positions_for_load_sections): Adjust offset\n+\tfor SHT_NOBITS section if first in segment.\n+\n 2020-03-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR binutils/25708"
    },
    {
      "sha": "86dadea05caff48339c36872f1bff867f711fd17",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 19,
      "deletions": 3,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=d16e3d2e5b717cf83c1fe47a70e0a9f2c2024a44",
      "patch": "@@ -5833,10 +5833,11 @@ assign_file_positions_for_load_sections (bfd *abfd,\n \t\t}\n \t      p->p_memsz += adjust;\n \n-\t      if (this_hdr->sh_type != SHT_NOBITS)\n+\t      if (p->p_type == PT_LOAD)\n \t\t{\n-\t\t  if (p->p_type == PT_LOAD)\n+\t\t  if (this_hdr->sh_type != SHT_NOBITS)\n \t\t    {\n+\t\t      off_adjust = 0;\n \t\t      if (p->p_filesz + adjust < p->p_memsz)\n \t\t\t{\n \t\t\t  /* We have a PROGBITS section following NOBITS ones.\n@@ -5846,10 +5847,25 @@ assign_file_positions_for_load_sections (bfd *abfd,\n \t\t\t  if (!write_zeros (abfd, off, adjust))\n \t\t\t    return FALSE;\n \t\t\t}\n+\t\t    }\n+\t\t  /* We only adjust sh_offset in SHT_NOBITS sections\n+\t\t     as would seem proper for their address when the\n+\t\t     section is first in the segment.  sh_offset\n+\t\t     doesn't really have any significance for\n+\t\t     SHT_NOBITS anyway, apart from a notional position\n+\t\t     relative to other sections.  Historically we\n+\t\t     didn't bother with adjusting sh_offset and some\n+\t\t     programs depend on it not being adjusted.  See\n+\t\t     pr12921 and pr25662.  */\n+\t\t  if (this_hdr->sh_type != SHT_NOBITS || i == 0)\n+\t\t    {\n \t\t      off += adjust;\n+\t\t      if (this_hdr->sh_type == SHT_NOBITS)\n+\t\t\toff_adjust += adjust;\n \t\t    }\n-\t\t  p->p_filesz += adjust;\n \t\t}\n+\t      if (this_hdr->sh_type != SHT_NOBITS)\n+\t\tp->p_filesz += adjust;\n \t    }\n \n \t  if (p->p_type == PT_NOTE && bfd_get_format (abfd) == bfd_core)"
    }
  ]
}