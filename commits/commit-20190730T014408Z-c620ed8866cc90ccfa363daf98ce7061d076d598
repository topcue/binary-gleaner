{
  "sha": "c620ed8866cc90ccfa363daf98ce7061d076d598",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzYyMGVkODg2NmNjOTBjY2ZhMzYzZGFmOThjZTcwNjFkMDc2ZDU5OA==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-06-25T20:45:41Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-07-30T01:44:08Z"
    },
    "message": "Add Objfile.lookup_{global,static}_symbol functions\n\nThis is essentially the inverse of Symbol.objfile. This allows\nhandling different symbols with the same name (but from different\nobjfiles) and can also be faster if the objfile is known.\n\ngdb/ChangeLog:\n\n2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n\n\t* NEWS: Mention new functions Objfile.lookup_{global,static}_symbol.\n\t* python/py-objfile.c (objfpy_lookup_global_symbol): New function.\n\t(objfpy_lookup_static_symbol): New function.\n\t(objfile_object_methods): Add new functions.\n\ngdb/doc/ChangeLog:\n\n2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n\n\t* python.texi (Objfiles In Python): Document new functions\n\t  Objfile.lookup_{global,static}_symbol.\n\ngdb/testsuite/ChangeLog:\n\n2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n\n\t* gdb.python/py-objfile.c: Add global and static vars.\n\t* gdb.python/py-objfile.exp: Test new functions Objfile.\n\t  lookup_global_symbol and lookup_static_symbol.",
    "tree": {
      "sha": "b66b50a551c9a7b2ef9b8e14469000b858ca5783",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b66b50a551c9a7b2ef9b8e14469000b858ca5783"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c620ed8866cc90ccfa363daf98ce7061d076d598",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c620ed8866cc90ccfa363daf98ce7061d076d598",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c620ed8866cc90ccfa363daf98ce7061d076d598",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c620ed8866cc90ccfa363daf98ce7061d076d598/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e48de49be52cb6e0fe3edbcdc3e63bbc2465d930",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e48de49be52cb6e0fe3edbcdc3e63bbc2465d930",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e48de49be52cb6e0fe3edbcdc3e63bbc2465d930"
    }
  ],
  "stats": {
    "total": 133,
    "additions": 133,
    "deletions": 0
  },
  "files": [
    {
      "sha": "59fb8002e81f7c8c1094f145239324cf3cbf6968",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* NEWS: Mention new functions Objfile.lookup_{global,static}_symbol.\n+\t* python/py-objfile.c (objfpy_lookup_global_symbol): New function.\n+\t(objfpy_lookup_static_symbol): New function.\n+\t(objfile_object_methods): Add new functions.\n+\n 2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* NEWS: Mention 'set|show print frame-info'.  Mention new"
    },
    {
      "sha": "4e821eab4c70f01e70096717b130c4ef8f9391e2",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -41,6 +41,9 @@\n      there are no filters, or when the 'backtrace' '-no-filters' option\n      is given.\n \n+  ** gdb.Objfile has new methods 'lookup_global_symbol' and\n+     'lookup_static_symbol' to lookup a symbol from this objfile only.\n+\n * New commands\n \n | [COMMAND] | SHELL_COMMAND"
    },
    {
      "sha": "9b91b998bdda6a161c04b06f196585272dbed64a",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* python.texi (Objfiles In Python): Document new functions\n+\t  Objfile.lookup_{global,static}_symbol.\n+\n 2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.texinfo (Backtrace): Document the new '-frame-info'"
    },
    {
      "sha": "bbba519ffc08effef851ff91ad00659a4592271f",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -4441,6 +4441,23 @@ searches then this function can be used to add a debug info file\n from a different place.\n @end defun\n \n+@defun Objfile.lookup_global_symbol (name @r{[}, domain@r{]})\n+Search for a global symbol named @var{name} in this objfile.  Optionally, the\n+search scope can be restricted with the @var{domain} argument.\n+The @var{domain} argument must be a domain constant defined in the @code{gdb}\n+module and described in @ref{Symbols In Python}.  This function is similar to\n+@code{gdb.lookup_global_symbol}, except that the search is limited to this\n+objfile.\n+\n+The result is a @code{gdb.Symbol} object or @code{None} if the symbol\n+is not found.\n+@end defun\n+\n+@defun Objfile.lookup_static_symbol (name @r{[}, domain@r{]})\n+Like @code{Objfile.lookup_global_symbol}, but searches for a global\n+symbol with static linkage named @var{name} in this objfile.\n+@end defun\n+\n @node Frames In Python\n @subsubsection Accessing inferior stack frames from Python\n "
    },
    {
      "sha": "2c548450b4d0825e33d8a0354a4fac9d33aa9b48",
      "filename": "gdb/python/py-objfile.c",
      "status": "modified",
      "additions": 78,
      "deletions": 0,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/python/py-objfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/python/py-objfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-objfile.c?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -434,6 +434,74 @@ objfpy_add_separate_debug_file (PyObject *self, PyObject *args, PyObject *kw)\n   Py_RETURN_NONE;\n }\n \n+/* Implementation of\n+  gdb.Objfile.lookup_global_symbol (self, string [, domain]) -> gdb.Symbol.  */\n+\n+static PyObject *\n+objfpy_lookup_global_symbol (PyObject *self, PyObject *args, PyObject *kw)\n+{\n+  static const char *keywords[] = { \"name\", \"domain\", NULL };\n+  objfile_object *obj = (objfile_object *) self;\n+  const char *symbol_name;\n+  int domain = VAR_DOMAIN;\n+\n+  OBJFPY_REQUIRE_VALID (obj);\n+\n+  if (!gdb_PyArg_ParseTupleAndKeywords (args, kw, \"s|i\", keywords, &symbol_name,\n+\t\t\t\t\t&domain))\n+    return nullptr;\n+\n+  try\n+    {\n+      struct symbol *sym = lookup_global_symbol_from_objfile\n+        (obj->objfile, GLOBAL_BLOCK, symbol_name, (domain_enum) domain).symbol;\n+      if (sym == nullptr)\n+\tPy_RETURN_NONE;\n+\n+      return symbol_to_symbol_object (sym);\n+    }\n+  catch (const gdb_exception &except)\n+    {\n+      GDB_PY_HANDLE_EXCEPTION (except);\n+    }\n+\n+  Py_RETURN_NONE;\n+}\n+\n+/* Implementation of\n+  gdb.Objfile.lookup_static_symbol (self, string [, domain]) -> gdb.Symbol.  */\n+\n+static PyObject *\n+objfpy_lookup_static_symbol (PyObject *self, PyObject *args, PyObject *kw)\n+{\n+  static const char *keywords[] = { \"name\", \"domain\", NULL };\n+  objfile_object *obj = (objfile_object *) self;\n+  const char *symbol_name;\n+  int domain = VAR_DOMAIN;\n+\n+  OBJFPY_REQUIRE_VALID (obj);\n+\n+  if (!gdb_PyArg_ParseTupleAndKeywords (args, kw, \"s|i\", keywords, &symbol_name,\n+\t\t\t\t\t&domain))\n+    return nullptr;\n+\n+  try\n+    {\n+      struct symbol *sym = lookup_global_symbol_from_objfile\n+        (obj->objfile, STATIC_BLOCK, symbol_name, (domain_enum) domain).symbol;\n+      if (sym == nullptr)\n+\tPy_RETURN_NONE;\n+\n+      return symbol_to_symbol_object (sym);\n+    }\n+  catch (const gdb_exception &except)\n+    {\n+      GDB_PY_HANDLE_EXCEPTION (except);\n+    }\n+\n+  Py_RETURN_NONE;\n+}\n+\n /* Implement repr() for gdb.Objfile.  */\n \n static PyObject *\n@@ -652,6 +720,16 @@ Return true if this object file is valid, false if not.\" },\n     \"add_separate_debug_file (file_name).\\n\\\n Add FILE_NAME to the list of files containing debug info for the objfile.\" },\n \n+  { \"lookup_global_symbol\", (PyCFunction) objfpy_lookup_global_symbol,\n+    METH_VARARGS | METH_KEYWORDS,\n+    \"lookup_global_symbol (name [, domain]).\\n\\\n+Look up a global symbol in this objfile and return it.\" },\n+\n+  { \"lookup_static_symbol\", (PyCFunction) objfpy_lookup_static_symbol,\n+    METH_VARARGS | METH_KEYWORDS,\n+    \"lookup_static_symbol (name [, domain]).\\n\\\n+Look up a static-linkage global symbol in this objfile and return it.\" },\n+\n   { NULL }\n };\n "
    },
    {
      "sha": "b2551063fe8f90a63cf2bdc08776a264d3a5d857",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* gdb.python/py-objfile.c: Add global and static vars.\n+\t* gdb.python/py-objfile.exp: Test new functions Objfile.\n+\t  lookup_global_symbol and lookup_static_symbol.\n+\n 2019-07-29  Tom Tromey  <tom@tromey.com>\n \n \t* lib/tuiterm.exp (Term::_csi_@): New proc."
    },
    {
      "sha": "6d751bddae38aebf2c929d29cd522d38c82c151a",
      "filename": "gdb/testsuite/gdb.python/py-objfile.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/testsuite/gdb.python/py-objfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/testsuite/gdb.python/py-objfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-objfile.c?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -15,6 +15,9 @@\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n+int global_var = 42;\n+static int static_var = 50;\n+\n int\n main ()\n {"
    },
    {
      "sha": "261f6054456404f8c736ad54a85a17e8bc28bc6c",
      "filename": "gdb/testsuite/gdb.python/py-objfile.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/testsuite/gdb.python/py-objfile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c620ed8866cc90ccfa363daf98ce7061d076d598/gdb/testsuite/gdb.python/py-objfile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-objfile.exp?ref=c620ed8866cc90ccfa363daf98ce7061d076d598",
      "patch": "@@ -55,6 +55,20 @@ gdb_test \"python print (gdb.lookup_objfile (\\\"${testfile}\\\").filename)\" \\\n gdb_test \"python print (gdb.lookup_objfile (\\\"junk\\\"))\" \\\n     \"Objfile not found\\\\.\\r\\n${python_error_text}\"\n \n+gdb_test \"python print (gdb.lookup_objfile (\\\"${testfile}\\\").lookup_global_symbol (\\\"global_var\\\").name)\" \\\n+    \"global_var\" \"lookup_global_symbol finds a valid symbol\"\n+gdb_test \"python print (gdb.lookup_objfile (\\\"${testfile}\\\").lookup_global_symbol (\\\"static_var\\\") is None)\" \\\n+    \"True\" \"lookup_global_symbol does not find static symbol\"\n+gdb_test \"python print (gdb.lookup_objfile (\\\"${testfile}\\\").lookup_global_symbol (\\\"stdout\\\"))\" \\\n+    \"None\" \"lookup_global_symbol doesn't find symbol in other objfile\"\n+\n+gdb_test \"python print (gdb.lookup_objfile (\\\"${testfile}\\\").lookup_static_symbol (\\\"static_var\\\").name)\" \\\n+    \"static_var\" \"lookup_static_symbol finds a valid symbol\"\n+gdb_test \"python print (gdb.lookup_objfile (\\\"${testfile}\\\").lookup_static_symbol (\\\"global_var\\\") is None)\" \\\n+    \"True\" \"lookup_static_symbol does not find global symbol\"\n+gdb_test \"python print (gdb.lookup_objfile (\\\"${testfile}\\\").lookup_static_symbol (\\\"nonexistant\\\"))\" \\\n+    \"None\" \"lookup_static_symbol can handle nonexistant symbol\"\n+\n set binfile_build_id [get_build_id $binfile]\n if [string compare $binfile_build_id \"\"] {\n     verbose -log \"binfile_build_id = $binfile_build_id\""
    }
  ]
}