{
  "sha": "dfde93ab8ccdea59f667204bb93056c95a83dfda",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGZkZTkzYWI4Y2NkZWE1OWY2NjcyMDRiYjkzMDU2Yzk1YTgzZGZkYQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-15T12:36:21Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-16T00:33:34Z"
    },
    "message": "genscripts comment tidy\n\nSome of the comments in this file are ancient and no longer reflect\nreality.  This patch removes those comments, and also the description\nof ld options emitted to script files.  While describing what an\noption does in the script file might help reinforce what the option\ndoes, it's unnecessary and makes for overlong lines.  Also, some of\nthe descriptions did not mention all the options.\n\n\t* genscripts.sh: Correct comments.  Remove outdated comment block\n\tsaying \"Generate 5 or 6 script files..\".  Remove description of\n\tld options from comment emitted to script files, and order options\n\tas per comment block in genscripts.sh saying which scripts are\n\tgenerated.",
    "tree": {
      "sha": "8db5314abfd82794b2e6583c634fece62398cabe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8db5314abfd82794b2e6583c634fece62398cabe"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dfde93ab8ccdea59f667204bb93056c95a83dfda",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dfde93ab8ccdea59f667204bb93056c95a83dfda",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dfde93ab8ccdea59f667204bb93056c95a83dfda",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dfde93ab8ccdea59f667204bb93056c95a83dfda/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8ef6decbc1f3a5965fff70289e2bdccae3f9aa3c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ef6decbc1f3a5965fff70289e2bdccae3f9aa3c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8ef6decbc1f3a5965fff70289e2bdccae3f9aa3c"
    }
  ],
  "stats": {
    "total": 103,
    "additions": 45,
    "deletions": 58
  },
  "files": [
    {
      "sha": "5553095352dfcfbe96b7bedec724d460e877b03c",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dfde93ab8ccdea59f667204bb93056c95a83dfda/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dfde93ab8ccdea59f667204bb93056c95a83dfda/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=dfde93ab8ccdea59f667204bb93056c95a83dfda",
      "patch": "@@ -1,3 +1,11 @@\n+2019-10-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* genscripts.sh: Correct comments.  Remove outdated comment block\n+\tsaying \"Generate 5 or 6 script files..\".  Remove description of\n+\tld options from comment emitted to script files, and order options\n+\tas per comment block in genscripts.sh saying which scripts are\n+\tgenerated.\n+\n 2019-10-14  Alan Modra  <amodra@gmail.com>\n \n \t* ldctor.h (struct set_element): Make next field a union, adding"
    },
    {
      "sha": "3853f9b859d6465a1f9eab00d8ba147af3fb1397",
      "filename": "ld/genscripts.sh",
      "status": "modified",
      "additions": 37,
      "deletions": 58,
      "changes": 95,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dfde93ab8ccdea59f667204bb93056c95a83dfda/ld/genscripts.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dfde93ab8ccdea59f667204bb93056c95a83dfda/ld/genscripts.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/genscripts.sh?ref=dfde93ab8ccdea59f667204bb93056c95a83dfda",
      "patch": "@@ -63,7 +63,7 @@\n # depending on platform specific settings linker scripts with the\n # following suffixes might be generated as well:\n #\n-# xdwe:   -pie    -z combreloc -z separate-code          -z now\n+# xdwe:   -pie    -z combreloc -z separate-code -z relro -z now\n # xdw:    -pie    -z combreloc                  -z relro -z now\n # xdceo:  -pie    -z combreloc -z separate-code -z relro\n # xdce:   -pie    -z combreloc -z separate-code\n@@ -74,7 +74,7 @@\n # xdo:    -pie                                  -z relro\n # xd:     -pie\n #\n-# xswe:   -shared -z combreloc -z separate-code          -z now\n+# xswe:   -shared -z combreloc -z separate-code -z relro -z now\n # xsw:    -shared -z combreloc                  -z relro -z now\n # xsceo:  -shared -z combreloc -z separate-code -z relro\n # xsce:   -shared -z combreloc -z separate-code\n@@ -85,7 +85,7 @@\n # xso:    -shared                               -z relro\n # xs:     -shared\n #\n-# xwe:            -z combreloc -z separate-code          -z now\n+# xwe:            -z combreloc -z separate-code -z relro -z now\n # xw:             -z combreloc                  -z relro -z now\n # xceo:           -z combreloc -z separate-code -z relro\n # xce:            -z combreloc -z separate-code\n@@ -286,27 +286,6 @@ if [ \"x$1\" = \"x$EMULATION_NAME\" ]; then\n     echo \"set libpath \\\"${LIB_PATH}\\\"\" | sed -e 's/:/ /g' > tmpdir/libpath.exp\n fi\n \n-# Generate 5 or 6 script files from a master script template in\n-# ${srcdir}/scripttempl/${SCRIPT_NAME}.sh.  Which one of the 5 or 6\n-# script files is actually used depends on command line options given\n-# to ld.  (SCRIPT_NAME was set in the emulparams_file.)\n-#\n-# A .x script file is the default script.\n-# A .xr script is for linking without relocation (-r flag).\n-# A .xu script is like .xr, but *do* create constructors (-Ur flag).\n-# A .xn script is for linking with -n flag (mix text and data on same page).\n-# A .xbn script is for linking with -N flag (mix text and data on same page).\n-# A .xs script is for generating a shared library with the --shared\n-#   flag; it is only generated if $GENERATE_SHLIB_SCRIPT is set by the\n-#   emulation parameters.\n-# A .xc script is for linking with -z combreloc; it is only generated if\n-#   $GENERATE_COMBRELOC_SCRIPT is set by the emulation parameters or\n-#   $SCRIPT_NAME is \"elf\".\n-# A .xsc script is for linking with --shared -z combreloc; it is generated\n-#   if $GENERATE_COMBRELOC_SCRIPT is set by the emulation parameters or\n-#   $SCRIPT_NAME is \"elf\" and $GENERATE_SHLIB_SCRIPT is set by the emulation\n-#   parameters too.\n-\n if [ \"x$SCRIPT_NAME\" = \"xelf\" ]; then\n   GENERATE_COMBRELOC_SCRIPT=yes\n fi\n@@ -325,15 +304,15 @@ DATA_ALIGNMENT_u=\"${DATA_ALIGNMENT_u-${DATA_ALIGNMENT_r}}\"\n LD_FLAG=r\n DATA_ALIGNMENT=${DATA_ALIGNMENT_r}\n DEFAULT_DATA_ALIGNMENT=\"ALIGN(${SEGMENT_SIZE})\"\n-( echo \"/* Script for ld -r: link without relocation */\"\n+( echo \"/* Script for -r */\"\n   source_sh ${CUSTOMIZER_SCRIPT}\n   source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xr\n \n LD_FLAG=u\n DATA_ALIGNMENT=${DATA_ALIGNMENT_u}\n CONSTRUCTING=\" \"\n-( echo \"/* Script for ld -Ur: link w/out relocation, do create constructors */\"\n+( echo \"/* Script for -Ur */\"\n   source_sh ${CUSTOMIZER_SCRIPT}\n   source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xu\n@@ -347,35 +326,35 @@ LD_FLAG=\n ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.x\n \n LD_FLAG=textonly\n-( echo \"/* Script for -z separate-code: generate normal executables with separate code segment */\"\n+( echo \"/* Script for -z separate-code */\"\n   source_sh ${CUSTOMIZER_SCRIPT}\n   source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xe\n \n if test -n \"$GENERATE_RELRO_SCRIPT\"; then\n     LD_FLAG=\n     RELRO=\" \"\n-    ( echo \"/* Script for -z relo: generate normal executables with separate code segment */\"\n+    ( echo \"/* Script for -z relro */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xo\n     LD_FLAG=textonly\n-    ( echo \"/* Script for -z separate-code -z relo: generate normal executables with separate code segment */\"\n+    ( echo \"/* Script for -z separate-code -z relro */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xeo\n     unset RELRO\n fi\n LD_FLAG=n\n DATA_ALIGNMENT=${DATA_ALIGNMENT_n}\n-( echo \"/* Script for -n: mix text and data on same page */\"\n+( echo \"/* Script for -n */\"\n   source_sh ${CUSTOMIZER_SCRIPT}\n   source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xn\n \n LD_FLAG=N\n DATA_ALIGNMENT=${DATA_ALIGNMENT_N}\n-( echo \"/* Script for -N: mix text and data on same page; don't align data */\"\n+( echo \"/* Script for -N */\"\n   source_sh ${CUSTOMIZER_SCRIPT}\n   source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xbn\n@@ -384,29 +363,29 @@ if test -n \"$GENERATE_COMBRELOC_SCRIPT\"; then\n   DATA_ALIGNMENT=${DATA_ALIGNMENT_c-${DATA_ALIGNMENT_}}\n   LD_FLAG=c\n   COMBRELOC=ldscripts/${EMULATION_NAME}.xc.tmp\n-  ( echo \"/* Script for -z combreloc: combine and sort reloc sections */\"\n+  ( echo \"/* Script for -z combreloc */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xc\n   rm -f ${COMBRELOC}\n   LD_FLAG=ctextonly\n   COMBRELOC=ldscripts/${EMULATION_NAME}.xce.tmp\n-  ( echo \"/* Script for -z combreloc -z separate-code: combine and sort reloc sections with separate code segment */\"\n+  ( echo \"/* Script for -z combreloc -z separate-code */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xce\n   rm -f ${COMBRELOC}\n   RELRO_NOW=\" \"\n   LD_FLAG=w\n   COMBRELOC=ldscripts/${EMULATION_NAME}.xw.tmp\n-  ( echo \"/* Script for -z combreloc -z now -z relro: combine and sort reloc sections */\"\n+  ( echo \"/* Script for -z combreloc -z relro -z now */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xw\n   rm -f ${COMBRELOC}\n   LD_FLAG=wtextonly\n   COMBRELOC=ldscripts/${EMULATION_NAME}.xwe.tmp\n-  ( echo \"/* Script for -z combreloc -z now -z relro -z separate-code: combine and sort reloc sections with separate code segment */\"\n+  ( echo \"/* Script for -z combreloc -z separate-code -z relro -z now */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xwe\n@@ -417,14 +396,14 @@ if test -n \"$GENERATE_COMBRELOC_SCRIPT\"; then\n       LD_FLAG=c\n       RELRO=\" \"\n       COMBRELOC=ldscripts/${EMULATION_NAME}.xco.tmp\n-      ( echo \"/* Script for -z combreloc -z relro: combine and sort reloc sections */\"\n+      ( echo \"/* Script for -z combreloc -z relro */\"\n \tsource_sh ${CUSTOMIZER_SCRIPT}\n \tsource_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n       ) | sed -e '/^ *$/d;s/[    ]*$//' > ldscripts/${EMULATION_NAME}.xco\n       rm -f ${COMBRELOC}\n       LD_FLAG=ctextonly\n       COMBRELOC=ldscripts/${EMULATION_NAME}.xceo.tmp\n-      ( echo \"/* Script for -z combreloc -z separate-code -z relro: combine and sort reloc sections */\"\n+      ( echo \"/* Script for -z combreloc -z separate-code -z relro */\"\n \tsource_sh ${CUSTOMIZER_SCRIPT}\n \tsource_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n       ) | sed -e '/^ *$/d;s/[    ]*$//' > ldscripts/${EMULATION_NAME}.xceo\n@@ -438,25 +417,25 @@ if test -n \"$GENERATE_SHLIB_SCRIPT\"; then\n   DATA_ALIGNMENT=${DATA_ALIGNMENT_s-${DATA_ALIGNMENT_}}\n   CREATE_SHLIB=\" \"\n   LD_FLAG=shared\n-  ( echo \"/* Script for ld --shared: link shared library */\"\n+  ( echo \"/* Script for -shared */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xs\n   LD_FLAG=sharedtextonly\n-  ( echo \"/* Script for ld --shared -z separate-code: link shared library with separate code segment */\"\n+  ( echo \"/* Script for -shared -z separate-code */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xse\n \n   if test -n \"$GENERATE_RELRO_SCRIPT\"; then\n       RELRO=\" \"\n       LD_FLAG=shared\n-      ( echo \"/* Script for ld --shared -z relro: link shared library */\"\n+      ( echo \"/* Script for -shared -z relro */\"\n \tsource_sh ${CUSTOMIZER_SCRIPT}\n \tsource_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n       ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xso\n       LD_FLAG=sharedtextonly\n-      ( echo \"/* Script for ld --shared -z relro -z separate-code: link shared library with separate code segment */\"\n+      ( echo \"/* Script for -shared -z separate-code -z relro */\"\n \tsource_sh ${CUSTOMIZER_SCRIPT}\n \tsource_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n       ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xseo\n@@ -466,29 +445,29 @@ if test -n \"$GENERATE_SHLIB_SCRIPT\"; then\n     DATA_ALIGNMENT=${DATA_ALIGNMENT_sc-${DATA_ALIGNMENT}}\n     LD_FLAG=cshared\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xsc.tmp\n-    ( echo \"/* Script for --shared -z combreloc: shared library, combine & sort relocs */\"\n+    ( echo \"/* Script for -shared -z combreloc */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xsc\n     rm -f ${COMBRELOC}\n     LD_FLAG=csharedtextonly\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xsce.tmp\n-    ( echo \"/* Script for --shared -z combreloc -z separate-code: shared library, combine & sort relocs with separate code segment */\"\n+    ( echo \"/* Script for -shared -z combreloc -z separate-code */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xsce\n     rm -f ${COMBRELOC}\n     RELRO_NOW=\" \"\n     LD_FLAG=wshared\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xsw.tmp\n-    ( echo \"/* Script for --shared -z combreloc -z now -z relro: shared library, combine & sort relocs */\"\n+    ( echo \"/* Script for -shared -z combreloc -z relro -z now */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xsw\n     rm -f ${COMBRELOC}\n     LD_FLAG=wsharedtextonly\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xswe.tmp\n-    ( echo \"/* Script for --shared -z combreloc -z now -z relro -z separate-code: shared library, combine & sort relocs with separate code segment */\"\n+    ( echo \"/* Script for -shared -z combreloc -z separate-code -z relro -z now */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xswe\n@@ -499,14 +478,14 @@ if test -n \"$GENERATE_SHLIB_SCRIPT\"; then\n \tLD_FLAG=wshared\n \tRELRO=\" \"\n \tCOMBRELOC=ldscripts/${EMULATION_NAME}.xsco.tmp\n-\t( echo \"/* Script for --shared -z combreloc -z relro: shared library, combine & sort relocs with separate code segment */\"\n+\t( echo \"/* Script for -shared -z combreloc -z relro */\"\n \t  source_sh ${CUSTOMIZER_SCRIPT}\n \t  source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n \t) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xsco\n \trm -f ${COMBRELOC}\n \tLD_FLAG=wsharedtextonly\n \tCOMBRELOC=ldscripts/${EMULATION_NAME}.xsceo.tmp\n-\t( echo \"/* Script for --shared -z combreloc -z relro -z separate-code: shared library, combine & sort relocs with separate code segment */\"\n+\t( echo \"/* Script for -shared -z combreloc -z separate-code -z relro */\"\n \t  source_sh ${CUSTOMIZER_SCRIPT}\n \t  source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n \t) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xsceo\n@@ -522,24 +501,24 @@ if test -n \"$GENERATE_PIE_SCRIPT\"; then\n   DATA_ALIGNMENT=${DATA_ALIGNMENT_s-${DATA_ALIGNMENT_}}\n   CREATE_PIE=\" \"\n   LD_FLAG=pie\n-  ( echo \"/* Script for ld -pie: link position independent executable */\"\n+  ( echo \"/* Script for -pie */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xd\n   LD_FLAG=pietextonly\n-  ( echo \"/* Script for ld -pie -z separate-code: link position independent executable with separate code segment */\"\n+  ( echo \"/* Script for -pie -z separate-code */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xde\n   if test -n \"$GENERATE_RELRO_SCRIPT\"; then\n       RELRO=\" \"\n       LD_FLAG=pie\n-      ( echo \"/* Script for ld -pie -z relro: link position independent executable */\"\n+      ( echo \"/* Script for -pie -z relro */\"\n \tsource_sh ${CUSTOMIZER_SCRIPT}\n \tsource_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n       ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdo\n       LD_FLAG=pietextonly\n-      ( echo \"/* Script for ld -pie -z relro -z separate-code: link position independent executable with separate code segment */\"\n+      ( echo \"/* Script for -pie -z separate-code -z relro */\"\n \tsource_sh ${CUSTOMIZER_SCRIPT}\n \tsource_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n       ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdeo\n@@ -549,29 +528,29 @@ if test -n \"$GENERATE_PIE_SCRIPT\"; then\n     DATA_ALIGNMENT=${DATA_ALIGNMENT_sc-${DATA_ALIGNMENT}}\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xdc.tmp\n     LD_FLAG=cpie\n-    ( echo \"/* Script for -pie -z combreloc: position independent executable, combine & sort relocs */\"\n+    ( echo \"/* Script for -pie -z combreloc */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdc\n     rm -f ${COMBRELOC}\n     LD_FLAG=cpietextonly\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xdce.tmp\n-    ( echo \"/* Script for -pie -z combreloc -z separate-code: position independent executable, combine & sort relocs with separate code segment */\"\n+    ( echo \"/* Script for -pie -z combreloc -z separate-code */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdce\n     rm -f ${COMBRELOC}\n     RELRO_NOW=\" \"\n     LD_FLAG=wpie\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xdw.tmp\n-    ( echo \"/* Script for -pie -z combreloc -z now -z relro: position independent executable, combine & sort relocs */\"\n+    ( echo \"/* Script for -pie -z combreloc -z relro -z now */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdw\n     rm -f ${COMBRELOC}\n     LD_FLAG=wpietextonly\n     COMBRELOC=ldscripts/${EMULATION_NAME}.xdwe.tmp\n-    ( echo \"/* Script for -pie -z combreloc -z now -z relro -z separate-code: position independent executable, combine & sort relocs with separate code segment */\"\n+    ( echo \"/* Script for -pie -z combreloc -z separate-code -z relro -z now */\"\n       source_sh ${CUSTOMIZER_SCRIPT}\n       source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n     ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdwe\n@@ -582,14 +561,14 @@ if test -n \"$GENERATE_PIE_SCRIPT\"; then\n \tLD_FLAG=wpie\n \tRELRO=\" \"\n \tCOMBRELOC=ldscripts/${EMULATION_NAME}.xdco.tmp\n-\t( echo \"/* Script for -pie -z combreloc -z relro: position independent executable, combine & sort relocs with separate code segment */\"\n+\t( echo \"/* Script for -pie -z combreloc -z relro */\"\n \t  source_sh ${CUSTOMIZER_SCRIPT}\n \t  source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n \t) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdco\n \trm -f ${COMBRELOC}\n \tLD_FLAG=wpietextonly\n \tCOMBRELOC=ldscripts/${EMULATION_NAME}.xdceo.tmp\n-\t( echo \"/* Script for -pie -z combreloc -z relro -z separate-code: position independent executable, combine & sort relocs with separate code segment */\"\n+\t( echo \"/* Script for -pie -z combreloc -z separate-code -z relro */\"\n \t  source_sh ${CUSTOMIZER_SCRIPT}\n \t  source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n \t) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xdceo\n@@ -605,7 +584,7 @@ fi\n if test -n \"$GENERATE_AUTO_IMPORT_SCRIPT\"; then\n   LD_FLAG=auto_import\n   DATA_ALIGNMENT=${DATA_ALIGNMENT_}\n-  ( echo \"/* Script for ld --enable-auto-import: Like the default script except read only data is placed into .data  */\"\n+  ( echo \"/* Script for --enable-auto-import */\"\n     source_sh ${CUSTOMIZER_SCRIPT}\n     source_sh ${srcdir}/scripttempl/${SCRIPT_NAME}.sc\n   ) | sed -e '/^ *$/d;s/[\t ]*$//' > ldscripts/${EMULATION_NAME}.xa"
    }
  ]
}