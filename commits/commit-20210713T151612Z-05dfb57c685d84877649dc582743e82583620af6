{
  "sha": "05dfb57c685d84877649dc582743e82583620af6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDVkZmI1N2M2ODVkODQ4Nzc2NDlkYzU4Mjc0M2U4MjU4MzYyMGFmNg==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2021-07-13T15:16:12Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2021-07-13T15:16:12Z"
    },
    "message": "aarch64-fbsd-nat: Use fetch_register_set and store_register_set.",
    "tree": {
      "sha": "663c785e6785c21f5b162500a2eed27dd21edc2b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/663c785e6785c21f5b162500a2eed27dd21edc2b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/05dfb57c685d84877649dc582743e82583620af6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05dfb57c685d84877649dc582743e82583620af6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/05dfb57c685d84877649dc582743e82583620af6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05dfb57c685d84877649dc582743e82583620af6/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e747f4dd8d811e3c805f72c27e57b54caea2172b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e747f4dd8d811e3c805f72c27e57b54caea2172b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e747f4dd8d811e3c805f72c27e57b54caea2172b"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 8,
    "deletions": 69
  },
  "files": [
    {
      "sha": "4442c9fa624c3f3f1649d224efee37a08ed965ef",
      "filename": "gdb/aarch64-fbsd-nat.c",
      "status": "modified",
      "additions": 8,
      "deletions": 69,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05dfb57c685d84877649dc582743e82583620af6/gdb/aarch64-fbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05dfb57c685d84877649dc582743e82583620af6/gdb/aarch64-fbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-fbsd-nat.c?ref=05dfb57c685d84877649dc582743e82583620af6",
      "patch": "@@ -26,7 +26,6 @@\n #include <machine/reg.h>\n \n #include \"fbsd-nat.h\"\n-#include \"aarch64-tdep.h\"\n #include \"aarch64-fbsd-tdep.h\"\n #include \"inf-ptrace.h\"\n \n@@ -38,52 +37,17 @@ struct aarch64_fbsd_nat_target final : public fbsd_nat_target\n \n static aarch64_fbsd_nat_target the_aarch64_fbsd_nat_target;\n \n-/* Determine if PT_GETREGS fetches REGNUM.  */\n-\n-static bool\n-getregs_supplies (int regnum)\n-{\n-  return (regnum >= AARCH64_X0_REGNUM && regnum <= AARCH64_CPSR_REGNUM);\n-}\n-\n-/* Determine if PT_GETFPREGS fetches REGNUM.  */\n-\n-static bool\n-getfpregs_supplies (int regnum)\n-{\n-  return (regnum >= AARCH64_V0_REGNUM && regnum <= AARCH64_FPCR_REGNUM);\n-}\n-\n /* Fetch register REGNUM from the inferior.  If REGNUM is -1, do this\n    for all registers.  */\n \n void\n aarch64_fbsd_nat_target::fetch_registers (struct regcache *regcache,\n \t\t\t\t\t  int regnum)\n {\n-  pid_t pid = get_ptrace_pid (regcache->ptid ());\n-\n-  if (regnum == -1 || getregs_supplies (regnum))\n-    {\n-      struct reg regs;\n-\n-      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n-\tperror_with_name (_(\"Couldn't get registers\"));\n-\n-      regcache->supply_regset (&aarch64_fbsd_gregset, regnum, &regs,\n-\t\t\t       sizeof (regs));\n-    }\n-\n-  if (regnum == -1 || getfpregs_supplies (regnum))\n-    {\n-      struct fpreg fpregs;\n-\n-      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n-\tperror_with_name (_(\"Couldn't get floating point status\"));\n-\n-      regcache->supply_regset (&aarch64_fbsd_fpregset, regnum, &fpregs,\n-\t\t\t       sizeof (fpregs));\n-    }\n+  fetch_register_set<struct reg> (regcache, regnum, PT_GETREGS,\n+\t\t\t\t  &aarch64_fbsd_gregset);\n+  fetch_register_set<struct fpreg> (regcache, regnum, PT_GETFPREGS,\n+\t\t\t\t    &aarch64_fbsd_fpregset);\n }\n \n /* Store register REGNUM back into the inferior.  If REGNUM is -1, do\n@@ -93,35 +57,10 @@ void\n aarch64_fbsd_nat_target::store_registers (struct regcache *regcache,\n \t\t\t\t\t  int regnum)\n {\n-  pid_t pid = get_ptrace_pid (regcache->ptid ());\n-\n-  if (regnum == -1 || getregs_supplies (regnum))\n-    {\n-      struct reg regs;\n-\n-      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n-\tperror_with_name (_(\"Couldn't get registers\"));\n-\n-      regcache->collect_regset (&aarch64_fbsd_gregset, regnum, &regs,\n-\t\t\t       sizeof (regs));\n-\n-      if (ptrace (PT_SETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n-\tperror_with_name (_(\"Couldn't write registers\"));\n-    }\n-\n-  if (regnum == -1 || getfpregs_supplies (regnum))\n-    {\n-      struct fpreg fpregs;\n-\n-      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n-\tperror_with_name (_(\"Couldn't get floating point status\"));\n-\n-      regcache->collect_regset (&aarch64_fbsd_fpregset, regnum, &fpregs,\n-\t\t\t\tsizeof (fpregs));\n-\n-      if (ptrace (PT_SETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n-\tperror_with_name (_(\"Couldn't write floating point status\"));\n-    }\n+  store_register_set<struct reg> (regcache, regnum, PT_GETREGS, PT_SETREGS,\n+\t\t\t\t  &aarch64_fbsd_gregset);\n+  store_register_set<struct fpreg> (regcache, regnum, PT_GETFPREGS,\n+\t\t\t\t    PT_SETFPREGS, &aarch64_fbsd_fpregset);\n }\n \n void _initialize_aarch64_fbsd_nat ();"
    }
  ]
}