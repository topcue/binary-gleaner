{
  "sha": "dc412de5e954d81dc932be7fa7c2edda992de096",
  "node_id": "C_kwDOANOeidoAKGRjNDEyZGU1ZTk1NGQ4MWRjOTMyYmU3ZmE3YzJlZGRhOTkyZGUwOTY",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-30T17:07:48Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-30T17:07:48Z"
    },
    "message": "[gdb/testsuite] Prepare nodebug exec in gdb.base/cvexpr.exp\n\nWhen running test-case gdb.base/cvexpr.exp with target board unix/-bad, I get:\n...\ngdb compile failed, gcc: error: unrecognized command line option '-bad'\nERROR: tcl error sourcing src/gdb/testsuite/gdb.base/cvexpr.exp.\nERROR: can't read \"use_gdb_stub\": no such variable\n...\n\nThis is triggered in a part of the test that claims to require no debug\ninformation, but uses the exec containing either dwarf or ctf.\n\nFix this by preparing another executable compiled with nodebug, and using\nthat one instead.\n\nAlso use with_test_prefix to mark the nodebug part, such that we have:\n...\ngdb compile failed, gcc: error: unrecognized command line option '-bad'\nUNTESTED: gdb.base/cvexpr.exp: dwarf: failed to prepare\ngdb compile failed, gcc: error: unrecognized command line option '-bad'\nUNTESTED: gdb.base/cvexpr.exp: nodebug: failed to prepare\n...\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "c49756afbe893127cc23065d8cf34b70bc71a219",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c49756afbe893127cc23065d8cf34b70bc71a219"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dc412de5e954d81dc932be7fa7c2edda992de096",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc412de5e954d81dc932be7fa7c2edda992de096",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dc412de5e954d81dc932be7fa7c2edda992de096",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc412de5e954d81dc932be7fa7c2edda992de096/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "85d74f293624dec19180d817436818567dc8f9b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85d74f293624dec19180d817436818567dc8f9b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/85d74f293624dec19180d817436818567dc8f9b3"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 14,
    "deletions": 8
  },
  "files": [
    {
      "sha": "f9bb467b4f77703141532a400c8cb98947795c9d",
      "filename": "gdb/testsuite/gdb.base/cvexpr.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 8,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc412de5e954d81dc932be7fa7c2edda992de096/gdb/testsuite/gdb.base/cvexpr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc412de5e954d81dc932be7fa7c2edda992de096/gdb/testsuite/gdb.base/cvexpr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/cvexpr.exp?ref=dc412de5e954d81dc932be7fa7c2edda992de096",
      "patch": "@@ -509,14 +509,20 @@ foreach testspec $specs {\n }\n \n # These tests don't rely on the debug format.\n-gdb_test \"ptype _Atomic int\" \"type = _Atomic int\"\n-gdb_test \"ptype int * restrict\" \"type = int \\\\* restrict\"\n+with_test_prefix nodebug {\n+    if { [prepare_for_testing \"failed to prepare\" $binfile $srcfile {nodebug}] } {\n+\treturn 0\n+    }\n \n-# C++ does not have \"restrict\".\n-gdb_test_no_output \"set lang c++\"\n-with_test_prefix c++ {\n-    gdb_test \"ptype int * restrict\" \"A syntax error in expression.*\"\n+    gdb_test \"ptype _Atomic int\" \"type = _Atomic int\"\n+    gdb_test \"ptype int * restrict\" \"type = int \\\\* restrict\"\n \n-    # There is a GCC extension for __restrict__, though.\n-    gdb_test \"ptype int * __restrict__\" \"type = int \\\\* __restrict__\"\n+    # C++ does not have \"restrict\".\n+    gdb_test_no_output \"set lang c++\"\n+    with_test_prefix c++ {\n+\tgdb_test \"ptype int * restrict\" \"A syntax error in expression.*\"\n+\n+\t# There is a GCC extension for __restrict__, though.\n+\tgdb_test \"ptype int * __restrict__\" \"type = int \\\\* __restrict__\"\n+    }\n }"
    }
  ]
}