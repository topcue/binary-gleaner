{
  "sha": "c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzBlNTQ2NjFmNzU1YjFlYjFjYmY3NDViYzRlYjRhMDY4Y2Q1YWRhMg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-25T07:18:41Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-25T07:18:41Z"
    },
    "message": "x86: fix AMD Zen3 insns\n\nFor INVLPGB the operand count was wrong (besides %edx there's also %ecx\nwhich is an input to the insn). In this case I see little sense in\nretaining the bogus 2-operand template. Plus swapping of the operands\nwasn't properly suppressed for Intel syntax.\n\nFor PVALIDATE, RMPADJUST, and RMPUPDATE bogus single operand templates\nwere specified. These get retained, as the address operand is the only\none really needed to expressed non-default address size, but only for\ncompatibility reasons. Proper multi-operand insn get introduced and the\ntestcases get adjusted / extended accordingly.\n\nWhile at it also drop the redundant definition of __amd64__ - we already\nhave x86_64 defined (or not) to distinguish 64-bit and non-64-bit cases.",
    "tree": {
      "sha": "15a8fd41581bb0ac66ff93e9b22f947a022ebf0d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/15a8fd41581bb0ac66ff93e9b22f947a022ebf0d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "829f3fe1f0230798c776b9c7039fa7be778a7b43",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/829f3fe1f0230798c776b9c7039fa7be778a7b43",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/829f3fe1f0230798c776b9c7039fa7be778a7b43"
    }
  ],
  "stats": {
    "total": 195,
    "additions": 163,
    "deletions": 32
  },
  "files": [
    {
      "sha": "0c99e5179b7cd55de92dd4b646a3e6deb7813c3a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -1,3 +1,16 @@\n+2021-03-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (md_assemble): Widen set of insns to avoid\n+\tswapping operands for.\n+\t* testsuite/gas/i386/invlpgb.s: Fix, re-arrange, and add Intel\n+\tsyntax tests.\n+\t* testsuite/gas/i386/snp.s: Re-arrange and add multi-operand as\n+\twell as Intel syntax tests.\n+\t* testsuite/gas/i386/invlpgb.d, testsuite/gas/i386/snp.d: Adjust\n+\texpectations.\n+\t* testsuite/gas/i386/invlpgb64.d, testsuite/gas/i386/snp64.d: \n+\tLikewise. Drop passing --def-sym to as.\n+\n 2021-03-25  Jan Beulich  <jbeulich@suse.com>\n \n \tPR/gas 27419"
    },
    {
      "sha": "785d0c424c6122a60a7e56e61e62ac566689b638",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -4679,16 +4679,18 @@ md_assemble (char *line)\n      operands at hand.  */\n \n   /* All Intel opcodes have reversed operands except for \"bound\", \"enter\",\n-     \"monitor*\", \"mwait*\", \"tpause\", and \"umwait\".  We also don't reverse\n-     intersegment \"jmp\" and \"call\" instructions with 2 immediate operands so\n-     that the immediate segment precedes the offset, as it does when in AT&T\n-     mode.  */\n+     \"invlpg*\", \"monitor*\", \"mwait*\", \"tpause\", \"umwait\", \"pvalidate\",\n+     \"rmpadjust\", and \"rmpupdate\".  We also don't reverse intersegment \"jmp\"\n+     and \"call\" instructions with 2 immediate operands so that the immediate\n+     segment precedes the offset consistently in Intel and AT&T modes.  */\n   if (intel_syntax\n       && i.operands > 1\n       && (strcmp (mnemonic, \"bound\") != 0)\n-      && (strcmp (mnemonic, \"invlpga\") != 0)\n+      && (strncmp (mnemonic, \"invlpg\", 6) != 0)\n       && (strncmp (mnemonic, \"monitor\", 7) != 0)\n       && (strncmp (mnemonic, \"mwait\", 5) != 0)\n+      && (strcmp (mnemonic, \"pvalidate\") != 0)\n+      && (strncmp (mnemonic, \"rmp\", 3) != 0)\n       && (strcmp (mnemonic, \"tpause\") != 0)\n       && (strcmp (mnemonic, \"umwait\") != 0)\n       && !(operand_type_check (i.types[0], imm)"
    },
    {
      "sha": "e6453642ef599550a41af8b164e4dd758325f17f",
      "filename": "gas/testsuite/gas/i386/invlpgb.d",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/invlpgb.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/invlpgb.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/invlpgb.d?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -11,4 +11,8 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]+0f 01 fe[ \t]+invlpgb[ \t]*\n [0-9a-f]+ <att16>:\n [ \t]*[a-f0-9]+:[ \t]+67 0f 01 fe[ \t]+addr16 invlpgb[ \t]*\n+[0-9a-f]+ <intel32>:\n+[ \t]*[a-f0-9]+:[ \t]+0f 01 fe[ \t]+invlpgb[ \t]*\n+[0-9a-f]+ <intel16>:\n+[ \t]*[a-f0-9]+:[ \t]+67 0f 01 fe[ \t]+addr16 invlpgb[ \t]*\n #pass"
    },
    {
      "sha": "cc85e738c815e905158882df593ebfdfea0eb4e3",
      "filename": "gas/testsuite/gas/i386/invlpgb.s",
      "status": "modified",
      "additions": 17,
      "deletions": 5,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/invlpgb.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/invlpgb.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/invlpgb.s?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -3,13 +3,25 @@\n \t.text\n _start:\n         invlpgb\n-.ifdef __amd64__\n+.ifdef x86_64\n att64:\n-        invlpgb %rax, %edx\n+        invlpgb %rax, %ecx, %edx\n .endif\n att32:\n-        invlpgb %eax, %edx\n-.ifndef __amd64__\n+        invlpgb %eax, %ecx, %edx\n+.ifndef x86_64\n att16:\n-        invlpgb %ax, %edx\n+        invlpgb %ax, %ecx, %edx\n+.endif\n+\n+\t.intel_syntax noprefix\n+.ifdef x86_64\n+intel64:\n+        invlpgb rax, ecx, edx\n+.endif\n+intel32:\n+        invlpgb eax, ecx, edx\n+.ifndef x86_64\n+intel16:\n+        invlpgb ax, ecx, edx\n .endif"
    },
    {
      "sha": "2582481a8ddc82c557de4f4ec44d92f6d9f5be3e",
      "filename": "gas/testsuite/gas/i386/invlpgb64.d",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/invlpgb64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/invlpgb64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/invlpgb64.d?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -1,4 +1,3 @@\n-#as: --defsym __amd64__=1\n #objdump: -dw\n #name: 64-bit INVLPGB insn\n #source: invlpgb.s\n@@ -13,4 +12,8 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]+0f 01 fe[ \t]+invlpgb[ \t]*\n [0-9a-f]+ <att32>:\n [ \t]*[a-f0-9]+:[ \t]+67 0f 01 fe[ \t]+addr32 invlpgb[ \t]*\n+[0-9a-f]+ <intel64>:\n+[ \t]*[a-f0-9]+:[ \t]+0f 01 fe[ \t]+invlpgb[ \t]*\n+[0-9a-f]+ <intel32>:\n+[ \t]*[a-f0-9]+:[ \t]+67 0f 01 fe[ \t]+addr32 invlpgb[ \t]*\n #pass"
    },
    {
      "sha": "81d386ce6fd984a9ee565ff34fce83b6cb8d6734",
      "filename": "gas/testsuite/gas/i386/snp.d",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/snp.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/snp.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/snp.d?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -6,7 +6,12 @@\n \n Disassembly of section \\.text:\n \n-00000000 <att32>:\n+0+ <att>:\n+[ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+67 f2 0f 01 ff[ \t]+addr16 pvalidate[ \t]*\n+\n+[0-9a-f]+ <intel>:\n [ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+67 f2 0f 01 ff[ \t]+addr16 pvalidate[ \t]*"
    },
    {
      "sha": "0ac0dfc77a9bd549909100dc0b5de24070e0f233",
      "filename": "gas/testsuite/gas/i386/snp.s",
      "status": "modified",
      "additions": 30,
      "deletions": 14,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/snp.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/snp.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/snp.s?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -1,23 +1,39 @@\n # Check SNP instructions\n \n \t.text\n-.ifdef __amd64__\n-att64:\n-        psmash  %rax\n+att:\n+        pvalidate\n+        pvalidate %eax, %ecx, %edx\n+.ifdef x86_64\n+        pvalidate %rax, %ecx, %edx\n         psmash\n-        psmash  %eax\n-        pvalidate  %rax\n-        pvalidate  %eax\n-        rmpupdate  %rax\n+        psmash\t%rax\n+        psmash\t%eax\n         rmpupdate\n-        rmpupdate  %eax\n-        rmpadjust  %rax\n+        rmpupdate %rax, %rcx\n+        rmpupdate %eax, %rcx\n         rmpadjust\n-        rmpadjust  %eax\n+        rmpadjust %rax, %rcx, %rdx\n+        rmpadjust %eax, %rcx, %rdx\n+.else\n+        pvalidate %ax, %ecx, %edx\n .endif\n-.ifndef __amd64__\n-att32:\n+\n+\t.intel_syntax noprefix\n+intel:\n         pvalidate\n-        pvalidate  %eax\n-        pvalidate  %ax\n+        pvalidate eax, ecx, edx\n+.ifdef x86_64\n+        pvalidate rax, ecx, edx\n+        psmash\n+        psmash\trax\n+        psmash\teax\n+        rmpupdate\n+        rmpupdate rax, rcx\n+        rmpupdate eax, rcx\n+        rmpadjust\n+        rmpadjust rax, rcx, rdx\n+        rmpadjust eax, rcx, rdx\n+.else\n+        pvalidate ax, ecx, edx\n .endif"
    },
    {
      "sha": "2b3e9ee819995636c74fa7f563fd78e8b27dc438",
      "filename": "gas/testsuite/gas/i386/snp64.d",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/snp64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/gas/testsuite/gas/i386/snp64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/snp64.d?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -1,4 +1,3 @@\n-#as: --defsym __amd64__=1\n #objdump: -dw\n #name: 64-bit SNP insn\n #source: snp.s\n@@ -8,12 +7,27 @@\n \n Disassembly of section \\.text:\n \n-0+000 <att64>:\n+0+ <att>:\n+[ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+67 f2 0f 01 ff[ \t]+addr32 pvalidate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+f3 0f 01 ff[ \t]+psmash[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+f3 0f 01 ff[ \t]+psmash[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+67 f3 0f 01 ff[ \t]+addr32 psmash[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f2 0f 01 fe[ \t]+rmpupdate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f2 0f 01 fe[ \t]+rmpupdate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+67 f2 0f 01 fe[ \t]+addr32 rmpupdate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f3 0f 01 fe[ \t]+rmpadjust[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f3 0f 01 fe[ \t]+rmpadjust[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+67 f3 0f 01 fe[ \t]+addr32 rmpadjust[ \t]*\n+\n+[0-9a-f]+ <intel>:\n [ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+67 f2 0f 01 ff[ \t]+addr32 pvalidate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f2 0f 01 ff[ \t]+pvalidate[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f3 0f 01 ff[ \t]+psmash[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+f3 0f 01 ff[ \t]+psmash[ \t]*\n+[ \t]*[a-f0-9]+:[ \t]+67 f3 0f 01 ff[ \t]+addr32 psmash[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+f2 0f 01 fe[ \t]+rmpupdate[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+f2 0f 01 fe[ \t]+rmpupdate[ \t]*\n [ \t]*[a-f0-9]+:[ \t]+67 f2 0f 01 fe[ \t]+addr32 rmpupdate[ \t]*"
    },
    {
      "sha": "bd02d2bfbfee8eda13ed91c3bbb59bdfbd20e0f1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (invlpgb): Fix multi-operand form.\n+\t(pvalidate, rmpupdate, rmpadjust): Add multi-operand forms. Mark\n+\tsingle-operand forms as deprecated.\n+\t* i386-tbl.h: Re-generate.\n+\n 2021-03-25  Alan Modra  <amodra@gmail.com>\n \n \tPR 27647"
    },
    {
      "sha": "721e94eb21e321cc135b0d620d918031f9e47ca2",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -3979,7 +3979,7 @@ vpclmulhqhqdq, 0x6644, 0x11, CpuVPCLMULQDQ|CpuAVX512F, Modrm|Space0F3A|VexWIG|Ve\n // INVLPGB instructions\n \n invlpgb, 0xf01fe, None, CpuINVLPGB, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, {}\n-invlpgb, 0xf01fe, None, CpuINVLPGB, AddrPrefixOpReg, { Acc|Word|Dword|Qword, RegD|Dword }\n+invlpgb, 0xf01fe, None, CpuINVLPGB, AddrPrefixOpReg, { Acc|Word|Dword|Qword, RegC|Dword, RegD|Dword }\n \n // INVLPGB instructions end\n \n@@ -4126,10 +4126,14 @@ mcommit, 0x0f01fa, None, CpuMCOMMIT, Prefix_0XF3|No_bSuf|No_wSuf|No_lSuf|No_sSuf\n psmash, 0xf01ff, None, CpuSNP|Cpu64, Prefix_0XF3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, {}\n psmash, 0xf01ff, None, CpuSNP|Cpu64, AddrPrefixOpReg|Prefix_0XF3, { Acc|Dword|Qword }\n pvalidate, 0xf01ff, None, CpuSNP, Prefix_0XF2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, {}\n-pvalidate, 0xf01ff, None, CpuSNP, AddrPrefixOpReg|Prefix_0XF2, { Acc|Word|Dword|Qword }\n+pvalidate, 0xf01ff, None, CpuSNP, AddrPrefixOpReg|Prefix_0XF2, { Acc|Word|Dword|Qword, RegC|Dword, RegD|Dword }\n rmpupdate, 0xf01fe, None, CpuSNP|Cpu64, Prefix_0XF2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, {}\n-rmpupdate, 0xf01fe, None, CpuSNP|Cpu64, AddrPrefixOpReg|Prefix_0XF2, { Acc|Dword|Qword }\n+rmpupdate, 0xf01fe, None, CpuSNP|Cpu64, AddrPrefixOpReg|Prefix_0XF2, { Acc|Dword|Qword, RegC|Qword }\n rmpadjust, 0xf01fe, None, CpuSNP|Cpu64, Prefix_0XF3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, {}\n+rmpadjust, 0xf01fe, None, CpuSNP|Cpu64, AddrPrefixOpReg|Prefix_0XF3, { Acc|Dword|Qword, RegC|Qword, RegD|Qword }\n+// The single-operand forms exist only for compatibility with older gas.\n+pvalidate, 0xf01ff, None, CpuSNP, AddrPrefixOpReg|Prefix_0XF2, { Acc|Word|Dword|Qword }\n+rmpupdate, 0xf01fe, None, CpuSNP|Cpu64, AddrPrefixOpReg|Prefix_0XF2, { Acc|Dword|Qword }\n rmpadjust, 0xf01fe, None, CpuSNP|Cpu64, AddrPrefixOpReg|Prefix_0XF3, { Acc|Dword|Qword }\n \n // SNP instructions end"
    },
    {
      "sha": "337bf186286cc9ca99f31176ddc3fe7f59bb4ff7",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 52,
      "deletions": 1,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=c0e54661f755b1eb1cbf745bc4eb4a068cd5ada2",
      "patch": "@@ -62769,7 +62769,7 @@ const insn_template i386_optab[] =\n         1, 0, 0, 0, 0, 0 } },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n-  { \"invlpgb\", 0x0f01fe, None, 2,\n+  { \"invlpgb\", 0x0f01fe, None, 3,\n     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n@@ -62782,6 +62782,8 @@ const insn_template i386_optab[] =\n         1, 0, 0, 0, 0, 0 } },\n     { { { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n \t  0, 0, 0, 0, 0, 0, 0 } },\n+      { { 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n+\t  0, 0, 0, 0, 0, 0, 0 } },\n       { { 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n   { \"tlbsync\", 0x0f01ff, None, 0,\n@@ -63548,6 +63550,23 @@ const insn_template i386_optab[] =\n         0, 0, 1, 0, 0, 0 } },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n+  { \"pvalidate\", 0x0f01ff, None, 3,\n+    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 1, 0, 0, 0 } },\n+    { { { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n+\t  0, 0, 0, 0, 0, 0, 0 } },\n+      { { 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n+\t  0, 0, 0, 0, 0, 0, 0 } },\n+      { { 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n+\t  0, 0, 0, 0, 0, 0, 0 } } } },\n   { \"pvalidate\", 0x0f01ff, None, 1,\n     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0,\n@@ -63574,6 +63593,21 @@ const insn_template i386_optab[] =\n         0, 0, 1, 1, 0, 0 } },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n+  { \"rmpupdate\", 0x0f01fe, None, 2,\n+    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 1, 1, 0, 0 } },\n+    { { { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,\n+\t  0, 0, 0, 0, 0, 0, 0 } },\n+      { { 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n+\t  0, 0, 0, 0, 0, 0, 0 } } } },\n   { \"rmpupdate\", 0x0f01fe, None, 1,\n     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0,\n@@ -63600,6 +63634,23 @@ const insn_template i386_optab[] =\n         0, 0, 1, 1, 0, 0 } },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 0, 0, 0 } } } },\n+  { \"rmpadjust\", 0x0f01fe, None, 3,\n+    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 1, 1, 0, 0 } },\n+    { { { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,\n+\t  0, 0, 0, 0, 0, 0, 0 } },\n+      { { 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n+\t  0, 0, 0, 0, 0, 0, 0 } },\n+      { { 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n+\t  0, 0, 0, 0, 0, 0, 0 } } } },\n   { \"rmpadjust\", 0x0f01fe, None, 1,\n     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,"
    }
  ]
}