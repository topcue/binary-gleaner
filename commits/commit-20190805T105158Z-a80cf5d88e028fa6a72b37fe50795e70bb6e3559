{
  "sha": "a80cf5d88e028fa6a72b37fe50795e70bb6e3559",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTgwY2Y1ZDg4ZTAyOGZhNmE3MmIzN2ZlNTA3OTVlNzBiYjZlMzU1OQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-08-05T10:51:58Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-08-05T10:51:58Z"
    },
    "message": "[gdb/testsuite] Fail in gdb_compile if pie results in non-PIE executable\n\nWhen running gdb.base/break-idempotent.exp with\n--target_board=unix/-fno-PIE/-no-pie, we get:\n...\nnr of expected passes            140\n...\n\nThe test-case is compiled once with nopie and once with pie, but in both cases\nwe end up with a non-PIE executable.  The \"-fno-PIE -no-pie\" options specified\nusing the target_board are interpreted by dejagnu as multilib_flags, and end up\noverriding the pie flags.\n\nFix this by checking in gdb_compile if the resulting exec is non-PIE despite of\na pie setting, and if so return an error:\n...\nRunning gdb/testsuite/gdb.base/break-idempotent.exp ...\ngdb compile failed, pie failed to generate PIE executable\n\n                === gdb Summary ===\n\nnr of expected passes            70\nnr of untested testcases         1\n...\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-08-05  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdb.exp (version_at_least): Factor out of ...\n\t(tcl_version_at_least): ... here.\n\t(gdb_compile): Fail if pie results in non-PIE executable.\n\t(readelf_version, readelf_prints_pie): New proc.\n\t(exec_is_pie): Return -1 if unknown.",
    "tree": {
      "sha": "9059acdad2c515d5eaedb074a78e4df6faee0e5a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9059acdad2c515d5eaedb074a78e4df6faee0e5a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a80cf5d88e028fa6a72b37fe50795e70bb6e3559",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a80cf5d88e028fa6a72b37fe50795e70bb6e3559",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a80cf5d88e028fa6a72b37fe50795e70bb6e3559",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a80cf5d88e028fa6a72b37fe50795e70bb6e3559/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d09628385443574b556f2beaaba7588a2a5fb4c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d09628385443574b556f2beaaba7588a2a5fb4c0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d09628385443574b556f2beaaba7588a2a5fb4c0"
    }
  ],
  "stats": {
    "total": 86,
    "additions": 72,
    "deletions": 14
  },
  "files": [
    {
      "sha": "29248bc847c1bafcdc1e92d98abd0119857e6cb6",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a80cf5d88e028fa6a72b37fe50795e70bb6e3559/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a80cf5d88e028fa6a72b37fe50795e70bb6e3559/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=a80cf5d88e028fa6a72b37fe50795e70bb6e3559",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-05  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdb.exp (version_at_least): Factor out of ...\n+\t(tcl_version_at_least): ... here.\n+\t(gdb_compile): Fail if pie results in non-PIE executable.\n+\t(readelf_version, readelf_prints_pie): New proc.\n+\t(exec_is_pie): Return -1 if unknown.\n+\n 2019-08-05  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (tcl_version_at_least): Fix typo."
    },
    {
      "sha": "529b6f6030fd605a2fc3f4c7c47cd159f57ff34c",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 64,
      "deletions": 14,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a80cf5d88e028fa6a72b37fe50795e70bb6e3559/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a80cf5d88e028fa6a72b37fe50795e70bb6e3559/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=a80cf5d88e028fa6a72b37fe50795e70bb6e3559",
      "patch": "@@ -1103,21 +1103,27 @@ proc gdb_test { args } {\n      }]\n }\n \n-# Return 1 if tcl version used is at least MAJOR.MINOR\n-proc tcl_version_at_least { major minor } {\n-    global tcl_version\n-    regexp {^([0-9]+)\\.([0-9]+)$} $tcl_version \\\n-\tdummy tcl_version_major tcl_version_minor\n-    if { $tcl_version_major > $major } {\n+# Return 1 if version MAJOR.MINOR is at least AT_LEAST_MAJOR.AT_LEAST_MINOR.\n+proc version_at_least { major minor at_least_major at_least_minor} {\n+    if { $major > $at_least_major } {\n         return 1\n-    } elseif { $tcl_version_major == $major \\\n-\t\t   && $tcl_version_minor >= $minor } {\n+    } elseif { $major == $at_least_major \\\n+\t\t   && $minor >= $at_least_minor } {\n         return 1\n     } else {\n         return 0\n     }\n }\n \n+# Return 1 if tcl version used is at least MAJOR.MINOR\n+proc tcl_version_at_least { major minor } {\n+    global tcl_version\n+    regexp {^([0-9]+)\\.([0-9]+)$} $tcl_version \\\n+\tdummy tcl_version_major tcl_version_minor\n+    return [version_at_least $tcl_version_major $tcl_version_minor \\\n+\t\t$major $minor]\n+}\n+\n if { [tcl_version_at_least 8 5] == 0 } {\n     # lrepeat was added in tcl 8.5.  Only add if missing.\n     proc lrepeat { n element } {\n@@ -3803,9 +3809,13 @@ proc gdb_compile {source dest type options} {\n     regsub \"\\[\\r\\n\\]*$\" \"$result\" \"\" result\n     regsub \"^\\[\\r\\n\\]*\" \"$result\" \"\" result\n     \n-    if { $type == \"executable\" && $result == \"\" && $nopie != -1 } {\n-\tif { [exec_is_pie \"$dest\"] } {\n+    if { $type == \"executable\" && $result == \"\" \\\n+\t     && ($nopie != -1 || $pie != -1) } {\n+\tset is_pie [exec_is_pie \"$dest\"]\n+\tif { $nopie != -1 && $is_pie == 1 } {\n \t    set result \"nopie failed to prevent PIE executable\"\n+\t} elseif { $pie != -1 && $is_pie == 0 } {\n+\t    set result \"pie failed to generate PIE executable\"\n \t}\n     }\n \n@@ -5209,13 +5219,53 @@ proc exec_has_index_section { executable } {\n     return 0\n }\n \n-# Return true if EXECUTABLE is a Position Independent Executable.\n+# Return list with major and minor version of readelf, or an empty list.\n+gdb_caching_proc readelf_version {\n+    set readelf_program [gdb_find_readelf]\n+    set res [catch {exec $readelf_program --version} output]\n+    if { $res != 0 } {\n+\treturn [list]\n+    }\n+    set lines [split $output \\n]\n+    set line [lindex $lines 0]\n+    set res [regexp {[ \\t]+([0-9]+)[.]([0-9]+)[^ \\t]*$} \\\n+\t\t $line dummy major minor]\n+    if { $res != 1 } {\n+\treturn [list]\n+    }\n+    return [list $major $minor]\n+}\n+\n+# Return 1 if readelf prints the PIE flag, 0 if is doesn't, and -1 if unknown.\n+proc readelf_prints_pie { } {\n+    set version [readelf_version]\n+    if { [llength $version] == 0 } {\n+\treturn -1\n+    }\n+    set major [lindex $version 0]\n+    set minor [lindex $version 1]\n+    # It would be better to construct a PIE executable and test if the PIE\n+    # flag is printed by readelf, but we cannot reliably construct a PIE\n+    # executable if the multilib_flags dictate otherwise\n+    # (--target_board=unix/-no-pie/-fno-PIE).\n+    return [version_at_least $major $minor 2 26]\n+}\n+\n+# Return 1 if EXECUTABLE is a Position Independent Executable, 0 if it is not,\n+# and -1 if unknown.\n \n proc exec_is_pie { executable } {\n+    set res [readelf_prints_pie]\n+    if { $res != 1 } {\n+\treturn -1\n+    }\n     set readelf_program [gdb_find_readelf]\n-    set res [catch {exec $readelf_program -d $executable \\\n-\t\t\t| grep -E \"(FLAGS_1).*Flags:.* PIE($| )\" }]\n-    if { $res == 0 } {\n+    set res [catch {exec $readelf_program -d $executable} output]\n+    if { $res != 0 } {\n+\treturn -1\n+    }\n+    set res [regexp -line {\\(FLAGS_1\\).*Flags:.* PIE($| )} $output]\n+    if { $res == 1 } {\n \treturn 1\n     }\n     return 0"
    }
  ]
}