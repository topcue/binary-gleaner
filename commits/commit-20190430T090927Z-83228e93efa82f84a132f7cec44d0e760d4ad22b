{
  "sha": "83228e93efa82f84a132f7cec44d0e760d4ad22b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODMyMjhlOTNlZmE4MmY4NGExMzJmN2NlYzQ0ZDBlNzYwZDRhZDIyYg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-01T20:01:09Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-30T09:09:27Z"
    },
    "message": "gdb/fortran: Introduce fortran-operator.def file\n\nFuture commits will add more Fortran specific expression operators.\n\nIn preparation for these new operators, this commit adds a new\nfortran-operator.def file similar to how GDB already has\nada-operator.def.\n\nI've moved UNOP_KIND the Fortran specific operator I introduced in\ncommit 4d00f5d8f6c4 into this file, and renamed it to make it clearer\nthat the operator is Fortran specific.  I've then updated the Fortran\nexp_descriptor table (exp_descriptor_f) to use entirely Fortran\nspecific functions that now handle UNOP_FORTRAN_KIND (the new name for\nUNOP_KIND).\n\nThere should be no visible changes for standard users after this\ncommit, though for developers, the output when 'set debug expression\n1' is now better, before:\n\n  (gdb) p kind (l1)\n  Dump of expression @ 0x2ccc7a0, before conversion to prefix form:\n  \tLanguage fortran, 5 elements, 16 bytes each.\n  \tIndex                Opcode         Hex Value  String Value\n  \t    0          OP_VAR_VALUE  42  *...............\n  \t    1               OP_NULL  47730176  .N..............\n  \t    2          BINOP_INTDIV  47729184   J..............\n  \t    3          OP_VAR_VALUE  42  *...............\n  \t    4             UNOP_KIND  78  N...............\n  Dump of expression @ 0x2ccc7a0, after conversion to prefix form:\n  Expression: `Invalid expression\n  (gdb)\n\nand after:\n\n  (gdb) p kind (l1)\n  Dump of expression @ 0x294d0b0, before conversion to prefix form:\n  \tLanguage fortran, 5 elements, 16 bytes each.\n  \tIndex                Opcode         Hex Value  String Value\n  \t    0          OP_VAR_VALUE  40  (...............\n  \t    1   unknown opcode: 224  44088544  ................\n  \t    2   unknown opcode: 208  44087504  ................\n  \t    3          OP_VAR_VALUE  40  (...............\n  \t    4     UNOP_FORTRAN_KIND  119  w...............\n  Dump of expression @ 0x294d0b0, after conversion to prefix form:\n  Expression: `KIND(test::l1)'\n  \tLanguage fortran, 5 elements, 16 bytes each.\n\n  \t    0  UNOP_FORTRAN_KIND\n  \t    1    OP_VAR_VALUE          Block @0x2a0bce0, symbol @0x2a0b8d0 (l1)\n  $1 = 1\n  (gdb)\n\ngdb/ChangeLog:\n\n\t* gdb/expprint.c (dump_subexp_body_standard): Remove use of\n\tUNOP_KIND.\n\t* gdb/expression.h (exp_opcode): Include 'fortran-operator.def'.\n\t* gdb/f-exp.y (exp): Rename UNOP_KIND to UNOP_FORTRAN_KIND.\n\t* gdb/f-lang.c (evaluate_subexp_f): Likewise.\n\t(operator_length_f): New fuction.\n\t(print_subexp_f): New function.\n\t(op_name_f): New function.\n\t(dump_subexp_body_f): New function.\n\t(operator_check_f): New function.\n\t(exp_descriptor_f): Replace standard expression handling functions\n\twith new functions.\n\t* gdb/fortran-operator.def: New file.\n\t* gdb/parse.c (operator_length_standard): Remove use of UNOP_KIND.\n\t* gdb/std-operator.def: Remove UNOP_KIND.",
    "tree": {
      "sha": "dbfdc49164342ae98d9bc119c5f5ea2d952181f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dbfdc49164342ae98d9bc119c5f5ea2d952181f0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/83228e93efa82f84a132f7cec44d0e760d4ad22b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/83228e93efa82f84a132f7cec44d0e760d4ad22b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/83228e93efa82f84a132f7cec44d0e760d4ad22b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/83228e93efa82f84a132f7cec44d0e760d4ad22b/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6fdcd7cc87a5e345a1c09fcf898012d80eb43ee1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fdcd7cc87a5e345a1c09fcf898012d80eb43ee1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6fdcd7cc87a5e345a1c09fcf898012d80eb43ee1"
    }
  ],
  "stats": {
    "total": 177,
    "additions": 167,
    "deletions": 10
  },
  "files": [
    {
      "sha": "3e3ea935860d5e87ce8ba7b1c9a396a069c8d1be",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -1,3 +1,21 @@\n+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/expprint.c (dump_subexp_body_standard): Remove use of\n+\tUNOP_KIND.\n+\t* gdb/expression.h (exp_opcode): Include 'fortran-operator.def'.\n+\t* gdb/f-exp.y (exp): Rename UNOP_KIND to UNOP_FORTRAN_KIND.\n+\t* gdb/f-lang.c (evaluate_subexp_f): Likewise.\n+\t(operator_length_f): New fuction.\n+\t(print_subexp_f): New function.\n+\t(op_name_f): New function.\n+\t(dump_subexp_body_f): New function.\n+\t(operator_check_f): New function.\n+\t(exp_descriptor_f): Replace standard expression handling functions\n+\twith new functions.\n+\t* gdb/fortran-operator.def: New file.\n+\t* gdb/parse.c (operator_length_standard): Remove use of UNOP_KIND.\n+\t* gdb/std-operator.def: Remove UNOP_KIND.\n+\n 2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* std-operator.def: Remove unbalanced, stray double quote"
    },
    {
      "sha": "d7ad1a71878077f22a2028eeef2e874e57d2512e",
      "filename": "gdb/expprint.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/expprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/expprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expprint.c?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -869,7 +869,6 @@ dump_subexp_body_standard (struct expression *exp,\n     case UNOP_MIN:\n     case UNOP_ODD:\n     case UNOP_TRUNC:\n-    case UNOP_KIND:\n       elt = dump_subexp (exp, stream, elt);\n       break;\n     case OP_LONG:"
    },
    {
      "sha": "841bf9891be5ea42d2999de088159fd32be6df67",
      "filename": "gdb/expression.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/expression.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/expression.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expression.h?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -66,6 +66,7 @@ enum exp_opcode : uint8_t\n \n /* Language specific operators.  */\n #include \"ada-operator.def\"\n+#include \"fortran-operator.def\"\n \n #undef OP\n "
    },
    {
      "sha": "dec8848bc00896b189f100bf54061c30a70ba5b5",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -240,7 +240,7 @@ exp\t:\tSIZEOF exp       %prec UNARY\n \t;\n \n exp\t:\tKIND '(' exp ')'       %prec UNARY\n-\t\t\t{ write_exp_elt_opcode (pstate, UNOP_KIND); }\n+\t\t\t{ write_exp_elt_opcode (pstate, UNOP_FORTRAN_KIND); }\n \t;\n \n /* No more explicit array operators, we treat everything in F77 as "
    },
    {
      "sha": "ecb69e76e61c0c840951b21fdc4549791b77ecbc",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 125,
      "deletions": 6,
      "changes": 131,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -284,7 +284,7 @@ evaluate_subexp_f (struct type *expect_type, struct expression *exp,\n \t}\n       error (_(\"ABS of type %s not supported\"), TYPE_SAFE_NAME (type));\n \n-    case UNOP_KIND:\n+    case UNOP_FORTRAN_KIND:\n       arg1 = evaluate_subexp (NULL, exp, pos, EVAL_AVOID_SIDE_EFFECTS);\n       type = value_type (arg1);\n \n@@ -319,6 +319,125 @@ f_is_string_type_p (struct type *type)\n \t      && TYPE_CODE (TYPE_TARGET_TYPE (type)) == TYPE_CODE_CHAR));\n }\n \n+/* Special expression lengths for Fortran.  */\n+\n+static void\n+operator_length_f (const struct expression *exp, int pc, int *oplenp,\n+\t\t   int *argsp)\n+{\n+  int oplen = 1;\n+  int args = 0;\n+\n+  switch (exp->elts[pc - 1].opcode)\n+    {\n+    default:\n+      operator_length_standard (exp, pc, oplenp, argsp);\n+      return;\n+\n+    case UNOP_FORTRAN_KIND:\n+      oplen = 1;\n+      args = 1;\n+      break;\n+    }\n+\n+  *oplenp = oplen;\n+  *argsp = args;\n+}\n+\n+/* Special expression printing for Fortran.  */\n+\n+static void\n+print_subexp_f (struct expression *exp, int *pos,\n+\t\tstruct ui_file *stream, enum precedence prec)\n+{\n+  int pc = *pos;\n+  enum exp_opcode op = exp->elts[pc].opcode;\n+\n+  switch (op)\n+    {\n+    default:\n+      print_subexp_standard (exp, pos, stream, prec);\n+      return;\n+\n+    case UNOP_FORTRAN_KIND:\n+      (*pos)++;\n+      fputs_filtered (\"KIND(\", stream);\n+      print_subexp (exp, pos, stream, PREC_SUFFIX);\n+      fputs_filtered (\")\", stream);\n+      return;\n+    }\n+}\n+\n+/* Special expression names for Fortran.  */\n+\n+static const char *\n+op_name_f (enum exp_opcode opcode)\n+{\n+  switch (opcode)\n+    {\n+    default:\n+      return op_name_standard (opcode);\n+\n+#define OP(name)\t\\\n+    case name:\t\t\\\n+      return #name ;\n+#include \"fortran-operator.def\"\n+#undef OP\n+    }\n+}\n+\n+/* Special expression dumping for Fortran.  */\n+\n+static int\n+dump_subexp_body_f (struct expression *exp,\n+\t\t    struct ui_file *stream, int elt)\n+{\n+  int opcode = exp->elts[elt].opcode;\n+  int oplen, nargs, i;\n+\n+  switch (opcode)\n+    {\n+    default:\n+      return dump_subexp_body_standard (exp, stream, elt);\n+\n+    case UNOP_FORTRAN_KIND:\n+      operator_length_f (exp, (elt + 1), &oplen, &nargs);\n+      break;\n+    }\n+\n+  elt += oplen;\n+  for (i = 0; i < nargs; i += 1)\n+    elt = dump_subexp (exp, stream, elt);\n+\n+  return elt;\n+}\n+\n+/* Special expression checking for Fortran.  */\n+\n+static int\n+operator_check_f (struct expression *exp, int pos,\n+\t\t  int (*objfile_func) (struct objfile *objfile,\n+\t\t\t\t       void *data),\n+\t\t  void *data)\n+{\n+  const union exp_element *const elts = exp->elts;\n+\n+  switch (elts[pos].opcode)\n+    {\n+    case UNOP_FORTRAN_KIND:\n+      /* Any references to objfiles are held in the arguments to this\n+\t expression, not within the expression itself, so no additional\n+\t checking is required here, the outer expression iteration code\n+\t will take care of checking each argument.  */\n+      break;\n+\n+    default:\n+      return operator_check_standard (exp, pos, objfile_func, data);\n+    }\n+\n+  return 0;\n+}\n+\n static const char *f_extensions[] =\n {\n   \".f\", \".F\", \".for\", \".FOR\", \".ftn\", \".FTN\", \".fpp\", \".FPP\",\n@@ -329,11 +448,11 @@ static const char *f_extensions[] =\n /* Expression processing for Fortran.  */\n static const struct exp_descriptor exp_descriptor_f =\n {\n-  print_subexp_standard,\n-  operator_length_standard,\n-  operator_check_standard,\n-  op_name_standard,\n-  dump_subexp_body_standard,\n+  print_subexp_f,\n+  operator_length_f,\n+  operator_check_f,\n+  op_name_f,\n+  dump_subexp_body_f,\n   evaluate_subexp_f\n };\n "
    },
    {
      "sha": "c3176de428e241cc6fc02bbeaafc00b0f494ba33",
      "filename": "gdb/fortran-operator.def",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/fortran-operator.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/fortran-operator.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/fortran-operator.def?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -0,0 +1,22 @@\n+/* Fortran language operator definitions for GDB, the GNU debugger.\n+\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* Single operand builtins.  */\n+OP (UNOP_FORTRAN_KIND)\n+"
    },
    {
      "sha": "6f777e6ed73f55a1b935842c456ee68f66908d6b",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -857,7 +857,6 @@ operator_length_standard (const struct expression *expr, int endpos,\n     case UNOP_CHR:\n     case UNOP_FLOAT:\n     case UNOP_HIGH:\n-    case UNOP_KIND:\n     case UNOP_ODD:\n     case UNOP_ORD:\n     case UNOP_TRUNC:"
    },
    {
      "sha": "a5247ab940994297a374f210a893aabcc44fdb49",
      "filename": "gdb/std-operator.def",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/std-operator.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83228e93efa82f84a132f7cec44d0e760d4ad22b/gdb/std-operator.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/std-operator.def?ref=83228e93efa82f84a132f7cec44d0e760d4ad22b",
      "patch": "@@ -244,7 +244,6 @@ OP (UNOP_ORD)\n OP (UNOP_ABS)\n OP (UNOP_FLOAT)\n OP (UNOP_HIGH)\n-OP (UNOP_KIND)\t\t\t/* Fortran KIND function.  */\n OP (UNOP_MAX)\n OP (UNOP_MIN)\n OP (UNOP_ODD)"
    }
  ]
}