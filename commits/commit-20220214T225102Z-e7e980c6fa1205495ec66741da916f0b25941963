{
  "sha": "e7e980c6fa1205495ec66741da916f0b25941963",
  "node_id": "C_kwDOANOeidoAKGU3ZTk4MGM2ZmExMjA1NDk1ZWM2Njc0MWRhOTE2ZjBiMjU5NDE5NjM",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@axis.com",
      "date": "2022-02-14T22:51:02Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2022-02-14T22:51:02Z"
    },
    "message": "sim cris: Unbreak --disable-sim-hardware builds\n\nWith --disable-sim-hardware (--enable-sim-hardware=no),\nwhose default was changed to --enable-sim-hardware(=yes) in\ncommit 34cf51120683, building for cris-elf fails as\nsim_hw_parse then doesn't exist.\n\nA cris-elf simulator configured for --enable-sim-hardware\n(or the default after to the mentioned commit) runs about\n2.5x slower than one configured --disable-sim-hardware.\nA further 2-5% performance regression was not investigated.\n\nWhen sim_hw_parse doesn't exist, --cris-900000xx can't be\nsupported.  The best action here is to remove it completely,\nso its absence can be identified through --help, but\navoiding littering the code with \"#if WITH_HW\".\n\nsim/cris:\n\t* sim-if.c (cris_options) [WITH_HW]: Conditionalize\n\tsupport of option --cris-900000xx.\n\t(sim_open) [WITH_HW]: Conditionalize sim_hw_parse\n\tcall.",
    "tree": {
      "sha": "9ca4e89cd2faf488baeb67107e431e808dfdec97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ca4e89cd2faf488baeb67107e431e808dfdec97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e7e980c6fa1205495ec66741da916f0b25941963",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7e980c6fa1205495ec66741da916f0b25941963",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e7e980c6fa1205495ec66741da916f0b25941963",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7e980c6fa1205495ec66741da916f0b25941963/comments",
  "author": {
    "login": "hpataxisdotcom",
    "id": 80339731,
    "node_id": "MDQ6VXNlcjgwMzM5NzMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hpataxisdotcom",
    "html_url": "https://github.com/hpataxisdotcom",
    "followers_url": "https://api.github.com/users/hpataxisdotcom/followers",
    "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}",
    "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions",
    "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs",
    "repos_url": "https://api.github.com/users/hpataxisdotcom/repos",
    "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "6f62dbfb12f586691ef57878b7680cc2b02d81c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f62dbfb12f586691ef57878b7680cc2b02d81c4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6f62dbfb12f586691ef57878b7680cc2b02d81c4"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 8,
    "deletions": 0
  },
  "files": [
    {
      "sha": "c72edc752b6fcb89d39118ce3541d045f49f6b31",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7e980c6fa1205495ec66741da916f0b25941963/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7e980c6fa1205495ec66741da916f0b25941963/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=e7e980c6fa1205495ec66741da916f0b25941963",
      "patch": "@@ -100,9 +100,11 @@ static const OPTION cris_options[] =\n   { {\"cris-naked\", no_argument, NULL, OPTION_CRIS_NAKED},\n      '\\0', NULL, \"Don't set up stack and environment\",\n      cris_option_handler, NULL },\n+#if WITH_HW\n   { {\"cris-900000xx\", no_argument, NULL, OPTION_CRIS_900000XXIF},\n      '\\0', NULL, \"Define addresses at 0x900000xx with simulator semantics\",\n      cris_option_handler, NULL },\n+#endif\n   { {\"cris-unknown-syscall\", required_argument, NULL,\n      OPTION_CRIS_UNKNOWN_SYSCALL},\n      '\\0', \"stop|enosys|enosys-quiet\", \"Action at an unknown system call\",\n@@ -891,8 +893,14 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \t\t     startmem, endmem - startmem);\n \n   /* Allocate simulator I/O managed memory if none specified by user.  */\n+#if WITH_HW\n   if (cris_have_900000xxif)\n     sim_hw_parse (sd, \"/core/%s/reg %#x %i\", \"cris_900000xx\", 0x90000000, 0x100);\n+#else\n+  /* With the option disabled, nothing should be able to set this variable.\n+     We should \"use\" it, though, and why not assert that it isn't set.  */\n+  ASSERT (! cris_have_900000xxif);\n+#endif\n \n   /* Establish any remaining configuration options.  */\n   if (sim_config (sd) != SIM_RC_OK)"
    }
  ]
}