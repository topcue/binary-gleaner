{
  "sha": "568cbddc710f6cb6be752f390a1521cd5556ad9b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTY4Y2JkZGM3MTBmNmNiNmJlNzUyZjM5MGExNTIxY2Q1NTU2YWQ5Yg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-11-29T14:00:37Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-11-29T14:00:50Z"
    },
    "message": "gold: Convert x86-64 GOTPCRELX only if addend == -4\n\nConvert x86-64 GOTPCRELX relocations only if addend == -4.\n\n\tPR gold/26939\n\t* x86_64.cc (Target_x86_64<size>::Scan::local): Check\n\tget_r_addend() == -4 for GOTPCRELX conversion.\n\t(Target_x86_64<size>::Scan::global): Likewise.\n\t(Target_x86_64<size>::Relocate::relocate): Likewise.\n\t* testsuite/Makefile.am (check_DATA): Add\n\tx86_64_mov_to_lea15.stdout and x86_64_mov_to_lea16.stdout.\n\t(MOSTLYCLEANFILES): Add x86_64_mov_to_lea15 and\n\tx86_64_mov_to_lea16.\n\t(x86_64_mov_to_lea9.o): New target.\n\t(x86_64_mov_to_lea10.o): Likewise.\n\t(x86_64_mov_to_lea15): Likewise.\n\t(x86_64_mov_to_lea16): Likewise.\n\t(x86_64_mov_to_lea15.stdout): Likewise.\n\t(x86_64_mov_to_lea16.stdout): Likewise.\n\t* testsuite/Makefile.in: Regenerated.\n\t* testsuite/x86_64_mov_to_lea.sh: Updated.\n\t* testsuite/x86_64_mov_to_lea5.s: New file.",
    "tree": {
      "sha": "8953d9b7c53cab14e7bc302a3bf66524dcb3686f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8953d9b7c53cab14e7bc302a3bf66524dcb3686f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/568cbddc710f6cb6be752f390a1521cd5556ad9b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/568cbddc710f6cb6be752f390a1521cd5556ad9b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/568cbddc710f6cb6be752f390a1521cd5556ad9b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/568cbddc710f6cb6be752f390a1521cd5556ad9b/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8ca751ee637ce1b8d1b284a794ffdb327951d0f8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ca751ee637ce1b8d1b284a794ffdb327951d0f8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8ca751ee637ce1b8d1b284a794ffdb327951d0f8"
    }
  ],
  "stats": {
    "total": 187,
    "additions": 135,
    "deletions": 52
  },
  "files": [
    {
      "sha": "53bb030821cd8c45ccdf60b340e712f17cc9ff22",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=568cbddc710f6cb6be752f390a1521cd5556ad9b",
      "patch": "@@ -1,3 +1,24 @@\n+2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/26939\n+\t* x86_64.cc (Target_x86_64<size>::Scan::local): Check\n+\tget_r_addend() == -4 for GOTPCRELX conversion.\n+\t(Target_x86_64<size>::Scan::global): Likewise.\n+\t(Target_x86_64<size>::Relocate::relocate): Likewise.\n+\t* testsuite/Makefile.am (check_DATA): Add\n+\tx86_64_mov_to_lea15.stdout and x86_64_mov_to_lea16.stdout.\n+\t(MOSTLYCLEANFILES): Add x86_64_mov_to_lea15 and\n+\tx86_64_mov_to_lea16.\n+\t(x86_64_mov_to_lea9.o): New target.\n+\t(x86_64_mov_to_lea10.o): Likewise.\n+\t(x86_64_mov_to_lea15): Likewise.\n+\t(x86_64_mov_to_lea16): Likewise.\n+\t(x86_64_mov_to_lea15.stdout): Likewise.\n+\t(x86_64_mov_to_lea16.stdout): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/x86_64_mov_to_lea.sh: Updated.\n+\t* testsuite/x86_64_mov_to_lea5.s: New file.\n+\n 2020-11-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR gold/26937"
    },
    {
      "sha": "3ba2a30ed858e8e44a190c437547b59ae2b0683c",
      "filename": "gold/testsuite/Makefile.am",
      "status": "modified",
      "additions": 17,
      "deletions": 2,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.am?ref=568cbddc710f6cb6be752f390a1521cd5556ad9b",
      "patch": "@@ -1119,12 +1119,15 @@ check_DATA += x86_64_mov_to_lea1.stdout x86_64_mov_to_lea2.stdout \\\n \tx86_64_mov_to_lea7.stdout x86_64_mov_to_lea8.stdout \\\n \tx86_64_mov_to_lea9.stdout x86_64_mov_to_lea10.stdout \\\n \tx86_64_mov_to_lea11.stdout x86_64_mov_to_lea12.stdout \\\n-\tx86_64_mov_to_lea13.stdout x86_64_mov_to_lea14.stdout\n+\tx86_64_mov_to_lea13.stdout x86_64_mov_to_lea14.stdout \\\n+\tx86_64_mov_to_lea15.stdout x86_64_mov_to_lea16.stdout\n+\n MOSTLYCLEANFILES += x86_64_mov_to_lea1 x86_64_mov_to_lea2 \\\n \tx86_64_mov_to_lea3 x86_64_mov_to_lea4 x86_64_mov_to_lea5 \\\n \tx86_64_mov_to_lea6 x86_64_mov_to_lea7 x86_64_mov_to_lea8 \\\n \tx86_64_mov_to_lea9 x86_64_mov_to_lea10 x86_64_mov_to_lea11 \\\n-\tx86_64_mov_to_lea12 x86_64_mov_to_lea13 x86_64_mov_to_lea14\n+\tx86_64_mov_to_lea12 x86_64_mov_to_lea13 x86_64_mov_to_lea14 \\\n+\tx86_64_mov_to_lea15 x86_64_mov_to_lea16\n \n x86_64_mov_to_lea1.o: x86_64_mov_to_lea1.s\n \t$(TEST_AS) --64 -o $@ $<\n@@ -1142,6 +1145,10 @@ x86_64_mov_to_lea7.o: x86_64_mov_to_lea4.s\n \t$(TEST_AS) --x32 -o $@ $<\n x86_64_mov_to_lea8.o: x86_64_mov_to_lea4.s\n \t$(TEST_AS) --64 -o $@ $<\n+x86_64_mov_to_lea9.o: x86_64_mov_to_lea5.s\n+\t$(TEST_AS) --x32 -mrelax-relocations=yes -o $@ $<\n+x86_64_mov_to_lea10.o: x86_64_mov_to_lea5.s\n+\t$(TEST_AS) --64 -mrelax-relocations=yes -o $@ $<\n x86_64_mov_to_lea1: x86_64_mov_to_lea1.o ../ld-new\n \t../ld-new -Bsymbolic -shared -melf_x86_64 -o $@ $<\n x86_64_mov_to_lea2: x86_64_mov_to_lea1.o ../ld-new\n@@ -1170,6 +1177,10 @@ x86_64_mov_to_lea13: x86_64_mov_to_lea7.o ../ld-new\n \t../ld-new -melf32_x86_64 -shared -o $@ $<\n x86_64_mov_to_lea14: x86_64_mov_to_lea8.o ../ld-new\n \t../ld-new -melf_x86_64 -shared -o $@ $<\n+x86_64_mov_to_lea15: x86_64_mov_to_lea9.o ../ld-new\n+\t../ld-new -melf32_x86_64 -shared -o $@ $<\n+x86_64_mov_to_lea16: x86_64_mov_to_lea10.o ../ld-new\n+\t../ld-new -melf_x86_64 -shared -o $@ $<\n x86_64_mov_to_lea1.stdout: x86_64_mov_to_lea1\n \t$(TEST_OBJDUMP) -dw $< > $@\n x86_64_mov_to_lea2.stdout: x86_64_mov_to_lea2\n@@ -1198,6 +1209,10 @@ x86_64_mov_to_lea13.stdout: x86_64_mov_to_lea13\n \t$(TEST_OBJDUMP) -dw $< > $@\n x86_64_mov_to_lea14.stdout: x86_64_mov_to_lea14\n \t$(TEST_OBJDUMP) -dw $< > $@\n+x86_64_mov_to_lea15.stdout: x86_64_mov_to_lea15\n+\t$(TEST_OBJDUMP) -dw $< > $@\n+x86_64_mov_to_lea16.stdout: x86_64_mov_to_lea16\n+\t$(TEST_OBJDUMP) -dw $< > $@\n \n check_SCRIPTS += x86_64_indirect_call_to_direct.sh\n check_DATA += x86_64_indirect_call_to_direct1.stdout \\"
    },
    {
      "sha": "cad5af6bf57854fdd91ca8c765dbb1af5efbad99",
      "filename": "gold/testsuite/Makefile.in",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.in?ref=568cbddc710f6cb6be752f390a1521cd5556ad9b",
      "patch": "@@ -314,6 +314,8 @@ check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea12.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea13.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea14.stdout \\\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea15.stdout \\\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea16.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_call_to_direct1.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_jump_to_direct1.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_gd_to_le.stdout \\\n@@ -336,6 +338,8 @@ check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea12 \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea13 \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea14 \\\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea15 \\\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea16 \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_call_to_direct1 \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_jump_to_direct1 \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_gd_to_le \\\n@@ -8356,6 +8360,10 @@ uninstall-am:\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_AS) --x32 -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea8.o: x86_64_mov_to_lea4.s\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_AS) --64 -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea9.o: x86_64_mov_to_lea5.s\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_AS) --x32 -mrelax-relocations=yes -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea10.o: x86_64_mov_to_lea5.s\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_AS) --64 -mrelax-relocations=yes -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea1: x86_64_mov_to_lea1.o ../ld-new\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t../ld-new -Bsymbolic -shared -melf_x86_64 -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea2: x86_64_mov_to_lea1.o ../ld-new\n@@ -8384,6 +8392,10 @@ uninstall-am:\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t../ld-new -melf32_x86_64 -shared -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea14: x86_64_mov_to_lea8.o ../ld-new\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t../ld-new -melf_x86_64 -shared -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea15: x86_64_mov_to_lea9.o ../ld-new\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t../ld-new -melf32_x86_64 -shared -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea16: x86_64_mov_to_lea10.o ../ld-new\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t../ld-new -melf_x86_64 -shared -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea1.stdout: x86_64_mov_to_lea1\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_OBJDUMP) -dw $< > $@\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea2.stdout: x86_64_mov_to_lea2\n@@ -8412,6 +8424,10 @@ uninstall-am:\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_OBJDUMP) -dw $< > $@\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea14.stdout: x86_64_mov_to_lea14\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_OBJDUMP) -dw $< > $@\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea15.stdout: x86_64_mov_to_lea15\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_OBJDUMP) -dw $< > $@\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_mov_to_lea16.stdout: x86_64_mov_to_lea16\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_OBJDUMP) -dw $< > $@\n \n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_indirect_call_to_direct1.o: x86_64_indirect_call_to_direct1.s\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_AS) --64 -mrelax-relocations=yes -o $@ $<"
    },
    {
      "sha": "4e5c1434bf617ae1cee45fe08258be2da7727667",
      "filename": "gold/testsuite/x86_64_mov_to_lea.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/x86_64_mov_to_lea.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/x86_64_mov_to_lea.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/x86_64_mov_to_lea.sh?ref=568cbddc710f6cb6be752f390a1521cd5556ad9b",
      "patch": "@@ -38,5 +38,7 @@ grep -q \"mov    0x[a-f0-9]\\+(%rip),%rax\" x86_64_mov_to_lea11.stdout\n grep -q \"mov    0x[a-f0-9]\\+(%rip),%rax\" x86_64_mov_to_lea12.stdout\n grep -q \"lea    -0x[a-f0-9]\\+(%rip),%rax\" x86_64_mov_to_lea13.stdout\n grep -q \"lea    -0x[a-f0-9]\\+(%rip),%rax\" x86_64_mov_to_lea14.stdout\n+grep -q \"mov    0x[a-f0-9]\\+(%rip),%eax\" x86_64_mov_to_lea15.stdout\n+grep -q \"mov    0x[a-f0-9]\\+(%rip),%eax\" x86_64_mov_to_lea16.stdout\n \n exit 0"
    },
    {
      "sha": "e793a2b9b73706bce0b89c980c08b2d2242efbb0",
      "filename": "gold/testsuite/x86_64_mov_to_lea5.s",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/x86_64_mov_to_lea5.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/testsuite/x86_64_mov_to_lea5.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/x86_64_mov_to_lea5.s?ref=568cbddc710f6cb6be752f390a1521cd5556ad9b",
      "patch": "@@ -0,0 +1,12 @@\n+\t.text\n+\t.globl\tfoo\n+\t.hidden foo\n+\t.type\tfoo, @function\n+foo:\n+\tret\n+\t.size\tfoo, .-foo\n+\t.globl\t_start\n+\t.type\t_start, @function\n+_start:\n+\tmovl\tfoo@GOTPCREL+4(%rip), %eax\n+\t.size\t_start, .-_start"
    },
    {
      "sha": "ddf4722160bcf942429aac3baa923e4bc9b25ce8",
      "filename": "gold/x86_64.cc",
      "status": "modified",
      "additions": 67,
      "deletions": 50,
      "changes": 117,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/x86_64.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/568cbddc710f6cb6be752f390a1521cd5556ad9b/gold/x86_64.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/x86_64.cc?ref=568cbddc710f6cb6be752f390a1521cd5556ad9b",
      "patch": "@@ -3730,6 +3730,7 @@ Target_x86_64<size>::Scan::local(Symbol_table* symtab,\n \t    && (r_type == elfcpp::R_X86_64_GOTPCREL\n \t\t|| r_type == elfcpp::R_X86_64_GOTPCRELX\n \t\t|| r_type == elfcpp::R_X86_64_REX_GOTPCRELX)\n+\t    && reloc.get_r_addend() == -4\n \t    && reloc.get_r_offset() >= 2\n \t    && !is_ifunc)\n \t  {\n@@ -4200,6 +4201,7 @@ Target_x86_64<size>::Scan::global(Symbol_table* symtab,\n         Lazy_view<size> view(object, data_shndx);\n         size_t r_offset = reloc.get_r_offset();\n         if (!parameters->incremental()\n+\t    && reloc.get_r_addend() == -4\n \t    && r_offset >= 2\n             && Target_x86_64<size>::can_convert_mov_to_lea(gsym, r_type,\n                                                            r_offset, &view))\n@@ -4890,63 +4892,78 @@ Target_x86_64<size>::Relocate::relocate(\n     case elfcpp::R_X86_64_GOTPCRELX:\n     case elfcpp::R_X86_64_REX_GOTPCRELX:\n       {\n-      // Convert\n-      // mov foo@GOTPCREL(%rip), %reg\n-      // to lea foo(%rip), %reg.\n-      // if possible.\n-      if (!parameters->incremental()\n-\t  && ((gsym == NULL\n-\t       && rela.get_r_offset() >= 2\n-\t       && view[-2] == 0x8b\n-\t       && !psymval->is_ifunc_symbol())\n-\t      || (gsym != NULL\n-\t\t  && rela.get_r_offset() >= 2\n-\t\t  && Target_x86_64<size>::can_convert_mov_to_lea(gsym, r_type,\n-\t\t\t\t\t\t\t\t 0, &view))))\n-\t{\n-\t  view[-2] = 0x8d;\n-\t  Reloc_funcs::pcrela32(view, object, psymval, addend, address);\n-\t}\n-      // Convert\n-      // callq *foo@GOTPCRELX(%rip) to\n-      // addr32 callq foo\n-      // and jmpq *foo@GOTPCRELX(%rip) to\n-      // jmpq foo\n-      // nop\n-      else if (!parameters->incremental()\n-\t       && gsym != NULL\n-\t       && rela.get_r_offset() >= 2\n-\t       && Target_x86_64<size>::can_convert_callq_to_direct(gsym,\n-\t\t\t\t\t\t\t\t   r_type,\n-\t\t\t\t\t\t\t\t   0, &view))\n+      bool converted_p = false;\n+\n+      if (rela.get_r_addend() == -4)\n \t{\n-\t  if (view[-1] == 0x15)\n+\t  // Convert\n+\t  // mov foo@GOTPCREL(%rip), %reg\n+\t  // to lea foo(%rip), %reg.\n+\t  // if possible.\n+\t  if (!parameters->incremental()\n+\t      && ((gsym == NULL\n+\t\t   && rela.get_r_offset() >= 2\n+\t\t   && view[-2] == 0x8b\n+\t\t   && !psymval->is_ifunc_symbol())\n+\t\t  || (gsym != NULL\n+\t\t      && rela.get_r_offset() >= 2\n+\t\t      && Target_x86_64<size>::can_convert_mov_to_lea(gsym,\n+\t\t\t\t\t\t\t\t     r_type,\n+\t\t\t\t\t\t\t\t     0,\n+\t\t\t\t\t\t\t\t     &view))))\n \t    {\n-\t      // Convert callq *foo@GOTPCRELX(%rip) to addr32 callq.\n-\t      // Opcode of addr32 is 0x67 and opcode of direct callq is 0xe8.\n-\t      view[-2] = 0x67;\n-\t      view[-1] = 0xe8;\n-\t      // Convert GOTPCRELX to 32-bit pc relative reloc.\n+\t      view[-2] = 0x8d;\n \t      Reloc_funcs::pcrela32(view, object, psymval, addend, address);\n+\t      converted_p = true;\n \t    }\n-\t  else\n+\t  // Convert\n+\t  // callq *foo@GOTPCRELX(%rip) to\n+\t  // addr32 callq foo\n+\t  // and jmpq *foo@GOTPCRELX(%rip) to\n+\t  // jmpq foo\n+\t  // nop\n+\t  else if (!parameters->incremental()\n+\t\t   && gsym != NULL\n+\t\t   && rela.get_r_offset() >= 2\n+\t\t   && Target_x86_64<size>::can_convert_callq_to_direct(gsym,\n+\t\t\t\t\t\t\t\t       r_type,\n+\t\t\t\t\t\t\t\t       0,\n+\t\t\t\t\t\t\t\t       &view))\n \t    {\n-\t      // Convert jmpq *foo@GOTPCRELX(%rip) to\n-\t      // jmpq foo\n-\t      // nop\n-\t      // The opcode of direct jmpq is 0xe9.\n-\t      view[-2] = 0xe9;\n-\t      // The opcode of nop is 0x90.\n-\t      view[3] = 0x90;\n-\t      // Convert GOTPCRELX to 32-bit pc relative reloc.  jmpq is rip\n-\t      // relative and since the instruction following the jmpq is now\n-\t      // the nop, offset the address by 1 byte.  The start of the\n-              // relocation also moves ahead by 1 byte.\n-\t      Reloc_funcs::pcrela32(&view[-1], object, psymval, addend,\n-\t\t\t\t    address - 1);\n+\t      if (view[-1] == 0x15)\n+\t\t{\n+\t\t  // Convert callq *foo@GOTPCRELX(%rip) to addr32 callq.\n+\t\t  // Opcode of addr32 is 0x67 and opcode of direct callq\n+\t\t  // is 0xe8.\n+\t\t  view[-2] = 0x67;\n+\t\t  view[-1] = 0xe8;\n+\t\t  // Convert GOTPCRELX to 32-bit pc relative reloc.\n+\t\t  Reloc_funcs::pcrela32(view, object, psymval, addend,\n+\t\t\t\t\taddress);\n+\t\t  converted_p = true;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  // Convert jmpq *foo@GOTPCRELX(%rip) to\n+\t\t  // jmpq foo\n+\t\t  // nop\n+\t\t  // The opcode of direct jmpq is 0xe9.\n+\t\t  view[-2] = 0xe9;\n+\t\t  // The opcode of nop is 0x90.\n+\t\t  view[3] = 0x90;\n+\t\t  // Convert GOTPCRELX to 32-bit pc relative reloc.  jmpq\n+\t\t  // is rip relative and since the instruction following\n+\t\t  // the jmpq is now the nop, offset the address by 1\n+\t\t  // byte.  The start of the relocation also moves ahead\n+\t\t  // by 1 byte.\n+\t\t  Reloc_funcs::pcrela32(&view[-1], object, psymval, addend,\n+\t\t\t\t\taddress - 1);\n+\t\t  converted_p = true;\n+\t\t}\n \t    }\n \t}\n-      else\n+\n+      if (!converted_p)\n \t{\n \t  if (gsym != NULL)\n \t    {"
    }
  ]
}