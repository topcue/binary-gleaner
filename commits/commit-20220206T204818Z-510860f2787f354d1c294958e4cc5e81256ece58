{
  "sha": "510860f2787f354d1c294958e4cc5e81256ece58",
  "node_id": "C_kwDOANOeidoAKDUxMDg2MGYyNzg3ZjM1NGQxYzI5NDk1OGU0Y2M1ZTgxMjU2ZWNlNTg",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-20T02:35:17Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-02-06T20:48:18Z"
    },
    "message": "gdb: remove COMPUNIT_FILETABS macro\n\nI think that most remaining uses of COMPUNIT_FILETABS intend to get the\nprimary filetab of the compunit_symtab specifically (and not to iterate\nover all filetabs, for example, those cases would use compunit_filetabs,\nwhich has been converted to compunit_symtab::filetabs), so replace mosts\nuses with compunit_symtab::primary_filetab.\n\nIn jit.c, function finalize_symtab, we can save the symtab object\nreturned by allocate_symtab and use it, it makes things simpler.\n\nChange-Id: I4e51d6d4b40759de8768b61292e5e13c8eae2e38",
    "tree": {
      "sha": "12a7f08e5386b2986994665fe7c43b0eea80ade8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/12a7f08e5386b2986994665fe7c43b0eea80ade8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/510860f2787f354d1c294958e4cc5e81256ece58",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/510860f2787f354d1c294958e4cc5e81256ece58",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/510860f2787f354d1c294958e4cc5e81256ece58",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/510860f2787f354d1c294958e4cc5e81256ece58/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "102cc23543fc37b42c4814f594f130f862397178",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/102cc23543fc37b42c4814f594f130f862397178",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/102cc23543fc37b42c4814f594f130f862397178"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 24,
    "deletions": 24
  },
  "files": [
    {
      "sha": "855d84bd27a62e08864fd41aa2e84b3710e6e118",
      "filename": "gdb/buildsym.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/510860f2787f354d1c294958e4cc5e81256ece58/gdb/buildsym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/510860f2787f354d1c294958e4cc5e81256ece58/gdb/buildsym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym.c?ref=510860f2787f354d1c294958e4cc5e81256ece58",
      "patch": "@@ -1031,7 +1031,7 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n     int block_i;\n \n     /* The main source file's symtab.  */\n-    struct symtab *symtab = COMPUNIT_FILETABS (cu);\n+    struct symtab *symtab = cu->primary_filetab ();\n \n     for (block_i = 0; block_i < BLOCKVECTOR_NBLOCKS (blockvector); block_i++)\n       {\n@@ -1150,7 +1150,7 @@ set_missing_symtab (struct pending *pending_list,\n       for (i = 0; i < pending->nsyms; ++i)\n \t{\n \t  if (symbol_symtab (pending->symbol[i]) == NULL)\n-\t    symbol_set_symtab (pending->symbol[i], COMPUNIT_FILETABS (cu));\n+\t    symbol_set_symtab (pending->symbol[i], cu->primary_filetab ());\n \t}\n     }\n }"
    },
    {
      "sha": "7e62d11aa2cc71be999126cc4a0f46de76ad2965",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/510860f2787f354d1c294958e4cc5e81256ece58/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/510860f2787f354d1c294958e4cc5e81256ece58/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=510860f2787f354d1c294958e4cc5e81256ece58",
      "patch": "@@ -9477,8 +9477,8 @@ process_full_comp_unit (dwarf2_cu *cu, enum language pretend_language)\n \t compilation is from a C file generated by language preprocessors, do\n \t not set the language if it was already deduced by start_subfile.  */\n       if (!(cu->per_cu->lang == language_c\n-\t    && COMPUNIT_FILETABS (cust)->language != language_unknown))\n-\tCOMPUNIT_FILETABS (cust)->language = cu->per_cu->lang;\n+\t    && cust->primary_filetab ()->language != language_unknown))\n+\tcust->primary_filetab ()->language = cu->per_cu->lang;\n \n       /* GCC-4.0 has started to support -fvar-tracking.  GCC-3.x still can\n \t produce DW_AT_location with location lists but it can be possibly\n@@ -9562,8 +9562,8 @@ process_full_type_unit (dwarf2_cu *cu,\n \t     do not set the language if it was already deduced by\n \t     start_subfile.  */\n \t  if (!(cu->per_cu->lang == language_c\n-\t\t&& COMPUNIT_FILETABS (cust)->language != language_c))\n-\t    COMPUNIT_FILETABS (cust)->language = cu->per_cu->lang;\n+\t\t&& cust->primary_filetab ()->language != language_c))\n+\t    cust->primary_filetab ()->language = cu->per_cu->lang;\n \t}\n     }\n   else"
    },
    {
      "sha": "6366c7511e6b8e2b8bf33ca6d484f9a8d3d8cacb",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/510860f2787f354d1c294958e4cc5e81256ece58/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/510860f2787f354d1c294958e4cc5e81256ece58/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=510860f2787f354d1c294958e4cc5e81256ece58",
      "patch": "@@ -509,7 +509,7 @@ finalize_symtab (struct gdb_symtab *stab, struct objfile *objfile)\n     });\n \n   cust = allocate_compunit_symtab (objfile, stab->file_name.c_str ());\n-  allocate_symtab (cust, stab->file_name.c_str ());\n+  symtab *filetab = allocate_symtab (cust, stab->file_name.c_str ());\n   add_compunit_symtab_to_objfile (cust);\n \n   /* JIT compilers compile in memory.  */\n@@ -521,9 +521,9 @@ finalize_symtab (struct gdb_symtab *stab, struct objfile *objfile)\n       size_t size = ((stab->linetable->nitems - 1)\n \t\t     * sizeof (struct linetable_entry)\n \t\t     + sizeof (struct linetable));\n-      SYMTAB_LINETABLE (COMPUNIT_FILETABS (cust))\n+      SYMTAB_LINETABLE (filetab)\n \t= (struct linetable *) obstack_alloc (&objfile->objfile_obstack, size);\n-      memcpy (SYMTAB_LINETABLE (COMPUNIT_FILETABS (cust)),\n+      memcpy (SYMTAB_LINETABLE (filetab),\n \t      stab->linetable.get (), size);\n     }\n \n@@ -562,7 +562,7 @@ finalize_symtab (struct gdb_symtab *stab, struct objfile *objfile)\n       /* The name.  */\n       SYMBOL_DOMAIN (block_name) = VAR_DOMAIN;\n       SYMBOL_ACLASS_INDEX (block_name) = LOC_BLOCK;\n-      symbol_set_symtab (block_name, COMPUNIT_FILETABS (cust));\n+      symbol_set_symtab (block_name, filetab);\n       SYMBOL_TYPE (block_name) = lookup_function_type (block_type);\n       SYMBOL_BLOCK_VALUE (block_name) = new_block;\n "
    },
    {
      "sha": "d50251578338a48d303a459dc9a02edd2986418c",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/510860f2787f354d1c294958e4cc5e81256ece58/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/510860f2787f354d1c294958e4cc5e81256ece58/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=510860f2787f354d1c294958e4cc5e81256ece58",
      "patch": "@@ -1179,7 +1179,7 @@ iterate_over_all_matching_symtabs\n \n \t  for (compunit_symtab *cu : objfile->compunits ())\n \t    {\n-\t      struct symtab *symtab = COMPUNIT_FILETABS (cu);\n+\t      struct symtab *symtab = cu->primary_filetab ();\n \n \t      iterate_over_file_blocks (symtab, lookup_name, name_domain,\n \t\t\t\t\tcallback);"
    },
    {
      "sha": "836da8a3b8caa7360a40c5fbe32a2ff4738a737a",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/510860f2787f354d1c294958e4cc5e81256ece58/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/510860f2787f354d1c294958e4cc5e81256ece58/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=510860f2787f354d1c294958e4cc5e81256ece58",
      "patch": "@@ -4084,17 +4084,17 @@ mdebug_expand_psymtab (legacy_psymtab *pst, struct objfile *objfile)\n \n \t  /* The proper language was already determined when building\n \t     the psymtab, use it.  */\n-\t  COMPUNIT_FILETABS (cust)->language = PST_PRIVATE (pst)->pst_language;\n+\t  cust->primary_filetab ()->language = PST_PRIVATE (pst)->pst_language;\n \t}\n \n-      psymtab_language = COMPUNIT_FILETABS (cust)->language;\n+      psymtab_language = cust->primary_filetab ()->language;\n \n-      lines = SYMTAB_LINETABLE (COMPUNIT_FILETABS (cust));\n+      lines = SYMTAB_LINETABLE (cust->primary_filetab ());\n \n       /* Get a new lexical context.  */\n \n       push_parse_stack ();\n-      top_stack->cur_st = COMPUNIT_FILETABS (cust);\n+      top_stack->cur_st = cust->primary_filetab ();\n       top_stack->cur_block\n \t= BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cust), STATIC_BLOCK);\n       BLOCK_START (top_stack->cur_block) = pst->text_low (objfile);\n@@ -4173,7 +4173,7 @@ mdebug_expand_psymtab (legacy_psymtab *pst, struct objfile *objfile)\n       size = lines->nitems;\n       if (size > 1)\n \t--size;\n-      SYMTAB_LINETABLE (COMPUNIT_FILETABS (cust))\n+      SYMTAB_LINETABLE (cust->primary_filetab ())\n \t= ((struct linetable *)\n \t   obstack_copy (&mdebugread_objfile->objfile_obstack,\n \t\t\t lines, (sizeof (struct linetable)\n@@ -4183,7 +4183,7 @@ mdebug_expand_psymtab (legacy_psymtab *pst, struct objfile *objfile)\n       /* .. and our share of externals.\n \t XXX use the global list to speed up things here.  How?\n \t FIXME, Maybe quit once we have found the right number of ext's?  */\n-      top_stack->cur_st = COMPUNIT_FILETABS (cust);\n+      top_stack->cur_st = cust->primary_filetab ();\n       top_stack->cur_block\n \t= BLOCKVECTOR_BLOCK (SYMTAB_BLOCKVECTOR (top_stack->cur_st),\n \t\t\t     GLOBAL_BLOCK);\n@@ -4201,7 +4201,7 @@ mdebug_expand_psymtab (legacy_psymtab *pst, struct objfile *objfile)\n \t{\n \t  printf_filtered (_(\"File %s contains %d unresolved references:\"),\n \t\t\t   symtab_to_filename_for_display\n-\t\t\t     (COMPUNIT_FILETABS (cust)),\n+\t\t\t     (cust->primary_filetab ()),\n \t\t\t   n_undef_symbols);\n \t  printf_filtered (\"\\n\\t%4d variables\\n\\t%4d \"\n \t\t\t   \"procedures\\n\\t%4d labels\\n\",\n@@ -4211,7 +4211,7 @@ mdebug_expand_psymtab (legacy_psymtab *pst, struct objfile *objfile)\n \t}\n       pop_parse_stack ();\n \n-      sort_blocks (COMPUNIT_FILETABS (cust));\n+      sort_blocks (cust->primary_filetab ());\n     }\n \n   /* Now link the psymtab and the symtab.  */"
    },
    {
      "sha": "61e3eff562e50378555e0d63c3569a4e693e329b",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/510860f2787f354d1c294958e4cc5e81256ece58/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/510860f2787f354d1c294958e4cc5e81256ece58/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=510860f2787f354d1c294958e4cc5e81256ece58",
      "patch": "@@ -329,8 +329,9 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n     }\n   else\n     {\n+      compunit_symtab *compunit = SYMTAB_COMPUNIT (symtab);\n       const char *compunit_filename\n-\t= symtab_to_filename_for_display (COMPUNIT_FILETABS (SYMTAB_COMPUNIT (symtab)));\n+\t= symtab_to_filename_for_display (compunit->primary_filetab ());\n \n       fprintf_filtered (outfile,\n \t\t\t\"\\nBlockvector same as owning compunit: %s\\n\\n\",\n@@ -346,7 +347,7 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n       if (cust->user != nullptr)\n \t{\n \t  const char *addr\n-\t    = host_address_to_string (COMPUNIT_FILETABS (cust->user));\n+\t    = host_address_to_string (cust->user->primary_filetab ());\n \t  fprintf_filtered (outfile, \"Compunit user: %s\\n\", addr);\n \t}\n       if (cust->includes != nullptr)\n@@ -356,7 +357,7 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n \t    if (include == nullptr)\n \t      break;\n \t    const char *addr\n-\t      = host_address_to_string (COMPUNIT_FILETABS (include));\n+\t      = host_address_to_string (include->primary_filetab ());\n \t    fprintf_filtered (outfile, \"Compunit include: %s\\n\", addr);\n \t  }\n     }"
    },
    {
      "sha": "45d4bc4dc2998b3c2be74431cde0029fb365e9ce",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/510860f2787f354d1c294958e4cc5e81256ece58/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/510860f2787f354d1c294958e4cc5e81256ece58/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=510860f2787f354d1c294958e4cc5e81256ece58",
      "patch": "@@ -1577,7 +1577,6 @@ struct compunit_symtab\n \n using compunit_symtab_range = next_range<compunit_symtab>;\n \n-#define COMPUNIT_FILETABS(cust) (*(cust)->filetabs ().begin ())\n #define COMPUNIT_DEBUGFORMAT(cust) ((cust)->debugformat)\n #define COMPUNIT_PRODUCER(cust) ((cust)->producer)\n #define COMPUNIT_DIRNAME(cust) ((cust)->dirname)\n@@ -1596,7 +1595,7 @@ extern enum language compunit_language (const struct compunit_symtab *cust);\n static inline bool\n is_main_symtab_of_compunit_symtab (struct symtab *symtab)\n {\n-  return symtab == COMPUNIT_FILETABS (SYMTAB_COMPUNIT (symtab));\n+  return symtab == SYMTAB_COMPUNIT (symtab)->primary_filetab ();\n }\n \f\n "
    }
  ]
}