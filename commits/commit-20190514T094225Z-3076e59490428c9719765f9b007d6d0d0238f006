{
  "sha": "3076e59490428c9719765f9b007d6d0d0238f006",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzA3NmU1OTQ5MDQyOGM5NzE5NzY1ZjliMDA3ZDZkMGQwMjM4ZjAwNg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-05-10T15:57:31Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-05-14T09:42:25Z"
    },
    "message": "A series of fixes to addres problems detected by compiling the assembler with address sanitization enabled.\n\n\tPR 24538\ngas\t* macro.c (get_any_string): Increase size of buffer used to hold\n\tdecimal value of expression result.\n\t* dw2gencfi.c (get_debugseg_name): Handle an empty name.\n\t* dwarf2dbg.c (get_filenum): Catch integer wraparound when\n\textending allocate file array.\n\t(dwarf2_directive_filename): Add extra checks of the computed file\n\tnumber.\n\t* config/tc-arm.c (arm_tc_equal_in_insn): Insert copy of name into\n\twarning hash table.\n\t(s_arm_eabi_attribute): Check for obj_elf_vendor_attribute\n\treturning -1.\n\t* config/tc-i386.c (i386_output_nops): Catch an attempt to\n\tgenerate nops of negative lengths.\n\t* as.h (MAX_LITTLENUMS): Move definition to here from...\n\t* config/atof-ieee.c: ...here.\n\t* config/tc-aarch64.c: ...here.\n\t* config/tc-arc.c: ...here.\n\t* config/tc-arm.c: ...here.\n\t* config/tc-epiphany.c: ...here.\n\t* config/tc-i386.c: ...here.\n\t* config/tc-ia64.c: ...here.  (And correct the value).\n\t* config/tc-m32c.c: ...here.\n\t* config/tc-m32r.c: ...here.\n\t* config/tc-metag.c: ...here.\n\t* config/tc-microblaze.c: ...here.\n\t* config/tc-nds32.c: ...here.\n\t* config/tc-or1k.c: ...here.\n\t* config/tc-score.c: ...here.\n\t* config/tc-score7.c: ...here.\n\t* config/tc-tic4x.c: ...here.\n\t* config/tc-tilegx.c: ...here.\n\t* config/tc-tilepro.c: ...here.\n\t* config/tc-visium.c: ...here.\n\t* config/tc-sh.c (md_assemble): Add check for an instruction with\n\tno opcodes.\n\t* config/tc-mips.c (mips_lookup_insn): Add check for very short\n\tinstruction name.\n\t* config/tc-tic54x.c: Use unsigned chars to access is_end_of_line\n\tarray.\n\t(tic54x_start_line_hook): Check for an empty line.\n\t(next_line_shows_parallel): Do not walk off the end of the string.\n\t(tic54x_macro_start): Check for too much macro nesting.\n\t(tic54x_start_label): Add label_start parameter.  Use this\n\tparameter to check the first character of the label.\n\t* config/tc-tic54x.h (TC_START_LABEL_WITHOUT_COLON): Pass\n\tline_start variable to tic54x_start_label.\n\n\tPR 24538\nopcodes\t* ia64-opc.c (ia64_find_matching_opcode): Check for reaching the\n\tend of the table prematurely.",
    "tree": {
      "sha": "cf5af362a3a1e16f2df44961241dc9b4d1cab77f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cf5af362a3a1e16f2df44961241dc9b4d1cab77f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3076e59490428c9719765f9b007d6d0d0238f006",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3076e59490428c9719765f9b007d6d0d0238f006",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3076e59490428c9719765f9b007d6d0d0238f006",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3076e59490428c9719765f9b007d6d0d0238f006/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a6d0f2490c0c7969eb60038f01c0ee0f46e4d5fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a6d0f2490c0c7969eb60038f01c0ee0f46e4d5fd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a6d0f2490c0c7969eb60038f01c0ee0f46e4d5fd"
    }
  ],
  "stats": {
    "total": 317,
    "additions": 178,
    "deletions": 139
  },
  "files": [
    {
      "sha": "57be17561fc5fd30af9ba0eeb76149bce974ad3d",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1,3 +1,54 @@\n+2019-05-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24538\n+\t* macro.c (get_any_string): Increase size of buffer used to hold\n+\tdecimal value of expression result.\n+\t* dw2gencfi.c (get_debugseg_name): Handle an empty name.\n+\t* dwarf2dbg.c (get_filenum): Catch integer wraparound when\n+\textending allocate file array.\n+\t(dwarf2_directive_filename): Add extra checks of the computed file\n+\tnumber.\n+\t* config/tc-arm.c (arm_tc_equal_in_insn): Insert copy of name into\n+\twarning hash table.\n+\t(s_arm_eabi_attribute): Check for obj_elf_vendor_attribute\n+\treturning -1.\n+\t* config/tc-i386.c (i386_output_nops): Catch an attempt to\n+\tgenerate nops of negative lengths.\n+\t* as.h (MAX_LITTLENUMS): Move definition to here from...\n+\t* config/atof-ieee.c: ...here.\n+\t* config/tc-aarch64.c: ...here.\n+\t* config/tc-arc.c: ...here.\n+\t* config/tc-arm.c: ...here.\n+\t* config/tc-epiphany.c: ...here.\n+\t* config/tc-i386.c: ...here.\n+\t* config/tc-ia64.c: ...here.  (And correct the value).\n+\t* config/tc-m32c.c: ...here.\n+\t* config/tc-m32r.c: ...here.\n+\t* config/tc-metag.c: ...here.\n+\t* config/tc-microblaze.c: ...here.\n+\t* config/tc-nds32.c: ...here.\n+\t* config/tc-or1k.c: ...here.\n+\t* config/tc-score.c: ...here.\n+\t* config/tc-score7.c: ...here.\n+\t* config/tc-tic4x.c: ...here.\n+\t* config/tc-tilegx.c: ...here.\n+\t* config/tc-tilepro.c: ...here.\n+\t* config/tc-visium.c: ...here.\n+\t* config/tc-sh.c (md_assemble): Add check for an instruction with\n+\tno opcodes.\n+\t* config/tc-mips.c (mips_lookup_insn): Add check for very short\n+\tinstruction name.\n+\t* config/tc-tic54x.c: Use unsigned chars to access is_end_of_line\n+\tarray.\n+\t(tic54x_start_line_hook): Check for an empty line.\n+\t(next_line_shows_parallel): Do not walk off the end of the string.\n+\t(tic54x_macro_start): Check for too much macro nesting.\n+\t(tic54x_start_label): Add label_start parameter.  Use this\n+\tparameter to check the first character of the label.\n+\n+\t* config/tc-tic54x.h (TC_START_LABEL_WITHOUT_COLON): Pass\n+\tline_start variable to tic54x_start_label.\n+\n 2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n \n \t* config/tc-mips.c (macro) <M_ADD_I, M_SUB_I, M_DADD_I, M_DSUB_I>:"
    },
    {
      "sha": "96b551eded36cac858093bc2ff7fc0c678125207",
      "filename": "gas/as.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/as.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/as.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/as.h?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -479,6 +479,10 @@ void   as_bad_value_out_of_range (const char *, offsetT, offsetT, offsetT,\n \t\t\t\t  const char *, unsigned);\n void   print_version_id (void);\n char * app_push (void);\n+\n+/* Number of littlenums required to hold an extended precision number.\t*/\n+#define MAX_LITTLENUMS 6\n+\n char * atof_ieee (char *, int, LITTLENUM_TYPE *);\n const char * ieee_md_atof (int, char *, int *, bfd_boolean);\n const char * vax_md_atof (int, char *, int *);"
    },
    {
      "sha": "9bb9e55d26658a8d3b34d424a17062fb2074618b",
      "filename": "gas/config/atof-ieee.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/atof-ieee.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/atof-ieee.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/atof-ieee.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -695,8 +695,6 @@ print_gen (gen)\n }\n #endif\n \n-#define MAX_LITTLENUMS 6\n-\n /* This is a utility function called from various tc-*.c files.  It\n    is here in order to reduce code duplication.\n "
    },
    {
      "sha": "1f8d94ea1e295782402d0deda298e18627332dd3",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -238,9 +238,6 @@ set_fatal_syntax_error (const char *error)\n   set_error (AARCH64_OPDE_FATAL_SYNTAX_ERROR, error);\n }\n \f\n-/* Number of littlenums required to hold an extended precision number.  */\n-#define MAX_LITTLENUMS 6\n-\n /* Return value for certain parsers when the parsing fails; those parsers\n    return the information of the parsed result, e.g. register number, on\n    success.  */"
    },
    {
      "sha": "c1d5ea3d47024d8b2da74be4e25e19ea8edbcd19",
      "filename": "gas/config/tc-arc.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-arc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-arc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arc.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -48,9 +48,6 @@\n #define LP_INSN(x)\t ((MAJOR_OPCODE (x) == 0x4) \\\n \t\t\t  && (SUB_OPCODE (x) == 0x28))\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\n-\n #ifndef TARGET_WITH_CPU\n #define TARGET_WITH_CPU \"arc700\"\n #endif /* TARGET_WITH_CPU */"
    },
    {
      "sha": "2ec3ea04465c37b7dc3e55a63d0dc1a6b626ecb7",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -528,9 +528,6 @@ const char * fp_const[] =\n   \"0.0\", \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"0.5\", \"10.0\", 0\n };\n \n-/* Number of littlenums required to hold an extended precision number.\t*/\n-#define MAX_LITTLENUMS 6\n-\n LITTLENUM_TYPE fp_values[NUM_FLOAT_VALS][MAX_LITTLENUMS];\n \n #define FAIL\t(-1)\n@@ -4746,7 +4743,7 @@ s_arm_eabi_attribute (int ignored ATTRIBUTE_UNUSED)\n {\n   int tag = obj_elf_vendor_attribute (OBJ_ATTR_PROC);\n \n-  if (tag < NUM_KNOWN_OBJ_ATTRIBUTES)\n+  if (tag >= 0 && tag < NUM_KNOWN_OBJ_ATTRIBUTES)\n     attributes_set_explicitly[tag] = 1;\n }\n \n@@ -23436,7 +23433,7 @@ arm_tc_equal_in_insn (int c ATTRIBUTE_UNUSED, char * name)\n \t    already_warned = hash_new ();\n \t  /* Only warn about the symbol once.  To keep the code\n \t     simple we let hash_insert do the lookup for us.  */\n-\t  if (hash_insert (already_warned, name, NULL) == NULL)\n+\t  if (hash_insert (already_warned, nbuf, NULL) == NULL)\n \t    as_warn (_(\"[-mwarn-syms]: Assignment makes a symbol match an ARM instruction: %s\"), name);\n \t}\n       else"
    },
    {
      "sha": "ca24520ffefc76f6e425e25c9bd8e014ab2cb30f",
      "filename": "gas/config/tc-epiphany.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-epiphany.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-epiphany.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-epiphany.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1008,9 +1008,6 @@ md_cgen_lookup_reloc (const CGEN_INSN *insn ATTRIBUTE_UNUSED,\n    of LITTLENUMS emitted is stored in *SIZEP.  An error message is\n    returned, or NULL on OK.  */\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\n-\n const char *\n md_atof (int type, char *litP, int *sizeP)\n {"
    },
    {
      "sha": "08dd9963e1c089dea70d358bdad9b17137d81a0a",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1299,7 +1299,16 @@ i386_output_nops (char *where, const unsigned char *const *patt,\n   /* Place the longer NOP first.  */\n   int last;\n   int offset;\n-  const unsigned char *nops =  patt[max_single_nop_size - 1];\n+  const unsigned char *nops;\n+\n+  if (max_single_nop_size < 1)\n+    {\n+      as_fatal (_(\"i386_output_nops called to generate nops of at most %d bytes!\"),\n+\t\tmax_single_nop_size);\n+      return;\n+    }\n+\n+  nops = patt[max_single_nop_size - 1];\n \n   /* Use the smaller one if the requsted one isn't available.  */\n   if (nops == NULL)"
    },
    {
      "sha": "8f25e557e09203385e19766c8aa67d7c3964574c",
      "filename": "gas/config/tc-ia64.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ia64.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -11570,8 +11570,6 @@ tc_gen_reloc (asection *sec ATTRIBUTE_UNUSED, fixS *fixp)\n    of LITTLENUMS emitted is stored in *SIZE.  An error message is\n    returned, or NULL on OK.  */\n \n-#define MAX_LITTLENUMS 5\n-\n const char *\n md_atof (int type, char *lit, int *size)\n {"
    },
    {
      "sha": "851d4c1971a8aea6d0daa45c90a70aef02f007da",
      "filename": "gas/config/tc-m32c.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-m32c.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-m32c.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-m32c.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1135,9 +1135,6 @@ md_number_to_chars (char * buf, valueT val, int n)\n    type, and store the appropriate bytes in *litP.  The number of LITTLENUMS\n    emitted is stored in *sizeP .  An error message is returned, or NULL on OK.  */\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\n-\n const char *\n md_atof (int type, char * litP, int * sizeP)\n {"
    },
    {
      "sha": "c20cb72ce177fb251c814678565661f88d6e4825",
      "filename": "gas/config/tc-m32r.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-m32r.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-m32r.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-m32r.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -2103,9 +2103,6 @@ md_number_to_chars (char *buf, valueT val, int n)\n    of LITTLENUMS emitted is stored in *SIZEP.  An error message is\n    returned, or NULL on OK.  */\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\n-\n const char *\n md_atof (int type, char *litP, int *sizeP)\n {"
    },
    {
      "sha": "c7bb36d5b9c57b80d8e17456506e9a5ebc999eba",
      "filename": "gas/config/tc-metag.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-metag.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-metag.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-metag.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -6705,9 +6705,6 @@ md_number_to_chars (char * buf, valueT val, int n)\n    emitted is stored in *sizeP .  An error message is returned, or NULL on OK.\n */\n \n-/* Equal to MAX_PRECISION in atof-ieee.c */\n-#define MAX_LITTLENUMS 6\n-\n const char *\n md_atof (int type, char * litP, int * sizeP)\n {"
    },
    {
      "sha": "c9ab452b3e8f1067b665fdd1785d8d63be2a8b89",
      "filename": "gas/config/tc-microblaze.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-microblaze.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-microblaze.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-microblaze.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1766,13 +1766,10 @@ md_undefined_symbol (char * name ATTRIBUTE_UNUSED)\n   return NULL;\n }\n \n-/* Various routines to kill one day.  */\n-/* Equal to MAX_PRECISION in atof-ieee.c */\n-#define MAX_LITTLENUMS 6\n-\n /* Turn a string in input_line_pointer into a floating point constant of type\n    type, and store the appropriate bytes in *litP.  The number of LITTLENUMS\n    emitted is stored in *sizeP.  An error message is returned, or NULL on OK.*/\n+\n const char *\n md_atof (int type, char * litP, int * sizeP)\n {"
    },
    {
      "sha": "1c5dc7a8830b8c71eee78a6feb5b8c65058a52a5",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -14250,7 +14250,7 @@ mips_lookup_insn (struct hash_control *hash, const char *start,\n       opend = dot != NULL ? dot - name : length;\n       if (opend >= 3 && name[opend - 2] == '1' && name[opend - 1] == '6')\n \tsuffix = 2;\n-      else if (name[opend - 2] == '3' && name[opend - 1] == '2')\n+      else if (opend >= 2 && name[opend - 2] == '3' && name[opend - 1] == '2')\n \tsuffix = 4;\n       else\n \tsuffix = 0;"
    },
    {
      "sha": "d01ca3d20261145743e8be1d2ff8d4dbcf3c18fc",
      "filename": "gas/config/tc-nds32.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-nds32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-nds32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nds32.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -7316,9 +7316,6 @@ md_number_to_chars (char *buf, valueT val, int n)\n     number_to_chars_littleendian (buf, val, n);\n }\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\n-\n /* This function is called to convert an ASCII string into a floating point\n    value in format used by the CPU.  */\n "
    },
    {
      "sha": "28fa7c50104e861b2fe360347c13201cc121998b",
      "filename": "gas/config/tc-or1k.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-or1k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-or1k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-or1k.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -275,9 +275,6 @@ md_number_to_chars (char * buf, valueT val, int n)\n    type, and store the appropriate bytes in *litP.  The number of LITTLENUMS\n    emitted is stored in *sizeP .  An error message is returned, or NULL on OK.  */\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\n-\n const char *\n md_atof (int type, char * litP, int *  sizeP)\n {"
    },
    {
      "sha": "648e0d22ebb1244c59d2e9d9289916c03d3b325d",
      "filename": "gas/config/tc-score.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-score.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-score.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -300,7 +300,6 @@ size_t md_longopts_size = sizeof (md_longopts);\n                              ? s3_INSN16_SIZE : (s3_GET_INSN_CLASS (type) == INSN_CLASS_48) \\\n                                              ? s3_INSN48_SIZE : s3_INSN_SIZE)\n \n-#define s3_MAX_LITTLENUMS 6\n #define s3_INSN_NAME_LEN 16\n \n /* Relax will need some padding for alignment.  */\n@@ -6657,7 +6656,7 @@ static const char *\n s3_atof (int type, char *litP, int *sizeP)\n {\n   int prec;\n-  LITTLENUM_TYPE words[s3_MAX_LITTLENUMS];\n+  LITTLENUM_TYPE words[MAX_LITTLENUMS];\n   char *t;\n   int i;\n "
    },
    {
      "sha": "90cd5e3962d8f27ed2b5b81d55017d6cb7191459",
      "filename": "gas/config/tc-score7.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-score7.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-score7.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score7.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -142,7 +142,6 @@ static void s7_do_lw_pic (char *);\n #define s7_GET_INSN_SIZE(type) ((s7_GET_INSN_CLASS (type) == INSN_CLASS_16) \\\n                              ? s7_INSN16_SIZE : s7_INSN_SIZE)\n \n-#define s7_MAX_LITTLENUMS 6\n #define s7_INSN_NAME_LEN 16\n \n /* Relax will need some padding for alignment.  */\n@@ -6209,7 +6208,7 @@ static const char *\n s7_atof (int type, char *litP, int *sizeP)\n {\n   int prec;\n-  LITTLENUM_TYPE words[s7_MAX_LITTLENUMS];\n+  LITTLENUM_TYPE words[MAX_LITTLENUMS];\n   char *t;\n   int i;\n "
    },
    {
      "sha": "c9d47df9f6e9be777911ac43fd2a27d0f5f4b6b9",
      "filename": "gas/config/tc-sh.c",
      "status": "modified",
      "additions": 12,
      "deletions": 18,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-sh.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-sh.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-sh.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -2525,37 +2525,31 @@ md_assemble (char *str)\n       char *name = initial_str;\n       int name_length = 0;\n       const sh_opcode_info *op;\n-      int found = 0;\n+      bfd_boolean found = FALSE;\n \n-      /* identify opcode in string */\n+      /* Identify opcode in string.  */\n       while (ISSPACE (*name))\n-\t{\n-\t  name++;\n-\t}\n-      while (!ISSPACE (name[name_length]))\n-\t{\n-\t  name_length++;\n-\t}\n+\tname++;\n+\n+      while (name[name_length] != '\\0' && !ISSPACE (name[name_length]))\n+\tname_length++;\n \n-      /* search for opcode in full list */\n+      /* Search for opcode in full list.  */\n       for (op = sh_table; op->name; op++)\n \t{\n \t  if (strncasecmp (op->name, name, name_length) == 0\n \t      && op->name[name_length] == '\\0')\n \t    {\n-\t      found = 1;\n+\t      found = TRUE;\n \t      break;\n \t    }\n \t}\n \n-      if ( found )\n-\t{\n-\t  as_bad (_(\"opcode not valid for this cpu variant\"));\n-\t}\n+      if (found)\n+\tas_bad (_(\"opcode not valid for this cpu variant\"));\n       else\n-\t{\n-\t  as_bad (_(\"unknown opcode\"));\n-\t}\n+\tas_bad (_(\"unknown opcode\"));\n+\n       return;\n     }\n "
    },
    {
      "sha": "f20d93b5b1607b069bb8f4b1896efd637fdefdcb",
      "filename": "gas/config/tc-tic4x.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tic4x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tic4x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic4x.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -52,9 +52,6 @@\n \n #define TIC4X_ALT_SYNTAX\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\t/* (12 bytes) */\n-\n /* Handle of the inst mnemonic hash table.  */\n static struct hash_control *tic4x_op_hash = NULL;\n \n@@ -2487,7 +2484,8 @@ md_assemble (char *str)\n                 first_inst = inst;\n               ok = 0;\n             }\n-      } while (!ok && !strcmp (inst->name, inst[1].name) && inst++);\n+\t}\n+      while (!ok && !strcmp (inst->name, inst[1].name) && inst++);\n \n       if (ok > 0)\n         {"
    },
    {
      "sha": "6e2b05d39b83f4d3bb9e38edb24455aecc81e987",
      "filename": "gas/config/tc-tic54x.c",
      "status": "modified",
      "additions": 36,
      "deletions": 32,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tic54x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tic54x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic54x.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -185,7 +185,8 @@ static struct hash_control *subsym_recurse_hash; /* Prevent infinite recurse.  *\n static struct hash_control *math_hash; /* Built-in math functions.  */\n /* Allow maximum levels of macro nesting; level 0 is the main substitution\n    symbol table.  The other assembler only does 32 levels, so there!  */\n-static struct hash_control *subsym_hash[100];\n+#define MAX_SUBSYM_HASH 100\n+static struct hash_control *subsym_hash[MAX_SUBSYM_HASH];\n \n /* Keep track of local labels so we can substitute them before GAS sees them\n    since macros use their own 'namespace' for local labels, use a separate hash\n@@ -336,7 +337,7 @@ tic54x_asg (int x ATTRIBUTE_UNUSED)\n       str = input_line_pointer;\n       while ((c = *input_line_pointer) != ',')\n \t{\n-\t  if (is_end_of_line[(int) *input_line_pointer])\n+\t  if (is_end_of_line[(unsigned char) c])\n \t    break;\n \t  ++input_line_pointer;\n \t}\n@@ -645,7 +646,7 @@ tic54x_struct (int arg)\n     {\n       /* Offset is ignored in inner structs.  */\n       SKIP_WHITESPACE ();\n-      if (!is_end_of_line[(int) *input_line_pointer])\n+      if (!is_end_of_line[(unsigned char) *input_line_pointer])\n \tstart_offset = get_absolute_expression ();\n       else\n \tstart_offset = 0;\n@@ -835,7 +836,7 @@ tic54x_struct_field (int type)\n   int longword_align = 0;\n \n   SKIP_WHITESPACE ();\n-  if (!is_end_of_line[(int) *input_line_pointer])\n+  if (!is_end_of_line[(unsigned char) *input_line_pointer])\n     count = get_absolute_expression ();\n \n   switch (type)\n@@ -1105,7 +1106,7 @@ tic54x_global (int type)\n       if (c == ',')\n \t{\n \t  input_line_pointer++;\n-\t  if (is_end_of_line[(int) *input_line_pointer])\n+\t  if (is_end_of_line[(unsigned char) *input_line_pointer])\n \t    c = *input_line_pointer;\n \t}\n     }\n@@ -1487,7 +1488,7 @@ tic54x_version (int x ATTRIBUTE_UNUSED)\n \n   SKIP_WHITESPACE ();\n   ver = input_line_pointer;\n-  while (!is_end_of_line[(int) *input_line_pointer])\n+  while (!is_end_of_line[(unsigned char) *input_line_pointer])\n     ++input_line_pointer;\n   c = *input_line_pointer;\n   *input_line_pointer = 0;\n@@ -1645,7 +1646,7 @@ tic54x_align_words (int arg)\n   /* Only \".align\" with no argument is allowed within .struct/.union.  */\n   int count = arg;\n \n-  if (!is_end_of_line[(int) *input_line_pointer])\n+  if (!is_end_of_line[(unsigned char) *input_line_pointer])\n     {\n       if (arg == 2)\n \tas_warn (_(\"Argument to .even ignored\"));\n@@ -1913,7 +1914,7 @@ tic54x_include (int ignored ATTRIBUTE_UNUSED)\n   else\n     {\n       filename = input_line_pointer;\n-      while (!is_end_of_line[(int) *input_line_pointer])\n+      while (!is_end_of_line[(unsigned char) *input_line_pointer])\n \t++input_line_pointer;\n       c = *input_line_pointer;\n       *input_line_pointer = '\\0';\n@@ -1949,7 +1950,7 @@ tic54x_message (int type)\n   else\n     {\n       msg = input_line_pointer;\n-      while (!is_end_of_line[(int) *input_line_pointer])\n+      while (!is_end_of_line[(unsigned char) *input_line_pointer])\n \t++input_line_pointer;\n       c = *input_line_pointer;\n       *input_line_pointer = 0;\n@@ -2027,7 +2028,7 @@ tic54x_loop (int count)\n   ILLEGAL_WITHIN_STRUCT ();\n \n   SKIP_WHITESPACE ();\n-  if (!is_end_of_line[(int) *input_line_pointer])\n+  if (!is_end_of_line[(unsigned char) *input_line_pointer])\n     count = get_absolute_expression ();\n \n   do_repeat ((size_t) count, \"LOOP\", \"ENDLOOP\");\n@@ -2052,7 +2053,7 @@ tic54x_break (int ignore ATTRIBUTE_UNUSED)\n   ILLEGAL_WITHIN_STRUCT ();\n \n   SKIP_WHITESPACE ();\n-  if (!is_end_of_line[(int) *input_line_pointer])\n+  if (!is_end_of_line[(unsigned char) *input_line_pointer])\n     cond = get_absolute_expression ();\n \n   if (cond)\n@@ -2140,7 +2141,7 @@ tic54x_sblock (int ignore ATTRIBUTE_UNUSED)\n       seg->flags |= SEC_TIC54X_BLOCK;\n \n       c = *input_line_pointer;\n-      if (!is_end_of_line[(int) c])\n+      if (!is_end_of_line[(unsigned char) c])\n \t++input_line_pointer;\n     }\n \n@@ -2239,7 +2240,7 @@ tic54x_var (int ignore ATTRIBUTE_UNUSED)\n       if (c == ',')\n \t{\n \t  ++input_line_pointer;\n-\t  if (is_end_of_line[(int) *input_line_pointer])\n+\t  if (is_end_of_line[(unsigned char) *input_line_pointer])\n \t    c = *input_line_pointer;\n \t}\n     }\n@@ -2275,7 +2276,7 @@ tic54x_mlib (int ignore ATTRIBUTE_UNUSED)\n     {\n       SKIP_WHITESPACE ();\n       len = 0;\n-      while (!is_end_of_line[(int) *input_line_pointer]\n+      while (!is_end_of_line[(unsigned char) *input_line_pointer]\n \t     && !ISSPACE (*input_line_pointer))\n \t{\n \t  obstack_1grow (&notes, *input_line_pointer);\n@@ -2497,7 +2498,11 @@ md_parse_option (int c, const char *arg)\n void\n tic54x_macro_start (void)\n {\n-  ++macro_level;\n+  if (++macro_level >= MAX_SUBSYM_HASH)\n+    {\n+      as_fatal (_(\"Macro nesting is too deep\"));\n+      return;\n+    }\n   subsym_hash[macro_level] = hash_new ();\n   local_label_hash[macro_level] = hash_new ();\n }\n@@ -3081,7 +3086,7 @@ get_operands (struct opstruct operands[], char *line)\n   int expecting_operand = 0;\n   int i;\n \n-  while (numexp < MAX_OPERANDS && !is_end_of_line[(int) *lptr])\n+  while (numexp < MAX_OPERANDS && !is_end_of_line[(unsigned char) *lptr])\n     {\n       int paren_not_balanced = 0;\n       char *op_start, *op_end;\n@@ -3143,7 +3148,7 @@ get_operands (struct opstruct operands[], char *line)\n \n   while (*lptr && ISSPACE (*lptr++))\n     ;\n-  if (!is_end_of_line[(int) *lptr])\n+  if (!is_end_of_line[(unsigned char) *lptr])\n     {\n       as_bad (_(\"Extra junk on line\"));\n       return -1;\n@@ -4195,7 +4200,7 @@ static int\n next_line_shows_parallel (char *next_line)\n {\n   /* Look for the second half.  */\n-  while (ISSPACE (*next_line))\n+  while (*next_line != 0 && ISSPACE (*next_line))\n     ++next_line;\n \n   return (next_line[0] == PARALLEL_SEPARATOR\n@@ -4411,10 +4416,9 @@ subsym_substitute (char *line, int forced)\n   if (strstr (line, \".macro\"))\n     return line;\n \n-  while (!is_end_of_line[(int) *ptr])\n+  unsigned char current_char;\n+  while (!is_end_of_line[(current_char = * (unsigned char *) ptr)])\n     {\n-      int current_char = *ptr;\n-\n       /* Need to update this since LINE may have been modified.  */\n       if (eval_line)\n \teval_end = strrchr (ptr, ',');\n@@ -4734,9 +4738,13 @@ tic54x_start_line_hook (void)\n   char *replacement = NULL;\n \n   /* Work with a copy of the input line, including EOL char.  */\n-  endp = input_line_pointer;\n-  while (!is_end_of_line[(int) *endp++])\n-    ;\n+  for (endp = input_line_pointer; ; endp ++)\n+    {\n+      unsigned char c = * (unsigned char *) endp;\n+      if (c == 0 || is_end_of_line [c])\n+\tbreak;\n+    }\n+\n   line = xmemdup0 (input_line_pointer, endp - input_line_pointer);\n \n   /* Scan ahead for parallel insns.  */\n@@ -5333,7 +5341,7 @@ tic54x_convert_frag (bfd *abfd ATTRIBUTE_UNUSED,\n    Don't allow labels to start with '.'  */\n \n int\n-tic54x_start_label (int nul_char, int next_char)\n+tic54x_start_label (char * label_start, int nul_char, int next_char)\n {\n   char *rest;\n \n@@ -5344,18 +5352,14 @@ tic54x_start_label (int nul_char, int next_char)\n   /* Disallow labels starting with \".\"  */\n   if (next_char != ':')\n     {\n-      char *label = input_line_pointer;\n-\n-      while (!is_end_of_line[(int) label[-1]])\n-\t--label;\n-      if (*label == '.')\n+      if (*label_start == '.')\n \t{\n-\t  as_bad (_(\"Invalid label '%s'\"), label);\n+\t  as_bad (_(\"Invalid label '%s'\"), label_start);\n \t  return 0;\n \t}\n     }\n \n-  if (is_end_of_line[(int) next_char])\n+  if (is_end_of_line[(unsigned char) next_char])\n     return 1;\n \n   rest = input_line_pointer;"
    },
    {
      "sha": "2797ae4823b0406c20d360998bc837e79b0cf929",
      "filename": "gas/config/tc-tic54x.h",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tic54x.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tic54x.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic54x.h?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -64,10 +64,13 @@ struct bit_info\n #define TC_FRAG_TYPE int\n #define TC_FRAG_INIT(FRAGP, MAX_BYTES) do {(FRAGP)->tc_frag_data = 0;}while (0)\n \n-/* tell GAS whether the given token is indeed a code label */\n+/* Tell GAS whether the given token is indeed a code label.\n+   Note - we make of the knowledge that this macro will be called from\n+   read.c:read_a_source_file()  in that we also pass the local variable\n+   line_start.  */\n #define TC_START_LABEL_WITHOUT_COLON(NUL_CHAR, NEXT_CHAR) \\\n-  tic54x_start_label(NUL_CHAR, NEXT_CHAR)\n-extern int tic54x_start_label (int, int);\n+  tic54x_start_label (line_start, NUL_CHAR, NEXT_CHAR)\n+extern int tic54x_start_label (char *, int, int);\n \n /* custom handling for relocations in cons expressions */\n #define TC_CONS_FIX_NEW(FRAG, OFF, LEN, EXP, RELOC)\t\\"
    },
    {
      "sha": "e840e5dc85f75a422251cd7e424546f9daff2578",
      "filename": "gas/config/tc-tilegx.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tilegx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tilegx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tilegx.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1314,9 +1314,6 @@ const pseudo_typeS md_pseudo_table[] =\n   { NULL, 0, 0 }\n };\n \n-/* Equal to MAX_PRECISION in atof-ieee.c  */\n-#define MAX_LITTLENUMS 6\n-\n void\n md_number_to_chars (char * buf, valueT val, int n)\n {"
    },
    {
      "sha": "146e270f7de609ae93710ba35b7fe793629eb55c",
      "filename": "gas/config/tc-tilepro.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tilepro.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-tilepro.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tilepro.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1198,9 +1198,6 @@ const pseudo_typeS md_pseudo_table[] =\n   { NULL, 0, 0 }\n };\n \n-/* Equal to MAX_PRECISION in atof-ieee.c  */\n-#define MAX_LITTLENUMS 6\n-\n /* Turn the string pointed to by litP into a floating point constant\n    of type TYPE, and emit the appropriate bytes.  The number of\n    LITTLENUMS emitted is stored in *SIZEP.  An error message is"
    },
    {
      "sha": "68863112301c7182cd7f427c9bf4fbdfe48646f9",
      "filename": "gas/config/tc-visium.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-visium.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/config/tc-visium.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-visium.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -821,9 +821,6 @@ md_begin (void)\n    emitted is stored in *sizeP .  An error message is returned,\n    or NULL on OK.  */\n \n-/* Equal to MAX_PRECISION in atof-ieee.c.  */\n-#define MAX_LITTLENUMS 6\n-\n const char *\n md_atof (int type, char *litP, int *sizeP)\n {"
    },
    {
      "sha": "f30734d384b0f1b94d29dd0c5b587afbfbcb509f",
      "filename": "gas/dw2gencfi.c",
      "status": "modified",
      "additions": 24,
      "deletions": 24,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/dw2gencfi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/dw2gencfi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dw2gencfi.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -225,37 +225,37 @@ emit_expr_encoded (expressionS *exp, int encoding, bfd_boolean emit_encoding)\n static char *\n get_debugseg_name (segT seg, const char *base_name)\n {\n-  const char *name;\n+  const char * name;\n+  const char * dollar;\n+  const char * dot;\n \n   if (!seg)\n-    name = \"\";\n-  else\n-    {\n-      const char * dollar;\n-      const char * dot;\n+    return concat (base_name, NULL);\n \n-      name = bfd_get_section_name (stdoutput, seg);\n+  name = bfd_get_section_name (stdoutput, seg);\n \n-      dollar = strchr (name, '$');\n-      dot = strchr (name + 1, '.');\n+  if (name == NULL || *name == 0)\n+    return concat (base_name, NULL);\n+\t\n+  dollar = strchr (name, '$');\n+  dot = strchr (name + 1, '.');\n \n-      if (!dollar && !dot)\n-\t{\n-\t  if (!strcmp (base_name, \".eh_frame_entry\")\n-\t      && strcmp (name, \".text\") != 0)\n-\t    return concat (base_name, \".\", name, NULL);\n+  if (!dollar && !dot)\n+    {\n+      if (!strcmp (base_name, \".eh_frame_entry\")\n+\t  && strcmp (name, \".text\") != 0)\n+\treturn concat (base_name, \".\", name, NULL);\n \n-\t  name = \"\";\n-\t}\n-      else if (!dollar)\n-\tname = dot;\n-      else if (!dot)\n-\tname = dollar;\n-      else if (dot < dollar)\n-\tname = dot;\n-      else\n-\tname = dollar;\n+      name = \"\";\n     }\n+  else if (!dollar)\n+    name = dot;\n+  else if (!dot)\n+    name = dollar;\n+  else if (dot < dollar)\n+    name = dot;\n+  else\n+    name = dollar;\n \n   return concat (base_name, name, NULL);\n }"
    },
    {
      "sha": "cc36957cb4803f294880759c18bb1514f44d8b32",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 14,
      "deletions": 3,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -751,8 +751,14 @@ get_filenum (const char *filename, unsigned int num)\n       unsigned int old = files_allocated;\n \n       files_allocated = i + 32;\n-      files = XRESIZEVEC (struct file_entry, files, files_allocated);\n+      /* Catch wraparound.  */\n+      if (files_allocated <= old)\n+\t{\n+\t  as_bad (_(\"file number %u is too big\"), i);\n+\t  return 0;\n+\t}\n \n+      files = XRESIZEVEC (struct file_entry, files, files_allocated);\n       memset (files + old, 0, (i + 32 - old) * sizeof (struct file_entry));\n     }\n \n@@ -803,13 +809,18 @@ dwarf2_directive_filename (void)\n      being supplied.  Turn off gas generated debug info.  */\n   debug_type = DEBUG_NONE;\n \n-  if (num < (int) files_in_use && files[num].filename != 0)\n+  if (num < (offsetT) files_in_use && files[num].filename != 0)\n     {\n       as_bad (_(\"file number %ld already allocated\"), (long) num);\n       return NULL;\n     }\n+  else if (num < 0)\n+    {\n+      as_bad (_(\"file number %ld is too small!\"), (long) num);\n+      return NULL;\n+    }\n \n-  get_filenum (filename, num);\n+  get_filenum (filename, (unsigned int) num);\n \n   return filename;\n }"
    },
    {
      "sha": "e00a18bdad48ef369848dea4f4802ebadaa45c52",
      "filename": "gas/macro.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/macro.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/macro.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/macro.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -374,7 +374,7 @@ get_any_string (size_t idx, sb *in, sb *out)\n       else if (in->ptr[idx] == '%' && macro_alternate)\n \t{\n \t  offsetT val;\n-\t  char buf[20];\n+\t  char buf[64];\n \n \t  /* Turns the next expression into a string.  */\n \t  /* xgettext: no-c-format */"
    },
    {
      "sha": "58d79b2787a15a0a528d479fd31903fb834313ce",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -3760,7 +3760,8 @@ ignore_rest_of_line (void)\n   input_line_pointer++;\n \n   /* Return pointing just after end-of-line.  */\n-  know (is_end_of_line[(unsigned char) input_line_pointer[-1]]);\n+  if (input_line_pointer <= buffer_limit)\n+    know (is_end_of_line[(unsigned char) input_line_pointer[-1]]);\n }\n \n /* Sets frag for given symbol to zero_address_frag, except when the"
    },
    {
      "sha": "c648a2c31a2b29b7636885029c8fc8c2c0c3ea9f",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24538\n+\t* ia64-opc.c (ia64_find_matching_opcode): Check for reaching the\n+\tend of the table prematurely.\n+\n 2019-05-10  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n \n         * mips-opc.c (mips_opcodes): Enable ADD, SUB, DADD and DSUB"
    },
    {
      "sha": "5aa1198ec533f877f12fb9253ed8b99f4ebe3dda",
      "filename": "opcodes/ia64-opc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3076e59490428c9719765f9b007d6d0d0238f006/opcodes/ia64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3076e59490428c9719765f9b007d6d0d0238f006/opcodes/ia64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ia64-opc.c?ref=3076e59490428c9719765f9b007d6d0d0238f006",
      "patch": "@@ -123,7 +123,7 @@ static short\n find_main_ent (short nameindex)\n {\n   short start = 0;\n-  short end = sizeof (main_table) / sizeof (struct ia64_main_table);\n+  short end = ARRAY_SIZE (main_table);\n   short i = (start + end) / 2;\n \n   if (nameindex < main_table[0].name_index\n@@ -612,6 +612,9 @@ ia64_find_matching_opcode (const char *name, short place)\n   const char *suffix;\n   short name_index;\n \n+  if ((unsigned) place >= ARRAY_SIZE (main_table))\n+    return NULL;\n+\n   if (strlen (name) > 128)\n     {\n       return NULL;"
    }
  ]
}