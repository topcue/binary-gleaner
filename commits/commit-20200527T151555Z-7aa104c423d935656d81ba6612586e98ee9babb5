{
  "sha": "7aa104c423d935656d81ba6612586e98ee9babb5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2FhMTA0YzQyM2Q5MzU2NTZkODFiYTY2MTI1ODZlOThlZTliYWJiNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:13:57Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:15:55Z"
    },
    "message": "Add dwarf2_per_objfile parameter to create_partial_symtab\n\nThis allows removing a dwarf2_per_cu_data::dwarf2_per_objfile reference.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (create_partial_symtab): Add dwarf2_per_objfile\n\tparameter.\n\t(create_type_unit_group): Update.\n\t(process_psymtab_comp_unit_reader): Update.\n\t(build_type_psymtabs_reader): Update.\n\nChange-Id: I72e3a8fce8022943ce6992fb623e05636cd0e3a5",
    "tree": {
      "sha": "38ceab9b9e425312d387aa18564ee224bcf2d42d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/38ceab9b9e425312d387aa18564ee224bcf2d42d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7aa104c423d935656d81ba6612586e98ee9babb5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7aa104c423d935656d81ba6612586e98ee9babb5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7aa104c423d935656d81ba6612586e98ee9babb5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7aa104c423d935656d81ba6612586e98ee9babb5/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e3beb21d3521e7f5ba8b40732ea1bfe3cafd9033"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 19,
    "deletions": 7
  },
  "files": [
    {
      "sha": "1308acd068ef505ff0e0fb7cd99281802e46e6c8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa104c423d935656d81ba6612586e98ee9babb5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa104c423d935656d81ba6612586e98ee9babb5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7aa104c423d935656d81ba6612586e98ee9babb5",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (create_partial_symtab): Add dwarf2_per_objfile\n+\tparameter.\n+\t(create_type_unit_group): Update.\n+\t(process_psymtab_comp_unit_reader): Update.\n+\t(build_type_psymtabs_reader): Update.\n+\n 2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c (cutu_reader::keep): Access dwarf2_per_objfile"
    },
    {
      "sha": "3ca7772a46939d42b2c99bef1de5066fd9c724cd",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa104c423d935656d81ba6612586e98ee9babb5/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa104c423d935656d81ba6612586e98ee9babb5/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=7aa104c423d935656d81ba6612586e98ee9babb5",
      "patch": "@@ -1204,7 +1204,8 @@ static void dwarf2_find_base_address (struct die_info *die,\n \t\t\t\t      struct dwarf2_cu *cu);\n \n static dwarf2_psymtab *create_partial_symtab\n-  (struct dwarf2_per_cu_data *per_cu, const char *name);\n+  (dwarf2_per_cu_data *per_cu, dwarf2_per_objfile *per_objfile,\n+   const char *name);\n \n static void build_type_psymtabs_reader (const struct die_reader_specs *reader,\n \t\t\t\t\tconst gdb_byte *info_ptr,\n@@ -7331,7 +7332,7 @@ create_type_unit_group (struct dwarf2_cu *cu, sect_offset line_offset_struct)\n       else\n \tname = string_printf (\"<type_units_at_0x%x>\", line_offset);\n \n-      pst = create_partial_symtab (per_cu, name.c_str ());\n+      pst = create_partial_symtab (per_cu, dwarf2_per_objfile, name.c_str ());\n       pst->anonymous = true;\n     }\n \n@@ -7405,9 +7406,11 @@ get_type_unit_group (struct dwarf2_cu *cu, const struct attribute *stmt_list)\n    dirname, textlow, texthigh.  */\n \n static dwarf2_psymtab *\n-create_partial_symtab (struct dwarf2_per_cu_data *per_cu, const char *name)\n+create_partial_symtab (dwarf2_per_cu_data *per_cu,\n+\t\t       dwarf2_per_objfile *per_objfile,\n+\t\t       const char *name)\n {\n-  struct objfile *objfile = per_cu->dwarf2_per_objfile->objfile;\n+  struct objfile *objfile = per_objfile->objfile;\n   dwarf2_psymtab *pst;\n \n   pst = new dwarf2_psymtab (name, objfile, per_cu);\n@@ -7429,7 +7432,8 @@ process_psymtab_comp_unit_reader (const struct die_reader_specs *reader,\n \t\t\t\t  enum language pretend_language)\n {\n   struct dwarf2_cu *cu = reader->cu;\n-  struct objfile *objfile = cu->per_objfile->objfile;\n+  dwarf2_per_objfile *per_objfile = cu->per_objfile;\n+  struct objfile *objfile = per_objfile->objfile;\n   struct gdbarch *gdbarch = objfile->arch ();\n   struct dwarf2_per_cu_data *per_cu = cu->per_cu;\n   CORE_ADDR baseaddr;\n@@ -7456,7 +7460,7 @@ process_psymtab_comp_unit_reader (const struct die_reader_specs *reader,\n       filename = debug_filename.get ();\n     }\n \n-  pst = create_partial_symtab (per_cu, filename);\n+  pst = create_partial_symtab (per_cu, per_objfile, filename);\n \n   /* This must be done before calling dwarf2_build_include_psymtabs.  */\n   pst->dirname = dwarf2_string_attr (comp_unit_die, DW_AT_comp_dir, cu);\n@@ -7637,7 +7641,7 @@ build_type_psymtabs_reader (const struct die_reader_specs *reader,\n   tu_group->tus->push_back (sig_type);\n \n   prepare_one_comp_unit (cu, type_unit_die, language_minimal);\n-  pst = create_partial_symtab (per_cu, \"\");\n+  pst = create_partial_symtab (per_cu, dwarf2_per_objfile, \"\");\n   pst->anonymous = true;\n \n   first_die = load_partial_dies (reader, info_ptr, 1);"
    }
  ]
}