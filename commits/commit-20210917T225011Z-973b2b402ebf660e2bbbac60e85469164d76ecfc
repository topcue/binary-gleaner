{
  "sha": "973b2b402ebf660e2bbbac60e85469164d76ecfc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTczYjJiNDAyZWJmNjYwZTJiYmJhYzYwZTg1NDY5MTY0ZDc2ZWNmYw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-08-28T04:53:33Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-09-17T22:50:11Z"
    },
    "message": "[GOLD] Remove addend from Local_got_entry_key\n\nThis patch removes the addend from Local_got_entry_key, which is\nunnecessary now that Got_offset_list has an addend.  Note that it\nmight be advantageous to keep the addend in Local_got_entry_key when\nlinking objects containing a large number of section_sym+addend@got\nrelocations.  I opted to save some memory by removing the field but\nleft the class there in case we might need to restore {sym,addend}\nlookup.  That's also why this change is split out from the\nGot_offset_list change.\n\n\tPR 28192\n\t* object.h (Local_got_entry_key): Delete addend_ field.\n\tAdjust constructor and methods to suit.\n\t* object.cc (Sized_relobj::do_for_all_local_got_entries):\n\tUpdate key.",
    "tree": {
      "sha": "5c483374372e3cde206bc403bf3095e379567e6c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5c483374372e3cde206bc403bf3095e379567e6c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/973b2b402ebf660e2bbbac60e85469164d76ecfc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/973b2b402ebf660e2bbbac60e85469164d76ecfc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/973b2b402ebf660e2bbbac60e85469164d76ecfc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/973b2b402ebf660e2bbbac60e85469164d76ecfc/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "912697efc15768894c13a9370a2fcaa950f24558",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/912697efc15768894c13a9370a2fcaa950f24558",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/912697efc15768894c13a9370a2fcaa950f24558"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 7,
    "deletions": 10
  },
  "files": [
    {
      "sha": "b7a2a6cfdfac4deeaf6c7247dc1539aa8f35072b",
      "filename": "gold/object.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/973b2b402ebf660e2bbbac60e85469164d76ecfc/gold/object.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/973b2b402ebf660e2bbbac60e85469164d76ecfc/gold/object.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/object.cc?ref=973b2b402ebf660e2bbbac60e85469164d76ecfc",
      "patch": "@@ -427,7 +427,7 @@ Sized_relobj<size, big_endian>::do_for_all_local_got_entries(\n   unsigned int nsyms = this->local_symbol_count();\n   for (unsigned int i = 0; i < nsyms; i++)\n     {\n-      Local_got_entry_key key(i, 0);\n+      Local_got_entry_key key(i);\n       Local_got_offsets::const_iterator p = this->local_got_offsets_.find(key);\n       if (p != this->local_got_offsets_.end())\n \t{"
    },
    {
      "sha": "2dbe4b3e1be4e242e55565449e03bd5a6e5c5642",
      "filename": "gold/object.h",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/973b2b402ebf660e2bbbac60e85469164d76ecfc/gold/object.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/973b2b402ebf660e2bbbac60e85469164d76ecfc/gold/object.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/object.h?ref=973b2b402ebf660e2bbbac60e85469164d76ecfc",
      "patch": "@@ -327,15 +327,15 @@ class Got_offset_list\n class Local_got_entry_key\n {\n  public:\n-  Local_got_entry_key(unsigned int symndx, uint64_t addend)\n-    : symndx_(symndx), addend_(addend)\n+  Local_got_entry_key(unsigned int symndx)\n+    : symndx_(symndx)\n   {}\n \n   // Whether this equals to another Local_got_entry_key.\n   bool\n   eq(const Local_got_entry_key& key) const\n   {\n-    return (this->symndx_ == key.symndx_ && this->addend_ == key.addend_);\n+    return this->symndx_ == key.symndx_;\n   }\n \n   // Compute a hash value for this using 64-bit FNV-1a hash.\n@@ -345,7 +345,6 @@ class Local_got_entry_key\n     uint64_t h = 14695981039346656037ULL; // FNV offset basis.\n     uint64_t prime = 1099511628211ULL;\n     h = (h ^ static_cast<uint64_t>(this->symndx_)) * prime;\n-    h = (h ^ static_cast<uint64_t>(this->addend_)) * prime;\n     return h;\n   }\n \n@@ -368,8 +367,6 @@ class Local_got_entry_key\n  private:\n   // The local symbol index.\n   unsigned int symndx_;\n-  // The addend.\n-  uint64_t addend_;\n };\n \n // Type for mapping section index to uncompressed size and contents.\n@@ -2135,7 +2132,7 @@ class Sized_relobj : public Relobj\n   do_local_has_got_offset(unsigned int symndx, unsigned int got_type,\n \t\t\t  uint64_t addend) const\n   {\n-    Local_got_entry_key key(symndx, addend);\n+    Local_got_entry_key key(symndx);\n     Local_got_offsets::const_iterator p =\n         this->local_got_offsets_.find(key);\n     return (p != this->local_got_offsets_.end()\n@@ -2148,7 +2145,7 @@ class Sized_relobj : public Relobj\n   do_local_got_offset(unsigned int symndx, unsigned int got_type,\n \t\t\t  uint64_t addend) const\n   {\n-    Local_got_entry_key key(symndx, addend);\n+    Local_got_entry_key key(symndx);\n     Local_got_offsets::const_iterator p =\n         this->local_got_offsets_.find(key);\n     gold_assert(p != this->local_got_offsets_.end());\n@@ -2163,7 +2160,7 @@ class Sized_relobj : public Relobj\n   do_set_local_got_offset(unsigned int symndx, unsigned int got_type,\n \t\t\t  unsigned int got_offset, uint64_t addend)\n   {\n-    Local_got_entry_key key(symndx, addend);\n+    Local_got_entry_key key(symndx);\n     Local_got_offsets::const_iterator p =\n         this->local_got_offsets_.find(key);\n     if (p != this->local_got_offsets_.end())"
    }
  ]
}