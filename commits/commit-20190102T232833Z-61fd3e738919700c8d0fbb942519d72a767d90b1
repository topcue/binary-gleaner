{
  "sha": "61fd3e738919700c8d0fbb942519d72a767d90b1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjFmZDNlNzM4OTE5NzAwYzhkMGZiYjk0MjUxOWQ3MmE3NjdkOTBiMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-02T16:58:14Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-02T23:28:33Z"
    },
    "message": "Change inferior_to_inferior_object to return a gdbpy_ref\n\nMost callers of inferior_to_inferior_object already use a gdbpy_ref,\nso this changes inferior_to_inferior_object to return one.  Doing this\nrevealed that create_thread_object was not correctly handling the case\nwhere inferior_to_inferior_object failed, so this patch fixes this as\nwell.\n\ngdb/ChangeLog\n2019-01-02  Tom Tromey  <tom@tromey.com>\n\n\t* python/python-internal.h (inferior_to_inferior_object): Change\n\treturn type.\n\t* python/py-exitedevent.c (create_exited_event_object): Update.\n\t* python/py-inferior.c (inferior_to_inferior_object): Return\n\tgdbpy_ref.\n\t(python_new_inferior, python_inferior_deleted)\n\t(thread_to_thread_object, delete_thread_object)\n\t(build_inferior_list, gdbpy_selected_inferior): Update.\n\t* python/py-infthread.c (create_thread_object): Update.  Also fail\n\tif inferior_to_inferior_object fails.",
    "tree": {
      "sha": "cac5f01b3d3ff229654cd69ea8c60b8afb817038",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cac5f01b3d3ff229654cd69ea8c60b8afb817038"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/61fd3e738919700c8d0fbb942519d72a767d90b1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61fd3e738919700c8d0fbb942519d72a767d90b1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/61fd3e738919700c8d0fbb942519d72a767d90b1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61fd3e738919700c8d0fbb942519d72a767d90b1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d20172fc53017cef12d64b21aa2fdac72072558c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d20172fc53017cef12d64b21aa2fdac72072558c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d20172fc53017cef12d64b21aa2fdac72072558c"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 31,
    "deletions": 16
  },
  "files": [
    {
      "sha": "4be6039217b4634932dac76ddb7017344f18acd4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=61fd3e738919700c8d0fbb942519d72a767d90b1",
      "patch": "@@ -1,3 +1,16 @@\n+2019-01-02  Tom Tromey  <tom@tromey.com>\n+\n+\t* python/python-internal.h (inferior_to_inferior_object): Change\n+\treturn type.\n+\t* python/py-exitedevent.c (create_exited_event_object): Update.\n+\t* python/py-inferior.c (inferior_to_inferior_object): Return\n+\tgdbpy_ref.\n+\t(python_new_inferior, python_inferior_deleted)\n+\t(thread_to_thread_object, delete_thread_object)\n+\t(build_inferior_list, gdbpy_selected_inferior): Update.\n+\t* python/py-infthread.c (create_thread_object): Update.  Also fail\n+\tif inferior_to_inferior_object fails.\n+\n 2019-01-02  Simon Marchi  <simon.marchi@ericsson.com>\n \n \t* inferior.h (class inferior) <displaced_step_state>: New field."
    },
    {
      "sha": "5e9dabf15e7de7ca49823112fdfbaa2288801d60",
      "filename": "gdb/python/py-exitedevent.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/py-exitedevent.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/py-exitedevent.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-exitedevent.c?ref=61fd3e738919700c8d0fbb942519d72a767d90b1",
      "patch": "@@ -39,7 +39,7 @@ create_exited_event_object (const LONGEST *exit_code, struct inferior *inf)\n \treturn NULL;\n     }\n \n-  gdbpy_ref<inferior_object> inf_obj (inferior_to_inferior_object (inf));\n+  gdbpy_ref<inferior_object> inf_obj = inferior_to_inferior_object (inf);\n   if (inf_obj == NULL || evpy_add_attribute (exited_event.get (),\n \t\t\t\t\t     \"inferior\",\n \t\t\t\t\t     (PyObject *) inf_obj.get ()) < 0)"
    },
    {
      "sha": "63b13d46ec803d03935806cf0cc857333b149843",
      "filename": "gdb/python/py-inferior.c",
      "status": "modified",
      "additions": 11,
      "deletions": 13,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/py-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/py-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-inferior.c?ref=61fd3e738919700c8d0fbb942519d72a767d90b1",
      "patch": "@@ -208,7 +208,7 @@ python_new_objfile (struct objfile *objfile)\n    return it and increment the reference count,  otherwise, create it.\n    Return NULL on failure.  */\n \n-inferior_object *\n+gdbpy_ref<inferior_object>\n inferior_to_inferior_object (struct inferior *inferior)\n {\n   inferior_object *inf_obj;\n@@ -218,7 +218,7 @@ inferior_to_inferior_object (struct inferior *inferior)\n     {\n       inf_obj = PyObject_New (inferior_object, &inferior_object_type);\n       if (!inf_obj)\n-\t  return NULL;\n+\treturn NULL;\n \n       inf_obj->inferior = inferior;\n       inf_obj->threads = NULL;\n@@ -227,13 +227,11 @@ inferior_to_inferior_object (struct inferior *inferior)\n       /* PyObject_New initializes the new object with a refcount of 1.  This\n \t counts for the reference we are keeping in the inferior data.  */\n       set_inferior_data (inferior, infpy_inf_data_key, inf_obj);\n-\n     }\n \n   /* We are returning a new reference.  */\n-  Py_INCREF ((PyObject *)inf_obj);\n-\n-  return inf_obj;\n+  gdb_assert (inf_obj != nullptr);\n+  return gdbpy_ref<inferior_object>::new_reference (inf_obj);\n }\n \n /* Called when a new inferior is created.  Notifies any Python event\n@@ -249,7 +247,7 @@ python_new_inferior (struct inferior *inf)\n   if (evregpy_no_listeners_p (gdb_py_events.new_inferior))\n     return;\n \n-  gdbpy_ref<inferior_object> inf_obj (inferior_to_inferior_object (inf));\n+  gdbpy_ref<inferior_object> inf_obj = inferior_to_inferior_object (inf);\n   if (inf_obj == NULL)\n     {\n       gdbpy_print_stack ();\n@@ -277,7 +275,7 @@ python_inferior_deleted (struct inferior *inf)\n   if (evregpy_no_listeners_p (gdb_py_events.inferior_deleted))\n     return;\n \n-  gdbpy_ref<inferior_object> inf_obj (inferior_to_inferior_object (inf));\n+  gdbpy_ref<inferior_object> inf_obj = inferior_to_inferior_object (inf);\n   if (inf_obj == NULL)\n     {\n       gdbpy_print_stack ();\n@@ -295,7 +293,7 @@ python_inferior_deleted (struct inferior *inf)\n gdbpy_ref<>\n thread_to_thread_object (thread_info *thr)\n {\n-  gdbpy_ref<inferior_object> inf_obj (inferior_to_inferior_object (thr->inf));\n+  gdbpy_ref<inferior_object> inf_obj = inferior_to_inferior_object (thr->inf);\n   if (inf_obj == NULL)\n     return NULL;\n \n@@ -358,8 +356,7 @@ delete_thread_object (struct thread_info *tp, int ignore)\n \n   gdbpy_enter enter_py (python_gdbarch, python_language);\n \n-  gdbpy_ref<inferior_object> inf_obj\n-    ((inferior_object *) inferior_to_inferior_object (tp->inf));\n+  gdbpy_ref<inferior_object> inf_obj = inferior_to_inferior_object (tp->inf);\n   if (inf_obj == NULL)\n     return;\n \n@@ -466,7 +463,7 @@ static int\n build_inferior_list (struct inferior *inf, void *arg)\n {\n   PyObject *list = (PyObject *) arg;\n-  gdbpy_ref<inferior_object> inferior (inferior_to_inferior_object (inf));\n+  gdbpy_ref<inferior_object> inferior = inferior_to_inferior_object (inf);\n \n   if (inferior == NULL)\n     return 0;\n@@ -925,7 +922,8 @@ py_free_inferior (struct inferior *inf, void *datum)\n PyObject *\n gdbpy_selected_inferior (PyObject *self, PyObject *args)\n {\n-  return (PyObject *) inferior_to_inferior_object (current_inferior ());\n+  return ((PyObject *)\n+\t  inferior_to_inferior_object (current_inferior ()).release ());\n }\n \n int"
    },
    {
      "sha": "bf90d08ae6e9241a085d8817ef00c91a1414de1b",
      "filename": "gdb/python/py-infthread.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/py-infthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/py-infthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-infthread.c?ref=61fd3e738919700c8d0fbb942519d72a767d90b1",
      "patch": "@@ -41,12 +41,16 @@ create_thread_object (struct thread_info *tp)\n {\n   thread_object *thread_obj;\n \n+  gdbpy_ref<inferior_object> inf_obj = inferior_to_inferior_object (tp->inf);\n+  if (inf_obj == NULL)\n+    return NULL;\n+\n   thread_obj = PyObject_New (thread_object, &thread_object_type);\n   if (!thread_obj)\n     return NULL;\n \n   thread_obj->thread = tp;\n-  thread_obj->inf_obj = (PyObject *) inferior_to_inferior_object (tp->inf);\n+  thread_obj->inf_obj = (PyObject *) inf_obj.release ();\n \n   return thread_obj;\n }"
    },
    {
      "sha": "51919b7b85425ca9308cc5244c5d19c7271fe098",
      "filename": "gdb/python/python-internal.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/python-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61fd3e738919700c8d0fbb942519d72a767d90b1/gdb/python/python-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python-internal.h?ref=61fd3e738919700c8d0fbb942519d72a767d90b1",
      "patch": "@@ -521,7 +521,7 @@ PyObject *gdbarch_to_arch_object (struct gdbarch *gdbarch);\n \n thread_object *create_thread_object (struct thread_info *tp);\n gdbpy_ref<> thread_to_thread_object (thread_info *thr);;\n-inferior_object *inferior_to_inferior_object (inferior *inf);\n+gdbpy_ref<inferior_object> inferior_to_inferior_object (inferior *inf);\n \n const struct block *block_object_to_block (PyObject *obj);\n struct symbol *symbol_object_to_symbol (PyObject *obj);"
    }
  ]
}