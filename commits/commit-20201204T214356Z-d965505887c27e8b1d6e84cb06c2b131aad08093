{
  "sha": "d965505887c27e8b1d6e84cb06c2b131aad08093",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDk2NTUwNTg4N2MyN2U4YjFkNmU4NGNiMDZjMmIxMzFhYWQwODA5Mw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-12-04T21:43:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-12-04T21:43:56Z"
    },
    "message": "gdb: change linux gdbarch data from post to pre-init\n\nThe following patch will need to fill a field in linux_gdbarch_data\nwhile the gdbarch is being built.  linux_gdbarch_data is currently\nallocated as a post-init gdbarch data, meaning it's not possible to fill\nit before the gdbarch is completely initialized.  Change it to a\npre-init gdbarch data to allow this.\n\nThe init_linux_gdbarch_data function doesn't use the created gdbarch,\nit only allocates the linux_gdbarch_data structure on the gdbarch's\nobstack, so the change is trivial.\n\ngdb/ChangeLog:\n\n\t* linux-tdep.c (init_linux_gdbarch_data): Change parameter to\n\tobkstack.\n\t(_initialize_linux_tdep): Register pre-init gdb data instead of\n\tpost-init.\n\nChange-Id: If35ce91b6bb5435680d43b9268d811d95661644f",
    "tree": {
      "sha": "23c84518bed4de4907a17c7bbaba400110f28ac2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/23c84518bed4de4907a17c7bbaba400110f28ac2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d965505887c27e8b1d6e84cb06c2b131aad08093",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d965505887c27e8b1d6e84cb06c2b131aad08093",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d965505887c27e8b1d6e84cb06c2b131aad08093",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d965505887c27e8b1d6e84cb06c2b131aad08093/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "187b041e2514827b9d86190ed2471c4c7a352874",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/187b041e2514827b9d86190ed2471c4c7a352874",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/187b041e2514827b9d86190ed2471c4c7a352874"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 10,
    "deletions": 3
  },
  "files": [
    {
      "sha": "d79b2217dea7659f63eda2eba7d05b3f2246c064",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d965505887c27e8b1d6e84cb06c2b131aad08093/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d965505887c27e8b1d6e84cb06c2b131aad08093/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d965505887c27e8b1d6e84cb06c2b131aad08093",
      "patch": "@@ -1,3 +1,10 @@\n+2020-12-04  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* linux-tdep.c (init_linux_gdbarch_data): Change parameter to\n+\tobkstack.\n+\t(_initialize_linux_tdep): Register pre-init gdb data instead of\n+\tpost-init.\n+\n 2020-12-04  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* displaced-stepping.h (struct"
    },
    {
      "sha": "57ea45cf6b6b5df9abe8ec980b17275d0890777d",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d965505887c27e8b1d6e84cb06c2b131aad08093/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d965505887c27e8b1d6e84cb06c2b131aad08093/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=d965505887c27e8b1d6e84cb06c2b131aad08093",
      "patch": "@@ -171,9 +171,9 @@ struct linux_gdbarch_data\n   };\n \n static void *\n-init_linux_gdbarch_data (struct gdbarch *gdbarch)\n+init_linux_gdbarch_data (struct obstack *obstack)\n {\n-  return GDBARCH_OBSTACK_ZALLOC (gdbarch, struct linux_gdbarch_data);\n+  return obstack_zalloc<linux_gdbarch_data> (obstack);\n }\n \n static struct linux_gdbarch_data *\n@@ -2676,7 +2676,7 @@ void\n _initialize_linux_tdep ()\n {\n   linux_gdbarch_data_handle =\n-    gdbarch_data_register_post_init (init_linux_gdbarch_data);\n+    gdbarch_data_register_pre_init (init_linux_gdbarch_data);\n \n   /* Observers used to invalidate the cache when needed.  */\n   gdb::observers::inferior_exit.attach (invalidate_linux_cache_inf);"
    }
  ]
}