{
  "sha": "50ea0877550b5fc2c31a44576cdba1b51897eb2c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTBlYTA4Nzc1NTBiNWZjMmMzMWE0NDU3NmNkYmExYjUxODk3ZWIyYw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-11-13T16:02:39Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-11-13T16:02:39Z"
    },
    "message": "Fix readelf's and objdump's dislplay of DWO links when multiple links are present.\n\n PR 26829\n * dwarf.c (struct dwo_info): Add cu_offset field.\n (add_dwo_info): Add cu_offset parameter.  Record in new dwo_info\n struct.\n (add_dwo_name): Add cu_offset field.\n (add_dwo_dir): Add cu_offset field.\n (add_dwo_id): Add cu_offset field.\n (read_and_display_attr_value): Pass cu_offset to dwo recording\n functions.\n (load_separate_debug_files): Accumulate name, dir and id values\n and display once for each CU.\n * testsuite/binutils-all/dwo.sL Use a separate CU for the second\n dwo link.\n * testsuite/binutils-all/readelf.k2: Update expected output.",
    "tree": {
      "sha": "7a33ac1022b30062a55fa3116676fbb16eb590c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7a33ac1022b30062a55fa3116676fbb16eb590c7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/50ea0877550b5fc2c31a44576cdba1b51897eb2c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50ea0877550b5fc2c31a44576cdba1b51897eb2c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/50ea0877550b5fc2c31a44576cdba1b51897eb2c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50ea0877550b5fc2c31a44576cdba1b51897eb2c/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276"
    }
  ],
  "stats": {
    "total": 127,
    "additions": 87,
    "deletions": 40
  },
  "files": [
    {
      "sha": "6770c9b97f68b34d9fe8aa865c164ed499b2d811",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=50ea0877550b5fc2c31a44576cdba1b51897eb2c",
      "patch": "@@ -1,3 +1,20 @@\n+2020-11-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26829\n+\t* dwarf.c (struct dwo_info): Add cu_offset field.\n+\t(add_dwo_info): Add cu_offset parameter.  Record in new dwo_info\n+\tstruct.\n+\t(add_dwo_name): Add cu_offset field.\n+\t(add_dwo_dir): Add cu_offset field.\n+\t(add_dwo_id): Add cu_offset field.\n+\t(read_and_display_attr_value): Pass cu_offset to dwo recording\n+\tfunctions.\n+\t(load_separate_debug_files): Accumulate name, dir and id values\n+\tand display once for each CU.\n+\t* testsuite/binutils-all/dwo.sL Use a separate CU for the second\n+\tdwo link.\n+\t* testsuite/binutils-all/readelf.k2: Update expected output.\n+\n 2020-11-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* dwarf.c (display_debug_rnglists_list): Only bias the"
    },
    {
      "sha": "149755da1d040873fbd6e1b43da0ba60206a88cb",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 59,
      "deletions": 36,
      "changes": 95,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=50ea0877550b5fc2c31a44576cdba1b51897eb2c",
      "patch": "@@ -67,6 +67,7 @@ typedef struct dwo_info\n {\n   dwo_type          type;\n   const char *      value;\n+  dwarf_vma         cu_offset;\n   struct dwo_info * next;\n } dwo_info;\n \n@@ -1892,32 +1893,33 @@ get_AT_name (unsigned long attribute)\n }\n \n static void\n-add_dwo_info (const char * field, dwo_type type)\n+add_dwo_info (const char * value, dwarf_vma cu_offset, dwo_type type)\n {\n   dwo_info * dwinfo = xmalloc (sizeof * dwinfo);\n \n-  dwinfo->type = type;\n-  dwinfo->value = field;\n-  dwinfo->next = first_dwo_info;\n+  dwinfo->type   = type;\n+  dwinfo->value  = value;\n+  dwinfo->cu_offset = cu_offset;\n+  dwinfo->next   = first_dwo_info;\n   first_dwo_info = dwinfo;\n }\n \n static void\n-add_dwo_name (const char * name)\n+add_dwo_name (const char * name, dwarf_vma cu_offset)\n {\n-  add_dwo_info (name, DWO_NAME);\n+  add_dwo_info (name, cu_offset, DWO_NAME);\n }\n \n static void\n-add_dwo_dir (const char * dir)\n+add_dwo_dir (const char * dir, dwarf_vma cu_offset)\n {\n-  add_dwo_info (dir, DWO_DIR);\n+  add_dwo_info (dir, cu_offset, DWO_DIR);\n }\n \n static void\n-add_dwo_id (const char * id)\n+add_dwo_id (const char * id, dwarf_vma cu_offset)\n {\n-  add_dwo_info (id, DWO_ID);\n+  add_dwo_info (id, cu_offset, DWO_ID);\n }\n \n static void\n@@ -2876,16 +2878,16 @@ read_and_display_attr_value (unsigned long           attribute,\n \t    switch (form)\n \t      {\n \t      case DW_FORM_strp:\n-\t\tadd_dwo_name ((const char *) fetch_indirect_string (uvalue));\n+\t\tadd_dwo_name ((const char *) fetch_indirect_string (uvalue), cu_offset);\n \t\tbreak;\n \t      case DW_FORM_GNU_strp_alt:\n-\t\tadd_dwo_name ((const char *) fetch_alt_indirect_string (uvalue));\n+\t\tadd_dwo_name ((const char *) fetch_alt_indirect_string (uvalue), cu_offset);\n \t\tbreak;\n \t      case DW_FORM_GNU_str_index:\n-\t\tadd_dwo_name (fetch_indexed_string (uvalue, this_set, offset_size, FALSE));\n+\t\tadd_dwo_name (fetch_indexed_string (uvalue, this_set, offset_size, FALSE), cu_offset);\n \t\tbreak;\n \t      case DW_FORM_string:\n-\t\tadd_dwo_name ((const char *) orig_data);\n+\t\tadd_dwo_name ((const char *) orig_data, cu_offset);\n \t\tbreak;\n \t      default:\n \t\twarn (_(\"Unsupported form (%s) for attribute %s\\n\"),\n@@ -2900,19 +2902,19 @@ read_and_display_attr_value (unsigned long           attribute,\n \t    switch (form)\n \t      {\n \t      case DW_FORM_strp:\n-\t\tadd_dwo_dir ((const char *) fetch_indirect_string (uvalue));\n+\t\tadd_dwo_dir ((const char *) fetch_indirect_string (uvalue), cu_offset);\n \t\tbreak;\n \t      case DW_FORM_GNU_strp_alt:\n-\t\tadd_dwo_dir (fetch_alt_indirect_string (uvalue));\n+\t\tadd_dwo_dir (fetch_alt_indirect_string (uvalue), cu_offset);\n \t\tbreak;\n \t      case DW_FORM_line_strp:\n-\t\tadd_dwo_dir ((const char *) fetch_indirect_line_string (uvalue));\n+\t\tadd_dwo_dir ((const char *) fetch_indirect_line_string (uvalue), cu_offset);\n \t\tbreak;\n \t      case DW_FORM_GNU_str_index:\n-\t\tadd_dwo_dir (fetch_indexed_string (uvalue, this_set, offset_size, FALSE));\n+\t\tadd_dwo_dir (fetch_indexed_string (uvalue, this_set, offset_size, FALSE), cu_offset);\n \t\tbreak;\n \t      case DW_FORM_string:\n-\t\tadd_dwo_dir ((const char *) orig_data);\n+\t\tadd_dwo_dir ((const char *) orig_data, cu_offset);\n \t\tbreak;\n \t      default:\n \t\twarn (_(\"Unsupported form (%s) for attribute %s\\n\"),\n@@ -2927,7 +2929,7 @@ read_and_display_attr_value (unsigned long           attribute,\n \t      {\n \t      case DW_FORM_data8:\n \t\t/* FIXME: Record the length of the ID as well ?  */\n-\t\tadd_dwo_id ((const char *) (data - 8));\n+\t\tadd_dwo_id ((const char *) (data - 8), cu_offset);\n \t\tbreak;\n \t      default:\n \t\twarn (_(\"Unsupported form (%s) for attribute %s\\n\"),\n@@ -11148,18 +11150,50 @@ load_separate_debug_files (void * file, const char * filename)\n     {\n       free_dwo_info ();\n \n-      if (process_debug_info (& debug_displays[info].section, file, abbrev, TRUE, FALSE))\n+      if (process_debug_info (& debug_displays[info].section, file, abbrev,\n+\t\t\t      TRUE, FALSE))\n \t{\n \t  bfd_boolean introduced = FALSE;\n \t  dwo_info *   dwinfo;\n \t  const char * dir = NULL;\n \t  const char * id = NULL;\n+\t  const char * name = NULL;\n \n \t  for (dwinfo = first_dwo_info; dwinfo != NULL; dwinfo = dwinfo->next)\n \t    {\n+\t      /* Accumulate NAME, DIR and ID fields.  */\n \t      switch (dwinfo->type)\n \t\t{\n \t\tcase DWO_NAME:\n+\t\t  if (name != NULL)\n+\t\t    warn (_(\"Multiple DWO_NAMEs encountered for the same CU\\n\"));\n+\t\t  name = dwinfo->value;\n+\t\t  break;\n+\n+\t\tcase DWO_DIR:\n+\t\t  /* There can be multiple DW_AT_comp_dir entries in a CU,\n+\t\t     so do not complain.  */\n+\t\t  dir = dwinfo->value;\n+\t\t  break;\n+\n+\t\tcase DWO_ID:\n+\t\t  if (id != NULL)\n+\t\t    warn (_(\"multiple DWO_IDs encountered for the same CU\\n\"));\n+\t\t  id = dwinfo->value;\n+\t\t  break;\n+\n+\t\tdefault:\n+\t\t  error (_(\"Unexpected DWO INFO type\"));\n+\t\t  break;\n+\t\t}\n+\n+\t      /* If we have reached the end of our list, or we are changing\n+\t\t CUs, then display the information that we have accumulated\n+\t\t so far.  */\n+\t      if (name != NULL\n+\t\t  && (dwinfo->next == NULL\n+\t\t      || dwinfo->next->cu_offset != dwinfo->cu_offset))\n+\t\t{\n \t\t  if (do_debug_links)\n \t\t    {\n \t\t      if (! introduced)\n@@ -11169,30 +11203,19 @@ load_separate_debug_files (void * file, const char * filename)\n \t\t\t  introduced = TRUE;\n \t\t\t}\n \n-\t\t      printf (_(\"  Name:      %s\\n\"), dwinfo->value);\n+\t\t      printf (_(\"  Name:      %s\\n\"), name);\n \t\t      printf (_(\"  Directory: %s\\n\"), dir ? dir : _(\"<not-found>\"));\n \t\t      if (id != NULL)\n \t\t\tdisplay_data (printf (_(\"  ID:       \")), (unsigned char *) id, 8);\n \t\t      else\n-\t\t\tprintf (_(\"  ID: <unknown>\\n\"));\n+\t\t\tprintf (_(\"  ID:        <not specified>\\n\"));\n \t\t      printf (\"\\n\\n\");\n \t\t    }\n \n \t\t  if (do_follow_links)\n-\t\t    load_dwo_file (filename, dwinfo->value, dir, id);\n-\t\t  break;\n-\n-\t\tcase DWO_DIR:\n-\t\t  dir = dwinfo->value;\n-\t\t  break;\n+\t\t    load_dwo_file (filename, name, dir, id);\n \n-\t\tcase DWO_ID:\n-\t\t  id = dwinfo->value;\n-\t\t  break;\n-\n-\t\tdefault:\n-\t\t  error (_(\"Unexpected DWO INFO type\"));\n-\t\t  break;\n+\t\t  name = dir = id = NULL;\n \t\t}\n \t    }\n \t}"
    },
    {
      "sha": "96db12926df120f754559d57a72254c1d25c5c28",
      "filename": "binutils/testsuite/binutils-all/dwo.s",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/testsuite/binutils-all/dwo.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/testsuite/binutils-all/dwo.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/dwo.s?ref=50ea0877550b5fc2c31a44576cdba1b51897eb2c",
      "patch": "@@ -34,15 +34,22 @@ string_end:\n \t/* Create a .debug_info section that contains the dwo links.  */\n \n \t.section\t.debug_info,\"\",%progbits\n-\t.4byte\tdebugE - debugS\t;# Length of Compilation Unit Info\n-debugS:\n+\t.4byte\tdebugE1 - debugS1\t;# Length of Compilation Unit Info\n+debugS1:\n \t.short\t0x4\t;# DWARF version number.\n \t.4byte\t0x0\t;# Offset into .debug_abbrev section.\n \t.byte\t0x4\t;# Pointer Size (in bytes).\n \n \t.uleb128 0x1\t;# Use abbrev #1.  This needs strings from the .debug_str section.\n \t.4byte\tstring1\n \t.4byte  string2\n+debugE1:\n+\n+\t.4byte\tdebugE2 - debugS2\t;# Length of Compilation Unit Info\n+debugS2:\n+\t.short\t0x4\t;# DWARF version number.\n+\t.4byte\t0x0\t;# Offset into .debug_abbrev section.\n+\t.byte\t0x4\t;# Pointer Size (in bytes).\n \n \t.uleb128 0x2\t;# Use abbrev #2.\n \t.asciz   \"file.dwo\"\n@@ -52,7 +59,7 @@ debugS:\n \t;# Minimal section alignment on alpha-* is 2, so ensure no new invalid CU\n \t;# will be started.\n \t.balign\t2, 0\n-debugE:\n+debugE2:\n \n \t.section\t.debug_abbrev,\"\",%progbits\n "
    },
    {
      "sha": "1ca9ef49339320840a599f9402a77a9c7febe356",
      "filename": "binutils/testsuite/binutils-all/readelf.k2",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/testsuite/binutils-all/readelf.k2",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/50ea0877550b5fc2c31a44576cdba1b51897eb2c/binutils/testsuite/binutils-all/readelf.k2",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.k2?ref=50ea0877550b5fc2c31a44576cdba1b51897eb2c",
      "patch": "@@ -6,4 +6,4 @@ The \\.debug_info section contains link\\(s\\) to dwo file\\(s\\):\n \n   Name:      debugfile\\.dwo\n   Directory: /path/to/dwo/files\n-  ID:        (12|dd) (34|cc) (56|bb) (78|aa) (78|aa) (56|bb) (34|cc) (12|dd)\n+  ID:        <not specified>"
    }
  ]
}