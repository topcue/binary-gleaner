{
  "sha": "ab7d13f07027e6232a21448ef51f0a52a96738a9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWI3ZDEzZjA3MDI3ZTYyMzJhMjE0NDhlZjUxZjBhNTJhOTY3MzhhOQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-06T19:57:52Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-12-10T19:23:01Z"
    },
    "message": "Replace the remaining uses of strerror with safe_strerror\n\nTo do that, this patch makes IPA compile safe-strerror as well. Because\nit doesn't use Gnulib, it calls the Glibc version of strerror_r directly.\n\nConsequently this patch also removes the configure checks for strerror.\n\ngdb/ChangeLog:\n\n2019-12-10  Christian Biesinger  <cbiesinger@google.com>\n\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* gdbsupport/agent.c (gdb_connect_sync_socket): Call\n\tsafe_strerror instead of strerror.\n\t* gdbsupport/common.m4: Don't check for strerror.\n\t* gdbsupport/safe-strerror.c: Support both the glibc version\n\tof strerror_r and the XSI version.\n\ngdb/gdbserver/ChangeLog:\n\n2019-12-10  Christian Biesinger  <cbiesinger@google.com>\n\n\t* Makefile.in: Add safe-strerror.c to gdbreplay and IPA, and change\n\tUNDO_GNULIB_CFLAGS to undo strerror_r instead of strerror.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Don't check for strerror.\n\t* linux-i386-ipa.c (initialize_fast_tracepoint_trampoline_buffer):\n\tCall safe_strerror instead of strerror.\n\t* server.h (strerror): Remove this now-unnecessary declaration.\n\t* tracepoint.c (init_named_socket): Call safe_strerror instead of\n\tstrerror.\n\t(gdb_agent_helper_thread): Likewise.\n\t* utils.c (perror_with_name): Likewise.\n\nChange-Id: I74848f072dcde75cb55c435ef9398dc8f958cd73",
    "tree": {
      "sha": "ee2099c8cad324e6aea8a9f24a326fe5180e8380",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ee2099c8cad324e6aea8a9f24a326fe5180e8380"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ab7d13f07027e6232a21448ef51f0a52a96738a9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab7d13f07027e6232a21448ef51f0a52a96738a9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ab7d13f07027e6232a21448ef51f0a52a96738a9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab7d13f07027e6232a21448ef51f0a52a96738a9/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0e7aaa728dc23f81a7809f3c5c9b90e85b978a8a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e7aaa728dc23f81a7809f3c5c9b90e85b978a8a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0e7aaa728dc23f81a7809f3c5c9b90e85b978a8a"
    }
  ],
  "stats": {
    "total": 131,
    "additions": 66,
    "deletions": 65
  },
  "files": [
    {
      "sha": "a6e299d905311be670c093bc8b82b515cb1d2309",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -1,3 +1,13 @@\n+2019-12-10  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* gdbsupport/agent.c (gdb_connect_sync_socket): Call\n+\tsafe_strerror instead of strerror.\n+\t* gdbsupport/common.m4: Don't check for strerror.\n+\t* gdbsupport/safe-strerror.c: Support both the glibc version\n+\tof strerror_r and the XSI version.\n+\n 2019-12-10  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-typeprint.c (print_choices): Use a single \"?\"."
    },
    {
      "sha": "cb886ba8e1a91890b4d8cda5d0fcd8d02a1ea77e",
      "filename": "gdb/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/config.in?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -117,10 +117,6 @@\n    don't. */\n #undef HAVE_DECL_SNPRINTF\n \n-/* Define to 1 if you have the declaration of `strerror', and to 0 if you\n-   don't. */\n-#undef HAVE_DECL_STRERROR\n-\n /* Define to 1 if you have the declaration of `strstr', and to 0 if you don't.\n    */\n #undef HAVE_DECL_STRSTR"
    },
    {
      "sha": "324eb509440881d59fba79d9effe2ef74893d17e",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 1,
      "deletions": 11,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -13630,17 +13630,7 @@ fi\n done\n \n \n-  ac_fn_c_check_decl \"$LINENO\" \"strerror\" \"ac_cv_have_decl_strerror\" \"$ac_includes_default\"\n-if test \"x$ac_cv_have_decl_strerror\" = xyes; then :\n-  ac_have_decl=1\n-else\n-  ac_have_decl=0\n-fi\n-\n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_DECL_STRERROR $ac_have_decl\n-_ACEOF\n-ac_fn_c_check_decl \"$LINENO\" \"strstr\" \"ac_cv_have_decl_strstr\" \"$ac_includes_default\"\n+  ac_fn_c_check_decl \"$LINENO\" \"strstr\" \"ac_cv_have_decl_strstr\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_strstr\" = xyes; then :\n   ac_have_decl=1\n else"
    },
    {
      "sha": "36dece61723c10cccc8d6ce6c31eaa28cf8f17d6",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -1,3 +1,18 @@\n+2019-12-10  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* Makefile.in: Add safe-strerror.c to gdbreplay and IPA, and change\n+\tUNDO_GNULIB_CFLAGS to undo strerror_r instead of strerror.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Don't check for strerror.\n+\t* linux-i386-ipa.c (initialize_fast_tracepoint_trampoline_buffer):\n+\tCall safe_strerror instead of strerror.\n+\t* server.h (strerror): Remove this now-unnecessary declaration.\n+\t* tracepoint.c (init_named_socket): Call safe_strerror instead of\n+\tstrerror.\n+\t(gdb_agent_helper_thread): Likewise.\n+\t* utils.c (perror_with_name): Likewise.\n+\n 2019-11-26  Tom Tromey  <tom@tromey.com>\n \n \t* configure, config.in: Rebuild."
    },
    {
      "sha": "10e004039f9661964bcd1f030b6ec2baae336222",
      "filename": "gdb/gdbserver/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/Makefile.in?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -304,6 +304,7 @@ GDBREPLAY_OBS = \\\n \tgdbsupport/errors.o \\\n \tgdbsupport/netstuff.o \\\n \tgdbsupport/print-utils.o \\\n+\tgdbsupport/safe-strerror.o \\\n \tgdbreplay.o \\\n \tutils.o \\\n \tversion.o\n@@ -430,6 +431,7 @@ IPA_OBJS = \\\n \tgdbsupport/format-ipa.o \\\n \tgdbsupport/print-utils-ipa.o \\\n \tgdbsupport/rsp-low-ipa.o \\\n+\tgdbsupport/safe-strerror-ipa.o \\\n \tgdbsupport/tdesc-ipa.o \\\n \tregcache-ipa.o \\\n \tremote-utils-ipa.o \\\n@@ -557,7 +559,7 @@ UST_CFLAGS = $(ustinc) -DCONFIG_UST_GDB_INTEGRATION\n # Undo gnulib replacements for the IPA shared library build.\n # The gnulib headers are still needed, but gnulib is not linked\n # into the IPA lib so replacement apis don't work.\n-UNDO_GNULIB_CFLAGS = -Drpl_strerror=strerror\n+UNDO_GNULIB_CFLAGS = -Drpl_strerror_r=strerror_r\n \n # Note, we only build the IPA if -fvisibility=hidden is supported in\n # the first place."
    },
    {
      "sha": "b1e58a394187161743665733f852bec9688e09ae",
      "filename": "gdb/gdbserver/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/config.in?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -54,10 +54,6 @@\n    don't. */\n #undef HAVE_DECL_SNPRINTF\n \n-/* Define to 1 if you have the declaration of `strerror', and to 0 if you\n-   don't. */\n-#undef HAVE_DECL_STRERROR\n-\n /* Define to 1 if you have the declaration of `strstr', and to 0 if you don't.\n    */\n #undef HAVE_DECL_STRSTR"
    },
    {
      "sha": "ccffde80edf5d7d58b2b8f3f43fea17641f30bc6",
      "filename": "gdb/gdbserver/configure",
      "status": "modified",
      "additions": 1,
      "deletions": 21,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/configure?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -7022,17 +7022,7 @@ fi\n done\n \n \n-  ac_fn_c_check_decl \"$LINENO\" \"strerror\" \"ac_cv_have_decl_strerror\" \"$ac_includes_default\"\n-if test \"x$ac_cv_have_decl_strerror\" = xyes; then :\n-  ac_have_decl=1\n-else\n-  ac_have_decl=0\n-fi\n-\n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_DECL_STRERROR $ac_have_decl\n-_ACEOF\n-ac_fn_c_check_decl \"$LINENO\" \"strstr\" \"ac_cv_have_decl_strstr\" \"$ac_includes_default\"\n+  ac_fn_c_check_decl \"$LINENO\" \"strstr\" \"ac_cv_have_decl_strstr\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_strstr\" = xyes; then :\n   ac_have_decl=1\n else\n@@ -8427,16 +8417,6 @@ _ACEOF\n \n \n \n-ac_fn_c_check_decl \"$LINENO\" \"strerror\" \"ac_cv_have_decl_strerror\" \"$ac_includes_default\"\n-if test \"x$ac_cv_have_decl_strerror\" = xyes; then :\n-  ac_have_decl=1\n-else\n-  ac_have_decl=0\n-fi\n-\n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_DECL_STRERROR $ac_have_decl\n-_ACEOF\n ac_fn_c_check_decl \"$LINENO\" \"perror\" \"ac_cv_have_decl_perror\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_perror\" = xyes; then :\n   ac_have_decl=1"
    },
    {
      "sha": "4a6d88ebd198ac8479b161028118768b9257b62b",
      "filename": "gdb/gdbserver/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/configure.ac?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -158,7 +158,7 @@ LIBS=\"$old_LIBS\"\n \n libiberty_INIT\n \n-AC_CHECK_DECLS([strerror, perror, vasprintf, vsnprintf])\n+AC_CHECK_DECLS([perror, vasprintf, vsnprintf])\n \n AC_CHECK_MEMBERS([struct stat.st_blocks, struct stat.st_blksize])\n "
    },
    {
      "sha": "4bbc1b5f5124aff045b4843402907a8c5224a433",
      "filename": "gdb/gdbserver/linux-i386-ipa.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/linux-i386-ipa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/linux-i386-ipa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-i386-ipa.c?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -210,7 +210,7 @@ initialize_fast_tracepoint_trampoline_buffer (void)\n   if (!f)\n     {    \n       snprintf (buf, sizeof (buf), \"mmap_min_addr open failed: %s\",\n-\t\tstrerror (errno));\n+\t\tsafe_strerror (errno));\n       set_trampoline_buffer_space (0, 0, buf);\n       return;\n     }\n@@ -233,7 +233,7 @@ initialize_fast_tracepoint_trampoline_buffer (void)\n       else\n \t{\n \t  snprintf (buf, IPA_BUFSIZ, \"low-64K-buffer mmap() failed: %s\",\n-\t\t    strerror (errno));\n+\t\t    safe_strerror (errno));\n \t  set_trampoline_buffer_space (0, 0, buf);\n \t}\n     }"
    },
    {
      "sha": "3326159dfe17ef832816e122318fcedc108836d8",
      "filename": "gdb/gdbserver/server.h",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/server.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/server.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/server.h?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -29,12 +29,6 @@ gdb_static_assert (sizeof (CORE_ADDR) >= sizeof (void *));\n \n #include \"gdbsupport/version.h\"\n \n-#if !HAVE_DECL_STRERROR\n-#ifndef strerror\n-extern char *strerror (int);\t/* X3.159-1989  4.11.6.2 */\n-#endif\n-#endif\n-\n #if !HAVE_DECL_PERROR\n #ifndef perror\n extern void perror (const char *);"
    },
    {
      "sha": "9f8a49174c47fc51adbe574a07480e9e48519da7",
      "filename": "gdb/gdbserver/tracepoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/tracepoint.c?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -6879,7 +6879,7 @@ init_named_socket (const char *name)\n   result = fd = socket (PF_UNIX, SOCK_STREAM, 0);\n   if (result == -1)\n     {\n-      warning (\"socket creation failed: %s\", strerror (errno));\n+      warning (\"socket creation failed: %s\", safe_strerror (errno));\n       return -1;\n     }\n \n@@ -6895,7 +6895,7 @@ init_named_socket (const char *name)\n       result = unlink (name);\n       if (result == -1)\n \t{\n-\t  warning (\"unlink failed: %s\", strerror (errno));\n+\t  warning (\"unlink failed: %s\", safe_strerror (errno));\n \t  close (fd);\n \t  return -1;\n \t}\n@@ -6905,15 +6905,15 @@ init_named_socket (const char *name)\n   result = bind (fd, (struct sockaddr *) &addr, sizeof (addr));\n   if (result == -1)\n     {\n-      warning (\"bind failed: %s\", strerror (errno));\n+      warning (\"bind failed: %s\", safe_strerror (errno));\n       close (fd);\n       return -1;\n     }\n \n   result = listen (fd, 1);\n   if (result == -1)\n     {\n-      warning (\"listen: %s\", strerror (errno));\n+      warning (\"listen: %s\", safe_strerror (errno));\n       close (fd);\n       return -1;\n     }\n@@ -7219,7 +7219,7 @@ gdb_agent_helper_thread (void *arg)\n \t  if (fd < 0)\n \t    {\n \t      warning (\"Accept returned %d, error: %s\",\n-\t\t       fd, strerror (errno));\n+\t\t       fd, safe_strerror (errno));\n \t      break;\n \t    }\n \n@@ -7231,7 +7231,7 @@ gdb_agent_helper_thread (void *arg)\n \t  if (ret == -1)\n \t    {\n \t      warning (\"reading socket (fd=%d) failed with %s\",\n-\t\t       fd, strerror (errno));\n+\t\t       fd, safe_strerror (errno));\n \t      close (fd);\n \t      break;\n \t    }"
    },
    {
      "sha": "b72dd0ec2b2c9bd35bc1dd01a6b5f1d375345abf",
      "filename": "gdb/gdbserver/utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbserver/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/utils.c?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -47,7 +47,7 @@ perror_with_name (const char *string)\n   const char *err;\n   char *combined;\n \n-  err = strerror (errno);\n+  err = safe_strerror (errno);\n   if (err == NULL)\n     err = \"unknown error\";\n "
    },
    {
      "sha": "50e9500ffc8def7db42946a86618645274d0bf5e",
      "filename": "gdb/gdbsupport/agent.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbsupport/agent.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbsupport/agent.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/agent.c?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -149,7 +149,7 @@ gdb_connect_sync_socket (int pid)\n   res = fd = gdb_socket_cloexec (PF_UNIX, SOCK_STREAM, 0);\n   if (res == -1)\n     {\n-      warning (_(\"error opening sync socket: %s\"), strerror (errno));\n+      warning (_(\"error opening sync socket: %s\"), safe_strerror (errno));\n       return -1;\n     }\n \n@@ -168,7 +168,7 @@ gdb_connect_sync_socket (int pid)\n     {\n       warning (_(\"error connecting sync socket (%s): %s. \"\n \t\t \"Make sure the directory exists and that it is writable.\"),\n-\t\t path, strerror (errno));\n+\t\t path, safe_strerror (errno));\n       close (fd);\n       return -1;\n     }"
    },
    {
      "sha": "c61753fb8e4ef3ef14fd95ee0000a896ccb659c2",
      "filename": "gdb/gdbsupport/common.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbsupport/common.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbsupport/common.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/common.m4?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -35,7 +35,7 @@ AC_DEFUN([GDB_AC_COMMON], [\n   AC_CHECK_FUNCS([fdwalk getrlimit pipe pipe2 socketpair sigaction \\\n \t\t  sigprocmask])\n \n-  AC_CHECK_DECLS([strerror, strstr])\n+  AC_CHECK_DECLS([strstr])\n \n   # Check for std::thread.  This does not work on some platforms, like\n   # mingw and DJGPP."
    },
    {
      "sha": "7425af590f789c1625013c9dc51b505a324ad7fd",
      "filename": "gdb/gdbsupport/safe-strerror.c",
      "status": "modified",
      "additions": 23,
      "deletions": 5,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbsupport/safe-strerror.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab7d13f07027e6232a21448ef51f0a52a96738a9/gdb/gdbsupport/safe-strerror.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/safe-strerror.c?ref=ab7d13f07027e6232a21448ef51f0a52a96738a9",
      "patch": "@@ -20,18 +20,36 @@\n #include \"common-defs.h\"\n #include <string.h>\n \n+/* There are two different versions of strerror_r; one is GNU-specific, the\n+   other XSI-compliant.  They differ in the return type.  This overload lets\n+   us choose the right behavior for each return type.  We cannot rely on Gnulib\n+   to solve this for us because IPA does not use Gnulib but uses this\n+   function.  */\n+\n+/* Called if we have a XSI-compliant strerror_r.  */\n+static char *\n+select_strerror_r (int res, char *buf)\n+{\n+  return res == 0 ? buf : nullptr;\n+}\n+\n+/* Called if we have a GNU strerror_r.  */\n+static char *\n+select_strerror_r (char *res, char *)\n+{\n+  return res;\n+}\n+\n /* Implementation of safe_strerror as defined in common-utils.h.  */\n \n const char *\n safe_strerror (int errnum)\n {\n   static thread_local char buf[1024];\n \n-  /* Assign the return value to an int, so we get an error if we accidentally\n-     get the wrong version of this function (glibc has two of them...).  */\n-  int ret = strerror_r (errnum, buf, sizeof (buf));\n-  if (ret == 0)\n-    return buf;\n+  char *res = select_strerror_r (strerror_r (errnum, buf, sizeof (buf)), buf);\n+  if (res != nullptr)\n+    return res;\n \n   xsnprintf (buf, sizeof buf, \"(undocumented errno %d)\", errnum);\n   return buf;"
    }
  ]
}