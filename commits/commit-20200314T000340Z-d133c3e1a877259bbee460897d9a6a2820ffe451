{
  "sha": "d133c3e1a877259bbee460897d9a6a2820ffe451",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDEzM2MzZTFhODc3MjU5YmJlZTQ2MDg5N2Q5YTZhMjgyMGZmZTQ1MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:40Z"
    },
    "message": "Convert D printing to value-based API\n\nAs with Rust and Go, it was straightforward to convert D to the\nvalue-based API directly.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* d-valprint.c (dynamic_array_type): Call d_value_print_inner.\n\t(d_value_print_inner): New function.\n\t* d-lang.h (d_value_print_inner): Declare.\n\t* d-lang.c (d_language_defn): Use d_value_print_inner.",
    "tree": {
      "sha": "6d0b51c75ff0f04eb258400b4bc6438067094172",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6d0b51c75ff0f04eb258400b4bc6438067094172"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d133c3e1a877259bbee460897d9a6a2820ffe451",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d133c3e1a877259bbee460897d9a6a2820ffe451",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d133c3e1a877259bbee460897d9a6a2820ffe451",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d133c3e1a877259bbee460897d9a6a2820ffe451/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "23b0f06be43054a9b182e7ea60a763c35302924a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23b0f06be43054a9b182e7ea60a763c35302924a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/23b0f06be43054a9b182e7ea60a763c35302924a"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 39,
    "deletions": 4
  },
  "files": [
    {
      "sha": "892ad87838d374f56eeb546ab6bd85fec638f5a8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d133c3e1a877259bbee460897d9a6a2820ffe451",
      "patch": "@@ -1,3 +1,10 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* d-valprint.c (dynamic_array_type): Call d_value_print_inner.\n+\t(d_value_print_inner): New function.\n+\t* d-lang.h (d_value_print_inner): Declare.\n+\t* d-lang.c (d_language_defn): Use d_value_print_inner.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* go-valprint.c (go_value_print_inner): New function."
    },
    {
      "sha": "4dbcf53bba77157e7c82f04b75e788ccc1bb8931",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=d133c3e1a877259bbee460897d9a6a2820ffe451",
      "patch": "@@ -225,7 +225,7 @@ extern const struct language_defn d_language_defn =\n   c_print_typedef,\t\t/* Print a typedef using appropriate\n \t\t\t\t   syntax.  */\n   d_val_print,\t\t\t/* Print a value using appropriate syntax.  */\n-  nullptr,\t\t\t/* la_value_print_inner */\n+  d_value_print_inner,\t\t/* la_value_print_inner */\n   c_value_print,\t\t/* Print a top-level value.  */\n   default_read_var_value,\t/* la_read_var_value */\n   NULL,\t\t\t\t/* Language specific skip_trampoline.  */"
    },
    {
      "sha": "9b4e504024f93d951ee701567feda435fea7b9bb",
      "filename": "gdb/d-lang.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/d-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/d-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.h?ref=d133c3e1a877259bbee460897d9a6a2820ffe451",
      "patch": "@@ -84,4 +84,10 @@ extern void d_val_print (struct type *type,\n \t\t\t struct value *val,\n \t\t\t const struct value_print_options *options);\n \n+/* Implement la_value_print_inner for D.  */\n+\n+extern void d_value_print_inner (struct value *val,\n+\t\t\t\t struct ui_file *stream, int recurse,\n+\t\t\t\t const struct value_print_options *options);\n+\n #endif /* !defined (D_LANG_H) */"
    },
    {
      "sha": "e26c1ea8fa11ba93477163221bb40dbf03210d7f",
      "filename": "gdb/d-valprint.c",
      "status": "modified",
      "additions": 25,
      "deletions": 3,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/d-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d133c3e1a877259bbee460897d9a6a2820ffe451/gdb/d-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-valprint.c?ref=d133c3e1a877259bbee460897d9a6a2820ffe451",
      "patch": "@@ -63,9 +63,7 @@ dynamic_array_type (struct type *type,\n       ival = value_at (true_type, addr);\n       true_type = value_type (ival);\n \n-      d_val_print (true_type,\n-\t\t   value_embedded_offset (ival), addr,\n-\t\t   stream, recurse + 1, ival, options);\n+      d_value_print_inner (ival, stream, recurse + 1, options);\n       return 0;\n     }\n   return 1;\n@@ -94,3 +92,27 @@ d_val_print (struct type *type, int embedded_offset,\n \t\t     recurse, val, options);\n     }\n }\n+\n+/* See d-lang.h.  */\n+\n+void\n+d_value_print_inner (struct value *val, struct ui_file *stream, int recurse,\n+\t\t     const struct value_print_options *options)\n+{\n+  int ret;\n+\n+  struct type *type = check_typedef (value_type (val));\n+  switch (TYPE_CODE (type))\n+    {\n+      case TYPE_CODE_STRUCT:\n+\tret = dynamic_array_type (type, value_embedded_offset (val),\n+\t\t\t\t  value_address (val),\n+\t\t\t\t  stream, recurse, val, options);\n+\tif (ret == 0)\n+\t  break;\n+\t/* Fall through.  */\n+      default:\n+\tc_value_print_inner (val, stream, recurse, options);\n+\tbreak;\n+    }\n+}"
    }
  ]
}