{
  "sha": "393707788800b05448201fbb184ba758e26960fd",
  "node_id": "C_kwDOANOeidoAKDM5MzcwNzc4ODgwMGIwNTQ0ODIwMWZiYjE4NGJhNzU4ZTI2OTYwZmQ",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-11-26T13:51:36Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-12T11:19:48Z"
    },
    "message": "gdb: new 'maint flush source-cache' command\n\nThis commit adds a new 'maint flush source-cache' command, this\nflushes the cache of source file contents.\n\nAfter flushing GDB is forced to reread source files the next time any\nsource lines are to be displayed.\n\nI've added a test for this new feature.  The test is a little weird,\nin that it modifies a source file after compilation, and makes use of\nthe cache flush so that the changes show up when listing the source\nfile.  I'm not sure when such a situation would ever crop up in real\nlife, but maybe we can imagine such cases.\n\nIn reality, this command is useful for testing the syntax highlighting\nwithin GDB, we can adjust the syntax highlighting settings, flush the\ncache, and then get the file contents re-highlighted using the new\nsettings.",
    "tree": {
      "sha": "678f039f2aa09dc16899e259c3530bfe6044a5aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/678f039f2aa09dc16899e259c3530bfe6044a5aa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/393707788800b05448201fbb184ba758e26960fd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/393707788800b05448201fbb184ba758e26960fd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/393707788800b05448201fbb184ba758e26960fd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/393707788800b05448201fbb184ba758e26960fd/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "8864ef428d92e58b48ec11136d3b91622345c838",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8864ef428d92e58b48ec11136d3b91622345c838",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8864ef428d92e58b48ec11136d3b91622345c838"
    }
  ],
  "stats": {
    "total": 68,
    "additions": 68,
    "deletions": 0
  },
  "files": [
    {
      "sha": "73eb022fcbb90bed0b88c2b318c94fd1e20d5ace",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/393707788800b05448201fbb184ba758e26960fd/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/393707788800b05448201fbb184ba758e26960fd/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=393707788800b05448201fbb184ba758e26960fd",
      "patch": "@@ -70,6 +70,9 @@ show debug linux-nat\n   debug lin-lwp' respectively.  Turning this setting on prints debug\n   messages relating to GDB's handling of native Linux inferiors.\n \n+maint flush source-cache\n+  Flush the contents of the source code cache.\n+\n * Changed commands\n \n maint packet"
    },
    {
      "sha": "2864950959ec956b47093bc762e4d2bd4d0241a2",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/393707788800b05448201fbb184ba758e26960fd/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/393707788800b05448201fbb184ba758e26960fd/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=393707788800b05448201fbb184ba758e26960fd",
      "patch": "@@ -39473,6 +39473,19 @@ frame cache.  This command is useful when debugging issues related to\n register fetching, or frame unwinding.  The command @code{flushregs}\n is deprecated in favor of @code{maint flush register-cache}.\n \n+@kindex maint flush source-cache\n+@cindex source code, caching\n+@item maint flush source-cache\n+Flush @value{GDBN}'s cache of source code file contents.  After\n+@value{GDBN} reads a source file, and optionally applies styling\n+(@pxref{Output Styling}), the file contents are cached.  This command\n+clears that cache.  The next time @value{GDBN} wants to show lines\n+from a source file, the content will be re-read.\n+\n+This command is useful when debugging issues related to source code\n+styling.  After flushing the cache any source code displayed by\n+@value{GDBN} will be re-read and re-styled.\n+\n @kindex maint print objfiles\n @cindex info for known object files\n @item maint print objfiles @r{[}@var{regexp}@r{]}"
    },
    {
      "sha": "0650768cc0eb639bc45808b523d3b509cf72c152",
      "filename": "gdb/source-cache.c",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/393707788800b05448201fbb184ba758e26960fd/gdb/source-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/393707788800b05448201fbb184ba758e26960fd/gdb/source-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source-cache.c?ref=393707788800b05448201fbb184ba758e26960fd",
      "patch": "@@ -25,6 +25,7 @@\n #include \"gdbsupport/selftest.h\"\n #include \"objfiles.h\"\n #include \"exec.h\"\n+#include \"cli/cli-cmds.h\"\n \n #ifdef HAVE_SOURCE_HIGHLIGHT\n /* If Gnulib redirects 'open' and 'close' to its replacements\n@@ -323,6 +324,15 @@ source_cache::get_source_lines (struct symtab *s, int first_line,\n \t\t\tfirst_line, last_line, lines);\n }\n \n+/* Implement 'maint flush source-cache' command.  */\n+\n+static void\n+source_cache_flush_command (const char *command, int from_tty)\n+{\n+  forget_cached_source_info ();\n+  printf_filtered (_(\"Source cache flushed.\\n\"));\n+}\n+\n #if GDB_SELF_TEST\n namespace selftests\n {\n@@ -346,6 +356,10 @@ void _initialize_source_cache ();\n void\n _initialize_source_cache ()\n {\n+  add_cmd (\"source-cache\", class_maintenance, source_cache_flush_command,\n+\t   _(\"Force gdb to flush its source code cache.\"),\n+\t   &maintenanceflushlist);\n+\n #if GDB_SELF_TEST\n   selftests::register_test (\"source-cache\", selftests::extract_lines_test);\n #endif"
    },
    {
      "sha": "75a13378691399c0bb6e84102ad8b80301c77450",
      "filename": "gdb/testsuite/gdb.base/cached-source-file.exp",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/393707788800b05448201fbb184ba758e26960fd/gdb/testsuite/gdb.base/cached-source-file.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/393707788800b05448201fbb184ba758e26960fd/gdb/testsuite/gdb.base/cached-source-file.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/cached-source-file.exp?ref=393707788800b05448201fbb184ba758e26960fd",
      "patch": "@@ -100,3 +100,41 @@ gdb_test \"run\" $re \"rerun program\" $q y\n # changed for GDB.\n gdb_test \"list\" \"${bp_line}\\[ \\t\\]+printf \\\\(\\\"foo\\\\\\\\n\\\"\\\\); /\\\\\\* new-marker \\\\\\*/.*\" \\\n     \"verify that the source code is properly reloaded\"\n+\n+# Modify the source file again.  As before, this only works locally\n+# because of the TCL commands.\n+set bkpsrc [standard_output_file $testfile].c.bkp\n+set bkpsrcfd [open $bkpsrc w]\n+set srcfd [open $srcfile r]\n+\n+while { [gets $srcfd line] != -1 } {\n+    if { [string first \"new-marker\" $line] != -1 } {\n+\t# Modify the printf line that we added previously.\n+\tputs $bkpsrcfd \"  printf (\\\"foo\\\\n\\\"); /* new-marker updated */\"\n+    } else {\n+\tputs $bkpsrcfd $line\n+    }\n+}\n+\n+close $bkpsrcfd\n+close $srcfd\n+file rename -force -- $bkpsrc $srcfile\n+\n+# As before, delay so that at least one second has passed.  GDB still\n+# will not spot that the source file has changed, as GDB doesn't do a\n+# time check unless the binary has also changed, this delay just\n+# allows us to confirm this behaviour.\n+sleep 1\n+\n+# List the printf line again, we should not see the file changes yet\n+# as the binary is unchanged, so the cached contents will still be\n+# used.\n+gdb_test \"list ${bp_line}\" \"${bp_line}\\[ \\t\\]+printf \\\\(\\\"foo\\\\\\\\n\\\"\\\\); /\\\\\\* new-marker \\\\\\*/.*\" \\\n+    \"verify that the source code change is not seen yet\"\n+\n+gdb_test \"maint flush source-cache\" \"Source cache flushed\\\\.\"\n+\n+# List the printf line again.  After the cache flush GDB will re-read\n+# the source file and we should now see the changes.\n+gdb_test \"list ${bp_line}\" \"${bp_line}\\[ \\t\\]+printf \\\\(\\\"foo\\\\\\\\n\\\"\\\\); /\\\\\\* new-marker updated \\\\\\*/.*\" \\\n+    \"verify that the updated source code change is not seen\""
    }
  ]
}