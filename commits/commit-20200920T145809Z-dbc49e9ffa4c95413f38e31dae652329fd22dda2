{
  "sha": "dbc49e9ffa4c95413f38e31dae652329fd22dda2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGJjNDllOWZmYTRjOTU0MTNmMzhlMzFkYWU2NTIzMjlmZDIyZGRhMg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-20T14:58:09Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-20T14:58:09Z"
    },
    "message": "Robustify gdb.base/testenv.exp:find_env\n\nIf printing 'envp[$i]' in find_env fails, the testcase goes into an\ninfinite loop:\n\n Running /home/pedro/rocm/gdb/build/gdb/testsuite/../../../src/gdb/testsuite/gdb.base/testenv.exp ...\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[0] ? envp[0] : \"\"\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[1] ? envp[1] : \"\"\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[2] ? envp[2] : \"\"\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[3] ? envp[3] : \"\"\n ...\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[2519] ? envp[2519] : \"\"\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[2520] ? envp[2520] : \"\"\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[2521] ? envp[2521] : \"\"\n ..\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[5128] ? envp[5128] : \"\"\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[5129] ? envp[5129] : \"\"\n FAIL: gdb.base/testenv.exp: test_inherit_env_var: test1: printf \"var1: %s\\n\", envp[5130] ? envp[5130] : \"\"\n ...\n\nFix that by bailing out of the loop on failure.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/testenv.exp (find_env): Bail out if printing 'envp[$i]'\n\tfails.",
    "tree": {
      "sha": "70fcb264ac3d340ddfb693ce0bb8fbcd7e403408",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/70fcb264ac3d340ddfb693ce0bb8fbcd7e403408"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dbc49e9ffa4c95413f38e31dae652329fd22dda2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dbc49e9ffa4c95413f38e31dae652329fd22dda2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dbc49e9ffa4c95413f38e31dae652329fd22dda2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dbc49e9ffa4c95413f38e31dae652329fd22dda2/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "851257b5fc3a21659cfb2504c03001535756cf4a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/851257b5fc3a21659cfb2504c03001535756cf4a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/851257b5fc3a21659cfb2504c03001535756cf4a"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 11,
    "deletions": 0
  },
  "files": [
    {
      "sha": "71ec4951f16fb8442fa20f15a9e54e6e99a053e4",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dbc49e9ffa4c95413f38e31dae652329fd22dda2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dbc49e9ffa4c95413f38e31dae652329fd22dda2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=dbc49e9ffa4c95413f38e31dae652329fd22dda2",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-20  Pedro Alves  <pedro@palves.net>\n+\n+\t* gdb.base/testenv.exp (find_env): Bail out if printing 'envp[$i]'\n+\tfails.\n+\n 2020-09-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/array-slices.exp: Update expected results."
    },
    {
      "sha": "4dea043472c891c5a7702a90366fe9e3f0e048fd",
      "filename": "gdb/testsuite/gdb.base/testenv.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dbc49e9ffa4c95413f38e31dae652329fd22dda2/gdb/testsuite/gdb.base/testenv.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dbc49e9ffa4c95413f38e31dae652329fd22dda2/gdb/testsuite/gdb.base/testenv.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/testenv.exp?ref=dbc49e9ffa4c95413f38e31dae652329fd22dda2",
      "patch": "@@ -68,6 +68,12 @@ proc find_env {varname} {\n \t    -re \"var: \\(\\[^\\r\\n\\]*\\)\\r\\n$gdb_prompt $\" {\n \t\tset var $expect_out(1,string)\n \t    }\n+\t    -re \"$gdb_prompt $\" {\n+\t\t# If this fails, bail out, otherwise we get stuck in\n+\t\t# an infinite loop.  The caller will end up emiting a\n+\t\t# FAIL.\n+\t\treturn \"<fail>\"\n+\t    }\n \t}\n \n \tif {[string match \"$varname=*\" $var]} {"
    }
  ]
}