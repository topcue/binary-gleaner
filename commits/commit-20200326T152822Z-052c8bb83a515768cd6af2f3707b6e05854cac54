{
  "sha": "052c8bb83a515768cd6af2f3707b6e05854cac54",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDUyYzhiYjgzYTUxNTc2OGNkNmFmMmYzNzA3YjZlMDU4NTRjYWM1NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-26T15:28:22Z"
    },
    "message": "Change dwarf2_attr_no_follow to be a method\n\nThis changes dwarf2_attr_no_follow to be a method on die_info.\n\ngdb/ChangeLog\n2020-03-26  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (lookup_addr_base, lookup_ranges_base)\n\t(build_type_psymtabs_reader, read_structure_type)\n\t(read_enumeration_type, read_full_die_1): Update.\n\t(dwarf2_attr_no_follow): Move to die.h.\n\t* dwarf2/die.h (struct die_info) <attr>: New method.",
    "tree": {
      "sha": "75c7a9fb9abf44e361dbf48d7d40f6d422995c34",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/75c7a9fb9abf44e361dbf48d7d40f6d422995c34"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/052c8bb83a515768cd6af2f3707b6e05854cac54",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/052c8bb83a515768cd6af2f3707b6e05854cac54",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/052c8bb83a515768cd6af2f3707b6e05854cac54",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/052c8bb83a515768cd6af2f3707b6e05854cac54/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2b24b6e4a6d03efc3e76ce6912394e4a86cc387b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b24b6e4a6d03efc3e76ce6912394e4a86cc387b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2b24b6e4a6d03efc3e76ce6912394e4a86cc387b"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 27,
    "deletions": 29
  },
  "files": [
    {
      "sha": "b2916b233b0e413e51f54cea43fdc3871628bde6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/052c8bb83a515768cd6af2f3707b6e05854cac54/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/052c8bb83a515768cd6af2f3707b6e05854cac54/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=052c8bb83a515768cd6af2f3707b6e05854cac54",
      "patch": "@@ -1,3 +1,11 @@\n+2020-03-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (lookup_addr_base, lookup_ranges_base)\n+\t(build_type_psymtabs_reader, read_structure_type)\n+\t(read_enumeration_type, read_full_die_1): Update.\n+\t(dwarf2_attr_no_follow): Move to die.h.\n+\t* dwarf2/die.h (struct die_info) <attr>: New method.\n+\n 2020-03-26  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (struct dwarf2_cu) <base_known>: Remove."
    },
    {
      "sha": "3a265b7df03ec3d4bb0f932b2f1890d9be508cb4",
      "filename": "gdb/dwarf2/die.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/052c8bb83a515768cd6af2f3707b6e05854cac54/gdb/dwarf2/die.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/052c8bb83a515768cd6af2f3707b6e05854cac54/gdb/dwarf2/die.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/die.h?ref=052c8bb83a515768cd6af2f3707b6e05854cac54",
      "patch": "@@ -23,6 +23,17 @@\n /* This data structure holds a complete die structure.  */\n struct die_info\n {\n+  /* Return the named attribute or NULL if not there, but do not\n+     follow DW_AT_specification, etc.  */\n+  struct attribute *attr (dwarf_attribute name)\n+  {\n+    for (unsigned i = 0; i < num_attrs; ++i)\n+      if (attrs[i].name == name)\n+\treturn &attrs[i];\n+    return NULL;\n+  }\n+\n+\n   /* DWARF-2 tag for this DIE.  */\n   ENUM_BITFIELD(dwarf_tag) tag : 16;\n "
    },
    {
      "sha": "fbfd6f5ae4ba6e36fbe3ce3131355507d2e46338",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 8,
      "deletions": 29,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/052c8bb83a515768cd6af2f3707b6e05854cac54/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/052c8bb83a515768cd6af2f3707b6e05854cac54/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=052c8bb83a515768cd6af2f3707b6e05854cac54",
      "patch": "@@ -1224,9 +1224,6 @@ static void set_cu_language (unsigned int, struct dwarf2_cu *);\n static struct attribute *dwarf2_attr (struct die_info *, unsigned int,\n \t\t\t\t      struct dwarf2_cu *);\n \n-static struct attribute *dwarf2_attr_no_follow (struct die_info *,\n-\t\t\t\t\t\tunsigned int);\n-\n static const char *dwarf2_string_attr (struct die_info *die, unsigned int name,\n                                        struct dwarf2_cu *cu);\n \n@@ -6397,9 +6394,9 @@ static gdb::optional<ULONGEST>\n lookup_addr_base (struct die_info *comp_unit_die)\n {\n   struct attribute *attr;\n-  attr = dwarf2_attr_no_follow (comp_unit_die, DW_AT_addr_base);\n+  attr = comp_unit_die->attr (DW_AT_addr_base);\n   if (attr == nullptr)\n-    attr = dwarf2_attr_no_follow (comp_unit_die, DW_AT_GNU_addr_base);\n+    attr = comp_unit_die->attr (DW_AT_GNU_addr_base);\n   if (attr == nullptr)\n     return gdb::optional<ULONGEST> ();\n   return DW_UNSND (attr);\n@@ -6411,9 +6408,9 @@ static ULONGEST\n lookup_ranges_base (struct die_info *comp_unit_die)\n {\n   struct attribute *attr;\n-  attr = dwarf2_attr_no_follow (comp_unit_die, DW_AT_rnglists_base);\n+  attr = comp_unit_die->attr (DW_AT_rnglists_base);\n   if (attr == nullptr)\n-    attr = dwarf2_attr_no_follow (comp_unit_die, DW_AT_GNU_ranges_base);\n+    attr = comp_unit_die->attr (DW_AT_GNU_ranges_base);\n   if (attr == nullptr)\n     return 0;\n   return DW_UNSND (attr);\n@@ -7399,7 +7396,7 @@ build_type_psymtabs_reader (const struct die_reader_specs *reader,\n   if (! type_unit_die->has_children)\n     return;\n \n-  attr = dwarf2_attr_no_follow (type_unit_die, DW_AT_stmt_list);\n+  attr = type_unit_die->attr (DW_AT_stmt_list);\n   tu_group = get_type_unit_group (cu, attr);\n \n   if (tu_group->tus == nullptr)\n@@ -14977,7 +14974,7 @@ read_structure_type (struct die_info *die, struct dwarf2_cu *cu)\n   /* If the definition of this type lives in .debug_types, read that type.\n      Don't follow DW_AT_specification though, that will take us back up\n      the chain and we want to go down.  */\n-  attr = dwarf2_attr_no_follow (die, DW_AT_signature);\n+  attr = die->attr (DW_AT_signature);\n   if (attr != nullptr)\n     {\n       type = get_DW_AT_signature_type (die, attr, cu);\n@@ -15513,7 +15510,7 @@ read_enumeration_type (struct die_info *die, struct dwarf2_cu *cu)\n   /* If the definition of this type lives in .debug_types, read that type.\n      Don't follow DW_AT_specification though, that will take us back up\n      the chain and we want to go down.  */\n-  attr = dwarf2_attr_no_follow (die, DW_AT_signature);\n+  attr = die->attr (DW_AT_signature);\n   if (attr != nullptr)\n     {\n       type = get_DW_AT_signature_type (die, attr, cu);\n@@ -17539,7 +17536,7 @@ read_full_die_1 (const struct die_reader_specs *reader,\n         indexes_that_need_reprocess.push_back (i);\n     }\n \n-  struct attribute *attr = dwarf2_attr_no_follow (die, DW_AT_str_offsets_base);\n+  struct attribute *attr = die->attr (DW_AT_str_offsets_base);\n   if (attr != nullptr)\n     cu->str_offsets_base = DW_UNSND (attr);\n \n@@ -18982,24 +18979,6 @@ dwarf2_attr (struct die_info *die, unsigned int name, struct dwarf2_cu *cu)\n   return NULL;\n }\n \n-/* Return the named attribute or NULL if not there,\n-   but do not follow DW_AT_specification, etc.\n-   This is for use in contexts where we're reading .debug_types dies.\n-   Following DW_AT_specification, DW_AT_abstract_origin will take us\n-   back up the chain, and we want to go down.  */\n-\n-static struct attribute *\n-dwarf2_attr_no_follow (struct die_info *die, unsigned int name)\n-{\n-  unsigned int i;\n-\n-  for (i = 0; i < die->num_attrs; ++i)\n-    if (die->attrs[i].name == name)\n-      return &die->attrs[i];\n-\n-  return NULL;\n-}\n-\n /* Return the string associated with a string-typed attribute, or NULL if it\n    is either not found or is of an incorrect type.  */\n "
    }
  ]
}