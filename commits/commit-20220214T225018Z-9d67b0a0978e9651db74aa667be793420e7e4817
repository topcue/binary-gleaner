{
  "sha": "9d67b0a0978e9651db74aa667be793420e7e4817",
  "node_id": "C_kwDOANOeidoAKDlkNjdiMGEwOTc4ZTk2NTFkYjc0YWE2NjdiZTc5MzQyMGU3ZTQ4MTc",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@axis.com",
      "date": "2022-02-14T22:50:18Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2022-02-14T22:50:18Z"
    },
    "message": "sim cris: Correct PRIu32 to PRIx32\n\nIn 5ee0bc23a68f \"sim: clean up bfd_vma printing\" there was\nan additional introduction of PRIx32 and PRIu32 but just in\nsim/cris/sim-if.c.  One type of bug was fixed in commit\nd16ce6e4d581 \"sim: cris: fix memory setup typos\" but one\nremained; the PRIu32 usage is wrong, as hex output is\ndesired; note the 0x prefix.\n\nWithout this fix, you'll see output like:\n memory map 0:0x4000..0x5fff (8192 bytes) overlaps 0:0x0..0x16383 (91012 bytes)\n program stopped with signal 6 (Aborted).\nfor some C programs, like some of the ones in the sim/cris/c\ntestsuite from where the example is taken (freopen2.c).\n\nThe bug behavior was with memory allocation.  With an\nattempt to allocate memory using the brk syscall such that\nthe room up to the next 8192-byte \"page boundary\" wasn't\nsufficient, the simulator memory allocation machinery horked\non a consistency error when trying to allocate a memory\nblock to raise the \"end of the data segment\": there was\nalready memory allocated at that address.\n\nUnfortunately, none of the programs in sim/cris/asm exposed\nthis bug at the time, but an assembler test-case is\ncommitted after this fix.\n\nsim/cris:\n\t* sim-if.c (sim_open): Correct PRIu32 to PRIx32.",
    "tree": {
      "sha": "e9dd361ebcf7b6ed476bf7b4acaa0dd2aa90a335",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e9dd361ebcf7b6ed476bf7b4acaa0dd2aa90a335"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9d67b0a0978e9651db74aa667be793420e7e4817",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d67b0a0978e9651db74aa667be793420e7e4817",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9d67b0a0978e9651db74aa667be793420e7e4817",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d67b0a0978e9651db74aa667be793420e7e4817/comments",
  "author": {
    "login": "hpataxisdotcom",
    "id": 80339731,
    "node_id": "MDQ6VXNlcjgwMzM5NzMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hpataxisdotcom",
    "html_url": "https://github.com/hpataxisdotcom",
    "followers_url": "https://api.github.com/users/hpataxisdotcom/followers",
    "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}",
    "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions",
    "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs",
    "repos_url": "https://api.github.com/users/hpataxisdotcom/repos",
    "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "a532eb7277ff64fb073e209d418b0a97f686c0e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a532eb7277ff64fb073e209d418b0a97f686c0e3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a532eb7277ff64fb073e209d418b0a97f686c0e3"
    }
  ],
  "stats": {
    "total": 2,
    "additions": 1,
    "deletions": 1
  },
  "files": [
    {
      "sha": "63deb467bc075d6a958216b1c94c0512b2fc4f4b",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d67b0a0978e9651db74aa667be793420e7e4817/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d67b0a0978e9651db74aa667be793420e7e4817/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=9d67b0a0978e9651db74aa667be793420e7e4817",
      "patch": "@@ -887,7 +887,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \n   /* Allocate core managed memory if none specified by user.  */\n   if (sim_core_read_buffer (sd, NULL, read_map, &c, startmem, 1) == 0)\n-    sim_do_commandf (sd, \"memory region 0x%\" PRIx32 \",0x%\" PRIu32,\n+    sim_do_commandf (sd, \"memory region 0x%\" PRIx32 \",0x%\" PRIx32,\n \t\t     startmem, endmem - startmem);\n \n   /* Allocate simulator I/O managed memory if none specified by user.  */"
    }
  ]
}