{
  "sha": "984af2cb260aec903280aa3f1dd47be6d5dc69de",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTg0YWYyY2IyNjBhZWM5MDMyODBhYTNmMWRkNDdiZTZkNWRjNjlkZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:07Z"
    },
    "message": "Change parameters to rust_subscript\n\nThis changes the parameters to rust_subscript, making it more suitable\nfor reuse by the (coming) new expression code.  In particular,\nrust_subscript no longer evaluates its subexpressions.  Instead, they\nare passed in.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (rust_subscript): Change parameters.\n\t(rust_evaluate_subexp): Update.",
    "tree": {
      "sha": "dcd32f4c431fbfa0dcd2159544798c47f7cc38b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dcd32f4c431fbfa0dcd2159544798c47f7cc38b0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/984af2cb260aec903280aa3f1dd47be6d5dc69de",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/984af2cb260aec903280aa3f1dd47be6d5dc69de",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/984af2cb260aec903280aa3f1dd47be6d5dc69de",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/984af2cb260aec903280aa3f1dd47be6d5dc69de/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d148f80354c0dbf01823655f82e239dd60250f35",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d148f80354c0dbf01823655f82e239dd60250f35",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d148f80354c0dbf01823655f82e239dd60250f35"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 20,
    "deletions": 9
  },
  "files": [
    {
      "sha": "7849e59be33f8a77d1d2ac0491b0784e9d8d5455",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/984af2cb260aec903280aa3f1dd47be6d5dc69de/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/984af2cb260aec903280aa3f1dd47be6d5dc69de/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=984af2cb260aec903280aa3f1dd47be6d5dc69de",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (rust_subscript): Change parameters.\n+\t(rust_evaluate_subexp): Update.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (rust_range): Change parameters."
    },
    {
      "sha": "5a937d95efae8b62ae3881efc277570ede4b2da0",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 15,
      "deletions": 9,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/984af2cb260aec903280aa3f1dd47be6d5dc69de/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/984af2cb260aec903280aa3f1dd47be6d5dc69de/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=984af2cb260aec903280aa3f1dd47be6d5dc69de",
      "patch": "@@ -1168,21 +1168,18 @@ rust_compute_range (struct type *type, struct value *range,\n /* A helper for rust_evaluate_subexp that handles BINOP_SUBSCRIPT.  */\n \n static struct value *\n-rust_subscript (struct expression *exp, int *pos, enum noside noside,\n-\t\tint for_addr)\n+rust_subscript (struct type *expect_type, struct expression *exp,\n+\t\tenum noside noside, bool for_addr,\n+\t\tstruct value *lhs, struct value *rhs)\n {\n-  struct value *lhs, *rhs, *result;\n+  struct value *result;\n   struct type *rhstype;\n   LONGEST low, high_bound;\n   /* Initialized to appease the compiler.  */\n   range_flags kind = RANGE_LOW_BOUND_DEFAULT | RANGE_HIGH_BOUND_DEFAULT;\n   LONGEST high = 0;\n   int want_slice = 0;\n \n-  ++*pos;\n-  lhs = evaluate_subexp (nullptr, exp, pos, noside);\n-  rhs = evaluate_subexp (nullptr, exp, pos, noside);\n-\n   if (noside == EVAL_SKIP)\n     return lhs;\n \n@@ -1374,7 +1371,12 @@ rust_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       break;\n \n     case BINOP_SUBSCRIPT:\n-      result = rust_subscript (exp, pos, noside, 0);\n+      {\n+\t++*pos;\n+\tstruct value *lhs = evaluate_subexp (nullptr, exp, pos, noside);\n+\tstruct value *rhs = evaluate_subexp (nullptr, exp, pos, noside);\n+\tresult = rust_subscript (expect_type, exp, noside, false, lhs, rhs);\n+      }\n       break;\n \n     case OP_FUNCALL:\n@@ -1628,7 +1630,11 @@ tuple structs, and tuple-like enum variants\"));\n       if (exp->elts[*pos + 1].opcode == BINOP_SUBSCRIPT)\n \t{\n \t  ++*pos;\n-\t  result = rust_subscript (exp, pos, noside, 1);\n+\t  ++*pos;\n+\t  struct value *lhs = evaluate_subexp (nullptr, exp, pos, noside);\n+\t  struct value *rhs = evaluate_subexp (nullptr, exp, pos, noside);\n+\n+\t  result = rust_subscript (expect_type, exp, noside, true, lhs, rhs);\n \t  break;\n \t}\n       /* Fall through.  */"
    }
  ]
}