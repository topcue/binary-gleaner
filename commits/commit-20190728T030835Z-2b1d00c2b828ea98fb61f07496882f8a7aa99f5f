{
  "sha": "2b1d00c2b828ea98fb61f07496882f8a7aa99f5f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmIxZDAwYzJiODI4ZWE5OGZiNjFmMDc0OTY4ODJmOGE3YWE5OWY1Zg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-20T20:46:29Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-28T03:08:35Z"
    },
    "message": "Add test case for empty TUI windows\n\nMy original intent here was to add a test case to test that empty TUI\nwindows re-render their contents after a resize.  However, this seems\npretty broken at the moment, so a lot of the test is actually\ndisabled.\n\ngdb/testsuite/ChangeLog\n2019-07-27  Tom Tromey  <tom@tromey.com>\n\n\t* lib/tuiterm.exp (Term::clean_restart): Make \"executable\"\n\toptional.\n\t* gdb.tui/empty.exp: New file.",
    "tree": {
      "sha": "599318d582d950d732d4b4484dede3c989b6795b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/599318d582d950d732d4b4484dede3c989b6795b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ded631d57dec8c75ff5713f062b1c5667c31ec23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ded631d57dec8c75ff5713f062b1c5667c31ec23",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ded631d57dec8c75ff5713f062b1c5667c31ec23"
    }
  ],
  "stats": {
    "total": 120,
    "additions": 117,
    "deletions": 3
  },
  "files": [
    {
      "sha": "3b3937583ee04a004c6491761fe4ee11bcf6421b",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2b1d00c2b828ea98fb61f07496882f8a7aa99f5f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-27  Tom Tromey  <tom@tromey.com>\n+\n+\t* lib/tuiterm.exp (Term::clean_restart): Make \"executable\"\n+\toptional.\n+\t* gdb.tui/empty.exp: New file.\n+\n 2019-07-27  Tom Tromey  <tom@tromey.com>\n \n \t* lib/tuiterm.exp (spawn): New proc."
    },
    {
      "sha": "90e26b3316e57b0c818f6b6c71589d8d12ad24b2",
      "filename": "gdb/testsuite/gdb.tui/empty.exp",
      "status": "added",
      "additions": 103,
      "deletions": 0,
      "changes": 103,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f/gdb/testsuite/gdb.tui/empty.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f/gdb/testsuite/gdb.tui/empty.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/empty.exp?ref=2b1d00c2b828ea98fb61f07496882f8a7aa99f5f",
      "patch": "@@ -0,0 +1,103 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test TUI resizing with empty windows.\n+\n+load_lib \"tuiterm.exp\"\n+\n+standard_testfile\n+\n+Term::clean_restart 24 80\n+\n+if {![Term::enter_tui]} {\n+    unsupported \"TUI not supported\"\n+}\n+\n+# Each entry describes a layout.  It has these items:\n+# 1. Layout name\n+# 2. Test name\n+# 3. List of boxes in 80x24 mode\n+# 4. List of boxes in 90x40 mode\n+# 5. List of test name and text for the empty window\n+set layouts {\n+    {src src {{3 0 77 15}} {{3 0 87 23}}\n+\t{{\"no source\" \"No Source Available\"}}}\n+    {regs src-regs {{0 0 80 8} {3 7 77 8}} {{0 0 90 13} {3 13 87 13}}\n+\t{\n+\t    {\"no source\" \"No Source Available\"}\n+\t    {\"no regs\" \"Register Values Unavailable\"}\n+\t}}\n+    {asm asm {{3 0 77 15}} {{3 0 87 24}}\n+\t{\"no asm\" \"No Assembly Available\"}}\n+    {regs asm-regs {{0 0 80 8} {3 7 77 9}} {{0 0 90 13} {3 13 87 14}}\n+\t{\n+\t    {\"no asm\" \"No Assembly Available\"}\n+\t    {\"no regs\" \"Register Values Unavailable\"}\n+\t}}\n+    {split split {{3 0 77 8} {3 7 77 9}} {{3 0 87 14} {3 14 87 14}}\n+\t{\n+\t    {\"no source\" \"No Source Available\"}\n+\t    {\"no asm\" \"No Assembly Available\"}\n+\t}}\n+    {regs split-regs {{0 0 80 8} {3 7 77 9}} {{0 0 90 13} {3 13 87 14}}\n+\t{\n+\t    {\"no asm\" \"No Assembly Available\"}\n+\t    {\"no regs\" \"Register Values Unavailable\"}\n+\t}}\n+}\n+\n+# Helper function to verify a list of boxes.\n+proc check_boxes {boxes} {\n+    set boxno 1\n+    foreach box $boxes {\n+\tif {$boxno > 1} {\n+\t    # The upper-left corner of the second box may not render\n+\t    # properly, due to overlap.\n+\t    setup_xfail *-*-*\n+\t}\n+\teval Term::check_box [list \"box $boxno\"] $box\n+\tincr boxno\n+    }\n+}\n+\n+# Helper function to verify text.\n+proc check_text {text_list} {\n+    set text [Term::get_all_lines]\n+    foreach item $text_list {\n+\tlassign $item testname check\n+\tgdb_assert {[string first $check $text]} $testname\n+    }\n+}\n+\n+foreach layout $layouts {\n+    lassign $layout name testname small_boxes large_boxes text_list\n+\n+    with_test_prefix $testname {\n+\tTerm::command \"layout $name\"\n+\twith_test_prefix 80x24 {\n+\t    check_boxes $small_boxes\n+\t    check_text $text_list\n+\t}\n+\n+\t# FIXME: resizing is broken enough that we don't test it for\n+\t# now.\n+\t# Term::resize 40 90\n+\t# with_test_prefix 90x40 {\n+\t#     check_boxes $large_boxes\n+\t#     check_text $text_list\n+\t# }\n+\t# Term::resize 24 80\n+    }\n+}"
    },
    {
      "sha": "c58b7cfda215f8a0dde940e8f658ef41e5241557",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b1d00c2b828ea98fb61f07496882f8a7aa99f5f/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=2b1d00c2b828ea98fb61f07496882f8a7aa99f5f",
      "patch": "@@ -392,13 +392,18 @@ namespace eval Term {\n \n     # Like ::clean_restart, but ensures that gdb starts in an\n     # environment where the TUI can work.  ROWS and COLS are the size\n-    # of the terminal.  EXECUTABLE is passed to clean_restart.\n-    proc clean_restart {rows cols executable} {\n+    # of the terminal.  EXECUTABLE, if given, is passed to\n+    # clean_restart.\n+    proc clean_restart {rows cols {executable {}}} {\n \tglobal env stty_init\n \tsave_vars {env(TERM) stty_init} {\n \t    setenv TERM ansi\n \t    _setup $rows $cols\n-\t    ::clean_restart $executable\n+\t    if {$executable == \"\"} {\n+\t\t::clean_restart\n+\t    } else {\n+\t\t::clean_restart $executable\n+\t    }\n \t}\n     }\n "
    }
  ]
}