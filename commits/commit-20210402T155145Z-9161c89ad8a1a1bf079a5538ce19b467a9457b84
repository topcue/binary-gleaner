{
  "sha": "9161c89ad8a1a1bf079a5538ce19b467a9457b84",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTE2MWM4OWFkOGExYTFiZjA3OWE1NTM4Y2UxOWI0NjdhOTQ1N2I4NA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-02T15:50:45Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-02T15:51:45Z"
    },
    "message": "gdb: remove objfile parameter from get_objfile_bfd_data\n\nI noticed it was unused.  I think that makes sense, as it shows that\nobjfile_per_bfd_storage is not specific to one objfile (it can be shared\nby multiple objfiles that have the same bfd).\n\nThere is one thing I wonder though, maybe I'm missing something.  If\nthe BFD doesn't require relocation, get_objfile_bfd_data stores the\nnewly allocated object in objfiles_bfd_data, so we can assume that\nobjfiles_bfd_data is the owner of the object.  When the bfd's refcount\ndrops to 0, the corresponding objfile_per_bfd_storage object in\nobjfiles_bfd_data is deleted.\n\nBut if the BFD requires relocation, get_objfile_bfd_data returns a newly\nallocated object that isn't kept anywhere else (and isn't shared).  So\nthe objfile becomes the owner of the objfile_per_bfd_storage object.  In\nobjfile::~objfile, we have this:\n\n    if (obfd)\n      gdb_bfd_unref (obfd);\n    else\n      delete per_bfd;\n\nI'm thinking that obfd could be non-nullptr, and it could require\nrelocation.  In that case, it would never be freed.  Anyway, that's not\nreally connected to this patch.\n\ngdb/ChangeLog:\n\n\t* objfiles.c (get_objfile_bfd_data): Remove objfile parameter,\n\tadjust callers.\n\nChange-Id: Ifa3158074ea6b42686780ba09d0c964b0cf14cf1",
    "tree": {
      "sha": "ca4962bdf18c61d540e6cf56c4bcdafdbd8684ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ca4962bdf18c61d540e6cf56c4bcdafdbd8684ab"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9161c89ad8a1a1bf079a5538ce19b467a9457b84",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9161c89ad8a1a1bf079a5538ce19b467a9457b84",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9161c89ad8a1a1bf079a5538ce19b467a9457b84",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9161c89ad8a1a1bf079a5538ce19b467a9457b84/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0072c873792829e2be43acf8bbf1c352c266e4c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0072c873792829e2be43acf8bbf1c352c266e4c7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0072c873792829e2be43acf8bbf1c352c266e4c7"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 9,
    "deletions": 6
  },
  "files": [
    {
      "sha": "21cd0f031c2266c3550d89a792693726ea61af67",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9161c89ad8a1a1bf079a5538ce19b467a9457b84/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9161c89ad8a1a1bf079a5538ce19b467a9457b84/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9161c89ad8a1a1bf079a5538ce19b467a9457b84",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-02  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* objfiles.c (get_objfile_bfd_data): Remove objfile parameter,\n+\tadjust callers.\n+\n 2021-04-02  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* psympriv.h (struct partial_symtab) <partial_symtab>: Change"
    },
    {
      "sha": "16bbb91c0a64b4396513172569dab67305b0b8b6",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9161c89ad8a1a1bf079a5538ce19b467a9457b84/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9161c89ad8a1a1bf079a5538ce19b467a9457b84/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=9161c89ad8a1a1bf079a5538ce19b467a9457b84",
      "patch": "@@ -120,12 +120,10 @@ objfile_per_bfd_storage::~objfile_per_bfd_storage ()\n \n /* Create the per-BFD storage object for OBJFILE.  If ABFD is not\n    NULL, and it already has a per-BFD storage object, use that.\n-   Otherwise, allocate a new per-BFD storage object.  Note that it is\n-   not safe to call this multiple times for a given OBJFILE -- it can\n-   only be called when allocating or re-initializing OBJFILE.  */\n+   Otherwise, allocate a new per-BFD storage object.  */\n \n static struct objfile_per_bfd_storage *\n-get_objfile_bfd_data (struct objfile *objfile, struct bfd *abfd)\n+get_objfile_bfd_data (bfd *abfd)\n {\n   struct objfile_per_bfd_storage *storage = NULL;\n \n@@ -154,7 +152,7 @@ get_objfile_bfd_data (struct objfile *objfile, struct bfd *abfd)\n void\n set_objfile_per_bfd (struct objfile *objfile)\n {\n-  objfile->per_bfd = get_objfile_bfd_data (objfile, objfile->obfd);\n+  objfile->per_bfd = get_objfile_bfd_data (objfile->obfd);\n }\n \n /* Set the objfile's per-BFD notion of the \"main\" name and\n@@ -363,7 +361,7 @@ objfile::objfile (bfd *abfd, const char *name, objfile_flags flags_)\n       build_objfile_section_table (this);\n     }\n \n-  per_bfd = get_objfile_bfd_data (this, abfd);\n+  per_bfd = get_objfile_bfd_data (abfd);\n }\n \n /* If there is a valid and known entry point, function fills *ENTRY_P with it"
    }
  ]
}