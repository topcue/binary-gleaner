{
  "sha": "391bf8918b16f9f3ad1060d5cb0fc0c4048421bb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzkxYmY4OTE4YjE2ZjlmM2FkMTA2MGQ1Y2IwZmMwYzQwNDg0MjFiYg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-10T13:47:45Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-10T14:02:21Z"
    },
    "message": "Re: Sign-extend start and stop address inputs to objdump\n\ngit commit 2379f9c475 introduced an rx-elf test failure.  This fixes it.\n\n\t* testsuite/binutils-all/objdump.exp (test_objdump_disas_limited),\n\t(test_objdump_content_limited): Add text arg, use in place of .text.\n\t(bintest_signed.o): Call get_standard_section_names for name of\n\ttext section.",
    "tree": {
      "sha": "7e396dbb469503c63cfb55eeeafb57cea8f62c65",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7e396dbb469503c63cfb55eeeafb57cea8f62c65"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "24c54127c5c4da81b9e6c248c8e918b3564b271a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24c54127c5c4da81b9e6c248c8e918b3564b271a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/24c54127c5c4da81b9e6c248c8e918b3564b271a"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 21,
    "deletions": 8
  },
  "files": [
    {
      "sha": "9f52572ad4169a5f38d4f2b7348a8fa3b72bf462",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=391bf8918b16f9f3ad1060d5cb0fc0c4048421bb",
      "patch": "@@ -1,3 +1,10 @@\n+2019-05-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objdump.exp (test_objdump_disas_limited),\n+\t(test_objdump_content_limited): Add text arg, use in place of .text.\n+\t(bintest_signed.o): Call get_standard_section_names for name of\n+\ttext section.\n+\n 2019-05-08  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n \n \t* objdump.c (sign_extend_address): New function."
    },
    {
      "sha": "beaf44f954e27928451c04433710000696496e3c",
      "filename": "binutils/testsuite/binutils-all/objdump.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 8,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb/binutils/testsuite/binutils-all/objdump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/391bf8918b16f9f3ad1060d5cb0fc0c4048421bb/binutils/testsuite/binutils-all/objdump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objdump.exp?ref=391bf8918b16f9f3ad1060d5cb0fc0c4048421bb",
      "patch": "@@ -690,15 +690,15 @@ proc test_objdump_limited { testfile dopt want start stop } {\n \n # Test objdump -d --start-address M --stop-address N\n \n-proc test_objdump_disas_limited { testfile start stop } {\n-    set want \"$testfile:\\[ \t\\]*file format.*Disassembly of section .text:\\n.*\\[ \\]*$start:.*\"\n+proc test_objdump_disas_limited { testfile text start stop } {\n+    set want \"$testfile:\\[ \t\\]*file format.*Disassembly of section $text:\\n.*\\[ \\]*$start:.*\"\n     test_objdump_limited $testfile -d $want $start $stop\n }\n \n # Test objdump -s --start-address M --stop-address N\n \n-proc test_objdump_content_limited { testfile start stop } {\n-    set want \"$testfile:\\[ \t\\]*file format.*Contents of section .text:\\n\\[ \\]*$start .*\"\n+proc test_objdump_content_limited { testfile text start stop } {\n+    set want \"$testfile:\\[ \t\\]*file format.*Contents of section $text:\\n\\[ \\]*$start .*\"\n     test_objdump_limited $testfile -s $want $start $stop\n }\n \n@@ -709,9 +709,15 @@ proc test_objdump_content_limited { testfile start stop } {\n # start/stop limits.\n \n if {[is_elf_format]} then {\n+    set sect_names [get_standard_section_names]\n+    if { $sect_names != \"\" } {\n+\tset text [lindex $sect_names 0]\n+    } else {\n+\tset text \".text\"\n+    }\n     # generate a copy of the test object with .text repositioned\n-    if { [binutils_run $OBJCOPY \"--change-section-address .text=0x80000000 tmpdir/bintest.o tmpdir/bintest_signed.o\"] != \"\" } {\n-\tfail \"Failed to reposition .text to 0x80000000 (tmpdir/bintest.o -> tmpdir/bintest_signed.o)\"\n+    if { [binutils_run $OBJCOPY \"--change-section-address $text=0x80000000 tmpdir/bintest.o tmpdir/bintest_signed.o\"] != \"\" } {\n+\tfail \"Failed to reposition $text to 0x80000000 (tmpdir/bintest.o -> tmpdir/bintest_signed.o)\"\n \treturn\n     }\n \n@@ -721,8 +727,8 @@ if {[is_elf_format]} then {\n \tset testfile3 tmpdir/bintest_signed.o\n     }\n \n-    test_objdump_content_limited $testfile3 \"80000004\" \"80000008\"\n-    test_objdump_disas_limited $testfile3 \"80000004\" \"80000008\"\n+    test_objdump_content_limited $testfile3 $text \"80000004\" \"80000008\"\n+    test_objdump_disas_limited $testfile3 $text \"80000004\" \"80000008\"\n     remote_file host delete $testfile3\n }\n "
    }
  ]
}