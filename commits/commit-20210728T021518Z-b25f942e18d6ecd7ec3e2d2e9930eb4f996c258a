{
  "sha": "b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjI1Zjk0MmUxOGQ2ZWNkN2VjM2UyZDJlOTkzMGViNGY5OTZjMjU4YQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-22T12:23:26Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-28T02:15:18Z"
    },
    "message": "PowerPC: ignore sticky options for .machine\n\nPowerPC gas and objdump for a long time have allowed certain -m/-M\noptions that extend a base cpu with extra functional units to be\nspecified before the base cpu.  For example, \"-maltivec -mpower4\" is\nthe same as \"-mpower4 -maltivec\".  See\nhttps://sourceware.org/pipermail/binutils/2008-January/054935.html\n\nIt doesn't make as much sense that .machine keep any of these\n\"sticky\" flags when handling a new base cpu.  See gcc PR101393.  I\nthink that instead .machine ought to override the command line.\nThat's what this patch does.  It is still possible to extend cpu\nfunctionality with .machine.  For example the following can be\nassembled when selecting a basic -mppc on the command line:\n\t.machine power5\n\t.machine altivec\n\tfrin 1,2\n\tlvsr 3,4,5\nHere, \".machine altivec\" extends the \".machine power5\" so that both\nthe power5 \"frin\" instruction and the altivec \"lvsr\" instruction are\nenabled.  Swapping the two \".machine\" directives would result in\nfailure to assemble \"lvsr\".\n\nThis change will expose some assembly errors, such as the one in\nglibc/sysdeps/powerpc/powerpc64/tst-ucontext-ppc64-vscr.c, a file\ncompiled with -maltivec but containing\n  asm volatile (\".machine push;\\n\"\n\t\t\".machine \\\"power5\\\";\\n\"\n\t\t\"vspltisb %0,0;\\n\"\n\t\t\"vspltisb %1,-1;\\n\"\n\t\t\"vpkuwus %0,%0,%1;\\n\"\n\t\t\"mfvscr %0;\\n\"\n\t\t\"stvx %0,0,%2;\\n\"\n\t\t\".machine pop;\"\n\t\t: \"=v\" (v0), \"=v\" (v1)\n\t\t: \"r\" (vscr_ptr)\n\t\t: \"memory\");\nIt's just wrong to choose power5 for a bunch of altivec instructions\nand in fact all of those .machine directives are unnecessary.\n\n\t* config/tc-ppc.c (ppc_machine): Don't use command line\n\tsticky options.",
    "tree": {
      "sha": "9659339c01d49ca9ddc5452cbc32274b880439c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9659339c01d49ca9ddc5452cbc32274b880439c5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b30049f188bac3b06c26a7f44821c63622ba3a24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b30049f188bac3b06c26a7f44821c63622ba3a24",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b30049f188bac3b06c26a7f44821c63622ba3a24"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 16,
    "deletions": 4
  },
  "files": [
    {
      "sha": "6eeb98c57449605878ca3e95c7d8c7b62221cddb",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=b25f942e18d6ecd7ec3e2d2e9930eb4f996c258a",
      "patch": "@@ -5680,7 +5680,6 @@ ppc_machine (int ignore ATTRIBUTE_UNUSED)\n   if (cpu_string != NULL)\n     {\n       ppc_cpu_t old_cpu = ppc_cpu;\n-      ppc_cpu_t new_cpu;\n       char *p;\n \n       for (p = cpu_string; *p != 0; p++)\n@@ -5703,10 +5702,23 @@ ppc_machine (int ignore ATTRIBUTE_UNUSED)\n \t  else\n \t    ppc_cpu = cpu_history[--curr_hist];\n \t}\n-      else if ((new_cpu = ppc_parse_cpu (ppc_cpu, &sticky, cpu_string)) != 0)\n-\tppc_cpu = new_cpu;\n       else\n-\tas_bad (_(\"invalid machine `%s'\"), cpu_string);\n+\t{\n+\t  ppc_cpu_t new_cpu;\n+\t  /* Not using the global \"sticky\" variable here results in\n+\t     none of the extra functional unit command line options,\n+\t     -many, -maltivec, -mspe, -mspe2, -mvle, -mvsx, being in\n+\t     force after selecting a new cpu with .machine.\n+\t     \".machine altivec\" and other extra functional unit\n+\t     options do not count as a new machine, instead they add\n+\t     to currently selected opcodes.  */\n+\t  ppc_cpu_t machine_sticky = 0;\n+\t  new_cpu = ppc_parse_cpu (ppc_cpu, &machine_sticky, cpu_string);\n+\t  if (new_cpu != 0)\n+\t    ppc_cpu = new_cpu;\n+\t  else\n+\t    as_bad (_(\"invalid machine `%s'\"), cpu_string);\n+\t}\n \n       if (ppc_cpu != old_cpu)\n \tppc_setup_opcodes ();"
    }
  ]
}