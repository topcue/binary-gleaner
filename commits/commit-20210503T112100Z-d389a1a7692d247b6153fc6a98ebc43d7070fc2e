{
  "sha": "d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDM4OWExYTc2OTJkMjQ3YjYxNTNmYzZhOThlYmM0M2Q3MDcwZmMyZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-29T09:11:35Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-03T11:21:00Z"
    },
    "message": "gdb/testsuite: update expected results in gdb.python/py-startup-opt.exp\n\nThe test gdb.python/py-startup-opt.exp checks the behaviour of GDB's:\n\n  set python dont-write-bytecode on\n\nThis flag (when on) stops Python creating .pyc files.  The test first\nchecks that .pyc files will be created, then turns this option on and\nchecks .pyc files will not be created.\n\nHowever, if the user has PYTHONDONTWRITEBYTECODE set in their\nenvironment then this will prevent Python from creating .pyc files, as\nsuch the first test, that .pyc files are being created, currently\nfails.\n\nWe could unset PYTHONDONTWRITEBYTECODE, however, until Python 3.8\nthere is no way to control where Python writes the .pyc files.  As the\nGDB developer clearly doesn't want .pyc files created in their\nfile-system it feels wrong to silently unset this environment\nvariable.\n\nMy proposal then, is that we just spot when this environment variable\nis set and adjust the expected results.  My hope is that across all\nGDB developers some will be running with PYTHONDONTWRITEBYTECODE\nunset, so this feature will be fully tested at least some of the time.\n\ngdb/testsuite/ChangeLog:\n\n\tPR testsuite/27788\n\t* gdb.python/py-startup-opt.exp (test_python_settings): Change the\n\texpected results when environment variable PYTHONDONTWRITEBYTECODE\n\tis set.",
    "tree": {
      "sha": "521f7cd3ce89b900a92a5836bb00da544afe0efb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/521f7cd3ce89b900a92a5836bb00da544afe0efb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d389a1a7692d247b6153fc6a98ebc43d7070fc2e/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4916030821bb0b052091bd1e29f1851e1512a056",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4916030821bb0b052091bd1e29f1851e1512a056",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4916030821bb0b052091bd1e29f1851e1512a056"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 36,
    "deletions": 1
  },
  "files": [
    {
      "sha": "16c0df13fa2f4b846165b495fa3966ceaf0ce15f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d389a1a7692d247b6153fc6a98ebc43d7070fc2e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d389a1a7692d247b6153fc6a98ebc43d7070fc2e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR testsuite/27788\n+\t* gdb.python/py-startup-opt.exp (test_python_settings): Change the\n+\texpected results when environment variable PYTHONDONTWRITEBYTECODE\n+\tis set.\n+\n 2021-04-30  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/enum_idx_packed/pck.ads (My_Enum, My_Array_Type)"
    },
    {
      "sha": "f0a735b3f449ed7ea210bd185a0a7e587234cada",
      "filename": "gdb/testsuite/gdb.python/py-startup-opt.exp",
      "status": "modified",
      "additions": 29,
      "deletions": 1,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d389a1a7692d247b6153fc6a98ebc43d7070fc2e/gdb/testsuite/gdb.python/py-startup-opt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d389a1a7692d247b6153fc6a98ebc43d7070fc2e/gdb/testsuite/gdb.python/py-startup-opt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-startup-opt.exp?ref=d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
      "patch": "@@ -62,13 +62,41 @@ proc test_python_settings { exp_state } {\n     gdb_test_no_output \"python import sys\"\n \n     foreach_with_prefix attr {ignore_environment dont_write_bytecode} {\n+\n+\t# If we are checking 'dont_write_bytecode', and we are\n+\t# expecting this attribute to be 'off', then, if the user has\n+\t# PYTHONDONTWRITEBYTECODE set in their environment, the result\n+\t# will be 'on' instead of 'off', so override the expected\n+\t# result here.\n+\t#\n+\t# The reason for this is, 'set python dont-write-bytecode' by\n+\t# default is set to 'auto', which means, so long as 'set\n+\t# python ignore-environment' is 'off', GDB will check for the\n+\t# above environment variable.\n+\t#\n+\t# We could unset the environment variable, but until Python\n+\t# 3.8 there was no way to control where .pyc files are placed,\n+\t# and it feels bad to cause .pyc files to be created within\n+\t# the users filesystem when they clearly don't want them.\n+\t#\n+\t# And so, we adjust the expected results.  Hopefully, between\n+\t# all GDB developers some will test GDB with this environment\n+\t# variable unset.\n+\tif { $attr == \"dont_write_bytecode\" \\\n+\t\t && $exp_state == \"off\"\n+\t\t && [info exists ::env(PYTHONDONTWRITEBYTECODE)] } {\n+\t    set answer \"on\"\n+\t} else {\n+\t    set answer $exp_state\n+\t}\n+\n \tgdb_test_multiline \"testname\" \\\n \t    \"python\" \"\" \\\n \t    \"if hasattr(sys, 'flags') and getattr(sys.flags, '${attr}', False):\" \"\" \\\n \t    \"  print (\\\"${attr} is on\\\")\" \"\" \\\n \t    \"else:\" \"\" \\\n \t    \"  print (\\\"${attr} is off\\\")\" \"\" \\\n-\t    \"end\" \"${attr} is ${exp_state}\"\n+\t    \"end\" \"${attr} is ${answer}\"\n     }\n \n     gdb_exit"
    }
  ]
}