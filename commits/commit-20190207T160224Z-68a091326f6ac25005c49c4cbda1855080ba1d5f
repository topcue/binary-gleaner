{
  "sha": "68a091326f6ac25005c49c4cbda1855080ba1d5f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjhhMDkxMzI2ZjZhYzI1MDA1YzQ5YzRjYmRhMTg1NTA4MGJhMWQ1Zg==",
  "commit": {
    "author": {
      "name": "Eric Botcazou",
      "email": "ebotcazou@gcc.gnu.org",
      "date": "2019-02-07T16:02:24Z"
    },
    "committer": {
      "name": "Eric Botcazou",
      "email": "ebotcazou@gcc.gnu.org",
      "date": "2019-02-07T16:02:24Z"
    },
    "message": "Visium: fix bogus overflow check on 32-bit hosts\n\nbfd/\n\t* elf32-visium.c (visium_elf_howto_parity_reloc): Minor tweak.\n\t<R_VISIUM_PC16>: Use explicit range test to detect an overflow.",
    "tree": {
      "sha": "3dc784366d5d6a330377cf8e3a79d1d0f76cc6a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3dc784366d5d6a330377cf8e3a79d1d0f76cc6a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68a091326f6ac25005c49c4cbda1855080ba1d5f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68a091326f6ac25005c49c4cbda1855080ba1d5f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68a091326f6ac25005c49c4cbda1855080ba1d5f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68a091326f6ac25005c49c4cbda1855080ba1d5f/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "0e7e9601bed5600881225e22fd4306f11907858b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e7e9601bed5600881225e22fd4306f11907858b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0e7e9601bed5600881225e22fd4306f11907858b"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 11,
    "deletions": 7
  },
  "files": [
    {
      "sha": "c0a3a37429465e0e7bb610636cac4f15fc66fc3f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68a091326f6ac25005c49c4cbda1855080ba1d5f/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68a091326f6ac25005c49c4cbda1855080ba1d5f/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=68a091326f6ac25005c49c4cbda1855080ba1d5f",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* elf32-visium.c (visium_elf_howto_parity_reloc): Minor tweak.\n+\t<R_VISIUM_PC16>: Use explicit range test to detect an overflow.\n+\n 2019-02-07  Nick Clifton  <nickc@redhat.com>\n \n \t* config.bfd: Move the powerpc-lynxos and powerpc-windiss targets"
    },
    {
      "sha": "de81fdca639ca61517b2517010c8f8ac801e88ff",
      "filename": "bfd/elf32-visium.c",
      "status": "modified",
      "additions": 6,
      "deletions": 7,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68a091326f6ac25005c49c4cbda1855080ba1d5f/bfd/elf32-visium.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68a091326f6ac25005c49c4cbda1855080ba1d5f/bfd/elf32-visium.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-visium.c?ref=68a091326f6ac25005c49c4cbda1855080ba1d5f",
      "patch": "@@ -312,7 +312,6 @@ visium_elf_howto_parity_reloc (bfd * input_bfd, arelent *reloc_entry,\n   bfd_vma relocation;\n   bfd_byte *inplace_address;\n   bfd_vma insn;\n-  const bfd_vma signmask = 0xffff8000;\n \n   /* This part is from bfd_elf_generic_reloc.\n      If we're relocating, and this an external symbol, we don't want\n@@ -351,19 +350,19 @@ visium_elf_howto_parity_reloc (bfd * input_bfd, arelent *reloc_entry,\n \n   if (reloc_entry->howto->pc_relative)\n     {\n-      relocation -= input_section->output_section->vma\n-\t+ input_section->output_offset;\n+      relocation -= input_section->output_section->vma;\n+      relocation -= input_section->output_offset;\n       relocation -= reloc_entry->address;\n     }\n \n   switch (reloc_entry->howto->type)\n     {\n     case R_VISIUM_PC16:\n-      relocation >>= 2;\n-      if (ret == bfd_reloc_ok && (relocation & signmask) != 0\n-\t  && (relocation & signmask) != signmask)\n+      if (ret == bfd_reloc_ok\n+\t  && ((bfd_signed_vma) relocation < -0x20000\n+\t      || (bfd_signed_vma) relocation > 0x1ffff))\n \tret = bfd_reloc_overflow;\n-      relocation &= 0xffff;\n+      relocation = (relocation >> 2) & 0xffff;\n       break;\n     case R_VISIUM_HI16:\n     case R_VISIUM_HI16_PCREL:"
    }
  ]
}