{
  "sha": "6813ceb03f889f4ed0dd163866b6eaa42a097838",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjgxM2NlYjAzZjg4OWY0ZWQwZGQxNjM4NjZiNmVhYTQyYTA5NzgzOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T14:20:24Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T14:20:24Z"
    },
    "message": "Fix unary + in Ada\n\nMy previous Ada patches introduced a bug that I found after checkin.\nI had incorrectly implemented unary +.  There was a test for the\noverloaded case, but no test for the ordinary case.\n\nThis patch adds the tests and fixes the bug.\nTested on x86-64 Fedora 32.\n\ngdb/ChangeLog\n2021-03-15  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-exp.y (simple_exp): Always push a result for unary '+'.\n\ngdb/testsuite/ChangeLog\n2021-03-15  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/fixed_points.exp: Add tests of unary + and -.",
    "tree": {
      "sha": "312d1f2933bda27b6b1d5a1195d567687c3561d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/312d1f2933bda27b6b1d5a1195d567687c3561d3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6813ceb03f889f4ed0dd163866b6eaa42a097838",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6813ceb03f889f4ed0dd163866b6eaa42a097838",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6813ceb03f889f4ed0dd163866b6eaa42a097838",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6813ceb03f889f4ed0dd163866b6eaa42a097838/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3b5c4de0cf93667ffc98f112db7dcbea92292e32",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b5c4de0cf93667ffc98f112db7dcbea92292e32",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3b5c4de0cf93667ffc98f112db7dcbea92292e32"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 18,
    "deletions": 3
  },
  "files": [
    {
      "sha": "ff0cc2cd1a449b4488410055d092ee1d5794c342",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6813ceb03f889f4ed0dd163866b6eaa42a097838",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-exp.y (simple_exp): Always push a result for unary '+'.\n+\n 2021-03-15  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (ada_unop_ind_operation::evaluate): Call"
    },
    {
      "sha": "146b1acbe14174783f8dc599195616f1924ddfea",
      "filename": "gdb/ada-exp.y",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/ada-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/ada-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.y?ref=6813ceb03f889f4ed0dd163866b6eaa42a097838",
      "patch": "@@ -589,12 +589,14 @@ simple_exp :\t'+' simple_exp    %prec UNARY\n \t\t\t  operation_up arg = ada_pop ();\n \t\t\t  operation_up empty;\n \n-\t\t\t  /* We only need to handle the overloading\n-\t\t\t     case here, not anything else.  */\n+\t\t\t  /* If an overloaded operator was found, use\n+\t\t\t     it.  Otherwise, unary + has no effect and\n+\t\t\t     the argument can be pushed instead.  */\n \t\t\t  operation_up call = maybe_overload (UNOP_PLUS, arg,\n \t\t\t\t\t\t\t      empty);\n \t\t\t  if (call != nullptr)\n-\t\t\t    pstate->push (std::move (call));\n+\t\t\t    arg = std::move (call);\n+\t\t\t  pstate->push (std::move (arg));\n \t\t\t}\n \t;\n "
    },
    {
      "sha": "6ed26d1979f8235f87d429ac45d09587f8ec66df",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6813ceb03f889f4ed0dd163866b6eaa42a097838",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/fixed_points.exp: Add tests of unary + and -.\n+\n 2021-03-15  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/varsize_limit.exp: Add new test."
    },
    {
      "sha": "69565e774908e5f5724530faab14b21c2eaee72e",
      "filename": "gdb/testsuite/gdb.ada/fixed_points.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/testsuite/gdb.ada/fixed_points.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6813ceb03f889f4ed0dd163866b6eaa42a097838/gdb/testsuite/gdb.ada/fixed_points.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/fixed_points.exp?ref=6813ceb03f889f4ed0dd163866b6eaa42a097838",
      "patch": "@@ -76,6 +76,11 @@ foreach_with_prefix scenario {all minimal} {\n     gdb_test \"print fp2_var - 0\" \\\n \t\" = -0.01\"\n \n+    gdb_test \"print + fp2_var\" \\\n+\t\" = -0.01\"\n+    gdb_test \"print - fp2_var\" \\\n+\t\" = 0.01\"\n+\n     set fp4 \"= 2e-07\"\n     gdb_test \"print fp4_var\" $fp4\n     gdb_test \"print fp4_var * 1\" $fp4"
    }
  ]
}