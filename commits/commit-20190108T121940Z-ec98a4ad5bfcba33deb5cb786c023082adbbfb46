{
  "sha": "ec98a4ad5bfcba33deb5cb786c023082adbbfb46",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWM5OGE0YWQ1YmZjYmEzM2RlYjVjYjc4NmMwMjMwODJhZGJiZmI0Ng==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-06T23:53:22Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-08T12:19:40Z"
    },
    "message": "gdb: Handle requests to print source lines backward\n\n...by which I mean from high line number to low, not, actually\nbackward character by character!\n\nCommit:\n\n  commit 62f29fda90cf1d5a1899f57ef78452471c707fd6\n  Date:   Tue Oct 9 22:21:05 2018 -0600\n\n      Highlight source code using GNU Source Highlight\n\nintroduced a regression in the test gdb.linespec/explicit.exp, in\nwhich a request is made to GDB to print a reverse sequence of lines,\nfrom +10 to -10 from the current line number.  The expected behaviour\nis that GDB prints nothing.  The above commit changed this so that GDB\nnow prints:\n\n  Line number 32 out of range; /path/to/gdb/testsuite/gdb.linespec/explicit.c has 71 lines.\n\nwhich is a little confusing.\n\nThis commit fixes the regression, and restores the behaviour that GDB\nprints nothing.\n\nWhile I was passing I noticed a call to `back` on a std::string that I\nwas concerned could be empty if the request for source lines returns\nan empty string.  I don't know if it would be possible for a request\nfor lines to return an empty string, I guess it should be impossible,\nin which case, maybe this should be an assertion, but adding a `empty`\ncheck, seems like an easy and cheap safety net.\n\ngdb/ChangeLog:\n\n\t* source.c (print_source_lines_base): Handle requests to print\n\treverse line number sequences, and guard against empty lines\n\tstring.",
    "tree": {
      "sha": "ec1e5af6779f35b0912adbc96df476f179c413c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ec1e5af6779f35b0912adbc96df476f179c413c7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ec98a4ad5bfcba33deb5cb786c023082adbbfb46",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec98a4ad5bfcba33deb5cb786c023082adbbfb46",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ec98a4ad5bfcba33deb5cb786c023082adbbfb46",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec98a4ad5bfcba33deb5cb786c023082adbbfb46/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "62ea19c1000856c2633a952c52269fca4143931a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62ea19c1000856c2633a952c52269fca4143931a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/62ea19c1000856c2633a952c52269fca4143931a"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 17,
    "deletions": 1
  },
  "files": [
    {
      "sha": "2ee19f3d63515f6398bffd07cb69dd9f4accf055",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec98a4ad5bfcba33deb5cb786c023082adbbfb46/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec98a4ad5bfcba33deb5cb786c023082adbbfb46/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ec98a4ad5bfcba33deb5cb786c023082adbbfb46",
      "patch": "@@ -1,3 +1,9 @@\n+2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* source.c (print_source_lines_base): Handle requests to print\n+\treverse line number sequences, and guard against empty lines\n+\tstring.\n+\n 2019-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* source.c (print_source_lines_base): Fix skip of '\\r' if next"
    },
    {
      "sha": "71da396acc85f9d712c4637f762ed26bcb10edc3",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec98a4ad5bfcba33deb5cb786c023082adbbfb46/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec98a4ad5bfcba33deb5cb786c023082adbbfb46/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=ec98a4ad5bfcba33deb5cb786c023082adbbfb46",
      "patch": "@@ -1346,6 +1346,16 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n \n   last_source_error = 0;\n \n+  /* If the user requested a sequence of lines that seems to go backward\n+     (from high to low line numbers) then we don't print anything.\n+     The use of '- 1' here instead of '<=' is currently critical, we rely\n+     on the undefined wrap around behaviour of 'int' for stopline.  When\n+     the use has done: 'set listsize unlimited' then stopline can overflow\n+     and appear as MIN_INT.  This is a long-standing bug that needs\n+     fixing.  */\n+  if (stopline - 1 < line)\n+    return;\n+\n   std::string lines;\n   if (!g_source_cache.get_source_lines (s, line, stopline - 1, &lines))\n     error (_(\"Line number %d out of range; %s has %d lines.\"),\n@@ -1392,7 +1402,7 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n       if (c == '\\0')\n \tbreak;\n     }\n-  if (lines.back () != '\\n')\n+  if (!lines.empty() && lines.back () != '\\n')\n     uiout->text (\"\\n\");\n }\n \f"
    }
  ]
}