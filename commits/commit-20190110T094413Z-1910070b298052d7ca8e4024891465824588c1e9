{
  "sha": "1910070b298052d7ca8e4024891465824588c1e9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTkxMDA3MGIyOTgwNTJkN2NhOGU0MDI0ODkxNDY1ODI0NTg4YzFlOQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-01-10T09:44:13Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-01-10T09:44:13Z"
    },
    "message": "Sync libiberty sources with gcc master versions.\n\n.\t* libiberty: Sync with gcc.  Bring in:\n\t2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR other/16615\n\n\t* cp-demangle.c: Mechanically replace \"can not\" with \"cannot\".\n\t* floatformat.c: Likewise.\n\t* strerror.c: Likewise.\n\n\t2018-12-22  Jason Merrill  <jason@redhat.com>\n\n\tRemove support for demangling GCC 2.x era mangling schemes.\n\t* cplus-dem.c: Remove cplus_mangle_opname, cplus_demangle_opname,\n\tinternal_cplus_demangle, and all subroutines.\n\t(libiberty_demanglers): Remove entries for ancient GNU (pre-3.0),\n\tLucid, ARM, HP, and EDG demangling styles.\n\t(cplus_demangle): Remove 'work' variable.  Don't call\n\tinternal_cplus_demangle.\n\ninclude\t* Merge from GCC:\n\t2018-12-22  Jason Merrill  <jason@redhat.com>\n\n\t* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,\n\tARM, HP, and EDG demangling styles.",
    "tree": {
      "sha": "0ae052cbeef0f08143625488e06ba16634c2f2f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ae052cbeef0f08143625488e06ba16634c2f2f7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1910070b298052d7ca8e4024891465824588c1e9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1910070b298052d7ca8e4024891465824588c1e9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1910070b298052d7ca8e4024891465824588c1e9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1910070b298052d7ca8e4024891465824588c1e9/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b22a7c6ab6173fe4fa1352e14d00a234bbf50346",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b22a7c6ab6173fe4fa1352e14d00a234bbf50346",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b22a7c6ab6173fe4fa1352e14d00a234bbf50346"
    }
  ],
  "stats": {
    "total": 8147,
    "additions": 116,
    "deletions": 8031
  },
  "files": [
    {
      "sha": "9c1119a7d4b0d9716c1576b31e3d57f5a8db0c4f",
      "filename": "ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ChangeLog?ref=1910070b298052d7ca8e4024891465824588c1e9",
      "patch": "@@ -1,3 +1,24 @@\n+2019-01-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* libiberty: Sync with gcc.  Bring in:\n+\t2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR other/16615\n+\n+\t* cp-demangle.c: Mechanically replace \"can not\" with \"cannot\".\n+\t* floatformat.c: Likewise.\n+\t* strerror.c: Likewise.\n+\n+\t2018-12-22  Jason Merrill  <jason@redhat.com>\n+\n+\tRemove support for demangling GCC 2.x era mangling schemes.\n+\t* cplus-dem.c: Remove cplus_mangle_opname, cplus_demangle_opname,\n+\tinternal_cplus_demangle, and all subroutines.\n+\t(libiberty_demanglers): Remove entries for ancient GNU (pre-3.0),\n+\tLucid, ARM, HP, and EDG demangling styles.\n+\t(cplus_demangle): Remove 'work' variable.  Don't call\n+\tinternal_cplus_demangle.\n+\n 2019-01-03  \u0414\u0438\u043b\u044f\u043d \u041f\u0430\u043b\u0430\u0443\u0437\u043e\u0432  <dilyan.palauzov@aegee.org>\n \n \t* configure.ac: Don't configure readline if --with-system-readline is"
    },
    {
      "sha": "8904972b0774bad2d6f4896919b31c9f207e314b",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=1910070b298052d7ca8e4024891465824588c1e9",
      "patch": "@@ -1,3 +1,11 @@\n+2019-01-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* Merge from GCC:\n+\t2018-12-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* demangle.h: Remove support for ancient GNU (pre-3.0), Lucid,\n+\tARM, HP, and EDG demangling styles.\n+\n 2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tMerge from GCC:\n@@ -14,7 +22,6 @@\n \t(RX_Operand_Type): Add double FPU registers.\n \t(RX_Opcode_ID): Add new instuctions.\n \n-\n 2019-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "f5d9b9e8b5bf40bf98200c4cb47de4e95cd27ed8",
      "filename": "include/demangle.h",
      "status": "modified",
      "additions": 1,
      "deletions": 32,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/include/demangle.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/include/demangle.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/demangle.h?ref=1910070b298052d7ca8e4024891465824588c1e9",
      "patch": "@@ -53,20 +53,13 @@ extern \"C\" {\n \t\t\t\t\t   */\n \n #define DMGL_AUTO\t (1 << 8)\n-#define DMGL_GNU\t (1 << 9)\n-#define DMGL_LUCID\t (1 << 10)\n-#define DMGL_ARM\t (1 << 11)\n-#define DMGL_HP \t (1 << 12)       /* For the HP aCC compiler;\n-                                            same as ARM except for\n-                                            template arguments, etc. */\n-#define DMGL_EDG\t (1 << 13)\n #define DMGL_GNU_V3\t (1 << 14)\n #define DMGL_GNAT\t (1 << 15)\n #define DMGL_DLANG\t (1 << 16)\n #define DMGL_RUST\t (1 << 17)\t/* Rust wraps GNU_V3 style mangling.  */\n \n /* If none of these are set, use 'current_demangling_style' as the default. */\n-#define DMGL_STYLE_MASK (DMGL_AUTO|DMGL_GNU|DMGL_LUCID|DMGL_ARM|DMGL_HP|DMGL_EDG|DMGL_GNU_V3|DMGL_JAVA|DMGL_GNAT|DMGL_DLANG|DMGL_RUST)\n+#define DMGL_STYLE_MASK (DMGL_AUTO|DMGL_GNU_V3|DMGL_JAVA|DMGL_GNAT|DMGL_DLANG|DMGL_RUST)\n \n /* Disable a limit on the depth of recursion in mangled strings.\n    Note if this limit is disabled then stack exhaustion is possible when\n@@ -92,11 +85,6 @@ extern enum demangling_styles\n   no_demangling = -1,\n   unknown_demangling = 0,\n   auto_demangling = DMGL_AUTO,\n-  gnu_demangling = DMGL_GNU,\n-  lucid_demangling = DMGL_LUCID,\n-  arm_demangling = DMGL_ARM,\n-  hp_demangling = DMGL_HP,\n-  edg_demangling = DMGL_EDG,\n   gnu_v3_demangling = DMGL_GNU_V3,\n   java_demangling = DMGL_JAVA,\n   gnat_demangling = DMGL_GNAT,\n@@ -108,11 +96,6 @@ extern enum demangling_styles\n \n #define NO_DEMANGLING_STYLE_STRING            \"none\"\n #define AUTO_DEMANGLING_STYLE_STRING\t      \"auto\"\n-#define GNU_DEMANGLING_STYLE_STRING    \t      \"gnu\"\n-#define LUCID_DEMANGLING_STYLE_STRING\t      \"lucid\"\n-#define ARM_DEMANGLING_STYLE_STRING\t      \"arm\"\n-#define HP_DEMANGLING_STYLE_STRING\t      \"hp\"\n-#define EDG_DEMANGLING_STYLE_STRING\t      \"edg\"\n #define GNU_V3_DEMANGLING_STYLE_STRING        \"gnu-v3\"\n #define JAVA_DEMANGLING_STYLE_STRING          \"java\"\n #define GNAT_DEMANGLING_STYLE_STRING          \"gnat\"\n@@ -123,11 +106,6 @@ extern enum demangling_styles\n \n #define CURRENT_DEMANGLING_STYLE current_demangling_style\n #define AUTO_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_AUTO)\n-#define GNU_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_GNU)\n-#define LUCID_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_LUCID)\n-#define ARM_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_ARM)\n-#define HP_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_HP)\n-#define EDG_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_EDG)\n #define GNU_V3_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_GNU_V3)\n #define JAVA_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_JAVA)\n #define GNAT_DEMANGLING (((int) CURRENT_DEMANGLING_STYLE) & DMGL_GNAT)\n@@ -147,17 +125,8 @@ extern const struct demangler_engine\n extern char *\n cplus_demangle (const char *mangled, int options);\n \n-extern int\n-cplus_demangle_opname (const char *opname, char *result, int options);\n-\n-extern const char *\n-cplus_mangle_opname (const char *opname, int options);\n-\n /* Note: This sets global state.  FIXME if you care about multi-threading. */\n \n-extern void\n-set_cplus_marker_for_demangling (int ch);\n-\n extern enum demangling_styles\n cplus_demangle_set_style (enum demangling_styles style);\n "
    },
    {
      "sha": "436fb96255ce5b895ad86dd8d077e7b3a869f7cd",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 24,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=1910070b298052d7ca8e4024891465824588c1e9",
      "patch": "@@ -1,11 +1,16 @@\n-2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n-\tMerge from GCC:\n-\tPR other/16615\n+\tUpdate copyright years.\n+\n+2018-12-22  Jason Merrill  <jason@redhat.com>\n \n-\t* cp-demangle.c: Mechanically replace \"can not\" with \"cannot\".\n-\t* floatformat.c: Likewise.\n-\t* strerror.c: Likewise.\n+\tRemove support for demangling GCC 2.x era mangling schemes.\n+\t* cplus-dem.c: Remove cplus_mangle_opname, cplus_demangle_opname,\n+\tinternal_cplus_demangle, and all subroutines.\n+\t(libiberty_demanglers): Remove entries for ancient GNU (pre-3.0),\n+\tLucid, ARM, HP, and EDG demangling styles.\n+\t(cplus_demangle): Remove 'work' variable.  Don't call\n+\tinternal_cplus_demangle.\n \n 2018-12-07  Nick Clifton  <nickc@redhat.com>\n \n@@ -72,28 +77,18 @@\n \n \t* cplus-dem.c (remember_Btype): Don't call memcpy with LEN==0.\n \n-2018-08-01  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\tCopy over from GCC\n-\t2018-07-26  Martin Liska  <mliska@suse.cz>\n+2018-07-26  Martin Liska  <mliska@suse.cz>\n \n-        PR lto/86548\n+\tPR lto/86548\n \t* make-temp-file.c (TEMP_FILE): Remove leading 'cc'.\n \t(make_temp_file): Call make_temp_file_with_prefix with\n-        first argument set to NULL.\n+\tfirst argument set to NULL.\n \t(make_temp_file_with_prefix): Support also prefix.\n \n-2018-07-18  Eli Zaretskii  <eliz@gnu.org>\n-\n-\tPR gdb/23434\n-\t* libiberty/simple-object-elf.c (ENOTSUP): If not defined by\n-        errno.h, redirect ENOTSUP to ENOSYS.\n-\n-2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n+2018-07-19  Eli Zaretskii  <eliz@gnu.org>\n \n-\t* configure.ac: Remove AC_PREREQ.\n-\t* configure: Re-generate.\n-\t* config.in: Re-generate.\n+\t* simple-object-elf.c (ENOTSUP): If not defined by errno.h, redirect\n+\tto ENOSYS.\n \n 2018-05-30  Jan Hubicka  <hubicka@ucw.cz>\n \n@@ -996,8 +991,8 @@\n \t* functions.texi: Regenerate.\n \n 2014-12-11  Uros Bizjak  <ubizjak@gmail.com>\n-            Ben Elliston  <bje@au.ibm.com>\n-            Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\t    Ben Elliston  <bje@au.ibm.com>\n+\t    Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* xvasprintf.c: New file.\n \t* vprintf-support.h: Likewise."
    },
    {
      "sha": "4624cd5fb2f93d3e5339e6d78a34cd23f88f605d",
      "filename": "libiberty/cp-demangle.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/libiberty/cp-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/libiberty/cp-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.c?ref=1910070b298052d7ca8e4024891465824588c1e9",
      "patch": "@@ -6201,13 +6201,13 @@ cplus_demangle_init_info (const char *mangled, int options, size_t len,\n \n   di->n = mangled;\n \n-  /* We cannot need more components than twice the number of chars in\n+  /* We can not need more components than twice the number of chars in\n      the mangled string.  Most components correspond directly to\n      chars, but the ARGLIST types are exceptions.  */\n   di->num_comps = 2 * len;\n   di->next_comp = 0;\n \n-  /* Similarly, we cannot need more substitutions than there are\n+  /* Similarly, we can not need more substitutions than there are\n      chars in the mangled string.  */\n   di->num_subs = len;\n   di->next_sub = 0;"
    },
    {
      "sha": "afceed2a1a751155fcfa4cbccd4e12e3f0377c34",
      "filename": "libiberty/cplus-dem.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4581,
      "changes": 4586,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/libiberty/cplus-dem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/libiberty/cplus-dem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cplus-dem.c?ref=1910070b298052d7ca8e4024891465824588c1e9"
    },
    {
      "sha": "2c6c6abe77fb233ee6cbf8715b0450e99d2327a9",
      "filename": "libiberty/floatformat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/libiberty/floatformat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/libiberty/floatformat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/floatformat.c?ref=1910070b298052d7ca8e4024891465824588c1e9",
      "patch": "@@ -489,7 +489,7 @@ floatformat_to_double (const struct floatformat *fmt,\n       int nan = mant_bits_set (fmt, ufrom);\n \n       /* On certain systems (such as GNU/Linux), the use of the\n-\t INFINITY macro below may generate a warning that cannot be\n+\t INFINITY macro below may generate a warning that can not be\n \t silenced due to a bug in GCC (PR preprocessor/11931).  The\n \t preprocessor fails to recognise the __extension__ keyword in\n \t conjunction with the GNU/C99 extension for hexadecimal"
    },
    {
      "sha": "a8a0bd1f7e2c99f19b0f5d7560734331efe792e1",
      "filename": "libiberty/strerror.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/libiberty/strerror.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/libiberty/strerror.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/strerror.c?ref=1910070b298052d7ca8e4024891465824588c1e9",
      "patch": "@@ -299,7 +299,7 @@ static const struct error_info error_table[] =\n   ENTRY(EREMCHG, \"EREMCHG\", \"Remote address changed\"),\n #endif\n #if defined (ELIBACC)\n-  ENTRY(ELIBACC, \"ELIBACC\", \"Cannot access a needed shared library\"),\n+  ENTRY(ELIBACC, \"ELIBACC\", \"Can not access a needed shared library\"),\n #endif\n #if defined (ELIBBAD)\n   ENTRY(ELIBBAD, \"ELIBBAD\", \"Accessing a corrupted shared library\"),"
    },
    {
      "sha": "3723b7a90f1d5bc60b34cd8cfd3364539cb9aa40",
      "filename": "libiberty/testsuite/demangle-expected",
      "status": "modified",
      "additions": 58,
      "deletions": 3389,
      "changes": 3447,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1910070b298052d7ca8e4024891465824588c1e9/libiberty/testsuite/demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1910070b298052d7ca8e4024891465824588c1e9/libiberty/testsuite/demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/demangle-expected?ref=1910070b298052d7ca8e4024891465824588c1e9"
    }
  ]
}