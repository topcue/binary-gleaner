{
  "sha": "9e739f693f142ac634d9d127bd9951d0c62593c1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWU3MzlmNjkzZjE0MmFjNjM0ZDlkMTI3YmQ5OTUxZDBjNjI1OTNjMQ==",
  "commit": {
    "author": {
      "name": "Zoran Zaric",
      "email": "Zoran.Zaric@amd.com",
      "date": "2020-10-09T14:06:15Z"
    },
    "committer": {
      "name": "Zoran Zaric",
      "email": "zoran.zaric@amd.com",
      "date": "2021-08-05T15:40:12Z"
    },
    "message": "Inline get_reg_value method of dwarf_expr_context\n\nThe get_reg_value method is a small function that is only called once,\nso it can be inlined to simplify the dwarf_expr_context class.\n\ngdb/ChangeLog:\n\n\t* dwarf2/expr.c (dwarf_expr_context::get_reg_value): Remove\n\tmethod.\n\t(dwarf_expr_context::execute_stack_op): Inline get_reg_value\n\tmethod.\n\t* dwarf2/expr.h (dwarf_expr_context::get_reg_value): Remove\n\tmethod.",
    "tree": {
      "sha": "54e47af07c4fac514bb3d0a34be5787ac57baa25",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/54e47af07c4fac514bb3d0a34be5787ac57baa25"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9e739f693f142ac634d9d127bd9951d0c62593c1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e739f693f142ac634d9d127bd9951d0c62593c1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9e739f693f142ac634d9d127bd9951d0c62593c1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e739f693f142ac634d9d127bd9951d0c62593c1/comments",
  "author": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0a2b69d04bbb0b5d69ae93da998b65d44fc7612b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a2b69d04bbb0b5d69ae93da998b65d44fc7612b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0a2b69d04bbb0b5d69ae93da998b65d44fc7612b"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 7,
    "deletions": 23
  },
  "files": [
    {
      "sha": "5224ed0efbd88168791cb9da3da544aca2641a76",
      "filename": "gdb/dwarf2/expr.c",
      "status": "modified",
      "additions": 7,
      "deletions": 17,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e739f693f142ac634d9d127bd9951d0c62593c1/gdb/dwarf2/expr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e739f693f142ac634d9d127bd9951d0c62593c1/gdb/dwarf2/expr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/expr.c?ref=9e739f693f142ac634d9d127bd9951d0c62593c1",
      "patch": "@@ -168,19 +168,6 @@ dwarf_expr_context::fetch (int n)\n \n /* See expr.h.  */\n \n-struct value *\n-dwarf_expr_context::get_reg_value (struct type *type, int reg)\n-{\n-  ensure_have_frame (this->frame, \"DW_OP_regval_type\");\n-\n-  struct gdbarch *gdbarch = get_frame_arch (this->frame);\n-  int regnum = dwarf_reg_to_regnum_or_error (gdbarch, reg);\n-\n-  return value_from_register (type, regnum, this->frame);\n-}\n-\n-/* See expr.h.  */\n-\n void\n dwarf_expr_context::get_frame_base (const gdb_byte **start,\n \t\t\t\t    size_t * length)\n@@ -1536,14 +1523,17 @@ dwarf_expr_context::execute_stack_op (const gdb_byte *op_ptr,\n \tcase DW_OP_regval_type:\n \tcase DW_OP_GNU_regval_type:\n \t  {\n-\t    struct type *type;\n-\n \t    op_ptr = safe_read_uleb128 (op_ptr, op_end, &reg);\n \t    op_ptr = safe_read_uleb128 (op_ptr, op_end, &uoffset);\n \t    cu_offset type_die_cu_off = (cu_offset) uoffset;\n \n-\t    type = get_base_type (type_die_cu_off);\n-\t    result_val = this->get_reg_value (type, reg);\n+\t    ensure_have_frame (this->frame, \"DW_OP_regval_type\");\n+\n+\t    struct type *type = get_base_type (type_die_cu_off);\n+\t    int regnum\n+\t      = dwarf_reg_to_regnum_or_error (get_frame_arch (this->frame),\n+\t\t\t\t\t      reg);\n+\t    result_val = value_from_register (type, regnum, this->frame);\n \t  }\n \t  break;\n "
    },
    {
      "sha": "9dc9257abd87b8ca01ff8cda6a346cbb72a8bde0",
      "filename": "gdb/dwarf2/expr.h",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e739f693f142ac634d9d127bd9951d0c62593c1/gdb/dwarf2/expr.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e739f693f142ac634d9d127bd9951d0c62593c1/gdb/dwarf2/expr.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/expr.h?ref=9e739f693f142ac634d9d127bd9951d0c62593c1",
      "patch": "@@ -211,12 +211,6 @@ struct dwarf_expr_context\n   void execute_stack_op (const gdb_byte *op_ptr, const gdb_byte *op_end);\n   void pop ();\n \n-  /* Return a value of type TYPE, stored in register number REGNUM\n-     in a current context.\n-\n-     REGNUM is a DWARF register number.  */\n-  struct value *get_reg_value (struct type *type, int regnum);\n-\n   /* Return the location expression for the frame base attribute, in\n      START and LENGTH.  The result must be live until the current\n      expression evaluation is complete.  */"
    }
  ]
}