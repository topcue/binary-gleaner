{
  "sha": "c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzE3N2YzNzcxYzgyMWQ2NDliYzFiMWQ2ZGM2N2NhYTBhMGEyMmY3OA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-19T03:05:56Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-19T03:05:56Z"
    },
    "message": "Use bfd_get_filename throughout binutils\n\n\t* ar.c (map_over_members, get_pos_bfd, delete_members, move_members),\n\t(replace_members): Use bfd_get_filename rather than accessing\n\tbfd->filename directly.\n\t* arsup.c (map_over_list, ar_delete, ar_replace, ar_extract): Likewise.\n\t* binemul.c (do_ar_emul_append): Likewise.\n\t* coffgrok.c (coff_grok): Likewise.",
    "tree": {
      "sha": "9dbca410452dee46148f2fcc7adf39b7d467fda9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9dbca410452dee46148f2fcc7adf39b7d467fda9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "765cf5f623dbc2de8c8791bce9a29fcc3492436c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/765cf5f623dbc2de8c8791bce9a29fcc3492436c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/765cf5f623dbc2de8c8791bce9a29fcc3492436c"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 26,
    "deletions": 16
  },
  "files": [
    {
      "sha": "bc0c99907bfa9a4825d562940d9aa674cc906858",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
      "patch": "@@ -1,3 +1,12 @@\n+2020-05-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* ar.c (map_over_members, get_pos_bfd, delete_members, move_members),\n+\t(replace_members): Use bfd_get_filename rather than accessing\n+\tbfd->filename directly.\n+\t* arsup.c (map_over_list, ar_delete, ar_replace, ar_extract): Likewise.\n+\t* binemul.c (do_ar_emul_append): Likewise.\n+\t* coffgrok.c (coff_grok): Likewise.\n+\n 2020-05-18  Stafford Horne  <shorne@gmail.com>\n \n \t* MAINTAINERS (OR1K): Add myself as maintainer."
    },
    {
      "sha": "85b342a6502768be49dd2b97362dde96957a6099",
      "filename": "binutils/ar.c",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/ar.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/ar.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ar.c?ref=c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
      "patch": "@@ -225,7 +225,7 @@ map_over_members (bfd *arch, void (*function)(bfd *), char **files, int count)\n \t  if (head->archive_pass)\n \t    continue;\n \n-\t  filename = head->filename;\n+\t  filename = bfd_get_filename (head);\n \t  if (filename == NULL)\n \t    {\n \t      /* Some archive formats don't get the filenames filled in\n@@ -1282,7 +1282,7 @@ get_pos_bfd (bfd **contents, enum pos default_pos, const char *default_posname)\n   else\n     {\n       for (; *after_bfd; after_bfd = &(*after_bfd)->archive_next)\n-\tif (FILENAME_CMP ((*after_bfd)->filename, realposname) == 0)\n+\tif (FILENAME_CMP (bfd_get_filename (*after_bfd), realposname) == 0)\n \t  {\n \t    if (realpos == pos_after)\n \t      after_bfd = &(*after_bfd)->archive_next;\n@@ -1321,7 +1321,7 @@ delete_members (bfd *arch, char **files_to_delete)\n       while (*current_ptr_ptr)\n \t{\n \t  if (FILENAME_CMP (normalize (*files_to_delete, arch),\n-\t\t\t    (*current_ptr_ptr)->filename) == 0)\n+\t\t\t    bfd_get_filename (*current_ptr_ptr)) == 0)\n \t    {\n \t      ++match_count;\n \t      if (counted_name_mode\n@@ -1376,7 +1376,7 @@ move_members (bfd *arch, char **files_to_move)\n \t{\n \t  bfd *current_ptr = *current_ptr_ptr;\n \t  if (FILENAME_CMP (normalize (*files_to_move, arch),\n-\t\t\t    current_ptr->filename) == 0)\n+\t\t\t    bfd_get_filename (current_ptr)) == 0)\n \t    {\n \t      /* Move this file to the end of the list - first cut from\n \t\t where it is.  */\n@@ -1398,7 +1398,8 @@ move_members (bfd *arch, char **files_to_move)\n \t  current_ptr_ptr = &((*current_ptr_ptr)->archive_next);\n \t}\n       /* xgettext:c-format */\n-      fatal (_(\"no entry %s in archive %s!\"), *files_to_move, arch->filename);\n+      fatal (_(\"no entry %s in archive %s!\"), *files_to_move,\n+\t     bfd_get_filename (arch));\n \n     next_file:;\n     }\n@@ -1428,7 +1429,7 @@ replace_members (bfd *arch, char **files_to_move, bfd_boolean quick)\n \t      /* For compatibility with existing ar programs, we\n \t\t permit the same file to be added multiple times.  */\n \t      if (FILENAME_CMP (normalize (*files_to_move, arch),\n-\t\t\t\tnormalize (current->filename, arch)) == 0\n+\t\t\t\tnormalize (bfd_get_filename (current), arch)) == 0\n \t\t  && current->arelt_data != NULL)\n \t\t{\n \t\t  if (newer_only)\n@@ -1444,14 +1445,14 @@ replace_members (bfd *arch, char **files_to_move, bfd_boolean quick)\n \t\t      if (bfd_stat_arch_elt (current, &asbuf) != 0)\n \t\t\t/* xgettext:c-format */\n \t\t\tfatal (_(\"internal stat error on %s\"),\n-\t\t\t       current->filename);\n+\t\t\t       bfd_get_filename (current));\n \n \t\t      if (fsbuf.st_mtime <= asbuf.st_mtime)\n \t\t\tgoto next_file;\n \t\t    }\n \n \t\t  after_bfd = get_pos_bfd (&arch->archive_next, pos_after,\n-\t\t\t\t\t   current->filename);\n+\t\t\t\t\t   bfd_get_filename (current));\n \t\t  if (ar_emul_replace (after_bfd, *files_to_move,\n \t\t\t\t       target, verbose))\n \t\t    {"
    },
    {
      "sha": "a668f270f1a11c3cbc0c77be6419910ece47de7b",
      "filename": "binutils/arsup.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/arsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/arsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/arsup.c?ref=c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
      "patch": "@@ -77,8 +77,8 @@ map_over_list (bfd *arch, void (*function) (bfd *, bfd *), struct list *list)\n \n \t  for (head = arch->archive_next; head; head = head->archive_next)\n \t    {\n-\t      if (head->filename != NULL\n-\t\t  && FILENAME_CMP (ptr->name, head->filename) == 0)\n+\t      if (bfd_get_filename (head) != NULL\n+\t\t  && FILENAME_CMP (ptr->name, bfd_get_filename (head)) == 0)\n \t\t{\n \t\t  found = TRUE;\n \t\t  function (head, prev);\n@@ -311,7 +311,7 @@ ar_delete (struct list *list)\n \n \t  while (member)\n \t    {\n-\t      if (FILENAME_CMP(member->filename, list->name) == 0)\n+\t      if (FILENAME_CMP (bfd_get_filename (member), list->name) == 0)\n \t\t{\n \t\t  *prev = member->archive_next;\n \t\t  found = 1;\n@@ -376,7 +376,7 @@ ar_replace (struct list *list)\n \n \t  while (member)\n \t    {\n-\t      if (FILENAME_CMP (member->filename, list->name) == 0)\n+\t      if (FILENAME_CMP (bfd_get_filename (member), list->name) == 0)\n \t\t{\n \t\t  /* Found the one to replace.  */\n \t\t  bfd *abfd = bfd_openr (list->name, NULL);\n@@ -474,7 +474,7 @@ ar_extract (struct list *list)\n \n \t  while (member && !found)\n \t    {\n-\t      if (FILENAME_CMP (member->filename, list->name) == 0)\n+\t      if (FILENAME_CMP (bfd_get_filename (member), list->name) == 0)\n \t\t{\n \t\t  extract_file (member);\n \t\t  found = 1;"
    },
    {
      "sha": "7c71b5b78c1a25116862696b7dee536f377e1c7d",
      "filename": "binutils/binemul.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/binemul.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/binemul.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/binemul.c?ref=c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
      "patch": "@@ -84,7 +84,7 @@ do_ar_emul_append (bfd **after_bfd, bfd *new_bfd,\n   if (!check (new_bfd))\n     return FALSE;\n \n-  AR_EMUL_APPEND_PRINT_VERBOSE (verbose, new_bfd->filename);\n+  AR_EMUL_APPEND_PRINT_VERBOSE (verbose, bfd_get_filename (new_bfd));\n \n   new_bfd->archive_next = *after_bfd;\n   *after_bfd = new_bfd;"
    },
    {
      "sha": "eef888ff15191c70da8def0af20ec0133725b3dc",
      "filename": "binutils/coffgrok.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/coffgrok.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c177f3771c821d649bc1b1d6dc67caa0a0a22f78/binutils/coffgrok.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/coffgrok.c?ref=c177f3771c821d649bc1b1d6dc67caa0a0a22f78",
      "patch": "@@ -890,12 +890,12 @@ coff_grok (bfd *inabfd)\n   storage = bfd_get_symtab_upper_bound (abfd);\n \n   if (storage < 0)\n-    bfd_fatal (abfd->filename);\n+    bfd_fatal (bfd_get_filename (abfd));\n \n   syms = (asymbol **) xmalloc (storage);\n   symcount = bfd_canonicalize_symtab (abfd, syms);\n   if (symcount < 0)\n-    bfd_fatal (abfd->filename);\n+    bfd_fatal (bfd_get_filename (abfd));\n   rawsyms = obj_raw_syments (abfd);\n   rawcount = obj_raw_syment_count (abfd);\n   tindex = (struct coff_symbol **) (xcalloc (sizeof (struct coff_symbol *), rawcount));"
    }
  ]
}