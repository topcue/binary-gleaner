{
  "sha": "7e56227dfffddbbb5b648c386c85345929fa0529",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2U1NjIyN2RmZmZkZGJiYjViNjQ4YzM4NmM4NTM0NTkyOWZhMDUyOQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-01T13:53:55Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-17T08:25:10Z"
    },
    "message": "gdb: Convert language la_collect_symbol_completion_matches field to a method\n\nThis commit changes the\nlanguage_data::la_collect_symbol_completion_matches function pointer\nmember variable into a member function of language_defn.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_collect_symbol_completion_matches): Rename to\n\tada_language::collect_symbol_completion_matches.\n\t(ada_language_data): Delete la_collect_symbol_completion_matches\n\tinitializer.\n\t(ada_language::collect_symbol_completion_matches): New member\n\tfunction, implementation from\n\tada_collect_symbol_completion_matches.\n\t* c-lang.c (c_language_data): Delete\n\tla_collect_symbol_completion_matches initializer.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_collect_symbol_completion_matches): Rename to\n\tf_language::collect_symbol_completion_matches.\n\t(f_language_data): Delete la_collect_symbol_completion_matches\n\tinitializer.\n\t(f_language::collect_symbol_completion_matches) New member\n\tfunction, implementation from f_collect_symbol_completion_matches.\n\t* go-lang.c (go_language_data): Delete\n\tla_collect_symbol_completion_matches initializer.\n\t* language.c (unknown_language_data): Likewise.\n\t(auto_language_data): Likewise.\n\t* language.h (language_data): Delete\n\tla_collect_symbol_completion_matches field.\n\t(language_defn::collect_symbol_completion_matches): New member\n\tfunction.\n\t* m2-lang.c (m2_language_data): Delete\n\tla_collect_symbol_completion_matches initializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.\n\t* symtab.c (default_collect_symbol_completion_matches): Delete.\n\t(collect_symbol_completion_matches): Update call to\n\tcollect_symbol_completion_matches.\n\t(collect_symbol_completion_matches_type): Likewise.\n\t* symtab.h (default_collect_symbol_completion_matches): Delete\n\tdeclaration.",
    "tree": {
      "sha": "5485717914f83ebd1764952c7d9bc366c6a5ad5a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5485717914f83ebd1764952c7d9bc366c6a5ad5a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7e56227dfffddbbb5b648c386c85345929fa0529",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e56227dfffddbbb5b648c386c85345929fa0529",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7e56227dfffddbbb5b648c386c85345929fa0529",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e56227dfffddbbb5b648c386c85345929fa0529/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "53fc67f8b2663261810353ae8e4f9920ae7a1c56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/53fc67f8b2663261810353ae8e4f9920ae7a1c56",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/53fc67f8b2663261810353ae8e4f9920ae7a1c56"
    }
  ],
  "stats": {
    "total": 408,
    "additions": 210,
    "deletions": 198
  },
  "files": [
    {
      "sha": "52cfc4ccc176dc6b3e95ee2096b1636d30170e51",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -1,3 +1,45 @@\n+2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_collect_symbol_completion_matches): Rename to\n+\tada_language::collect_symbol_completion_matches.\n+\t(ada_language_data): Delete la_collect_symbol_completion_matches\n+\tinitializer.\n+\t(ada_language::collect_symbol_completion_matches): New member\n+\tfunction, implementation from\n+\tada_collect_symbol_completion_matches.\n+\t* c-lang.c (c_language_data): Delete\n+\tla_collect_symbol_completion_matches initializer.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_collect_symbol_completion_matches): Rename to\n+\tf_language::collect_symbol_completion_matches.\n+\t(f_language_data): Delete la_collect_symbol_completion_matches\n+\tinitializer.\n+\t(f_language::collect_symbol_completion_matches) New member\n+\tfunction, implementation from f_collect_symbol_completion_matches.\n+\t* go-lang.c (go_language_data): Delete\n+\tla_collect_symbol_completion_matches initializer.\n+\t* language.c (unknown_language_data): Likewise.\n+\t(auto_language_data): Likewise.\n+\t* language.h (language_data): Delete\n+\tla_collect_symbol_completion_matches field.\n+\t(language_defn::collect_symbol_completion_matches): New member\n+\tfunction.\n+\t* m2-lang.c (m2_language_data): Delete\n+\tla_collect_symbol_completion_matches initializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\t* symtab.c (default_collect_symbol_completion_matches): Delete.\n+\t(collect_symbol_completion_matches): Update call to\n+\tcollect_symbol_completion_matches.\n+\t(collect_symbol_completion_matches_type): Likewise.\n+\t* symtab.h (default_collect_symbol_completion_matches): Delete\n+\tdeclaration.\n+\n 2020-06-17  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_get_gdb_completer_word_break_characters): Delete."
    },
    {
      "sha": "306cf3acafc5d99ec81a5115e9759815a31dc953",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 126,
      "deletions": 129,
      "changes": 255,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -6272,134 +6272,6 @@ ada_lookup_name_info::matches\n   return true;\n }\n \n-/* Add the list of possible symbol names completing TEXT to TRACKER.\n-   WORD is the entire command on which completion is made.  */\n-\n-static void\n-ada_collect_symbol_completion_matches (completion_tracker &tracker,\n-\t\t\t\t       complete_symbol_mode mode,\n-\t\t\t\t       symbol_name_match_type name_match_type,\n-\t\t\t\t       const char *text, const char *word,\n-\t\t\t\t       enum type_code code)\n-{\n-  struct symbol *sym;\n-  const struct block *b, *surrounding_static_block = 0;\n-  struct block_iterator iter;\n-\n-  gdb_assert (code == TYPE_CODE_UNDEF);\n-\n-  lookup_name_info lookup_name (text, name_match_type, true);\n-\n-  /* First, look at the partial symtab symbols.  */\n-  expand_symtabs_matching (NULL,\n-\t\t\t   lookup_name,\n-\t\t\t   NULL,\n-\t\t\t   NULL,\n-\t\t\t   ALL_DOMAIN);\n-\n-  /* At this point scan through the misc symbol vectors and add each\n-     symbol you find to the list.  Eventually we want to ignore\n-     anything that isn't a text symbol (everything else will be\n-     handled by the psymtab code above).  */\n-\n-  for (objfile *objfile : current_program_space->objfiles ())\n-    {\n-      for (minimal_symbol *msymbol : objfile->msymbols ())\n-\t{\n-\t  QUIT;\n-\n-\t  if (completion_skip_symbol (mode, msymbol))\n-\t    continue;\n-\n-\t  language symbol_language = msymbol->language ();\n-\n-\t  /* Ada minimal symbols won't have their language set to Ada.  If\n-\t     we let completion_list_add_name compare using the\n-\t     default/C-like matcher, then when completing e.g., symbols in a\n-\t     package named \"pck\", we'd match internal Ada symbols like\n-\t     \"pckS\", which are invalid in an Ada expression, unless you wrap\n-\t     them in '<' '>' to request a verbatim match.\n-\n-\t     Unfortunately, some Ada encoded names successfully demangle as\n-\t     C++ symbols (using an old mangling scheme), such as \"name__2Xn\"\n-\t     -> \"Xn::name(void)\" and thus some Ada minimal symbols end up\n-\t     with the wrong language set.  Paper over that issue here.  */\n-\t  if (symbol_language == language_auto\n-\t      || symbol_language == language_cplus)\n-\t    symbol_language = language_ada;\n-\n-\t  completion_list_add_name (tracker,\n-\t\t\t\t    symbol_language,\n-\t\t\t\t    msymbol->linkage_name (),\n-\t\t\t\t    lookup_name, text, word);\n-\t}\n-    }\n-\n-  /* Search upwards from currently selected frame (so that we can\n-     complete on local vars.  */\n-\n-  for (b = get_selected_block (0); b != NULL; b = BLOCK_SUPERBLOCK (b))\n-    {\n-      if (!BLOCK_SUPERBLOCK (b))\n-        surrounding_static_block = b;   /* For elmin of dups */\n-\n-      ALL_BLOCK_SYMBOLS (b, iter, sym)\n-      {\n-\tif (completion_skip_symbol (mode, sym))\n-\t  continue;\n-\n-\tcompletion_list_add_name (tracker,\n-\t\t\t\t  sym->language (),\n-\t\t\t\t  sym->linkage_name (),\n-\t\t\t\t  lookup_name, text, word);\n-      }\n-    }\n-\n-  /* Go through the symtabs and check the externs and statics for\n-     symbols which match.  */\n-\n-  for (objfile *objfile : current_program_space->objfiles ())\n-    {\n-      for (compunit_symtab *s : objfile->compunits ())\n-\t{\n-\t  QUIT;\n-\t  b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (s), GLOBAL_BLOCK);\n-\t  ALL_BLOCK_SYMBOLS (b, iter, sym)\n-\t    {\n-\t      if (completion_skip_symbol (mode, sym))\n-\t\tcontinue;\n-\n-\t      completion_list_add_name (tracker,\n-\t\t\t\t\tsym->language (),\n-\t\t\t\t\tsym->linkage_name (),\n-\t\t\t\t\tlookup_name, text, word);\n-\t    }\n-\t}\n-    }\n-\n-  for (objfile *objfile : current_program_space->objfiles ())\n-    {\n-      for (compunit_symtab *s : objfile->compunits ())\n-\t{\n-\t  QUIT;\n-\t  b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (s), STATIC_BLOCK);\n-\t  /* Don't do this block twice.  */\n-\t  if (b == surrounding_static_block)\n-\t    continue;\n-\t  ALL_BLOCK_SYMBOLS (b, iter, sym)\n-\t    {\n-\t      if (completion_skip_symbol (mode, sym))\n-\t\tcontinue;\n-\n-\t      completion_list_add_name (tracker,\n-\t\t\t\t\tsym->language (),\n-\t\t\t\t\tsym->linkage_name (),\n-\t\t\t\t\tlookup_name, text, word);\n-\t    }\n-\t}\n-    }\n-}\n-\n                                 /* Field Access */\n \n /* Return non-zero if TYPE is a pointer to the GNAT dispatch table used\n@@ -13911,7 +13783,6 @@ extern const struct language_data ada_language_data =\n   ada_op_print_tab,             /* expression operators for printing */\n   0,                            /* c-style arrays */\n   1,                            /* String lower bound */\n-  ada_collect_symbol_completion_matches,\n   ada_watch_location_expression,\n   &ada_varobj_ops,\n   ada_is_string_type,\n@@ -14105,6 +13976,132 @@ class ada_language : public language_defn\n     return ada_completer_word_break_characters;\n   }\n \n+  /* See language.h.  */\n+\n+  void collect_symbol_completion_matches (completion_tracker &tracker,\n+\t\t\t\t\t  complete_symbol_mode mode,\n+\t\t\t\t\t  symbol_name_match_type name_match_type,\n+\t\t\t\t\t  const char *text, const char *word,\n+\t\t\t\t\t  enum type_code code) const override\n+  {\n+    struct symbol *sym;\n+    const struct block *b, *surrounding_static_block = 0;\n+    struct block_iterator iter;\n+\n+    gdb_assert (code == TYPE_CODE_UNDEF);\n+\n+    lookup_name_info lookup_name (text, name_match_type, true);\n+\n+    /* First, look at the partial symtab symbols.  */\n+    expand_symtabs_matching (NULL,\n+\t\t\t     lookup_name,\n+\t\t\t     NULL,\n+\t\t\t     NULL,\n+\t\t\t     ALL_DOMAIN);\n+\n+    /* At this point scan through the misc symbol vectors and add each\n+       symbol you find to the list.  Eventually we want to ignore\n+       anything that isn't a text symbol (everything else will be\n+       handled by the psymtab code above).  */\n+\n+    for (objfile *objfile : current_program_space->objfiles ())\n+      {\n+\tfor (minimal_symbol *msymbol : objfile->msymbols ())\n+\t  {\n+\t    QUIT;\n+\n+\t    if (completion_skip_symbol (mode, msymbol))\n+\t      continue;\n+\n+\t    language symbol_language = msymbol->language ();\n+\n+\t    /* Ada minimal symbols won't have their language set to Ada.  If\n+\t       we let completion_list_add_name compare using the\n+\t       default/C-like matcher, then when completing e.g., symbols in a\n+\t       package named \"pck\", we'd match internal Ada symbols like\n+\t       \"pckS\", which are invalid in an Ada expression, unless you wrap\n+\t       them in '<' '>' to request a verbatim match.\n+\n+\t       Unfortunately, some Ada encoded names successfully demangle as\n+\t       C++ symbols (using an old mangling scheme), such as \"name__2Xn\"\n+\t       -> \"Xn::name(void)\" and thus some Ada minimal symbols end up\n+\t       with the wrong language set.  Paper over that issue here.  */\n+\t    if (symbol_language == language_auto\n+\t\t|| symbol_language == language_cplus)\n+\t      symbol_language = language_ada;\n+\n+\t    completion_list_add_name (tracker,\n+\t\t\t\t      symbol_language,\n+\t\t\t\t      msymbol->linkage_name (),\n+\t\t\t\t      lookup_name, text, word);\n+\t  }\n+      }\n+\n+    /* Search upwards from currently selected frame (so that we can\n+       complete on local vars.  */\n+\n+    for (b = get_selected_block (0); b != NULL; b = BLOCK_SUPERBLOCK (b))\n+      {\n+\tif (!BLOCK_SUPERBLOCK (b))\n+\t  surrounding_static_block = b;   /* For elmin of dups */\n+\n+\tALL_BLOCK_SYMBOLS (b, iter, sym)\n+\t  {\n+\t    if (completion_skip_symbol (mode, sym))\n+\t      continue;\n+\n+\t    completion_list_add_name (tracker,\n+\t\t\t\t      sym->language (),\n+\t\t\t\t      sym->linkage_name (),\n+\t\t\t\t      lookup_name, text, word);\n+\t  }\n+      }\n+\n+    /* Go through the symtabs and check the externs and statics for\n+       symbols which match.  */\n+\n+    for (objfile *objfile : current_program_space->objfiles ())\n+      {\n+\tfor (compunit_symtab *s : objfile->compunits ())\n+\t  {\n+\t    QUIT;\n+\t    b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (s), GLOBAL_BLOCK);\n+\t    ALL_BLOCK_SYMBOLS (b, iter, sym)\n+\t      {\n+\t\tif (completion_skip_symbol (mode, sym))\n+\t\t  continue;\n+\n+\t\tcompletion_list_add_name (tracker,\n+\t\t\t\t\t  sym->language (),\n+\t\t\t\t\t  sym->linkage_name (),\n+\t\t\t\t\t  lookup_name, text, word);\n+\t      }\n+\t  }\n+      }\n+\n+    for (objfile *objfile : current_program_space->objfiles ())\n+      {\n+\tfor (compunit_symtab *s : objfile->compunits ())\n+\t  {\n+\t    QUIT;\n+\t    b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (s), STATIC_BLOCK);\n+\t    /* Don't do this block twice.  */\n+\t    if (b == surrounding_static_block)\n+\t      continue;\n+\t    ALL_BLOCK_SYMBOLS (b, iter, sym)\n+\t      {\n+\t\tif (completion_skip_symbol (mode, sym))\n+\t\t  continue;\n+\n+\t\tcompletion_list_add_name (tracker,\n+\t\t\t\t\t  sym->language (),\n+\t\t\t\t\t  sym->linkage_name (),\n+\t\t\t\t\t  lookup_name, text, word);\n+\t      }\n+\t  }\n+      }\n+  }\n+\n protected:\n   /* See language.h.  */\n "
    },
    {
      "sha": "3d1116b5b50aa78e02a109bdaf1a21848939c32d",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -914,7 +914,6 @@ extern const struct language_data c_language_data =\n   c_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &c_varobj_ops,\n   c_is_string_type_p,\n@@ -1027,7 +1026,6 @@ extern const struct language_data cplus_language_data =\n   c_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &cplus_varobj_ops,\n   c_is_string_type_p,\n@@ -1228,7 +1226,6 @@ extern const struct language_data asm_language_data =\n   c_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   c_is_string_type_p,\n@@ -1296,7 +1293,6 @@ extern const struct language_data minimal_language_data =\n   c_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   c_is_string_type_p,"
    },
    {
      "sha": "67c82e4215e3951b8516fc60b83f57d451111b23",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -157,7 +157,6 @@ extern const struct language_data d_language_data =\n   d_op_print_tab,\t\t/* Expression operators for printing.  */\n   1,\t\t\t\t/* C-style arrays.  */\n   0,\t\t\t\t/* String lower bound.  */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   c_is_string_type_p,"
    },
    {
      "sha": "0540ab233db252f1002446fea4cf6e9832350cb3",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 17,
      "deletions": 16,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -165,21 +165,6 @@ enum f_primitive_types {\n   nr_f_primitive_types\n };\n \n-/* Consider the modules separator :: as a valid symbol name character\n-   class.  */\n-\n-static void\n-f_collect_symbol_completion_matches (completion_tracker &tracker,\n-\t\t\t\t     complete_symbol_mode mode,\n-\t\t\t\t     symbol_name_match_type compare_name,\n-\t\t\t\t     const char *text, const char *word,\n-\t\t\t\t     enum type_code code)\n-{\n-  default_collect_symbol_completion_matches_break_on (tracker, mode,\n-\t\t\t\t\t\t      compare_name,\n-\t\t\t\t\t\t      text, word, \":\", code);\n-}\n-\n /* Special expression evaluation cases for Fortran.  */\n \n static struct value *\n@@ -593,7 +578,6 @@ extern const struct language_data f_language_data =\n   f_op_print_tab,\t\t/* expression operators for printing */\n   0,\t\t\t\t/* arrays are first-class (not c-style) */\n   1,\t\t\t\t/* String lower bound */\n-  f_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   f_is_string_type_p,\n@@ -698,6 +682,23 @@ class f_language : public language_defn\n     return retval;\n   }\n \n+\n+  /* See language.h.  */\n+\n+  void collect_symbol_completion_matches (completion_tracker &tracker,\n+\t\t\t\t\t  complete_symbol_mode mode,\n+\t\t\t\t\t  symbol_name_match_type name_match_type,\n+\t\t\t\t\t  const char *text, const char *word,\n+\t\t\t\t\t  enum type_code code) const override\n+  {\n+    /* Consider the modules separator :: as a valid symbol name character\n+       class.  */\n+    default_collect_symbol_completion_matches_break_on (tracker, mode,\n+\t\t\t\t\t\t\tname_match_type,\n+\t\t\t\t\t\t\ttext, word, \":\",\n+\t\t\t\t\t\t\tcode);\n+  }\n+\n protected:\n \n   /* See language.h.  */"
    },
    {
      "sha": "c060ad56436cbba3b2304b26bd6615f8ed0c81ac",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -542,7 +542,6 @@ extern const struct language_data go_language_data =\n   go_op_print_tab,\t\t/* Expression operators for printing.  */\n   1,\t\t\t\t/* C-style arrays.  */\n   0,\t\t\t\t/* String lower bound.  */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   go_is_string_type_p,"
    },
    {
      "sha": "f4e99fc392f6d46fd0ad279a43bd01d2edf6d22b",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -779,7 +779,6 @@ extern const struct language_data unknown_language_data =\n   unk_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   default_is_string_type_p,\n@@ -851,7 +850,6 @@ extern const struct language_data auto_language_data =\n   unk_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   default_is_string_type_p,"
    },
    {
      "sha": "5872db39dbb5869a68a9b7f2c26b52005b0de97d",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 18,
      "deletions": 13,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -319,19 +319,6 @@ struct language_data\n     /* Index to use for extracting the first element of a string.  */\n     char string_lower_bound;\n \n-    /* Add to the completion tracker all symbols which are possible\n-       completions for TEXT.  WORD is the entire command on which the\n-       completion is being made.  If CODE is TYPE_CODE_UNDEF, then all\n-       symbols should be examined; otherwise, only STRUCT_DOMAIN\n-       symbols whose type has a code of CODE should be matched.  */\n-    void (*la_collect_symbol_completion_matches)\n-      (completion_tracker &tracker,\n-       complete_symbol_mode mode,\n-       symbol_name_match_type match_type,\n-       const char *text,\n-       const char *word,\n-       enum type_code code);\n-\n     /* Return an expression that can be used for a location\n        watchpoint.  TYPE is a pointer type that points to the memory\n        to watch, and ADDR is the address of the watched memory.  */\n@@ -535,6 +522,24 @@ struct language_defn : language_data\n     return default_word_break_characters ();\n   }\n \n+  /* Add to the completion tracker all symbols which are possible\n+     completions for TEXT.  WORD is the entire command on which the\n+     completion is being made.  If CODE is TYPE_CODE_UNDEF, then all\n+     symbols should be examined; otherwise, only STRUCT_DOMAIN symbols\n+     whose type has a code of CODE should be matched.  */\n+\n+  virtual void collect_symbol_completion_matches\n+\t(completion_tracker &tracker,\n+\t complete_symbol_mode mode,\n+\t symbol_name_match_type name_match_type,\n+\t const char *text,\n+\t const char *word,\n+\t enum type_code code) const\n+  {\n+    return default_collect_symbol_completion_matches_break_on\n+      (tracker, mode, name_match_type, text, word, \"\", code);\n+  }\n+\n   /* List of all known languages.  */\n   static const struct language_defn *languages[nr_languages];\n "
    },
    {
      "sha": "d21a5c9705c87fcbec9f3126dc92d7a8d1307c47",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -376,7 +376,6 @@ extern const struct language_data m2_language_data =\n   m2_op_print_tab,\t\t/* expression operators for printing */\n   0,\t\t\t\t/* arrays are first-class (not c-style) */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   m2_is_string_type_p,"
    },
    {
      "sha": "5f9e97103664eb671f82e7baa10f31e0b7e0ab99",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -351,7 +351,6 @@ extern const struct language_data objc_language_data =\n   objc_op_print_tab,\t\t/* Expression operators for printing */\n   1,\t\t\t\t/* C-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   c_is_string_type_p,"
    },
    {
      "sha": "d93ce0bc478482aa05feac2c86d3dcc0de2708ed",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -1030,7 +1030,6 @@ extern const struct language_data opencl_language_data =\n   c_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   c_is_string_type_p,"
    },
    {
      "sha": "f94f4c531436e566d846c9c55d07ca007dc11800",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -407,7 +407,6 @@ extern const struct language_data pascal_language_data =\n   pascal_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   &default_varobj_ops,\n   pascal_is_string_type_p,"
    },
    {
      "sha": "47fc3dbc4af463575853db48c6f6385854efeaec",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -2062,7 +2062,6 @@ extern const struct language_data rust_language_data =\n   c_op_print_tab,\t\t/* expression operators for printing */\n   1,\t\t\t\t/* c-style arrays */\n   0,\t\t\t\t/* String lower bound */\n-  default_collect_symbol_completion_matches,\n   rust_watch_location_expression,\n   &default_varobj_ops,\n   rust_is_string_type_p,"
    },
    {
      "sha": "b0e22eeb3810b58c0f426578f40e1763551e593e",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 7,
      "deletions": 20,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -5806,19 +5806,6 @@ default_collect_symbol_completion_matches_break_on\n     }\n }\n \n-void\n-default_collect_symbol_completion_matches (completion_tracker &tracker,\n-\t\t\t\t\t   complete_symbol_mode mode,\n-\t\t\t\t\t   symbol_name_match_type name_match_type,\n-\t\t\t\t\t   const char *text, const char *word,\n-\t\t\t\t\t   enum type_code code)\n-{\n-  return default_collect_symbol_completion_matches_break_on (tracker, mode,\n-\t\t\t\t\t\t\t     name_match_type,\n-\t\t\t\t\t\t\t     text, word, \"\",\n-\t\t\t\t\t\t\t     code);\n-}\n-\n /* Collect all symbols (regardless of class) which begin by matching\n    TEXT.  */\n \n@@ -5828,10 +5815,10 @@ collect_symbol_completion_matches (completion_tracker &tracker,\n \t\t\t\t   symbol_name_match_type name_match_type,\n \t\t\t\t   const char *text, const char *word)\n {\n-  current_language->la_collect_symbol_completion_matches (tracker, mode,\n-\t\t\t\t\t\t\t  name_match_type,\n-\t\t\t\t\t\t\t  text, word,\n-\t\t\t\t\t\t\t  TYPE_CODE_UNDEF);\n+  current_language->collect_symbol_completion_matches (tracker, mode,\n+\t\t\t\t\t\t       name_match_type,\n+\t\t\t\t\t\t       text, word,\n+\t\t\t\t\t\t       TYPE_CODE_UNDEF);\n }\n \n /* Like collect_symbol_completion_matches, but only collect\n@@ -5848,9 +5835,9 @@ collect_symbol_completion_matches_type (completion_tracker &tracker,\n   gdb_assert (code == TYPE_CODE_UNION\n \t      || code == TYPE_CODE_STRUCT\n \t      || code == TYPE_CODE_ENUM);\n-  current_language->la_collect_symbol_completion_matches (tracker, mode,\n-\t\t\t\t\t\t\t  name_match_type,\n-\t\t\t\t\t\t\t  text, word, code);\n+  current_language->collect_symbol_completion_matches (tracker, mode,\n+\t\t\t\t\t\t       name_match_type,\n+\t\t\t\t\t\t       text, word, code);\n }\n \n /* Like collect_symbol_completion_matches, but collects a list of"
    },
    {
      "sha": "bf02828d12c97b38c5eb02cfa867e81b46659664",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e56227dfffddbbb5b648c386c85345929fa0529/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=7e56227dfffddbbb5b648c386c85345929fa0529",
      "patch": "@@ -1952,13 +1952,6 @@ extern void default_collect_symbol_completion_matches_break_on\n    symbol_name_match_type name_match_type,\n    const char *text, const char *word, const char *break_on,\n    enum type_code code);\n-extern void default_collect_symbol_completion_matches\n-  (completion_tracker &tracker,\n-   complete_symbol_mode,\n-   symbol_name_match_type name_match_type,\n-   const char *,\n-   const char *,\n-   enum type_code);\n extern void collect_symbol_completion_matches\n   (completion_tracker &tracker,\n    complete_symbol_mode mode,"
    }
  ]
}