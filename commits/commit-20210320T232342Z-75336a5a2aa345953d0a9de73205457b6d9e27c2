{
  "sha": "75336a5a2aa345953d0a9de73205457b6d9e27c2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzUzMzZhNWEyYWEzNDU5NTNkMGE5ZGU3MzIwNTQ1N2I2ZDllMjdjMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-20T23:23:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-20T23:23:42Z"
    },
    "message": "Move psymbol_map out of objfile\n\nobjfile::psymbol_map is used to implement a Rust feature.  It is\ncurrently specific to partial symbols -- it isn't used by the DWARF\nindices.\n\nThis patch moves it out of objfile and into psymbol_functions, adding\na new method to quick_symbol_functions to handle the clearing case.\nThis is needed because the map holds unrelocated addresses.\n\ngdb/ChangeLog\n2021-03-20  Tom Tromey  <tom@tromey.com>\n\n\t* quick-symbol.h (struct quick_symbol_functions)\n\t<relocated>: New method.\n\t* psymtab.h (struct psymbol_functions) <relocated>: New\n\tmethod.\n\t<fill_psymbol_map>: Declare method.\n\t<m_psymbol_map>: New member.\n\t* psymtab.c (psymbol_functions::fill_psymbol_map): Rename.\n\t(psymbol_functions::find_compunit_symtab_by_address): Update.\n\t* objfiles.h (reset_psymtabs): Don't clear psymbol_map.\n\t(struct objfile) <psymbol_map>: Remove.\n\t* objfiles.c (objfile_relocate1): Update.",
    "tree": {
      "sha": "73e2373cad911b81c529089a73db5b199b26ae05",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/73e2373cad911b81c529089a73db5b199b26ae05"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/75336a5a2aa345953d0a9de73205457b6d9e27c2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75336a5a2aa345953d0a9de73205457b6d9e27c2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/75336a5a2aa345953d0a9de73205457b6d9e27c2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75336a5a2aa345953d0a9de73205457b6d9e27c2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "39298a5d973d5822ed7d09230f67cc83f72a06c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39298a5d973d5822ed7d09230f67cc83f72a06c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/39298a5d973d5822ed7d09230f67cc83f72a06c2"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 60,
    "deletions": 27
  },
  "files": [
    {
      "sha": "14440e73c51d841b677df45004d9163c352cfad5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=75336a5a2aa345953d0a9de73205457b6d9e27c2",
      "patch": "@@ -1,3 +1,17 @@\n+2021-03-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* quick-symbol.h (struct quick_symbol_functions)\n+\t<relocated>: New method.\n+\t* psymtab.h (struct psymbol_functions) <relocated>: New\n+\tmethod.\n+\t<fill_psymbol_map>: Declare method.\n+\t<m_psymbol_map>: New member.\n+\t* psymtab.c (psymbol_functions::fill_psymbol_map): Rename.\n+\t(psymbol_functions::find_compunit_symtab_by_address): Update.\n+\t* objfiles.h (reset_psymtabs): Don't clear psymbol_map.\n+\t(struct objfile) <psymbol_map>: Remove.\n+\t* objfiles.c (objfile_relocate1): Update.\n+\n 2021-03-20  Tom Tromey  <tom@tromey.com>\n \n \t* psympriv.h (struct psymbol_functions): New."
    },
    {
      "sha": "bfa5f0443e306e88df4e53070e2803bfaffebdf1",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=75336a5a2aa345953d0a9de73205457b6d9e27c2",
      "patch": "@@ -703,9 +703,9 @@ objfile_relocate1 (struct objfile *objfile,\n       }\n   }\n \n-  /* This stores relocated addresses and so must be cleared.  This\n-     will cause it to be recreated on demand.  */\n-  objfile->psymbol_map.clear ();\n+  /* Notify the quick symbol object.  */\n+  if (objfile->qf)\n+    objfile->qf->relocated ();\n \n   /* Relocate isolated symbols.  */\n   {"
    },
    {
      "sha": "cd136eef788fa7b45c8e02d25f5c474ded80d550",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=75336a5a2aa345953d0a9de73205457b6d9e27c2",
      "patch": "@@ -459,7 +459,6 @@ struct objfile\n \n   void reset_psymtabs ()\n   {\n-    psymbol_map.clear ();\n     partial_symtabs.reset (new psymtab_storage ());\n   }\n \n@@ -665,11 +664,6 @@ struct objfile\n \n   struct obstack objfile_obstack {};\n \n-  /* Map symbol addresses to the partial symtab that defines the\n-     object at that address.  */\n-\n-  std::vector<std::pair<CORE_ADDR, partial_symtab *>> psymbol_map;\n-\n   /* Structure which keeps track of functions that manipulate objfile's\n      of the same type as this objfile.  I.e. the function to read partial\n      symbols for example.  Note that this structure is in statically"
    },
    {
      "sha": "73f00a50992f125354b57c8957151ce1a02edafe",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=75336a5a2aa345953d0a9de73205457b6d9e27c2",
      "patch": "@@ -535,6 +535,23 @@ struct psymbol_functions : public quick_symbol_functions\n   void map_symbol_filenames (struct objfile *objfile,\n \t\t\t     symbol_filename_ftype *fun, void *data,\n \t\t\t     int need_fullname) override;\n+\n+  void relocated () override\n+  {\n+    m_psymbol_map.clear ();\n+  }\n+\n+private:\n+\n+  void fill_psymbol_map (struct objfile *objfile,\n+\t\t\t struct partial_symtab *psymtab,\n+\t\t\t std::set<CORE_ADDR> *seen_addrs,\n+\t\t\t const std::vector<partial_symbol *> &symbols);\n+\n+  /* Map symbol addresses to the partial symtab that defines the\n+     object at that address.  */\n+\n+  std::vector<std::pair<CORE_ADDR, partial_symtab *>> m_psymbol_map;\n };\n \n #endif /* PSYMPRIV_H */"
    },
    {
      "sha": "45a4db71c1f129b75429778b0f9b9167c072aa6d",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 19,
      "deletions": 18,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=75336a5a2aa345953d0a9de73205457b6d9e27c2",
      "patch": "@@ -1346,13 +1346,14 @@ psymbol_functions::has_symbols (struct objfile *objfile)\n }\n \n /* Helper function for psym_find_compunit_symtab_by_address that fills\n-   in psymbol_map for a given range of psymbols.  */\n+   in m_psymbol_map for a given range of psymbols.  */\n \n-static void\n-psym_fill_psymbol_map (struct objfile *objfile,\n-\t\t       struct partial_symtab *psymtab,\n-\t\t       std::set<CORE_ADDR> *seen_addrs,\n-\t\t       const std::vector<partial_symbol *> &symbols)\n+void\n+psymbol_functions::fill_psymbol_map\n+     (struct objfile *objfile,\n+      struct partial_symtab *psymtab,\n+      std::set<CORE_ADDR> *seen_addrs,\n+      const std::vector<partial_symbol *> &symbols)\n {\n   for (partial_symbol *psym : symbols)\n     {\n@@ -1362,7 +1363,7 @@ psym_fill_psymbol_map (struct objfile *objfile,\n \t  if (seen_addrs->find (addr) == seen_addrs->end ())\n \t    {\n \t      seen_addrs->insert (addr);\n-\t      objfile->psymbol_map.emplace_back (addr, psymtab);\n+\t      m_psymbol_map.emplace_back (addr, psymtab);\n \t    }\n \t}\n     }\n@@ -1375,23 +1376,23 @@ compunit_symtab *\n psymbol_functions::find_compunit_symtab_by_address (struct objfile *objfile,\n \t\t\t\t\t\t    CORE_ADDR address)\n {\n-  if (objfile->psymbol_map.empty ())\n+  if (m_psymbol_map.empty ())\n     {\n       std::set<CORE_ADDR> seen_addrs;\n \n       for (partial_symtab *pst : require_partial_symbols (objfile, true))\n \t{\n-\t  psym_fill_psymbol_map (objfile, pst,\n-\t\t\t\t &seen_addrs,\n-\t\t\t\t pst->global_psymbols);\n-\t  psym_fill_psymbol_map (objfile, pst,\n-\t\t\t\t &seen_addrs,\n-\t\t\t\t pst->static_psymbols);\n+\t  fill_psymbol_map (objfile, pst,\n+\t\t\t    &seen_addrs,\n+\t\t\t    pst->global_psymbols);\n+\t  fill_psymbol_map (objfile, pst,\n+\t\t\t    &seen_addrs,\n+\t\t\t    pst->static_psymbols);\n \t}\n \n-      objfile->psymbol_map.shrink_to_fit ();\n+      m_psymbol_map.shrink_to_fit ();\n \n-      std::sort (objfile->psymbol_map.begin (), objfile->psymbol_map.end (),\n+      std::sort (m_psymbol_map.begin (), m_psymbol_map.end (),\n \t\t [] (const std::pair<CORE_ADDR, partial_symtab *> &a,\n \t\t     const std::pair<CORE_ADDR, partial_symtab *> &b)\n \t\t {\n@@ -1400,14 +1401,14 @@ psymbol_functions::find_compunit_symtab_by_address (struct objfile *objfile,\n     }\n \n   auto iter = std::lower_bound\n-    (objfile->psymbol_map.begin (), objfile->psymbol_map.end (), address,\n+    (m_psymbol_map.begin (), m_psymbol_map.end (), address,\n      [] (const std::pair<CORE_ADDR, partial_symtab *> &a,\n \t CORE_ADDR b)\n      {\n        return a.first < b;\n      });\n \n-  if (iter == objfile->psymbol_map.end () || iter->first != address)\n+  if (iter == m_psymbol_map.end () || iter->first != address)\n     return NULL;\n \n   return psymtab_to_symtab (objfile, iter->second);"
    },
    {
      "sha": "319ffe681c85ac2e25510bb7a25f25e718675f2f",
      "filename": "gdb/quick-symbol.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/quick-symbol.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75336a5a2aa345953d0a9de73205457b6d9e27c2/gdb/quick-symbol.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/quick-symbol.h?ref=75336a5a2aa345953d0a9de73205457b6d9e27c2",
      "patch": "@@ -228,6 +228,13 @@ struct quick_symbol_functions\n   virtual void map_symbol_filenames (struct objfile *objfile,\n \t\t\t\t     symbol_filename_ftype *fun, void *data,\n \t\t\t\t     int need_fullname) = 0;\n+\n+  /* This is called when the objfile is relocated.  It can be used to\n+     clean up any internal caches.  */\n+  virtual void relocated ()\n+  {\n+    /* Do nothing.  */\n+  }\n };\n \n typedef std::unique_ptr<quick_symbol_functions> quick_symbol_functions_up;"
    }
  ]
}