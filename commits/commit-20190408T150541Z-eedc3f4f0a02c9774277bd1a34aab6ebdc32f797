{
  "sha": "eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWVkYzNmNGYwYTAyYzk3NzQyNzdiZDFhMzRhYWI2ZWJkYzMyZjc5Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-28T17:45:45Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-08T15:05:41Z"
    },
    "message": "Replace throw_exception with throw in some cases\n\nThis replaces throw_exception with \"throw;\" when possible.  This was\nwritten by script.  The rule that is followed is that uses of the\nform:\n\n   catch (... &name)\n     {\n       ...\n       throw_exception (name);\n     }\n\n... can be rewritten.  This should always be safe, because exceptions\nare caught by const reference, and therefore can't be modified in the\nbody of the catch.\n\ngdb/ChangeLog\n2019-04-08  Tom Tromey  <tom@tromey.com>\n\n\t* valops.c (value_rtti_indirect_type): Replace throw_exception\n\twith throw.\n\t* tracefile-tfile.c (tfile_target_open): Replace throw_exception\n\twith throw.\n\t* thread.c (thr_try_catch_cmd): Replace throw_exception with\n\tthrow.\n\t* target.c (target_translate_tls_address): Replace throw_exception\n\twith throw.\n\t* stack.c (frame_apply_command_count): Replace throw_exception\n\twith throw.\n\t* solib-spu.c (append_ocl_sos): Replace throw_exception with\n\tthrow.\n\t* s390-tdep.c (s390_frame_unwind_cache): Replace throw_exception\n\twith throw.\n\t* rs6000-tdep.c (rs6000_frame_cache)\n\t(rs6000_epilogue_frame_cache): Replace throw_exception with throw.\n\t* remote.c: Replace throw_exception with throw.\n\t* record-full.c (record_full_message, record_full_wait_1)\n\t(record_full_restore): Replace throw_exception with throw.\n\t* record-btrace.c:\n\t(get_thread_current_frame_id, record_btrace_start_replaying)\n\t(cmd_record_btrace_bts_start, cmd_record_btrace_pt_start)\n\t(cmd_record_btrace_start): Replace throw_exception with throw.\n\t* parse.c (parse_exp_in_context_1): Replace throw_exception with\n\tthrow.\n\t* linux-nat.c (detach_one_lwp, linux_resume_one_lwp)\n\t(resume_stopped_resumed_lwps): Replace throw_exception with throw.\n\t* linespec.c:\n\t(find_linespec_symbols): Replace throw_exception with throw.\n\t* infrun.c (displaced_step_prepare, resume): Replace\n\tthrow_exception with throw.\n\t* infcmd.c (post_create_inferior): Replace throw_exception with\n\tthrow.\n\t* inf-loop.c (inferior_event_handler): Replace throw_exception\n\twith throw.\n\t* i386-tdep.c (i386_frame_cache, i386_epilogue_frame_cache)\n\t(i386_sigtramp_frame_cache): Replace throw_exception with throw.\n\t* frame.c (frame_unwind_pc, get_prev_frame_if_no_cycle)\n\t(get_prev_frame_always, get_frame_pc_if_available)\n\t(get_frame_address_in_block_if_available, get_frame_language):\n\tReplace throw_exception with throw.\n\t* frame-unwind.c (frame_unwind_try_unwinder): Replace\n\tthrow_exception with throw.\n\t* eval.c (fetch_subexp_value, evaluate_var_value)\n\t(evaluate_funcall, evaluate_subexp_standard): Replace\n\tthrow_exception with throw.\n\t* dwarf2loc.c (call_site_find_chain)\n\t(dwarf2_evaluate_loc_desc_full, dwarf2_locexpr_baton_eval):\n\tReplace throw_exception with throw.\n\t* dwarf2-frame.c (dwarf2_frame_cache): Replace throw_exception\n\twith throw.\n\t* darwin-nat.c (darwin_attach_pid): Replace throw_exception with\n\tthrow.\n\t* cp-abi.c (baseclass_offset): Replace throw_exception with throw.\n\t* completer.c (complete_line_internal): Replace throw_exception\n\twith throw.\n\t* compile/compile-object-run.c (compile_object_run): Replace\n\tthrow_exception with throw.\n\t* cli/cli-script.c (process_next_line): Replace throw_exception\n\twith throw.\n\t* btrace.c (btrace_compute_ftrace_pt, btrace_compute_ftrace)\n\t(btrace_enable, btrace_maint_update_pt_packets): Replace\n\tthrow_exception with throw.\n\t* breakpoint.c (create_breakpoint, save_breakpoints): Replace\n\tthrow_exception with throw.\n\t* break-catch-throw.c (re_set_exception_catchpoint): Replace\n\tthrow_exception with throw.\n\t* amd64-tdep.c (amd64_frame_cache, amd64_sigtramp_frame_cache)\n\t(amd64_epilogue_frame_cache): Replace throw_exception with throw.\n\t* aarch64-tdep.c (aarch64_make_prologue_cache)\n\t(aarch64_make_stub_cache): Replace throw_exception with throw.\n\ngdb/gdbserver/ChangeLog\n2019-04-08  Tom Tromey  <tom@tromey.com>\n\n\t* linux-low.c (linux_detach_one_lwp): Replace throw_exception with\n\tthrow.\n\t(linux_resume_one_lwp): Likewise.",
    "tree": {
      "sha": "59fb78a11b63e85d9df7035d5101a3203aae3452",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/59fb78a11b63e85d9df7035d5101a3203aae3452"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "26003a205e207db7985c32ec1964a04652b68413",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/26003a205e207db7985c32ec1964a04652b68413",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/26003a205e207db7985c32ec1964a04652b68413"
    }
  ],
  "stats": {
    "total": 222,
    "additions": 151,
    "deletions": 71
  },
  "files": [
    {
      "sha": "39c380815aa0045e61e006af98d95127b5d25560",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 74,
      "deletions": 0,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1,3 +1,77 @@\n+2019-04-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* valops.c (value_rtti_indirect_type): Replace throw_exception\n+\twith throw.\n+\t* tracefile-tfile.c (tfile_target_open): Replace throw_exception\n+\twith throw.\n+\t* thread.c (thr_try_catch_cmd): Replace throw_exception with\n+\tthrow.\n+\t* target.c (target_translate_tls_address): Replace throw_exception\n+\twith throw.\n+\t* stack.c (frame_apply_command_count): Replace throw_exception\n+\twith throw.\n+\t* solib-spu.c (append_ocl_sos): Replace throw_exception with\n+\tthrow.\n+\t* s390-tdep.c (s390_frame_unwind_cache): Replace throw_exception\n+\twith throw.\n+\t* rs6000-tdep.c (rs6000_frame_cache)\n+\t(rs6000_epilogue_frame_cache): Replace throw_exception with throw.\n+\t* remote.c: Replace throw_exception with throw.\n+\t* record-full.c (record_full_message, record_full_wait_1)\n+\t(record_full_restore): Replace throw_exception with throw.\n+\t* record-btrace.c:\n+\t(get_thread_current_frame_id, record_btrace_start_replaying)\n+\t(cmd_record_btrace_bts_start, cmd_record_btrace_pt_start)\n+\t(cmd_record_btrace_start): Replace throw_exception with throw.\n+\t* parse.c (parse_exp_in_context_1): Replace throw_exception with\n+\tthrow.\n+\t* linux-nat.c (detach_one_lwp, linux_resume_one_lwp)\n+\t(resume_stopped_resumed_lwps): Replace throw_exception with throw.\n+\t* linespec.c:\n+\t(find_linespec_symbols): Replace throw_exception with throw.\n+\t* infrun.c (displaced_step_prepare, resume): Replace\n+\tthrow_exception with throw.\n+\t* infcmd.c (post_create_inferior): Replace throw_exception with\n+\tthrow.\n+\t* inf-loop.c (inferior_event_handler): Replace throw_exception\n+\twith throw.\n+\t* i386-tdep.c (i386_frame_cache, i386_epilogue_frame_cache)\n+\t(i386_sigtramp_frame_cache): Replace throw_exception with throw.\n+\t* frame.c (frame_unwind_pc, get_prev_frame_if_no_cycle)\n+\t(get_prev_frame_always, get_frame_pc_if_available)\n+\t(get_frame_address_in_block_if_available, get_frame_language):\n+\tReplace throw_exception with throw.\n+\t* frame-unwind.c (frame_unwind_try_unwinder): Replace\n+\tthrow_exception with throw.\n+\t* eval.c (fetch_subexp_value, evaluate_var_value)\n+\t(evaluate_funcall, evaluate_subexp_standard): Replace\n+\tthrow_exception with throw.\n+\t* dwarf2loc.c (call_site_find_chain)\n+\t(dwarf2_evaluate_loc_desc_full, dwarf2_locexpr_baton_eval):\n+\tReplace throw_exception with throw.\n+\t* dwarf2-frame.c (dwarf2_frame_cache): Replace throw_exception\n+\twith throw.\n+\t* darwin-nat.c (darwin_attach_pid): Replace throw_exception with\n+\tthrow.\n+\t* cp-abi.c (baseclass_offset): Replace throw_exception with throw.\n+\t* completer.c (complete_line_internal): Replace throw_exception\n+\twith throw.\n+\t* compile/compile-object-run.c (compile_object_run): Replace\n+\tthrow_exception with throw.\n+\t* cli/cli-script.c (process_next_line): Replace throw_exception\n+\twith throw.\n+\t* btrace.c (btrace_compute_ftrace_pt, btrace_compute_ftrace)\n+\t(btrace_enable, btrace_maint_update_pt_packets): Replace\n+\tthrow_exception with throw.\n+\t* breakpoint.c (create_breakpoint, save_breakpoints): Replace\n+\tthrow_exception with throw.\n+\t* break-catch-throw.c (re_set_exception_catchpoint): Replace\n+\tthrow_exception with throw.\n+\t* amd64-tdep.c (amd64_frame_cache, amd64_sigtramp_frame_cache)\n+\t(amd64_epilogue_frame_cache): Replace throw_exception with throw.\n+\t* aarch64-tdep.c (aarch64_make_prologue_cache)\n+\t(aarch64_make_stub_cache): Replace throw_exception with throw.\n+\n 2019-04-08  Tom Tromey  <tom@tromey.com>\n \n \t* common/common-exceptions.c (throw_exception): Rename from"
    },
    {
      "sha": "7eecb52eb11d160ebbae319aad6e8949855f1cca",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -881,7 +881,7 @@ aarch64_make_prologue_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return cache;\n@@ -1015,7 +1015,7 @@ aarch64_make_stub_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return cache;"
    },
    {
      "sha": "f4a1af905065bb8f29cd0ed6c375ed8dc6a14a5d",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -2588,7 +2588,7 @@ amd64_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return cache;\n@@ -2715,7 +2715,7 @@ amd64_sigtramp_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   *this_cache = cache;\n@@ -2895,7 +2895,7 @@ amd64_epilogue_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return cache;"
    },
    {
      "sha": "a221cb315189a94f658ff546d1e699d3c99927ba",
      "filename": "gdb/break-catch-throw.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/break-catch-throw.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/break-catch-throw.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/break-catch-throw.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -214,7 +214,7 @@ re_set_exception_catchpoint (struct breakpoint *self)\n \t  /* NOT_FOUND_ERROR just means the breakpoint will be\n \t     pending, so let it through.  */\n \t  if (ex.error != NOT_FOUND_ERROR)\n-\t    throw_exception (ex);\n+\t    throw;\n \t}\n     }\n "
    },
    {
      "sha": "3047ef3827dcdf11930496f49ee0e99941117e4d",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -9253,7 +9253,7 @@ create_breakpoint (struct gdbarch *gdbarch,\n \t     error.  */\n \n \t  if (pending_break_support == AUTO_BOOLEAN_FALSE)\n-\t    throw_exception (e);\n+\t    throw;\n \n \t  exception_print (gdb_stderr, e);\n \n@@ -9271,7 +9271,7 @@ create_breakpoint (struct gdbarch *gdbarch,\n \t  pending = 1;\n \t}\n       else\n-\tthrow_exception (e);\n+\tthrow;\n     }\n \n   if (!pending && canonical.lsals.empty ())\n@@ -13635,7 +13635,7 @@ location_to_sals (struct breakpoint *b, struct event_location *location,\n \t     happens only when a binary has changed, I don't know\n \t     which approach is better.  */\n \t  b->enable_state = bp_disabled;\n-\t  throw_exception (e);\n+\t  throw;\n \t}\n     }\n \n@@ -15034,7 +15034,7 @@ save_breakpoints (const char *filename, int from_tty,\n \tcatch (const gdb_exception &ex)\n \t  {\n \t  current_uiout->redirect (NULL);\n-\t    throw_exception (ex);\n+\t    throw;\n \t  }\n \n \tcurrent_uiout->redirect (NULL);"
    },
    {
      "sha": "c6d564e7062037653ddabe17b468407b296484f9",
      "filename": "gdb/btrace.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/btrace.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1484,7 +1484,7 @@ btrace_compute_ftrace_pt (struct thread_info *tp,\n \n       btrace_finalize_ftrace_pt (decoder, tp, level);\n \n-      throw_exception (error);\n+      throw;\n     }\n \n   btrace_finalize_ftrace_pt (decoder, tp, level);\n@@ -1560,7 +1560,7 @@ btrace_compute_ftrace (struct thread_info *tp, struct btrace_data *btrace,\n     {\n       btrace_finalize_ftrace (tp, gaps);\n \n-      throw_exception (error);\n+      throw;\n     }\n \n   btrace_finalize_ftrace (tp, gaps);\n@@ -1631,7 +1631,7 @@ btrace_enable (struct thread_info *tp, const struct btrace_config *conf)\n     {\n       btrace_disable (tp);\n \n-      throw_exception (exception);\n+      throw;\n     }\n }\n \n@@ -3065,7 +3065,7 @@ btrace_maint_update_pt_packets (struct btrace_thread_info *btinfo)\n       pt_pkt_free_decoder (decoder);\n \n       if (except.reason < 0)\n-\tthrow_exception (except);\n+\tthrow;\n     }\n \n   pt_pkt_free_decoder (decoder);"
    },
    {
      "sha": "361ead472508a2dcbab30c24a979c6ec9091d29b",
      "filename": "gdb/cli/cli-script.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/cli/cli-script.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/cli/cli-script.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-script.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1057,7 +1057,7 @@ process_next_line (const char *p, struct command_line **command,\n       catch (const gdb_exception &ex)\n \t{\n \t  free_command_lines (command);\n-\t  throw_exception (ex);\n+\t  throw;\n \t}\n     }\n "
    },
    {
      "sha": "32e46f941044abd59006adc91571ad303e709d48",
      "filename": "gdb/compile/compile-object-run.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/compile/compile-object-run.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/compile/compile-object-run.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-run.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -183,7 +183,7 @@ compile_object_run (struct compile_module *module)\n       gdb_assert (!(dtor_found && executed));\n       if (!dtor_found && !executed)\n \tdo_module_cleanup (data, 0);\n-      throw_exception (ex);\n+      throw;\n     }\n \n   dtor_found = find_dummy_frame_dtor (do_module_cleanup, data);"
    },
    {
      "sha": "5d1decca1d1b0b9ad5fb5a2c6c2c86a36b63c797",
      "filename": "gdb/completer.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/completer.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/completer.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/completer.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1451,7 +1451,7 @@ complete_line_internal (completion_tracker &tracker,\n   catch (const gdb_exception_error &except)\n     {\n       if (except.error != MAX_COMPLETIONS_REACHED_ERROR)\n-\tthrow_exception (except);\n+\tthrow;\n     }\n }\n "
    },
    {
      "sha": "d95b1404dce6578860e1e8267fa1142ab809b601",
      "filename": "gdb/cp-abi.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/cp-abi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/cp-abi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-abi.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -82,7 +82,7 @@ baseclass_offset (struct type *type, int index, const gdb_byte *valaddr,\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n \n       throw_error (NOT_AVAILABLE_ERROR,\n \t\t   _(\"Cannot determine virtual baseclass offset \""
    },
    {
      "sha": "8282ef27e61168307556ccfa4370a92c9335ee5a",
      "filename": "gdb/darwin-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/darwin-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/darwin-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1693,7 +1693,7 @@ darwin_attach_pid (struct inferior *inf)\n       exit_inferior (inf);\n       inferior_ptid = null_ptid;\n \n-      throw_exception (ex);\n+      throw;\n     }\n \n   target_ops *darwin_ops = get_native_target ();"
    },
    {
      "sha": "b1db1ede038f96a6ba9de5b44bc789c9e82cf05a",
      "filename": "gdb/dwarf2-frame.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/dwarf2-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/dwarf2-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2-frame.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1076,7 +1076,7 @@ dwarf2_frame_cache (struct frame_info *this_frame, void **this_cache)\n \t  return cache;\n \t}\n \n-      throw_exception (ex);\n+      throw;\n     }\n \n   /* Initialize the register state.  */"
    },
    {
      "sha": "2b8aeee83ad82ad0bad29ea1b5358be3673df2af",
      "filename": "gdb/dwarf2loc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/dwarf2loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/dwarf2loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2loc.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1209,7 +1209,7 @@ call_site_find_chain (struct gdbarch *gdbarch, CORE_ADDR caller_pc,\n \t  return NULL;\n \t}\n       else\n-\tthrow_exception (e);\n+\tthrow;\n     }\n \n   return retval;\n@@ -2185,7 +2185,7 @@ dwarf2_evaluate_loc_desc_full (struct type *type, struct frame_info *frame,\n \t  return allocate_optimized_out_value (subobj_type);\n \t}\n       else\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   if (ctx.pieces.size () > 0)\n@@ -2397,7 +2397,7 @@ dwarf2_locexpr_baton_eval (const struct dwarf2_locexpr_baton *dlbaton,\n \t  return 0;\n \t}\n       else\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   switch (ctx.location)"
    },
    {
      "sha": "aed89e5f85a1a6806ec4b25df6f76d6d38e4336f",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -217,7 +217,7 @@ fetch_subexp_value (struct expression *exp, int *pc, struct value **valp,\n \t    break;\n \t  /* Fall through.  */\n \tdefault:\n-\t  throw_exception (ex);\n+\t  throw;\n \t  break;\n \t}\n     }\n@@ -722,7 +722,7 @@ evaluate_var_value (enum noside noside, const block *blk, symbol *var)\n   catch (const gdb_exception_error &except)\n     {\n       if (noside != EVAL_AVOID_SIDE_EFFECTS)\n-\tthrow_exception (except);\n+\tthrow;\n \n       ret = value_zero (SYMBOL_TYPE (var), not_lval);\n     }\n@@ -964,7 +964,7 @@ evaluate_funcall (type *expect_type, expression *exp, int *pos,\n \t\t  if (except.error == NOT_FOUND_ERROR)\n \t\t    break;\n \t\t  else\n-\t\t    throw_exception (except);\n+\t\t    throw;\n \t\t}\n \n \t\targ2 = value;\n@@ -2053,7 +2053,7 @@ evaluate_subexp_standard (struct type *expect_type,\n \t      if (except.error == NOT_FOUND_ERROR)\n \t\tbreak;\n \t      else\n-\t\tthrow_exception (except);\n+\t\tthrow;\n \t    }\n \n \t  arg1 = value;"
    },
    {
      "sha": "4b38f64c2f10576ffb1643ec5f790e3309aced3d",
      "filename": "gdb/frame-unwind.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/frame-unwind.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/frame-unwind.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame-unwind.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -120,7 +120,7 @@ frame_unwind_try_unwinder (struct frame_info *this_frame, void **this_cache,\n \t     should always accept the frame.  */\n \t  return 0;\n \t}\n-      throw_exception (ex);\n+      throw;\n     }\n \n   if (res)"
    },
    {
      "sha": "f4303d13cc16da715722fac33b5ba97edbc9fe86",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -922,7 +922,7 @@ frame_unwind_pc (struct frame_info *this_frame)\n \t\t\t\t    this_frame->level);\n \t    }\n \t  else\n-\t    throw_exception (ex);\n+\t    throw;\n \t}\n \n       if (pc_p)\n@@ -1918,7 +1918,7 @@ get_prev_frame_if_no_cycle (struct frame_info *this_frame)\n       prev_frame->next = NULL;\n       this_frame->prev = NULL;\n \n-      throw_exception (ex);\n+      throw;\n     }\n \n   return prev_frame;\n@@ -2116,7 +2116,7 @@ get_prev_frame_always (struct frame_info *this_frame)\n \t  prev_frame = NULL;\n \t}\n       else\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return prev_frame;\n@@ -2385,7 +2385,7 @@ get_frame_pc_if_available (struct frame_info *frame, CORE_ADDR *pc)\n       if (ex.error == NOT_AVAILABLE_ERROR)\n \treturn 0;\n       else\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return 1;\n@@ -2466,7 +2466,7 @@ get_frame_address_in_block_if_available (struct frame_info *this_frame,\n     {\n       if (ex.error == NOT_AVAILABLE_ERROR)\n \treturn 0;\n-      throw_exception (ex);\n+      throw;\n     }\n \n   return 1;\n@@ -2750,7 +2750,7 @@ get_frame_language (struct frame_info *frame)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   if (pc_p)"
    },
    {
      "sha": "e82e90156473b1cffcc3625b0326eb27a85227d8",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* linux-low.c (linux_detach_one_lwp): Replace throw_exception with\n+\tthrow.\n+\t(linux_resume_one_lwp): Likewise.\n+\n 2019-04-08  Tom Tromey  <tom@tromey.com>\n \n \t* gdbreplay.c: Update."
    },
    {
      "sha": "94af240a5c2ce92e7b35e1a9a3b84d9f02ca9806",
      "filename": "gdb/gdbserver/linux-low.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/gdbserver/linux-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/gdbserver/linux-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-low.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1543,7 +1543,7 @@ linux_detach_one_lwp (struct lwp_info *lwp)\n   catch (const gdb_exception_error &ex)\n     {\n       if (!check_ptrace_stopped_lwp_gone (lwp))\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   lwpid = lwpid_of (thread);\n@@ -4514,7 +4514,7 @@ linux_resume_one_lwp (struct lwp_info *lwp,\n   catch (const gdb_exception_error &ex)\n     {\n       if (!check_ptrace_stopped_lwp_gone (lwp))\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n }\n "
    },
    {
      "sha": "54d9dd873b80ed79c2d48b3e27acd4c7d8ea94a2",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -2089,7 +2089,7 @@ i386_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return cache;\n@@ -2268,7 +2268,7 @@ i386_epilogue_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return cache;\n@@ -2463,7 +2463,7 @@ i386_sigtramp_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   *this_cache = cache;"
    },
    {
      "sha": "f0d8def14157c5c0e6da3aae8fb6c11cdb443b18",
      "filename": "gdb/inf-loop.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/inf-loop.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/inf-loop.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-loop.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -79,7 +79,7 @@ inferior_event_handler (enum inferior_event_type event_type,\n \t\t the prompt and is typing some unrelated command, so\n \t\t just inform the user and swallow the exception.  */\n \t      if (current_ui->prompt_state == PROMPT_BLOCKED)\n-\t\tthrow_exception (e);\n+\t\tthrow;\n \t      else\n \t\texception_print (gdb_stderr, e);\n \t    }"
    },
    {
      "sha": "3b26fd4a4671dcee99039a1764e4b60d67c003d0",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -454,7 +454,7 @@ post_create_inferior (struct target_ops *target, int from_tty)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   if (exec_bfd)"
    },
    {
      "sha": "37713b24feeb9d3d48158a5184a294cb4d8d9fea",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1786,7 +1786,7 @@ displaced_step_prepare (thread_info *thread)\n \n       if (ex.error != MEMORY_ERROR\n \t  && ex.error != NOT_SUPPORTED_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n \n       if (debug_infrun)\n \t{\n@@ -2624,7 +2624,7 @@ resume (gdb_signal sig)\n \t we're running in non-stop mode.  */\n       if (inferior_ptid != null_ptid)\n \tdelete_single_step_breakpoints (inferior_thread ());\n-      throw_exception (ex);\n+      throw;\n     }\n }\n "
    },
    {
      "sha": "c42ddba731510dfab7a128515323ae02ec099a4b",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -3152,7 +3152,7 @@ event_location_to_sals (linespec_parser *parser,\n \t  }\n \tcatch (const gdb_exception_error &except)\n \t  {\n-\t    throw_exception (except);\n+\t    throw;\n \t  }\n       }\n       break;\n@@ -3966,7 +3966,7 @@ find_linespec_symbols (struct linespec_state *state,\n \t  catch (const gdb_exception_error &except)\n \t    {\n \t      if (except.error != NOT_FOUND_ERROR)\n-\t\tthrow_exception (except);\n+\t\tthrow;\n \t    }\n \t}\n     }"
    },
    {
      "sha": "65165a2d46bdb1f99657aeb70383a5969fb1347f",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1408,7 +1408,7 @@ detach_one_lwp (struct lwp_info *lp, int *signo_p)\n   catch (const gdb_exception_error &ex)\n     {\n       if (!check_ptrace_stopped_lwp_gone (lp))\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   if (ptrace (PTRACE_DETACH, lwpid, 0, signo) < 0)\n@@ -1590,7 +1590,7 @@ linux_resume_one_lwp (struct lwp_info *lp, int step, enum gdb_signal signo)\n   catch (const gdb_exception_error &ex)\n     {\n       if (!check_ptrace_stopped_lwp_gone (lp))\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n }\n \n@@ -3552,7 +3552,7 @@ resume_stopped_resumed_lwps (struct lwp_info *lp, const ptid_t wait_ptid)\n       catch (const gdb_exception_error &ex)\n \t{\n \t  if (!check_ptrace_stopped_lwp_gone (lp))\n-\t    throw_exception (ex);\n+\t    throw;\n \t}\n     }\n "
    },
    {
      "sha": "3e02057bf7b0dd044916d6a05b74b10dff709d53",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1147,7 +1147,7 @@ parse_exp_in_context (const char **stringptr, CORE_ADDR pc,\n \t expression elements have been written, then there's nothing\n \t to do, so fail.  */\n       if (! ps.parse_completion || ps.expout_ptr == 0)\n-\tthrow_exception (except);\n+\tthrow;\n     }\n \n   /* We have to operate on an \"expression *\", due to la_post_parser,"
    },
    {
      "sha": "21085d5c62c7ef7eeea0b420deb3a0f137f2ea94",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1485,7 +1485,7 @@ record_btrace_target::insert_breakpoint (struct gdbarch *gdbarch,\n   catch (const gdb_exception &except)\n     {\n       replay_memory_access = old;\n-      throw_exception (except);\n+      throw;\n     }\n   replay_memory_access = old;\n \n@@ -1515,7 +1515,7 @@ record_btrace_target::remove_breakpoint (struct gdbarch *gdbarch,\n   catch (const gdb_exception &except)\n     {\n       replay_memory_access = old;\n-      throw_exception (except);\n+      throw;\n     }\n   replay_memory_access = old;\n \n@@ -1994,7 +1994,7 @@ get_thread_current_frame_id (struct thread_info *tp)\n       /* Restore the previous execution state.  */\n       set_executing (inferior_ptid, executing);\n \n-      throw_exception (except);\n+      throw;\n     }\n \n   /* Restore the previous execution state.  */\n@@ -2075,7 +2075,7 @@ record_btrace_start_replaying (struct thread_info *tp)\n \n       registers_changed_thread (tp);\n \n-      throw_exception (except);\n+      throw;\n     }\n \n   return replay;\n@@ -2896,7 +2896,7 @@ cmd_record_btrace_bts_start (const char *args, int from_tty)\n   catch (const gdb_exception &exception)\n     {\n       record_btrace_conf.format = BTRACE_FORMAT_NONE;\n-      throw_exception (exception);\n+      throw;\n     }\n }\n \n@@ -2917,7 +2917,7 @@ cmd_record_btrace_pt_start (const char *args, int from_tty)\n   catch (const gdb_exception &exception)\n     {\n       record_btrace_conf.format = BTRACE_FORMAT_NONE;\n-      throw_exception (exception);\n+      throw;\n     }\n }\n \n@@ -2946,7 +2946,7 @@ cmd_record_btrace_start (const char *args, int from_tty)\n       catch (const gdb_exception &ex)\n \t{\n \t  record_btrace_conf.format = BTRACE_FORMAT_NONE;\n-\t  throw_exception (ex);\n+\t  throw;\n \t}\n     }\n }"
    },
    {
      "sha": "95a0353d754ee0c5b58e8f5727dffd46a598b70d",
      "filename": "gdb/record-full.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/record-full.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/record-full.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-full.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -764,7 +764,7 @@ record_full_message (struct regcache *regcache, enum gdb_signal signal)\n   catch (const gdb_exception &ex)\n     {\n       record_full_list_release (record_full_arch_list_tail);\n-      throw_exception (ex);\n+      throw;\n     }\n \n   record_full_list->next = record_full_arch_list_head;\n@@ -1444,7 +1444,7 @@ record_full_wait_1 (struct target_ops *ops,\n \t  else\n \t    record_full_list = record_full_list->prev;\n \n-\t  throw_exception (ex);\n+\t  throw;\n \t}\n     }\n \n@@ -2476,7 +2476,7 @@ record_full_restore (void)\n   catch (const gdb_exception &ex)\n     {\n       record_full_list_release (record_full_arch_list_tail);\n-      throw_exception (ex);\n+      throw;\n     }\n \n   /* Add record_full_arch_list_head to the end of record list.  */"
    },
    {
      "sha": "767c69444b84ae00b3ceddd59ff1b31bfa3426c1",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -5611,7 +5611,7 @@ remote_target::open_1 (const char *name, int from_tty, int extended_p)\n \t   already before throwing the exception.  */\n \tif (ex.error != TARGET_CLOSE_ERROR)\n \t  remote_unpush_target ();\n-\tthrow_exception (ex);\n+\tthrow;\n       }\n   }\n \n@@ -9784,7 +9784,7 @@ remote_target::remote_kill_k ()\n       /* Otherwise, something went wrong.  We didn't actually kill\n \t the target.  Just propagate the exception, and let the\n \t user or higher layers decide what to do.  */\n-      throw_exception (ex);\n+      throw;\n     }\n }\n \n@@ -13143,7 +13143,7 @@ remote_target::get_trace_status (struct trace_status *ts)\n \t  exception_fprintf (gdb_stderr, ex, \"qTStatus: \");\n \t  return -1;\n \t}\n-      throw_exception (ex);\n+      throw;\n     }\n \n   result = packet_ok (p, &remote_protocol_packets[PACKET_qTStatus]);"
    },
    {
      "sha": "375b960f0bab2288e65092e9240bbe7cf90dd02c",
      "filename": "gdb/rs6000-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/rs6000-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/rs6000-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rs6000-tdep.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -3471,7 +3471,7 @@ rs6000_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n       return (struct rs6000_frame_cache *) (*this_cache);\n     }\n \n@@ -3700,7 +3700,7 @@ rs6000_epilogue_frame_cache (struct frame_info *this_frame, void **this_cache)\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return cache;"
    },
    {
      "sha": "4b931017a8dd933a537a7bd60720f1f400c5aa9e",
      "filename": "gdb/s390-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/s390-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/s390-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-tdep.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -2557,7 +2557,7 @@ s390_frame_unwind_cache (struct frame_info *this_frame,\n   catch (const gdb_exception_error &ex)\n     {\n       if (ex.error != NOT_AVAILABLE_ERROR)\n-\tthrow_exception (ex);\n+\tthrow;\n     }\n \n   return info;"
    },
    {
      "sha": "c5dc8639f1e286afab8edc0fbe93f39e3e36f998",
      "filename": "gdb/solib-spu.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/solib-spu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/solib-spu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-spu.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -141,7 +141,7 @@ append_ocl_sos (struct so_list **link_ptr)\n \t\tcase MEMORY_ERROR:\n \t\t  break;\n \t\tdefault:\n-\t\t  throw_exception (ex);\n+\t\t  throw;\n \t\t  break;\n \t\t}\n \t    }"
    },
    {
      "sha": "f7fd9433b5600cc2acb7b955b61193ce37d8ff08",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -2715,7 +2715,7 @@ frame_apply_command_count (const char *which_command,\n \t      if (flags.cont)\n \t\tprintf_filtered (\"%s\\n\", ex.what ());\n \t      else\n-\t\tthrow_exception (ex);\n+\t\tthrow;\n \t    }\n \t}\n     }"
    },
    {
      "sha": "3ab5671c463cdb62dc24dbcf1c6d8b3340d785ea",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -767,7 +767,7 @@ target_translate_tls_address (struct objfile *objfile, CORE_ADDR offset)\n \t\t       objfile_name (objfile), ex.what ());\n \t      break;\n \t    default:\n-\t      throw_exception (ex);\n+\t      throw;\n \t      break;\n \t    }\n \t}"
    },
    {
      "sha": "5b23b8c1f2a7db16298a793d6a71c3d4ade99301",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -1482,7 +1482,7 @@ thr_try_catch_cmd (thread_info *thr, const char *cmd, int from_tty,\n \t  if (flags.cont)\n \t    printf_filtered (\"%s\\n\", ex.what ());\n \t  else\n-\t    throw_exception (ex);\n+\t    throw;\n \t}\n     }\n }"
    },
    {
      "sha": "593556a8ba8935da475909fb6d82b57f2c15015d",
      "filename": "gdb/tracefile-tfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/tracefile-tfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/tracefile-tfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracefile-tfile.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -551,7 +551,7 @@ tfile_target_open (const char *arg, int from_tty)\n     {\n       /* Remove the partially set up target.  */\n       unpush_target (&tfile_ops);\n-      throw_exception (ex);\n+      throw;\n     }\n \n   inferior_appeared (current_inferior (), TFILE_PID);"
    },
    {
      "sha": "fd92a4d165575086d9f00e4c5fa8787c427c3691",
      "filename": "gdb/valops.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/valops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eedc3f4f0a02c9774277bd1a34aab6ebdc32f797/gdb/valops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valops.c?ref=eedc3f4f0a02c9774277bd1a34aab6ebdc32f797",
      "patch": "@@ -3634,7 +3634,7 @@ value_rtti_indirect_type (struct value *v, int *full,\n \t         type.  */\n \t      return NULL;\n \t    }\n-\t  throw_exception (except);\n+\t  throw;\n \t}\n     }\n   else"
    }
  ]
}