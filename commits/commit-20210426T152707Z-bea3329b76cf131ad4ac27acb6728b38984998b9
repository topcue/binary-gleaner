{
  "sha": "bea3329b76cf131ad4ac27acb6728b38984998b9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmVhMzMyOWI3NmNmMTMxYWQ0YWMyN2FjYjY3MjhiMzg5ODQ5OThiOQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-26T15:27:07Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-26T15:27:07Z"
    },
    "message": "gdb: check result of gdb_fopen_cloexec in dump_binary_file\n\nBug 27773 shows that passing a filename in a non-existent directory to\nthe \"dump binary\" command leads to a gdb crash.  This is because the\ngdb_fopen_cloexec in dump_binary_file fails (returns nullptr) and the\nreturn value is not checked.  Fix that by erroring out if\ngdb_fopen_cloexec fails.\n\ngdb/ChangeLog:\n\n\tPR gdb/27773\n\t* cli/cli-dump.c (dump_binary_file): Check result of\n\tgdb_fopen_cloexec.\n\ngdb/testsuite/ChangeLog:\n\n\tPR gdb/27773\n\t* gdb.base/dump.exp: Test dump to non-existent dir.\n\nChange-Id: Iea89a3bf9e6b9dcc31142faa5ae17bc855759328",
    "tree": {
      "sha": "5c8d8482d6ec1da893061e2e263a55a2fff28a71",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5c8d8482d6ec1da893061e2e263a55a2fff28a71"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bea3329b76cf131ad4ac27acb6728b38984998b9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bea3329b76cf131ad4ac27acb6728b38984998b9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bea3329b76cf131ad4ac27acb6728b38984998b9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bea3329b76cf131ad4ac27acb6728b38984998b9/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "21f91785752b59d03117f7803b7e1c9a58e62dbe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21f91785752b59d03117f7803b7e1c9a58e62dbe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/21f91785752b59d03117f7803b7e1c9a58e62dbe"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 24,
    "deletions": 0
  },
  "files": [
    {
      "sha": "a180c32058d70d6e258d6c53e35f618eaeed94e3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bea3329b76cf131ad4ac27acb6728b38984998b9",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-26  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\tPR gdb/27773\n+\t* cli/cli-dump.c (dump_binary_file): Check result of\n+\tgdb_fopen_cloexec.\n+\n 2021-04-25  Sergei Trofimovich  <siarheit@google.com>\n \n \t* sparc-linux-nat.c (sparc_linux_nat_target): fix sparc build"
    },
    {
      "sha": "1df26626f9d2b1e52af8e7fa72232d5fbce8dd4b",
      "filename": "gdb/cli/cli-dump.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/cli/cli-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/cli/cli-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-dump.c?ref=bea3329b76cf131ad4ac27acb6728b38984998b9",
      "patch": "@@ -135,6 +135,9 @@ dump_binary_file (const char *filename, const char *mode,\n   int status;\n \n   gdb_file_up file = gdb_fopen_cloexec (filename, mode);\n+  if (file == nullptr)\n+    perror_with_name (filename);\n+\n   status = fwrite (buf, len, 1, file.get ());\n   if (status != 1)\n     perror_with_name (filename);"
    },
    {
      "sha": "8c4e34728b4199a09c710c06dd1eba16763bfcb9",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=bea3329b76cf131ad4ac27acb6728b38984998b9",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-26  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\tPR gdb/27773\n+\t* gdb.base/dump.exp: Test dump to non-existent dir.\n+\n 2021-04-26  Luis Machado  <luis.machado@linaro.org>\n \n \t* gdb.arch/aarch64-dbreg-contents.c (set_watchpoint): Fix arch level"
    },
    {
      "sha": "52c698333d205508ad69cea09cd76fbbf2c097c0",
      "filename": "gdb/testsuite/gdb.base/dump.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/testsuite/gdb.base/dump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bea3329b76cf131ad4ac27acb6728b38984998b9/gdb/testsuite/gdb.base/dump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/dump.exp?ref=bea3329b76cf131ad4ac27acb6728b38984998b9",
      "patch": "@@ -24,6 +24,8 @@ set options  {debug}\n set is64bitonly \"no\"\n set endian \"auto\"\n \n+set formats {binary ihex srec tekhex  verilog}\n+\n if [istarget \"alpha*-*-*\"] then {\n     # SREC etc cannot handle 64-bit addresses.  Force the test\n     # program into the low 31 bits of the address space.\n@@ -467,6 +469,14 @@ if ![string compare $is64bitonly \"no\"] then {\n }\n \n \n+# Test writing a file of each format to a directory that does not exist.\n+\n+foreach_with_prefix format $formats {\n+    gdb_test \"dump $format memory /tmp/non/existent/directory/file $array_start $array_end\" \\\n+\t\"/tmp/non/existent/directory/file: No such file or directory.\" \\\n+\t\"dump to non-existent directory\"\n+}\n+\n # Now start a fresh gdb session, and reload the saved value files.\n \n gdb_exit"
    }
  ]
}