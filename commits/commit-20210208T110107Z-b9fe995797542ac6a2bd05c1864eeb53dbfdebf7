{
  "sha": "b9fe995797542ac6a2bd05c1864eeb53dbfdebf7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjlmZTk5NTc5NzU0MmFjNmEyYmQwNWMxODY0ZWViNTNkYmZkZWJmNw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-01T11:12:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-08T11:01:07Z"
    },
    "message": "sim/rx: provide a format string for printf\n\nCalling printf with the format being a non constant string results in\na GCC warning:\n\n  warning: format not a string literal and no format arguments [-Wformat-nonliteral]\n\nProvide a constant format string to printf in the few places this\nwarning is triggered.\n\nsim/rx/ChangeLog:\n\n\t* reg.c (fpsw2str): Provide a format string to printf.\n\t(trace_register_changes): Likewise.",
    "tree": {
      "sha": "c7557b6bb2ab942a9f1c3b49b06412b8426c37c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c7557b6bb2ab942a9f1c3b49b06412b8426c37c8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4b426396368fd250a502a9c547da7143af4afbe0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b426396368fd250a502a9c547da7143af4afbe0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4b426396368fd250a502a9c547da7143af4afbe0"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 9,
    "deletions": 4
  },
  "files": [
    {
      "sha": "320d164e9dfabba376948fc6951d1653fcae8822",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=b9fe995797542ac6a2bd05c1864eeb53dbfdebf7",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* reg.c (fpsw2str): Provide a format string to printf.\n+\t(trace_register_changes): Likewise.\n+\n 2021-02-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* err.c (execution_error_exit_all): Delete."
    },
    {
      "sha": "ce9be12649918d29f65feee8f26c5f3f4bebee9b",
      "filename": "sim/rx/reg.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7/sim/rx/reg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9fe995797542ac6a2bd05c1864eeb53dbfdebf7/sim/rx/reg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/reg.c?ref=b9fe995797542ac6a2bd05c1864eeb53dbfdebf7",
      "patch": "@@ -509,7 +509,7 @@ fpsw2str(int rpsw)\n #define TRC(f,n) \\\n   if (oldregs.f != regs.f) \\\n     { \\\n-      if (tag) { printf (tag); tag = 0; } \\\n+      if (tag) { printf (\"%s\", tag); tag = 0; }  \\\n       printf(\"  %s %08x:%08x\", n, \\\n \t     (unsigned int)oldregs.f, \\\n \t     (unsigned int)regs.f); \\\n@@ -531,23 +531,23 @@ trace_register_changes (void)\n   TRC (r_isp, \"isp\");\n   if (oldregs.r_psw != regs.r_psw)\n     {\n-      if (tag) { printf (tag); tag = 0; }\n+      if (tag) { printf (\"%s\", tag); tag = 0; }\n       printf(\"  psw %s:\", psw2str(oldregs.r_psw));\n       printf(\"%s\", psw2str(regs.r_psw));\n       oldregs.r_psw = regs.r_psw;\n     }\n \n   if (oldregs.r_fpsw != regs.r_fpsw)\n     {\n-      if (tag) { printf (tag); tag = 0; }\n+      if (tag) { printf (\"%s\", tag); tag = 0; }\n       printf(\"  fpsw %s:\", fpsw2str(oldregs.r_fpsw));\n       printf(\"%s\", fpsw2str(regs.r_fpsw));\n       oldregs.r_fpsw = regs.r_fpsw;\n     }\n \n   if (oldregs.r_acc != regs.r_acc)\n     {\n-      if (tag) { printf (tag); tag = 0; }\n+      if (tag) { printf (\"%s\", tag); tag = 0; }\n       printf(\"  acc %016llx:\", oldregs.r_acc);\n       printf(\"%016llx\", regs.r_acc);\n       oldregs.r_acc = regs.r_acc;"
    }
  ]
}