{
  "sha": "4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGIzZWNiM2I5MWIxYjYxNTRhNjQ0NGVmZGNiYWRiOTA4NTRhNjY1NA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-16T09:04:00Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-16T09:05:12Z"
    },
    "message": "PR25675: SIGSEGV in bfd_octets_per_byte\n\n\tPR 25675\n\t* elf.c (elf_sort_segments): Don't call bfd_octets_per_byte unless\n\twe have a non-zero section count.  Do lma comparison in octets.",
    "tree": {
      "sha": "9949842cb26ed8573ddb283fa8eff87be76058fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9949842cb26ed8573ddb283fa8eff87be76058fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b3ecb3b91b1b6154a6444efdcbadb90854a6654/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "28d1356774c2c61adc7d6e6723de2351cd9f4ddc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/28d1356774c2c61adc7d6e6723de2351cd9f4ddc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/28d1356774c2c61adc7d6e6723de2351cd9f4ddc"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 19,
    "deletions": 7
  },
  "files": [
    {
      "sha": "76e2ba0fb88cd3c518cf58502aeb72251d9cbf98",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b3ecb3b91b1b6154a6444efdcbadb90854a6654/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b3ecb3b91b1b6154a6444efdcbadb90854a6654/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25675\n+\t* elf.c (elf_sort_segments): Don't call bfd_octets_per_byte unless\n+\twe have a non-zero section count.  Do lma comparison in octets.\n+\n 2020-03-16  Alan Modra  <amodra@gmail.com>\n \n \t* vms-alpha.c (dst_restore_location): Validate index into"
    },
    {
      "sha": "8ab7b3e2e816f5479b51da6a9789d800edeb8631",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 13,
      "deletions": 7,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4b3ecb3b91b1b6154a6444efdcbadb90854a6654/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4b3ecb3b91b1b6154a6444efdcbadb90854a6654/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
      "patch": "@@ -5312,19 +5312,25 @@ elf_sort_segments (const void *arg1, const void *arg2)\n     return m1->no_sort_lma ? -1 : 1;\n   if (m1->p_type == PT_LOAD && !m1->no_sort_lma)\n     {\n-      unsigned int opb = bfd_octets_per_byte (m1->sections[0]->owner,\n-\t\t\t\t\t      m1->sections[0]);\n-      bfd_vma lma1, lma2;  /* Bytes.  */\n+      bfd_vma lma1, lma2;  /* Octets.  */\n       lma1 = 0;\n       if (m1->p_paddr_valid)\n-\tlma1 = m1->p_paddr / opb;\n+\tlma1 = m1->p_paddr;\n       else if (m1->count != 0)\n-\tlma1 = m1->sections[0]->lma + m1->p_vaddr_offset;\n+\t{\n+\t  unsigned int opb = bfd_octets_per_byte (m1->sections[0]->owner,\n+\t\t\t\t\t\t  m1->sections[0]);\n+\t  lma1 = (m1->sections[0]->lma + m1->p_vaddr_offset) * opb;\n+\t}\n       lma2 = 0;\n       if (m2->p_paddr_valid)\n-\tlma2 = m2->p_paddr / opb;\n+\tlma2 = m2->p_paddr;\n       else if (m2->count != 0)\n-\tlma2 = m2->sections[0]->lma + m2->p_vaddr_offset;\n+\t{\n+\t  unsigned int opb = bfd_octets_per_byte (m2->sections[0]->owner,\n+\t\t\t\t\t\t  m2->sections[0]);\n+\t  lma2 = (m2->sections[0]->lma + m2->p_vaddr_offset) * opb;\n+\t}\n       if (lma1 != lma2)\n \treturn lma1 < lma2 ? -1 : 1;\n     }"
    }
  ]
}