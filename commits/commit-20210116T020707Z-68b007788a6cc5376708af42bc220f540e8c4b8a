{
  "sha": "68b007788a6cc5376708af42bc220f540e8c4b8a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjhiMDA3Nzg4YTZjYzUzNzY3MDhhZjQyYmMyMjBmNTQwZThjNGI4YQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-01-16T02:06:48Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-01-16T02:07:07Z"
    },
    "message": "ld/x86: Add -z report-relative-reloc\n\nLinker generated relative relocations don't have symbol info:\n\n[hjl@gnu-cfl-2 tmpdir]$ readelf -rW dump\n\nRelocation section '.rela.dyn' at offset 0x180 contains 2 entries:\n Offset     Info    Type                Sym. Value  Symbol's Name + Addend\n00002f70  00000008 R_X86_64_RELATIVE                 1000\n00002f68  00000025 R_X86_64_IRELATIVE                1007\n[hjl@gnu-cfl-2 tmpdir]$\n\nAdd -z report-relative-reloc to x86 ELF linker to report dynamic relative\nrelocations:\n\n[hjl@gnu-cfl-2 tmpdir]$ ../ld-new -pie -melf32_x86_64 -z report-relative-reloc -o dump report-reloc-1.o\ndump: R_X86_64_IRELATIVE (offset: 0x00002f68, info: 0x00000025, addend: 0x00001007) against 'ifunc' for section '.data.rel.ro.local' in report-reloc-1.o\ndump: R_X86_64_RELATIVE (offset: 0x00002f70, info: 0x00000008, addend: 0x00001000) against '_start' for section '.data.rel.ro.local' in report-reloc-1.o\n[hjl@gnu-cfl-2 tmpdir]$\n\nIt can be used to map relative relocations to corresponding symbols.\n\nbfd/\n\n\t* elf-linker-x86.h (elf_linker_x86_params): Add\n\treport_relative_reloc.\n\t* elf32-i386.c (elf_i386_relocate_section): Call\n\t_bfd_x86_elf_link_report_relative_reloc to report relative\n\trelocations for -z report-relative-reloc.\n\t(elf_i386_finish_dynamic_symbol): Likewse.\n\t* elf64-x86-64.c (elf_x86_64_relocate_section): Likewse.\n\t(elf_x86_64_finish_dynamic_symbol): Likewse.\n\t* elfxx-x86.c (_bfd_x86_elf_link_report_relative_reloc): New\n\tfunction.\n\t* elfxx-x86.h (_bfd_x86_elf_link_report_relative_reloc): New\n\tprototype.\n\nld/\n\n\t* NEWS: Mention -z report-relative-reloc.\n\t* ld.texi: Document -z report-relative-reloc.\n\t* emulparams/elf32_x86_64.sh: Source x86-report-relative.sh.\n\t* emulparams/elf_i386.sh: Likewse.\n\t* emulparams/elf_x86_64.sh: Likewse.\n\t* emulparams/x86-report-relative.sh: New file.\n\t* testsuite/ld-i386/report-reloc-1.d: Likewse.\n\t* testsuite/ld-i386/report-reloc-1.l: Likewse.\n\t* testsuite/ld-i386/report-reloc-1.s: Likewse.\n\t* testsuite/ld-x86-64/report-reloc-1-x32.d: Likewse.\n\t* testsuite/ld-x86-64/report-reloc-1.d: Likewse.\n\t* testsuite/ld-x86-64/report-reloc-1.l: Likewse.\n\t* testsuite/ld-x86-64/report-reloc-1.s: Likewse.\n\t* testsuite/ld-i386/i386.exp: Run report-reloc-1.\n\t* testsuite/ld-x86-64/x86-64.exp: Run report-reloc-1 and\n\treport-reloc-1-x32.",
    "tree": {
      "sha": "ea89e2a6a9e242932f93752ba6df8c19a15caf79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ea89e2a6a9e242932f93752ba6df8c19a15caf79"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68b007788a6cc5376708af42bc220f540e8c4b8a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68b007788a6cc5376708af42bc220f540e8c4b8a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68b007788a6cc5376708af42bc220f540e8c4b8a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68b007788a6cc5376708af42bc220f540e8c4b8a/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ad92f33d386e050304bf5986f28071ede9dd2284",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad92f33d386e050304bf5986f28071ede9dd2284",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ad92f33d386e050304bf5986f28071ede9dd2284"
    }
  ],
  "stats": {
    "total": 239,
    "additions": 239,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ac18a850674ed345789877214e7181115b6f40d3",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -1,3 +1,18 @@\n+2021-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf-linker-x86.h (elf_linker_x86_params): Add\n+\treport_relative_reloc.\n+\t* elf32-i386.c (elf_i386_relocate_section): Call\n+\t_bfd_x86_elf_link_report_relative_reloc to report relative\n+\trelocations for -z report-relative-reloc.\n+\t(elf_i386_finish_dynamic_symbol): Likewse.\n+\t* elf64-x86-64.c (elf_x86_64_relocate_section): Likewse.\n+\t(elf_x86_64_finish_dynamic_symbol): Likewse.\n+\t* elfxx-x86.c (_bfd_x86_elf_link_report_relative_reloc): New\n+\tfunction.\n+\t* elfxx-x86.h (_bfd_x86_elf_link_report_relative_reloc): New\n+\tprototype.\n+\n 2021-01-16  Alan Modra  <amodra@gmail.com>\n \n \t* compress.c (decompress_contents): Tidy inflateEnd result test."
    },
    {
      "sha": "acce1bbbdc0337bfe7345459b5c63b4be474554f",
      "filename": "bfd/elf-linker-x86.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elf-linker-x86.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elf-linker-x86.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-linker-x86.h?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -61,6 +61,9 @@ struct elf_linker_x86_params\n   /* TRUE if --dynamic-linker is passed at command-line.  */\n   unsigned int has_dynamic_linker : 1;\n \n+  /* Report relative relocations.  */\n+  unsigned int report_relative_reloc : 1;\n+\n   /* X86-64 ISA level needed.  */\n   unsigned int isa_level;\n "
    },
    {
      "sha": "04ea7d088b6f2340939f5f8296ff52a9e85654af",
      "filename": "bfd/elf32-i386.c",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elf32-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elf32-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-i386.c?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -2409,6 +2409,12 @@ elf_i386_relocate_section (bfd *output_bfd,\n \n \t\t      /* This symbol is resolved locally.  */\n \t\t      outrel.r_info = ELF32_R_INFO (0, R_386_IRELATIVE);\n+\n+\t\t      if (htab->params->report_relative_reloc)\n+\t\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t\t  (info, input_section, h, sym,\n+\t\t\t   \"R_386_IRELATIVE\", &outrel);\n+\n \t\t      bfd_put_32 (output_bfd,\n \t\t\t\t  (h->root.u.def.value\n \t\t\t\t   + h->root.u.def.section->output_section->vma\n@@ -2532,6 +2538,12 @@ elf_i386_relocate_section (bfd *output_bfd,\n \t\t\t\t + htab->elf.sgot->output_offset\n \t\t\t\t + off);\n \t      outrel.r_info = ELF32_R_INFO (0, R_386_RELATIVE);\n+\n+\t      if (htab->params->report_relative_reloc)\n+\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t  (info, input_section, h, sym, \"R_386_RELATIVE\",\n+\t\t   &outrel);\n+\n \t      elf_append_rel (output_bfd, s, &outrel);\n \t    }\n \n@@ -2738,6 +2750,11 @@ elf_i386_relocate_section (bfd *output_bfd,\n \t\t  /* This symbol is local, or marked to become local.  */\n \t\t  relocate = TRUE;\n \t\t  outrel.r_info = ELF32_R_INFO (0, R_386_RELATIVE);\n+\n+\t\t  if (htab->params->report_relative_reloc)\n+\t\t    _bfd_x86_elf_link_report_relative_reloc\n+\t\t      (info, input_section, h, sym, \"R_386_RELATIVE\",\n+\t\t       &outrel);\n \t\t}\n \n \t      sreloc = elf_section_data (input_section)->sreloc;\n@@ -2769,6 +2786,12 @@ elf_i386_relocate_section (bfd *output_bfd,\n \t\t\t\t+ input_section->output_section->vma\n \t\t\t\t+ input_section->output_offset;\n \t      outrel.r_info = ELF32_R_INFO (0, R_386_RELATIVE);\n+\n+\t      if (htab->params->report_relative_reloc)\n+\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t  (info, input_section, h, sym, \"R_386_RELATIVE\",\n+\t\t   &outrel);\n+\n \t      sreloc = elf_section_data (input_section)->sreloc;\n \t      if (sreloc == NULL)\n \t\tabort ();\n@@ -3664,6 +3687,11 @@ elf_i386_finish_dynamic_symbol (bfd *output_bfd,\n \t\t\t   + h->root.u.def.section->output_offset),\n \t\t\t  gotplt->contents + got_offset);\n \t      rel.r_info = ELF32_R_INFO (0, R_386_IRELATIVE);\n+\n+\t      if (htab->params->report_relative_reloc)\n+\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t  (info, relplt, h, sym, \"R_386_IRELATIVE\", &rel);\n+\n \t      /* R_386_IRELATIVE comes last.  */\n \t      plt_index = htab->next_irelative_index--;\n \t    }\n@@ -3762,6 +3790,7 @@ elf_i386_finish_dynamic_symbol (bfd *output_bfd,\n     {\n       Elf_Internal_Rela rel;\n       asection *relgot = htab->elf.srelgot;\n+      const char *relative_reloc_name = NULL;\n \n       /* This symbol has an entry in the global offset table.  Set it\n \t up.  */\n@@ -3802,6 +3831,7 @@ elf_i386_finish_dynamic_symbol (bfd *output_bfd,\n \t\t\t       + h->root.u.def.section->output_offset),\n \t\t\t      htab->elf.sgot->contents + h->got.offset);\n \t\t  rel.r_info = ELF32_R_INFO (0, R_386_IRELATIVE);\n+\t\t  relative_reloc_name = \"R_386_IRELATIVE\";\n \t\t}\n \t      else\n \t\tgoto do_glob_dat;\n@@ -3844,6 +3874,7 @@ elf_i386_finish_dynamic_symbol (bfd *output_bfd,\n \t{\n \t  BFD_ASSERT((h->got.offset & 1) != 0);\n \t  rel.r_info = ELF32_R_INFO (0, R_386_RELATIVE);\n+\t  relative_reloc_name = \"R_386_RELATIVE\";\n \t}\n       else\n \t{\n@@ -3854,6 +3885,11 @@ elf_i386_finish_dynamic_symbol (bfd *output_bfd,\n \t  rel.r_info = ELF32_R_INFO (h->dynindx, R_386_GLOB_DAT);\n \t}\n \n+      if (relative_reloc_name != NULL\n+\t  && htab->params->report_relative_reloc)\n+\t_bfd_x86_elf_link_report_relative_reloc\n+\t  (info, relgot, h, sym, relative_reloc_name, &rel);\n+\n       elf_append_rel (output_bfd, relgot, &rel);\n     }\n "
    },
    {
      "sha": "500f8bfa3094ac182a85940da3ab29b364692ad9",
      "filename": "bfd/elf64-x86-64.c",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elf64-x86-64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elf64-x86-64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-x86-64.c?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -2784,6 +2784,11 @@ elf_x86_64_relocate_section (bfd *output_bfd,\n \t\t      outrel.r_addend = (h->root.u.def.value\n \t\t\t\t\t + h->root.u.def.section->output_section->vma\n \t\t\t\t\t + h->root.u.def.section->output_offset);\n+\n+\t\t      if (htab->params->report_relative_reloc)\n+\t\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t\t  (info, input_section, h, sym,\n+\t\t\t   \"R_X86_64_IRELATIVE\", &outrel);\n \t\t    }\n \t\t  else\n \t\t    {\n@@ -2940,6 +2945,12 @@ elf_x86_64_relocate_section (bfd *output_bfd,\n \t\t\t\t + off);\n \t      outrel.r_info = htab->r_info (0, R_X86_64_RELATIVE);\n \t      outrel.r_addend = relocation;\n+\n+\t      if (htab->params->report_relative_reloc)\n+\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t  (info, input_section, h, sym, \"R_X86_64_RELATIVE\",\n+\t\t   &outrel);\n+\n \t      elf_append_rela (output_bfd, s, &outrel);\n \t    }\n \n@@ -3221,6 +3232,7 @@ elf_x86_64_relocate_section (bfd *output_bfd,\n \t      Elf_Internal_Rela outrel;\n \t      bfd_boolean skip, relocate;\n \t      asection *sreloc;\n+\t      const char *relative_reloc_name = NULL;\n \n \t      /* When generating a shared object, these relocations\n \t\t are copied into the output file to be resolved at run\n@@ -3259,6 +3271,7 @@ elf_x86_64_relocate_section (bfd *output_bfd,\n \t\t      relocate = TRUE;\n \t\t      outrel.r_info = htab->r_info (0, R_X86_64_RELATIVE);\n \t\t      outrel.r_addend = relocation + rel->r_addend;\n+\t\t      relative_reloc_name = \"R_X86_64_RELATIVE\";\n \t\t    }\n \t\t  else if (r_type == R_X86_64_64\n \t\t\t   && !ABI_64_P (output_bfd))\n@@ -3267,6 +3280,7 @@ elf_x86_64_relocate_section (bfd *output_bfd,\n \t\t      outrel.r_info = htab->r_info (0,\n \t\t\t\t\t\t    R_X86_64_RELATIVE64);\n \t\t      outrel.r_addend = relocation + rel->r_addend;\n+\t\t      relative_reloc_name = \"R_X86_64_RELATIVE64\";\n \t\t      /* Check addend overflow.  */\n \t\t      if ((outrel.r_addend & 0x80000000)\n \t\t\t  != (rel->r_addend & 0x80000000))\n@@ -3333,6 +3347,12 @@ elf_x86_64_relocate_section (bfd *output_bfd,\n \t\t  goto check_relocation_error;\n \t\t}\n \n+\t      if (relative_reloc_name\n+\t\t  && htab->params->report_relative_reloc)\n+\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t  (info, input_section, h, sym, relative_reloc_name,\n+\t\t   &outrel);\n+\n \t      elf_append_rela (output_bfd, sreloc, &outrel);\n \n \t      /* If this reloc is against an external symbol, we do\n@@ -4292,6 +4312,11 @@ elf_x86_64_finish_dynamic_symbol (bfd *output_bfd,\n \t      rela.r_addend = (h->root.u.def.value\n \t\t\t       + h->root.u.def.section->output_section->vma\n \t\t\t       + h->root.u.def.section->output_offset);\n+\n+\t      if (htab->params->report_relative_reloc)\n+\t\t_bfd_x86_elf_link_report_relative_reloc\n+\t\t  (info, relplt, h, sym, \"R_X86_64_IRELATIVE\", &rela);\n+\n \t      /* R_X86_64_IRELATIVE comes last.  */\n \t      plt_index = htab->next_irelative_index--;\n \t    }\n@@ -4409,6 +4434,7 @@ elf_x86_64_finish_dynamic_symbol (bfd *output_bfd,\n     {\n       Elf_Internal_Rela rela;\n       asection *relgot = htab->elf.srelgot;\n+      const char *relative_reloc_name = NULL;\n \n       /* This symbol has an entry in the global offset table.  Set it\n \t up.  */\n@@ -4447,6 +4473,7 @@ elf_x86_64_finish_dynamic_symbol (bfd *output_bfd,\n \t\t  rela.r_addend = (h->root.u.def.value\n \t\t\t\t   + h->root.u.def.section->output_section->vma\n \t\t\t\t   + h->root.u.def.section->output_offset);\n+\t\t  relative_reloc_name = \"R_X86_64_IRELATIVE\";\n \t\t}\n \t      else\n \t\tgoto do_glob_dat;\n@@ -4494,6 +4521,7 @@ elf_x86_64_finish_dynamic_symbol (bfd *output_bfd,\n \t  rela.r_addend = (h->root.u.def.value\n \t\t\t   + h->root.u.def.section->output_section->vma\n \t\t\t   + h->root.u.def.section->output_offset);\n+\t  relative_reloc_name = \"R_X86_64_RELATIVE\";\n \t}\n       else\n \t{\n@@ -4505,6 +4533,11 @@ elf_x86_64_finish_dynamic_symbol (bfd *output_bfd,\n \t  rela.r_addend = 0;\n \t}\n \n+      if (relative_reloc_name != NULL\n+\t  && htab->params->report_relative_reloc)\n+\t_bfd_x86_elf_link_report_relative_reloc\n+\t  (info, relgot, h, sym, relative_reloc_name, &rela);\n+\n       elf_append_rela (output_bfd, relgot, &rela);\n     }\n "
    },
    {
      "sha": "8cda8d2d97c5b244e11c244eea228119451f57bd",
      "filename": "bfd/elfxx-x86.c",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elfxx-x86.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elfxx-x86.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.c?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -1742,6 +1742,53 @@ _bfd_x86_elf_link_fixup_ifunc_symbol (struct bfd_link_info *info,\n     }\n }\n \n+/* Report relative relocation.  */\n+\n+void\n+_bfd_x86_elf_link_report_relative_reloc\n+  (struct bfd_link_info *info, asection *asect,\n+   struct elf_link_hash_entry *h, Elf_Internal_Sym *sym,\n+   const char *reloc_name, const void *reloc)\n+{\n+  const char *name;\n+  bfd *abfd;\n+  const Elf_Internal_Rela *rel = (const Elf_Internal_Rela *) reloc;\n+  char r_offset[30], r_info[30];\n+\n+  /* Use the output BFD for linker created sections.  */\n+  if ((asect->flags & SEC_LINKER_CREATED) != 0)\n+    abfd = info->output_bfd;\n+  else\n+    abfd = asect->owner;\n+\n+  if (h != NULL && h->root.root.string != NULL)\n+    name = h->root.root.string;\n+  else\n+    name = bfd_elf_sym_name (abfd, &elf_symtab_hdr (abfd), sym, NULL);\n+\n+  bfd_sprintf_vma (abfd, r_offset, rel->r_offset);\n+  bfd_sprintf_vma (abfd, r_info, rel->r_info);\n+\n+  if (asect->use_rela_p)\n+    {\n+      char r_addend[30];\n+\n+      bfd_sprintf_vma (abfd, r_addend, rel->r_addend);\n+\n+      info->callbacks->einfo\n+\t(_(\"%pB: %s (offset: 0x%s, info: 0x%s, addend: 0x%s) against \"\n+\t   \"'%s' \" \"for section '%pA' in %pB\\n\"),\n+\t info->output_bfd, reloc_name, r_offset, r_info, r_addend,\n+\t name, asect, abfd);\n+    }\n+  else\n+    info->callbacks->einfo\n+      (_(\"%pB: %s (offset: 0x%s, info: 0x%s) against '%s' for section \"\n+\t \"'%pA' in %pB\\n\"),\n+       info->output_bfd, reloc_name, r_offset, r_info, name,\n+       asect, abfd);\n+}\n+\n /* Return TRUE if symbol should be hashed in the `.gnu.hash' section.  */\n \n bfd_boolean"
    },
    {
      "sha": "7a5b9e070ab56a103e76bf63d15930a6e22369bc",
      "filename": "bfd/elfxx-x86.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elfxx-x86.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/bfd/elfxx-x86.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.h?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -686,6 +686,10 @@ extern void _bfd_x86_elf_link_fixup_ifunc_symbol\n   (struct bfd_link_info *, struct elf_x86_link_hash_table *,\n    struct elf_link_hash_entry *, Elf_Internal_Sym *sym);\n \n+extern void _bfd_x86_elf_link_report_relative_reloc\n+  (struct bfd_link_info *, asection *, struct elf_link_hash_entry *,\n+   Elf_Internal_Sym *, const char *, const void *);\n+\n #define bfd_elf64_mkobject \\\n   _bfd_x86_elf_mkobject\n #define bfd_elf32_mkobject \\"
    },
    {
      "sha": "6e53414890716b6cb7d0dc75fa8e215af53ef6e2",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -1,3 +1,22 @@\n+2021-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* NEWS: Mention -z report-relative-reloc.\n+\t* ld.texi: Document -z report-relative-reloc.\n+\t* emulparams/elf32_x86_64.sh: Source x86-report-relative.sh.\n+\t* emulparams/elf_i386.sh: Likewse.\n+\t* emulparams/elf_x86_64.sh: Likewse.\n+\t* emulparams/x86-report-relative.sh: New file.\n+\t* testsuite/ld-i386/report-reloc-1.d: Likewse.\n+\t* testsuite/ld-i386/report-reloc-1.l: Likewse.\n+\t* testsuite/ld-i386/report-reloc-1.s: Likewse.\n+\t* testsuite/ld-x86-64/report-reloc-1-x32.d: Likewse.\n+\t* testsuite/ld-x86-64/report-reloc-1.d: Likewse.\n+\t* testsuite/ld-x86-64/report-reloc-1.l: Likewse.\n+\t* testsuite/ld-x86-64/report-reloc-1.s: Likewse.\n+\t* testsuite/ld-i386/i386.exp: Run report-reloc-1.\n+\t* testsuite/ld-x86-64/x86-64.exp: Run report-reloc-1 and\n+\treport-reloc-1-x32.\n+\n 2021-01-16  Alan Modra  <amodra@gmail.com>\n \n \tPR 26002"
    },
    {
      "sha": "88bf533b4fb66acfeb2ad08a6350bfb23ea85ca8",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -1,5 +1,8 @@\n -*- text -*-\n \n+* Add -z report-relative-reloc to x86 ELF linker to report dynamic\n+  relative relocations.\n+\n Changes in 2.36:\n \n * Add libdep plugin, for linking dependencies of static libraries that"
    },
    {
      "sha": "ac0a7aa6dcf9da9e17bec81a90510f18186a934e",
      "filename": "ld/emulparams/elf32_x86_64.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/elf32_x86_64.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/elf32_x86_64.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf32_x86_64.sh?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -4,6 +4,7 @@ source_sh ${srcdir}/emulparams/dynamic_undefined_weak.sh\n source_sh ${srcdir}/emulparams/reloc_overflow.sh\n source_sh ${srcdir}/emulparams/call_nop.sh\n source_sh ${srcdir}/emulparams/cet.sh\n+source_sh ${srcdir}/emulparams/x86-report-relative.sh\n source_sh ${srcdir}/emulparams/x86-64-level.sh\n source_sh ${srcdir}/emulparams/static.sh\n SCRIPT_NAME=elf"
    },
    {
      "sha": "98532e5edbc79ef8d208e3805ba1117b4cfbe696",
      "filename": "ld/emulparams/elf_i386.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/elf_i386.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/elf_i386.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_i386.sh?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -3,6 +3,7 @@ source_sh ${srcdir}/emulparams/extern_protected_data.sh\n source_sh ${srcdir}/emulparams/dynamic_undefined_weak.sh\n source_sh ${srcdir}/emulparams/call_nop.sh\n source_sh ${srcdir}/emulparams/cet.sh\n+source_sh ${srcdir}/emulparams/x86-report-relative.sh\n source_sh ${srcdir}/emulparams/x86-64-level.sh\n source_sh ${srcdir}/emulparams/static.sh\n SCRIPT_NAME=elf"
    },
    {
      "sha": "6e31d2242cd7912ff58a79cdb9a6b2d63de04cdb",
      "filename": "ld/emulparams/elf_x86_64.sh",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/elf_x86_64.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/elf_x86_64.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf_x86_64.sh?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -4,6 +4,7 @@ source_sh ${srcdir}/emulparams/dynamic_undefined_weak.sh\n source_sh ${srcdir}/emulparams/reloc_overflow.sh\n source_sh ${srcdir}/emulparams/call_nop.sh\n source_sh ${srcdir}/emulparams/cet.sh\n+source_sh ${srcdir}/emulparams/x86-report-relative.sh\n source_sh ${srcdir}/emulparams/x86-64-level.sh\n source_sh ${srcdir}/emulparams/x86-64-lam.sh\n source_sh ${srcdir}/emulparams/static.sh"
    },
    {
      "sha": "426bb8bd78694753e623d6707269e7fda0dd66a5",
      "filename": "ld/emulparams/x86-report-relative.sh",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/x86-report-relative.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/emulparams/x86-report-relative.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/x86-report-relative.sh?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,11 @@\n+PARSE_AND_LIST_OPTIONS_X86_REPORT_RELATIVE='\n+  fprintf (file, _(\"\\\n+  -z report-relative-reloc    Report relative relocations\\n\"));\n+'\n+PARSE_AND_LIST_ARGS_CASE_Z_X86_REPORT_RELATIVE='\n+      else if (strcmp (optarg, \"report-relative-reloc\") == 0)\n+\tparams.report_relative_reloc = 1;\n+'\n+\n+PARSE_AND_LIST_OPTIONS=\"$PARSE_AND_LIST_OPTIONS $PARSE_AND_LIST_OPTIONS_X86_REPORT_RELATIVE\"\n+PARSE_AND_LIST_ARGS_CASE_Z=\"$PARSE_AND_LIST_ARGS_CASE_Z $PARSE_AND_LIST_ARGS_CASE_Z_X86_REPORT_RELATIVE\""
    },
    {
      "sha": "0f34d1fbdf6a450fc17dd5bec044f2a4f4277496",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -1426,6 +1426,10 @@ relocation, if supported.  Specifying @samp{common-page-size} smaller\n than the system page size will render this protection ineffective.\n Don't create an ELF @code{PT_GNU_RELRO} segment if @samp{norelro}.\n \n+@item report-relative-reloc\n+Report dynamic relative relocations generated by linker.  Supported for\n+Linux/i386 and Linux/x86_64.\n+\n @item separate-code\n @itemx noseparate-code\n Create separate code @code{PT_LOAD} segment header in the object.  This"
    },
    {
      "sha": "f3e62a4151e6c8d83205612bd8f3f7ffcdd93b13",
      "filename": "ld/testsuite/ld-i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/i386.exp?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -506,6 +506,7 @@ run_dump_test \"pr18815\"\n run_dump_test \"pr19939a\"\n run_dump_test \"pr19939b\"\n run_dump_test \"tlsdesc2\"\n+run_dump_test \"report-reloc-1\"\n \n proc undefined_weak {cflags ldflags} {\n     set testname \"Undefined weak symbol\""
    },
    {
      "sha": "51fbbd8d105ce062dd0ca018251c9e15d62facdc",
      "filename": "ld/testsuite/ld-i386/report-reloc-1.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/report-reloc-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/report-reloc-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/report-reloc-1.d?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,10 @@\n+#source: report-reloc-1.s\n+#as: --32\n+#ld: -pie -melf_i386 -z report-relative-reloc\n+#warning_output: report-reloc-1.l\n+#readelf: -r --wide\n+\n+Relocation section '.rel.dyn' at offset 0x[0-9a-f]+ contains 2 entries:\n+ +Offset +Info +Type +Sym.* Value +Symbol's Name\n+[0-9a-f]+ +[0-9a-f]+ +R_386_RELATIVE +\n+[0-9a-f]+ +[0-9a-f]+ +R_386_IRELATIVE +"
    },
    {
      "sha": "a0293bc4f9640a82c66f1612a1b24aa320db4353",
      "filename": "ld/testsuite/ld-i386/report-reloc-1.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/report-reloc-1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/report-reloc-1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/report-reloc-1.l?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,2 @@\n+tmpdir/dump: R_386_IRELATIVE \\(offset: 0x0+2000, info: 0x0+2a\\) against 'ifunc' for section '.data.rel.ro.local' in tmpdir/report-reloc-1.o\n+tmpdir/dump: R_386_RELATIVE \\(offset: 0x0+2004, info: 0x0+8\\) against '_start' for section '.data.rel.ro.local' in tmpdir/report-reloc-1.o"
    },
    {
      "sha": "689cb690a8029d015ec29e1d5f7a165aea667809",
      "filename": "ld/testsuite/ld-i386/report-reloc-1.s",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/report-reloc-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-i386/report-reloc-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/report-reloc-1.s?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,12 @@\n+\t.text\n+\t.globl _start\n+\t.type ifunc, @gnu_indirect_function\n+_start:\n+\tlea\t.Ljmp@GOTOFF(%ebx), %eax\n+ifunc:\n+\tjmp\t*(%eax)\n+\t.section\t.data.rel.ro.local,\"aw\",@progbits\n+\t.align\t4\n+.Ljmp:\n+\t.long ifunc\n+\t.long _start"
    },
    {
      "sha": "c66f956c473cd937f36d3f6c745e78f21d795e44",
      "filename": "ld/testsuite/ld-x86-64/report-reloc-1-x32.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1-x32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1-x32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/report-reloc-1-x32.d?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,10 @@\n+#source: report-reloc-1.s\n+#as: --x32\n+#ld: -pie -melf32_x86_64 -z report-relative-reloc\n+#warning_output: report-reloc-1.l\n+#readelf: -r --wide\n+\n+Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 2 entries:\n+ +Offset +Info +Type +Sym.* Value +Symbol's Name \\+ Addend\n+[0-9a-f]+ +[0-9a-f]+ +R_X86_64_RELATIVE +[0-9a-f]+\n+[0-9a-f]+ +[0-9a-f]+ +R_X86_64_IRELATIVE +[0-9a-f]+"
    },
    {
      "sha": "1b5f91fdd3f1184c5705575f8885fd3bf472ef7c",
      "filename": "ld/testsuite/ld-x86-64/report-reloc-1.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/report-reloc-1.d?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,10 @@\n+#source: report-reloc-1.s\n+#as: --64\n+#ld: -pie -melf_x86_64 -z report-relative-reloc\n+#warning_output: report-reloc-1.l\n+#readelf: -r --wide\n+\n+Relocation section '.rela.dyn' at offset 0x[0-9a-f]+ contains 2 entries:\n+ +Offset +Info +Type +Sym.* Value +Symbol's Name \\+ Addend\n+[0-9a-f]+ +[0-9a-f]+ +R_X86_64_RELATIVE +[0-9a-f]+\n+[0-9a-f]+ +[0-9a-f]+ +R_X86_64_IRELATIVE +[0-9a-f]+"
    },
    {
      "sha": "669dff43bd7bf0fa05e8f7b888a7759a994f2249",
      "filename": "ld/testsuite/ld-x86-64/report-reloc-1.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/report-reloc-1.l?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,2 @@\n+tmpdir/dump: R_X86_64_IRELATIVE \\(offset: 0x0+2000, info: 0x0+25, addend: 0x0+1007\\) against 'ifunc' for section '.data.rel.ro.local' in tmpdir/report-reloc-1.o\n+tmpdir/dump: R_X86_64_RELATIVE \\(offset: 0x0+2008, info: 0x0+8, addend: 0x0+1000\\) against '_start' for section '.data.rel.ro.local' in tmpdir/report-reloc-1.o"
    },
    {
      "sha": "8a5809ad1c192b5bdf83566f8cd25d11db1fc390",
      "filename": "ld/testsuite/ld-x86-64/report-reloc-1.s",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/report-reloc-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/report-reloc-1.s?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -0,0 +1,12 @@\n+\t.text\n+\t.globl _start\n+\t.type ifunc, @gnu_indirect_function\n+_start:\n+\tlea\t.Ljmp(%rip), %rax\n+ifunc:\n+\tjmp\t*(%rax)\n+\t.section\t.data.rel.ro.local,\"aw\",@progbits\n+\t.align\t8\n+.Ljmp:\n+\t.quad ifunc\n+\t.quad _start"
    },
    {
      "sha": "662d349d824e645068091438ed872b4b782d778f",
      "filename": "ld/testsuite/ld-x86-64/x86-64.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68b007788a6cc5376708af42bc220f540e8c4b8a/ld/testsuite/ld-x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/x86-64.exp?ref=68b007788a6cc5376708af42bc220f540e8c4b8a",
      "patch": "@@ -677,6 +677,8 @@ run_dump_test \"pr26939\"\n run_dump_test \"pr26939-x32\"\n run_dump_test \"pr27016a\"\n run_dump_test \"pr27016b\"\n+run_dump_test \"report-reloc-1\"\n+run_dump_test \"report-reloc-1-x32\"\n \n proc undefined_weak {cflags ldflags} {\n     set testname \"Undefined weak symbol\""
    }
  ]
}