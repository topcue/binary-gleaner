{
  "sha": "b28a729db188235ce61f3a03e35a27f9427af12e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjI4YTcyOWRiMTg4MjM1Y2U2MWYzYTAzZTM1YTI3Zjk0MjdhZjEyZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-12-28T01:58:42Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-12-28T02:02:35Z"
    },
    "message": "[PATCH] Adjust test gdb.ada/ptype_tagged_param.exp for when GNAT runtime does not have debug info\n\nThis test verifies that GDB correctly identifies the run-time type of\n\"s\" as being the type \"Circle\".  However, that can only be done\ncorrectly if the GNAT runtime has been compiled and shipped with debug\ninformation, so that GDB can poke in its internal data structures.\nCurrently the test fails when when running against a GNAT runtime\nwithout debug info.  This is the case, for example, on Arch Linux using\nthe distribution package.\n\nThis patch adds a helper in lib/ada.exp to check whether the GNAT\nruntime has debug info or not.  It then uses it in\ngdb.ada/ptype_tagged_param.exp to expect a different result, depending\non whether we have debug info or not in the runtime.\n\nAt first, I made it so we would XFAIL the test, in the absence of debug\ninfo, but then I thought that we might as well test for the output we\nexpect in the absence of debug info instead.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/ada.exp (gnat_runtime_has_debug_info): New proc.\n\t* lib/gnat_debug_info_test.adb: New file.\n\t* gdb.ada/ptype_tagged_param.exp: Use\n\tgnat_runtime_has_debug_info, expect a different output if\n\truntime does not have debug info.",
    "tree": {
      "sha": "4048192488afe36e73036d6fea7f46cb1ecfec4c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4048192488afe36e73036d6fea7f46cb1ecfec4c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b28a729db188235ce61f3a03e35a27f9427af12e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b28a729db188235ce61f3a03e35a27f9427af12e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b28a729db188235ce61f3a03e35a27f9427af12e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b28a729db188235ce61f3a03e35a27f9427af12e/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1ddaf334cfca50957fe33a6b23fab79a85ea1655",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ddaf334cfca50957fe33a6b23fab79a85ea1655",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1ddaf334cfca50957fe33a6b23fab79a85ea1655"
    }
  ],
  "stats": {
    "total": 75,
    "additions": 71,
    "deletions": 4
  },
  "files": [
    {
      "sha": "31208bdffc8e89069e84d2cfc23698dd49db2b11",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b28a729db188235ce61f3a03e35a27f9427af12e",
      "patch": "@@ -1,3 +1,11 @@\n+2019-12-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* lib/ada.exp (gnat_runtime_has_debug_info): New proc.\n+\t* lib/gnat_debug_info_test.adb: New file.\n+\t* gdb.ada/ptype_tagged_param.exp: Use\n+\tgnat_runtime_has_debug_info, expect a different output if\n+\truntime does not have debug info.\n+\n 2019-12-20  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* lib/sym-info-cmds.exp (GDBInfoSymbols::check_no_entry): Add"
    },
    {
      "sha": "08d3e5dcff418468605eebbc08c06fefc0148e85",
      "filename": "gdb/testsuite/gdb.ada/ptype_tagged_param.exp",
      "status": "modified",
      "additions": 21,
      "deletions": 4,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/gdb.ada/ptype_tagged_param.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/gdb.ada/ptype_tagged_param.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/ptype_tagged_param.exp?ref=b28a729db188235ce61f3a03e35a27f9427af12e",
      "patch": "@@ -21,14 +21,31 @@ if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable [list debug ]] != \"\" }\n   return -1\n }\n \n+set has_runtime_debug_info [gnat_runtime_has_debug_info]\n+\n clean_restart ${testfile}\n \n if ![runto \"position_x\" ] then {\n   return -1\n }\n \n-set eol \"\\[\\r\\n\\]+\"\n-set sp \"\\[ \\t\\]*\"\n+# Identifying the runtime type of S can only be done when we have the debug\n+# info for the GNAT runtime.\n+\n+if { $has_runtime_debug_info } {\n+    gdb_test \"ptype s\" \\\n+\t[multi_line \\\n+\t    \"type = <ref> new pck.shape with record\" \\\n+\t    \"    r: integer;\" \\\n+\t    \"end record\"] \\\n+\t\"ptype s, with debug info\"\n+} else {\n+    gdb_test \"ptype s\" \\\n+\t[multi_line \\\n+\t    \"type = <ref> tagged record\" \\\n+\t    \"    x: integer;\" \\\n+\t    \"    y: integer;\" \\\n+\t    \"end record\" ] \\\n+\t\"ptype s, without debug info\"\n+}\n \n-gdb_test \"ptype s\" \\\n-         \"type = <ref> new pck.shape with record${eol}${sp}r: integer;${eol}end record\""
    },
    {
      "sha": "6f5961a822a7ed5aa23b1e9b0989324138b06329",
      "filename": "gdb/testsuite/lib/ada.exp",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/lib/ada.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/lib/ada.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/ada.exp?ref=b28a729db188235ce61f3a03e35a27f9427af12e",
      "patch": "@@ -149,3 +149,39 @@ proc gnatmake_version_at_least { major } {\n     # Unknown, return 1\n     return 1\n }\n+\n+# Return 1 if the GNAT runtime appears to have debug info.\n+\n+gdb_caching_proc gnat_runtime_has_debug_info {\n+    global srcdir\n+\n+    set src \"$srcdir/lib/gnat_debug_info_test.adb\"\n+    set dst [standard_output_file \"gnat_debug_info_test\"]\n+\n+    if { [gdb_compile_ada $src $dst executable {debug}] != \"\" } {\n+\tfail \"failed to compile gnat-debug-info test binary\"\n+\treturn 0\n+    }\n+\n+    clean_restart $dst\n+\n+    if { ! [runto \"GNAT_Debug_Info_Test\"] } {\n+\tfail \"failed to run to GNAT_Debug_Info_Test\"\n+\treturn 0\n+    }\n+\n+    set has_debug_info 0\n+\n+    gdb_test_multiple \"whatis __gnat_debug_raise_exception\" \"\" {\n+\t-re \"type = <text variable, no debug info>\" { }\n+\t-re \"type = void\" {\n+\t    set has_debug_info 1\n+\t}\n+\tdefault {\n+\t    # Some other unexpected output...\n+\t    fail $gdb_test_name\n+\t}\n+    }\n+\n+    return $has_debug_info\n+}"
    },
    {
      "sha": "b8f0b03435864a437903d42e9d7b5ae2f3d080b2",
      "filename": "gdb/testsuite/lib/gnat_debug_info_test.adb",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/lib/gnat_debug_info_test.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b28a729db188235ce61f3a03e35a27f9427af12e/gdb/testsuite/lib/gnat_debug_info_test.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gnat_debug_info_test.adb?ref=b28a729db188235ce61f3a03e35a27f9427af12e",
      "patch": "@@ -0,0 +1,6 @@\n+with Ada.Text_IO;\n+\n+procedure GNAT_Debug_Info_Test is\n+begin\n+   Ada.Text_IO.Put_Line(\"Hello, world!\");\n+end GNAT_Debug_Info_Test;"
    }
  ]
}