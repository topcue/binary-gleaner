{
  "sha": "d17725d72f25812acc8bd16a368c0e889c4b4d1e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDE3NzI1ZDcyZjI1ODEyYWNjOGJkMTZhMzY4YzBlODg5YzRiNGQxZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-07-29T09:24:04Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-07-29T09:24:04Z"
    },
    "message": "[gdb/testsuite] Don't expect gdb_prompt in mi_skip_python_test\n\nWhen running gdb.python/py-mi-events.exp with make check-read1, we get:\n...\n(gdb) ^M\npython print ('test')^M\n&\"python print ('test')\\n\"^M\n~\"test\\n\"^M\n^done^M\n(gdb) FAIL: gdb.python/py-mi-events.exp: verify python support\n^M\npython print (sys.version_info[0])^M\n&\"python print (sys.version_info[0])\\n\"^M\n~\"2\\n\"^M\n^done^M\n(gdb) FAIL: gdb.python/py-mi-events.exp: check if python 3\n^M\n...\n\nThe FAILs happen as follows.\n\nOn one hand, skip_python_tests_prompt uses the prompt_regexp parameter for the\nuser_code argument of gdb_test_multiple:\n...\nproc skip_python_tests_prompt { prompt_regexp } {\n    global gdb_py_is_py3k\n\n    gdb_test_multiple \"python print ('test')\" \"verify python support\" {\n\t-re \"not supported.*$prompt_regexp\" {\n\t    unsupported \"Python support is disabled.\"\n\t    return 1\n\t}\n\t-re \"$prompt_regexp\" {}\n    }\n\n    gdb_test_multiple \"python print (sys.version_info\\[0\\])\" \"check if python 3\" {\n\t-re \"3.*$prompt_regexp\" {\n            set gdb_py_is_py3k 1\n        }\n\t-re \".*$prompt_regexp\" {\n            set gdb_py_is_py3k 0\n        }\n    }\n...\n\nOn the other hand, gdb_test_multiple itself uses $gdb_prompt:\n...\n         -re \"\\r\\n$gdb_prompt $\" {\n            if ![string match \"\" $message] then {\n                fail \"$message\"\n            }\n            set result 1\n        }\n...\n\nSo when mi_skip_python_test calls skip_python_tests_prompt with prompt_regexp\nset to $mi_gdb_prompt:\n...\nproc mi_skip_python_tests {} {\n    global mi_gdb_prompt\n    return [skip_python_tests_prompt \"$mi_gdb_prompt$\"]\n}\n...\nand expect reads \"(gdb) \" and tries to match it (due to the READ1=1 setting),\nthe user_code regexps using $prompt_regexp (set to $mi_gdb_prompt) don't match,\nbut the $gdb_prompt regexp in gdb_test_multiple does match.\n\nFix this by adding a prompt_regexp parameter to gdb_test_multiple, and using the\nparameter in skip_python_tests_prompt.\n\nTested gdb.python/py-mi-events.exp with make check READ1=1 x86_64-linux.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-07-29  Tom de Vries  <tdevries@suse.de>\n\n\tPR gdb/24855\n\t* lib/gdb.exp (gdb_test_multiple): Add prompt_regexp parameter.\n\t(skip_python_tests_prompt): Add prompt_regexp argument to\n\tgdb_test_multiple calls.",
    "tree": {
      "sha": "262277fed5a43ed94d43eda883f2f1e16865f0c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/262277fed5a43ed94d43eda883f2f1e16865f0c2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d17725d72f25812acc8bd16a368c0e889c4b4d1e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d17725d72f25812acc8bd16a368c0e889c4b4d1e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d17725d72f25812acc8bd16a368c0e889c4b4d1e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d17725d72f25812acc8bd16a368c0e889c4b4d1e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cc5277b173701364c10204f316db28198f2c683b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc5277b173701364c10204f316db28198f2c683b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cc5277b173701364c10204f316db28198f2c683b"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 26,
    "deletions": 13
  },
  "files": [
    {
      "sha": "f79dc9f71c3295a6c753ee56f4ebcb9addfa730d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d17725d72f25812acc8bd16a368c0e889c4b4d1e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d17725d72f25812acc8bd16a368c0e889c4b4d1e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d17725d72f25812acc8bd16a368c0e889c4b4d1e",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-29  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR gdb/24855\n+\t* lib/gdb.exp (gdb_test_multiple): Add prompt_regexp parameter.\n+\t(skip_python_tests_prompt): Add prompt_regexp argument to\n+\tgdb_test_multiple calls.\n+\n 2019-07-27  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.tui/main.exp: New file."
    },
    {
      "sha": "4c7d3b55464fbbddf6be6550ecdf98891aa4cd9b",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 19,
      "deletions": 13,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d17725d72f25812acc8bd16a368c0e889c4b4d1e/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d17725d72f25812acc8bd16a368c0e889c4b4d1e/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=d17725d72f25812acc8bd16a368c0e889c4b4d1e",
      "patch": "@@ -695,7 +695,7 @@ proc gdb_internal_error_resync {} {\n }\n \n \n-# gdb_test_multiple COMMAND MESSAGE EXPECT_ARGUMENTS\n+# gdb_test_multiple COMMAND MESSAGE EXPECT_ARGUMENTS PROMPT_REGEXP\n # Send a command to gdb; test the result.\n #\n # COMMAND is the command to execute, send to GDB with send_gdb.  If\n@@ -707,6 +707,8 @@ proc gdb_internal_error_resync {} {\n #   context; action elements will be executed in the caller's context.\n #   Unlike patterns for gdb_test, these patterns should generally include\n #   the final newline and prompt.\n+# PROMPT_REGEXP is a regexp matching the expected prompt after the command\n+#   output.  If empty, defaults to \"$gdb_prompt $\"\n #\n # Returns:\n #    1 if the test failed, according to a built-in failure pattern\n@@ -744,7 +746,7 @@ proc gdb_internal_error_resync {} {\n # expected from $gdb_spawn_id.  IOW, callers do not need to worry\n # about resetting \"-i\" back to $gdb_spawn_id explicitly.\n #\n-proc gdb_test_multiple { command message user_code } {\n+proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n     global verbose use_gdb_stub\n     global gdb_prompt pagination_prompt\n     global GDB\n@@ -754,6 +756,10 @@ proc gdb_test_multiple { command message user_code } {\n     upvar expect_out expect_out\n     global any_spawn_id\n \n+    if { \"$prompt_regexp\" == \"\" } {\n+\tset prompt_regexp \"$gdb_prompt $\"\n+    }\n+\n     if { $message == \"\" } {\n \tset message $command\n     }\n@@ -913,25 +919,25 @@ proc gdb_test_multiple { command message user_code } {\n     }\n \n     append code {\n-\t-re \"Ending remote debugging.*$gdb_prompt $\" {\n+\t-re \"Ending remote debugging.*$prompt_regexp\" {\n \t    if ![isnative] then {\n \t\twarning \"Can`t communicate to remote target.\"\n \t    }\n \t    gdb_exit\n \t    gdb_start\n \t    set result -1\n \t}\n-\t-re \"Undefined\\[a-z\\]* command:.*$gdb_prompt $\" {\n+\t-re \"Undefined\\[a-z\\]* command:.*$prompt_regexp\" {\n \t    perror \"Undefined command \\\"$command\\\".\"\n \t    fail \"$message\"\n \t    set result 1\n \t}\n-\t-re \"Ambiguous command.*$gdb_prompt $\" {\n+\t-re \"Ambiguous command.*$prompt_regexp\" {\n \t    perror \"\\\"$command\\\" is not a unique command name.\"\n \t    fail \"$message\"\n \t    set result 1\n \t}\n-\t-re \"$inferior_exited_re with code \\[0-9\\]+.*$gdb_prompt $\" {\n+\t-re \"$inferior_exited_re with code \\[0-9\\]+.*$prompt_regexp\" {\n \t    if ![string match \"\" $message] then {\n \t\tset errmsg \"$message (the program exited)\"\n \t    } else {\n@@ -940,7 +946,7 @@ proc gdb_test_multiple { command message user_code } {\n \t    fail \"$errmsg\"\n \t    set result -1\n \t}\n-\t-re \"$inferior_exited_re normally.*$gdb_prompt $\" {\n+\t-re \"$inferior_exited_re normally.*$prompt_regexp\" {\n \t    if ![string match \"\" $message] then {\n \t\tset errmsg \"$message (the program exited)\"\n \t    } else {\n@@ -949,7 +955,7 @@ proc gdb_test_multiple { command message user_code } {\n \t    fail \"$errmsg\"\n \t    set result -1\n \t}\n-\t-re \"The program is not being run.*$gdb_prompt $\" {\n+\t-re \"The program is not being run.*$prompt_regexp\" {\n \t    if ![string match \"\" $message] then {\n \t\tset errmsg \"$message (the program is no longer running)\"\n \t    } else {\n@@ -958,7 +964,7 @@ proc gdb_test_multiple { command message user_code } {\n \t    fail \"$errmsg\"\n \t    set result -1\n \t}\n-\t-re \"\\r\\n$gdb_prompt $\" {\n+\t-re \"\\r\\n$prompt_regexp\" {\n \t    if ![string match \"\" $message] then {\n \t\tfail \"$message\"\n \t    }\n@@ -972,13 +978,13 @@ proc gdb_test_multiple { command message user_code } {\n \t}\n \t-re \"\\\\((y or n|y or \\\\\\[n\\\\\\]|\\\\\\[y\\\\\\] or n)\\\\) \" {\n \t    send_gdb \"n\\n\" answer\n-\t    gdb_expect -re \"$gdb_prompt $\"\n+\t    gdb_expect -re \"$prompt_regexp\"\n \t    fail \"$message (got interactive prompt)\"\n \t    set result -1\n \t}\n \t-re \"\\\\\\[0\\\\\\] cancel\\r\\n\\\\\\[1\\\\\\] all.*\\r\\n> $\" {\n \t    send_gdb \"0\\n\"\n-\t    gdb_expect -re \"$gdb_prompt $\"\n+\t    gdb_expect -re \"$prompt_regexp\"\n \t    fail \"$message (got breakpoint menu)\"\n \t    set result -1\n \t}\n@@ -1869,7 +1875,7 @@ proc skip_python_tests_prompt { prompt_regexp } {\n \t    return 1\n \t}\n \t-re \"$prompt_regexp\" {}\n-    }\n+    } \"$prompt_regexp\"\n \n     gdb_test_multiple \"python print (sys.version_info\\[0\\])\" \"check if python 3\" {\n \t-re \"3.*$prompt_regexp\" {\n@@ -1878,7 +1884,7 @@ proc skip_python_tests_prompt { prompt_regexp } {\n \t-re \".*$prompt_regexp\" {\n             set gdb_py_is_py3k 0\n         }\n-    }\n+    } \"$prompt_regexp\"\n \n     return 0\n }"
    }
  ]
}