{
  "sha": "66d1f7cc129495ea6c820bcd16242ec5ff39b172",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjZkMWY3Y2MxMjk0OTVlYTZjODIwYmNkMTYyNDJlYzVmZjM5YjE3Mg==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2020-03-13T13:31:56Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2020-03-13T13:35:04Z"
    },
    "message": "gas, arm: PR25660L Fix vadd/vsub with lt and le condition codes for MVE\n\nAs explained in the PR, the addition of MVE makes the parser strip 't' and 'e'\nas suffixes when MVE is enabled.  This leads to vadd and vsub in it blocks with\nlt and le conditions to be initially parsed as vaddl and vsubl.  This means the\noperand parsing for these must allow for the same operands as the scalar vadd\nand vsub.  I had forgotten to do this and this patch remedies that oversight.\n\ngas/ChangeLog:\n2020-03-13  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\tPR 25660\n\t*  config/tc-arm.c (operand_parse_code): Add OP_RNSDMQR and OP_oRNSDMQ.\n\t(parse_operands): Handle new operand codes.\n\t(do_neon_dyadic_long): Make shape check accept the scalar variants.\n\t(asm_opcode_insns): Fix operand codes for vaddl and vsubl.\n\t* testsuite/gas/arm/mve-vaddsub-it.s: New test.\n\t* testsuite/gas/arm/mve-vaddsub-it.d: New test.\n\t* testsuite/gas/arm/mve-vaddsub-it-bad.s: New test.\n\t* testsuite/gas/arm/mve-vaddsub-it-bad.l: New test.\n\t* testsuite/gas/arm/mve-vaddsub-it-bad.d: New test.\n\t* testsuite/gas/arm/nomve-vaddsub-it.d: New test.",
    "tree": {
      "sha": "e075b2dfed16bae37c5b6e4e1ff9e71a82808b13",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e075b2dfed16bae37c5b6e4e1ff9e71a82808b13"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/66d1f7cc129495ea6c820bcd16242ec5ff39b172",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66d1f7cc129495ea6c820bcd16242ec5ff39b172",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/66d1f7cc129495ea6c820bcd16242ec5ff39b172",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66d1f7cc129495ea6c820bcd16242ec5ff39b172/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "015ec493d8603095d212df443e7b75017b572455",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/015ec493d8603095d212df443e7b75017b572455",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/015ec493d8603095d212df443e7b75017b572455"
    }
  ],
  "stats": {
    "total": 117,
    "additions": 114,
    "deletions": 3
  },
  "files": [
    {
      "sha": "8bc4b3aa96810bd932b2cb62dcd75c64f9bcf119",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -1,3 +1,17 @@\n+2020-03-13  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\tPR 25660\n+\t*  config/tc-arm.c (operand_parse_code): Add OP_RNSDMQR and OP_oRNSDMQ.\n+\t(parse_operands): Handle new operand codes.\n+\t(do_neon_dyadic_long): Make shape check accept the scalar variants.\n+\t(asm_opcode_insns): Fix operand codes for vaddl and vsubl.\n+\t* testsuite/gas/arm/mve-vaddsub-it.s: New test.\n+\t* testsuite/gas/arm/mve-vaddsub-it.d: New test.\n+\t* testsuite/gas/arm/mve-vaddsub-it-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vaddsub-it-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vaddsub-it-bad.d: New test.\n+\t* testsuite/gas/arm/nomve-vaddsub-it.d: New test.\n+\n 2020-03-11  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* NEWS: Mention x86 assembler options for CVE-2020-0551."
    },
    {
      "sha": "f2a55ab3c1a75cfc5c4f91b44847b9950a1c6030",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -7072,6 +7072,8 @@ enum operand_parse_code\n   OP_RNDMQ,     /* Neon double precision (0..31) or MVE vector register.  */\n   OP_RNDMQR,    /* Neon double precision (0..31), MVE vector or ARM register.\n \t\t */\n+  OP_RNSDMQR,    /* Neon single or double precision, MVE vector or ARM register.\n+\t\t */\n   OP_RNQ,\t/* Neon quad precision register */\n   OP_RNQMQ,\t/* Neon quad or MVE vector register.  */\n   OP_RVSD,\t/* VFP single or double precision register */\n@@ -7225,6 +7227,8 @@ enum operand_parse_code\n   OP_oRNSDQ,\t /* Optional single, double or quad precision vector register */\n   OP_oRNSDQMQ,\t /* Optional single, double or quad register or MVE vector\n \t\t    register.  */\n+  OP_oRNSDMQ,\t /* Optional single, double register or MVE vector\n+\t\t    register.  */\n   OP_oSHll,\t /* LSL immediate */\n   OP_oSHar,\t /* ASR immediate */\n   OP_oSHllar,\t /* LSL or ASR immediate */\n@@ -7421,6 +7425,10 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n \tcase OP_RVS:   po_reg_or_fail (REG_TYPE_VFS);\t  break;\n \tcase OP_RVD:   po_reg_or_fail (REG_TYPE_VFD);\t  break;\n \tcase OP_oRND:\n+\tcase OP_RNSDMQR:\n+\t  po_reg_or_goto (REG_TYPE_VFS, try_rndmqr);\n+\t  break;\n+\ttry_rndmqr:\n \tcase OP_RNDMQR:\n \t  po_reg_or_goto (REG_TYPE_RN, try_rndmq);\n \t  break;\n@@ -7486,6 +7494,7 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n \tcase OP_RVSD_COND:\n \t  po_reg_or_goto (REG_TYPE_VFSD, try_cond);\n \t  break;\n+\tcase OP_oRNSDMQ:\n \tcase OP_RNSDMQ:\n \t  po_reg_or_goto (REG_TYPE_NSD, try_mq2);\n \t  break;\n@@ -19599,7 +19608,7 @@ neon_mixed_length (struct neon_type_el et, unsigned size)\n static void\n do_neon_dyadic_long (void)\n {\n-  enum neon_shape rs = neon_select_shape (NS_QDD, NS_QQQ, NS_QQR, NS_NULL);\n+  enum neon_shape rs = neon_select_shape (NS_QDD, NS_HHH, NS_FFF, NS_DDD, NS_NULL);\n   if (rs == NS_QDD)\n     {\n       if (vfp_or_neon_is_neon (NEON_CHECK_ARCH | NEON_CHECK_CC) == FAIL)\n@@ -26542,8 +26551,8 @@ static const struct asm_opcode insns[] =\n #define ARM_VARIANT & fpu_neon_ext_v1\n  mnUF(vabd,      _vabd,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ), neon_dyadic_if_su),\n  mnUF(vabdl,     _vabdl,\t  3, (RNQMQ, RNDMQ, RNDMQ),   neon_dyadic_long),\n- mnUF(vaddl,     _vaddl,\t  3, (RNQMQ, RNDMQ, RNDMQR),  neon_dyadic_long),\n- mnUF(vsubl,     _vsubl,\t  3, (RNQMQ, RNDMQ, RNDMQR),  neon_dyadic_long),\n+ mnUF(vaddl,     _vaddl,\t  3, (RNSDQMQ, oRNSDMQ, RNSDMQR),  neon_dyadic_long),\n+ mnUF(vsubl,     _vsubl,\t  3, (RNSDQMQ, oRNSDMQ, RNSDMQR),  neon_dyadic_long),\n  mnUF(vand,      _vand,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ_Ibig), neon_logic),\n  mnUF(vbic,      _vbic,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ_Ibig), neon_logic),\n  mnUF(vorr,      _vorr,\t\t  3, (RNDQMQ, oRNDQMQ, RNDQMQ_Ibig), neon_logic),"
    },
    {
      "sha": "1889c216f1ce1771c6e219191d60d277cf73a9e2",
      "filename": "gas/testsuite/gas/arm/mve-vaddsub-it-bad.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddsub-it-bad.d?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -0,0 +1,6 @@\n+#name: Bad MVE vadd/vsub instructions in IT blocks\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vaddsub-it-bad.l\n+\n+.*: +file format .*arm.*\n+"
    },
    {
      "sha": "5f41bceaf405c90fa7a323f63c6d4ae35fc7d14b",
      "filename": "gas/testsuite/gas/arm/mve-vaddsub-it-bad.l",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddsub-it-bad.l?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -0,0 +1,7 @@\n+[^:]*: Assembler messages:\n+[^:]*:4: Warning: ARMv8.2 scalar fp16 instruction cannot be conditional, the behaviour is UNPREDICTABLE\n+[^:]*:5: Warning: ARMv8.2 scalar fp16 instruction cannot be conditional, the behaviour is UNPREDICTABLE\n+[^:]*:7: Warning: ARMv8.2 scalar fp16 instruction cannot be conditional, the behaviour is UNPREDICTABLE\n+[^:]*:8: Warning: ARMv8.2 scalar fp16 instruction cannot be conditional, the behaviour is UNPREDICTABLE\n+[^:]*:10: Error: selected FPU does not support instruction -- `vaddl.s8 q0,d1,d2'\n+[^:]*:11: Error: selected FPU does not support instruction -- `vsubl.s8 q0,d1,d2'"
    },
    {
      "sha": "180f9392dbf84636dfbec414f9944e14f7a3274d",
      "filename": "gas/testsuite/gas/arm/mve-vaddsub-it-bad.s",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddsub-it-bad.s?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -0,0 +1,11 @@\n+.syntax unified\n+.text\n+itt le\n+vaddle.f16 s3, s5, s7\n+vsuble.f16 s7, s4, s6\n+itt lt\n+vaddlt.f16 s0, s5, s7\n+vsublt.f16 s7, s4, s6\n+\n+vaddl.s8 q0, d1, d2\n+vsubl.s8 q0, d1, d2"
    },
    {
      "sha": "e0842b733fc0dfcbadc3c80faaa85c47b899205e",
      "filename": "gas/testsuite/gas/arm/mve-vaddsub-it.d",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddsub-it.d?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -0,0 +1,23 @@\n+# name: Armv8.1-M Mainline vadd/vsub instructions in it blocks (with MVE)\n+# as: -march=armv8.1-m.main+mve.fp+fp.dp\n+# objdump: -dr --prefix-addresses --show-raw-insn -marmv8.1-m.main\n+\n+.*: +file format .*arm.*\n+\n+Disassembly of section .text:\n+[^>]*> bfdc      \titt\tle\n+[^>]*> ee72 1aa3 \tvaddle.f32\ts3, s5, s7\n+[^>]*> ee34 7b06 \tvaddle.f64\td7, d4, d6\n+[^>]*> bfbc      \titt\tlt\n+[^>]*> ee72 1aa3 \tvaddlt.f32\ts3, s5, s7\n+[^>]*> ee34 7b06 \tvaddlt.f64\td7, d4, d6\n+[^>]*> bfdc      \titt\tle\n+[^>]*> ee72 1ae3 \tvsuble.f32\ts3, s5, s7\n+[^>]*> ee34 7b46 \tvsuble.f64\td7, d4, d6\n+[^>]*> bfbc      \titt\tlt\n+[^>]*> ee72 1ae3 \tvsublt.f32\ts3, s5, s7\n+[^>]*> ee34 7b46 \tvsublt.f64\td7, d4, d6\n+[^>]*> bfdc      \titt\tle\n+[^>]*> ee30 0a06 \tvaddle.f32\ts0, s0, s12\n+[^>]*> ee30 0b41 \tvsuble.f64\td0, d0, d1\n+#..."
    },
    {
      "sha": "f086a73094c447dd821f34df2c28edd98e2053eb",
      "filename": "gas/testsuite/gas/arm/mve-vaddsub-it.s",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/mve-vaddsub-it.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vaddsub-it.s?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -0,0 +1,17 @@\n+.syntax unified\n+.text\n+itt le\n+vaddle.f32 s3, s5, s7\n+vaddle.f64 d7, d4, d6\n+itt lt\n+vaddlt.f32 s3, s5, s7\n+vaddlt.f64 d7, d4, d6\n+itt le\n+vsuble.f32 s3, s5, s7\n+vsuble.f64 d7, d4, d6\n+itt lt\n+vsublt.f32 s3, s5, s7\n+vsublt.f64 d7, d4, d6\n+itt le\n+vaddle.f32 s0, s12\n+vsuble.f64 d0, d1"
    },
    {
      "sha": "50b12a0d5debeb36c3526f3a8b98d849d759cf10",
      "filename": "gas/testsuite/gas/arm/nomve-vaddsub-it.d",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/nomve-vaddsub-it.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66d1f7cc129495ea6c820bcd16242ec5ff39b172/gas/testsuite/gas/arm/nomve-vaddsub-it.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/nomve-vaddsub-it.d?ref=66d1f7cc129495ea6c820bcd16242ec5ff39b172",
      "patch": "@@ -0,0 +1,24 @@\n+# name: Armv8.1-M Mainline vadd/vsub instructions in it blocks (without MVE)\n+# as: -march=armv8.1-m.main+fp.dp\n+# source: mve-vaddsub-it.s\n+# objdump: -dr --prefix-addresses --show-raw-insn -marmv8.1-m.main\n+\n+.*: +file format .*arm.*\n+\n+Disassembly of section .text:\n+[^>]*> bfdc      \titt\tle\n+[^>]*> ee72 1aa3 \tvaddle.f32\ts3, s5, s7\n+[^>]*> ee34 7b06 \tvaddle.f64\td7, d4, d6\n+[^>]*> bfbc      \titt\tlt\n+[^>]*> ee72 1aa3 \tvaddlt.f32\ts3, s5, s7\n+[^>]*> ee34 7b06 \tvaddlt.f64\td7, d4, d6\n+[^>]*> bfdc      \titt\tle\n+[^>]*> ee72 1ae3 \tvsuble.f32\ts3, s5, s7\n+[^>]*> ee34 7b46 \tvsuble.f64\td7, d4, d6\n+[^>]*> bfbc      \titt\tlt\n+[^>]*> ee72 1ae3 \tvsublt.f32\ts3, s5, s7\n+[^>]*> ee34 7b46 \tvsublt.f64\td7, d4, d6\n+[^>]*> bfdc      \titt\tle\n+[^>]*> ee30 0a06 \tvaddle.f32\ts0, s0, s12\n+[^>]*> ee30 0b41 \tvsuble.f64\td0, d0, d1\n+#..."
    }
  ]
}