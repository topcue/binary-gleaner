{
  "sha": "c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yzg4NGNjNDYxOTNjOThmZDBiOTBjZThhNzljMDgxZjZhMWMxOGNjNg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-03-20T15:57:49Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-03-20T15:57:49Z"
    },
    "message": "gdb: remove HAVE_DECL_PTRACE\n\nI stumbled on this snippet in nat/gdb_ptrace.h:\n\n    /* Some systems, in particular DEC OSF/1, Digital Unix, Compaq Tru64\n       or whatever it's called these days, don't provide a prototype for\n       ptrace.  Provide one to silence compiler warnings.  */\n\n    #ifndef HAVE_DECL_PTRACE\n    extern PTRACE_TYPE_RET ptrace();\n    #endif\n\nI believe this is unnecessary today and should be removed.  First, the\ncomment only mentions OSes we don't support (and to be honest, I had\nnever even heard of).\n\nBut most importantly, in C++, a declaration with empty parenthesis\ndeclares a function that accepts no arguments, unlike in C.  So if this\ndeclaration was really used, GDB wouldn't build, since all ptrace call\nsites pass some arguments.  Since we haven't heard anything about this\ncausing some build failures since we have transitioned to C++, I\nconclude that it's not used.\n\nThis patch removes it as well as the corresponding configure check.\n\ngdb/ChangeLog:\n\n\t* ptrace.m4: Don't check for ptrace declaration.\n\t* config.in: Re-generate.\n\t* configure: Re-generate.\n\t* nat/gdb_ptrace.h: Don't declare ptrace if HAVE_DECL_PTRACE is\n\tnot defined.\n\ngdbserver/ChangeLog:\n\n\t* config.in: Re-generate.\n\t* configure: Re-generate.\n\ngdbsupport/ChangeLog:\n\n\t* config.in: Re-generate.\n\t* configure: Re-generate.",
    "tree": {
      "sha": "4881f686ec5c7cd8f44ead22588fee7cc59f78c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4881f686ec5c7cd8f44ead22588fee7cc59f78c1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1ff700c202465275d1ca3aee4dd979db36274294",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ff700c202465275d1ca3aee4dd979db36274294",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1ff700c202465275d1ca3aee4dd979db36274294"
    }
  ],
  "stats": {
    "total": 104,
    "additions": 19,
    "deletions": 85
  },
  "files": [
    {
      "sha": "393b0d278d9cefa5c24f27cb1738d19859b57ec9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -1,3 +1,11 @@\n+2020-03-20  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* ptrace.m4: Don't check for ptrace declaration.\n+\t* config.in: Re-generate.\n+\t* configure: Re-generate.\n+\t* nat/gdb_ptrace.h: Don't declare ptrace if HAVE_DECL_PTRACE is\n+\tnot defined.\n+\n 2020-03-20  Kamil Rytarowski  <n54@gmx.com>\n \n \t* amd64-bsd-nat.c (gdb_ptrace): Change return type from `int' to"
    },
    {
      "sha": "118e424580e5b9b3dcec49ff18f6a20f98602b9d",
      "filename": "gdb/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/config.in?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -109,10 +109,6 @@\n    don't. */\n #undef HAVE_DECL_GETTHRDS\n \n-/* Define to 1 if you have the declaration of `ptrace', and to 0 if you don't.\n-   */\n-#undef HAVE_DECL_PTRACE\n-\n /* Define to 1 if you have the declaration of `snprintf', and to 0 if you\n    don't. */\n #undef HAVE_DECL_SNPRINTF"
    },
    {
      "sha": "afafc2c8d1812d7bc9a7add8ffd3ed89dd6e1c55",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -15000,26 +15000,6 @@ gdb_ptrace_headers='\n # include <unistd.h>\n #endif\n '\n-# There is no point in checking if we don't have a prototype.\n-ac_fn_c_check_decl \"$LINENO\" \"ptrace\" \"ac_cv_have_decl_ptrace\" \"$gdb_ptrace_headers\n-\"\n-if test \"x$ac_cv_have_decl_ptrace\" = xyes; then :\n-  ac_have_decl=1\n-else\n-  ac_have_decl=0\n-fi\n-\n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_DECL_PTRACE $ac_have_decl\n-_ACEOF\n-if test $ac_have_decl = 1; then :\n-\n-else\n-\n-  : ${gdb_cv_func_ptrace_ret='int'}\n-  : ${gdb_cv_func_ptrace_args='int,int,long,long'}\n-\n-fi\n \n # Check return type.  Varargs (used on GNU/Linux) conflict with the\n # empty argument list, so check for that explicitly."
    },
    {
      "sha": "1278246559c00609ad4dd6b8244cddd6f016cc3a",
      "filename": "gdb/nat/gdb_ptrace.h",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/nat/gdb_ptrace.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/nat/gdb_ptrace.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/gdb_ptrace.h?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -121,14 +121,6 @@\n # endif\n #endif\n \n-/* Some systems, in particular DEC OSF/1, Digital Unix, Compaq Tru64\n-   or whatever it's called these days, don't provide a prototype for\n-   ptrace.  Provide one to silence compiler warnings.  */\n-\n-#ifndef HAVE_DECL_PTRACE\n-extern PTRACE_TYPE_RET ptrace();\n-#endif\n-\n /* Some systems, at least AIX and HP-UX have a ptrace with five\n    arguments.  Since we never use the fifth argument, define a ptrace\n    macro that calls the real ptrace with the last argument set to"
    },
    {
      "sha": "0fcd855aa8fd44f9614b0aced6f7649af733060e",
      "filename": "gdb/ptrace.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/ptrace.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdb/ptrace.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ptrace.m4?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -31,11 +31,7 @@ gdb_ptrace_headers='\n # include <unistd.h>\n #endif\n '\n-# There is no point in checking if we don't have a prototype.\n-AC_CHECK_DECLS(ptrace, [], [\n-  : ${gdb_cv_func_ptrace_ret='int'}\n-  : ${gdb_cv_func_ptrace_args='int,int,long,long'}\n-], $gdb_ptrace_headers)\n+\n # Check return type.  Varargs (used on GNU/Linux) conflict with the\n # empty argument list, so check for that explicitly.\n AC_CACHE_CHECK([return type of ptrace], gdb_cv_func_ptrace_ret,"
    },
    {
      "sha": "37e38611d5dfa9bbfce500ace08d62585673aa99",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-20  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* config.in: Re-generate.\n+\t* configure: Re-generate.\n+\n 2020-03-17  Kamil Rytarowski  <n54@gmx.com>\n \n \t* regcache.cc (find_register_by_number): Update."
    },
    {
      "sha": "da1bdbe3d946d8941f47f3836e3998bba8684608",
      "filename": "gdbserver/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbserver/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbserver/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/config.in?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -50,10 +50,6 @@\n    */\n #undef HAVE_DECL_PERROR\n \n-/* Define to 1 if you have the declaration of `ptrace', and to 0 if you don't.\n-   */\n-#undef HAVE_DECL_PTRACE\n-\n /* Define to 1 if you have the declaration of `snprintf', and to 0 if you\n    don't. */\n #undef HAVE_DECL_SNPRINTF"
    },
    {
      "sha": "0de11f7ee619a91041cfe3c56d293e2374e65724",
      "filename": "gdbserver/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbserver/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbserver/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/configure?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -9413,26 +9413,6 @@ gdb_ptrace_headers='\n # include <unistd.h>\n #endif\n '\n-# There is no point in checking if we don't have a prototype.\n-ac_fn_c_check_decl \"$LINENO\" \"ptrace\" \"ac_cv_have_decl_ptrace\" \"$gdb_ptrace_headers\n-\"\n-if test \"x$ac_cv_have_decl_ptrace\" = xyes; then :\n-  ac_have_decl=1\n-else\n-  ac_have_decl=0\n-fi\n-\n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_DECL_PTRACE $ac_have_decl\n-_ACEOF\n-if test $ac_have_decl = 1; then :\n-\n-else\n-\n-  : ${gdb_cv_func_ptrace_ret='int'}\n-  : ${gdb_cv_func_ptrace_args='int,int,long,long'}\n-\n-fi\n \n # Check return type.  Varargs (used on GNU/Linux) conflict with the\n # empty argument list, so check for that explicitly."
    },
    {
      "sha": "7631b2d1e8e1ab4f8c522c4491cbf7023521392a",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-20  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* config.in: Re-generate.\n+\t* configure: Re-generate.\n+\n 2020-03-17  Kamil Rytarowski  <n54@gmx.com>\n \n \t* common-defs.h: Include alloca.h if HAVE_ALLOCA_H is defined."
    },
    {
      "sha": "94e90ecc54516f21e384d38b0a0fa94be8292a84",
      "filename": "gdbsupport/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbsupport/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbsupport/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/config.in?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -43,10 +43,6 @@\n /* Define to 1 if you have the declaration of `ffs', and to 0 if you don't. */\n #undef HAVE_DECL_FFS\n \n-/* Define to 1 if you have the declaration of `ptrace', and to 0 if you don't.\n-   */\n-#undef HAVE_DECL_PTRACE\n-\n /* Define to 1 if you have the declaration of `snprintf', and to 0 if you\n    don't. */\n #undef HAVE_DECL_SNPRINTF"
    },
    {
      "sha": "186cac6d574575d38d32768dfa06033287665cc1",
      "filename": "gdbsupport/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbsupport/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6/gdbsupport/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/configure?ref=c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "patch": "@@ -10666,26 +10666,6 @@ gdb_ptrace_headers='\n # include <unistd.h>\n #endif\n '\n-# There is no point in checking if we don't have a prototype.\n-ac_fn_c_check_decl \"$LINENO\" \"ptrace\" \"ac_cv_have_decl_ptrace\" \"$gdb_ptrace_headers\n-\"\n-if test \"x$ac_cv_have_decl_ptrace\" = xyes; then :\n-  ac_have_decl=1\n-else\n-  ac_have_decl=0\n-fi\n-\n-cat >>confdefs.h <<_ACEOF\n-#define HAVE_DECL_PTRACE $ac_have_decl\n-_ACEOF\n-if test $ac_have_decl = 1; then :\n-\n-else\n-\n-  : ${gdb_cv_func_ptrace_ret='int'}\n-  : ${gdb_cv_func_ptrace_args='int,int,long,long'}\n-\n-fi\n \n # Check return type.  Varargs (used on GNU/Linux) conflict with the\n # empty argument list, so check for that explicitly."
    }
  ]
}