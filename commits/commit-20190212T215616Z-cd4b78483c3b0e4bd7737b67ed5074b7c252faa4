{
  "sha": "cd4b78483c3b0e4bd7737b67ed5074b7c252faa4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Q0Yjc4NDgzYzNiMGU0YmQ3NzM3YjY3ZWQ1MDc0YjdjMjUyZmFhNA==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-02-12T21:56:16Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-02-12T21:56:16Z"
    },
    "message": "Use child_path to determine if an object file is under a sysroot.\n\nThis fixes the case where the sysroot happens to end in a trailing\n'/'.  Note that the path returned from child_path always skips over\nthe directory separator at the start of the base path, so a separator\nmust always be explicitly added before the base path.\n\ngdb/ChangeLog:\n\n\t* symfile.c (find_separate_debug_file): Use child_path to\n\tdetermine if an object file is under a sysroot.",
    "tree": {
      "sha": "d27ed3d4255ec14b7fc0846bb74ae16609d2a36f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d27ed3d4255ec14b7fc0846bb74ae16609d2a36f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "efac4bfe0b2bdd21a27c94ca3464046e9c23f0e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/efac4bfe0b2bdd21a27c94ca3464046e9c23f0e4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/efac4bfe0b2bdd21a27c94ca3464046e9c23f0e4"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 12,
    "deletions": 5
  },
  "files": [
    {
      "sha": "de88a210b4b4226635ca19e22c11f7b66ba9e5f7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cd4b78483c3b0e4bd7737b67ed5074b7c252faa4",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-12  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* symfile.c (find_separate_debug_file): Use child_path to\n+\tdetermine if an object file is under a sysroot.\n+\n 2019-02-12  John Baldwin  <jhb@FreeBSD.org>\n \n \t* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add"
    },
    {
      "sha": "ffcba1a0908afae42fcc4ca5470bab36b90997ac",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd4b78483c3b0e4bd7737b67ed5074b7c252faa4/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=cd4b78483c3b0e4bd7737b67ed5074b7c252faa4",
      "patch": "@@ -57,6 +57,7 @@\n #include \"gdb_bfd.h\"\n #include \"cli/cli-utils.h\"\n #include \"common/byte-vector.h\"\n+#include \"common/pathstuff.h\"\n #include \"common/selftest.h\"\n #include \"cli/cli-style.h\"\n #include \"common/forward-scope-exit.h\"\n@@ -1452,16 +1453,16 @@ find_separate_debug_file (const char *dir,\n       if (separate_debug_file_exists (debugfile, crc32, objfile))\n \treturn debugfile;\n \n+      const char *base_path;\n       if (canon_dir != NULL\n-\t  && filename_ncmp (canon_dir, gdb_sysroot,\n-\t\t\t    strlen (gdb_sysroot)) == 0\n-\t  && IS_DIR_SEPARATOR (canon_dir[strlen (gdb_sysroot)]))\n+\t  && (base_path = child_path (gdb_sysroot, canon_dir)) != NULL)\n \t{\n \t  /* If the file is in the sysroot, try using its base path in\n \t     the global debugfile directory.  */\n \t  debugfile = target_prefix ? \"target:\" : \"\";\n \t  debugfile += debugdir.get ();\n-\t  debugfile += (canon_dir + strlen (gdb_sysroot));\n+\t  debugfile += \"/\";\n+\t  debugfile += base_path;\n \t  debugfile += \"/\";\n \t  debugfile += debuglink;\n \n@@ -1473,7 +1474,8 @@ find_separate_debug_file (const char *dir,\n \t  debugfile = target_prefix ? \"target:\" : \"\";\n \t  debugfile += gdb_sysroot;\n \t  debugfile += debugdir.get ();\n-\t  debugfile += (canon_dir + strlen (gdb_sysroot));\n+\t  debugfile += \"/\";\n+\t  debugfile += base_path;\n \t  debugfile += \"/\";\n \t  debugfile += debuglink;\n "
    }
  ]
}