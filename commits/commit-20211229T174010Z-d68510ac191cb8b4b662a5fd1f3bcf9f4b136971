{
  "sha": "d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
  "node_id": "C_kwDOANOeidoAKGQ2ODUxMGFjMTkxY2I4YjRiNjYyYTVmZDFmM2JjZjlmNGIxMzY5NzE",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-26T20:41:36Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-29T17:40:10Z"
    },
    "message": "Use correct stream for process record output\n\nThe process record code often emits unfiltered output.  In some cases,\nthis output ought to go to gdb_stderr (but see below).  In other\ncases, the output is guarded by a logging variable and so ought to go\nto gdb_stdlog.  This patch makes these changes.\n\nNote that in many cases, the output to stderr is followed by a\n\"return -1\", which is how process record indicates an error.  It seems\nto me that calling error here would be preferable, because, in many\ncases, that's all the caller does when it sees a -1.  However, I\nhaven't made this change.\n\nThis is part of PR gdb/7233.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=7233",
    "tree": {
      "sha": "ab8d361f18255facf28e086d9a102515e123fa13",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ab8d361f18255facf28e086d9a102515e123fa13"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0fed74615b0f263c359a13a7a17ade36a986ddd1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0fed74615b0f263c359a13a7a17ade36a986ddd1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0fed74615b0f263c359a13a7a17ade36a986ddd1"
    }
  ],
  "stats": {
    "total": 197,
    "additions": 113,
    "deletions": 84
  },
  "files": [
    {
      "sha": "2480c037d0b6123ca9589e3d77c7b8b22e09c6d3",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -1489,9 +1489,10 @@ aarch64_linux_syscall_record (struct regcache *regcache,\n \n   if (syscall_gdb < 0)\n     {\n-      printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t   \"support syscall number %s\\n\"),\n-\t\t\t plongest (svc_number));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record and replay target doesn't \"\n+\t\t\t    \"support syscall number %s\\n\"),\n+\t\t\t  plongest (svc_number));\n       return -1;\n     }\n "
    },
    {
      "sha": "1dd5a51624ccbbeccc46357766837ae6d90837f4",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -4657,10 +4657,11 @@ aarch64_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n   ret = aarch64_record_decode_insn_handler (&aarch64_record);\n   if (ret == AARCH64_RECORD_UNSUPPORTED)\n     {\n-      printf_unfiltered (_(\"Process record does not support instruction \"\n-\t\t\t   \"0x%0x at address %s.\\n\"),\n-\t\t\t aarch64_record.aarch64_insn,\n-\t\t\t paddress (gdbarch, insn_addr));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support instruction \"\n+\t\t\t    \"0x%0x at address %s.\\n\"),\n+\t\t\t  aarch64_record.aarch64_insn,\n+\t\t\t  paddress (gdbarch, insn_addr));\n       ret = -1;\n     }\n "
    },
    {
      "sha": "d9b8b7f3c9f7642d4be3a3ce5dcea9bb0d7001c6",
      "filename": "gdb/amd64-linux-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/amd64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/amd64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-linux-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -1496,9 +1496,10 @@ amd64_linux_syscall_record_common (struct regcache *regcache,\n \n   if (syscall_gdb == gdb_sys_no_syscall)\n     {\n-      printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t   \"support syscall number %s\\n\"), \n-\t\t\t pulongest (syscall_native));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record and replay target doesn't \"\n+\t\t\t    \"support syscall number %s\\n\"), \n+\t\t\t  pulongest (syscall_native));\n       return -1;\n     }\n   else"
    },
    {
      "sha": "82a1b4ce42ebded1f2e318bdb445bccd47dc7034",
      "filename": "gdb/arm-linux-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/arm-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/arm-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-linux-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -1650,9 +1650,10 @@ arm_linux_syscall_record (struct regcache *regcache, unsigned long svc_number)\n \n   if (syscall_gdb == gdb_sys_no_syscall)\n     {\n-      printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t   \"support syscall number %s\\n\"),\n-\t\t\t   plongest (svc_number));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record and replay target doesn't \"\n+\t\t\t    \"support syscall number %s\\n\"),\n+\t\t\t  plongest (svc_number));\n       return -1;\n     }\n "
    },
    {
      "sha": "e4af38ce8b429ea5149de3fee00628be1bef5109",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 22,
      "deletions": 18,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -11328,9 +11328,10 @@ arm_record_b_bl (insn_decode_record *arm_insn_r)\n static int\n arm_record_unsupported_insn (insn_decode_record *arm_insn_r)\n {\n-  printf_unfiltered (_(\"Process record does not support instruction \"\n-\t\t       \"0x%0x at address %s.\\n\"),arm_insn_r->arm_insn,\n-\t\t     paddress (arm_insn_r->gdbarch, arm_insn_r->this_addr));\n+  fprintf_unfiltered (gdb_stderr,\n+\t\t      _(\"Process record does not support instruction \"\n+\t\t\t\"0x%0x at address %s.\\n\"),arm_insn_r->arm_insn,\n+\t\t      paddress (arm_insn_r->gdbarch, arm_insn_r->this_addr));\n \n   return -1;\n }\n@@ -11916,7 +11917,7 @@ arm_record_coproc_data_proc (insn_decode_record *arm_insn_r)\n \t}\n       else\n \t{\n-\t  printf_unfiltered (_(\"no syscall record support\\n\"));\n+\t  fprintf_unfiltered (gdb_stderr, _(\"no syscall record support\\n\"));\n \t  return -1;\n \t}\n     }\n@@ -12348,11 +12349,12 @@ thumb_record_misc (insn_decode_record *thumb_insn_r)\n \t  record_buf[1] = ARM_LR_REGNUM;\n \t  thumb_insn_r->reg_rec_count = 2;\n \t  /* We need to save SPSR value, which is not yet done.  */\n-\t  printf_unfiltered (_(\"Process record does not support instruction \"\n-\t\t\t       \"0x%0x at address %s.\\n\"),\n-\t\t\t     thumb_insn_r->arm_insn,\n-\t\t\t     paddress (thumb_insn_r->gdbarch,\n-\t\t\t\t       thumb_insn_r->this_addr));\n+\t  fprintf_unfiltered (gdb_stderr,\n+\t\t\t      _(\"Process record does not support instruction \"\n+\t\t\t\t\"0x%0x at address %s.\\n\"),\n+\t\t\t      thumb_insn_r->arm_insn,\n+\t\t\t      paddress (thumb_insn_r->gdbarch,\n+\t\t\t\t\tthumb_insn_r->this_addr));\n \t  return -1;\n \n \tcase 0xf:\n@@ -12440,7 +12442,7 @@ thumb_record_ldm_stm_swi (insn_decode_record *thumb_insn_r)\n \t  }\n \telse\n \t  {\n-\t    printf_unfiltered (_(\"no syscall record support\\n\"));\n+\t    fprintf_unfiltered (gdb_stderr, _(\"no syscall record support\\n\"));\n \t    return -1;\n \t  }\n     }\n@@ -13351,10 +13353,11 @@ decode_insn (abstract_memory_reader &reader, insn_decode_record *arm_record,\n     {\n       if (record_debug)\n \t{\n-\t  printf_unfiltered (_(\"Process record: error reading memory at \"\n-\t\t\t       \"addr %s len = %d.\\n\"),\n-\t\t\t     paddress (arm_record->gdbarch,\n-\t\t\t\t       arm_record->this_addr), insn_size);\n+\t  fprintf_unfiltered (gdb_stdlog,\n+\t\t\t      _(\"Process record: error reading memory at \"\n+\t\t\t\t\"addr %s len = %d.\\n\"),\n+\t\t\t      paddress (arm_record->gdbarch,\n+\t\t\t\t\tarm_record->this_addr), insn_size);\n \t}\n       return -1;\n     }\n@@ -13619,10 +13622,11 @@ arm_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n     {\n       if (record_debug)\n \t{\n-\t  printf_unfiltered (_(\"Process record: error reading memory at \"\n-\t\t\t       \"addr %s len = %d.\\n\"),\n-\t\t\t     paddress (arm_record.gdbarch,\n-\t\t\t\t       arm_record.this_addr), 2);\n+\t  fprintf_unfiltered (gdb_stdlog,\n+\t\t\t      _(\"Process record: error reading memory at \"\n+\t\t\t\t\"addr %s len = %d.\\n\"),\n+\t\t\t      paddress (arm_record.gdbarch,\n+\t\t\t\t\tarm_record.this_addr), 2);\n \t}\n       return -1;\n     }"
    },
    {
      "sha": "e4e0e6cdbbedded814509d8ca9946d019b3ccad5",
      "filename": "gdb/i386-linux-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/i386-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/i386-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-linux-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -466,9 +466,10 @@ i386_linux_intx80_sysenter_syscall_record (struct regcache *regcache)\n \n   if (syscall_gdb < 0)\n     {\n-      printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t   \"support syscall number %s\\n\"), \n-\t\t\t plongest (syscall_native));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record and replay target doesn't \"\n+\t\t\t    \"support syscall number %s\\n\"), \n+\t\t\t  plongest (syscall_native));\n       return -1;\n     }\n "
    },
    {
      "sha": "802205ecf4c8ced3617dc72a9cd765394fa6c9b6",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 39,
      "deletions": 27,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -6864,8 +6864,9 @@ Do you want to stop the program?\"),\n \n       /* XXX */\n     case 0xcc:    /* int3 */\n-      printf_unfiltered (_(\"Process record does not support instruction \"\n-\t\t\t   \"int3.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support instruction \"\n+\t\t\t    \"int3.\\n\"));\n       ir.addr -= 1;\n       goto no_support;\n       break;\n@@ -6881,9 +6882,10 @@ Do you want to stop the program?\"),\n \tif (interrupt != 0x80\n \t    || tdep->i386_intx80_record == NULL)\n \t  {\n-\t    printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t\t \"instruction int 0x%02x.\\n\"),\n-\t\t\t       interrupt);\n+\t    fprintf_unfiltered (gdb_stderr,\n+\t\t\t\t_(\"Process record does not support \"\n+\t\t\t\t  \"instruction int 0x%02x.\\n\"),\n+\t\t\t\tinterrupt);\n \t    ir.addr -= 2;\n \t    goto no_support;\n \t  }\n@@ -6895,8 +6897,9 @@ Do you want to stop the program?\"),\n \n       /* XXX */\n     case 0xce:    /* into */\n-      printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t   \"instruction into.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support \"\n+\t\t\t    \"instruction into.\\n\"));\n       ir.addr -= 1;\n       goto no_support;\n       break;\n@@ -6906,8 +6909,9 @@ Do you want to stop the program?\"),\n       break;\n \n     case 0x62:    /* bound */\n-      printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t   \"instruction bound.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support \"\n+\t\t\t    \"instruction bound.\\n\"));\n       ir.addr -= 1;\n       goto no_support;\n       break;\n@@ -6942,15 +6946,17 @@ Do you want to stop the program?\"),\n       break;\n \n     case 0x0f30:    /* wrmsr */\n-      printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t   \"instruction wrmsr.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support \"\n+\t\t\t    \"instruction wrmsr.\\n\"));\n       ir.addr -= 2;\n       goto no_support;\n       break;\n \n     case 0x0f32:    /* rdmsr */\n-      printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t   \"instruction rdmsr.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support \"\n+\t\t\t    \"instruction rdmsr.\\n\"));\n       ir.addr -= 2;\n       goto no_support;\n       break;\n@@ -6970,8 +6976,9 @@ Do you want to stop the program?\"),\n \t  }\n \tif (tdep->i386_sysenter_record == NULL)\n \t  {\n-\t    printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t\t \"instruction sysenter.\\n\"));\n+\t    fprintf_unfiltered (gdb_stderr,\n+\t\t\t\t_(\"Process record does not support \"\n+\t\t\t\t  \"instruction sysenter.\\n\"));\n \t    ir.addr -= 2;\n \t    goto no_support;\n \t  }\n@@ -6982,8 +6989,9 @@ Do you want to stop the program?\"),\n       break;\n \n     case 0x0f35:    /* sysexit */\n-      printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t   \"instruction sysexit.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support \"\n+\t\t\t    \"instruction sysexit.\\n\"));\n       ir.addr -= 2;\n       goto no_support;\n       break;\n@@ -6993,8 +7001,9 @@ Do you want to stop the program?\"),\n \tint ret;\n \tif (tdep->i386_syscall_record == NULL)\n \t  {\n-\t    printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t\t \"instruction syscall.\\n\"));\n+\t    fprintf_unfiltered (gdb_stderr,\n+\t\t\t\t_(\"Process record does not support \"\n+\t\t\t\t  \"instruction syscall.\\n\"));\n \t    ir.addr -= 2;\n \t    goto no_support;\n \t  }\n@@ -7005,8 +7014,9 @@ Do you want to stop the program?\"),\n       break;\n \n     case 0x0f07:    /* sysret */\n-      printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t   \"instruction sysret.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support \"\n+\t\t\t    \"instruction sysret.\\n\"));\n       ir.addr -= 2;\n       goto no_support;\n       break;\n@@ -7019,8 +7029,9 @@ Do you want to stop the program?\"),\n       break;\n \n     case 0xf4:    /* hlt */\n-      printf_unfiltered (_(\"Process record does not support \"\n-\t\t\t   \"instruction hlt.\\n\"));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record does not support \"\n+\t\t\t    \"instruction hlt.\\n\"));\n       ir.addr -= 1;\n       goto no_support;\n       break;\n@@ -8138,10 +8149,11 @@ Do you want to stop the program?\"),\n   return 0;\n \n  no_support:\n-  printf_unfiltered (_(\"Process record does not support instruction 0x%02x \"\n-\t\t       \"at address %s.\\n\"),\n-\t\t     (unsigned int) (opcode),\n-\t\t     paddress (gdbarch, ir.orig_addr));\n+  fprintf_unfiltered (gdb_stderr,\n+\t\t      _(\"Process record does not support instruction 0x%02x \"\n+\t\t\t\"at address %s.\\n\"),\n+\t\t      (unsigned int) (opcode),\n+\t\t      paddress (gdbarch, ir.orig_addr));\n   return -1;\n }\n "
    },
    {
      "sha": "4be187ce21591392810641cbb18f394616f41673",
      "filename": "gdb/linux-record.c",
      "status": "modified",
      "additions": 18,
      "deletions": 13,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/linux-record.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/linux-record.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-record.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -492,15 +492,17 @@ record_linux_system_call (enum gdb_syscall syscall,\n \t}\n       else if (tmpulongest == tdep->ioctl_TIOCSERGSTRUCT)\n \t{\n-\t  printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t       \"support ioctl request TIOCSERGSTRUCT\\n\"));\n+\t  fprintf_unfiltered (gdb_stderr,\n+\t\t\t      _(\"Process record and replay target doesn't \"\n+\t\t\t\t\"support ioctl request TIOCSERGSTRUCT\\n\"));\n \t  return 1;\n \t}\n       else\n \t{\n-\t  printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t       \"support ioctl request 0x%s.\\n\"),\n-\t\t\t     OUTPUT_REG (tmpulongest, tdep->arg2));\n+\t  fprintf_unfiltered (gdb_stderr,\n+\t\t\t      _(\"Process record and replay target doesn't \"\n+\t\t\t\t\"support ioctl request 0x%s.\\n\"),\n+\t\t\t      OUTPUT_REG (tmpulongest, tdep->arg2));\n \t  return 1;\n \t}\n       break;\n@@ -1008,9 +1010,10 @@ Do you want to stop the program?\"),\n \t  }\n \t  break;\n \tdefault:\n-\t  printf_unfiltered (_(\"Process record and replay target \"\n-\t\t\t       \"doesn't support socketcall call 0x%s\\n\"),\n-\t\t\t     OUTPUT_REG (tmpulongest, tdep->arg1));\n+\t  fprintf_unfiltered (gdb_stderr,\n+\t\t\t      _(\"Process record and replay target \"\n+\t\t\t\t\"doesn't support socketcall call 0x%s\\n\"),\n+\t\t\t      OUTPUT_REG (tmpulongest, tdep->arg1));\n \t  return -1;\n \t  break;\n \t}\n@@ -1148,9 +1151,10 @@ Do you want to stop the program?\"),\n \t  break;\n \tdefault:\n \t  /* XXX RECORD_SEMCTL still not supported.  */\n-\t  printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t       \"support ipc number %s\\n\"),\n-\t\t\t     pulongest (tmpulongest));\n+\t  fprintf_unfiltered (gdb_stderr,\n+\t\t\t      _(\"Process record and replay target doesn't \"\n+\t\t\t\t\"support ipc number %s\\n\"),\n+\t\t\t      pulongest (tmpulongest));\n \t  break;\n \t}\n       break;\n@@ -2032,8 +2036,9 @@ Do you want to stop the program?\"),\n       break;\n \n     default:\n-      printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t   \"support syscall number %d\\n\"), syscall);\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record and replay target doesn't \"\n+\t\t\t    \"support syscall number %d\\n\"), syscall);\n       return -1;\n       break;\n     }"
    },
    {
      "sha": "949a18d5241a25cdfc2088b38435f45d3e8b857a",
      "filename": "gdb/moxie-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/moxie-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/moxie-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/moxie-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -279,9 +279,10 @@ moxie_process_readu (CORE_ADDR addr, gdb_byte *buf,\n   if (target_read_memory (addr, buf, length))\n     {\n       if (record_debug)\n-\tprintf_unfiltered (_(\"Process record: error reading memory at \"\n-\t\t\t     \"addr 0x%s len = %d.\\n\"),\n-\t\t\t   paddress (target_gdbarch (), addr), length);\n+\tfprintf_unfiltered (gdb_stderr,\n+\t\t\t    _(\"Process record: error reading memory at \"\n+\t\t\t      \"addr 0x%s len = %d.\\n\"),\n+\t\t\t    paddress (target_gdbarch (), addr), length);\n       return -1;\n     }\n "
    },
    {
      "sha": "e5206b59bc35980d18cb6fd45ac8c92846b4546d",
      "filename": "gdb/ppc-linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/ppc-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/ppc-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-linux-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -1427,8 +1427,9 @@ ppc_linux_syscall_record (struct regcache *regcache)\n \n   if (syscall_gdb < 0)\n     {\n-      printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t   \"support syscall number %d\\n\"), (int) scnum);\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record and replay target doesn't \"\n+\t\t\t    \"support syscall number %d\\n\"), (int) scnum);\n       return 0;\n     }\n "
    },
    {
      "sha": "ad80c695f826a509673f2d44a700ee980d2e5dd7",
      "filename": "gdb/rs6000-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/rs6000-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/rs6000-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rs6000-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -5986,7 +5986,7 @@ ppc_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t}\n       else\n \t{\n-\t  printf_unfiltered (_(\"no syscall record support\\n\"));\n+\t  fprintf_unfiltered (gdb_stderr, _(\"no syscall record support\\n\"));\n \t  return -1;\n \t}\n       break;"
    },
    {
      "sha": "7a43e275d7ba79f824ddc56f900b5d17b2755c3f",
      "filename": "gdb/s390-linux-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/s390-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/s390-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-linux-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -815,9 +815,10 @@ s390_linux_syscall_record (struct regcache *regcache, LONGEST syscall_native)\n \n   if (syscall_gdb < 0)\n     {\n-      printf_unfiltered (_(\"Process record and replay target doesn't \"\n-\t\t\t   \"support syscall number %s\\n\"),\n-\t\t\t plongest (syscall_native));\n+      fprintf_unfiltered (gdb_stderr,\n+\t\t\t  _(\"Process record and replay target doesn't \"\n+\t\t\t    \"support syscall number %s\\n\"),\n+\t\t\t  plongest (syscall_native));\n       return -1;\n     }\n "
    },
    {
      "sha": "2637d713816440fcbc05434d40e077bcc4da96eb",
      "filename": "gdb/s390-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/s390-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d68510ac191cb8b4b662a5fd1f3bcf9f4b136971/gdb/s390-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-tdep.c?ref=d68510ac191cb8b4b662a5fd1f3bcf9f4b136971",
      "patch": "@@ -3103,7 +3103,7 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \t}\n       else\n \t{\n-\t  printf_unfiltered (_(\"no syscall record support\\n\"));\n+\t  fprintf_unfiltered (gdb_stderr, _(\"no syscall record support\\n\"));\n \t  return -1;\n \t}\n       break;"
    }
  ]
}