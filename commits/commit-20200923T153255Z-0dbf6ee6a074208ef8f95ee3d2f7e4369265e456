{
  "sha": "0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGRiZjZlZTZhMDc0MjA4ZWY4Zjk1ZWUzZDJmN2U0MzY5MjY1ZTQ1Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-23T15:32:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-23T15:32:55Z"
    },
    "message": "Use new/delete for do_module_cleanup\n\nThis changes do_module_cleanup to use new and delete.  It also removes\nthe use of the struct hack from this object -- this requires more\nallocations for now, but this will be removed in a subsequent patch.\n\ngdb/ChangeLog\n2020-09-23  Tom Tromey  <tom@tromey.com>\n\n\t* compile/compile-object-run.c (struct do_module_cleanup): Add\n\tconstructor, destructor.\n\t<objfile_name_string>: Don't use struct hack.\n\t(do_module_cleanup): Use delete.\n\t(compile_object_run): Use new.",
    "tree": {
      "sha": "3f47a6acb2a060b47a28b125409127d61cbc8967",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3f47a6acb2a060b47a28b125409127d61cbc8967"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ebe824f5dcf96c8f70e07affb44c3a1679849e28",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ebe824f5dcf96c8f70e07affb44c3a1679849e28",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ebe824f5dcf96c8f70e07affb44c3a1679849e28"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 26,
    "deletions": 10
  },
  "files": [
    {
      "sha": "f3799059aa4ef770f7934969a611699e76bf3584",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-23  Tom Tromey  <tom@tromey.com>\n+\n+\t* compile/compile-object-run.c (struct do_module_cleanup): Add\n+\tconstructor, destructor.\n+\t<objfile_name_string>: Don't use struct hack.\n+\t(do_module_cleanup): Use delete.\n+\t(compile_object_run): Use new.\n+\n 2020-09-23  Tom Tromey  <tom@tromey.com>\n \n \t* compile/compile-cplus-types.c"
    },
    {
      "sha": "31731b466c9738d8ae73e94201e0c4f2e8bc6207",
      "filename": "gdb/compile/compile-object-run.c",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456/gdb/compile/compile-object-run.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456/gdb/compile/compile-object-run.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-run.c?ref=0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
      "patch": "@@ -32,12 +32,23 @@\n \n struct do_module_cleanup\n {\n+  do_module_cleanup () = default;\n+\n+  ~do_module_cleanup ()\n+  {\n+    delete munmap_list_head;\n+    xfree (source_file);\n+    xfree (objfile_name_string);\n+  }\n+\n+  DISABLE_COPY_AND_ASSIGN (do_module_cleanup);\n+\n   /* Boolean to set true upon a call of do_module_cleanup.\n      The pointer may be NULL.  */\n   int *executedp;\n \n   /* .c file OBJFILE was built from.  It needs to be xfree-d.  */\n-  char *source_file;\n+  char *source_file = nullptr;\n \n   /* Copy from struct compile_module.  */\n   enum compile_i_scope_types scope;\n@@ -48,10 +59,10 @@ struct do_module_cleanup\n   CORE_ADDR out_value_addr;\n \n   /* Copy from struct compile_module.  */\n-  struct munmap_list *munmap_list_head;\n+  struct munmap_list *munmap_list_head = nullptr;\n \n   /* objfile_name of our objfile.  */\n-  char objfile_name_string[1];\n+  char *objfile_name_string = nullptr;\n };\n \n /* Cleanup everything after the inferior function dummy frame gets\n@@ -96,13 +107,11 @@ do_module_cleanup (void *arg, int registers_valid)\n \n   /* Delete the .c file.  */\n   unlink (data->source_file);\n-  xfree (data->source_file);\n-\n-  delete data->munmap_list_head;\n \n   /* Delete the .o file.  */\n   unlink (data->objfile_name_string);\n-  xfree (data);\n+\n+  delete data;\n }\n \n /* Create a copy of FUNC_TYPE that is independent of OBJFILE.  */\n@@ -132,11 +141,10 @@ compile_object_run (struct compile_module *module)\n   CORE_ADDR regs_addr = module->regs_addr;\n   struct objfile *objfile = module->objfile;\n \n-  data = (struct do_module_cleanup *) xmalloc (sizeof (*data)\n-\t\t\t\t\t       + strlen (objfile_name_s));\n+  data = new struct do_module_cleanup;\n   data->executedp = &executed;\n   data->source_file = xstrdup (module->source_file);\n-  strcpy (data->objfile_name_string, objfile_name_s);\n+  data->objfile_name_string = xstrdup (objfile_name_s);\n   data->scope = module->scope;\n   data->scope_data = module->scope_data;\n   data->out_value_type = module->out_value_type;"
    }
  ]
}