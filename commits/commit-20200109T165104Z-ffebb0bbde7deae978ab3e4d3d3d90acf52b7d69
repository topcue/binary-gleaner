{
  "sha": "ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmZlYmIwYmJkZTdkZWFlOTc4YWIzZTRkM2QzZDkwYWNmNTJiN2Q2OQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-09T16:51:04Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-09T16:51:04Z"
    },
    "message": "Fix an attempt to free a static pointer when using objcopy's symbol addition feature.\n\n\tPR 25220\n\t* objcopy.c (empty_name): New variable.\n\t(need_sym_before): Prevent an attempt to free a static variable.\n\t(filter_symbols): Avoid strcmp test by checking for pointer\n\tequality.",
    "tree": {
      "sha": "946ffa070c8a85a538d86c3576a6e7fab0eedd22",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/946ffa070c8a85a538d86c3576a6e7fab0eedd22"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b899eb3bb807be1094fde9a2f1c8628232bc0743",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b899eb3bb807be1094fde9a2f1c8628232bc0743",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b899eb3bb807be1094fde9a2f1c8628232bc0743"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 18,
    "deletions": 5
  },
  "files": [
    {
      "sha": "b3c499d466e9502ea4b6a2018528701188c373e0",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69",
      "patch": "@@ -1,3 +1,11 @@\n+2020-01-09  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25220\n+\t* objcopy.c (empty_name): New variable.\n+\t(need_sym_before): Prevent an attempt to free a static variable.\n+\t(filter_symbols): Avoid strcmp test by checking for pointer\n+\tequality.\n+\n 2020-01-09  Nick Clifton  <nickc@redhat.com>\n \n \t* po/zh_TW.po: Updated Traditional Chinese translation."
    },
    {
      "sha": "ef3b693be4916106d4afd132f50ec90b10b125dc",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=ffebb0bbde7deae978ab3e4d3d3d90acf52b7d69",
      "patch": "@@ -68,7 +68,7 @@ struct addsym_node\n   long      symval;\n   flagword  flags;\n   char *    section;\n-  char *    othersym;\n+  const char *  othersym;\n };\n \n typedef struct section_rename\n@@ -808,7 +808,7 @@ parse_flags (const char *s)\n    string can't be parsed.  */\n \n static flagword\n-parse_symflags (const char *s, char **other)\n+parse_symflags (const char *s, const char **other)\n {\n   flagword ret;\n   const char *snext;\n@@ -1453,6 +1453,9 @@ is_hidden_symbol (asymbol *sym)\n   return FALSE;\n }\n \n+/* Empty name is hopefully never a valid symbol name.  */\n+static const char * empty_name = \"\";\n+\n static bfd_boolean\n need_sym_before (struct addsym_node **node, const char *sym)\n {\n@@ -1464,10 +1467,12 @@ need_sym_before (struct addsym_node **node, const char *sym)\n     {\n       if (!ptr->othersym)\n \tbreak;\n+      if (ptr->othersym == empty_name)\n+\tcontinue;\n       else if (strcmp (ptr->othersym, sym) == 0)\n \t{\n-\t  free (ptr->othersym);\n-\t  ptr->othersym = \"\"; /* Empty name is hopefully never a valid symbol name.  */\n+\t  free ((char *) ptr->othersym);\n+\t  ptr->othersym = empty_name;\n \t  *node = ptr;\n \t  return TRUE;\n \t}\n@@ -1695,7 +1700,7 @@ filter_symbols (bfd *abfd, bfd *obfd, asymbol **osyms,\n \t{\n \t  if (ptr->othersym)\n \t    {\n-\t      if (strcmp (ptr->othersym, \"\"))\n+\t      if (ptr->othersym != empty_name)\n \t\tfatal (_(\"'before=%s' not found\"), ptr->othersym);\n \t    }\n \t  else"
    }
  ]
}