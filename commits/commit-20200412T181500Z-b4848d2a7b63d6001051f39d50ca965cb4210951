{
  "sha": "b4848d2a7b63d6001051f39d50ca965cb4210951",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjQ4NDhkMmE3YjYzZDYwMDEwNTFmMzlkNTBjYTk2NWNiNDIxMDk1MQ==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-12T17:24:01Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-12T18:15:00Z"
    },
    "message": "Implement \"info proc cwd\" for NetBSD\n\nAdd nbsd_pid_to_cwd() to query the program current directory.\n\ngdb/ChangeLog:\n\n\t* nbsd-nat.c (nbsd_pid_to_cwd): Add.\n\t(nbsd_nat_target::info_proc): Add do_cwd.",
    "tree": {
      "sha": "8e3346b5c0a11f7621843a7d78e907a87b1d336e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8e3346b5c0a11f7621843a7d78e907a87b1d336e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b4848d2a7b63d6001051f39d50ca965cb4210951",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4848d2a7b63d6001051f39d50ca965cb4210951",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b4848d2a7b63d6001051f39d50ca965cb4210951",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4848d2a7b63d6001051f39d50ca965cb4210951/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51c133d547e21421c678276b0cb53383f5706781",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51c133d547e21421c678276b0cb53383f5706781",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51c133d547e21421c678276b0cb53383f5706781"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 31,
    "deletions": 0
  },
  "files": [
    {
      "sha": "9e49cf9cf97f49835049666d86df8abc98ecd034",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b4848d2a7b63d6001051f39d50ca965cb4210951/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b4848d2a7b63d6001051f39d50ca965cb4210951/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b4848d2a7b63d6001051f39d50ca965cb4210951",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-12  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* nbsd-nat.c (nbsd_pid_to_cwd): Add.\n+        (nbsd_nat_target::info_proc): Add do_cwd.\n+\n 2020-04-12  Kamil Rytarowski  <n54@gmx.com>\n \n \t* nbsd-nat.c (nbsd_nat_target::info_proc): Add do_exe."
    },
    {
      "sha": "1bb35f82c1853cd9f6e37eceb6c0f10f6341d27c",
      "filename": "gdb/nbsd-nat.c",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b4848d2a7b63d6001051f39d50ca965cb4210951/gdb/nbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b4848d2a7b63d6001051f39d50ca965cb4210951/gdb/nbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nbsd-nat.c?ref=b4848d2a7b63d6001051f39d50ca965cb4210951",
      "patch": "@@ -44,6 +44,20 @@ nbsd_nat_target::pid_to_exec_file (int pid)\n   return buf;\n }\n \n+/* Return the current directory for the process identified by PID.  */\n+\n+static std::string\n+nbsd_pid_to_cwd (int pid)\n+{\n+  char buf[PATH_MAX];\n+  size_t buflen;\n+  int mib[4] = {CTL_KERN, KERN_PROC_ARGS, pid, KERN_PROC_CWD};\n+  buflen = sizeof (buf);\n+  if (sysctl (mib, ARRAY_SIZE (mib), buf, &buflen, NULL, 0))\n+    return \"\";\n+  return buf;\n+}\n+\n /* Generic thread (LWP) lister within a specified process.  The callback\n    parameters is a C++ function that is called for each detected thread.  */\n \n@@ -299,6 +313,7 @@ bool\n nbsd_nat_target::info_proc (const char *args, enum info_proc_what what)\n {\n   pid_t pid;\n+  bool do_cwd = false;\n   bool do_exe = false;\n   bool do_mappings = false;\n \n@@ -310,6 +325,9 @@ nbsd_nat_target::info_proc (const char *args, enum info_proc_what what)\n     case IP_EXE:\n       do_exe = true;\n       break;\n+    case IP_CWD:\n+      do_cwd = true;\n+      break;\n     default:\n       error (_(\"Not supported on this target.\"));\n     }\n@@ -328,6 +346,14 @@ nbsd_nat_target::info_proc (const char *args, enum info_proc_what what)\n \n   printf_filtered (_(\"process %d\\n\"), pid);\n \n+  if (do_cwd)\n+    {\n+      std::string cwd = nbsd_pid_to_cwd (pid);\n+      if (cwd != \"\")\n+\tprintf_filtered (\"cwd = '%s'\\n\", cwd.c_str ());\n+      else\n+\twarning (_(\"unable to fetch current working directory\"));\n+    }\n   if (do_exe)\n     {\n       const char *exe = pid_to_exec_file (pid);"
    }
  ]
}