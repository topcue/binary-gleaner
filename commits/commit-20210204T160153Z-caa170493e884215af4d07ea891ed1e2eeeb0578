{
  "sha": "caa170493e884215af4d07ea891ed1e2eeeb0578",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2FhMTcwNDkzZTg4NDIxNWFmNGQwN2VhODkxZWQxZTJlZWViMDU3OA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-01-27T19:55:45Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-02-04T16:01:53Z"
    },
    "message": "libctf: prohibit nameless ints, floats, typedefs and forwards\n\nNow that \"anonymous typedef nodes\" have been extirpated, we can mandate\nthat things that have names in C must have names in CTF too.  (Unlike\nthe no-forwards embarrassment, the deduplicator does nothing special\nwith names: types that have names in C will have the same name in CTF.\nSo we can assume that the CTF rules and the C rules are the same.)\n\ninclude/ChangeLog\n2021-01-27  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-api.h (ECTF_NONAME): New.\n\t(ECTF_NERR): Adjust.\n\nlibctf/ChangeLog\n2021-01-27  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-create.c (ctf_add_encoded): Add check for non-empty name.\n\t(ctf_add_forward): Likewise.\n\t(ctf_add_typedef): Likewise.",
    "tree": {
      "sha": "0d247c34146921550f50dd93081922fc2096132c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0d247c34146921550f50dd93081922fc2096132c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/caa170493e884215af4d07ea891ed1e2eeeb0578",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/caa170493e884215af4d07ea891ed1e2eeeb0578",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/caa170493e884215af4d07ea891ed1e2eeeb0578",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/caa170493e884215af4d07ea891ed1e2eeeb0578/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "78f28b89e8c7a2c9e262e2819f0da5629f226efc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/78f28b89e8c7a2c9e262e2819f0da5629f226efc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/78f28b89e8c7a2c9e262e2819f0da5629f226efc"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 24,
    "deletions": 4
  },
  "files": [
    {
      "sha": "56a9a6117f5c4c66c8895b5b926dc16f79234c90",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa170493e884215af4d07ea891ed1e2eeeb0578/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa170493e884215af4d07ea891ed1e2eeeb0578/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=caa170493e884215af4d07ea891ed1e2eeeb0578",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_NONAME): New.\n+\t(ECTF_NERR): Adjust.\n+\n 2021-01-26  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-api.h (CTF_LINK_NO_FILTER_REPORTED_SYMS): New."
    },
    {
      "sha": "6dd43aa365f15c9d42a5e8cc049298119b2907b9",
      "filename": "include/ctf-api.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa170493e884215af4d07ea891ed1e2eeeb0578/include/ctf-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa170493e884215af4d07ea891ed1e2eeeb0578/include/ctf-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf-api.h?ref=caa170493e884215af4d07ea891ed1e2eeeb0578",
      "patch": "@@ -240,7 +240,8 @@ typedef struct ctf_snapshot_id\n   _CTF_ITEM (ECTF_NEXT_WRONGFP, \"Iteration entity changed in mid-iterate.\") \\\n   _CTF_ITEM (ECTF_FLAGS, \"CTF header contains flags unknown to libctf.\") \\\n   _CTF_ITEM (ECTF_NEEDSBFD, \"This feature needs a libctf with BFD support.\") \\\n-  _CTF_ITEM (ECTF_INCOMPLETE, \"Type is not a complete type.\")\n+  _CTF_ITEM (ECTF_INCOMPLETE, \"Type is not a complete type.\") \\\n+  _CTF_ITEM (ECTF_NONAME, \"Type name must not be empty.\")\n \n #define\tECTF_BASE\t1000\t/* Base value for libctf errnos.  */\n \n@@ -253,7 +254,7 @@ _CTF_ERRORS\n #undef _CTF_FIRST\n   };\n \n-#define ECTF_NERR (ECTF_INCOMPLETE - ECTF_BASE + 1) /* Count of CTF errors.  */\n+#define ECTF_NERR (ECTF_NONAME - ECTF_BASE + 1) /* Count of CTF errors.  */\n \n /* The CTF data model is inferred to be the caller's data model or the data\n    model of the given object, unless ctf_setmodel is explicitly called.  */"
    },
    {
      "sha": "10178bca86d2cd14ab84da7833e819fdac961bad",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa170493e884215af4d07ea891ed1e2eeeb0578/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa170493e884215af4d07ea891ed1e2eeeb0578/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=caa170493e884215af4d07ea891ed1e2eeeb0578",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (ctf_add_encoded): Add check for non-empty name.\n+\t(ctf_add_forward): Likewise.\n+\t(ctf_add_typedef): Likewise.\n+\n 2021-01-27  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-open.c (init_types): Rip out code to check anonymous typedef"
    },
    {
      "sha": "cf12557b5d54618b571048cd3388164dc5e5e3d8",
      "filename": "libctf/ctf-create.c",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/caa170493e884215af4d07ea891ed1e2eeeb0578/libctf/ctf-create.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/caa170493e884215af4d07ea891ed1e2eeeb0578/libctf/ctf-create.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-create.c?ref=caa170493e884215af4d07ea891ed1e2eeeb0578",
      "patch": "@@ -1595,6 +1595,9 @@ ctf_add_encoded (ctf_dict_t *fp, uint32_t flag,\n   if (ep == NULL)\n     return (ctf_set_errno (fp, EINVAL));\n \n+  if (name == NULL || name[0] == '\\0')\n+    return (ctf_set_errno (fp, ECTF_NONAME));\n+\n   if ((type = ctf_add_generic (fp, flag, name, kind, &dtd)) == CTF_ERR)\n     return CTF_ERR;\t\t/* errno is set for us.  */\n \n@@ -1961,11 +1964,13 @@ ctf_add_forward (ctf_dict_t *fp, uint32_t flag, const char *name,\n   if (!ctf_forwardable_kind (kind))\n     return (ctf_set_errno (fp, ECTF_NOTSUE));\n \n+  if (name == NULL || name[0] == '\\0')\n+    return (ctf_set_errno (fp, ECTF_NONAME));\n+\n   /* If the type is already defined or exists as a forward tag, just\n      return the ctf_id_t of the existing definition.  */\n \n-  if (name != NULL)\n-    type = ctf_lookup_by_rawname (fp, kind, name);\n+  type = ctf_lookup_by_rawname (fp, kind, name);\n \n   if (type)\n     return type;\n@@ -1990,6 +1995,9 @@ ctf_add_typedef (ctf_dict_t *fp, uint32_t flag, const char *name,\n   if (ref == CTF_ERR || ref > CTF_MAX_TYPE)\n     return (ctf_set_errno (fp, EINVAL));\n \n+  if (name == NULL || name[0] == '\\0')\n+    return (ctf_set_errno (fp, ECTF_NONAME));\n+\n   if (ref != 0 && ctf_lookup_by_id (&tmp, ref) == NULL)\n     return CTF_ERR;\t\t/* errno is set for us.  */\n "
    }
  ]
}