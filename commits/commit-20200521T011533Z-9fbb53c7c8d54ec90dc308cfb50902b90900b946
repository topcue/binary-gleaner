{
  "sha": "9fbb53c7c8d54ec90dc308cfb50902b90900b946",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWZiYjUzYzdjOGQ1NGVjOTBkYzMwOGNmYjUwOTAyYjkwOTAwYjk0Ng==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-20T13:19:01Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-21T01:15:33Z"
    },
    "message": "Replace \"if (x) free (x)\" with \"free (x)\", gas\n\n\t* atof-generic.c: Replace \"if (x) free (x)\" with \"free (x)\"\n\tthroughout.\n\t* config/obj-elf.c: Likewise.\n\t* config/tc-aarch64.c: Likewise.\n\t* config/tc-arm.c: Likewise.\n\t* config/tc-m68k.c: Likewise.\n\t* config/tc-nios2.c: Likewise.\n\t* config/tc-tic30.c: Likewise.\n\t* ecoff.c: Likewise.\n\t* read.c: Likewise.\n\t* stabs.c: Likewise.\n\t* symbols.c: Likewise.\n\t* testsuite/gas/all/test-gen.c: Likewise.",
    "tree": {
      "sha": "8515c6ad77b83d750fc107937f06c8816c4dfc2e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8515c6ad77b83d750fc107937f06c8816c4dfc2e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9fbb53c7c8d54ec90dc308cfb50902b90900b946",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9fbb53c7c8d54ec90dc308cfb50902b90900b946",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9fbb53c7c8d54ec90dc308cfb50902b90900b946",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9fbb53c7c8d54ec90dc308cfb50902b90900b946/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9db70fc3656064555873332003d842b880ca470c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9db70fc3656064555873332003d842b880ca470c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9db70fc3656064555873332003d842b880ca470c"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 41,
    "deletions": 52
  },
  "files": [
    {
      "sha": "1ff090ab688aa4cec78f89b7b5d7ee8b268003da",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -1,3 +1,19 @@\n+2020-05-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* atof-generic.c: Replace \"if (x) free (x)\" with \"free (x)\"\n+\tthroughout.\n+\t* config/obj-elf.c: Likewise.\n+\t* config/tc-aarch64.c: Likewise.\n+\t* config/tc-arm.c: Likewise.\n+\t* config/tc-m68k.c: Likewise.\n+\t* config/tc-nios2.c: Likewise.\n+\t* config/tc-tic30.c: Likewise.\n+\t* ecoff.c: Likewise.\n+\t* read.c: Likewise.\n+\t* stabs.c: Likewise.\n+\t* symbols.c: Likewise.\n+\t* testsuite/gas/all/test-gen.c: Likewise.\n+\n 2020-05-20  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* testsuite/gas/riscv/priv-reg-fail-read-only-01.s: Updated."
    },
    {
      "sha": "96a12f7462e36572e5785e2af30bfbd403e96b9a",
      "filename": "gas/atof-generic.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/atof-generic.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/atof-generic.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/atof-generic.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -611,10 +611,8 @@ atof_generic (/* return pointer to just AFTER number we read.  */\n       /* Assert sign of the number we made is '+'.  */\n       address_of_generic_floating_point_number->sign = digits_sign_char;\n \n-      if (temporary_binary_low)\n-\tfree (temporary_binary_low);\n-      if (power_binary_low)\n-\tfree (power_binary_low);\n+      free (temporary_binary_low);\n+      free (power_binary_low);\n       free (digits_binary_low);\n     }\n   return return_value;"
    },
    {
      "sha": "de22b5a1da807ae232458ca1357dc1c8b9f1b892",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -2021,8 +2021,7 @@ elf_copy_symbol_attributes (symbolS *dest, symbolS *src)\n     }\n   else\n     {\n-      if (destelf->size != NULL)\n-\tfree (destelf->size);\n+      free (destelf->size);\n       destelf->size = NULL;\n     }\n   S_SET_SIZE (dest, S_GET_SIZE (src));\n@@ -2124,11 +2123,8 @@ obj_elf_size (int ignore ATTRIBUTE_UNUSED)\n   if (exp.X_op == O_constant)\n     {\n       S_SET_SIZE (sym, exp.X_add_number);\n-      if (symbol_get_obj (sym)->size)\n-\t{\n-\t  xfree (symbol_get_obj (sym)->size);\n-\t  symbol_get_obj (sym)->size = NULL;\n-\t}\n+      xfree (symbol_get_obj (sym)->size);\n+      symbol_get_obj (sym)->size = NULL;\n     }\n   else\n     {"
    },
    {
      "sha": "728fd10a4e2e246e4e8fd3f97c0a11a88e285641",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -8269,8 +8269,7 @@ md_apply_fix (fixS * fixP, valueT * valP, segT seg)\n   /* Free the allocated the struct aarch64_inst.\n      N.B. currently there are very limited number of fix-up types actually use\n      this field, so the impact on the performance should be minimal .  */\n-  if (fixP->tc_fix_data.inst != NULL)\n-    free (fixP->tc_fix_data.inst);\n+  free (fixP->tc_fix_data.inst);\n \n   return;\n }\n@@ -9557,8 +9556,7 @@ aarch64_elf_copy_symbol_attributes (symbolS *dest, symbolS *src)\n     }\n   else\n     {\n-      if (destelf->size != NULL)\n-\tfree (destelf->size);\n+      free (destelf->size);\n       destelf->size = NULL;\n     }\n   S_SET_SIZE (dest, S_GET_SIZE (src));"
    },
    {
      "sha": "a69300697f0f8b2de2d22011aee530163ab2e5bb",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -2899,8 +2899,7 @@ s_unreq (int a ATTRIBUTE_UNUSED)\n \n \t  hash_delete (arm_reg_hsh, name, FALSE);\n \t  free ((char *) reg->name);\n-\t  if (reg->neon)\n-\t    free (reg->neon);\n+\t  free (reg->neon);\n \t  free (reg);\n \n \t  /* Also locate the all upper case and all lower case versions.\n@@ -2915,8 +2914,7 @@ s_unreq (int a ATTRIBUTE_UNUSED)\n \t    {\n \t      hash_delete (arm_reg_hsh, nbuf, FALSE);\n \t      free ((char *) reg->name);\n-\t      if (reg->neon)\n-\t\tfree (reg->neon);\n+\t      free (reg->neon);\n \t      free (reg);\n \t    }\n \n@@ -2927,8 +2925,7 @@ s_unreq (int a ATTRIBUTE_UNUSED)\n \t    {\n \t      hash_delete (arm_reg_hsh, nbuf, FALSE);\n \t      free ((char *) reg->name);\n-\t      if (reg->neon)\n-\t\tfree (reg->neon);\n+\t      free (reg->neon);\n \t      free (reg);\n \t    }\n "
    },
    {
      "sha": "cbb227a333dfa930cb31e535e2b8e64272b1d8ff",
      "filename": "gas/config/tc-m68k.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-m68k.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-m68k.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-m68k.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -6135,8 +6135,7 @@ pop_mri_control (void)\n \n   n = mri_control_stack;\n   mri_control_stack = n->outer;\n-  if (n->top != NULL)\n-    free (n->top);\n+  free (n->top);\n   free (n->next);\n   free (n->bottom);\n   free (n);"
    },
    {
      "sha": "aeca351ebad50df44b620aaa00e3e860732aa3a8",
      "filename": "gas/config/tc-nios2.c",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-nios2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-nios2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nios2.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -3230,11 +3230,8 @@ nios2_insert_arg (char **parsed_args, const char *insert, int num,\n static void\n nios2_free_arg (char **parsed_args, int num ATTRIBUTE_UNUSED, int start)\n {\n-  if (parsed_args[start])\n-    {\n-      free (parsed_args[start]);\n-      parsed_args[start] = NULL;\n-    }\n+  free (parsed_args[start]);\n+  parsed_args[start] = NULL;\n }\n \n /* This function swaps the pseudo-op for a real op.  */"
    },
    {
      "sha": "c31c7604275b81cf32c75cdb02cb811b1c095be6",
      "filename": "gas/config/tc-tic30.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-tic30.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/config/tc-tic30.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic30.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -1997,8 +1997,7 @@ md_assemble (char *line)\n \n     for (i = 0; i < insn.operands; i++)\n       {\n-\tif (insn.operand_type[i]->immediate.label)\n-\t  free (insn.operand_type[i]->immediate.label);\n+\tfree (insn.operand_type[i]->immediate.label);\n \tfree (insn.operand_type[i]);\n       }\n   }"
    },
    {
      "sha": "08bfee1fc5c6412934ae1ecd40e1ebbf8078b509",
      "filename": "gas/ecoff.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/ecoff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/ecoff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ecoff.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -2526,10 +2526,8 @@ ecoff_directive_def (int ignore ATTRIBUTE_UNUSED)\n     as_warn (_(\"empty symbol name in .def; ignored\"));\n   else\n     {\n-      if (coff_sym_name != (char *) NULL)\n-\tfree (coff_sym_name);\n-      if (coff_tag != (char *) NULL)\n-\tfree (coff_tag);\n+      free (coff_sym_name);\n+      free (coff_tag);\n \n       coff_sym_name = xstrdup (name);\n       coff_type = type_info_init;"
    },
    {
      "sha": "8f93c2ba2b461a22440889e67875fb40a34275f4",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -1332,8 +1332,7 @@ read_a_source_file (const char *name)\n \t\t  new_length += 100;\n \t\t}\n \n-\t      if (tmp_buf)\n-\t\tfree (tmp_buf);\n+\t      free (tmp_buf);\n \n \t      /* We've \"scrubbed\" input to the preferred format.  In the\n \t\t process we may have consumed the whole of the remaining\n@@ -1801,8 +1800,7 @@ s_comm_internal (int param,\n  out:\n   if (flag_mri)\n     mri_comment_end (stop, stopc);\n-  if (name != NULL)\n-    free (name);\n+  free (name);\n   return symbolP;\n }\n \n@@ -1862,8 +1860,7 @@ s_mri_common (int small ATTRIBUTE_UNUSED)\n \n   sym = symbol_find_or_make (name);\n   c = restore_line_pointer (c);\n-  if (alc != NULL)\n-    free (alc);\n+  free (alc);\n \n   if (*input_line_pointer != ',')\n     align = 0;\n@@ -5814,8 +5811,7 @@ s_incbin (int x ATTRIBUTE_UNUSED)\n  done:\n   if (binfile != NULL)\n     fclose (binfile);\n-  if (path)\n-    free (path);\n+  free (path);\n }\n \n /* .include -- include a file at this point.  */"
    },
    {
      "sha": "c962bb4fdf78a5c685281976f6bd7609b14b7d61",
      "filename": "gas/stabs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/stabs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/stabs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/stabs.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -564,8 +564,7 @@ generate_asm_file (int type, const char *file)\n \n   colon (sym);\n \n-  if (last_file != NULL)\n-    free (last_file);\n+  free (last_file);\n   last_file = xstrdup (file);\n \n   free (buf);"
    },
    {
      "sha": "acf394330dfce03e213f3dc06e33d567e989bd5d",
      "filename": "gas/symbols.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -923,14 +923,12 @@ symbol_find_noref (const char *name, int noref)\n \t*copy++ = TOUPPER (c);\n       *copy = '\\0';\n \n-      if (copy2 != NULL)\n-\tfree (copy2);\n+      free (copy2);\n       copy = (char *) name;\n     }\n \n   result = symbol_find_exact_noref (name, noref);\n-  if (copy != NULL)\n-    free (copy);\n+  free (copy);\n   return result;\n }\n "
    },
    {
      "sha": "f2e0bfec26e6640f9e67dd2a11b69dc84c8ab23c",
      "filename": "gas/testsuite/gas/all/test-gen.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/testsuite/gas/all/test-gen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9fbb53c7c8d54ec90dc308cfb50902b90900b946/gas/testsuite/gas/all/test-gen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/test-gen.c?ref=9fbb53c7c8d54ec90dc308cfb50902b90900b946",
      "patch": "@@ -711,10 +711,8 @@ output_insns (func **insn, FILE *as_in, FILE *dis_out)\n \t  for (; part-- > 0;)\n \t    {\n \t    skip:\n-\t      if (data[part].as_in)\n-\t\tfree (data[part].as_in);\n-\t      if (data[part].dis_out\n-\t\t  && data[part].dis_out != data[part].as_in)\n+\t      free (data[part].as_in);\n+\t      if (data[part].dis_out != data[part].as_in)\n \t\tfree (data[part].dis_out);\n \t    }\n "
    }
  ]
}