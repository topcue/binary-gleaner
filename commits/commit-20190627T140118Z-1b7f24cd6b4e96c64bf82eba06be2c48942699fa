{
  "sha": "1b7f24cd6b4e96c64bf82eba06be2c48942699fa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWI3ZjI0Y2Q2YjRlOTZjNjRiZjgyZWJhMDZiZTJjNDg5NDI2OTlmYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-26T17:41:00Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-27T14:01:18Z"
    },
    "message": "Change arm_objfile_data_key to use type-safe registry\n\nAfter seeing Simon's patch to change arm_per_objfile to use new and\ndelete, I realized it is now simple to change arm_objfile_data_key to\nuse the type-safe registry.\n\ngdb/ChangeLog\n2019-06-27  Tom Tromey  <tromey@adacore.com>\n\n\t* arm-tdep.c (arm_objfile_data_key): Move lower.  Change type to\n\tobjfile_key.\n\t(arm_find_mapping_symbol, arm_record_special_symbol)\n\t(_initialize_arm_tdep): Update.\n\t(arm_objfile_data_free): Remove.",
    "tree": {
      "sha": "41b71d28305194c18e82616d98c091128dc840d4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41b71d28305194c18e82616d98c091128dc840d4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1b7f24cd6b4e96c64bf82eba06be2c48942699fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b7f24cd6b4e96c64bf82eba06be2c48942699fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1b7f24cd6b4e96c64bf82eba06be2c48942699fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b7f24cd6b4e96c64bf82eba06be2c48942699fa/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3d507ff23b724ecb2b9a5a61cebd0fba275cfbc3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d507ff23b724ecb2b9a5a61cebd0fba275cfbc3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3d507ff23b724ecb2b9a5a61cebd0fba275cfbc3"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 15,
    "deletions": 23
  },
  "files": [
    {
      "sha": "add3da868fbfe3371356693b3ce2225d043d875f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b7f24cd6b4e96c64bf82eba06be2c48942699fa/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b7f24cd6b4e96c64bf82eba06be2c48942699fa/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1b7f24cd6b4e96c64bf82eba06be2c48942699fa",
      "patch": "@@ -1,3 +1,11 @@\n+2019-06-27  Tom Tromey  <tromey@adacore.com>\n+\n+\t* arm-tdep.c (arm_objfile_data_key): Move lower.  Change type to\n+\tobjfile_key.\n+\t(arm_find_mapping_symbol, arm_record_special_symbol)\n+\t(_initialize_arm_tdep): Update.\n+\t(arm_objfile_data_free): Remove.\n+\n 2019-06-27  Tom Tromey  <tromey@adacore.com>\n \n \t* cp-valprint.c (cp_print_value_fields): Pass opts, not options,"
    },
    {
      "sha": "d244707210628ab045f677c0cbad3d8b0c6d6269",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 7,
      "deletions": 23,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b7f24cd6b4e96c64bf82eba06be2c48942699fa/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b7f24cd6b4e96c64bf82eba06be2c48942699fa/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=1b7f24cd6b4e96c64bf82eba06be2c48942699fa",
      "patch": "@@ -88,9 +88,6 @@ static int arm_debug;\n #define MSYMBOL_IS_SPECIAL(msym)\t\t\t\t\\\n \tMSYMBOL_TARGET_FLAG_1 (msym)\n \n-/* Per-objfile data used for mapping symbols.  */\n-static const struct objfile_data *arm_objfile_data_key;\n-\n struct arm_mapping_symbol\n {\n   bfd_vma value;\n@@ -126,6 +123,9 @@ struct arm_per_objfile\n   std::unique_ptr<bool[]> section_maps_sorted;\n };\n \n+/* Per-objfile data used for mapping symbols.  */\n+static objfile_key<arm_per_objfile> arm_objfile_data_key;\n+\n /* The list of available \"set arm ...\" and \"show arm ...\" commands.  */\n static struct cmd_list_element *setarmcmdlist = NULL;\n static struct cmd_list_element *showarmcmdlist = NULL;\n@@ -356,9 +356,7 @@ arm_find_mapping_symbol (CORE_ADDR memaddr, CORE_ADDR *start)\n   sec = find_pc_section (memaddr);\n   if (sec != NULL)\n     {\n-      arm_per_objfile *data\n-\t= (struct arm_per_objfile *) objfile_data (sec->objfile,\n-\t\t\t\t\t\t   arm_objfile_data_key);\n+      arm_per_objfile *data = arm_objfile_data_key.get (sec->objfile);\n       if (data != NULL)\n \t{\n \t  unsigned int section_idx = sec->the_bfd_section->index;\n@@ -8528,14 +8526,6 @@ arm_coff_make_msymbol_special(int val, struct minimal_symbol *msym)\n     MSYMBOL_SET_SPECIAL (msym);\n }\n \n-static void\n-arm_objfile_data_free (struct objfile *objfile, void *arg)\n-{\n-  struct arm_per_objfile *data = (struct arm_per_objfile *) arg;\n-\n-  delete data;\n-}\n-\n static void\n arm_record_special_symbol (struct gdbarch *gdbarch, struct objfile *objfile,\n \t\t\t   asymbol *sym)\n@@ -8548,13 +8538,10 @@ arm_record_special_symbol (struct gdbarch *gdbarch, struct objfile *objfile,\n   if (name[1] != 'a' && name[1] != 't' && name[1] != 'd')\n     return;\n \n-  data = (struct arm_per_objfile *) objfile_data (objfile,\n-\t\t\t\t\t\t  arm_objfile_data_key);\n+  data = arm_objfile_data_key.get (objfile);\n   if (data == NULL)\n-    {\n-      data = new arm_per_objfile (objfile->obfd->section_count);\n-      set_objfile_data (objfile, arm_objfile_data_key, data);\n-    }\n+    data = arm_objfile_data_key.emplace (objfile,\n+\t\t\t\t\t objfile->obfd->section_count);\n   arm_mapping_symbol_vec &map\n     = data->section_maps[bfd_get_section (sym)->index];\n \n@@ -9477,9 +9464,6 @@ _initialize_arm_tdep (void)\n \n   gdbarch_register (bfd_arch_arm, arm_gdbarch_init, arm_dump_tdep);\n \n-  arm_objfile_data_key\n-    = register_objfile_data_with_cleanup (NULL, arm_objfile_data_free);\n-\n   /* Add ourselves to objfile event chain.  */\n   gdb::observers::new_objfile.attach (arm_exidx_new_objfile);\n   arm_exidx_data_key"
    }
  ]
}