{
  "sha": "13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTNjOWM0ODU5OWViYzhhZDJmM2ExZmI5ZjY3Mjc0MDIxOWNkMzg0MQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-11T03:02:25Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-11T10:44:19Z"
    },
    "message": "bfd signed overflow fixes\n\nAimed at quietening ubsan.\n\ninclude/\n\t* opcode/mmix.h (PUSHGO_INSN_BYTE): Make unsigned.\n\t(GO_INSN_BYTE, SETL_INSN_BYTE, INCML_INSN_BYTE, INCMH_INSN_BYTE),\n\t(INCH_INSN_BYTE, SWYM_INSN_BYTE, JMP_INSN_BYTE): Likewise.\nbfd/\n\t* elf32-rx.c (elf32_rx_relax_section): Avoid signed overflow.\n\t* libaout.h (N_SET_INFO, N_SET_FLAGS): Likewise.\n\t* netbsd.h (write_object_contents): Likewise.\n\t* elf32-arm.c (bfd_elf32_arm_vfp11_erratum_scan): Likewise.\n\t* libhppa.h (HPPA_R_CONSTANT): Don't signed extend with shifts.\n\t(stm32l4xx_create_replacing_stub_vldm): Don't truncate high bits\n\twith shifts.\n\t* elf32-nds32.h (R_NDS32_RELAX_ENTRY_DISABLE_RELAX_FLAG): Define\n\tusing 1u shifted left.  Ditto for other macros.\n\t* mmo.c (LOP): Make unsigned.",
    "tree": {
      "sha": "b304237be09f4f06469122cdcdda658299ebb1ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b304237be09f4f06469122cdcdda658299ebb1ba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "09c78487342254de6a4498f8b3aa1f3f1d508898",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09c78487342254de6a4498f8b3aa1f3f1d508898",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/09c78487342254de6a4498f8b3aa1f3f1d508898"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 55,
    "deletions": 36
  },
  "files": [
    {
      "sha": "5933a05e7e8c5f36d9b815bd7d4166ee59a8dfaf",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -1,3 +1,16 @@\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf32-rx.c (elf32_rx_relax_section): Avoid signed overflow.\n+\t* libaout.h (N_SET_INFO, N_SET_FLAGS): Likewise.\n+\t* netbsd.h (write_object_contents): Likewise.\n+\t* elf32-arm.c (bfd_elf32_arm_vfp11_erratum_scan): Likewise.\n+\t* libhppa.h (HPPA_R_CONSTANT): Don't signed extend with shifts.\n+\t(stm32l4xx_create_replacing_stub_vldm): Don't truncate high bits\n+\twith shifts.\n+\t* elf32-nds32.h (R_NDS32_RELAX_ENTRY_DISABLE_RELAX_FLAG): Define\n+\tusing 1u shifted left.  Ditto for other macros.\n+\t* mmo.c (LOP): Make unsigned.\n+\n 2019-12-11  Alan Modra  <amodra@gmail.com>\n \n \t* libbfd.c (bfd_get_8): Return a bfd_vma."
    },
    {
      "sha": "ebe199c2494a5f24750913853740a036002876e7",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -8506,14 +8506,14 @@ bfd_elf32_arm_vfp11_erratum_scan (bfd *abfd, struct bfd_link_info *link_info)\n \t    {\n \t      unsigned int next_i = i + 4;\n \t      unsigned int insn = bfd_big_endian (abfd)\n-\t\t? (contents[i] << 24)\n-\t\t  | (contents[i + 1] << 16)\n-\t\t  | (contents[i + 2] << 8)\n-\t\t  | contents[i + 3]\n-\t\t: (contents[i + 3] << 24)\n-\t\t  | (contents[i + 2] << 16)\n-\t\t  | (contents[i + 1] << 8)\n-\t\t  | contents[i];\n+\t\t? (((unsigned) contents[i] << 24)\n+\t\t   | (contents[i + 1] << 16)\n+\t\t   | (contents[i + 2] << 8)\n+\t\t   | contents[i + 3])\n+\t\t: (((unsigned) contents[i + 3] << 24)\n+\t\t   | (contents[i + 2] << 16)\n+\t\t   | (contents[i + 1] << 8)\n+\t\t   | contents[i]);\n \t      unsigned int writemask = 0;\n \t      enum bfd_arm_vfp11_pipe vpipe;\n \n@@ -19356,7 +19356,7 @@ stm32l4xx_create_replacing_stub_vldm (struct elf32_arm_link_hash_table * htab,\n \t\t\t\t      const bfd_byte *const initial_insn_addr,\n \t\t\t\t      bfd_byte *const base_stub_contents)\n {\n-  int num_words = ((unsigned int) initial_insn << 24) >> 24;\n+  int num_words = initial_insn & 0xff;\n   bfd_byte *current_stub_contents = base_stub_contents;\n \n   BFD_ASSERT (is_thumb2_vldm (initial_insn));"
    },
    {
      "sha": "7a5134fc7d9b455c66e2bb08ab9f81f1a8329865",
      "filename": "bfd/elf32-nds32.h",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/elf32-nds32.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/elf32-nds32.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-nds32.h?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -31,45 +31,45 @@ extern \"C\" {\n /* Relocation flags for R_NDS32_ERLAX_ENTRY.  */\n \n /* Set if relax on this section is done or disabled.  */\n-#define R_NDS32_RELAX_ENTRY_DISABLE_RELAX_FLAG\t\t\t(1 << 31)\n+#define R_NDS32_RELAX_ENTRY_DISABLE_RELAX_FLAG\t\t\t(1u << 31)\n /* Optimize for performance.  */\n-#define R_NDS32_RELAX_ENTRY_OPTIMIZE_FLAG\t\t\t(1 << 30)\n+#define R_NDS32_RELAX_ENTRY_OPTIMIZE_FLAG\t\t\t(1u << 30)\n /* Optimize for size.  Branch destination 4-byte adjustment\n    may be disabled.  */\n-#define R_NDS32_RELAX_ENTRY_OPTIMIZE_FOR_SPACE_FLAG\t\t(1 << 29)\n+#define R_NDS32_RELAX_ENTRY_OPTIMIZE_FOR_SPACE_FLAG\t\t(1u << 29)\n /* To distinguish the assembly code generated by compiler\n    or written manually.  */\n-#define R_NDS32_RELAX_ENTRY_VERBATIM_FLAG\t\t\t(1 << 28)\n+#define R_NDS32_RELAX_ENTRY_VERBATIM_FLAG\t\t\t(1u << 28)\n /* Two bits for ICT to comply with files without directive.  */\n /* ICT small model.  */\n-#define R_NDS32_RELAX_ENTRY_ICT_SMALL                           (0x2 << 4)\n+#define R_NDS32_RELAX_ENTRY_ICT_SMALL                           (0x2u << 4)\n /* ICT large model.  */\n-#define R_NDS32_RELAX_ENTRY_ICT_LARGE                           (0x3 << 4)\n+#define R_NDS32_RELAX_ENTRY_ICT_LARGE                           (0x3u << 4)\n /* Mask for get ict bits.  */\n-#define R_NDS32_RELAX_ENTRY_ICT_MASK                            (0x3 << 4)\n+#define R_NDS32_RELAX_ENTRY_ICT_MASK                            (0x3u << 4)\n \n \n /* Relocation flags for R_NDS32_INSN16.  */\n \n /* Tag the nop16 can be removed.  */\n-#define R_NDS32_INSN16_CONVERT_FLAG\t\t\t\t(1 << 0)\n+#define R_NDS32_INSN16_CONVERT_FLAG\t\t\t\t(1u << 0)\n /* Convert a gp-relative access (e.g., lwi.gp)\n    to fp-as-gp access (lwi37.fp).\n    This value is used by linker internally only.\n    It's fine to change the vlaue.  */\n-#define R_NDS32_INSN16_FP7U2_FLAG\t\t\t\t(1 << 1)\n+#define R_NDS32_INSN16_FP7U2_FLAG\t\t\t\t(1u << 1)\n \n /* Relocation flags for R_NDS32_RELAX_REGION_OMIT_FP_START/END.  */\n \n /* OMIT_FP_FLAG marks the region for applying fp-as-gp\n    optimization.  */\n-#define R_NDS32_RELAX_REGION_OMIT_FP_FLAG\t\t\t(1 << 0)\n+#define R_NDS32_RELAX_REGION_OMIT_FP_FLAG\t\t\t(1u << 0)\n /* NOT_OMIT_FP_FLAG is set if this region is not worth\n    for fp-as-gp.  */\n-#define R_NDS32_RELAX_REGION_NOT_OMIT_FP_FLAG\t\t\t(1 << 1)\n+#define R_NDS32_RELAX_REGION_NOT_OMIT_FP_FLAG\t\t\t(1u << 1)\n /* A Innermost loop region.  Some optimizations is suppressed\n    in this region due to performance drop.  */\n-#define R_NDS32_RELAX_REGION_INNERMOST_LOOP_FLAG\t\t(1 << 4)\n+#define R_NDS32_RELAX_REGION_INNERMOST_LOOP_FLAG\t\t(1u << 4)\n \n /* Tag range for LOADSTORE relocation.  */\n enum"
    },
    {
      "sha": "1b7b35b01f0703ff2eaa022e3394b4bbf850d075",
      "filename": "bfd/elf32-rx.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/elf32-rx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/elf32-rx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-rx.c?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -2932,9 +2932,9 @@ elf32_rx_relax_section (bfd *\t\t       abfd,\n \t\t  break;\n \t\tcase 0:\n #if RX_OPCODE_BIG_ENDIAN\n-\t\t  imm_val = (ip[0] << 24) | (ip[1] << 16) | (ip[2] << 8) | ip[3];\n+\t\t  imm_val = ((unsigned) ip[0] << 24) | (ip[1] << 16) | (ip[2] << 8) | ip[3];\n #else\n-\t\t  imm_val = (ip[3] << 24) | (ip[2] << 16) | (ip[1] << 8) | ip[0];\n+\t\t  imm_val = ((unsigned) ip[3] << 24) | (ip[2] << 16) | (ip[1] << 8) | ip[0];\n #endif\n \t\t  break;\n \t\t}"
    },
    {
      "sha": "0702ed371328bd1e61d0bfe19228b822e9b101b6",
      "filename": "bfd/libaout.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/libaout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/libaout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libaout.h?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -309,7 +309,7 @@ enum machine_type\n # define N_SET_INFO(execp, magic, type, flags) \\\n ((execp)->a_info = ((magic) & 0xffff) \\\n  | (((int)(type) & 0xff) << 16) \\\n- | (((flags) & 0xff) << 24))\n+ | (((flags) & 0xffu) << 24))\n #endif\n \n #ifndef N_SET_DYNAMIC\n@@ -332,7 +332,7 @@ enum machine_type\n #ifndef N_SET_FLAGS\n # define N_SET_FLAGS(execp, flags) \\\n ((execp)->a_info = \\\n- ((execp)->a_info & 0x00ffffff) | (((flags) & 0xff) << 24))\n+ ((execp)->a_info & 0x00ffffff) | (((flags) & 0xffu) << 24))\n #endif\n \n typedef struct aout_symbol"
    },
    {
      "sha": "632f5243d0b4befda8d438299b8ea0cbb7049f4d",
      "filename": "bfd/libhppa.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/libhppa.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/libhppa.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libhppa.h?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -148,7 +148,7 @@ enum hppa_reloc_expr_type_alt\n #define HPPA_R_ARG_RELOC(a)\t\\\n   (((a) >> 22) & 0x3ff)\n #define HPPA_R_CONSTANT(a)\t\\\n-  ((((bfd_signed_vma)(a)) << (BFD_ARCH_SIZE-22)) >> (BFD_ARCH_SIZE-22))\n+  ((((bfd_signed_vma) (a) & 0x3fffff) ^ 0x200000) - 0x200000)\n #define HPPA_R_ADDEND(r, c)\t\\\n   (((r) << 22) + ((c) & 0x3fffff))\n "
    },
    {
      "sha": "d175befd0db3b1dc7a6745fdfd3ee1953606dc2f",
      "filename": "bfd/mmo.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/mmo.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/mmo.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/mmo.c?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -207,7 +207,7 @@ EXAMPLE\n #include \"elf/mmix.h\"\n #include \"opcode/mmix.h\"\n \n-#define LOP 0x98\n+#define LOP 0x98u\n #define LOP_QUOTE 0\n #define LOP_LOC 1\n #define LOP_SKIP 2"
    },
    {
      "sha": "3e981401cab41da7ce9c0a801a4ebb3585d66ad6",
      "filename": "bfd/netbsd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/netbsd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/bfd/netbsd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/netbsd.h?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -104,7 +104,7 @@ MY (write_object_contents) (bfd *abfd)\n   /* XXX aren't there any macro to change byteorder of a word independent of\n      the host's or target's endiannesses?  */\n   execp->a_info\n-    = (execp->a_info & 0xff) << 24 | (execp->a_info & 0xff00) << 8\n+    = (execp->a_info & 0xffu) << 24 | (execp->a_info & 0xff00) << 8\n       | (execp->a_info & 0xff0000) >> 8 | (execp->a_info & 0xff000000) >> 24;\n #endif\n "
    },
    {
      "sha": "52cdc0407cafc277041db3429735845ff83a2239",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/mmix.h (PUSHGO_INSN_BYTE): Make unsigned.\n+\t(GO_INSN_BYTE, SETL_INSN_BYTE, INCML_INSN_BYTE, INCMH_INSN_BYTE),\n+\t(INCH_INSN_BYTE, SWYM_INSN_BYTE, JMP_INSN_BYTE): Likewise.\n+\n 2019-12-11  Alan Modra  <amodra@gmail.com>\n \n \t* dis-asm.h (INSN_HAS_RELOC, DISASSEMBLE_DATA),"
    },
    {
      "sha": "0f08262181ef7970325f7aca210ef224d3fbafe0",
      "filename": "include/opcode/mmix.h",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/include/opcode/mmix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c9c48599ebc8ad2f3a1fb9f672740219cd3841/include/opcode/mmix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/mmix.h?ref=13c9c48599ebc8ad2f3a1fb9f672740219cd3841",
      "patch": "@@ -173,14 +173,14 @@ extern const struct mmix_spec_reg mmix_spec_regs[];\n #define COND_INV_BIT 0x8\n #define PRED_INV_BIT 0x10\n \n-#define PUSHGO_INSN_BYTE 0xbe\n-#define GO_INSN_BYTE 0x9e\n-#define SETL_INSN_BYTE 0xe3\n-#define INCML_INSN_BYTE 0xe6\n-#define INCMH_INSN_BYTE 0xe5\n-#define INCH_INSN_BYTE 0xe4\n-#define SWYM_INSN_BYTE 0xfd\n-#define JMP_INSN_BYTE 0xf0\n+#define PUSHGO_INSN_BYTE 0xbeu\n+#define GO_INSN_BYTE 0x9eu\n+#define SETL_INSN_BYTE 0xe3u\n+#define INCML_INSN_BYTE 0xe6u\n+#define INCMH_INSN_BYTE 0xe5u\n+#define INCH_INSN_BYTE 0xe4u\n+#define SWYM_INSN_BYTE 0xfdu\n+#define JMP_INSN_BYTE 0xf0u\n \n /* We can have 256 - 32 (local registers) - 1 ($255 is not allocatable)\n    global registers.  */"
    }
  ]
}