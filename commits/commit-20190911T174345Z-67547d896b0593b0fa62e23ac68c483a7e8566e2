{
  "sha": "67547d896b0593b0fa62e23ac68c483a7e8566e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njc1NDdkODk2YjA1OTNiMGZhNjJlMjNhYzY4YzQ4M2E3ZTg1NjZlMg==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-09-10T20:37:50Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-09-11T17:43:45Z"
    },
    "message": "Change the type of copy_names from int to bool\n\nThis parameter is really a boolean, so change the type accordingly\nand update the callers.\n\nThis is for symbol_set_names, add_psymbol_to_bcache, and\nadd_psymbol_to_list.\n\nminimal_symbol_reader::record_full was already passing a bool\nto symbol_set_names.\n\ngdb/ChangeLog:\n\n2019-09-11  Christian Biesinger  <cbiesinger@google.com>\n\n\t* dbxread.c (read_dbx_symtab): Update.\n\t* dwarf2read.c (load_partial_dies): Update.\n\t* mdebugread.c (parse_partial_symbols): Update.\n\t(handle_psymbol_enumerators): Update.\n\t* psympriv.h (add_psymbol_to_list): Change type of copy_names to bool.\n\t* psymtab.c (add_psymbol_to_bcache): Likewise.\n\t(add_psymbol_to_list): Likewise.\n\t* symtab.c (symbol_set_names): Likewise.\n\t* symtab.h (symbol_set_names): Likewise.\n\t* xcoffread.c (scan_xcoff_symtab): Update.",
    "tree": {
      "sha": "669833e9a12c28896bd0003424a07e1c032a8892",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/669833e9a12c28896bd0003424a07e1c032a8892"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/67547d896b0593b0fa62e23ac68c483a7e8566e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/67547d896b0593b0fa62e23ac68c483a7e8566e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/67547d896b0593b0fa62e23ac68c483a7e8566e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/67547d896b0593b0fa62e23ac68c483a7e8566e2/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "64b2d4a0a4e4f80d2aa2e52c6eec3186e76fc397",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64b2d4a0a4e4f80d2aa2e52c6eec3186e76fc397",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/64b2d4a0a4e4f80d2aa2e52c6eec3186e76fc397"
    }
  ],
  "stats": {
    "total": 95,
    "additions": 54,
    "deletions": 41
  },
  "files": [
    {
      "sha": "3b28884267b30a3c22c4991949b1951e88e83ae4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -1,3 +1,16 @@\n+2019-09-11  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* dbxread.c (read_dbx_symtab): Update.\n+\t* dwarf2read.c (load_partial_dies): Update.\n+\t* mdebugread.c (parse_partial_symbols): Update.\n+\t(handle_psymbol_enumerators): Update.\n+\t* psympriv.h (add_psymbol_to_list): Change type of copy_names to bool.\n+\t* psymtab.c (add_psymbol_to_bcache): Likewise.\n+\t(add_psymbol_to_list): Likewise.\n+\t* symtab.c (symbol_set_names): Likewise.\n+\t* symtab.h (symbol_set_names): Likewise.\n+\t* xcoffread.c (scan_xcoff_symtab): Update.\n+\n 2019-09-11  Tom Tromey  <tom@tromey.com>\n \n \t* symfile-mem.c (symbol_file_add_from_memory): Use"
    },
    {
      "sha": "dc0b2c727bf93782b788cc26986e7b16ea44a38f",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -1464,7 +1464,7 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \t      if (gdbarch_static_transform_name_p (gdbarch))\n \t\tgdbarch_static_transform_name (gdbarch, namestring);\n \n-\t      add_psymbol_to_list (sym_name, sym_len, 1,\n+\t      add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t   VAR_DOMAIN, LOC_STATIC,\n \t\t\t\t   data_sect_index,\n \t\t\t\t   psymbol_placement::STATIC,\n@@ -1474,7 +1474,7 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \t    case 'G':\n \t      /* The addresses in these entries are reported to be\n \t\t wrong.  See the code that reads 'G's for symtabs.  */\n-\t      add_psymbol_to_list (sym_name, sym_len, 1,\n+\t      add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t   VAR_DOMAIN, LOC_STATIC,\n \t\t\t\t   data_sect_index,\n \t\t\t\t   psymbol_placement::GLOBAL,\n@@ -1492,14 +1492,14 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \t\t  || (p == namestring + 1\n \t\t      && namestring[0] != ' '))\n \t\t{\n-\t\t  add_psymbol_to_list (sym_name, sym_len, 1,\n+\t\t  add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t       STRUCT_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t       psymbol_placement::STATIC,\n \t\t\t\t       0, psymtab_language, objfile);\n \t\t  if (p[2] == 't')\n \t\t    {\n \t\t      /* Also a typedef with the same name.  */\n-\t\t      add_psymbol_to_list (sym_name, sym_len, 1,\n+\t\t      add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t\t   VAR_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t\t   psymbol_placement::STATIC,\n \t\t\t\t\t   0, psymtab_language, objfile);\n@@ -1511,7 +1511,7 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \t    case 't':\n \t      if (p != namestring)\t/* a name is there, not just :T...  */\n \t\t{\n-\t\t  add_psymbol_to_list (sym_name, sym_len, 1,\n+\t\t  add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t       VAR_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t       psymbol_placement::STATIC,\n \t\t\t\t       0, psymtab_language, objfile);\n@@ -1572,7 +1572,7 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \t\t\t;\n \t\t      /* Note that the value doesn't matter for\n \t\t\t enum constants in psymtabs, just in symtabs.  */\n-\t\t      add_psymbol_to_list (p, q - p, 1,\n+\t\t      add_psymbol_to_list (p, q - p, true,\n \t\t\t\t\t   VAR_DOMAIN, LOC_CONST, -1,\n \t\t\t\t\t   psymbol_placement::STATIC, 0,\n \t\t\t\t\t   psymtab_language, objfile);\n@@ -1590,7 +1590,7 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \n \t    case 'c':\n \t      /* Constant, e.g. from \"const\" in Pascal.  */\n-\t      add_psymbol_to_list (sym_name, sym_len, 1,\n+\t      add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t   VAR_DOMAIN, LOC_CONST, -1,\n \t\t\t\t   psymbol_placement::STATIC, 0,\n \t\t\t\t   psymtab_language, objfile);\n@@ -1645,7 +1645,7 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \t\t  pst->set_text_low (nlist.n_value);\n \t\t  textlow_not_set = 0;\n \t\t}\n-\t      add_psymbol_to_list (sym_name, sym_len, 1,\n+\t      add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t   VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t   SECT_OFF_TEXT (objfile),\n \t\t\t\t   psymbol_placement::STATIC,\n@@ -1704,7 +1704,7 @@ read_dbx_symtab (minimal_symbol_reader &reader, struct objfile *objfile)\n \t\t  pst->set_text_low (nlist.n_value);\n \t\t  textlow_not_set = 0;\n \t\t}\n-\t      add_psymbol_to_list (sym_name, sym_len, 1,\n+\t      add_psymbol_to_list (sym_name, sym_len, true,\n \t\t\t\t   VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t   SECT_OFF_TEXT (objfile),\n \t\t\t\t   psymbol_placement::GLOBAL,"
    },
    {
      "sha": "a2b80ebbc15b2f450046436b74bb53d0498cdc08",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -18533,7 +18533,7 @@ load_partial_dies (const struct die_reader_specs *reader,\n \t      || pdi.tag == DW_TAG_subrange_type))\n \t{\n \t  if (building_psymtab && pdi.name != NULL)\n-\t    add_psymbol_to_list (pdi.name, strlen (pdi.name), 0,\n+\t    add_psymbol_to_list (pdi.name, strlen (pdi.name), false,\n \t\t\t\t VAR_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t psymbol_placement::STATIC,\n \t\t\t\t 0, cu->language, objfile);\n@@ -18567,7 +18567,7 @@ load_partial_dies (const struct die_reader_specs *reader,\n \t  if (pdi.name == NULL)\n \t    complaint (_(\"malformed enumerator DIE ignored\"));\n \t  else if (building_psymtab)\n-\t    add_psymbol_to_list (pdi.name, strlen (pdi.name), 0,\n+\t    add_psymbol_to_list (pdi.name, strlen (pdi.name), false,\n \t\t\t\t VAR_DOMAIN, LOC_CONST, -1,\n \t\t\t\t cu->language == language_cplus\n \t\t\t\t ? psymbol_placement::GLOBAL"
    },
    {
      "sha": "dffef8fd1a4cac5c4b6f22eb4a2459c080b3bc8a",
      "filename": "gdb/mdebugread.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/mdebugread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/mdebugread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mdebugread.c?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -3048,7 +3048,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\t  namestring = gdbarch_static_transform_name\n \t\t\t\t\t (gdbarch, namestring);\n \n-\t\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t     VAR_DOMAIN, LOC_STATIC,\n \t\t\t\t\t     SECT_OFF_DATA (objfile),\n \t\t\t\t\t     psymbol_placement::STATIC,\n@@ -3059,7 +3059,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\t/* The addresses in these entries are reported\n \t\t\t   to be wrong.  See the code that reads 'G's\n \t\t\t   for symtabs.  */\n-\t\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t     VAR_DOMAIN, LOC_STATIC,\n \t\t\t\t\t     SECT_OFF_DATA (objfile),\n \t\t\t\t\t     psymbol_placement::GLOBAL,\n@@ -3078,7 +3078,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\t    || (p == namestring + 1\n \t\t\t\t&& namestring[0] != ' '))\n \t\t\t  {\n-\t\t\t    add_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t\t    add_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t\t STRUCT_DOMAIN, LOC_TYPEDEF,\n \t\t\t\t\t\t -1,\n \t\t\t\t\t\t psymbol_placement::STATIC,\n@@ -3087,7 +3087,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\t      {\n \t\t\t\t/* Also a typedef with the same name.  */\n \t\t\t\tadd_psymbol_to_list (namestring,\n-\t\t\t\t\t\t     p - namestring, 1,\n+\t\t\t\t\t\t     p - namestring, true,\n \t\t\t\t\t\t     VAR_DOMAIN, LOC_TYPEDEF,\n \t\t\t\t\t\t     -1,\n \t\t\t\t\t\t     psymbol_placement::STATIC,\n@@ -3101,8 +3101,8 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\tif (p != namestring)\t/* a name is there, not\n \t\t\t\t\t\t   just :T...  */\n \t\t\t  {\n-\t\t\t    add_psymbol_to_list (namestring, p - namestring, 1,\n-\t\t\t\t\t\t VAR_DOMAIN, LOC_TYPEDEF,\n+\t\t\t    add_psymbol_to_list (namestring, p - namestring,\n+\t\t\t\t\t\t true, VAR_DOMAIN, LOC_TYPEDEF,\n \t\t\t\t\t\t -1,\n \t\t\t\t\t\t psymbol_placement::STATIC,\n \t\t\t\t\t\t 0, psymtab_language, objfile);\n@@ -3166,7 +3166,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\t\t/* Note that the value doesn't matter for\n \t\t\t\t   enum constants in psymtabs, just in\n \t\t\t\t   symtabs.  */\n-\t\t\t\tadd_psymbol_to_list (p, q - p, 1,\n+\t\t\t\tadd_psymbol_to_list (p, q - p, true,\n \t\t\t\t\t\t     VAR_DOMAIN, LOC_CONST,\n \t\t\t\t\t\t     -1,\n \t\t\t\t\t\t     psymbol_placement::STATIC,\n@@ -3185,7 +3185,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\tcontinue;\n \t\t      case 'c':\n \t\t\t/* Constant, e.g. from \"const\" in Pascal.  */\n-\t\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t     VAR_DOMAIN, LOC_CONST, -1,\n \t\t\t\t\t     psymbol_placement::STATIC,\n \t\t\t\t\t     0, psymtab_language, objfile);\n@@ -3198,7 +3198,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\t    function_outside_compilation_unit_complaint\n \t\t\t      (copy.c_str ());\n \t\t\t  }\n-\t\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t     VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t\t     SECT_OFF_TEXT (objfile),\n \t\t\t\t\t     psymbol_placement::STATIC,\n@@ -3217,7 +3217,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t\t    function_outside_compilation_unit_complaint\n \t\t\t      (copy.c_str ());\n \t\t\t  }\n-\t\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t     VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t\t     SECT_OFF_TEXT (objfile),\n \t\t\t\t\t     psymbol_placement::GLOBAL,\n@@ -3452,13 +3452,13 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t     symbol table, and the MAIN__ symbol via the minimal\n \t\t     symbol table.  */\n \t\t  if (sh.st == stProc)\n-\t\t    add_psymbol_to_list (sym_name, strlen (sym_name), 1,\n+\t\t    add_psymbol_to_list (sym_name, strlen (sym_name), true,\n \t\t\t\t\t VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t\t section,\n \t\t\t\t\t psymbol_placement::GLOBAL,\n \t\t\t\t\t sh.value, psymtab_language, objfile);\n \t\t  else\n-\t\t    add_psymbol_to_list (sym_name, strlen (sym_name), 1,\n+\t\t    add_psymbol_to_list (sym_name, strlen (sym_name), true,\n \t\t\t\t\t VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t\t section,\n \t\t\t\t\t psymbol_placement::STATIC,\n@@ -3525,7 +3525,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t      && sh.iss != 0\n \t\t      && sh.index != cur_sdx + 2)\n \t\t    {\n-\t\t      add_psymbol_to_list (sym_name, strlen (sym_name), 1,\n+\t\t      add_psymbol_to_list (sym_name, strlen (sym_name), true,\n \t\t\t\t\t   STRUCT_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t\t   psymbol_placement::STATIC,\n \t\t\t\t\t   0, psymtab_language, objfile);\n@@ -3565,7 +3565,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t  continue;\n \t\t}\n \t      /* Use this gdb symbol.  */\n-\t      add_psymbol_to_list (sym_name, strlen (sym_name), 1,\n+\t      add_psymbol_to_list (sym_name, strlen (sym_name), true,\n \t\t\t\t   VAR_DOMAIN, theclass, section,\n \t\t\t\t   psymbol_placement::STATIC,\n \t\t\t\t   sh.value, psymtab_language, objfile);\n@@ -3644,7 +3644,7 @@ parse_partial_symbols (minimal_symbol_reader &reader,\n \t\t  break;\n \t\t}\n \t      char *sym_name = debug_info->ssext + psh->iss;\n-\t      add_psymbol_to_list (sym_name, strlen (sym_name), 1,\n+\t      add_psymbol_to_list (sym_name, strlen (sym_name), true,\n \t\t\t\t   VAR_DOMAIN, theclass,\n \t\t\t\t   section,\n \t\t\t\t   psymbol_placement::GLOBAL,\n@@ -3807,7 +3807,7 @@ handle_psymbol_enumerators (struct objfile *objfile, FDR *fh, int stype,\n \n       /* Note that the value doesn't matter for enum constants\n          in psymtabs, just in symtabs.  */\n-      add_psymbol_to_list (name, strlen (name), 1,\n+      add_psymbol_to_list (name, strlen (name), true,\n \t\t\t   VAR_DOMAIN, LOC_CONST, -1,\n \t\t\t   psymbol_placement::STATIC, 0,\n \t\t\t   psymtab_language, objfile);"
    },
    {
      "sha": "9d22f5c9acf5b28989148273201dc8f08e3ab911",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -289,7 +289,7 @@ enum class psymbol_placement\n /* Add any kind of symbol to a partial_symbol vector.  */\n \n extern void add_psymbol_to_list (const char *, int,\n-\t\t\t\t int, domain_enum,\n+\t\t\t\t bool, domain_enum,\n \t\t\t\t enum address_class,\n \t\t\t\t short /* section */,\n \t\t\t\t enum psymbol_placement,"
    },
    {
      "sha": "e9cc8c3bc6d3173c09bcff246177f9dde9f0dd36",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -1558,7 +1558,7 @@ psymbol_compare (const void *addr1, const void *addr2, int length)\n    different domain (or address) is possible and correct.  */\n \n static struct partial_symbol *\n-add_psymbol_to_bcache (const char *name, int namelength, int copy_name,\n+add_psymbol_to_bcache (const char *name, int namelength, bool copy_name,\n \t\t       domain_enum domain,\n \t\t       enum address_class theclass,\n \t\t       short section,\n@@ -1602,7 +1602,7 @@ append_psymbol_to_list (std::vector<partial_symbol *> *list,\n    Return the partial symbol that has been added.  */\n \n void\n-add_psymbol_to_list (const char *name, int namelength, int copy_name,\n+add_psymbol_to_list (const char *name, int namelength, bool copy_name,\n \t\t     domain_enum domain,\n \t\t     enum address_class theclass,\n \t\t     short section,"
    },
    {
      "sha": "4b528b4270aae146e76f54fe8a5fb305534eefc9",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -811,7 +811,7 @@ symbol_find_demangled_name (struct general_symbol_info *gsymbol,\n \n void\n symbol_set_names (struct general_symbol_info *gsymbol,\n-\t\t  const char *linkage_name, int len, int copy_name,\n+\t\t  const char *linkage_name, int len, bool copy_name,\n \t\t  struct objfile_per_bfd_storage *per_bfd)\n {\n   struct demangled_name_entry **slot;"
    },
    {
      "sha": "c54b8ee4b7a2f775dc8a766d64f49fab345eb35c",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -497,7 +497,7 @@ extern void symbol_set_language (struct general_symbol_info *symbol,\n   symbol_set_names (&(symbol)->ginfo, linkage_name, len, copy_name, \\\n \t\t    (objfile)->per_bfd)\n extern void symbol_set_names (struct general_symbol_info *symbol,\n-\t\t\t      const char *linkage_name, int len, int copy_name,\n+\t\t\t      const char *linkage_name, int len, bool copy_name,\n \t\t\t      struct objfile_per_bfd_storage *per_bfd);\n \n /* Now come lots of name accessor macros.  Short version as to when to"
    },
    {
      "sha": "a17031a110e4fa6f7c97a244e27516781844c3d9",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/67547d896b0593b0fa62e23ac68c483a7e8566e2/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=67547d896b0593b0fa62e23ac68c483a7e8566e2",
      "patch": "@@ -2644,7 +2644,7 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t\t  namestring = gdbarch_static_transform_name\n \t\t\t\t (gdbarch, namestring);\n \n-\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t     VAR_DOMAIN, LOC_STATIC,\n \t\t\t\t     SECT_OFF_DATA (objfile),\n \t\t\t\t     psymbol_placement::STATIC,\n@@ -2655,7 +2655,7 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t      case 'G':\n \t\t/* The addresses in these entries are reported to be\n \t\t   wrong.  See the code that reads 'G's for symtabs.  */\n-\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t     VAR_DOMAIN, LOC_STATIC,\n \t\t\t\t     SECT_OFF_DATA (objfile),\n \t\t\t\t     psymbol_placement::GLOBAL,\n@@ -2674,14 +2674,14 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t\t    || (p == namestring + 1\n \t\t\t&& namestring[0] != ' '))\n \t\t  {\n-\t\t    add_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t    add_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t STRUCT_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t\t psymbol_placement::STATIC,\n \t\t\t\t\t 0, psymtab_language, objfile);\n \t\t    if (p[2] == 't')\n \t\t      {\n \t\t\t/* Also a typedef with the same name.  */\n-\t\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t     VAR_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t\t     psymbol_placement::STATIC,\n \t\t\t\t\t     0, psymtab_language, objfile);\n@@ -2693,7 +2693,7 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t      case 't':\n \t\tif (p != namestring)\t/* a name is there, not just :T...  */\n \t\t  {\n-\t\t    add_psymbol_to_list (namestring, p - namestring, 1,\n+\t\t    add_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t\t VAR_DOMAIN, LOC_TYPEDEF, -1,\n \t\t\t\t\t psymbol_placement::STATIC,\n \t\t\t\t\t 0, psymtab_language, objfile);\n@@ -2755,7 +2755,7 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t\t\t  ;\n \t\t\t/* Note that the value doesn't matter for\n \t\t\t   enum constants in psymtabs, just in symtabs.  */\n-\t\t\tadd_psymbol_to_list (p, q - p, 1,\n+\t\t\tadd_psymbol_to_list (p, q - p, true,\n \t\t\t\t\t     VAR_DOMAIN, LOC_CONST, -1,\n \t\t\t\t\t     psymbol_placement::STATIC,\n \t\t\t\t\t     0, psymtab_language, objfile);\n@@ -2773,7 +2773,7 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \n \t      case 'c':\n \t\t/* Constant, e.g. from \"const\" in Pascal.  */\n-\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t     VAR_DOMAIN, LOC_CONST, -1,\n \t\t\t\t     psymbol_placement::STATIC,\n \t\t\t\t     0, psymtab_language, objfile);\n@@ -2790,7 +2790,7 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t\t    function_outside_compilation_unit_complaint (name);\n \t\t    xfree (name);\n \t\t  }\n-\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t     VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t     SECT_OFF_TEXT (objfile),\n \t\t\t\t     psymbol_placement::STATIC,\n@@ -2820,7 +2820,7 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t\tif (startswith (namestring, \"@FIX\"))\n \t\t  continue;\n \n-\t\tadd_psymbol_to_list (namestring, p - namestring, 1,\n+\t\tadd_psymbol_to_list (namestring, p - namestring, true,\n \t\t\t\t     VAR_DOMAIN, LOC_BLOCK,\n \t\t\t\t     SECT_OFF_TEXT (objfile),\n \t\t\t\t     psymbol_placement::GLOBAL,"
    }
  ]
}