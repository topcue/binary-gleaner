{
  "sha": "7446266408f6c8cdf890c23c391c0c803c7077ca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzQ0NjI2NjQwOGY2YzhjZGY4OTBjMjNjMzkxYzBjODAzYzcwNzdjYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:33:36Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:33:39Z"
    },
    "message": "Change varobj_dynamic::saved_item to unique_ptr\n\nThis changes varobj_dynamic::saved_item to be a unique_ptr.\n\ngdb/ChangeLog\n2020-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* varobj.c (struct varobj_dynamic) <saved_item>: Now unique_ptr.\n\t(varobj_clear_saved_item, update_dynamic_varobj_children):\n\tUpdate.",
    "tree": {
      "sha": "493525a9e1c2c72aa009bf0ae82320d023e3548a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/493525a9e1c2c72aa009bf0ae82320d023e3548a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7446266408f6c8cdf890c23c391c0c803c7077ca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7446266408f6c8cdf890c23c391c0c803c7077ca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7446266408f6c8cdf890c23c391c0c803c7077ca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7446266408f6c8cdf890c23c391c0c803c7077ca/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "60ee72f6d3bf10b4bd3ef1315c72c4551c459224",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60ee72f6d3bf10b4bd3ef1315c72c4551c459224",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/60ee72f6d3bf10b4bd3ef1315c72c4551c459224"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 10,
    "deletions": 8
  },
  "files": [
    {
      "sha": "6e6fcfb7be3b94b7e7f6c91c7e73ca1020257537",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7446266408f6c8cdf890c23c391c0c803c7077ca/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7446266408f6c8cdf890c23c391c0c803c7077ca/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7446266408f6c8cdf890c23c391c0c803c7077ca",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* varobj.c (struct varobj_dynamic) <saved_item>: Now unique_ptr.\n+\t(varobj_clear_saved_item, update_dynamic_varobj_children):\n+\tUpdate.\n+\n 2020-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* varobj.c (update_dynamic_varobj_children): Update."
    },
    {
      "sha": "92bb60fd9d84593fd61dc7261e93bde66b1a45bc",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7446266408f6c8cdf890c23c391c0c803c7077ca/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7446266408f6c8cdf890c23c391c0c803c7077ca/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=7446266408f6c8cdf890c23c391c0c803c7077ca",
      "patch": "@@ -131,7 +131,7 @@ struct varobj_dynamic\n      already reported.  However, we don't want to install this value\n      when we read it, because that will mess up future updates.  So,\n      we stash it here instead.  */\n-  varobj_item *saved_item = NULL;\n+  std::unique_ptr<varobj_item> saved_item;\n };\n \n /* Private function prototypes */\n@@ -680,8 +680,7 @@ varobj_clear_saved_item (struct varobj_dynamic *var)\n   if (var->saved_item != NULL)\n     {\n       value_decref (var->saved_item->value);\n-      delete var->saved_item;\n-      var->saved_item = NULL;\n+      var->saved_item.reset (nullptr);\n     }\n }\n \n@@ -723,10 +722,7 @@ update_dynamic_varobj_children (struct varobj *var,\n \n       /* See if there was a leftover from last time.  */\n       if (var->dynamic->saved_item != NULL)\n-\t{\n-\t  item = std::unique_ptr<varobj_item> (var->dynamic->saved_item);\n-\t  var->dynamic->saved_item = NULL;\n-\t}\n+\titem = std::move (var->dynamic->saved_item);\n       else\n \t{\n \t  item = var->dynamic->child_iter->next ();\n@@ -757,7 +753,7 @@ update_dynamic_varobj_children (struct varobj *var,\n \t}\n       else\n \t{\n-\t  var->dynamic->saved_item = item.release ();\n+\t  var->dynamic->saved_item = std::move (item);\n \n \t  /* We want to truncate the child list just before this\n \t     element.  */"
    }
  ]
}