{
  "sha": "1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWUwYzA5YmEwYmRkOGI0ZGQxYWIzYTYxYjJhZTJkMzI2ODI1YmVlMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-29T13:32:47Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:19:13Z"
    },
    "message": "Remove the win_type parameter from tui_gen_win_info::reset\n\ntui_gen_win_info::reset has a window type parameter that is only used\nfor an assertion.  This made sense as a defensive measure when window\ncreation was more dynamic -- it ensured that one did not make\nmistakes.  However, there's no need for it any more, so this removes\nit.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-source.c (tui_source_window_base::reset): Remove\n\twin_type parameter.\n\t* tui/tui-layout.c (make_command_window, make_source_window)\n\t(make_disasm_window, make_data_window)\n\t(show_source_disasm_command, show_data, tui_gen_win_info::reset)\n\t(reset_locator, show_source_or_disasm_and_command): Update.\n\t* tui/tui-data.h (struct tui_gen_win_info) <reset>: Remove\n\twin_type parameter.\n\t(struct tui_source_window_base) <reset>: Likewise.",
    "tree": {
      "sha": "9a34c9f42f11b3eeaec53853a88ce82e2c87e85a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9a34c9f42f11b3eeaec53853a88ce82e2c87e85a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1bf605de8e9ae4fcf77c21067ddaf4a242a873f7"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 34,
    "deletions": 38
  },
  "files": [
    {
      "sha": "3de96b0a06b0fceb083c8f98188970fea60216a4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
      "patch": "@@ -1,3 +1,15 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-source.c (tui_source_window_base::reset): Remove\n+\twin_type parameter.\n+\t* tui/tui-layout.c (make_command_window, make_source_window)\n+\t(make_disasm_window, make_data_window)\n+\t(show_source_disasm_command, show_data, tui_gen_win_info::reset)\n+\t(reset_locator, show_source_or_disasm_and_command): Update.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <reset>: Remove\n+\twin_type parameter.\n+\t(struct tui_source_window_base) <reset>: Likewise.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (show_source_disasm_command): Use"
    },
    {
      "sha": "e1773004cc5ed427df197a1852b628babcc8fd01",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
      "patch": "@@ -58,11 +58,9 @@ struct tui_gen_win_info\n     return \"\";\n   }\n \n-  /* Reset this window.  WIN_TYPE must match the existing type of this\n-     window (it is only passed for self-test purposes).  The other\n-     parameters are used to set the window's size and position.  */\n-  virtual void reset (enum tui_win_type win_type,\n-\t\t      int height, int width,\n+  /* Reset this window.  The parameters are used to set the window's\n+     size and position.  */\n+  virtual void reset (int height, int width,\n \t\t      int origin_x, int origin_y);\n \n   /* Window handle.  */\n@@ -395,8 +393,7 @@ struct tui_source_window_base : public tui_win_info\n      LINE_NO in this source window; false otherwise.  */\n   virtual bool location_matches_p (struct bp_location *loc, int line_no) = 0;\n \n-  void reset (enum tui_win_type win_type,\n-\t      int height, int width,\n+  void reset (int height, int width,\n \t      int origin_x, int origin_y) override;\n \n   /* Does the locator belong to this window?  */"
    },
    {
      "sha": "79c7996d19b460cb8d7c4dff180cdfeb25cb2a95",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 15,
      "deletions": 27,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
      "patch": "@@ -518,7 +518,7 @@ static struct tui_win_info *\n make_command_window (int height, int origin_y)\n {\n   struct tui_win_info *result = new tui_cmd_window ();\n-  result->reset (CMD_WIN, height, tui_term_width (), 0, origin_y);\n+  result->reset (height, tui_term_width (), 0, origin_y);\n   tui_make_window (result, DONT_BOX_WINDOW);\n   return result;\n }\n@@ -530,7 +530,7 @@ static struct tui_win_info *\n make_source_window (int height, int origin_y)\n {\n   tui_win_info *result = new tui_source_window ();\n-  result->reset (SRC_WIN, height, tui_term_width (), 0, origin_y);\n+  result->reset (height, tui_term_width (), 0, origin_y);\n   result->make_visible (true);\n   return result;\n }\n@@ -542,7 +542,7 @@ static struct tui_win_info *\n make_disasm_window (int height, int origin_y)\n {\n   tui_win_info *result = new tui_disasm_window ();\n-  result->reset (SRC_WIN, height, tui_term_width (), 0, origin_y);\n+  result->reset (height, tui_term_width (), 0, origin_y);\n   result->make_visible (true);\n   return result;\n }\n@@ -552,7 +552,7 @@ static tui_win_info *\n make_data_window (int height, int origin_y)\n {\n   tui_win_info *result = new tui_data_window ();\n-  result->reset (DATA_WIN, height, tui_term_width (), 0, origin_y);\n+  result->reset (height, tui_term_width (), 0, origin_y);\n   result->make_visible (true);\n   return result;\n }\n@@ -595,8 +595,7 @@ show_source_disasm_command (void)\n \ttui_win_list[SRC_WIN] = make_source_window (src_height, 0);\n       else\n \t{\n-\t  TUI_SRC_WIN->reset (TUI_SRC_WIN->type,\n-\t\t\t      src_height,\n+\t  TUI_SRC_WIN->reset (src_height,\n \t\t\t      tui_term_width (),\n \t\t\t      0,\n \t\t\t      0);\n@@ -620,14 +619,12 @@ show_source_disasm_command (void)\n \t}\n       else\n \t{\n-\t  locator->reset (LOCATOR_WIN,\n-\t\t\t  2 /* 1 */ ,\n+\t  locator->reset (2 /* 1 */ ,\n \t\t\t  tui_term_width (),\n \t\t\t  0,\n \t\t\t  (src_height + asm_height) - 1);\n \t  TUI_DISASM_WIN->m_has_locator = true;\n-\t  TUI_DISASM_WIN->reset (TUI_DISASM_WIN->type,\n-\t\t\t\t asm_height,\n+\t  TUI_DISASM_WIN->reset (asm_height,\n \t\t\t\t tui_term_width (),\n \t\t\t\t 0,\n \t\t\t\t src_height - 1);\n@@ -644,8 +641,7 @@ show_source_disasm_command (void)\n \t  = make_command_window (cmd_height, tui_term_height () - cmd_height);\n       else\n \t{\n-\t  TUI_CMD_WIN->reset (TUI_CMD_WIN->type,\n-\t\t\t      TUI_CMD_WIN->height,\n+\t  TUI_CMD_WIN->reset (TUI_CMD_WIN->height,\n \t\t\t      TUI_CMD_WIN->width,\n \t\t\t      0,\n \t\t\t      TUI_CMD_WIN->origin.y);\n@@ -702,14 +698,12 @@ show_data (enum tui_layout_type new_layout)\n   else\n     {\n       base = (tui_source_window_base *) tui_win_list[win_type];\n-      tui_win_list[win_type]->reset (tui_win_list[win_type]->type,\n-\t\t\t\t     src_height,\n+      tui_win_list[win_type]->reset (src_height,\n \t\t\t\t     tui_term_width (),\n \t\t\t\t     0,\n \t\t\t\t     data_height - 1);\n       tui_make_visible (tui_win_list[win_type]);\n-      locator->reset (LOCATOR_WIN,\n-\t\t      2 /* 1 */ ,\n+      locator->reset (2 /* 1 */ ,\n \t\t      tui_term_width (),\n \t\t      0,\n \t\t      total_height - 1);\n@@ -723,14 +717,11 @@ show_data (enum tui_layout_type new_layout)\n }\n \n void\n-tui_gen_win_info::reset (enum tui_win_type win_type,\n-\t\t\t int height_, int width_,\n+tui_gen_win_info::reset (int height_, int width_,\n \t\t\t int origin_x_, int origin_y_)\n {\n   int h = height_;\n \n-  gdb_assert (type == win_type);\n-\n   width = width_;\n   height = h;\n   if (h > 1)\n@@ -750,7 +741,7 @@ reset_locator (tui_gen_win_info *win_info,\n \t       int height, int width, \n \t       int origin_x, int origin_y)\n {\n-  win_info->reset (LOCATOR_WIN, height, width, origin_x, origin_y);\n+  win_info->reset (height, width, origin_x, origin_y);\n   tui_make_window (win_info, DONT_BOX_WINDOW);\n }\n \n@@ -794,14 +785,12 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n       else\n \t{\n \t  base = (tui_source_window_base *) *win_info_ptr;\n-\t  locator->reset (LOCATOR_WIN,\n-\t\t\t  2 /* 1 */ ,\n+\t  locator->reset (2 /* 1 */ ,\n \t\t\t  tui_term_width (),\n \t\t\t  0,\n \t\t\t  src_height - 1);\n \t  base->m_has_locator = true;\n-\t  (*win_info_ptr)->reset ((*win_info_ptr)->type,\n-\t\t\t\t  src_height - 1,\n+\t  (*win_info_ptr)->reset (src_height - 1,\n \t\t\t\t  tui_term_width (),\n \t\t\t\t  0,\n \t\t\t\t  0);\n@@ -820,8 +809,7 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \t}\n       else\n \t{\n-\t  TUI_CMD_WIN->reset (TUI_CMD_WIN->type,\n-\t\t\t      TUI_CMD_WIN->height,\n+\t  TUI_CMD_WIN->reset (TUI_CMD_WIN->height,\n \t\t\t      TUI_CMD_WIN->width,\n \t\t\t      TUI_CMD_WIN->origin.x,\n \t\t\t      TUI_CMD_WIN->origin.y);"
    },
    {
      "sha": "e171101e7fb2b211afb8d9b8e6d710c6c4f6dee0",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=1e0c09ba0bdd8b4dd1ab3a61b2ae2d326825bee1",
      "patch": "@@ -293,11 +293,10 @@ tui_source_window::location_matches_p (struct bp_location *loc, int line_no)\n }\n \n void\n-tui_source_window_base::reset (enum tui_win_type win_type,\n-\t\t\t       int height, int width,\n+tui_source_window_base::reset (int height, int width,\n \t\t\t       int origin_x, int origin_y)\n {\n-  tui_gen_win_info::reset (win_type, height, width - 3,\n+  tui_gen_win_info::reset (height, width - 3,\n \t\t\t   origin_x + 3, origin_y);\n-  execution_info->reset (EXEC_INFO_WIN, height, 3, origin_x, origin_y);\n+  execution_info->reset (height, 3, origin_x, origin_y);\n }"
    }
  ]
}