{
  "sha": "83adff695c522df8259e421162e194a95713eb45",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODNhZGZmNjk1YzUyMmRmODI1OWU0MjExNjJlMTk0YTk1NzEzZWI0NQ==",
  "commit": {
    "author": {
      "name": "Richard Sandiford",
      "email": "richard.sandiford@arm.com",
      "date": "2019-07-02T09:51:09Z"
    },
    "committer": {
      "name": "Richard Sandiford",
      "email": "richard.sandiford@arm.com",
      "date": "2019-07-02T09:51:09Z"
    },
    "message": "[AArch64] Add missing C_MAX_ELEM flags for SVE conversions\n\nSVE FCVTZS, FCVTZU, SCVTF and UCVTF need the same treatment as FCVT:\nthe register size used in a predicated MOVPRFX must be the wider of\nthe destination and source sizes.\n\nSince I was adding a (supposedly) complete set of tests for converts,\nit seemed more consistent to add a complete set of tests for shifts\nas well, even though there's no bug to fix there.\n\n2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n\nopcodes/\n\t* aarch64-tbl.h (aarch64_opcode_table): Add C_MAX_ELEM flags\n\tto SVE fcvtzs, fcvtzu, scvtf and ucvtf entries.\n\ngas/\n\t* testsuite/gas/aarch64/sve-movprfx_26.s: Also test FCVTZS, FCVTZU,\n\tSCVTF, UCVTF, LSR and ASR.\n\t* testsuite/gas/aarch64/sve-movprfx_26.d: Update accordingly.\n\t* testsuite/gas/aarch64/sve-movprfx_26.l: Likewise.",
    "tree": {
      "sha": "59f40754a57cd7e542ef491bcb2143bc644770af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/59f40754a57cd7e542ef491bcb2143bc644770af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/83adff695c522df8259e421162e194a95713eb45",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/83adff695c522df8259e421162e194a95713eb45",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/83adff695c522df8259e421162e194a95713eb45",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/83adff695c522df8259e421162e194a95713eb45/comments",
  "author": {
    "login": "rsandifo-arm",
    "id": 28043039,
    "node_id": "MDQ6VXNlcjI4MDQzMDM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rsandifo-arm",
    "html_url": "https://github.com/rsandifo-arm",
    "followers_url": "https://api.github.com/users/rsandifo-arm/followers",
    "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs",
    "repos_url": "https://api.github.com/users/rsandifo-arm/repos",
    "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "rsandifo-arm",
    "id": 28043039,
    "node_id": "MDQ6VXNlcjI4MDQzMDM5",
    "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rsandifo-arm",
    "html_url": "https://github.com/rsandifo-arm",
    "followers_url": "https://api.github.com/users/rsandifo-arm/followers",
    "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs",
    "repos_url": "https://api.github.com/users/rsandifo-arm/repos",
    "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8941884429c305ad42a41f759a98c8cca4d4aacc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8941884429c305ad42a41f759a98c8cca4d4aacc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8941884429c305ad42a41f759a98c8cca4d4aacc"
    }
  ],
  "stats": {
    "total": 148,
    "additions": 113,
    "deletions": 35
  },
  "files": [
    {
      "sha": "3a76a05249ab715cfc2e020a6ac94ca97dfe958d",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83adff695c522df8259e421162e194a95713eb45/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83adff695c522df8259e421162e194a95713eb45/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=83adff695c522df8259e421162e194a95713eb45",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* testsuite/gas/aarch64/sve-movprfx_26.s: Also test FCVTZS, FCVTZU,\n+\tSCVTF, UCVTF, LSR and ASR.\n+\t* testsuite/gas/aarch64/sve-movprfx_26.d: Update accordingly.\n+\t* testsuite/gas/aarch64/sve-movprfx_26.l: Likewise.\n+\n 2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* testsuite/gas/aarch64/sve-movprfx_25.s: Allow CPY Z1.D.P1/M,X1"
    },
    {
      "sha": "1f7a85d4e88c1e67615712cf05e66cc2895ead50",
      "filename": "gas/testsuite/gas/aarch64/sve-movprfx_26.d",
      "status": "modified",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83adff695c522df8259e421162e194a95713eb45/gas/testsuite/gas/aarch64/sve-movprfx_26.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83adff695c522df8259e421162e194a95713eb45/gas/testsuite/gas/aarch64/sve-movprfx_26.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sve-movprfx_26.d?ref=83adff695c522df8259e421162e194a95713eb45",
      "patch": "@@ -16,8 +16,48 @@ Disassembly of section .*:\n [^:]+:\t65cba440 \tfcvt\tz0.d, p1/m, z2.s  // note: register size not compatible with previous `movprfx' at operand 1\n [^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n [^:]+:\t65cba440 \tfcvt\tz0.d, p1/m, z2.s\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65d8a440 \tfcvtzs\tz0.s, p1/m, z2.d  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65d8a440 \tfcvtzs\tz0.s, p1/m, z2.d\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65dca440 \tfcvtzs\tz0.d, p1/m, z2.s  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65dca440 \tfcvtzs\tz0.d, p1/m, z2.s\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65d9a440 \tfcvtzu\tz0.s, p1/m, z2.d  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65d9a440 \tfcvtzu\tz0.s, p1/m, z2.d\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65dda440 \tfcvtzu\tz0.d, p1/m, z2.s  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65dda440 \tfcvtzu\tz0.d, p1/m, z2.s\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65d4a440 \tscvtf\tz0.s, p1/m, z2.d  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65d4a440 \tscvtf\tz0.s, p1/m, z2.d\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65d0a440 \tscvtf\tz0.d, p1/m, z2.s  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65d0a440 \tscvtf\tz0.d, p1/m, z2.s\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65d5a440 \tucvtf\tz0.s, p1/m, z2.d  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65d5a440 \tucvtf\tz0.s, p1/m, z2.d\n+[^:]+:\t04912420 \tmovprfx\tz0.s, p1/m, z1.s\n+[^:]+:\t65d1a440 \tucvtf\tz0.d, p1/m, z2.s  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t65d1a440 \tucvtf\tz0.d, p1/m, z2.s\n [^:]+:\t04112420 \tmovprfx\tz0.b, p1/m, z1.b\n [^:]+:\t041b8440 \tlsl\tz0.b, p1/m, z0.b, z2.d\n [^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n [^:]+:\t041b8440 \tlsl\tz0.b, p1/m, z0.b, z2.d  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04112420 \tmovprfx\tz0.b, p1/m, z1.b\n+[^:]+:\t04198440 \tlsr\tz0.b, p1/m, z0.b, z2.d\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t04198440 \tlsr\tz0.b, p1/m, z0.b, z2.d  // note: register size not compatible with previous `movprfx' at operand 1\n+[^:]+:\t04112420 \tmovprfx\tz0.b, p1/m, z1.b\n+[^:]+:\t04188440 \tasr\tz0.b, p1/m, z0.b, z2.d\n+[^:]+:\t04d12420 \tmovprfx\tz0.d, p1/m, z1.d\n+[^:]+:\t04188440 \tasr\tz0.b, p1/m, z0.b, z2.d  // note: register size not compatible with previous `movprfx' at operand 1\n [^:]+:\td65f03c0 \tret"
    },
    {
      "sha": "3595566318f40c2e96ee8b534dc83cf3123bc9cf",
      "filename": "gas/testsuite/gas/aarch64/sve-movprfx_26.l",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83adff695c522df8259e421162e194a95713eb45/gas/testsuite/gas/aarch64/sve-movprfx_26.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83adff695c522df8259e421162e194a95713eb45/gas/testsuite/gas/aarch64/sve-movprfx_26.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sve-movprfx_26.l?ref=83adff695c522df8259e421162e194a95713eb45",
      "patch": "@@ -1,4 +1,14 @@\n [^:]*: Assembler messages:\n .*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `fcvt Z0.S,P1/M,Z2.D'\n .*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `fcvt Z0.D,P1/M,Z2.S'\n-.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `lsl Z0.B,P1/M,Z0.B,Z2.D'\n\\ No newline at end of file\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `fcvtzs Z0.S,P1/M,Z2.D'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `fcvtzs Z0.D,P1/M,Z2.S'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `fcvtzu Z0.S,P1/M,Z2.D'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `fcvtzu Z0.D,P1/M,Z2.S'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `scvtf Z0.S,P1/M,Z2.D'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `scvtf Z0.D,P1/M,Z2.S'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `ucvtf Z0.S,P1/M,Z2.D'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `ucvtf Z0.D,P1/M,Z2.S'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `lsl Z0.B,P1/M,Z0.B,Z2.D'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `lsr Z0.B,P1/M,Z0.B,Z2.D'\n+.*: Warning: register size not compatible with previous `movprfx' at operand 1 -- `asr Z0.B,P1/M,Z0.B,Z2.D'"
    },
    {
      "sha": "859a0e20bd00c66812b201a27d58c6c160e9da77",
      "filename": "gas/testsuite/gas/aarch64/sve-movprfx_26.s",
      "status": "modified",
      "additions": 22,
      "deletions": 6,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83adff695c522df8259e421162e194a95713eb45/gas/testsuite/gas/aarch64/sve-movprfx_26.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83adff695c522df8259e421162e194a95713eb45/gas/testsuite/gas/aarch64/sve-movprfx_26.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sve-movprfx_26.s?ref=83adff695c522df8259e421162e194a95713eb45",
      "patch": "@@ -4,28 +4,44 @@\n   .arch armv8-a+sve\n \n f:\n+  .macro test_cvt, insn\n+\n   /* Not OK, 64-bit operation, upper 32-bits cleared.  */\n   movprfx Z0.S, P1/M, Z1.S\n-  fcvt Z0.S, P1/M, Z2.D\n+  \\insn Z0.S, P1/M, Z2.D\n \n   /* OK, 64-bit operation, upper 32-bits cleared.  */\n   movprfx Z0.D, P1/M, Z1.D\n-  fcvt Z0.S, P1/M, Z2.D\n+  \\insn Z0.S, P1/M, Z2.D\n \n   /* Not OK, 64-bit operation ignoring 32-bits.  */\n   movprfx Z0.S, P1/M, Z1.S\n-  fcvt Z0.D, P1/M, Z2.S\n+  \\insn Z0.D, P1/M, Z2.S\n \n   /* OK, 64-bit operation ignoring 32-bits.  */\n   movprfx Z0.D, P1/M, Z1.D\n-  fcvt Z0.D, P1/M, Z2.S\n+  \\insn Z0.D, P1/M, Z2.S\n+  .endm test_cvt\n \n+  .macro test_shift, insn\n   /* OK, 8-bit operation.  */\n   movprfx Z0.B, P1/M, Z1.B\n-  lsl Z0.B, P1/M, Z0.B, Z2.D\n+  \\insn Z0.B, P1/M, Z0.B, Z2.D\n \n   /* Not Ok, destination register sizes don't match.  */\n   movprfx Z0.D, P1/M, Z1.D\n-  lsl Z0.B, P1/M, Z0.B, Z2.D\n+  \\insn Z0.B, P1/M, Z0.B, Z2.D\n+  .endm test_shift\n+\n+  test_cvt fcvt\n+  test_cvt fcvtzs\n+  test_cvt fcvtzu\n+  test_cvt scvtf\n+  test_cvt ucvtf\n+\n+  test_shift lsl\n+  test_shift lsr\n+  test_shift asr\n+\n   ret\n "
    },
    {
      "sha": "064e48edf8c62e242709f61593f951b054a2dc06",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83adff695c522df8259e421162e194a95713eb45/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83adff695c522df8259e421162e194a95713eb45/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=83adff695c522df8259e421162e194a95713eb45",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add C_MAX_ELEM flags\n+\tto SVE fcvtzs, fcvtzu, scvtf and ucvtf entries.\n+\n 2019-07-02  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* aarch64-opc.c (verify_constraints): Skip GPRs when scanning the"
    },
    {
      "sha": "621675069668974dfc82657d7b41a3751a0e5fc3",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 28,
      "deletions": 28,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83adff695c522df8259e421162e194a95713eb45/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83adff695c522df8259e421162e194a95713eb45/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=83adff695c522df8259e421162e194a95713eb45",
      "patch": "@@ -3961,20 +3961,20 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   _SVE_INSNC (\"fcvt\", 0x65c9a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n   _SVE_INSNC (\"fcvt\", 0x65caa000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n   _SVE_INSNC (\"fcvt\", 0x65cba000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n-  _SVE_INSNC (\"fcvtzs\", 0x655aa000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzs\", 0x655ca000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzs\", 0x655ea000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzs\", 0x659ca000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzs\", 0x65d8a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzs\", 0x65dca000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzs\", 0x65dea000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzu\", 0x655ba000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzu\", 0x655da000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzu\", 0x655fa000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzu\", 0x659da000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzu\", 0x65d9a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzu\", 0x65dda000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"fcvtzu\", 0x65dfa000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX, 0),\n+  _SVE_INSNC (\"fcvtzs\", 0x655aa000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzs\", 0x655ca000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzs\", 0x655ea000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzs\", 0x659ca000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzs\", 0x65d8a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzs\", 0x65dca000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzs\", 0x65dea000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzu\", 0x655ba000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzu\", 0x655da000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzu\", 0x655fa000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzu\", 0x659da000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzu\", 0x65d9a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzu\", 0x65dda000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"fcvtzu\", 0x65dfa000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n   _SVE_INSNC (\"fdiv\", 0x650d8000, 0xff3fe000, sve_size_hsd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_HSD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSNC (\"fdivr\", 0x650c8000, 0xff3fe000, sve_size_hsd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_HSD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSN (\"fdup\", 0x2539c000, 0xff3fe000, sve_size_hsd, 0, OP2 (SVE_Zd, SVE_FPIMM8), OP_SVE_VU_HSD, F_HAS_ALIAS, 0),\n@@ -4370,13 +4370,13 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   _SVE_INSNC (\"revw\", 0x05e68000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX, 0),\n   _SVE_INSNC (\"sabd\", 0x040c0000, 0xff3fe000, sve_size_bhsd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_BHSD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSN (\"saddv\", 0x04002000, 0xff3fe000, sve_size_bhs, 0, OP3 (SVE_Vd, SVE_Pg3, SVE_Zn), OP_SVE_DUV_BHS, 0, 0),\n-  _SVE_INSNC (\"scvtf\", 0x6552a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"scvtf\", 0x6554a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"scvtf\", 0x6594a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"scvtf\", 0x65d0a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"scvtf\", 0x6556a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMD, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"scvtf\", 0x65d4a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"scvtf\", 0x65d6a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX, 0),\n+  _SVE_INSNC (\"scvtf\", 0x6552a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"scvtf\", 0x6554a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"scvtf\", 0x6594a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"scvtf\", 0x65d0a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"scvtf\", 0x6556a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"scvtf\", 0x65d4a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"scvtf\", 0x65d6a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n   _SVE_INSNC (\"sdiv\", 0x04940000, 0xffbfe000, sve_size_sd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_SD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSNC (\"sdivr\", 0x04960000, 0xffbfe000, sve_size_sd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_SD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSNC (\"sdot\", 0x44800000, 0xffa0fc00, sve_size_sd, 0, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_VVV_SD_BH, 0, C_SCAN_MOVPRFX, 0),\n@@ -4522,13 +4522,13 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   _SVE_INSN (\"trn2\", 0x05207400, 0xff20fc00, sve_size_bhsd, 0, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_VVV_BHSD, 0, 0),\n   _SVE_INSNC (\"uabd\", 0x040d0000, 0xff3fe000, sve_size_bhsd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_BHSD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSN (\"uaddv\", 0x04012000, 0xff3fe000, sve_size_bhsd, 0, OP3 (SVE_Vd, SVE_Pg3, SVE_Zn), OP_SVE_DUV_BHSD, 0, 0),\n-  _SVE_INSNC (\"ucvtf\", 0x6553a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"ucvtf\", 0x6555a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"ucvtf\", 0x6595a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"ucvtf\", 0x65d1a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"ucvtf\", 0x6557a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMD, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"ucvtf\", 0x65d5a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX, 0),\n-  _SVE_INSNC (\"ucvtf\", 0x65d7a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX, 0),\n+  _SVE_INSNC (\"ucvtf\", 0x6553a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMH, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"ucvtf\", 0x6555a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"ucvtf\", 0x6595a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"ucvtf\", 0x65d1a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMS, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"ucvtf\", 0x6557a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_HMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"ucvtf\", 0x65d5a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_SMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n+  _SVE_INSNC (\"ucvtf\", 0x65d7a000, 0xffffe000, sve_misc, 0, OP3 (SVE_Zd, SVE_Pg3, SVE_Zn), OP_SVE_DMD, 0, C_SCAN_MOVPRFX | C_MAX_ELEM, 0),\n   _SVE_INSNC (\"udiv\", 0x04950000, 0xffbfe000, sve_size_sd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_SD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSNC (\"udivr\", 0x04970000, 0xffbfe000, sve_size_sd, 0, OP4 (SVE_Zd, SVE_Pg3, SVE_Zd, SVE_Zm_5), OP_SVE_VMVV_SD, 0, C_SCAN_MOVPRFX, 2),\n   _SVE_INSNC (\"udot\", 0x44800400, 0xffa0fc00, sve_size_sd, 0, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_VVV_SD_BH, 0, C_SCAN_MOVPRFX, 0),"
    }
  ]
}