{
  "sha": "bc2a507e6e90fc5766bd68d368441f5b511c2ef1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmMyYTUwN2U2ZTkwZmM1NzY2YmQ2OGQzNjg0NDFmNWI1MTFjMmVmMQ==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-02-17T01:07:51Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-02-26T17:25:40Z"
    },
    "message": "Add tests for gdb.Value(bufobj, type) constructor\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-value.exp (test_value_from_buffer): New proc with\n\tcall from main program.",
    "tree": {
      "sha": "ad9100eb29edcd89851c54f01335094d77496b9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ad9100eb29edcd89851c54f01335094d77496b9c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bc2a507e6e90fc5766bd68d368441f5b511c2ef1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc2a507e6e90fc5766bd68d368441f5b511c2ef1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bc2a507e6e90fc5766bd68d368441f5b511c2ef1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc2a507e6e90fc5766bd68d368441f5b511c2ef1/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe07eca59d0544eb6c56c3559da9ceece23cae6e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe07eca59d0544eb6c56c3559da9ceece23cae6e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe07eca59d0544eb6c56c3559da9ceece23cae6e"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 50,
    "deletions": 0
  },
  "files": [
    {
      "sha": "cb51bcbe124d71e6460c6a2b266f0d07354c7305",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc2a507e6e90fc5766bd68d368441f5b511c2ef1/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc2a507e6e90fc5766bd68d368441f5b511c2ef1/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=bc2a507e6e90fc5766bd68d368441f5b511c2ef1",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-26  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* gdb.python/py-value.exp (test_value_from_buffer): New proc with\n+\tcall from main program.\n+\n 2019-02-23  Joel Brobecker  <brobecker@adacore.com>\n \n \t* gdb.ada/mi_ref_changeable.exp: Update copyright year range."
    },
    {
      "sha": "d42aff90f3bd7dc2543d43601a938684eddac2a5",
      "filename": "gdb/testsuite/gdb.python/py-value.exp",
      "status": "modified",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc2a507e6e90fc5766bd68d368441f5b511c2ef1/gdb/testsuite/gdb.python/py-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc2a507e6e90fc5766bd68d368441f5b511c2ef1/gdb/testsuite/gdb.python/py-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-value.exp?ref=bc2a507e6e90fc5766bd68d368441f5b511c2ef1",
      "patch": "@@ -510,6 +510,50 @@ proc test_float_conversion {} {\n     gdb_test \"python print(float(gdb.Value(0)))\" \"0\\\\.0\"\n }\n \n+proc test_value_from_buffer {} {\n+  global gdb_prompt\n+  global gdb_py_is_py3k\n+\n+  gdb_py_test_silent_cmd \"python tp=gdb.lookup_type('int')\" \"look up int type\" 0\n+  gdb_py_test_silent_cmd \"python size_a=gdb.parse_and_eval('sizeof(a)')\" \\\n+                         \"find size of a\" 0\n+  gdb_py_test_silent_cmd \"python size_a0=gdb.parse_and_eval('sizeof(a\\[0\\])')\" \\\n+                         \"find size of element of a\" 0\n+  gdb_py_test_silent_cmd \"python addr=gdb.parse_and_eval('&a')\" \\\n+                         \"find address of a\" 0\n+  gdb_py_test_silent_cmd \"python b=gdb.selected_inferior().read_memory(addr,size_a)\" \\\n+                         \"read buffer from memory\" 1\n+  gdb_test \"python v=gdb.Value(b,tp); print(v)\" \"1\" \\\n+            \"construct value from buffer\"\n+  gdb_test \"python v=gdb.Value(b\\[size_a0:\\],tp); print(v)\" \"2\" \\\n+            \"convert 2nd elem of buffer to value\"\n+  gdb_test \"python v=gdb.Value(b\\[2*size_a0:\\],tp); print(v)\" \"3\" \\\n+           \"convert 3rd elem of buffer to value\"\n+  gdb_test \"python v=gdb.Value(b\\[2*size_a0+1:\\],tp); print(v)\" \\\n+           \"TypeError: Size of type is larger than that of buffer object\\..*\" \\\n+\t   \"attempt to convert smaller buffer than size of type\"\n+  gdb_py_test_silent_cmd \"python atp=tp.array(2) ; print(atp)\" \\\n+                         \"make array type\" 0\n+  gdb_py_test_silent_cmd \"python va=gdb.Value(b,atp)\" \\\n+                         \"construct array value from buffer\" 0\n+  gdb_test \"python print(va)\" \"\\\\{1, 2, 3\\\\}\" \"print array value\"\n+  gdb_test \"python print(va\\[0\\])\" \"1\" \"print first array element\"\n+  gdb_test \"python print(va\\[1\\])\" \"2\" \"print second array element\"\n+  gdb_test \"python print(va\\[2\\])\" \"3\" \"print third array element\"\n+  gdb_test \"python print(va\\[3\\])\" \"gdb\\.error: no such vector element.*\" \\\n+           \"print out of bounds array element\"\n+  gdb_py_test_silent_cmd \"python atpbig=tp.array(3)\" \"make bigger array type\" 0\n+  gdb_test \"python vabig=gdb.Value(b,atpbig)\" \\\n+           \"ValueError: Size of type is larger than that of buffer object\\..*\" \\\n+\t   \"attempt to construct large value with small buffer\" \n+  gdb_test \"python v=gdb.Value(2048,tp)\" \\\n+           \"TypeError: Object must support the python buffer protocol\\..*\" \\\n+           \"attempt to construct value from buffer with non-buffer object\"\n+  gdb_test \"python v=gdb.Value(b,'int'); print(v)\" \\\n+           \"TypeError: type argument must be a gdb\\.Type\\..*\" \\\n+\t   \"attempt to construct value with string as type\"\n+}\n+\n # Build C version of executable.  C++ is built later.\n if { [build_inferior \"${binfile}\" \"c\"] < 0 } {\n     return -1\n@@ -538,6 +582,7 @@ if ![runto_main] then {\n }\n \n test_value_in_inferior\n+test_value_from_buffer\n test_inferior_function_call\n test_value_after_death\n "
    }
  ]
}