{
  "sha": "9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWVmNmQ0YTFiNDhlYTFmNTY5M2FhMjcwYjhiNzY4MTQ2YTMxYjllOQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-10T13:19:40Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-12-11T22:10:50Z"
    },
    "message": "gdb: give deprecated command warning for aliases with a prefix\n\nI noticed that deprecated aliases that have a prefix don't give a\ndeprecated command warning.  For example looking in mi/mi-main.c we\nsee this:\n\n  c = add_alias_cmd (\"target-async\", \"mi-async\", class_run, 0, &setlist);\n  deprecate_cmd (c, \"set mi-async\");\n  c = add_alias_cmd (\"target-async\", \"mi-async\", class_run, 0, &showlist);\n  deprecate_cmd (c, \"show mi-async\");\n\nSo both 'set target-async' and 'show target-async' are deprecated and\nshould be giving a warning, however, in use we see no warning given.\n\nThis is a consequence of how the code that should give this\nwarning (deprecated_cmd_warning) performs a second command lookup in\norder to distinguish between aliases and real commands, and that the\ncode that calls this (lookup_cmd_1) strips off prefix commands as it\ncalls itself recursively.\n\nAs a result when we are considering an alias like 'set target-async'\nwe first enter lookup_cmd_1 with text = \"set target-async\", we spot\nthe 'set' command prefix and then recursively call lookup_cmd_1 with\ntext = \"target-async\".\n\nWe spot that 'target-async' is a known alias but that it is\ndeprecated, and so call deprecated_cmd_warning passing in the value of\ntext, which remember is now \"target-async\".\n\nIn deprecated_cmd_warning we again perform a command lookup starting\nfrom the top-level cmdlist, but now we're trying to find just\n\"target-async\", this fails (as this command requires the 'set' prefix,\nand so no warning is given.\n\nI resolved this issue by passing a command list to the function\ndeprecated_cmd_warning, this is the list in which the command can be\nfound.\n\nA new test is added to cover this case.\n\nHowever, there is an additional problem which will be addressed in a\nsubsequent patch.\n\nConsider this GDB session:\n\n  (gdb) define set xxx_yyy\n  Type commands for definition of \"set xxx_yyy\".\n  End with a line saying just \"end\".\n  >echo in set xxx_yyy command\\n\n  >end\n  (gdb) alias set qqq_aaa=set xxx_yyy\n  (gdb) maintenance deprecate set qqq_aaa\n  (gdb) set qqq_aaa\n  Warning: 'qqq_aaa', an alias for the command 'xxx_yyy' is deprecated.\n  No alternative known.\n\n  in set xxx_yyy command\n  (gdb)\n\nNotice the warning mentions 'qqq_aaa' and 'xxx_yyy', I consider this\nto be wrong.  I think the proper warning should read:\n\n  (gdb) set qqq_aaa\n  Warning: 'set qqq_aaa', an alias for the command 'set xxx_yyy' is deprecated.\n  No alternative known.\n\nWith the 'set' prefixes added.  A later patch will resolve this\nissue.\n\ngdb/ChangeLog:\n\n\tPR cli/15104\n\t* cli/cli-decode.c (lookup_cmd_1): Pass command list to\n\tdeprecated_cmd_warning.\n\t(deprecated_cmd_warning): Take extra parameter, call\n\tlookup_cmd_composition_1 and pass new parameter through.\n\t(lookup_cmd_composition_1): New function, takes implementation of\n\tlookup_cmd_composition but with extra parameter.\n\t(lookup_cmd_composition): Now calls lookup_cmd_composition_1\n\tpassing in cmdlist.\n\t* command.h (deprecated_cmd_warning): Add extra parameter to\n\tdeclaration.\n\t* top.c (execute_command): Pass cmdlist to deprecated_cmd_warning.\n\ngdb/testsuite/ChangeLog:\n\n\tPR cli/15104\n\t* gdb.base/commands.exp: Add additional tests.\n\t* gdb.base/completion.exp: Add additional tests.",
    "tree": {
      "sha": "f65e45536ae533f0d0ed7f54b2386949905c59b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f65e45536ae533f0d0ed7f54b2386949905c59b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1536146f30900b77c8381930669532f4073df196",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1536146f30900b77c8381930669532f4073df196",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1536146f30900b77c8381930669532f4073df196"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 90,
    "deletions": 15
  },
  "files": [
    {
      "sha": "f01ba9951a0c11a2bd23804b6e41af6c8d096ace",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "patch": "@@ -1,3 +1,18 @@\n+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR cli/15104\n+\t* cli/cli-decode.c (lookup_cmd_1): Pass command list to\n+\tdeprecated_cmd_warning.\n+\t(deprecated_cmd_warning): Take extra parameter, call\n+\tlookup_cmd_composition_1 and pass new parameter through.\n+\t(lookup_cmd_composition_1): New function, takes implementation of\n+\tlookup_cmd_composition but with extra parameter.\n+\t(lookup_cmd_composition): Now calls lookup_cmd_composition_1\n+\tpassing in cmdlist.\n+\t* command.h (deprecated_cmd_warning): Add extra parameter to\n+\tdeclaration.\n+\t* top.c (execute_command): Pass cmdlist to deprecated_cmd_warning.\n+\n 2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* cli/cli-decode.c (lookup_cmd_1): Move header comment into"
    },
    {
      "sha": "dc83f5560e6ddfb7f8d1a97acdcd762c2295a577",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 41,
      "deletions": 13,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "patch": "@@ -50,6 +50,12 @@ static void help_cmd_list (struct cmd_list_element *list,\n \n static void help_all (struct ui_file *stream);\n \n+static int lookup_cmd_composition_1 (const char *text,\n+\t\t\t\t     struct cmd_list_element **alias,\n+\t\t\t\t     struct cmd_list_element **prefix_cmd,\n+\t\t\t\t     struct cmd_list_element **cmd,\n+\t\t\t\t     struct cmd_list_element *cur_list);\n+\n /* Look up a command whose 'prefixlist' is KEY.  Return the command if found,\n    otherwise return NULL.  */\n \n@@ -1678,7 +1684,7 @@ lookup_cmd_1 (const char **text, struct cmd_list_element *clist,\n        flags.  */\n \n       if (found->deprecated_warn_user && !lookup_for_completion_p)\n-\tdeprecated_cmd_warning (line);\n+\tdeprecated_cmd_warning (line, clist);\n \n       /* Return the default_args of the alias, not the default_args\n \t of the command it is pointing to.  */\n@@ -1891,13 +1897,13 @@ lookup_cmd (const char **line, struct cmd_list_element *list,\n    \n */\n void\n-deprecated_cmd_warning (const char *text)\n+deprecated_cmd_warning (const char *text, struct cmd_list_element *list)\n {\n   struct cmd_list_element *alias = NULL;\n   struct cmd_list_element *prefix_cmd = NULL;\n   struct cmd_list_element *cmd = NULL;\n \n-  if (!lookup_cmd_composition (text, &alias, &prefix_cmd, &cmd))\n+  if (!lookup_cmd_composition_1 (text, &alias, &prefix_cmd, &cmd, list))\n     /* Return if text doesn't evaluate to a command.  */\n     return;\n \n@@ -1949,8 +1955,7 @@ deprecated_cmd_warning (const char *text)\n   cmd->deprecated_warn_user = 0;\n }\n \n-\n-/* Look up the contents of TEXT as a command in the command list 'cmdlist'.\n+/* Look up the contents of TEXT as a command in the command list CUR_LIST.\n    Return 1 on success, 0 on failure.\n \n    If TEXT refers to an alias, *ALIAS will point to that alias.\n@@ -1964,23 +1969,22 @@ deprecated_cmd_warning (const char *text)\n    exist, they are NULL when we return.\n \n */\n-int\n-lookup_cmd_composition (const char *text,\n-\t\t\tstruct cmd_list_element **alias,\n-\t\t\tstruct cmd_list_element **prefix_cmd,\n-\t\t\tstruct cmd_list_element **cmd)\n+\n+static int\n+lookup_cmd_composition_1 (const char *text,\n+\t\t\t  struct cmd_list_element **alias,\n+\t\t\t  struct cmd_list_element **prefix_cmd,\n+\t\t\t  struct cmd_list_element **cmd,\n+\t\t\t  struct cmd_list_element *cur_list)\n {\n   char *command;\n   int len, nfound;\n-  struct cmd_list_element *cur_list;\n   struct cmd_list_element *prev_cmd;\n \n   *alias = NULL;\n   *prefix_cmd = NULL;\n   *cmd = NULL;\n \n-  cur_list = cmdlist;\n-\n   text = skip_spaces (text);\n \n   while (1)\n@@ -2038,6 +2042,30 @@ lookup_cmd_composition (const char *text,\n     }\n }\n \n+/* Look up the contents of TEXT as a command in the command list 'cmdlist'.\n+   Return 1 on success, 0 on failure.\n+\n+   If TEXT refers to an alias, *ALIAS will point to that alias.\n+\n+   If TEXT is a subcommand (i.e. one that is preceded by a prefix\n+   command) set *PREFIX_CMD.\n+\n+   Set *CMD to point to the command TEXT indicates.\n+\n+   If any of *ALIAS, *PREFIX_CMD, or *CMD cannot be determined or do not\n+   exist, they are NULL when we return.\n+\n+*/\n+\n+int\n+lookup_cmd_composition (const char *text,\n+\t\t\tstruct cmd_list_element **alias,\n+\t\t\tstruct cmd_list_element **prefix_cmd,\n+\t\t\tstruct cmd_list_element **cmd)\n+{\n+  return lookup_cmd_composition_1 (text, alias, prefix_cmd, cmd, cmdlist);\n+}\n+\n /* Helper function for SYMBOL_COMPLETION_FUNCTION.  */\n \n /* Return a vector of char pointers which point to the different"
    },
    {
      "sha": "9e61d19d0bd2da35694a7ab664dd20a83a87fbc4",
      "filename": "gdb/command.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/command.h?ref=9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "patch": "@@ -329,7 +329,7 @@ extern struct cmd_list_element *lookup_cmd_1\n extern struct cmd_list_element *deprecate_cmd (struct cmd_list_element *,\n \t\t\t\t\t       const char * );\n \n-extern void deprecated_cmd_warning (const char *);\n+extern void deprecated_cmd_warning (const char *, struct cmd_list_element *);\n \n extern int lookup_cmd_composition (const char *text,\n \t\t\t\t   struct cmd_list_element **alias,"
    },
    {
      "sha": "0eb3ce680e5e8abd662862bb1ebe3a441db3416a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "patch": "@@ -1,3 +1,9 @@\n+2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\tPR cli/15104\n+\t* gdb.base/commands.exp: Add additional tests.\n+\t* gdb.base/completion.exp: Add additional tests.\n+\n 2020-12-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/completion.exp: Add additional tests."
    },
    {
      "sha": "19f712c46f31741ad2a422e3e736e60dfdf433ae",
      "filename": "gdb/testsuite/gdb.base/commands.exp",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/testsuite/gdb.base/commands.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/testsuite/gdb.base/commands.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/commands.exp?ref=9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "patch": "@@ -689,6 +689,25 @@ proc_with_prefix deprecated_command_test {} {\n     gdb_test \"maintenance deprecate\" \\\n \t    \"\\\"maintenance deprecate\\\".*\" \\\n \t    \"deprecate with no arguments\"\n+\n+    # Test that an alias with a prefix still gives a warning.\n+    set file1 [standard_output_file xxx_yyy_cmd]\n+    set fd [open \"$file1\" w]\n+    puts $fd \\\n+\"define set xxx_yyy\n+echo in command xxx_yyy\\\\n\n+end\n+\n+alias set qqq_aaa=set xxx_yyy\n+maintenance deprecate set qqq_aaa\"\n+    close $fd\n+    gdb_test_no_output \"source $file1\" \\\n+\t\"source file containing xxx_yyy command and its alias\"\n+    gdb_test \"set qqq_aaa\" \\\n+\t\"Warning: 'qqq_aaa', an alias for the command 'xxx_yyy' is deprecated\\\\.\\r\\n.*No alternative known\\\\..*\" \\\n+\t\"deprecated alias with prefix give a warning\"\n+\n+    file delete $file1\n }\n \n proc_with_prefix bp_deleted_in_command_test {} {"
    },
    {
      "sha": "8000d52049167184bdfca2b06aad1a05b121cd3d",
      "filename": "gdb/testsuite/gdb.base/completion.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/testsuite/gdb.base/completion.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/testsuite/gdb.base/completion.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/completion.exp?ref=9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "patch": "@@ -968,3 +968,10 @@ foreach_with_prefix cmd { \"watch\" \"awatch\" \"rwatch\" } {\n gdb_test_no_output \"alias xxx_yyy_zzz=break\"\n gdb_test_no_output \"maint deprecate xxx_yyy_zzz\"\n test_gdb_complete_unique \"xxx_yyy_\" \"xxx_yyy_zzz\"\n+\n+# Check that tab completion of a deprecated alias with a prefix does\n+# not display the warning about the alias being deprecated during tab\n+# completion.\n+gdb_test_no_output \"alias set aaa_bbb_ccc=set debug\"\n+gdb_test_no_output \"maint deprecate set aaa_bbb_ccc\"\n+test_gdb_complete_unique \"set aaa_bbb_\" \"set aaa_bbb_ccc\""
    },
    {
      "sha": "b515bbfbd199805927645b0b8331166e30305ff8",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=9ef6d4a1b48ea1f5693aa270b8b768146a31b9e9",
      "patch": "@@ -639,7 +639,7 @@ execute_command (const char *p, int from_tty)\n       execute_cmd_pre_hook (c);\n \n       if (c->deprecated_warn_user)\n-\tdeprecated_cmd_warning (line);\n+\tdeprecated_cmd_warning (line, cmdlist);\n \n       /* c->user_commands would be NULL in the case of a python command.  */\n       if (c->theclass == class_user && c->user_commands)"
    }
  ]
}