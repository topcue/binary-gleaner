{
  "sha": "e170989694aecb458d1bbb6a1db6bb712ced707d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTE3MDk4OTY5NGFlY2I0NThkMWJiYjZhMWRiNmJiNzEyY2VkNzA3ZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-09-24T22:01:14Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-31T23:02:59Z"
    },
    "message": "gdb: Don't print a newline in language la_print_typedef methods\n\nWhen calling the language la_print_typedef method, don't include a\nnewline at the end, instead print the newline from the users of\nla_print_typedef.\n\nThis change will be useful in a later commit when the output from\nla_print_typedef will be placed into an MI output field, in which case\nthe trailing newline is not required.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-typeprint.c (ada_print_typedef): Don't print newline at the\n\tend.\n\t* c-typeprint.c (c_print_typedef): Likewise.\n\t* f-typeprint.c (f_print_typedef): Likewise.\n\t* m2-typeprint.c (m2_print_typedef): Likewise.\n\t* p-typeprint.c (pascal_print_typedef): Likewise.\n\t* rust-lang.c (rust_print_typedef): Likewise.\n\t* symtab.c (print_symbol_info): Print a newline after calling\n\ttypedef_print.\n\nChange-Id: I6e697ea1ec0eadaa31aefaea959b2055188d680d",
    "tree": {
      "sha": "ca057c9a46b9a5d6162fd900a64d27783381f7da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ca057c9a46b9a5d6162fd900a64d27783381f7da"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e170989694aecb458d1bbb6a1db6bb712ced707d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e170989694aecb458d1bbb6a1db6bb712ced707d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e170989694aecb458d1bbb6a1db6bb712ced707d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e170989694aecb458d1bbb6a1db6bb712ced707d/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "165f8965d770708f1dee623e308374ac108e6578",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/165f8965d770708f1dee623e308374ac108e6578",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/165f8965d770708f1dee623e308374ac108e6578"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 18,
    "deletions": 10
  },
  "files": [
    {
      "sha": "381147b32178ed71a9f1fd13955aa4df2d522d7e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -1,3 +1,15 @@\n+2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-typeprint.c (ada_print_typedef): Don't print newline at the\n+\tend.\n+\t* c-typeprint.c (c_print_typedef): Likewise.\n+\t* f-typeprint.c (f_print_typedef): Likewise.\n+\t* m2-typeprint.c (m2_print_typedef): Likewise.\n+\t* p-typeprint.c (pascal_print_typedef): Likewise.\n+\t* rust-lang.c (rust_print_typedef): Likewise.\n+\t* symtab.c (print_symbol_info): Print a newline after calling\n+\ttypedef_print.\n+\n 2019-10-31  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* symtab.c (info_module_cmdlist): New variable."
    },
    {
      "sha": "f89dd23ed8274e184c75311d4cd14a48c7fb4582",
      "filename": "gdb/ada-typeprint.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/ada-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/ada-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-typeprint.c?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -945,5 +945,4 @@ ada_print_typedef (struct type *type, struct symbol *new_symbol,\n {\n   type = ada_check_typedef (type);\n   ada_print_type (type, \"\", stream, 0, 0, &type_print_raw_options);\n-  fprintf_filtered (stream, \"\\n\");\n }"
    },
    {
      "sha": "e0f1714da11591fe47a5a2dce0f3afdaa3c8aa87",
      "filename": "gdb/c-typeprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/c-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/c-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-typeprint.c?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -211,7 +211,7 @@ c_print_typedef (struct type *type,\n \t\t SYMBOL_LINKAGE_NAME (new_symbol)) != 0\n       || TYPE_CODE (SYMBOL_TYPE (new_symbol)) == TYPE_CODE_TYPEDEF)\n     fprintf_filtered (stream, \" %s\", SYMBOL_PRINT_NAME (new_symbol));\n-  fprintf_filtered (stream, \";\\n\");\n+  fprintf_filtered (stream, \";\");\n }\n \n /* If TYPE is a derived type, then print out derivation information."
    },
    {
      "sha": "027bcdde0f91254dc577afe25b082c69a502e20c",
      "filename": "gdb/f-typeprint.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/f-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/f-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-typeprint.c?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -54,7 +54,6 @@ f_print_typedef (struct type *type, struct symbol *new_symbol,\n {\n   type = check_typedef (type);\n   f_print_type (type, \"\", stream, 0, 0, &type_print_raw_options);\n-  fprintf_filtered (stream, \"\\n\");\n }\n \n /* LEVEL is the depth to indent lines by.  */"
    },
    {
      "sha": "e81a9e568886b8931fc40712cd5d9a554ddd5b1d",
      "filename": "gdb/m2-typeprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/m2-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/m2-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-typeprint.c?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -170,7 +170,7 @@ m2_print_typedef (struct type *type, struct symbol *new_symbol,\n   else\n     fprintf_filtered (stream, \"<builtin> = \");\n   type_print (type, \"\", stream, 0);\n-  fprintf_filtered (stream, \";\\n\");\n+  fprintf_filtered (stream, \";\");\n }\n \n /* m2_type_name - if a, type, has a name then print it.  */"
    },
    {
      "sha": "da30d4a3ac2802f399e6b535d4237972cd2bdd51",
      "filename": "gdb/p-typeprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/p-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/p-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-typeprint.c?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -101,7 +101,7 @@ pascal_print_typedef (struct type *type, struct symbol *new_symbol,\n   fprintf_filtered (stream, \"type \");\n   fprintf_filtered (stream, \"%s = \", SYMBOL_PRINT_NAME (new_symbol));\n   type_print (type, \"\", stream, 0);\n-  fprintf_filtered (stream, \";\\n\");\n+  fprintf_filtered (stream, \";\");\n }\n \n /* If TYPE is a derived type, then print out derivation information."
    },
    {
      "sha": "838d9019adfbca32ee205b88da2842ecef0f1e13",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -831,7 +831,7 @@ rust_print_typedef (struct type *type,\n   type = check_typedef (type);\n   fprintf_filtered (stream, \"type %s = \", SYMBOL_PRINT_NAME (new_symbol));\n   type_print (type, \"\", stream, 0);\n-  fprintf_filtered (stream, \";\\n\");\n+  fprintf_filtered (stream, \";\");\n }\n \n /* la_print_type implementation for Rust.  */"
    },
    {
      "sha": "2c934b9c22f022439086537f0593cab0d6071f55",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e170989694aecb458d1bbb6a1db6bb712ced707d/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=e170989694aecb458d1bbb6a1db6bb712ced707d",
      "patch": "@@ -4774,10 +4774,8 @@ print_symbol_info (enum search_domain kind,\n       if (TYPE_CODE (SYMBOL_TYPE (sym)) == TYPE_CODE_TYPEDEF)\n \ttypedef_print (SYMBOL_TYPE (sym), sym, gdb_stdout);\n       else\n-\t{\n-\t  type_print (SYMBOL_TYPE (sym), \"\", gdb_stdout, -1);\n-\t  printf_filtered (\"\\n\");\n-\t}\n+\ttype_print (SYMBOL_TYPE (sym), \"\", gdb_stdout, -1);\n+      printf_filtered (\"\\n\");\n     }\n   /* variable, func, or typedef-that-is-c++-class.  */\n   else if (kind < TYPES_DOMAIN"
    }
  ]
}