{
  "sha": "ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWNkMGE2YjM1ZDMyYWE2YWNhOTEzZTJkMDM0OGNmZGY3ZTc4ZDZjMw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-17T18:01:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-17T18:01:01Z"
    },
    "message": "gdb: don't handle old == nullptr in add_alias_cmd\n\nI don't think this can ever happen, that we add an alias command and\npass a nullptr old (target) command.  Remove the \"if\" handling this,\nreplace with an assert.\n\ngdb/ChangeLog:\n\n\t* cli/cli-decode.c (add_alias_cmd): Don't handle old == 0.\n\nChange-Id: Ibb39e8dc4e0c465fa42e6826215f30a0a0aef932",
    "tree": {
      "sha": "63610a7843f0644a5b62494b6dda4b65e97b71ef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/63610a7843f0644a5b62494b6dda4b65e97b71ef"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "413b49c2b6619a7ce16322c7f94079205031cda4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/413b49c2b6619a7ce16322c7f94079205031cda4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/413b49c2b6619a7ce16322c7f94079205031cda4"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 5,
    "deletions": 12
  },
  "files": [
    {
      "sha": "4ff50087f7558c49201766e2fb98b3f697814e7b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-17  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* cli/cli-decode.c (add_alias_cmd): Don't handle old == 0.\n+\n 2021-05-17  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* cli/cli-decode.h (prefixname): Make const, move implementation"
    },
    {
      "sha": "1bfc9477905a8c581d78f49177272dcdf10ffd8c",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 1,
      "deletions": 12,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=ecd0a6b35d32aa6aca913e2d0348cfdf7e78d6c3",
      "patch": "@@ -310,18 +310,7 @@ add_alias_cmd (const char *name, cmd_list_element *old,\n \t       enum command_class theclass, int abbrev_flag,\n \t       struct cmd_list_element **list)\n {\n-  if (old == 0)\n-    {\n-      struct cmd_list_element *prehook, *prehookee, *posthook, *posthookee;\n-      struct cmd_list_element *aliases = delete_cmd (name, list,\n-\t\t\t\t\t\t     &prehook, &prehookee,\n-\t\t\t\t\t\t     &posthook, &posthookee);\n-\n-      /* If this happens, it means a programmer error somewhere.  */\n-      gdb_assert (!aliases && !prehook && !prehookee\n-\t\t  && !posthook && ! posthookee);\n-      return 0;\n-    }\n+  gdb_assert (old != nullptr);\n \n   struct cmd_list_element *c = add_cmd (name, theclass, old->doc, list);\n "
    }
  ]
}