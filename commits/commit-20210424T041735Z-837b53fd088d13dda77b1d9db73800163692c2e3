{
  "sha": "837b53fd088d13dda77b1d9db73800163692c2e3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODM3YjUzZmQwODhkMTNkZGE3N2IxZDlkYjczODAwMTYzNjkyYzJlMw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-24T04:10:44Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-24T04:17:35Z"
    },
    "message": "sim: options: increase max option count\n\nAs we turn on more modules by default for all ports, the number of\noptions has been increasing.  The sim-options module has a limit on\nthe number of options it can support, and if it's exceeded, it likes\nto go into an infinite loop.  Increase the ceiling and add an assert\nso we abort right away instead of hanging.\n\nThis will be needed to turn on hw support for v850 as it will then\nexceed the current limit.",
    "tree": {
      "sha": "545d201075d262c1e6692b917fe8ed05e19b49a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/545d201075d262c1e6692b917fe8ed05e19b49a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/837b53fd088d13dda77b1d9db73800163692c2e3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/837b53fd088d13dda77b1d9db73800163692c2e3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/837b53fd088d13dda77b1d9db73800163692c2e3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/837b53fd088d13dda77b1d9db73800163692c2e3/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9d90335212595f76b0f29698dfb2468c7318c171",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d90335212595f76b0f29698dfb2468c7318c171",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9d90335212595f76b0f29698dfb2468c7318c171"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 9,
    "deletions": 1
  },
  "files": [
    {
      "sha": "ed4d9f7da65b7c69fdbee361165708609030a996",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/837b53fd088d13dda77b1d9db73800163692c2e3/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/837b53fd088d13dda77b1d9db73800163692c2e3/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=837b53fd088d13dda77b1d9db73800163692c2e3",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-24  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-options.c (ARG_HASH_SIZE): Increase to 256.\n+\t(sim_parse_args): Call SIM_ASSERT.\n+\n 2021-04-22  Tom Tromey  <tom@tromey.com>\n \n \t* sim-utils.c: Update includes."
    },
    {
      "sha": "ab95984e833fdbe33f0f0f15ef12da7b8d8a4768",
      "filename": "sim/common/sim-options.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/837b53fd088d13dda77b1d9db73800163692c2e3/sim/common/sim-options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/837b53fd088d13dda77b1d9db73800163692c2e3/sim/common/sim-options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-options.c?ref=837b53fd088d13dda77b1d9db73800163692c2e3",
      "patch": "@@ -416,7 +416,7 @@ standard_install (SIM_DESC sd)\n /* Return non-zero if arg is a duplicate argument.\n    If ARG is NULL, initialize.  */\n \n-#define ARG_HASH_SIZE 97\n+#define ARG_HASH_SIZE 256\n #define ARG_HASH(a) ((256 * (unsigned char) a[0] + (unsigned char) a[1]) % ARG_HASH_SIZE)\n \n static int\n@@ -478,6 +478,9 @@ sim_parse_args (SIM_DESC sd, char * const *argv)\n       for (opt = ol->options; OPTION_VALID_P (opt); ++opt)\n \t++num_opts;\n \n+  /* We build a hash table of all options, so make sure they all fit.  */\n+  SIM_ASSERT (num_opts <= ARG_HASH_SIZE);\n+\n   /* Initialize duplicate argument checker.  */\n   (void) dup_arg_p (NULL);\n "
    }
  ]
}