{
  "sha": "573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTczZGMwY2M0M2YyYzNjZTRkMjhlYzFhYTFiZjA1ZmM0MzgxMGNkYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-02-27T00:25:38Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-02-27T00:32:42Z"
    },
    "message": "Minor fix in skip_ctf_tests\n\nI noticed an oddity in skip_ctf_tests -- for me it ends up caching the\nstring \"!0\", because it ends with 'return ![...]'.  In Tcl, this is\njust string concatenation.\n\nThe result works because the users of this function have unbraced if\nconditions, like:\n\n    if [skip_ctf_tests] {\n\n... which works because \"if\" re-parses the returned string as an\nexpression, and evaluates that.\n\nThere's only a latent bug here, but this is also un-idiomatic, so I am\nchecking in this patch to fix it.  This way, if someone in the future\nuses a braced condition (which is what I normally recommend), it will\ncontinue to work.\n\ngdb/testsuite/ChangeLog\n2021-02-26  Tom Tromey  <tom@tromey.com>\n\n\t* lib/gdb.exp (skip_ctf_tests): Use expr on result.",
    "tree": {
      "sha": "68d3c38bd1b2eeaacf18b2eced4fe2f7be32861f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/68d3c38bd1b2eeaacf18b2eced4fe2f7be32861f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0cf9ea0b163f4651f2d61252edc6765d98924fe8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0cf9ea0b163f4651f2d61252edc6765d98924fe8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0cf9ea0b163f4651f2d61252edc6765d98924fe8"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "625c4ecf493afab1671a9d8b0d978b5d2d5187c0",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* lib/gdb.exp (skip_ctf_tests): Use expr on result.\n+\n 2021-02-26  Jan Vrany  <jan.vrany@labware.com>\n \n \t* gdb.trace/mi-tsv-changed.exp (test_create_delete_modify_tsv):"
    },
    {
      "sha": "7480bd5665fa96edfec14b058449fa81509c020f",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=573dc0cc43f2c3ce4d28ec1aa1bf05fc43810cda",
      "patch": "@@ -7433,11 +7433,13 @@ gdb_caching_proc skip_ctf_tests {\n \treturn 1\n     }\n \n-    return ![gdb_can_simple_compile ctfdebug {\n+    set can_ctf [gdb_can_simple_compile ctfdebug {\n \tint main () {\n \t    return 0;\n \t}\n     } executable \"additional_flags=-gt\"]\n+\n+    return [expr {!$can_ctf}]\n }\n \n # Return 1 if compiler supports -gstatement-frontiers.  Otherwise,"
    }
  ]
}