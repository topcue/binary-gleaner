{
  "sha": "2faac269d59e57a49cd9f9209e1d39e03e2744bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmZhYWMyNjlkNTllNTdhNDljZDlmOTIwOWUxZDM5ZTAzZTI3NDRiYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:41Z"
    },
    "message": "Introduce c_value_print_int\n\nThis adds c_value_print_int, a value-based analogue of\nc_val_print_int.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* c-valprint.c (c_value_print_int): New function.\n\t(c_value_print_inner): Use it.",
    "tree": {
      "sha": "07bb994909b8fc49f9957a04d944a50deb3d967f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/07bb994909b8fc49f9957a04d944a50deb3d967f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2faac269d59e57a49cd9f9209e1d39e03e2744bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2faac269d59e57a49cd9f9209e1d39e03e2744bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2faac269d59e57a49cd9f9209e1d39e03e2744bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2faac269d59e57a49cd9f9209e1d39e03e2744bc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/da3e2c2923b5c16c47c962bc53ea96678ca6a0e5"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 37,
    "deletions": 3
  },
  "files": [
    {
      "sha": "b5d41ae130f1d18c577b1400f35895bce0205dcb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2faac269d59e57a49cd9f9209e1d39e03e2744bc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2faac269d59e57a49cd9f9209e1d39e03e2744bc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2faac269d59e57a49cd9f9209e1d39e03e2744bc",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* c-valprint.c (c_value_print_int): New function.\n+\t(c_value_print_inner): Use it.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* c-valprint.c (c_value_print_ptr): New function."
    },
    {
      "sha": "80ba5d7195aee58dc4ad3da446b8b02c4f8cb4eb",
      "filename": "gdb/c-valprint.c",
      "status": "modified",
      "additions": 32,
      "deletions": 3,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2faac269d59e57a49cd9f9209e1d39e03e2744bc/gdb/c-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2faac269d59e57a49cd9f9209e1d39e03e2744bc/gdb/c-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-valprint.c?ref=2faac269d59e57a49cd9f9209e1d39e03e2744bc",
      "patch": "@@ -502,6 +502,37 @@ c_val_print_int (struct type *type, struct type *unresolved_type,\n     }\n }\n \n+/* c_value_print helper for TYPE_CODE_INT.  */\n+\n+static void\n+c_value_print_int (struct value *val, struct ui_file *stream,\n+\t\t   const struct value_print_options *options)\n+{\n+  if (options->format || options->output_format)\n+    {\n+      struct value_print_options opts = *options;\n+\n+      opts.format = (options->format ? options->format\n+\t\t     : options->output_format);\n+      value_print_scalar_formatted (val, &opts, 0, stream);\n+    }\n+  else\n+    {\n+      value_print_scalar_formatted (val, options, 0, stream);\n+      /* C and C++ has no single byte int type, char is used\n+\t instead.  Since we don't know whether the value is really\n+\t intended to be used as an integer or a character, print\n+\t the character equivalent as well.  */\n+      struct type *type = value_type (val);\n+      const gdb_byte *valaddr = value_contents_for_printing (val);\n+      if (c_textual_element_type (type, options->format))\n+\t{\n+\t  fputs_filtered (\" \", stream);\n+\t  LA_PRINT_CHAR (unpack_long (type, valaddr), type, stream);\n+\t}\n+    }\n+}\n+\n /* c_val_print helper for TYPE_CODE_MEMBERPTR.  */\n \n static void\n@@ -602,7 +633,6 @@ c_value_print_inner (struct value *val, struct ui_file *stream, int recurse,\n \t\t     const struct value_print_options *options)\n {\n   struct type *type = value_type (val);\n-  struct type *unresolved_type = type;\n   CORE_ADDR address = value_address (val);\n   const gdb_byte *valaddr = value_contents_for_printing (val);\n \n@@ -633,8 +663,7 @@ c_value_print_inner (struct value *val, struct ui_file *stream, int recurse,\n       break;\n \n     case TYPE_CODE_INT:\n-      c_val_print_int (type, unresolved_type, valaddr, 0, stream,\n-\t\t       val, options);\n+      c_value_print_int (val, stream, options);\n       break;\n \n     case TYPE_CODE_MEMBERPTR:"
    }
  ]
}