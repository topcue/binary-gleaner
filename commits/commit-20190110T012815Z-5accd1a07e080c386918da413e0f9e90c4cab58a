{
  "sha": "5accd1a07e080c386918da413e0f9e90c4cab58a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWFjY2QxYTA3ZTA4MGMzODY5MThkYTQxM2UwZjllOTBjNGNhYjU4YQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2018-11-24T16:49:24Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-10T01:28:15Z"
    },
    "message": "Remove ALL_COMPUNIT_FILETABS\n\nThis removes ALL_COMPUNIT_FILETABS, replacing its uses with ranged for\nloops.\n\nBecause this is still used in the ALL_OBJFILE_FILETABS macro, in some\nplaces a declaration had to be removed or renamed to avoid shadowing.\n\ngdb/ChangeLog\n2019-01-09  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.h (ALL_COMPUNIT_FILETABS): Remove.\n\t(compunit_filetabs): New.\n\t* symtab.c (iterate_over_some_symtabs, find_pc_sect_line): Use\n\tcompunit_filetabs.\n\t(info_sources_command, make_source_files_completion_list): Remove\n\tdeclaration.\n\t* symmisc.c (print_objfile_statistics, dump_objfile)\n\t(maintenance_print_symbols): Remove declaration.\n\t(maintenance_info_symtabs): Use compunit_filetabs.\n\t(maintenance_info_line_tables): Likewise.\n\t* source.c (select_source_symtab): Change local variable name.\n\t(forget_cached_source_info_for_objfile): Remove declaration.\n\t* objfiles.h (ALL_OBJFILE_FILETABS): Use compunit_filetabs.\n\t* objfiles.c (objfile_relocate1): Remove declaration.\n\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove\n\tdeclaration.\n\t* maint.c (count_symtabs_and_blocks): Use compunit_filetabs.\n\t* coffread.c (coff_symtab_read): Remove declaration.\n\t* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use\n\tcompunit_filetabs.",
    "tree": {
      "sha": "e57e6b4dbc75344a342a52a15e4d6bcbfcabadae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e57e6b4dbc75344a342a52a15e4d6bcbfcabadae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5accd1a07e080c386918da413e0f9e90c4cab58a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5accd1a07e080c386918da413e0f9e90c4cab58a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5accd1a07e080c386918da413e0f9e90c4cab58a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5accd1a07e080c386918da413e0f9e90c4cab58a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d8aeb77f040ced7d37ab83f032b2e4ded2c81ca5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8aeb77f040ced7d37ab83f032b2e4ded2c81ca5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d8aeb77f040ced7d37ab83f032b2e4ded2c81ca5"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 52,
    "deletions": 45
  },
  "files": [
    {
      "sha": "eb6c3a833018736da541b965c910fedc99a379c6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -1,3 +1,26 @@\n+2019-01-09  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.h (ALL_COMPUNIT_FILETABS): Remove.\n+\t(compunit_filetabs): New.\n+\t* symtab.c (iterate_over_some_symtabs, find_pc_sect_line): Use\n+\tcompunit_filetabs.\n+\t(info_sources_command, make_source_files_completion_list): Remove\n+\tdeclaration.\n+\t* symmisc.c (print_objfile_statistics, dump_objfile)\n+\t(maintenance_print_symbols): Remove declaration.\n+\t(maintenance_info_symtabs): Use compunit_filetabs.\n+\t(maintenance_info_line_tables): Likewise.\n+\t* source.c (select_source_symtab): Change local variable name.\n+\t(forget_cached_source_info_for_objfile): Remove declaration.\n+\t* objfiles.h (ALL_OBJFILE_FILETABS): Use compunit_filetabs.\n+\t* objfiles.c (objfile_relocate1): Remove declaration.\n+\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Remove\n+\tdeclaration.\n+\t* maint.c (count_symtabs_and_blocks): Use compunit_filetabs.\n+\t* coffread.c (coff_symtab_read): Remove declaration.\n+\t* buildsym.c (buildsym_compunit::end_symtab_with_blockvector): Use\n+\tcompunit_filetabs.\n+\n 2019-01-09  Tom Tromey  <tom@tromey.com>\n \n \t* symtab.c (lookup_objfile_from_block)"
    },
    {
      "sha": "1afff3d12ee70fe46ea4caa3396a6ab34bdab319",
      "filename": "gdb/buildsym.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/buildsym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/buildsym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -927,7 +927,6 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n \t\t\t\t\t\tint section, int expandable)\n {\n   struct compunit_symtab *cu = m_compunit_symtab;\n-  struct symtab *symtab;\n   struct blockvector *blockvector;\n   struct subfile *subfile;\n   CORE_ADDR end_addr;\n@@ -979,7 +978,7 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n       /* Allocate a symbol table if necessary.  */\n       if (subfile->symtab == NULL)\n \tsubfile->symtab = allocate_symtab (cu, subfile->name);\n-      symtab = subfile->symtab;\n+      struct symtab *symtab = subfile->symtab;\n \n       /* Fill in its components.  */\n \n@@ -1011,7 +1010,7 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n \n     main_symtab = m_main_subfile->symtab;\n     prev_symtab = NULL;\n-    ALL_COMPUNIT_FILETABS (cu, symtab)\n+    for (symtab *symtab : compunit_filetabs (cu))\n       {\n \tif (symtab == main_symtab)\n \t  {\n@@ -1061,7 +1060,7 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n     int block_i;\n \n     /* The main source file's symtab.  */\n-    symtab = COMPUNIT_FILETABS (cu);\n+    struct symtab *symtab = COMPUNIT_FILETABS (cu);\n \n     for (block_i = 0; block_i < BLOCKVECTOR_NBLOCKS (blockvector); block_i++)\n       {"
    },
    {
      "sha": "611febe8e583cd899fa99846b6ed4ff46aa113a4",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -1203,8 +1203,6 @@ coff_symtab_read (minimal_symbol_reader &reader,\n   /* Patch up any opaque types (references to types that are not defined\n      in the file where they are referenced, e.g. \"struct foo *bar\").  */\n   {\n-    struct symtab *s;\n-\n     ALL_OBJFILE_FILETABS (objfile, cu, s)\n       patch_opaque_types (s);\n   }"
    },
    {
      "sha": "04b4473e31823b285a4e27b60a18a64ee7560f3e",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -762,7 +762,6 @@ static void\n count_symtabs_and_blocks (int *nr_symtabs_ptr, int *nr_compunit_symtabs_ptr,\n \t\t\t  int *nr_blocks_ptr)\n {\n-  struct symtab *s;\n   int nr_symtabs = 0;\n   int nr_compunit_symtabs = 0;\n   int nr_blocks = 0;\n@@ -778,8 +777,8 @@ count_symtabs_and_blocks (int *nr_symtabs_ptr, int *nr_compunit_symtabs_ptr,\n \t    {\n \t      ++nr_compunit_symtabs;\n \t      nr_blocks += BLOCKVECTOR_NBLOCKS (COMPUNIT_BLOCKVECTOR (cu));\n-\t      ALL_COMPUNIT_FILETABS (cu, s)\n-\t\t++nr_symtabs;\n+\t      nr_symtabs += std::distance (compunit_filetabs (cu).begin (),\n+\t\t\t\t\t   compunit_filetabs (cu).end ());\n \t    }\n \t}\n     }"
    },
    {
      "sha": "d645e5a0c33da56bd2a2c5c59e720944699d7cca",
      "filename": "gdb/mi/mi-cmd-file.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/mi/mi-cmd-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/mi/mi-cmd-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-file.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -84,7 +84,6 @@ void\n mi_cmd_file_list_exec_source_files (const char *command, char **argv, int argc)\n {\n   struct ui_out *uiout = current_uiout;\n-  struct symtab *s;\n   struct objfile *objfile;\n \n   if (!mi_valid_noargs (\"-file-list-exec-source-files\", argc, argv))"
    },
    {
      "sha": "659998a565e52921d6d3e2a49e85df0d024428d1",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -788,8 +788,6 @@ objfile_relocate1 (struct objfile *objfile,\n \n   /* OK, get all the symtabs.  */\n   {\n-    struct symtab *s;\n-\n     ALL_OBJFILE_FILETABS (objfile, cust, s)\n     {\n       struct linetable *l;"
    },
    {
      "sha": "d6a7064c5e26c7798387de6744b61fd8154ab8bc",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -616,7 +616,7 @@ class all_objfiles_safe\n \n #define ALL_OBJFILE_FILETABS(objfile, cu, s) \\\n   for (compunit_symtab *cu : objfile_compunits (objfile)) \\\n-    ALL_COMPUNIT_FILETABS (cu, s)\n+    for (symtab *s : compunit_filetabs (cu))\n \n /* A range adapter that makes it possible to iterate over all\n    compunits in one objfile.  */"
    },
    {
      "sha": "ed0ff4c510fc5c90b73268b8301c8ec71c7a5afd",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -271,16 +271,16 @@ select_source_symtab (struct symtab *s)\n \n   current_source_line = 1;\n \n-  ALL_FILETABS (ofp, cu, s)\n+  ALL_FILETABS (ofp, cu, symtab)\n     {\n-      const char *name = s->filename;\n+      const char *name = symtab->filename;\n       int len = strlen (name);\n \n       if (!(len > 2 && (strcmp (&name[len - 2], \".h\") == 0\n \t\t\t|| strcmp (name, \"<<C++-namespaces>>\") == 0)))\n \t{\n \t  current_source_pspace = current_program_space;\n-\t  current_source_symtab = s;\n+\t  current_source_symtab = symtab;\n \t}\n     }\n \n@@ -349,8 +349,6 @@ show_directories_command (struct ui_file *file, int from_tty,\n void\n forget_cached_source_info_for_objfile (struct objfile *objfile)\n {\n-  struct symtab *s;\n-\n   ALL_OBJFILE_FILETABS (objfile, cu, s)\n     {\n       if (s->line_charpos != NULL)"
    },
    {
      "sha": "f067292f9dd485576ce72662520b401380d28a3c",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 10,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -82,7 +82,6 @@ void\n print_objfile_statistics (void)\n {\n   struct program_space *pspace;\n-  struct symtab *s;\n   int i, linetables, blockvectors;\n \n   ALL_PSPACES (pspace)\n@@ -144,8 +143,6 @@ print_objfile_statistics (void)\n static void\n dump_objfile (struct objfile *objfile)\n {\n-  struct symtab *symtab;\n-\n   printf_filtered (\"\\nObject file %s:  \", objfile_name (objfile));\n   printf_filtered (\"Objfile at \");\n   gdb_print_host_address (objfile, gdb_stdout);\n@@ -467,7 +464,6 @@ maintenance_print_symbols (const char *args, int from_tty)\n     }\n   else\n     {\n-      struct symtab *s;\n       int found = 0;\n \n       for (objfile *objfile : all_objfiles (current_program_space))\n@@ -772,8 +768,6 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n   ALL_PSPACES (pspace)\n     for (objfile *objfile : all_objfiles (pspace))\n       {\n-\tstruct symtab *symtab;\n-\n \t/* We don't want to print anything for this objfile until we\n \t   actually find a symtab whose name matches.  */\n \tint printed_objfile_start = 0;\n@@ -782,7 +776,7 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n \t  {\n \t    int printed_compunit_symtab_start = 0;\n \n-\t    ALL_COMPUNIT_FILETABS (cust, symtab)\n+\t    for (symtab *symtab : compunit_filetabs (cust))\n \t      {\n \t\tQUIT;\n \n@@ -1026,11 +1020,9 @@ maintenance_info_line_tables (const char *regexp, int from_tty)\n   ALL_PSPACES (pspace)\n     for (objfile *objfile : all_objfiles (pspace))\n       {\n-\tstruct symtab *symtab;\n-\n \tfor (compunit_symtab *cust : objfile_compunits (objfile))\n \t  {\n-\t    ALL_COMPUNIT_FILETABS (cust, symtab)\n+\t    for (symtab *symtab : compunit_filetabs (cust))\n \t      {\n \t\tQUIT;\n "
    },
    {
      "sha": "b32eca18faf7e7ba08ebb60d783fe070fb24bc13",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 8,
      "deletions": 14,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -405,12 +405,11 @@ iterate_over_some_symtabs (const char *name,\n \t\t\t   gdb::function_view<bool (symtab *)> callback)\n {\n   struct compunit_symtab *cust;\n-  struct symtab *s;\n   const char* base_name = lbasename (name);\n \n   for (cust = first; cust != NULL && cust != after_last; cust = cust->next)\n     {\n-      ALL_COMPUNIT_FILETABS (cust, s)\n+      for (symtab *s : compunit_filetabs (cust))\n \t{\n \t  if (compare_filenames_for_search (s->filename, name))\n \t    {\n@@ -3050,7 +3049,6 @@ struct symtab_and_line\n find_pc_sect_line (CORE_ADDR pc, struct obj_section *section, int notcurrent)\n {\n   struct compunit_symtab *cust;\n-  struct symtab *iter_s;\n   struct linetable *l;\n   int len;\n   struct linetable_entry *item;\n@@ -3187,7 +3185,7 @@ find_pc_sect_line (CORE_ADDR pc, struct obj_section *section, int notcurrent)\n      They all have the same apriori range, that we found was right;\n      but they have different line tables.  */\n \n-  ALL_COMPUNIT_FILETABS (cust, iter_s)\n+  for (symtab *iter_s : compunit_filetabs (cust))\n     {\n       /* Find the best line in this symtab.  */\n       l = SYMTAB_LINETABLE (iter_s);\n@@ -3319,7 +3317,7 @@ find_pc_line_symtab (CORE_ADDR pc)\n    If not found, return NULL.  */\n \n struct symtab *\n-find_line_symtab (struct symtab *symtab, int line,\n+find_line_symtab (struct symtab *sym_tab, int line,\n \t\t  int *index, int *exact_match)\n {\n   int exact = 0;  /* Initialized here to avoid a compiler warning.  */\n@@ -3332,8 +3330,8 @@ find_line_symtab (struct symtab *symtab, int line,\n   struct symtab *best_symtab;\n \n   /* First try looking it up in the given symtab.  */\n-  best_linetable = SYMTAB_LINETABLE (symtab);\n-  best_symtab = symtab;\n+  best_linetable = SYMTAB_LINETABLE (sym_tab);\n+  best_symtab = sym_tab;\n   best_index = find_line_common (best_linetable, line, &exact, 0);\n   if (best_index < 0 || !exact)\n     {\n@@ -3349,8 +3347,6 @@ find_line_symtab (struct symtab *symtab, int line,\n          BEST_INDEX and BEST_LINETABLE identify the item for it.  */\n       int best;\n \n-      struct symtab *s;\n-\n       if (best_index >= 0)\n \tbest = best_linetable->item[best_index].line;\n       else\n@@ -3360,7 +3356,7 @@ find_line_symtab (struct symtab *symtab, int line,\n \t{\n \t  if (objfile->sf)\n \t    objfile->sf->qf->expand_symtabs_with_fullname\n-\t      (objfile, symtab_to_fullname (symtab));\n+\t      (objfile, symtab_to_fullname (sym_tab));\n \t}\n \n       struct objfile *objfile;\n@@ -3369,9 +3365,9 @@ find_line_symtab (struct symtab *symtab, int line,\n \tstruct linetable *l;\n \tint ind;\n \n-\tif (FILENAME_CMP (symtab->filename, s->filename) != 0)\n+\tif (FILENAME_CMP (sym_tab->filename, s->filename) != 0)\n \t  continue;\n-\tif (FILENAME_CMP (symtab_to_fullname (symtab),\n+\tif (FILENAME_CMP (symtab_to_fullname (sym_tab),\n \t\t\t  symtab_to_fullname (s)) != 0)\n \t  continue;\t\n \tl = SYMTAB_LINETABLE (s);\n@@ -4184,7 +4180,6 @@ output_partial_symbol_filename (const char *filename, const char *fullname,\n static void\n info_sources_command (const char *ignore, int from_tty)\n {\n-  struct symtab *s;\n   struct objfile *objfile;\n   struct output_source_filename_data data;\n \n@@ -5586,7 +5581,6 @@ maybe_add_partial_symtab_filename (const char *filename, const char *fullname,\n completion_list\n make_source_files_completion_list (const char *text, const char *word)\n {\n-  struct symtab *s;\n   struct objfile *objfile;\n   size_t text_len = strlen (text);\n   completion_list list;"
    },
    {
      "sha": "7d97372de6b0613fa85c8834cf821f06461ccb45",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5accd1a07e080c386918da413e0f9e90c4cab58a/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=5accd1a07e080c386918da413e0f9e90c4cab58a",
      "patch": "@@ -29,6 +29,7 @@\n #include \"common/enum-flags.h\"\n #include \"common/function-view.h\"\n #include \"common/gdb_optional.h\"\n+#include \"common/next-iterator.h\"\n #include \"completer.h\"\n \n /* Opaque declarations.  */\n@@ -1485,10 +1486,16 @@ struct compunit_symtab\n #define COMPUNIT_CALL_SITE_HTAB(cust) ((cust)->call_site_htab)\n #define COMPUNIT_MACRO_TABLE(cust) ((cust)->macro_table)\n \n-/* Iterate over all file tables (struct symtab) within a compunit.  */\n+/* A range adapter to allowing iterating over all the file tables\n+   within a compunit.  */\n \n-#define ALL_COMPUNIT_FILETABS(cu, s) \\\n-  for ((s) = (cu) -> filetabs; (s) != NULL; (s) = (s) -> next)\n+struct compunit_filetabs : public next_adapter<struct symtab>\n+{\n+  compunit_filetabs (struct compunit_symtab *cu)\n+    : next_adapter<struct symtab> (cu->filetabs)\n+  {\n+  }\n+};\n \n /* Return the primary symtab of CUST.  */\n "
    }
  ]
}