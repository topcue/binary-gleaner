{
  "sha": "de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGUxMzNjZjk4Y2RmNGNiM2QxNDYxZWYxMGM4M2NlNzJkZjczOTljNw==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-08-11T06:33:49Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-08-11T06:33:49Z"
    },
    "message": "x86: introduce .bfloat16 directive\n\nThis is to be able to generate data acted upon by AVX512-BF16 and\nAMX-BF16 insns. While not part of the IEEE standard, the format is\nsufficiently standardized to warrant handling in config/atof-ieee.c.\nArm, where custom handling was implemented, may want to leverage this as\nwell. To be able to also use the hex forms supported for other floating\npoint formats, a small addition to the generic hex_float() is needed.\n\nExtend existing x86 testcases.",
    "tree": {
      "sha": "1ea3411b55f5020dcd47dbb71523a872338d4d6d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ea3411b55f5020dcd47dbb71523a872338d4d6d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7d19d096292acac01d0fde4d99c3e49d69688e03",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d19d096292acac01d0fde4d99c3e49d69688e03",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7d19d096292acac01d0fde4d99c3e49d69688e03"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 32,
    "deletions": 14
  },
  "files": [
    {
      "sha": "7f95d05d8b0441f878e62032db8e3d59b7ef6c1d",
      "filename": "gas/config/atof-ieee.c",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/config/atof-ieee.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/config/atof-ieee.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/atof-ieee.c?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -27,6 +27,7 @@ extern FLONUM_TYPE generic_floating_point_number;\n /* Don't count the gap in the m68k extended precision format.  */\n #define MAX_PRECISION  5\n #define H_PRECISION    1\n+#define B_PRECISION    1 /* Not strictly IEEE, but handled here anyway.  */\n #define F_PRECISION    2\n #define D_PRECISION    4\n #define X_PRECISION    5\n@@ -243,6 +244,12 @@ atof_ieee (char *str,\t\t\t/* Text to convert to binary.  */\n       exponent_bits = 5;\n       break;\n \n+    case 'b':\n+    case 'B':\n+      precision = B_PRECISION;\n+      exponent_bits = 8;\n+      break;\n+\n     case 'f':\n     case 'F':\n     case 's':\n@@ -368,9 +375,9 @@ gen_to_words (LITTLENUM_TYPE *words, int precision, long exponent_bits)\n \tas_warn (_(\"Infinities are not supported by this target\"));\n \n       /* +INF:  Do the right thing.  */\n-      if (precision == H_PRECISION)\n+      if (precision == H_PRECISION /* also B_PRECISION */)\n \t{\n-\t  words[0] = 0x7c00;\n+\t  words[0] = exponent_bits == 5 ? 0x7c00 : 0x7f80;\n \t}\n       else if (precision == F_PRECISION)\n \t{\n@@ -413,9 +420,9 @@ gen_to_words (LITTLENUM_TYPE *words, int precision, long exponent_bits)\n \tas_warn (_(\"Infinities are not supported by this target\"));\n \n       /* Negative INF.  */\n-      if (precision == H_PRECISION)\n+      if (precision == H_PRECISION /* also B_PRECISION */)\n \t{\n-\t  words[0] = 0xfc00;\n+\t  words[0] = exponent_bits == 5 ? 0xfc00 : 0xff80;\n \t}\n       else if (precision == F_PRECISION)\n \t{\n@@ -777,6 +784,11 @@ ieee_md_atof (int type,\n \t  prec = H_PRECISION;\n \t  break;\n \n+\tcase 'B':\n+\tcase 'b':\n+\t  prec = B_PRECISION;\n+\t  break;\n+\n \tcase 'f':\n \tcase 'F':\n \tcase 's':"
    },
    {
      "sha": "dc29fa2ba52d9fc367186057936df35ff51697d0",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -512,7 +512,7 @@ const char EXP_CHARS[] = \"eE\";\n /* Chars that mean this number is a floating point constant\n    As in 0f12.456\n    or    0d1.2345e12.  */\n-const char FLT_CHARS[] = \"fFdDxXhH\";\n+const char FLT_CHARS[] = \"fFdDxXhHbB\";\n \n /* Tables for lexical analysis.  */\n static char mnemonic_chars[256];\n@@ -1357,6 +1357,7 @@ const pseudo_typeS md_pseudo_table[] =\n   {\"dfloat\", float_cons, 'd'},\n   {\"tfloat\", float_cons, 'x'},\n   {\"hfloat\", float_cons, 'h'},\n+  {\"bfloat16\", float_cons, 'b'},\n   {\"value\", cons, 2},\n   {\"slong\", signed_cons, 4},\n   {\"noopt\", s_ignore, 0},"
    },
    {
      "sha": "99576ef2953674bf7a896b134ddae1245b2ac1d1",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -1314,20 +1314,22 @@ data type.  Constructors build these data types into memory.\n @cindex @code{double} directive, i386\n @cindex @code{tfloat} directive, i386\n @cindex @code{hfloat} directive, i386\n+@cindex @code{bfloat16} directive, i386\n @cindex @code{float} directive, x86-64\n @cindex @code{single} directive, x86-64\n @cindex @code{double} directive, x86-64\n @cindex @code{tfloat} directive, x86-64\n @cindex @code{hfloat} directive, x86-64\n+@cindex @code{bfloat16} directive, x86-64\n @itemize @bullet\n @item\n Floating point constructors are @samp{.float} or @samp{.single},\n-@samp{.double}, @samp{.tfloat}, and @samp{.hfloat} for 32-, 64-, 80-, and\n-16-bit formats respectively. The former three correspond to instruction\n-mnemonic suffixes @samp{s}, @samp{l}, and @samp{t}. @samp{t} stands for\n-80-bit (ten byte) real.  The 80387 only supports this format via the\n-@samp{fldt} (load 80-bit real to stack top) and @samp{fstpt} (store 80-bit\n-real and pop stack) instructions.\n+@samp{.double}, @samp{.tfloat}, @samp{.hfloat}, and @samp{.bfloat16} for 32-,\n+64-, 80-, and 16-bit (two flavors) formats respectively.  The former three\n+correspond to instruction mnemonic suffixes @samp{s}, @samp{l}, and @samp{t}.\n+@samp{t} stands for 80-bit (ten byte) real.  The 80387 only supports this\n+format via the @samp{fldt} (load 80-bit real to stack top) and @samp{fstpt}\n+(store 80-bit real and pop stack) instructions.\n \n @cindex @code{word} directive, i386\n @cindex @code{long} directive, i386"
    },
    {
      "sha": "7333a2ef47b9e0561769aecc6fabed8ea93748fd",
      "filename": "gas/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/read.c?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -4852,6 +4852,8 @@ hex_float (int float_type, char *bytes)\n \n   switch (float_type)\n     {\n+    case 'b':\n+    case 'B':\n     case 'h':\n     case 'H':\n       length = 2;"
    },
    {
      "sha": "798cb6b83826ea45592be1eeb44dc90cf4198edf",
      "filename": "gas/testsuite/gas/i386/fp-elf32.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp-elf32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp-elf32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/fp-elf32.d?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -14,4 +14,4 @@ Contents of section .data:\n  0060 00000000 00000080 fe3f0000 00000000  .*\n  0070 00000080 fdbf0000 00000000 00000080  .*\n  0080 ff030000 aaaaaaaa aaaaaaaa aaaaaaaa  .*\n- 0090 003c00c0 003c5555 55555555 55555555  .*\n+ 0090 003c00c0 003c803f 00c0803f 55555555  .*"
    },
    {
      "sha": "fc96e53490f54dca919a32e3a7b1bab51c073f86",
      "filename": "gas/testsuite/gas/i386/fp-elf64.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp-elf64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp-elf64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/fp-elf64.d?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -14,4 +14,4 @@ Contents of section .data:\n  0060 00000000 00000080 fe3f0000 00000000  .*\n  0070 00000000 00000080 fdbf0000 00000000  .*\n  0080 00000000 00000080 ff030000 00000000  .*\n- 0090 003c00c0 003c5555 55555555 55555555  .*\n+ 0090 003c00c0 003c803f 00c0803f 55555555  .*"
    },
    {
      "sha": "c2db0d25343ccd0b0628189caa8010ef36ac531a",
      "filename": "gas/testsuite/gas/i386/fp.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/fp.d?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -12,4 +12,4 @@ Contents of section .data:\n  0050 ffffffff ffffffff ffffcccc cccccccc  .*\n  0060 00000000 00000080 fe3f0000 00000000  .*\n  0070 0080fdbf 00000000 00000080 ff03aaaa  .*\n- 0080 003c00c0 003c5555 55555555 55555555  .*\n+ 0080 003c00c0 003c803f 00c0803f 55555555  .*"
    },
    {
      "sha": "8c5abb490b9825f3b0c1c0495a008a1b677f5457",
      "filename": "gas/testsuite/gas/i386/fp.s",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de133cf98cdf4cb3d1461ef10c83ce72df7399c7/gas/testsuite/gas/i386/fp.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/fp.s?ref=de133cf98cdf4cb3d1461ef10c83ce72df7399c7",
      "patch": "@@ -31,4 +31,5 @@\n \t.p2align 4,0xaa\n \n \t.hfloat 1, -2, 0x:3c00\n+\t.bfloat16 1, -2, 0x:3f80\n \t.p2align 4,0x55"
    }
  ]
}