{
  "sha": "1996d0f12cd57391e01e0eebe32e44510e6ec17d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTk5NmQwZjEyY2Q1NzM5MWUwMWUwZWViZTMyZTQ0NTEwZTZlYzE3ZA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-03-15T10:55:49Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-03-15T10:55:49Z"
    },
    "message": "Add a symbols-only mode to nm.\n\n\tPR 27487\n\t* nm.c (FORMAT_JUST_SYMBOLS): Define.\n\t(struct optput_fns): Add entry for FORMAT_JUST_SYMBOLS.\n\t(long_options): Add just-symbols.\n\t(set_output_format): Add support for just-symbols.\n\t(get_print_format): Likewise.\n\t(do_not_print_object_filename): New function.\n\t(do_not_print_archive_filename): New function.\n\t(do_not_print_archive_member): New function.\n\t(do_not_print_symbol_filename): New function.\n\t(just_print_symbol_name): New function.\n\t(main): Handle --just-symbols.\n\t* NEWS: Mention the new feature.\n\t* doc/binutils.texi: Document the new feature.",
    "tree": {
      "sha": "9c5ae8fdf4eb04328ff41b4459d571b4f8a7f7fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9c5ae8fdf4eb04328ff41b4459d571b4f8a7f7fb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1996d0f12cd57391e01e0eebe32e44510e6ec17d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1996d0f12cd57391e01e0eebe32e44510e6ec17d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1996d0f12cd57391e01e0eebe32e44510e6ec17d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1996d0f12cd57391e01e0eebe32e44510e6ec17d/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8d624a9d8050ca96e154215c7858ac5c2d8b0b19",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d624a9d8050ca96e154215c7858ac5c2d8b0b19",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8d624a9d8050ca96e154215c7858ac5c2d8b0b19"
    }
  ],
  "stats": {
    "total": 175,
    "additions": 137,
    "deletions": 38
  },
  "files": [
    {
      "sha": "62f98b4cda027eb9316eaec0297981d02b0757b1",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=1996d0f12cd57391e01e0eebe32e44510e6ec17d",
      "patch": "@@ -1,3 +1,20 @@\n+2021-03-15  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 27487\n+\t* nm.c (FORMAT_JUST_SYMBOLS): Define.\n+\t(struct optput_fns): Add entry for FORMAT_JUST_SYMBOLS.\n+\t(long_options): Add just-symbols.\n+\t(set_output_format): Add support for just-symbols.\n+\t(get_print_format): Likewise.\n+\t(do_not_print_object_filename): New function.\n+\t(do_not_print_archive_filename): New function.\n+\t(do_not_print_archive_member): New function.\n+\t(do_not_print_symbol_filename): New function.\n+\t(just_print_symbol_name): New function.\n+\t(main): Handle --just-symbols.\n+\t* NEWS: Mention the new feature.\n+\t* doc/binutils.texi: Document the new feature.\n+\n 2021-03-12  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n \n \t* od-xcoff.c: Replace RTB by TRL entry."
    },
    {
      "sha": "c035f522e3f152a58cf1e15e0a8cb61646018bb5",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=1996d0f12cd57391e01e0eebe32e44510e6ec17d",
      "patch": "@@ -1,5 +1,9 @@\n -*- text -*-\n \n+* A new format has been added to the nm program.  Specifying\n+  --format=just-symbols (or just using -j) will tell the program to only\n+  display symbol names and nothing else.\n+\n * A new command line --keep-section-symbols has been added to objcopy and\n   strip.  This stops the removal of unused section symbols when the file is\n   copied.  Removing these symbols saves space, but sometimes they are needed by"
    },
    {
      "sha": "292f71110c9b101c52fac39ee25371ae5bb4db52",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 31,
      "deletions": 14,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=1996d0f12cd57391e01e0eebe32e44510e6ec17d",
      "patch": "@@ -793,23 +793,37 @@ The @sc{gnu} linker @command{ld} is now described in a separate manual.\n \n @smallexample\n @c man begin SYNOPSIS nm\n-nm [@option{-A}|@option{-o}|@option{--print-file-name}] [@option{-a}|@option{--debug-syms}]\n-   [@option{-B}|@option{--format=bsd}] [@option{-C}|@option{--demangle}[=@var{style}]]\n-   [@option{-D}|@option{--dynamic}] [@option{-f}@var{format}|@option{--format=}@var{format}]\n-   [@option{-g}|@option{--extern-only}] [@option{-h}|@option{--help}]\n+nm [@option{-A}|@option{-o}|@option{--print-file-name}]\n+   [@option{-a}|@option{--debug-syms}]\n+   [@option{-B}|@option{--format=bsd}]\n+   [@option{-C}|@option{--demangle}[=@var{style}]]\n+   [@option{-D}|@option{--dynamic}]\n+   [@option{-f}@var{format}|@option{--format=}@var{format}]\n+   [@option{-g}|@option{--extern-only}]\n+   [@option{-h}|@option{--help}]\n    [@option{--ifunc-chars=@var{CHARS}}]\n+   [@option{-j}|@option{--format=just-symbols}]\n    [@option{-l}|@option{--line-numbers}] [@option{--inlines}]\n    [@option{-n}|@option{-v}|@option{--numeric-sort}]\n-   [@option{-P}|@option{--portability}] [@option{-p}|@option{--no-sort}]\n-   [@option{-r}|@option{--reverse-sort}] [@option{-S}|@option{--print-size}]\n-   [@option{-s}|@option{--print-armap}] [@option{-t} @var{radix}|@option{--radix=}@var{radix}]\n-   [@option{-u}|@option{--undefined-only}] [@option{-V}|@option{--version}]\n-   [@option{-X 32_64}] [@option{--defined-only}] [@option{--no-demangle}]\n-   [@option{--plugin} @var{name}]\n+   [@option{-P}|@option{--portability}]\n+   [@option{-p}|@option{--no-sort}]\n+   [@option{-r}|@option{--reverse-sort}]\n+   [@option{-S}|@option{--print-size}]\n+   [@option{-s}|@option{--print-armap}]\n+   [@option{-t} @var{radix}|@option{--radix=}@var{radix}]\n+   [@option{-u}|@option{--undefined-only}]\n+   [@option{-V}|@option{--version}]\n+   [@option{-X 32_64}]\n+   [@option{--defined-only}]\n+   [@option{--no-demangle}]\n    [@option{--no-recurse-limit}|@option{--recurse-limit}]]\n-   [@option{--size-sort}] [@option{--special-syms}]\n-   [@option{--synthetic}] [@option{--with-symbol-versions}]\n-   [@option{--without-symbol-versions}] [@option{--target=}@var{bfdname}]\n+   [@option{--plugin} @var{name}]\n+   [@option{--size-sort}]\n+   [@option{--special-syms}]\n+   [@option{--synthetic}]\n+   [@option{--target=}@var{bfdname}]\n+   [@option{--with-symbol-versions}]\n+   [@option{--without-symbol-versions}]\n    [@var{objfile}@dots{}]\n @c man end\n @end smallexample\n@@ -1027,7 +1041,7 @@ libraries.\n @cindex @command{nm} format\n @cindex @command{nm} compatibility\n Use the output format @var{format}, which can be @code{bsd},\n-@code{sysv}, or @code{posix}.  The default is @code{bsd}.\n+@code{sysv}, @code{posix} or @code{just-symbols}.  The default is @code{bsd}.\n Only the first character of @var{format} is significant; it can be\n either upper or lower case.\n \n@@ -1049,6 +1063,9 @@ first character will be used for global indirect function symbols and\n the second character, if present, will be used for local indirect\n function symbols.\n \n+@item j\n+The same as @option{--format=just-symbols}.\n+\n @item -l\n @itemx --line-numbers\n @cindex symbol line numbers"
    },
    {
      "sha": "119c486af6274602d173d2905b9df97b39ff25a6",
      "filename": "binutils/nm.c",
      "status": "modified",
      "additions": 85,
      "deletions": 24,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/nm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1996d0f12cd57391e01e0eebe32e44510e6ec17d/binutils/nm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/nm.c?ref=1996d0f12cd57391e01e0eebe32e44510e6ec17d",
      "patch": "@@ -79,41 +79,63 @@ struct extended_symbol_info\n static void print_object_filename_bsd (const char *);\n static void print_object_filename_sysv (const char *);\n static void print_object_filename_posix (const char *);\n+static void do_not_print_object_filename (const char *);\n+\n static void print_archive_filename_bsd (const char *);\n static void print_archive_filename_sysv (const char *);\n static void print_archive_filename_posix (const char *);\n+static void do_not_print_archive_filename (const char *);\n+\n static void print_archive_member_bsd (const char *, const char *);\n static void print_archive_member_sysv (const char *, const char *);\n static void print_archive_member_posix (const char *, const char *);\n+static void do_not_print_archive_member (const char *, const char *);\n+\n static void print_symbol_filename_bsd (bfd *, bfd *);\n static void print_symbol_filename_sysv (bfd *, bfd *);\n static void print_symbol_filename_posix (bfd *, bfd *);\n-static void print_value (bfd *, bfd_vma);\n+static void do_not_print_symbol_filename (bfd *, bfd *);\n+\n static void print_symbol_info_bsd (struct extended_symbol_info *, bfd *);\n static void print_symbol_info_sysv (struct extended_symbol_info *, bfd *);\n static void print_symbol_info_posix (struct extended_symbol_info *, bfd *);\n+static void just_print_symbol_name (struct extended_symbol_info *, bfd *);\n+\n+static void print_value (bfd *, bfd_vma);\n \n /* Support for different output formats.  */\n struct output_fns\n-  {\n-    /* Print the name of an object file given on the command line.  */\n-    void (*print_object_filename) (const char *);\n+{\n+  /* Print the name of an object file given on the command line.  */\n+  void (*print_object_filename) (const char *);\n \n-    /* Print the name of an archive file given on the command line.  */\n-    void (*print_archive_filename) (const char *);\n+  /* Print the name of an archive file given on the command line.  */\n+  void (*print_archive_filename) (const char *);\n \n-    /* Print the name of an archive member file.  */\n-    void (*print_archive_member) (const char *, const char *);\n+  /* Print the name of an archive member file.  */\n+  void (*print_archive_member) (const char *, const char *);\n \n-    /* Print the name of the file (and archive, if there is one)\n-       containing a symbol.  */\n-    void (*print_symbol_filename) (bfd *, bfd *);\n+  /* Print the name of the file (and archive, if there is one)\n+     containing a symbol.  */\n+  void (*print_symbol_filename) (bfd *, bfd *);\n \n-    /* Print a line of information about a symbol.  */\n-    void (*print_symbol_info) (struct extended_symbol_info *, bfd *);\n-  };\n+  /* Print a line of information about a symbol.  */\n+  void (*print_symbol_info) (struct extended_symbol_info *, bfd *);\n+};\n \n-static struct output_fns formats[] =\n+/* Indices in `formats'.  */\n+enum formats\n+{\n+  FORMAT_BSD = 0,\n+  FORMAT_SYSV,\n+  FORMAT_POSIX,\n+  FORMAT_JUST_SYMBOLS,\n+  FORMAT_MAX\n+};\n+\n+#define FORMAT_DEFAULT FORMAT_BSD\n+\n+static struct output_fns formats[FORMAT_MAX] =\n {\n   {print_object_filename_bsd,\n    print_archive_filename_bsd,\n@@ -129,14 +151,14 @@ static struct output_fns formats[] =\n    print_archive_filename_posix,\n    print_archive_member_posix,\n    print_symbol_filename_posix,\n-   print_symbol_info_posix}\n+   print_symbol_info_posix},\n+  {do_not_print_object_filename,\n+   do_not_print_archive_filename,\n+   do_not_print_archive_member,\n+   do_not_print_symbol_filename,\n+   just_print_symbol_name}\n };\n \n-/* Indices in `formats'.  */\n-#define FORMAT_BSD 0\n-#define FORMAT_SYSV 1\n-#define FORMAT_POSIX 2\n-#define FORMAT_DEFAULT FORMAT_BSD\n \n /* The output format to use.  */\n static struct output_fns *format = &formats[FORMAT_DEFAULT];\n@@ -214,6 +236,7 @@ static struct option long_options[] =\n   {\"format\", required_argument, 0, 'f'},\n   {\"help\", no_argument, 0, 'h'},\n   {\"ifunc-chars\", required_argument, 0, OPTION_IFUNC_CHARS},\n+  {\"just-symbols\", no_argument, 0, 'j'},\n   {\"line-numbers\", no_argument, 0, 'l'},\n   {\"no-cplus\", no_argument, &do_demangle, 0},  /* Linux compatibility.  */\n   {\"no-demangle\", no_argument, &do_demangle, 0},\n@@ -265,9 +288,10 @@ usage (FILE *stream, int status)\n       --defined-only     Display only defined symbols\\n\\\n   -e                     (ignored)\\n\\\n   -f, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd',\\n\\\n-                           `sysv' or `posix'.  The default is `bsd'\\n\\\n+                           `sysv', `posix' or 'just-symbols'.  The default is `bsd'\\n\\\n   -g, --extern-only      Display only external symbols\\n\\\n     --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\\\n+  -j, --just-symbols     Same as --format=just-symbols\\n\\\n   -l, --line-numbers     Use debugging information to find a filename and\\n\\\n                            line number for each symbol\\n\\\n   -n, --numeric-sort     Sort symbols numerically by address\\n\\\n@@ -338,6 +362,10 @@ set_output_format (char *f)\n     case 'S':\n       i = FORMAT_SYSV;\n       break;\n+    case 'j':\n+    case 'J':\n+      i = FORMAT_JUST_SYMBOLS;\n+      break;\n     default:\n       fatal (_(\"%s: invalid output format\"), f);\n     }\n@@ -1268,7 +1296,7 @@ static const char *\n get_print_format (void)\n {\n   const char * padding;\n-  if (print_format == FORMAT_POSIX)\n+  if (print_format == FORMAT_POSIX || print_format == FORMAT_JUST_SYMBOLS)\n     {\n       /* POSIX compatible output does not have any padding.  */\n       padding = \"\";\n@@ -1477,6 +1505,11 @@ print_object_filename_posix (const char *filename)\n   if (filename_per_file && !filename_per_symbol)\n     printf (\"%s:\\n\", filename);\n }\n+\n+static void\n+do_not_print_object_filename (const char *filename ATTRIBUTE_UNUSED)\n+{\n+}\n \f\n /* Print the name of an archive file given on the command line.  */\n \n@@ -1496,6 +1529,11 @@ static void\n print_archive_filename_posix (const char *filename ATTRIBUTE_UNUSED)\n {\n }\n+\n+static void\n+do_not_print_archive_filename (const char *filename ATTRIBUTE_UNUSED)\n+{\n+}\n \f\n /* Print the name of an archive member file.  */\n \n@@ -1528,6 +1566,13 @@ print_archive_member_posix (const char *archive, const char *filename)\n   if (!filename_per_symbol)\n     printf (\"%s[%s]:\\n\", archive, filename);\n }\n+\n+static void\n+do_not_print_archive_member (const char *archive ATTRIBUTE_UNUSED,\n+\t\t\t     const char *filename ATTRIBUTE_UNUSED)\n+{\n+}\n+\n \f\n /* Print the name of the file (and archive, if there is one)\n    containing a symbol.  */\n@@ -1566,6 +1611,13 @@ print_symbol_filename_posix (bfd *archive_bfd, bfd *abfd)\n \tprintf (\"%s: \", bfd_get_filename (abfd));\n     }\n }\n+\n+static void\n+do_not_print_symbol_filename (bfd *archive_bfd ATTRIBUTE_UNUSED,\n+\t\t\t      bfd *abfd ATTRIBUTE_UNUSED)\n+{\n+}\n+\n \f\n /* Print a symbol value.  */\n \n@@ -1723,6 +1775,12 @@ print_symbol_info_posix (struct extended_symbol_info *info, bfd *abfd)\n \tprint_value (abfd, SYM_SIZE (info));\n     }\n }\n+\n+static void\n+just_print_symbol_name (struct extended_symbol_info *info, bfd *abfd)\n+{\n+  print_symname (\"%s\", info, NULL, abfd);\n+}\n \f\n int\n main (int argc, char **argv)\n@@ -1755,7 +1813,7 @@ main (int argc, char **argv)\n     fatal (_(\"fatal error: libbfd ABI mismatch\"));\n   set_default_bfd_target ();\n \n-  while ((c = getopt_long (argc, argv, \"aABCDef:gHhlnopPrSst:uvVvX:\",\n+  while ((c = getopt_long (argc, argv, \"aABCDef:gHhjJlnopPrSst:uvVvX:\",\n \t\t\t   long_options, (int *) 0)) != EOF)\n     {\n       switch (c)\n@@ -1830,6 +1888,9 @@ main (int argc, char **argv)\n \tcase 'P':\n \t  set_output_format (\"posix\");\n \t  break;\n+\tcase 'j':\n+\t  set_output_format (\"just-symbols\");\n+\t  break;\n \tcase 'r':\n \t  reverse_sort = 1;\n \t  break;"
    }
  ]
}