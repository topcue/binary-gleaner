{
  "sha": "74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzRjMmMxZjQ1ZjAzNmM0ZjE1NWNjNjVhODYwMjJjZTZlZWYwYzVjNQ==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-08-13T16:09:30Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-08-13T16:09:30Z"
    },
    "message": "Fixes for gdb.python tests on remote Windows host.\n\nThis patch fixes several test ERRORs and FAILs seen from running\ngdb.python tests on a remote Windows host.  The problems fixed\ngenerally fall into these categories:\n- Failure to copy the .py script to the host.\n- Confusion between build and host pathnames.\n- Assuming pathnames printed on the host include \"/\" as a directory\n  separator.\n- Tests that need to be conditionally disabled due to missing features\n  on the host, etc.\n\n2019-08-13  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgdb/testsuite/\n\t* gdb.python/py-completion.exp: Download the .py file to the host\n\tand use its host pathname.  Conditionalize tests that use\n\ttab completion and manipulate files on the build machine.\n\t* gdb.python/py-events.exp: Download the .py file to the host\n\tand use its host pathname.\n\t* gdb.python/py-evsignal.exp: Likewise.\n\t* gdb.python/py-evthreads.exp: Likewise.\n\t* gdb.python/py-framefilter-invalidarg.exp: Match Windows\n\tpathname syntax.\n\t* gdb.python/py-framefilter.exp: Download the .py file to the right\n\tplace on the host.  Match Windows pathname syntax.\n\t* gdb.python/py-mi-var-info-path-expression.exp: Download the\n\t.py file to the host and use its host pathname.\n\t* gdb.python/py-objfile-script.exp: Match Windows pathname syntax.\n\t* gdb.python/py-objfile.exp: Expect a host pathname, not a\n\tbuild pathname.  Skip symlink test on Windows host.  Add missing\n\tnewline at end of file.\n\t* gdb.python/py-pp-maint.exp: Download the .py file to the host\n\tand use its host pathname.\n\t* gdb.python/py-pp-registration.exp: Match Windows pathname syntax.\n\t* gdb.python/py-section-script.exp: Use host location of binfile\n\ton safe-path.  Use correct path separator on Windows host.\n\tReorder alternatives in gdb_test_multiple to prevent matching\n\tthe wrong alternative on success.\n\t* gdb.python/py-symtab.exp: Match Windows pathname syntax.",
    "tree": {
      "sha": "aa06d8d9e32f2c08a224674e97e39a9875002fcd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aa06d8d9e32f2c08a224674e97e39a9875002fcd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "5067f530c3a26330263649fbef23c7685f27cbb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5067f530c3a26330263649fbef23c7685f27cbb7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5067f530c3a26330263649fbef23c7685f27cbb7"
    }
  ],
  "stats": {
    "total": 189,
    "additions": 118,
    "deletions": 71
  },
  "files": [
    {
      "sha": "2cd9a004df0c0e173deb913a21285dd7a0417215",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -1,3 +1,31 @@\n+2019-08-13  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* gdb.python/py-completion.exp: Download the .py file to the host\n+\tand use its host pathname.  Conditionalize tests that use\n+\ttab completion and manipulate files on the build machine.\n+\t* gdb.python/py-events.exp: Download the .py file to the host\n+\tand use its host pathname.\n+\t* gdb.python/py-evsignal.exp: Likewise.\n+\t* gdb.python/py-evthreads.exp: Likewise.\n+\t* gdb.python/py-framefilter-invalidarg.exp: Match Windows\n+\tpathname syntax.\n+\t* gdb.python/py-framefilter.exp: Download the .py file to the right\n+\tplace on the host.  Match Windows pathname syntax.\n+\t* gdb.python/py-mi-var-info-path-expression.exp: Download the\n+\t.py file to the host and use its host pathname.\n+\t* gdb.python/py-objfile-script.exp: Match Windows pathname syntax.\n+\t* gdb.python/py-objfile.exp: Expect a host pathname, not a\n+\tbuild pathname.  Skip symlink test on Windows host.  Add missing\n+\tnewline at end of file.\n+\t* gdb.python/py-pp-maint.exp: Download the .py file to the host\n+\tand use its host pathname.\n+\t* gdb.python/py-pp-registration.exp: Match Windows pathname syntax.\n+\t* gdb.python/py-section-script.exp: Use host location of binfile\n+\ton safe-path.  Use correct path separator on Windows host.\n+\tReorder alternatives in gdb_test_multiple to prevent matching\n+\tthe wrong alternative on success.\n+\t* gdb.python/py-symtab.exp: Match Windows pathname syntax.\n+\n 2019-08-12  Patrick Palka  <patrick@parcs.ath.cx>\n \n \t* gdb.gdb/selftest.exp (test_with_self): Update test to now"
    },
    {
      "sha": "1b1398cf2c805c5748f7b8a954addd774cd55d15",
      "filename": "gdb/testsuite/gdb.python/py-completion.exp",
      "status": "modified",
      "additions": 44,
      "deletions": 40,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-completion.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-completion.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-completion.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -17,65 +17,69 @@ set testfile \"py-completion\"\n \n load_lib gdb-python.exp\n \n+set pyfile [gdb_remote_download host ${srcdir}/${subdir}/${testfile}.py]\n+set discard 0\n gdb_exit\n gdb_start\n \n # Skip all tests if Python scripting is not enabled.\n if { [skip_python_tests] } { continue }\n \n-gdb_test_no_output \"source ${srcdir}/${subdir}/${testfile}.py\" \\\n-    \"load python file\"\n-\n-# Create a temporary directory\n-set testdir \"[standard_output_file \"py-completion-testdir\"]/\"\n-set testdir_regex [string_to_regexp $testdir]\n-set testdir_complete [standard_output_file \"py-completion-test\"]\n-file mkdir $testdir\n-\n-# This one should always pass.\n-send_gdb \"completefileinit ${testdir_complete}\\t\"\n-gdb_test_multiple \"\" \"completefileinit completion\" {\n-    -re \"^completefileinit ${testdir_regex}$\" {\n-        pass \"completefileinit completion\"\n+# Tab completion tests require readline support, and this set of tests\n+# doesn't work on a remote host either.\n+if { [readline_is_used] && ![is_remote host] } {\n+    gdb_test_no_output \"source ${pyfile}\" \"load python file\"\n+\n+    # Create a temporary directory\n+    set testdir \"[standard_output_file \"py-completion-testdir\"]/\"\n+    set testdir_regex [string_to_regexp $testdir]\n+    set testdir_complete [standard_output_file \"py-completion-test\"]\n+    file mkdir $testdir\n+\n+    # This one should always pass.\n+    send_gdb \"completefileinit ${testdir_complete}\\t\"\n+    gdb_test_multiple \"\" \"completefileinit completion\" {\n+\t-re \"^completefileinit ${testdir_regex}$\" {\n+\t    pass \"completefileinit completion\"\n+\t}\n     }\n-}\n \n-# Just discarding whatever we typed.\n-set discard 0\n-gdb_test \" \" \".*\" \"discard #[incr discard]\"\n+    # Just discarding whatever we typed.\n+    gdb_test \" \" \".*\" \"discard #[incr discard]\"\n \n-# This is the problematic one.\n-send_gdb \"completefilemethod ${testdir_complete}\\t\"\n-gdb_test_multiple \"\" \"completefilemethod completion\" {\n-    -re \"^completefilemethod ${testdir_regex} $\" {\n-        fail \"completefilemethod completion (completed filename as wrong command arg)\"\n-    }\n-    -re \"^completefilemethod ${testdir_regex}$\" {\n-        pass \"completefilemethod completion\"\n+    # This is the problematic one.\n+    send_gdb \"completefilemethod ${testdir_complete}\\t\"\n+    gdb_test_multiple \"\" \"completefilemethod completion\" {\n+\t-re \"^completefilemethod ${testdir_regex} $\" {\n+\t    fail \"completefilemethod completion (completed filename as wrong command arg)\"\n+\t}\n+\t-re \"^completefilemethod ${testdir_regex}$\" {\n+\t    pass \"completefilemethod completion\"\n+\t}\n     }\n-}\n \n-# Discarding again\n-gdb_test \" \" \".*\" \"discard #[incr discard]\"\n+    # Discarding again\n+    gdb_test \" \" \".*\" \"discard #[incr discard]\"\n \n-# Another problematic\n-set completion_regex \"[string_to_regexp [standard_output_file \"py-completion-t\"]]\"\n-send_gdb \"completefilecommandcond [standard_output_file \"py-completion-t\\t\"]\"\n-gdb_test_multiple \"\" \"completefilecommandcond completion\" {\n-    -re \"^completefilecommandcond ${testdir}$\" {\n-\tfail \"completefilecommandcond completion (completed filename instead of command)\"\n-    }\n-    -re \"^completefilecommandcond ${completion_regex}\\007$\" {\n-\tpass \"completefilecommandcond completion\"\n+    # Another problematic\n+    set completion_regex \"[string_to_regexp [standard_output_file \"py-completion-t\"]]\"\n+    send_gdb \"completefilecommandcond [standard_output_file \"py-completion-t\\t\"]\"\n+    gdb_test_multiple \"\" \"completefilecommandcond completion\" {\n+\t-re \"^completefilecommandcond ${testdir}$\" {\n+\t    fail \"completefilecommandcond completion (completed filename instead of command)\"\n+\t}\n+\t-re \"^completefilecommandcond ${completion_regex}\\007$\" {\n+\t    pass \"completefilecommandcond completion\"\n+\t}\n     }\n+\n }\n \n # Start gdb over again to clear out current state.  This can interfere\n # with the expected output of the below tests in a buggy gdb.\n gdb_exit\n gdb_start\n-gdb_test_no_output \"source ${srcdir}/${subdir}/${testfile}.py\" \\\n-    \"load python file again\"\n+gdb_test_no_output \"source ${pyfile}\" \"load python file again\"\n \n gdb_test_sequence \"complete completel\" \\\n     \"list all completions of 'complete completel'\" {"
    },
    {
      "sha": "771d1de676f61a2bba448316bcf657d3317b527c",
      "filename": "gdb/testsuite/gdb.python/py-events.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-events.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-events.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-events.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -26,7 +26,6 @@ set lib_opts  debug\n \n standard_testfile\n set exec_opts [list debug shlib=$lib_sl]\n-set pyfile ${srcdir}/${subdir}/${testfile}.py\n \n if [get_compiler_info] {\n     return -1\n@@ -43,6 +42,7 @@ clean_restart ${testfile}\n \n if { [skip_python_tests] } { continue }\n \n+set pyfile [gdb_remote_download host ${srcdir}/${subdir}/py-events.py]\n gdb_test_no_output \"source ${pyfile}\" \"load python file\"\n \n gdb_test \"test-objfile-events\" \"Object file events registered.\""
    },
    {
      "sha": "c79ddcfa48c479c045b1c8387c5d0192aa069710",
      "filename": "gdb/testsuite/gdb.python/py-evsignal.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-evsignal.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-evsignal.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-evsignal.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -23,7 +23,6 @@ if {[target_info gdb_protocol] == \"remote\"\n load_lib gdb-python.exp\n \n standard_testfile py-evthreads.c\n-set pyfile ${srcdir}/${subdir}/py-events.py\n \n if {[gdb_compile_pthreads \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n     return -1\n@@ -32,6 +31,7 @@ clean_restart $testfile\n \n if { [skip_python_tests] } { continue }\n \n+set pyfile [gdb_remote_download host ${srcdir}/${subdir}/py-events.py]\n gdb_test_no_output \"source ${pyfile}\" \"load python file\"\n \n gdb_test \"test-events\" \"Event testers registered.\""
    },
    {
      "sha": "d688c5b77e5ea9400ef09c20f870cd875b594387",
      "filename": "gdb/testsuite/gdb.python/py-evthreads.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-evthreads.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-evthreads.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-evthreads.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -21,7 +21,6 @@ if { ![support_displaced_stepping] } {\n load_lib gdb-python.exp\n \n standard_testfile\n-set pyfile ${srcdir}/${subdir}/py-events.py\n \n if {[gdb_compile_pthreads \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n     return -1\n@@ -34,6 +33,7 @@ save_vars { GDBFLAGS } {\n \n if { [skip_python_tests] } { continue }\n \n+set pyfile [gdb_remote_download host ${srcdir}/${subdir}/py-events.py]\n gdb_test_no_output \"source ${pyfile}\" \"load python file\"\n \n gdb_test \"test-events\" \"Event testers registered.\""
    },
    {
      "sha": "99b9f574c0afd7048e24968e31c9fcb98789aac6",
      "filename": "gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -48,7 +48,7 @@ gdb_test_no_output \"set auto-load safe-path ${remote_obj_python_file}\" \\\n     \"set auto-load safe-path\"\n gdb_load ${binfile}\n # Verify gdb loaded the script.\n-gdb_test \"info auto-load python-scripts\" \"Yes.*/${testfile}-gdb.py.*\" \\\n+gdb_test \"info auto-load python-scripts\" \"Yes.*${testfile}-gdb.py.*\" \\\n     \"Test auto-load had loaded python scripts\"\n \n if ![runto_main] then {"
    },
    {
      "sha": "336c88597a9c19e9a8d4ec0665ea937618220b11",
      "filename": "gdb/testsuite/gdb.python/py-framefilter.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-framefilter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-framefilter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-framefilter.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -41,16 +41,15 @@ gdb_test \"info frame-filter\" \\\n # Care is taken to put it in the same directory as the binary so that\n # gdb will find it.\n set remote_obj_python_file \\\n-    [remote_download \\\n-\t host ${srcdir}/${subdir}/${testfile}-gdb.py.in \\\n-\t [standard_output_file ${testfile}-gdb.py]]\n+    [gdb_remote_download host ${srcdir}/${subdir}/${testfile}-gdb.py.in \\\n+\t ${testfile}-gdb.py]\n \n gdb_reinitialize_dir $srcdir/$subdir\n gdb_test_no_output \"set auto-load safe-path ${remote_obj_python_file}\" \\\n     \"set auto-load safe-path\"\n gdb_load ${binfile}\n # Verify gdb loaded the script.\n-gdb_test \"info auto-load python-scripts\" \"Yes.*/${testfile}-gdb.py.*\" \\\n+gdb_test \"info auto-load python-scripts\" \"Yes.*${testfile}-gdb.py.*\" \\\n     \"Test auto-load had loaded python scripts\"\n \n if ![runto_main] then {\n@@ -302,17 +301,16 @@ if { [skip_python_tests] } { continue }\n # Care is taken to put it in the same directory as the binary so that\n # gdb will find it.\n set remote_obj_python_file \\\n-    [remote_download \\\n-\t host ${srcdir}/${subdir}/${testfile}-gdb.py.in \\\n-\t [standard_output_file ${testfile}-gdb.py]]\n+    [gdb_remote_download host ${srcdir}/${subdir}/${testfile}-gdb.py.in \\\n+\t ${testfile}-gdb.py]\n \n gdb_reinitialize_dir $srcdir/$subdir\n gdb_test_no_output \"set auto-load safe-path ${remote_obj_python_file}\" \\\n     \"set auto-load safe-path for no debug info\"\n gdb_load ${binfile}\n \n # Verify gdb loaded the script.\n-gdb_test \"info auto-load python-scripts\" \"Yes.*/${testfile}-gdb.py.*\" \\\n+gdb_test \"info auto-load python-scripts\" \"Yes.*${testfile}-gdb.py.*\" \\\n     \"Set autoload path for no debug info tests\"\n if ![runto_main] then {\n     perror \"couldn't run to breakpoint\""
    },
    {
      "sha": "0bec17e437e2dd76029580c5ee238db3a951f59a",
      "filename": "gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-mi-var-info-path-expression.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -35,7 +35,8 @@ if {[gdb_compile \"$srcdir/$subdir/$srcfile\" $binfile executable {debug}] != \"\" }\n # Skip all tests if Python scripting is not enabled.\n if { [mi_skip_python_tests] } { continue }\n \n-mi_gdb_test \"source ${srcdir}/${subdir}/${testfile}.py\" \\\n+set pyfile [gdb_remote_download host ${srcdir}/${subdir}/${testfile}.py]\n+mi_gdb_test \"source ${pyfile}\" \\\n   \".*\\\\^done\" \\\n   \"load python file\"\n "
    },
    {
      "sha": "b318acc7909318c6009f3716cc1f5b42d2d92c95",
      "filename": "gdb/testsuite/gdb.python/py-objfile-script.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-objfile-script.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-objfile-script.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-objfile-script.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -40,7 +40,7 @@ gdb_test_no_output \"set auto-load safe-path ${remote_python_file}\" \"set auto-loa\n gdb_load ${binfile}\n \n # Verify gdb loaded the script.\n-gdb_test \"info auto-load python-scripts\" \"Yes.*/${testfile}-gdb.py.*\"\n+gdb_test \"info auto-load python-scripts\" \"Yes.*${testfile}-gdb.py.*\"\n \n if ![runto_main] {\n     perror \"couldn't run to main\""
    },
    {
      "sha": "154c2e59503c457f3700cf979a249a9a0ad02ec5",
      "filename": "gdb/testsuite/gdb.python/py-objfile.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-objfile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-objfile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-objfile.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -46,7 +46,7 @@ gdb_test \"python print (objfile.username)\" \"${testfile}\" \\\n   \"Get objfile user name\"\n \n gdb_test \"python print (objfile)\" \\\n-    \"<gdb.Objfile filename=[string_to_regexp ${binfile}]>\"\n+    \"<gdb.Objfile filename=.*${testfile}.*>\"\n \n gdb_test_no_output \"python dir(objfile)\"\n \n@@ -158,17 +158,20 @@ if { [get_python_valueof \"sep_objfile.build_id\" \"None\"] != \"None\" } {\n \n # An objfile that was a symlink to a differently named file is still\n # findable with its original name.\n-set symlink_binary [standard_output_file \"symlink-binary\"]\n-remote_exec host \"rm -f ${symlink_binary}\"\n-remote_exec host \"ln -sf ${testfile} ${symlink_binary}\"\n-if [remote_file host exists \"${symlink_binary}\"] {\n-    clean_restart \"${symlink_binary}\"\n-    gdb_test \"python print (gdb.lookup_objfile (\\\"${symlink_binary}\\\").filename)\" \\\n-\t\"${testfile}\" \"gdb.lookup_objfile of symlinked binary\"\n+# On Windows we don't have proper symlinks, so skip this.\n+if ![ishost *-*-mingw*] {\n+    set symlink_binary [standard_output_file \"symlink-binary\"]\n+    remote_exec host \"rm -f ${symlink_binary}\"\n+    remote_exec host \"ln -sf ${testfile} ${symlink_binary}\"\n+    if [remote_file host exists \"${symlink_binary}\"] {\n+\tclean_restart \"${symlink_binary}\"\n+\tgdb_test \"python print (gdb.lookup_objfile (\\\"${symlink_binary}\\\").filename)\" \\\n+\t    \"${testfile}\" \"gdb.lookup_objfile of symlinked binary\"\n+    }\n }\n \n # Test printing an Objfile object that is no longer valid.\n gdb_py_test_silent_cmd \"python objfile = gdb.objfiles()\\[0\\]\" \\\n     \"get first objfile\" 1\n gdb_file_cmd ${binfile}\n-gdb_test \"python print(objfile)\" \"<gdb.Objfile \\\\\\(invalid\\\\\\)>\"\n\\ No newline at end of file\n+gdb_test \"python print(objfile)\" \"<gdb.Objfile \\\\\\(invalid\\\\\\)>\""
    },
    {
      "sha": "b592cbaeadfc7c9b4901acfc3715ee9f266e62cb",
      "filename": "gdb/testsuite/gdb.python/py-pp-maint.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-pp-maint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-pp-maint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-pp-maint.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -41,7 +41,7 @@ gdb_test \"b [gdb_get_line_number {break to inspect} ${testfile}.c ]\" \\\n     \".*Breakpoint.*\"\n gdb_test \"continue\" \".*Breakpoint.*\"\n \n-set python_file ${srcdir}/${subdir}/${testfile}.py\n+set python_file [gdb_remote_download host ${srcdir}/${subdir}/${testfile}.py]\n \n gdb_test_no_output \"source ${python_file}\" \"load python file\"\n "
    },
    {
      "sha": "fa9458fa2411cc302ede96ffc41ff1573567929a",
      "filename": "gdb/testsuite/gdb.python/py-pp-registration.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-pp-registration.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-pp-registration.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-pp-registration.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -91,7 +91,7 @@ with_test_prefix \"verbose on\" {\n     gdb_test \"py gdb.printing.register_pretty_printer(gdb, lookup_function_lookup_test)\" \\\n \t\"Registering global lookup_function_lookup_test pretty-printer ...\"\n     gdb_test \"py gdb.printing.register_pretty_printer(progspace, my_pretty_printer1)\" \\\n-\t\"Registering pp-test pretty-printer for .*/py-pp-registration ...\"\n+\t\"Registering pp-test pretty-printer for .*py-pp-registration ...\"\n \n     test_printers \"s1\"\n }"
    },
    {
      "sha": "9eaa7911ef7ff1185fb8bb77f5684b5f6d93ad6d",
      "filename": "gdb/testsuite/gdb.python/py-section-script.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 4,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-section-script.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-section-script.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-section-script.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -77,22 +77,35 @@ gdb_exit\n gdb_start\n gdb_reinitialize_dir $srcdir/$subdir\n \n-gdb_test_no_output \"set auto-load safe-path ${remote_python_file}:${binfile}\" \\\n+# Get the name of the binfile on the host; on a remote host this means\n+# stripping off any directory prefix.\n+if [is_remote host] {\n+    set remote_binfile [file tail ${binfile}]\n+} else {\n+    set remote_binfile ${binfile}\n+}\n+\n+if [ishost *-*-mingw*] {\n+    set remote_pathsep \";\"\n+} else {\n+    set remote_pathsep \":\"\n+}\n+gdb_test_no_output \"set auto-load safe-path ${remote_python_file}${remote_pathsep}${remote_binfile}\" \\\n     \"set auto-load safe-path\"\n gdb_load ${binfile}\n \n # Verify gdb loaded each script and they appear once in the list.\n set test_name \"verify scripts loaded\"\n gdb_test_multiple \"info auto-load python-scripts\" \"$test_name\" {\n+    -re \"Yes.*${testfile}.py.*Yes.*inlined-script.*$gdb_prompt $\" {\n+\tpass \"$test_name\"\n+    }\n     -re \"${testfile}.py.*${testfile}.py.*$gdb_prompt $\" {\n \tfail \"$test_name\"\n     }\n     -re \"inlined-script.*inlined-script.*$gdb_prompt $\" {\n \tfail \"$test_name\"\n     }\n-    -re \"Yes.*${testfile}.py.*Yes.*inlined-script.*$gdb_prompt $\" {\n-\tpass \"$test_name\"\n-    }\n }\n \n # Again, with a regexp this time."
    },
    {
      "sha": "04bff8d296d6f8de510021eac875b0cad2c2d907",
      "filename": "gdb/testsuite/gdb.python/py-symtab.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-symtab.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74c2c1f45f036c4f155cc65a86022ce6eef0c5c5/gdb/testsuite/gdb.python/py-symtab.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-symtab.exp?ref=74c2c1f45f036c4f155cc65a86022ce6eef0c5c5",
      "patch": "@@ -66,8 +66,8 @@ gdb_test \"python print (sal.is_valid())\" \"True\" \"test sal.is_valid\"\n \n # Test symbol table.\n gdb_test \"python print (symtab.filename)\" \".*${py_symbol_c}\" \"test symtab.filename\"\n-gdb_test \"python print (symtab.objfile)\" \"<gdb.Objfile filename=${binfile}>\" \\\n-    \"test symtab.objfile\"\n+gdb_test \"python print (symtab.objfile)\" \\\n+    \"<gdb.Objfile filename=.*${testfile}.*>\" \"test symtab.objfile\"\n gdb_test \"python print (symtab.fullname())\" \".*${full_py_symbol_c}\" \"test symtab.fullname\"\n gdb_test \"python print (symtab.is_valid())\" \"True\" \"test symtab.is_valid()\"\n gdb_test \"python print (\\\"qq\\\" in global_symbols)\" \"True\" \"test qq in global symbols\""
    }
  ]
}