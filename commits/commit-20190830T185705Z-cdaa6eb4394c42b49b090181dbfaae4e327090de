{
  "sha": "cdaa6eb4394c42b49b090181dbfaae4e327090de",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2RhYTZlYjQzOTRjNDJiNDliMDkwMTgxZGJmYWFlNGUzMjcwOTBkZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-15T21:28:56Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-30T18:57:05Z"
    },
    "message": "Simplify register display\n\nThis patch starts with the observation that the code in\ntui_data_window::display_registers_from can all be replaced with a\ncall to resize.  To make this work propertly, it also changes\ntui_display_register to be the \"rerender\" method on\ntui_data_item_window.\n\nThe refresh_window method is needed due to the use of nested windows\nhere.  The ncurses man page makes it sound like this is not very well\nsupported; and experience bears this out: negelecting the touchwin\ncall in this path will cause the register window to blank when\nswitching focus.\n\ngdb/ChangeLog\n2019-08-30  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.h (struct tui_data_item_window) <rerender,\n\trefresh_window>: Declare.\n\t* tui/tui-regs.c (tui_data_window::display_registers_from): Call\n\tresize.\n\t(tui_data_item_window::rerender): Rename from\n\ttui_display_register.\n\t(tui_data_item_window::refresh_window): New method.\n\t* tui/tui-layout.c (tui_gen_win_info::resize): Do nothing on\n\tno-op.",
    "tree": {
      "sha": "573540530d7973fbe3f95a526af3b700efd9d8b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/573540530d7973fbe3f95a526af3b700efd9d8b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cdaa6eb4394c42b49b090181dbfaae4e327090de",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cdaa6eb4394c42b49b090181dbfaae4e327090de",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cdaa6eb4394c42b49b090181dbfaae4e327090de",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cdaa6eb4394c42b49b090181dbfaae4e327090de/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "89df7f9056d72418720ac655e1ad97decc471da9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89df7f9056d72418720ac655e1ad97decc471da9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/89df7f9056d72418720ac655e1ad97decc471da9"
    }
  ],
  "stats": {
    "total": 121,
    "additions": 63,
    "deletions": 58
  },
  "files": [
    {
      "sha": "388f5ebe9290eb16d01513239636a13626a7b796",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cdaa6eb4394c42b49b090181dbfaae4e327090de",
      "patch": "@@ -1,3 +1,15 @@\n+2019-08-30  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.h (struct tui_data_item_window) <rerender,\n+\trefresh_window>: Declare.\n+\t* tui/tui-regs.c (tui_data_window::display_registers_from): Call\n+\tresize.\n+\t(tui_data_item_window::rerender): Rename from\n+\ttui_display_register.\n+\t(tui_data_item_window::refresh_window): New method.\n+\t* tui/tui-layout.c (tui_gen_win_info::resize): Do nothing on\n+\tno-op.\n+\n 2019-08-30  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.h (struct tui_data_window) <regs_content,"
    },
    {
      "sha": "7ec704e52f077d266c61892eef474be09643679d",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=cdaa6eb4394c42b49b090181dbfaae4e327090de",
      "patch": "@@ -580,6 +580,11 @@ void\n tui_gen_win_info::resize (int height_, int width_,\n \t\t\t  int origin_x_, int origin_y_)\n {\n+  if (width == width_ && height == height_\n+      && origin.x == origin_x_ && origin.y == origin_y_\n+      && handle != nullptr)\n+    return;\n+\n   width = width_;\n   height = height_;\n   if (height > 1)"
    },
    {
      "sha": "f62ba065ebe0f544f6cb0b12910a7d04fd406fa3",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 42,
      "deletions": 58,
      "changes": 100,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=cdaa6eb4394c42b49b090181dbfaae4e327090de",
      "patch": "@@ -42,8 +42,6 @@\n \n #include \"gdb_curses.h\"\n \n-static void tui_display_register (struct tui_data_item_window *data);\n-\n /* Get the register from the frame and return a printable\n    representation of it.  */\n \n@@ -274,34 +272,9 @@ tui_data_window::display_registers_from (int start_element_no)\n \t   j < regs_column_count && i < regs_content.size ();\n \t   j++)\n \t{\n-\t  struct tui_data_item_window *data_item_win;\n-\n \t  /* Create the window if necessary.  */\n-\t  data_item_win = &regs_content[i];\n-\t  if (data_item_win->handle != NULL\n-\t      && (data_item_win->height != 1\n-\t\t  || data_item_win->width != item_win_width\n-\t\t  || data_item_win->origin.x != (item_win_width * j) + 1\n-\t\t  || data_item_win->origin.y != cur_y))\n-\t    {\n-\t      tui_delete_win (data_item_win->handle);\n-\t      data_item_win->handle = 0;\n-\t    }\n-                  \n-\t  if (data_item_win->handle == NULL)\n-\t    {\n-\t      data_item_win->height = 1;\n-\t      data_item_win->width = item_win_width;\n-\t      data_item_win->origin.x = (item_win_width * j) + 1;\n-\t      data_item_win->origin.y = cur_y;\n-\t      data_item_win->make_visible (true);\n-\t      scrollok (data_item_win->handle, FALSE);\n-\t    }\n-\t  touchwin (data_item_win->handle);\n-\n-\t  /* Get the printable representation of the register\n-\t     and display it.  */\n-\t  tui_display_register (data_item_win);\n+\t  regs_content[i].resize (1, item_win_width,\n+\t\t\t\t  (item_win_width * j) + 1, cur_y);\n \t  i++;\t\t/* Next register.  */\n \t}\n       cur_y++;\t\t/* Next row.  */\n@@ -508,43 +481,54 @@ tui_data_window::check_register_values (struct frame_info *frame)\n \t\t\t    &data_item_win.highlight);\n \n \t  if (data_item_win.highlight || was_hilighted)\n-\t    tui_display_register (&data_item_win);\n+\t    data_item_win.rerender ();\n \t}\n     }\n }\n \n /* Display a register in a window.  If hilite is TRUE, then the value\n    will be displayed in reverse video.  */\n-static void\n-tui_display_register (struct tui_data_item_window *data)\n+void\n+tui_data_item_window::rerender ()\n {\n-  if (data->handle != NULL)\n-    {\n-      int i;\n-\n-      if (data->highlight)\n-\t/* We ignore the return value, casting it to void in order to avoid\n-\t   a compiler warning.  The warning itself was introduced by a patch\n-\t   to ncurses 5.7 dated 2009-08-29, changing this macro to expand\n-\t   to code that causes the compiler to generate an unused-value\n-\t   warning.  */\n-\t(void) wstandout (data->handle);\n+  int i;\n+\n+  scrollok (handle, FALSE);\n+  if (highlight)\n+    /* We ignore the return value, casting it to void in order to avoid\n+       a compiler warning.  The warning itself was introduced by a patch\n+       to ncurses 5.7 dated 2009-08-29, changing this macro to expand\n+       to code that causes the compiler to generate an unused-value\n+       warning.  */\n+    (void) wstandout (handle);\n       \n-      wmove (data->handle, 0, 0);\n-      for (i = 1; i < data->width; i++)\n-        waddch (data->handle, ' ');\n-      wmove (data->handle, 0, 0);\n-      if (data->content)\n-        waddstr (data->handle, data->content.get ());\n-\n-      if (data->highlight)\n-\t/* We ignore the return value, casting it to void in order to avoid\n-\t   a compiler warning.  The warning itself was introduced by a patch\n-\t   to ncurses 5.7 dated 2009-08-29, changing this macro to expand\n-\t   to code that causes the compiler to generate an unused-value\n-\t   warning.  */\n-\t(void) wstandend (data->handle);\n-      data->refresh_window ();\n+  wmove (handle, 0, 0);\n+  for (i = 1; i < width; i++)\n+    waddch (handle, ' ');\n+  wmove (handle, 0, 0);\n+  if (content)\n+    waddstr (handle, content.get ());\n+\n+  if (highlight)\n+    /* We ignore the return value, casting it to void in order to avoid\n+       a compiler warning.  The warning itself was introduced by a patch\n+       to ncurses 5.7 dated 2009-08-29, changing this macro to expand\n+       to code that causes the compiler to generate an unused-value\n+       warning.  */\n+    (void) wstandend (handle);\n+  refresh_window ();\n+}\n+\n+void\n+tui_data_item_window::refresh_window ()\n+{\n+  if (handle != nullptr)\n+    {\n+      /* This seems to be needed because the data items are nested\n+\t windows, which according to the ncurses man pages aren't well\n+\t supported.  */\n+      touchwin (handle);\n+      wrefresh (handle);\n     }\n }\n "
    },
    {
      "sha": "1f9fa73f1cc5be0f3be2da1a416e7d08cd7120e2",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cdaa6eb4394c42b49b090181dbfaae4e327090de/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=cdaa6eb4394c42b49b090181dbfaae4e327090de",
      "patch": "@@ -37,6 +37,10 @@ struct tui_data_item_window : public tui_gen_win_info\n \n   tui_data_item_window (tui_data_item_window &&) = default;\n \n+  void rerender () override;\n+\n+  void refresh_window () override;\n+\n   const char *name = nullptr;\n   /* The register number, or data display number.  */\n   int item_no = -1;"
    }
  ]
}