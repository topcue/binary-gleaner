{
  "sha": "3f02ce1e3df15731872befd2e711854b2b259745",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2YwMmNlMWUzZGYxNTczMTg3MmJlZmQyZTcxMTg1NGIyYjI1OTc0NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T21:12:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:34Z"
    },
    "message": "Introduce set_new_height method\n\nThis introduces tui_win_info::set_new_height and implements it in the\nsubclasses as appropriate.  This removes another switch on the window\ntype.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-win.c (tui_source_window_base::set_new_height)\n\t(tui_data_window::set_new_height): New methods.\n\t(make_invisible_and_set_new_height): Call set_new_height method.\n\t* tui/tui-data.h (struct tui_win_info)\n\t(struct tui_source_window_base, struct tui_data_window)\n\t<set_new_height>: New method.",
    "tree": {
      "sha": "4533dea0d713965b61ea43397d6c1dfc9b3e3a2e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4533dea0d713965b61ea43397d6c1dfc9b3e3a2e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3f02ce1e3df15731872befd2e711854b2b259745",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f02ce1e3df15731872befd2e711854b2b259745",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3f02ce1e3df15731872befd2e711854b2b259745",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f02ce1e3df15731872befd2e711854b2b259745/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1825f487ae903438eb2a9b6f461337d8ec1b06c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1825f487ae903438eb2a9b6f461337d8ec1b06c0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1825f487ae903438eb2a9b6f461337d8ec1b06c0"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 57,
    "deletions": 40
  },
  "files": [
    {
      "sha": "c8850c13a17a9b8073e4b7cda6a73f9ed89cd263",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f02ce1e3df15731872befd2e711854b2b259745/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f02ce1e3df15731872befd2e711854b2b259745/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3f02ce1e3df15731872befd2e711854b2b259745",
      "patch": "@@ -1,3 +1,12 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-win.c (tui_source_window_base::set_new_height)\n+\t(tui_data_window::set_new_height): New methods.\n+\t(make_invisible_and_set_new_height): Call set_new_height method.\n+\t* tui/tui-data.h (struct tui_win_info)\n+\t(struct tui_source_window_base, struct tui_data_window)\n+\t<set_new_height>: New method.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui.c (tui_rl_other_window): Call the refresh_all method."
    },
    {
      "sha": "07ec97737ecde9e6df5aeff143acee1f3590a15d",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f02ce1e3df15731872befd2e711854b2b259745/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f02ce1e3df15731872befd2e711854b2b259745/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=3f02ce1e3df15731872befd2e711854b2b259745",
      "patch": "@@ -267,6 +267,12 @@ struct tui_win_info\n   {\n   }\n \n+  /* Called after a TUI window is given a new height; this updates any\n+     related auxiliary windows.  */\n+  virtual void set_new_height (int height)\n+  {\n+  }\n+\n   /* Methods to scroll the contents of this window.  Note that they\n      are named with \"_scroll\" coming at the end because the more\n      obvious \"scroll_forward\" is defined as a macro in term.h.  */\n@@ -318,6 +324,8 @@ struct tui_source_window_base : public tui_win_info\n   /* Set the location of the execution point.  */\n   void set_is_exec_point_at (struct tui_line_or_address l);\n \n+  void set_new_height (int height) override;\n+\n   /* Does the locator belong to this window?  */\n   bool m_has_locator = false;\n   /* Execution information window.  */\n@@ -380,6 +388,8 @@ struct tui_data_window : public tui_win_info\n   void clear_detail () override;\n   void refresh_all () override;\n \n+  void set_new_height (int height) override;\n+\n   /* Start of data display content.  */\n   tui_win_content data_content = NULL;\n   int data_content_count = 0;"
    },
    {
      "sha": "fe1e901c74153591d15b1ee61ac06b5f82966114",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 38,
      "deletions": 40,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f02ce1e3df15731872befd2e711854b2b259745/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f02ce1e3df15731872befd2e711854b2b259745/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=3f02ce1e3df15731872befd2e711854b2b259745",
      "patch": "@@ -1242,16 +1242,50 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n }\n \n \n+/* See tui-data.h.  */\n+\n+void\n+tui_source_window_base::set_new_height (int height)\n+{\n+  tui_make_invisible (execution_info);\n+  execution_info->height = height;\n+  execution_info->origin.y = generic.origin.y;\n+  if (height > 1)\n+    execution_info->viewport_height = height - 1;\n+  else\n+    execution_info->viewport_height = height;\n+  execution_info->viewport_height--;\n+\n+  if (has_locator ())\n+    {\n+      tui_gen_win_info *gen_win_info = tui_locator_win_info_ptr ();\n+      tui_make_invisible (gen_win_info);\n+      gen_win_info->origin.y = generic.origin.y + height;\n+    }\n+}\n+\n+/* See tui-data.h.  */\n+\n+void\n+tui_data_window::set_new_height (int height)\n+{\n+  /* Delete all data item windows.  */\n+  for (int i = 0; i < generic.content_size; i++)\n+    {\n+      struct tui_gen_win_info *gen_win_info\n+\t= &generic.content[i]->which_element.data_window;\n+      tui_delete_win (gen_win_info->handle);\n+      gen_win_info->handle = NULL;\n+    }\n+}\n+\n /* Function make the target window (and auxillary windows associated\n    with the targer) invisible, and set the new height and\n    location.  */\n static void\n make_invisible_and_set_new_height (struct tui_win_info *win_info, \n \t\t\t\t   int height)\n {\n-  int i;\n-  struct tui_gen_win_info *gen_win_info;\n-\n   tui_make_invisible (&win_info->generic);\n   win_info->generic.height = height;\n   if (height > 1)\n@@ -1262,43 +1296,7 @@ make_invisible_and_set_new_height (struct tui_win_info *win_info,\n     win_info->generic.viewport_height--;\n \n   /* Now deal with the auxillary windows associated with win_info.  */\n-  tui_source_window_base *base;\n-  switch (win_info->generic.type)\n-    {\n-    case SRC_WIN:\n-    case DISASSEM_WIN:\n-      base = (tui_source_window_base *) win_info;\n-      gen_win_info = base->execution_info;\n-      tui_make_invisible (gen_win_info);\n-      gen_win_info->height = height;\n-      gen_win_info->origin.y = win_info->generic.origin.y;\n-      if (height > 1)\n-\tgen_win_info->viewport_height = height - 1;\n-      else\n-\tgen_win_info->viewport_height = height;\n-      if (win_info != TUI_CMD_WIN)\n-\tgen_win_info->viewport_height--;\n-\n-      if (win_info->has_locator ())\n-\t{\n-\t  gen_win_info = tui_locator_win_info_ptr ();\n-\t  tui_make_invisible (gen_win_info);\n-\t  gen_win_info->origin.y = win_info->generic.origin.y + height;\n-\t}\n-      break;\n-    case DATA_WIN:\n-      /* Delete all data item windows.  */\n-      for (i = 0; i < win_info->generic.content_size; i++)\n-\t{\n-\t  gen_win_info\n-\t    = &win_info->generic.content[i]->which_element.data_window;\n-\t  tui_delete_win (gen_win_info->handle);\n-\t  gen_win_info->handle = NULL;\n-\t}\n-      break;\n-    default:\n-      break;\n-    }\n+  win_info->set_new_height (height);\n }\n \n "
    }
  ]
}