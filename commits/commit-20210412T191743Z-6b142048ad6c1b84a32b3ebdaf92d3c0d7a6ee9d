{
  "sha": "6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmIxNDIwNDhhZDZjMWI4NGEzMmIzZWJkYWY5MmQzYzBkN2E2ZWU5ZA==",
  "commit": {
    "author": {
      "name": "Will Schmidt",
      "email": "will_schmidt@vnet.ibm.com",
      "date": "2021-04-12T19:17:43Z"
    },
    "committer": {
      "name": "Will Schmidt",
      "email": "will_schmidt@vnet.ibm.com",
      "date": "2021-04-12T19:17:43Z"
    },
    "message": "[PATCH,rs6000] Fix vsx-regs.exp testcase failure\n\nHi,\n  This test exercise updates to the F* and VS* registers\nand verifies updates to the same.  Note that the registers\noverlap; the doubleword[1] portion of any VS0-VS31\nregister contains the F0-F31 register contents, so any updates\nto one can be measured in the other.\n\nPer a brief investigation, we see that dl_main() currently\nuses some VSX instructions, so the VS* values are not\ngoing to be zero when this testcase reaches main, where these\ntests begin.  The test harness does not explicitly\ninitialize the full VS* values, so the first test loop\nthat updates the F* values means our VS* values are\nuninitalized and will fail the first set of checks.\nThis update explicitly initializes the doubleword[0] portion\nof the VS* registers, to allow this test to succeed.\n\n2021-04-12  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\ngdb/testsuite/ChangeLog:\n        * gdb.arch/vsx-regs.exp: Initialize vs* doublewords.",
    "tree": {
      "sha": "6be2828a9af803f145e428cd749767fca6046e2f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6be2828a9af803f145e428cd749767fca6046e2f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d/comments",
  "author": {
    "login": "willschm",
    "id": 44359,
    "node_id": "MDQ6VXNlcjQ0MzU5",
    "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/willschm",
    "html_url": "https://github.com/willschm",
    "followers_url": "https://api.github.com/users/willschm/followers",
    "following_url": "https://api.github.com/users/willschm/following{/other_user}",
    "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/willschm/subscriptions",
    "organizations_url": "https://api.github.com/users/willschm/orgs",
    "repos_url": "https://api.github.com/users/willschm/repos",
    "events_url": "https://api.github.com/users/willschm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/willschm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "willschm",
    "id": 44359,
    "node_id": "MDQ6VXNlcjQ0MzU5",
    "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/willschm",
    "html_url": "https://github.com/willschm",
    "followers_url": "https://api.github.com/users/willschm/followers",
    "following_url": "https://api.github.com/users/willschm/following{/other_user}",
    "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/willschm/subscriptions",
    "organizations_url": "https://api.github.com/users/willschm/orgs",
    "repos_url": "https://api.github.com/users/willschm/repos",
    "events_url": "https://api.github.com/users/willschm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/willschm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c8a379440e0f8bf94ed5730e823c9256e64bf37c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c8a379440e0f8bf94ed5730e823c9256e64bf37c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c8a379440e0f8bf94ed5730e823c9256e64bf37c"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 16,
    "deletions": 1
  },
  "files": [
    {
      "sha": "b8c84aaa57f56b1eed898e5470a0daa1dc9f8458",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-12  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gdb.arch/powerpc-vsx-regs.exp: Initialize vs* doublewords.\n+\n 2021-04-12  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gdb.arch/powerpc-plxv-nonrel.s:  Testcase using"
    },
    {
      "sha": "0b0d2fa4d53f67c5e3a441275d62748ee88a2f4d",
      "filename": "gdb/testsuite/gdb.arch/vsx-regs.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d/gdb/testsuite/gdb.arch/vsx-regs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d/gdb/testsuite/gdb.arch/vsx-regs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/vsx-regs.exp?ref=6b142048ad6c1b84a32b3ebdaf92d3c0d7a6ee9d",
      "patch": "@@ -89,7 +89,18 @@ if {$endianness == \"big\"} {\n \n set float_register \".raw 0xdeadbeefdeadbeef.\"\n \n-# First run the F0~F31/VS0~VS31 tests\n+# Note that the F0-F31 registers are shared with the doubleword 0 portion of\n+# the VS0-VS31 registers, the doubleword 1 portions of VS* remain unchanged\n+# after updates to F*.\n+# Since dl_main uses some VS* registers, and per inspection their values are\n+# no longer zero when our test reaches main(), we need to explicitly\n+# initialize the doubleword1 portions before we run our tests against\n+# values currently in those registers.\n+\n+# 0: Initialize the (doubleword 1) portion of the VS0-VS31 registers.\n+for {set i 0} {$i < 32} {incr i 1} {\n+    gdb_test_no_output \"set \\$vs$i.v2_double\\][0\\] = 0\"\n+}\n \n # 1: Set F0~F31 registers and check if it reflects on VS0~VS31.\n for {set i 0} {$i < 32} {incr i 1} {"
    }
  ]
}