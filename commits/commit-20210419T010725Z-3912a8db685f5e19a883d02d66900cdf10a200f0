{
  "sha": "3912a8db685f5e19a883d02d66900cdf10a200f0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzkxMmE4ZGI2ODVmNWUxOWE4ODNkMDJkNjY5MDBjZGYxMGEyMDBmMA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-19T01:01:00Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-04-19T01:07:25Z"
    },
    "message": "sim: cr16: fix build warnings\n\nThe printf fix is obvious enough, but the hash one is a real bug:\ncr16/interp.c: In function 'sim_open':\ncr16/interp.c:560:17: error: 'h' may be used uninitialized in this function [-Werror=maybe-uninitialized]\n  560 |               h = h->next;\n      |               ~~^~~~~~~~~\n\nIt happens to not cause a problem currently because the first entry in\nthe generated table that this loop operates matches a codepath where h\nis initialized.  Then when later entries don't match, the previous value\nis pointing at the end of a valid hash table already, and the rest of\nthe code does nothing.\n\nWith this tidied up, we can delete the SIM_AC_OPTION_WARNINGS(no) call\nto get the default common behavior where -Werror is enabled.",
    "tree": {
      "sha": "07104f4906862d7e7c2e121b728ab16658dd1d98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/07104f4906862d7e7c2e121b728ab16658dd1d98"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3912a8db685f5e19a883d02d66900cdf10a200f0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3912a8db685f5e19a883d02d66900cdf10a200f0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3912a8db685f5e19a883d02d66900cdf10a200f0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3912a8db685f5e19a883d02d66900cdf10a200f0/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9eab4c18bd39c0dc5b3f41892d80c130b0852e35",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9eab4c18bd39c0dc5b3f41892d80c130b0852e35",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9eab4c18bd39c0dc5b3f41892d80c130b0852e35"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 14,
    "deletions": 4
  },
  "files": [
    {
      "sha": "38cfe221169633cd9bf37f338c092003037aa437",
      "filename": "sim/cr16/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog?ref=3912a8db685f5e19a883d02d66900cdf10a200f0",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-18  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Use PRIx64 to match mcode type.  Skip the\n+\tcurrent simop when it doesn't match a known hash table.\n+\t* configure.ac (SIM_AC_OPTION_WARNINGS): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-04-12  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c (sim_open): Delete 3rd arg to sim_cpu_alloc_all."
    },
    {
      "sha": "99e21fc4b5139dd17a40d082d33ee215025a2cdb",
      "filename": "sim/cr16/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure?ref=3912a8db685f5e19a883d02d66900cdf10a200f0",
      "patch": "@@ -11978,6 +11978,7 @@ fi\n fi\n \n \n+\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11994,6 +11995,9 @@ if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n fi\n \n WERROR_CFLAGS=\"\"\n+  if test \"${ERROR_ON_WARNING}\" = yes ; then\n+    WERROR_CFLAGS=\"-Werror\"\n+  fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -12075,7 +12079,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "f4dc9c1314db3769011bd57911b1aba43f04d335",
      "filename": "sim/cr16/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure.ac?ref=3912a8db685f5e19a883d02d66900cdf10a200f0",
      "patch": "@@ -6,6 +6,5 @@ SIM_AC_COMMON\n \n SIM_AC_OPTION_ENDIAN(LITTLE)\n SIM_AC_OPTION_ALIGNMENT(NONSTRICT_ALIGNMENT)\n-SIM_AC_OPTION_WARNINGS(no)\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "46150069a383e08df37659870141ac8f6e04fa97",
      "filename": "sim/cr16/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3912a8db685f5e19a883d02d66900cdf10a200f0/sim/cr16/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/interp.c?ref=3912a8db685f5e19a883d02d66900cdf10a200f0",
      "patch": "@@ -330,7 +330,7 @@ do_run (SIM_DESC sd, SIM_CPU *cpu, uint64 mcode)\n \n #ifdef DEBUG\n   if ((cr16_debug & DEBUG_INSTRUCTION) != 0)\n-    sim_io_printf (sd, \"do_long 0x%x\\n\", mcode);\n+    sim_io_printf (sd, \"do_long 0x%\" PRIx64 \"\\n\", mcode);\n #endif\n \n    h = lookup_hash (sd, cpu, mcode, 1);\n@@ -543,8 +543,9 @@ sim_open (SIM_OPEN_KIND kind, struct host_callback_struct *cb,\n                else \n                  h = &hash_table[hash(s->opcode, 0)];\n                break;\n+\n             default:\n-              break;\n+              continue;\n             }\n       \n           /* go to the last entry in the chain.  */"
    }
  ]
}