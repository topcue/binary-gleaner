{
  "sha": "b467efaa91d270f8d057bbae9ab915d068a90ec4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjQ2N2VmYWE5MWQyNzBmOGQwNTdiYmFlOWFiOTE1ZDA2OGE5MGVjNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:12Z"
    },
    "message": "Split out ada_binop_in_bounds\n\nThis splits BINOP_IN_BOUNDS into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_binop_in_bounds): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "cc545fcd0c326c8db0087ee282c259b58f0dc94c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cc545fcd0c326c8db0087ee282c259b58f0dc94c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b467efaa91d270f8d057bbae9ab915d068a90ec4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b467efaa91d270f8d057bbae9ab915d068a90ec4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b467efaa91d270f8d057bbae9ab915d068a90ec4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b467efaa91d270f8d057bbae9ab915d068a90ec4/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5ce19db80f15af66a17acf02e1d831b387220ca7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ce19db80f15af66a17acf02e1d831b387220ca7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5ce19db80f15af66a17acf02e1d831b387220ca7"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 36,
    "deletions": 22
  },
  "files": [
    {
      "sha": "4905a8592f4649aadbdfdb132b12b1318c050fff",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b467efaa91d270f8d057bbae9ab915d068a90ec4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b467efaa91d270f8d057bbae9ab915d068a90ec4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b467efaa91d270f8d057bbae9ab915d068a90ec4",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_binop_in_bounds): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_ternop_slice): New function."
    },
    {
      "sha": "09ea46ed4f3ffb97a66ee330854e506e9b89fbfe",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 31,
      "deletions": 22,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b467efaa91d270f8d057bbae9ab915d068a90ec4/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b467efaa91d270f8d057bbae9ab915d068a90ec4/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=b467efaa91d270f8d057bbae9ab915d068a90ec4",
      "patch": "@@ -10188,6 +10188,36 @@ ada_ternop_slice (struct expression *exp,\n \t\t\t    longest_to_int (high_bound));\n }\n \n+/* A helper function for BINOP_IN_BOUNDS.  */\n+\n+static value *\n+ada_binop_in_bounds (struct expression *exp, enum noside noside,\n+\t\t     struct value *arg1, struct value *arg2, int n)\n+{\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    {\n+      struct type *type = language_bool_type (exp->language_defn,\n+\t\t\t\t\t      exp->gdbarch);\n+      return value_zero (type, not_lval);\n+    }\n+\n+  struct type *type = ada_index_type (value_type (arg2), n, \"range\");\n+  if (!type)\n+    type = value_type (arg1);\n+\n+  value *arg3 = value_from_longest (type, ada_array_bound (arg2, n, 1));\n+  arg2 = value_from_longest (type, ada_array_bound (arg2, n, 0));\n+\n+  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+  binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg3);\n+  type = language_bool_type (exp->language_defn, exp->gdbarch);\n+  return value_from_longest (type,\n+\t\t\t     (value_less (arg1, arg3)\n+\t\t\t      || value_equal (arg1, arg3))\n+\t\t\t     && (value_less (arg2, arg1)\n+\t\t\t\t || value_equal (arg2, arg1)));\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10651,30 +10681,9 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       if (noside == EVAL_SKIP)\n \tgoto nosideret;\n \n-      if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\t{\n-\t  type = language_bool_type (exp->language_defn, exp->gdbarch);\n-\t  return value_zero (type, not_lval);\n-\t}\n-\n       tem = longest_to_int (exp->elts[pc + 1].longconst);\n \n-      type = ada_index_type (value_type (arg2), tem, \"range\");\n-      if (!type)\n-\ttype = value_type (arg1);\n-\n-      arg3 = value_from_longest (type, ada_array_bound (arg2, tem, 1));\n-      arg2 = value_from_longest (type, ada_array_bound (arg2, tem, 0));\n-\n-      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-      binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg3);\n-      type = language_bool_type (exp->language_defn, exp->gdbarch);\n-      return\n-\tvalue_from_longest (type,\n-\t\t\t    (value_less (arg1, arg3)\n-\t\t\t     || value_equal (arg1, arg3))\n-\t\t\t    && (value_less (arg2, arg1)\n-\t\t\t\t|| value_equal (arg2, arg1)));\n+      return ada_binop_in_bounds (exp, noside, arg1, arg2, tem);\n \n     case TERNOP_IN_RANGE:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);"
    }
  ]
}