{
  "sha": "e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTRjNzhmMzAzZGY1NWIzZGZjNTc0NmM4ZDE4MTdjYzBkZjFiNzZjMw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:52Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:40:41Z"
    },
    "message": "libctf: a couple of small error-handling fixes\n\nOut-of-memory errors initializing the string atoms table were\ndisregarded (though they would have caused a segfault very shortly\nafterwards).  Errors hashing types during deduplication were only\nreported if they happened on the output dict, which is almost never the\ncase (most errors are going to be on the dict we're working over, which\nis going to be one of the inputs).  (The error was detected in both\ncases, but the errno was extracted from the wrong dict.)\n\nlibctf/ChangeLog\n2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-dedup.c (ctf_dedup_rhash_type): Report errors on the input\n\tdict properly.\n\t* ctf-open.c (ctf_bufopen_internal): Report errors initializing\n\tthe atoms table.",
    "tree": {
      "sha": "b76f1bbd8750eafccdf32e14b872329ec76d3cc3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b76f1bbd8750eafccdf32e14b872329ec76d3cc3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d7b1416ef2c46ee9b8bfe4e5ceb87b371d49504c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7b1416ef2c46ee9b8bfe4e5ceb87b371d49504c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d7b1416ef2c46ee9b8bfe4e5ceb87b371d49504c"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 25,
    "deletions": 10
  },
  "files": [
    {
      "sha": "2d80e781e9756933acf07233f8e6e8d4b2c46e55",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dedup.c (ctf_dedup_rhash_type): Report errors on the input\n+\tdict properly.\n+\t* ctf-open.c (ctf_bufopen_internal): Report errors initializing\n+\tthe atoms table.\n+\n 2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-impl.h (ctf_next_t) <ctn_tp>: New."
    },
    {
      "sha": "572a68d57ad54f589210115fd910af20bffa88a3",
      "filename": "libctf/ctf-dedup.c",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3/libctf/ctf-dedup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3/libctf/ctf-dedup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dedup.c?ref=e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
      "patch": "@@ -572,7 +572,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n   char hashbuf[CTF_SHA1_SIZE];\n   const char *hval = NULL;\n   const char *whaterr;\n-  int err;\n+  int err = 0;\n \n   const char *citer = NULL;\n   ctf_dynset_t *citers = NULL;\n@@ -697,7 +697,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \tif (ctf_type_encoding (input, type, &ep) < 0)\n \t  {\n \t    whaterr = N_(\"error getting encoding\");\n-\t    goto err;\n+\t    goto input_err;\n \t  }\n \tctf_dedup_sha1_add (&hash, &ep, sizeof (ctf_encoding_t), \"encoding\",\n \t\t\t    depth);\n@@ -770,7 +770,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \tif (ctf_array_info (input, type, &ar) < 0)\n \t  {\n \t    whaterr = N_(\"error getting array info\");\n-\t    goto err;\n+\t    goto input_err;\n \t  }\n \n \tif ((hval = ctf_dedup_hash_type (fp, input, inputs, parents, input_num,\n@@ -808,7 +808,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \tif (ctf_func_type_info (input, type, &fi) < 0)\n \t  {\n \t    whaterr = N_(\"error getting func type info\");\n-\t    goto err;\n+\t    goto input_err;\n \t  }\n \n \tif ((hval = ctf_dedup_hash_type (fp, input, inputs, parents, input_num,\n@@ -828,6 +828,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \n \tif ((args = calloc (fi.ctc_argc, sizeof (ctf_id_t))) == NULL)\n \t  {\n+\t    err = ENOMEM;\n \t    whaterr = N_(\"error doing memory allocation\");\n \t    goto err;\n \t  }\n@@ -836,7 +837,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \t  {\n \t    free (args);\n \t    whaterr = N_(\"error getting func arg type\");\n-\t    goto err;\n+\t    goto input_err;\n \t  }\n \tfor (j = 0; j < fi.ctc_argc; j++)\n \t  {\n@@ -871,7 +872,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \tif (ctf_errno (input) != ECTF_NEXT_END)\n \t  {\n \t    whaterr = N_(\"error doing enum member iteration\");\n-\t    goto err;\n+\t    goto input_err;\n \t  }\n \tbreak;\n       }\n@@ -916,7 +917,7 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \tif (ctf_errno (input) != ECTF_NEXT_END)\n \t  {\n \t    whaterr = N_(\"error doing struct/union member iteration\");\n-\t    goto err;\n+\t    goto input_err;\n \t  }\n \tbreak;\n       }\n@@ -971,10 +972,12 @@ ctf_dedup_rhash_type (ctf_dict_t *fp, ctf_dict_t *input, ctf_dict_t **inputs,\n \n  iterr:\n   ctf_next_destroy (i);\n+ input_err:\n+  err = ctf_errno (input);\n  err:\n   ctf_sha1_fini (&hash, NULL);\n-  ctf_err_warn (fp, 0, 0, _(\"%s (%i): %s: during type hashing for type %lx, \"\n-\t\t\t    \"kind %i\"), ctf_link_input_name (input),\n+  ctf_err_warn (fp, 0, err, _(\"%s (%i): %s: during type hashing for type %lx, \"\n+\t\t\t      \"kind %i\"), ctf_link_input_name (input),\n \t\tinput_num, gettext (whaterr), type, kind);\n   return NULL;\n  oom:"
    },
    {
      "sha": "8d11134f01731f1acd90286b94eb178aae00e401",
      "filename": "libctf/ctf-open.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3/libctf/ctf-open.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3/libctf/ctf-open.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-open.c?ref=e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
      "patch": "@@ -1545,7 +1545,12 @@ ctf_bufopen_internal (const ctf_sect_t *ctfsect, const ctf_sect_t *symsect,\n      ctf_set_base().  */\n \n   ctf_set_version (fp, hp, hp->cth_version);\n-  ctf_str_create_atoms (fp);\n+  if (ctf_str_create_atoms (fp) < 0)\n+    {\n+      err = ENOMEM;\n+      goto bad;\n+    }\n+\n   fp->ctf_parmax = CTF_MAX_PTYPE;\n   memcpy (&fp->ctf_data, ctfsect, sizeof (ctf_sect_t));\n "
    }
  ]
}