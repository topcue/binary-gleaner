{
  "sha": "90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTBjM2VjMmQyMTBhNzZlODhlOWZlN2M2MmFmOTgwNjY1MGE1YTljMA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-17T14:42:37Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-17T14:42:37Z"
    },
    "message": "[gdb/testsuite] Use MACRO_AT_{func,range}\n\nUse dwarf assembly procs MACRO_AT_func and MACRO_AT_range in test-cases where\nthat's appropriate.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-07-17  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.dlang/circular.c (found): Use found_label as label name.\n\t* gdb.dwarf2/arr-subrange.c (main): Use main_label as label name.\n\t* gdb.dwarf2/comp-unit-lang.c (func): Use func_label as label name.\n\t* gdb.dlang/circular.exp: Use MACRO_AT_func and MACRO_AT_range.\n\t* gdb.dwarf2/ada-linkage-name.exp: Same.\n\t* gdb.dwarf2/arr-subrange.exp: Same.\n\t* gdb.dwarf2/atomic-type.exp: Same.\n\t* gdb.dwarf2/comp-unit-lang.exp: Same.\n\t* gdb.dwarf2/cpp-linkage-name.exp: Same.\n\t* gdb.dwarf2/dw2-bad-mips-linkage-name.exp: Same.\n\t* gdb.dwarf2/dw2-lexical-block-bare.exp: Same.\n\t* gdb.dwarf2/dw2-regno-invalid.exp: Same.\n\t* gdb.dwarf2/implptr-64bit.exp: Same.\n\t* gdb.dwarf2/imported-unit-abstract-const-value.exp: Same.\n\t* gdb.dwarf2/imported-unit-runto-main.exp: Same.\n\t* gdb.dwarf2/imported-unit.exp: Same.\n\t* gdb.dwarf2/main-subprogram.exp: Same.\n\t* gdb.dwarf2/missing-type-name.exp: Same.\n\t* gdb.dwarf2/nonvar-access.exp: Same.\n\t* gdb.dwarf2/struct-with-sig.exp: Same.\n\t* gdb.dwarf2/typedef-void-finish.exp: Same.\n\t* gdb.dwarf2/void-type.exp: Same.",
    "tree": {
      "sha": "a8fb57a4c12b4079f5f5ac2b4772b520f40a0cf9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a8fb57a4c12b4079f5f5ac2b4772b520f40a0cf9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "10da644dc4882fd1e82913da94253fd540d91043",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10da644dc4882fd1e82913da94253fd540d91043",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/10da644dc4882fd1e82913da94253fd540d91043"
    }
  ],
  "stats": {
    "total": 262,
    "additions": 64,
    "deletions": 198
  },
  "files": [
    {
      "sha": "3e775d6498514355665aeb1eb797d23adffa195d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -1,3 +1,28 @@\n+2020-07-17  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.dlang/circular.c (found): Use found_label as label name.\n+\t* gdb.dwarf2/arr-subrange.c (main): Use main_label as label name.\n+\t* gdb.dwarf2/comp-unit-lang.c (func): Use func_label as label name.\n+\t* gdb.dlang/circular.exp: Use MACRO_AT_func and MACRO_AT_range.\n+\t* gdb.dwarf2/ada-linkage-name.exp: Same.\n+\t* gdb.dwarf2/arr-subrange.exp: Same.\n+\t* gdb.dwarf2/atomic-type.exp: Same.\n+\t* gdb.dwarf2/comp-unit-lang.exp: Same.\n+\t* gdb.dwarf2/cpp-linkage-name.exp: Same.\n+\t* gdb.dwarf2/dw2-bad-mips-linkage-name.exp: Same.\n+\t* gdb.dwarf2/dw2-lexical-block-bare.exp: Same.\n+\t* gdb.dwarf2/dw2-regno-invalid.exp: Same.\n+\t* gdb.dwarf2/implptr-64bit.exp: Same.\n+\t* gdb.dwarf2/imported-unit-abstract-const-value.exp: Same.\n+\t* gdb.dwarf2/imported-unit-runto-main.exp: Same.\n+\t* gdb.dwarf2/imported-unit.exp: Same.\n+\t* gdb.dwarf2/main-subprogram.exp: Same.\n+\t* gdb.dwarf2/missing-type-name.exp: Same.\n+\t* gdb.dwarf2/nonvar-access.exp: Same.\n+\t* gdb.dwarf2/struct-with-sig.exp: Same.\n+\t* gdb.dwarf2/typedef-void-finish.exp: Same.\n+\t* gdb.dwarf2/void-type.exp: Same.\n+\n 2020-07-17  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/dwarf.exp (Dwarf::MACRO_AT_func, Dwarf::MACRO_AT_range): Drop"
    },
    {
      "sha": "d2e55d1512c478ebec332aa9a8aac16c28645491",
      "filename": "gdb/testsuite/gdb.dlang/circular.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dlang/circular.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dlang/circular.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dlang/circular.c?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -13,17 +13,14 @@\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n-asm (\"circular1_found_start: .globl circular1_found_start\");\n-\n /* DWARF will describe this function as being inside a D module.  */\n \n void\n found (void)\n {\n+  asm (\"found_label: .globl found_label\");\n }\n \n-asm (\"circular1_found_end: .globl circular1_found_end\");\n-\n int\n main (void)\n {"
    },
    {
      "sha": "a34cc83099d2288db70e8191298e5a8ec2ff3d4e",
      "filename": "gdb/testsuite/gdb.dlang/circular.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dlang/circular.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dlang/circular.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dlang/circular.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -54,10 +54,8 @@ Dwarf::assemble $asm_file {\n \t\t}\n \n \t\tsubprogram {\n-\t\t    {name found}\n \t\t    {external 1 flag_present}\n-\t\t    {low_pc circular1_found_start addr}\n-\t\t    {high_pc circular1_found_end addr}\n+\t\t    {MACRO_AT_func {found}}\n \t\t}\n \t    }\n "
    },
    {
      "sha": "c10a592df744cf672656096f8081eb6cccc8692c",
      "filename": "gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 10,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/ada-linkage-name.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -31,12 +31,6 @@ set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     global srcdir subdir srcfile\n \n-    lassign [function_range first ${srcdir}/${subdir}/${srcfile}] \\\n-\tfirst_start first_length\n-\n-    lassign [function_range second ${srcdir}/${subdir}/${srcfile}] \\\n-\tsecond_start second_length\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n                 {DW_AT_language @DW_LANG_Ada95}\n@@ -55,16 +49,14 @@ Dwarf::assemble $asm_file {\n             DW_TAG_subprogram {\n                 {name system__namefirst}\n \t\t{linkage_name __gnat_namefirst}\n-                {low_pc $first_start addr}\n-                {high_pc \"$first_start + $first_length\" addr}\n+\t\t{MACRO_AT_range {first}}\n                 {type :$b_l}\n \t    }\n \t    # Here the linkage name comes first and the name second.\n             DW_TAG_subprogram {\n \t\t{linkage_name __gnat_namesecond}\n                 {name system__namesecond}\n-                {low_pc $second_start addr}\n-                {high_pc \"$second_start + $second_length\" addr}\n+                {MACRO_AT_range {second}}\n                 {type :$b_l}\n \t    }\n \t}"
    },
    {
      "sha": "9bfe1d627f24405f386d5c231dc6dcba6dd15905",
      "filename": "gdb/testsuite/gdb.dwarf2/arr-subrange.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/arr-subrange.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/arr-subrange.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/arr-subrange.c?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -16,5 +16,6 @@\n int\n main (void)\n {\n+  asm (\"main_label: .globl main_label\");\n   return 0;\n }"
    },
    {
      "sha": "4e355ff5c164c9aee9604cfeff9380fc20424309",
      "filename": "gdb/testsuite/gdb.dwarf2/arr-subrange.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/arr-subrange.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/arr-subrange.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/arr-subrange.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -29,8 +29,7 @@ Dwarf::assemble $asm_file {\n                 {DW_AT_language @DW_LANG_Ada95}\n                 {DW_AT_name     foo.adb}\n                 {DW_AT_comp_dir /tmp}\n-                {DW_AT_low_pc   0x1000 addr}\n-                {DW_AT_high_pc  0x2000 addr}\n+\t        {MACRO_AT_range {main}}\n             } {\n \t    declare_labels boolean_label typedef_label array_label enum_label\n "
    },
    {
      "sha": "9a44686f438df0784e47ef306cfdb618e8c959b5",
      "filename": "gdb/testsuite/gdb.dwarf2/atomic-type.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/atomic-type.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/atomic-type.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/atomic-type.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -25,12 +25,6 @@ standard_testfile atomic.c atomic-type-dw.S\n \n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    set f_result [function_range f ${srcdir}/${subdir}/${srcfile}]\n-    set f_start [lindex $f_result 0]\n-    set f_length [lindex $f_result 1]\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n                 {DW_AT_language @DW_LANG_C11}\n@@ -73,9 +67,7 @@ Dwarf::assemble $asm_file {\n             }\n \n             DW_TAG_subprogram {\n-                {name f}\n-                {low_pc $f_start addr}\n-                {high_pc \"$f_start + $f_length\" addr}\n+                {MACRO_AT_func {f}}\n                 {type :$i_l}\n             } {\n                 DW_TAG_formal_parameter {"
    },
    {
      "sha": "4bd33464d2d60f712e124fc3e77615a98cf57113",
      "filename": "gdb/testsuite/gdb.dwarf2/comp-unit-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/comp-unit-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/comp-unit-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/comp-unit-lang.c?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -17,15 +17,13 @@\n \n asm (\".section\t\\\".text\\\"\");\n asm (\".balign 8\");\n-asm (\"func_start: .globl func_start\");\n \n static void\n func (void)\n {\n+  asm (\"func_label: .globl func_label\");\n }\n \n-asm (\"func_end: .globl func_end\");\n-\n int\n main (void)\n {"
    },
    {
      "sha": "162848be941de95941878f310919d158ec559880",
      "filename": "gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/comp-unit-lang.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -45,14 +45,11 @@ proc do_test {cu_lang gdb_lang} {\n \t    compile_unit {\n \t\t{name file1.txt}\n \t\t{language @$cu_lang}\n-\t\t{low_pc func_start addr}\n-\t\t{high_pc func_end addr}\n+\t\t{MACRO_AT_range {func}}\n \t    } {\n \t\tsubprogram {\n \t\t    {external 1 flag}\n-\t\t    {name func}\n-\t\t    {low_pc func_start addr}\n-\t\t    {high_pc func_end addr}\n+\t\t    {MACRO_AT_func {func}}\n \t\t} {\n \t\t}\n \t    }"
    },
    {
      "sha": "7ff49380292b870b5c53262204f21323a88bedbb",
      "filename": "gdb/testsuite/gdb.dwarf2/cpp-linkage-name.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 8,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/cpp-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/cpp-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/cpp-linkage-name.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -30,11 +30,6 @@ standard_testfile cpp-linkage-name.c cpp-linkage-name-debug.S\n # Set up the DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    lassign [function_range main ${srcdir}/${subdir}/${srcfile}] \\\n-\tmain_start main_length\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t    {DW_AT_language @DW_LANG_C_plus_plus}\n@@ -70,9 +65,7 @@ Dwarf::assemble $asm_file {\n \t\t}\n \t    }\n \t    DW_TAG_subprogram {\n-\t\t{name \"main\"}\n-\t\t{low_pc $main_start addr}\n-\t\t{high_pc \"$main_start + $main_length\" addr}\n+\t\t{MACRO_AT_func {main}}\n \t\t{type :$a_l}\n \t    }\n \t    DW_TAG_variable {"
    },
    {
      "sha": "986de0c526dbfc543f6f234924237e2d0174c5bd",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-bad-mips-linkage-name.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 16,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/dw2-bad-mips-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/dw2-bad-mips-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-bad-mips-linkage-name.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -26,16 +26,6 @@ standard_testfile dw2-bad-mips-linkage-name.c dw2-bad-mips-linkage-name.S\n \n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    set f_result [function_range f ${srcdir}/${subdir}/${srcfile}]\n-    set f_start [lindex $f_result 0]\n-    set f_length [lindex $f_result 1]\n-\n-    set g_result [function_range g ${srcdir}/${subdir}/${srcfile}]\n-    set g_start [lindex $g_result 0]\n-    set g_length [lindex $g_result 1]\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n                 {DW_AT_language @DW_LANG_C_plus_plus}\n@@ -51,16 +41,12 @@ Dwarf::assemble $asm_file {\n \t\t{DW_AT_name      bool}\n \t    }\n             DW_TAG_subprogram {\n-                {name f}\n-                {low_pc $f_start addr}\n-                {high_pc \"$f_start + $f_length\" addr}\n+                {MACRO_AT_func {f}}\n                 {type :$b_l}\n \t\t{DW_AT_MIPS_linkage_name _Z1fv}\n \t    }\n             DW_TAG_subprogram {\n-                {name g}\n-                {low_pc $g_start addr}\n-                {high_pc \"$g_start + $g_length\" addr}\n+                {MACRO_AT_func {g}}\n                 {type :$b_l}\n \t\t{DW_AT_MIPS_linkage_name 42 DW_FORM_data1}\n \t    }"
    },
    {
      "sha": "161100d1fcdd831ed32525e4b51b63b65ffded01",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-lexical-block-bare.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 14,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/dw2-lexical-block-bare.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/dw2-lexical-block-bare.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-lexical-block-bare.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -19,21 +19,14 @@ if {![dwarf2_support]} {\n     return 0\n }\n \n-standard_testfile .S main.c\n+standard_testfile main.c .S\n \n # Make some DWARF for the test.\n-set asm_file [standard_output_file $srcfile]\n+set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile2\n-\n-    set main_result [function_range main ${srcdir}/${subdir}/${srcfile2}]\n-    set main_start [lindex $main_result 0]\n-    set main_length [lindex $main_result 1]\n-\n     cu {} {\n \tcompile_unit {\n-\t    {low_pc $main_start addr}\n-\t    {high_pc \"$main_start + $main_length\" addr}\n+\t    {MACRO_AT_range {main}}\n \t} {\n \t    declare_labels integer_label\n \n@@ -44,10 +37,8 @@ Dwarf::assemble $asm_file {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{name main}\n+\t\t{MACRO_AT_func {main}}\n \t\t{DW_AT_external 1 flag}\n-\t\t{low_pc $main_start addr}\n-\t\t{high_pc \"$main_start + $main_length\" addr}\n \t    } {\n \t\tDW_TAG_lexical_block {\n \t\t} {\n@@ -66,7 +57,7 @@ Dwarf::assemble $asm_file {\n }\n \n if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n-\t\t\t  [list $srcfile2 $asm_file] {nodebug}] } {\n+\t\t\t  [list $srcfile $asm_file] {nodebug}] } {\n     return -1\n }\n "
    },
    {
      "sha": "b8a67dbd4343ddf6981a76416fbeef88f2e8bce1",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-regno-invalid.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/dw2-regno-invalid.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/dw2-regno-invalid.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-regno-invalid.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -22,15 +22,14 @@ if {![dwarf2_support]} {\n     return 0\n }\n \n-standard_testfile .S main.c\n+standard_testfile main.c .S\n \n # Make some DWARF for the test.\n-set asm_file [standard_output_file $srcfile]\n+set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n     cu {} {\n \tcompile_unit {\n-\t    {low_pc [gdb_target_symbol main] DW_FORM_addr}\n-\t    {high_pc [gdb_target_symbol main]+0x10000 DW_FORM_addr}\n+\t    {MACRO_AT_range {main}}\n \t} {\n \t    declare_labels integer_label\n \n@@ -41,10 +40,8 @@ Dwarf::assemble $asm_file {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{name main}\n \t\t{DW_AT_external 1 flag}\n-\t\t{low_pc [gdb_target_symbol main] DW_FORM_addr}\n-\t\t{high_pc [gdb_target_symbol main]+0x10000 DW_FORM_addr}\n+\t\t{MACRO_AT_func {main}}\n \t    } {\n \t\tDW_TAG_variable {\n \t\t    {DW_AT_name bregx}\n@@ -60,7 +57,7 @@ Dwarf::assemble $asm_file {\n }\n \n if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n-\t\t\t  [list $srcfile2 $asm_file] {nodebug}] } {\n+\t\t\t  [list $srcfile $asm_file] {nodebug}] } {\n     return -1\n }\n "
    },
    {
      "sha": "a75d4436306448ecdf0cd5fd81cf658a62b644be",
      "filename": "gdb/testsuite/gdb.dwarf2/implptr-64bit.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/implptr-64bit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/implptr-64bit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/implptr-64bit.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -81,9 +81,7 @@ proc test { dwarf_version offset_size addr_size ref_addr_size two_cu } {\n \n \t\tif { !$two_cu } {\n \t\t    subprogram {\n-\t\t\t{ name main }\n-\t\t\t{ low_pc main addr }\n-\t\t\t{ high_pc \"main+0x100\" addr }\n+\t\t\t{MACRO_AT_func {main}}\n \t\t\t{ type :$int_label }\n \t\t\t{ external 1 flag }\n \t\t    } {\n@@ -111,9 +109,7 @@ proc test { dwarf_version offset_size addr_size ref_addr_size two_cu } {\n \t\t    { name 1.c }\n \t\t} {\n \t\t    subprogram {\n-\t\t\t{ name main }\n-\t\t\t{ low_pc main addr }\n-\t\t\t{ high_pc \"main+0x100\" addr }\n+\t\t\t{ MACRO_AT_func {main} }\n \t\t\t{ type %$int_label }\n \t\t\t{ external 1 flag }\n \t\t    } {"
    },
    {
      "sha": "363305170ec9883fec8ae45604fda06ac86b90a7",
      "filename": "gdb/testsuite/gdb.dwarf2/imported-unit-abstract-const-value.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 8,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/imported-unit-abstract-const-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/imported-unit-abstract-const-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/imported-unit-abstract-const-value.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -40,12 +40,6 @@ Dwarf::assemble $asm_file {\n     declare_labels aaa_label\n     set int_size [get_sizeof \"int\" 4]\n \n-    global srcdir subdir srcfile\n-\n-    set main_range [function_range main ${srcdir}/${subdir}/${srcfile}]\n-    set main_start [lindex $main_range 0]\n-    set main_length [lindex $main_range 1]\n-\n     cu {} {\n \tcu_label: partial_unit {\n \t    {language @DW_LANG_C}\n@@ -81,8 +75,7 @@ Dwarf::assemble $asm_file {\n \t    }\n \t    subprogram {\n \t\t{abstract_origin %$main_label}\n-\t\t{low_pc $main_start addr}\n-\t\t{high_pc \"$main_start + $main_length\" addr}\n+\t\t{MACRO_AT_range {main}}\n \t    }\n \t}\n     }"
    },
    {
      "sha": "a35c12e441d7acf417721d4d0e782368da13a26b",
      "filename": "gdb/testsuite/gdb.dwarf2/imported-unit-runto-main.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 8,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/imported-unit-runto-main.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/imported-unit-runto-main.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/imported-unit-runto-main.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -37,12 +37,6 @@ Dwarf::assemble $asm_file {\n     declare_labels aaa_label\n     set int_size [get_sizeof \"int\" 4]\n \n-    global srcdir subdir srcfile\n-\n-    set main_range [function_range main ${srcdir}/${subdir}/${srcfile}]\n-    set main_start [lindex $main_range 0]\n-    set main_length [lindex $main_range 1]\n-\n     cu {} {\n \tcu_label: partial_unit {\n \t    {language @DW_LANG_C}\n@@ -69,8 +63,7 @@ Dwarf::assemble $asm_file {\n \t} {\n \t    subprogram {\n \t\t{abstract_origin %$main_label}\n-\t\t{low_pc $main_start addr}\n-\t\t{high_pc \"$main_start + $main_length\" addr}\n+\t\t{MACRO_AT_range {main}}\n \t    }\n \t}\n     }"
    },
    {
      "sha": "0e65276a020dda0740416426bef944087d5e6f37",
      "filename": "gdb/testsuite/gdb.dwarf2/imported-unit.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 14,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/imported-unit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/imported-unit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/imported-unit.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -54,16 +54,6 @@ Dwarf::assemble $asm_file {\n     set int_size [get_sizeof \"int\" 4]\n     set addr_size [get_sizeof \"void *\" 8]\n \n-    global srcdir subdir srcfile\n-\n-    set main_range [function_range main ${srcdir}/${subdir}/${srcfile}]\n-    set main_start [lindex $main_range 0]\n-    set main_length [lindex $main_range 1]\n-\n-    set doit_range [function_range doit ${srcdir}/${subdir}/${srcfile}]\n-    set doit_start [lindex $doit_range 0]\n-    set doit_length [lindex $doit_range 1]\n-\n     cu {} {\n \tcompile_unit {\n \t    {language @DW_LANG_C_plus_plus}\n@@ -74,13 +64,11 @@ Dwarf::assemble $asm_file {\n \t    }\n \t    subprogram {\n \t\t{abstract_origin %$main_label}\n-\t\t{low_pc $main_start addr}\n-\t\t{high_pc \"$main_start + $main_length\" addr}\n+\t\t{MACRO_AT_range {main}}\n \t    } {\n \t\tsubprogram {\n \t\t    {abstract_origin %$doit_label}\n-\t\t    {low_pc $doit_start addr}\n-\t\t    {high_pc \"$doit_start + $doit_length\" addr}\n+\t\t    {MACRO_AT_range {doit}}\n \t\t} {\n \t\t    formal_parameter {\n \t\t\t{abstract_origin %$doit_self_label}"
    },
    {
      "sha": "b0924c8096df4dbf4f38559b1105de9eb3d75423",
      "filename": "gdb/testsuite/gdb.dwarf2/main-subprogram.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/main-subprogram.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/main-subprogram.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/main-subprogram.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -24,12 +24,6 @@ standard_testfile main-subprogram.c enum-type-dw.S\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    set range [function_range mymain ${srcdir}/${subdir}/${srcfile}]\n-    set mymain_start [lindex $range 0]\n-    set mymain_length [lindex $range 1]\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n                 {DW_AT_language @DW_LANG_C}\n@@ -45,9 +39,7 @@ Dwarf::assemble $asm_file {\n             }\n \n \t    DW_TAG_subprogram {\n-\t\t{name mymain}\n-\t\t{low_pc $mymain_start addr}\n-                {high_pc \"$mymain_start + $mymain_length\" addr}\n+\t\t{MACRO_AT_func {mymain}}\n \t\t{type :$type}\n \t\t{DW_AT_main_subprogram 1 flag}\n \t    } {"
    },
    {
      "sha": "920b67a7cb740ae3f20aecc95351e7357b3f5070",
      "filename": "gdb/testsuite/gdb.dwarf2/missing-type-name.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 16,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/missing-type-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/missing-type-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/missing-type-name.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -42,16 +42,6 @@ standard_testfile void-type.c void-type.S\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    set func_result [function_range func ${srcdir}/${subdir}/${srcfile}]\n-    set func_start [lindex $func_result 0]\n-    set func_length [lindex $func_result 1]\n-\n-    set main_result [function_range main ${srcdir}/${subdir}/${srcfile}]\n-    set main_start [lindex $main_result 0]\n-    set main_length [lindex $main_result 1]\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t        {DW_AT_producer \"GNU C 8.1\"}\n@@ -76,15 +66,11 @@ Dwarf::assemble $asm_file {\n \t    }\n \n             DW_TAG_subprogram {\n-                {name func}\n-                {low_pc $func_start addr}\n-                {high_pc \"$func_start + $func_length\" addr}\n+                {MACRO_AT_func func}\n                 {type :$int_type}\n \t    }\n             DW_TAG_subprogram {\n-                {name main}\n-                {low_pc $main_start addr}\n-                {high_pc \"$main_start + $main_length\" addr}\n+                {MACRO_AT_func main}\n                 {type :$main_type}\n \t    }\n "
    },
    {
      "sha": "93174657bbe4b0f3d388751c93d6bf138f8a673c",
      "filename": "gdb/testsuite/gdb.dwarf2/nonvar-access.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/nonvar-access.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/nonvar-access.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/nonvar-access.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -27,12 +27,6 @@ standard_testfile main.c nonvar-access-dw.S\n set asm_file [standard_output_file $srcfile2]\n \n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    set range [function_range main ${srcdir}/${subdir}/${srcfile}]\n-    set main_start [lindex $range 0]\n-    set main_length [lindex $range 1]\n-\n     cu {} {\n \tcompile_unit {\n \t    {DW_AT_name main.c}\n@@ -101,10 +95,8 @@ Dwarf::assemble $asm_file {\n \t    }\n \n \t    DW_TAG_subprogram {\n-\t\t{name main}\n+\t\t{MACRO_AT_func {main}}\n \t\t{DW_AT_external 1 flag}\n-\t\t{low_pc [gdb_target_symbol main] DW_FORM_addr}\n-\t\t{high_pc \"$main_start + $main_length\" DW_FORM_addr}\n \t    } {\n \t\t# Simple variable without location.\n \t\tDW_TAG_variable {"
    },
    {
      "sha": "c8be804e53b73013d95c05d00ad3a0752a0a8233",
      "filename": "gdb/testsuite/gdb.dwarf2/struct-with-sig.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 14,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/struct-with-sig.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/struct-with-sig.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/struct-with-sig.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -24,14 +24,6 @@ standard_testfile main-foo.c .S\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    lassign [function_range main ${srcdir}/${subdir}/${srcfile}] \\\n-\tmain_start main_length\n-\n-    lassign [function_range foo ${srcdir}/${subdir}/${srcfile}] \\\n-\tfoo_start foo_length\n-\n     cu {} {\n \tcompile_unit {\n \t    {DW_AT_language @DW_LANG_C}\n@@ -43,9 +35,7 @@ Dwarf::assemble $asm_file {\n \t\t{declaration 1 flag}\n \t    }\n \t    DW_TAG_subprogram {\n-\t\t{name \"main\"}\n-\t\t{low_pc $main_start addr}\n-\t\t{high_pc \"$main_start + $main_length\" addr}\n+\t\t{MACRO_AT_func {main}}\n \t    }\n \t}\n     }\n@@ -61,9 +51,7 @@ Dwarf::assemble $asm_file {\n \t\t{declaration 1 flag}\n \t    }\n \t    DW_TAG_subprogram {\n-\t\t{name \"foo\"}\n-\t\t{low_pc $foo_start addr}\n-\t\t{high_pc \"$foo_start + $foo_length\" addr}\n+\t\t{MACRO_AT_func {foo}}\n \t    }\n \t}\n     }"
    },
    {
      "sha": "e2b95adefe768f8aeb83ef88d6929fbf76d60b54",
      "filename": "gdb/testsuite/gdb.dwarf2/typedef-void-finish.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 16,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/typedef-void-finish.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/typedef-void-finish.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/typedef-void-finish.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -29,16 +29,6 @@ standard_testfile void-type.c typedef-void-finish.S\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    set func_result [function_range func ${srcdir}/${subdir}/${srcfile}]\n-    set func_start [lindex $func_result 0]\n-    set func_length [lindex $func_result 1]\n-\n-    set main_result [function_range main ${srcdir}/${subdir}/${srcfile}]\n-    set main_start [lindex $main_result 0]\n-    set main_length [lindex $main_result 1]\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t        {DW_AT_producer \"GNU C 8.1\"}\n@@ -58,15 +48,11 @@ Dwarf::assemble $asm_file {\n \t    }\n \n             DW_TAG_subprogram {\n-                {name func}\n-                {low_pc $func_start addr}\n-                {high_pc \"$func_start + $func_length\" addr}\n+                {MACRO_AT_func {func}}\n                 {type :$void_typedef}\n \t    }\n             DW_TAG_subprogram {\n-                {name main}\n-                {low_pc $main_start addr}\n-                {high_pc \"$main_start + $main_length\" addr}\n+                {MACRO_AT_func {main}}\n                 {type :$main_type}\n \t    }\n \t}"
    },
    {
      "sha": "4ae00c3d256828d13d3b94ccc888da80f33737f0",
      "filename": "gdb/testsuite/gdb.dwarf2/void-type.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 16,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/void-type.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90c3ec2d210a76e88e9fe7c62af9806650a5a9c0/gdb/testsuite/gdb.dwarf2/void-type.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/void-type.exp?ref=90c3ec2d210a76e88e9fe7c62af9806650a5a9c0",
      "patch": "@@ -36,16 +36,6 @@ standard_testfile void-type.c void-type.S\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile2]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile\n-\n-    set func_result [function_range func ${srcdir}/${subdir}/${srcfile}]\n-    set func_start [lindex $func_result 0]\n-    set func_length [lindex $func_result 1]\n-\n-    set main_result [function_range main ${srcdir}/${subdir}/${srcfile}]\n-    set main_start [lindex $main_result 0]\n-    set main_length [lindex $main_result 1]\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t        {DW_AT_producer \"Intel(R) C Intel(R) 64 Compiler XE for applications running on Intel(R) 64, Version 14.0.5.212 Build 20150212\"}\n@@ -72,15 +62,11 @@ Dwarf::assemble $asm_file {\n \t    }\n \n             DW_TAG_subprogram {\n-                {name func}\n-                {low_pc $func_start addr}\n-                {high_pc \"$func_start + $func_length\" addr}\n+\t\t{MACRO_AT_func {func}}\n                 {type :$void_type}\n \t    }\n             DW_TAG_subprogram {\n-                {name main}\n-                {low_pc $main_start addr}\n-                {high_pc \"$main_start + $main_length\" addr}\n+\t\t{MACRO_AT_func {main}}\n                 {type :$int_type}\n \t    }\n "
    }
  ]
}