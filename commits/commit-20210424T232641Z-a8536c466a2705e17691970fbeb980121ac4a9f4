{
  "sha": "a8536c466a2705e17691970fbeb980121ac4a9f4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTg1MzZjNDY2YTI3MDVlMTc2OTE5NzBmYmViOTgwMTIxYWM0YTlmNA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-24T23:26:05Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-04-24T23:26:41Z"
    },
    "message": "gdbsupport: add observer_debug_printf, OBSERVER_SCOPED_DEBUG_ENTER_EXIT\n\nSwitch observer to use the \"new\" debug printf mechanism and sprinkle a\nfew debug prints.  Here's a small example of the output with \"infrun\"\nand \"observer\" debug output enabled:\n\n    [infrun] proceed: enter\n      [observer] notify: start: observable target_resumed notify() called\n        [observer] notify: start: calling observer mi-interp of observable target_resumed\n        [observer] notify: end: calling observer mi-interp of observable target_resumed\n        [observer] notify: start: calling observer py-inferior of observable target_resumed\n        [observer] notify: end: calling observer py-inferior of observable target_resumed\n      [observer] notify: end: observable target_resumed notify() called\n      ...\n\ngdbsupport/ChangeLog:\n\n\t* observable.h (observer_debug_printf,\n\tOBSERVER_SCOPED_DEBUG_START_END): New.\n\t(class observable) <notify, attach>: Use them.\n\nChange-Id: If3ae4b6b65450ca3b7cae56698a87fc526688b86",
    "tree": {
      "sha": "32b346af7d60bb7ca410e1bf7576681675af5bb2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/32b346af7d60bb7ca410e1bf7576681675af5bb2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8536c466a2705e17691970fbeb980121ac4a9f4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8536c466a2705e17691970fbeb980121ac4a9f4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8536c466a2705e17691970fbeb980121ac4a9f4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8536c466a2705e17691970fbeb980121ac4a9f4/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0df0cce7c63c064e086deda7384a7dd82fefe228",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0df0cce7c63c064e086deda7384a7dd82fefe228",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0df0cce7c63c064e086deda7384a7dd82fefe228"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 32,
    "deletions": 4
  },
  "files": [
    {
      "sha": "2734731328bf1cec1a95da1847ab50f1096a9316",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8536c466a2705e17691970fbeb980121ac4a9f4/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8536c466a2705e17691970fbeb980121ac4a9f4/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=a8536c466a2705e17691970fbeb980121ac4a9f4",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-24  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* observable.h (observer_debug_printf,\n+\tOBSERVER_SCOPED_DEBUG_START_END): New.\n+\t(class observable) <notify, attach>: Use them.\n+\n 2021-04-24  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* common-debug.h (struct scoped_debug_start_end)"
    },
    {
      "sha": "4ba47bb988f45b0087231ca0505a422ed3a882f4",
      "filename": "gdbsupport/observable.h",
      "status": "modified",
      "additions": 26,
      "deletions": 4,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8536c466a2705e17691970fbeb980121ac4a9f4/gdbsupport/observable.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8536c466a2705e17691970fbeb980121ac4a9f4/gdbsupport/observable.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/observable.h?ref=a8536c466a2705e17691970fbeb980121ac4a9f4",
      "patch": "@@ -24,6 +24,16 @@\n #include <functional>\n #include <vector>\n \n+/* Print an \"observer\" debug statement.  */\n+\n+#define observer_debug_printf(fmt, ...) \\\n+  debug_prefixed_printf_cond (observer_debug, \"observer\", fmt, ##__VA_ARGS__)\n+\n+/* Print \"observer\" start/end debug statements.  */\n+\n+#define OBSERVER_SCOPED_DEBUG_START_END(fmt, ...) \\\n+  scoped_debug_start_end (observer_debug, \"observer\", fmt, ##__VA_ARGS__)\n+\n namespace gdb\n {\n \n@@ -85,6 +95,9 @@ class observable\n      lifetime must be at least as long as the observer is attached.  */\n   void attach (const func_type &f, const char *name)\n   {\n+    observer_debug_printf (\"Attaching observable %s to observer %s\",\n+\t\t\t   name, m_name);\n+\n     m_observers.emplace_back (nullptr, f, name);\n   }\n \n@@ -95,6 +108,9 @@ class observable\n      lifetime must be at least as long as the observer is attached.  */\n   void attach (const func_type &f, const token &t, const char *name)\n   {\n+    observer_debug_printf (\"Attaching observable %s to observer %s\",\n+\t\t\t   name, m_name);\n+\n     m_observers.emplace_back (&t, f, name);\n   }\n \n@@ -110,17 +126,23 @@ class observable\n \t\t\t\t  return o.token == &t;\n \t\t\t\t});\n \n+    observer_debug_printf (\"Detaching observable %s from observer %s\",\n+\t\t\t   iter->name, m_name);\n+\n     m_observers.erase (iter, m_observers.end ());\n   }\n \n   /* Notify all observers that are attached to this observable.  */\n   void notify (T... args) const\n   {\n-    if (observer_debug)\n-      fprintf_unfiltered (gdb_stdlog, \"observable %s notify() called\\n\",\n-\t\t\t  m_name);\n+    OBSERVER_SCOPED_DEBUG_START_END (\"observable %s notify() called\", m_name);\n+\n     for (auto &&e : m_observers)\n-      e.func (args...);\n+      {\n+\tOBSERVER_SCOPED_DEBUG_START_END (\"calling observer %s of observable %s\",\n+\t\t\t\t\t e.name, m_name);\n+\te.func (args...);\n+      }\n   }\n \n private:"
    }
  ]
}