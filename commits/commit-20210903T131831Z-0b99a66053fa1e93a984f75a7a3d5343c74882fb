{
  "sha": "0b99a66053fa1e93a984f75a7a3d5343c74882fb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGI5OWE2NjA1M2ZhMWU5M2E5ODRmNzVhN2EzZDUzNDNjNzQ4ODJmYg==",
  "commit": {
    "author": {
      "name": "Felix Willgerodt",
      "email": "felix.willgerodt@intel.com",
      "date": "2021-07-09T13:39:41Z"
    },
    "committer": {
      "name": "Felix Willgerodt",
      "email": "felix.willgerodt@intel.com",
      "date": "2021-09-03T13:18:31Z"
    },
    "message": "gdb: Enable finish command and inferior calls for _Float16 on amd64 and i386.\n\nValues of type _Float16 and _Float16 _Complex can now be used on CPUs with\nAVX512-FP16 support. Return values of those types are located in XMM0.\nCompiler support for gcc and clang is in progress, see e.g.:\nhttps://gcc.gnu.org/pipermail/gcc-patches/2021-July/574117.html\n\ngdb/ChangeLog:\n2021-07-21  Felix Willgerodt  <Felix.Willgerodt@intel.com>\n\n\t* amd64-tdep.c (amd64_classify): Classify _Float16 and\n\t_Float16 _Complex as AMD64_SSE.\n\t* i386-tdep.c (i386_extract_return_value): Read _Float16 and\n\t_Float16 _Complex from xmm0.\n\ngdb/testsuite/ChangeLog:\n2021-07-21  Felix Willgerodt  <Felix.Willgerodt@intel.com>\n\n\t* gdb.arch/x86-avx512fp16-abi.c: New file.\n\t* gdb.arch/x86-avx512fp16-abi.exp: New file.",
    "tree": {
      "sha": "733a5a9872601efd6f30ca10ca26f37b9db5a97a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/733a5a9872601efd6f30ca10ca26f37b9db5a97a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0b99a66053fa1e93a984f75a7a3d5343c74882fb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b99a66053fa1e93a984f75a7a3d5343c74882fb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0b99a66053fa1e93a984f75a7a3d5343c74882fb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b99a66053fa1e93a984f75a7a3d5343c74882fb/comments",
  "author": {
    "login": "felix-willgerodt",
    "id": 68062808,
    "node_id": "MDQ6VXNlcjY4MDYyODA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felix-willgerodt",
    "html_url": "https://github.com/felix-willgerodt",
    "followers_url": "https://api.github.com/users/felix-willgerodt/followers",
    "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}",
    "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions",
    "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs",
    "repos_url": "https://api.github.com/users/felix-willgerodt/repos",
    "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "felix-willgerodt",
    "id": 68062808,
    "node_id": "MDQ6VXNlcjY4MDYyODA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felix-willgerodt",
    "html_url": "https://github.com/felix-willgerodt",
    "followers_url": "https://api.github.com/users/felix-willgerodt/followers",
    "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}",
    "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions",
    "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs",
    "repos_url": "https://api.github.com/users/felix-willgerodt/repos",
    "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8661f70c499e9a6f2d8b12241d663881452178ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8661f70c499e9a6f2d8b12241d663881452178ae",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8661f70c499e9a6f2d8b12241d663881452178ae"
    }
  ],
  "stats": {
    "total": 122,
    "additions": 115,
    "deletions": 7
  },
  "files": [
    {
      "sha": "129f07e598dcacef54d27d1c7de49be5eb04e75b",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=0b99a66053fa1e93a984f75a7a3d5343c74882fb",
      "patch": "@@ -728,10 +728,10 @@ amd64_classify (struct type *type, enum amd64_reg_class theclass[2])\n       && (len == 1 || len == 2 || len == 4 || len == 8))\n     theclass[0] = AMD64_INTEGER;\n \n-  /* Arguments of types float, double, _Decimal32, _Decimal64 and __m64\n-     are in class SSE.  */\n+  /* Arguments of types _Float16, float, double, _Decimal32, _Decimal64 and\n+     __m64 are in class SSE.  */\n   else if ((code == TYPE_CODE_FLT || code == TYPE_CODE_DECFLOAT)\n-\t   && (len == 4 || len == 8))\n+\t   && (len == 2 || len == 4 || len == 8))\n     /* FIXME: __m64 .  */\n     theclass[0] = AMD64_SSE;\n \n@@ -749,16 +749,16 @@ amd64_classify (struct type *type, enum amd64_reg_class theclass[2])\n     /* Class X87 and X87UP.  */\n     theclass[0] = AMD64_X87, theclass[1] = AMD64_X87UP;\n \n-  /* Arguments of complex T where T is one of the types float or\n-     double get treated as if they are implemented as:\n+  /* Arguments of complex T - where T is one of the types _Float16, float or\n+     double - get treated as if they are implemented as:\n \n      struct complexT {\n        T real;\n        T imag;\n      };\n \n   */\n-  else if (code == TYPE_CODE_COMPLEX && len == 8)\n+  else if (code == TYPE_CODE_COMPLEX && (len == 8 || len == 4))\n     theclass[0] = AMD64_SSE;\n   else if (code == TYPE_CODE_COMPLEX && len == 16)\n     theclass[0] = theclass[1] = AMD64_SSE;"
    },
    {
      "sha": "a9c42928195488ffb713599e5ac3b021977c3237",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=0b99a66053fa1e93a984f75a7a3d5343c74882fb",
      "patch": "@@ -2818,7 +2818,14 @@ i386_extract_return_value (struct gdbarch *gdbarch, struct type *type,\n   int len = TYPE_LENGTH (type);\n   gdb_byte buf[I386_MAX_REGISTER_SIZE];\n \n-  if (type->code () == TYPE_CODE_FLT)\n+  /* _Float16 and _Float16 _Complex values are returned via xmm0.  */\n+  if (((type->code () == TYPE_CODE_FLT) && len == 2)\n+      || ((type->code () == TYPE_CODE_COMPLEX) && len == 4))\n+    {\n+\tregcache->raw_read (I387_XMM0_REGNUM (tdep), valbuf);\n+\treturn;\n+    }\n+  else if (type->code () == TYPE_CODE_FLT)\n     {\n       if (tdep->st0_regnum < 0)\n \t{"
    },
    {
      "sha": "9192ebfdbacd176923381137c7fe2824825b267e",
      "filename": "gdb/testsuite/gdb.arch/x86-avx512fp16-abi.c",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/testsuite/gdb.arch/x86-avx512fp16-abi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/testsuite/gdb.arch/x86-avx512fp16-abi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/x86-avx512fp16-abi.c?ref=0b99a66053fa1e93a984f75a7a3d5343c74882fb",
      "patch": "@@ -0,0 +1,38 @@\n+/* Test program for _Float16 parameters and return values.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+#include <complex.h>\n+\n+_Float16\n+square (_Float16 num) {\n+  return num * num; /* BP1.  */\n+}\n+\n+_Float16 _Complex\n+plus (_Float16 _Complex num) {\n+  return num + (2.5 + 0.5I); /* BP2.  */\n+}\n+\n+int\n+main ()\n+{\n+  _Float16 a = square (1.25);\n+  _Float16 _Complex b = 6.25 + I;\n+  _Float16 _Complex ret = plus (b); /* BP3.  */\n+  return 0;\n+}"
    },
    {
      "sha": "61cd189a3ddcc2c94dad682325bca5dd9b929541",
      "filename": "gdb/testsuite/gdb.arch/x86-avx512fp16-abi.exp",
      "status": "added",
      "additions": 63,
      "deletions": 0,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/testsuite/gdb.arch/x86-avx512fp16-abi.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b99a66053fa1e93a984f75a7a3d5343c74882fb/gdb/testsuite/gdb.arch/x86-avx512fp16-abi.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/x86-avx512fp16-abi.exp?ref=0b99a66053fa1e93a984f75a7a3d5343c74882fb",
      "patch": "@@ -0,0 +1,63 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test support for _Float16 parameters and return values.\n+\n+if { [skip_avx512fp16_tests] } {\n+    unsupported \"target does not support AVX512fp16\"\n+    return -1\n+}\n+\n+standard_testfile\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile} \\\n+     {debug additional_flags=\"-mavx512fp16\"}] } {\n+    return -1\n+}\n+\n+if { ![runto_main] } {\n+    unsupported \"could not run to main\"\n+    return -1\n+}\n+\n+gdb_test \"p square(2.2)\" \"= 4\\\\.8359\"\n+\n+set line1 [gdb_get_line_number \"BP1\"]\n+set line2 [gdb_get_line_number \"BP2\"]\n+set line3 [gdb_get_line_number \"BP3\"]\n+gdb_breakpoint $line1\n+gdb_breakpoint $line3\n+\n+gdb_continue_to_breakpoint \"line1\" \".*$srcfile:$line1.*\"\n+\n+with_test_prefix \"real\" {\n+    gdb_test \"p num\" \"= 1\\\\.25\"\n+    gdb_test \"ptype num\" \"type = _Float16\"\n+    gdb_test \"finish\" \"Value returned is.*= 1\\\\.5625\"\n+}\n+\n+gdb_continue_to_breakpoint \"line3\" \".*$srcfile:$line3.*\"\n+gdb_test \"p plus(b)\" \"= 8\\\\.75 \\\\+ 1\\\\.5i\"\n+\n+gdb_breakpoint $line2\n+gdb_continue_to_breakpoint \"line2\" \".*$srcfile:$line2.*\"\n+\n+with_test_prefix \"complex\" {\n+    gdb_test \"p num\" \"= 6\\\\.25 \\\\+ 1i\"\n+    gdb_test \"ptype num\" \"type = complex _Float16\"\n+    gdb_test \"finish\" \"Value returned is.*= 8\\\\.75 \\\\+ 1\\\\.5i\"\n+}\n+\n+gdb_continue_to_end"
    }
  ]
}