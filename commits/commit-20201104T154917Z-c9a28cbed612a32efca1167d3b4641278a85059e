{
  "sha": "c9a28cbed612a32efca1167d3b4641278a85059e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzlhMjhjYmVkNjEyYTMyZWZjYTExNjdkM2I0NjQxMjc4YTg1MDU5ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:17Z"
    },
    "message": "Reject slicing a packed array\n\nIn Ada mode, gdb rejects slicing a packed array.  However, with\n-fgnat-encodings=minimal, gdb will instead print incorrect results.\nThis patch changes gdb to also reject slicing a packed array in this\nmode.\n\nFWIW I believe that this rejection is a gdb limitation.  Removing it\nlooked complicated, though, and meanwhile my main goal for the time\nbeing is to bring the DWARF encodings up to par with Gnat encodings.\n\ngdb/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_is_any_packed_array_type): New function.\n\t(ada_evaluate_subexp) <case TERNOP_SLICE>: Use it.\n\ngdb/testsuite/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/mod_from_name.exp: Test printing slice.",
    "tree": {
      "sha": "11f0a148742b08aaea32656df77f8e985171e1ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/11f0a148742b08aaea32656df77f8e985171e1ec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c9a28cbed612a32efca1167d3b4641278a85059e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9a28cbed612a32efca1167d3b4641278a85059e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c9a28cbed612a32efca1167d3b4641278a85059e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9a28cbed612a32efca1167d3b4641278a85059e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "575673752cade1772f4a6ba2e38306e5ac9a91f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/575673752cade1772f4a6ba2e38306e5ac9a91f6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/575673752cade1772f4a6ba2e38306e5ac9a91f6"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 22,
    "deletions": 1
  },
  "files": [
    {
      "sha": "1b473d55867a0353d7fe09c66269d2bbbb563d36",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c9a28cbed612a32efca1167d3b4641278a85059e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_is_any_packed_array_type): New function.\n+\t(ada_evaluate_subexp) <case TERNOP_SLICE>: Use it.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/read.c (recognize_bound_expression)"
    },
    {
      "sha": "bfb46a538b96987187797eb5aee7175e9b06167c",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=c9a28cbed612a32efca1167d3b4641278a85059e",
      "patch": "@@ -2012,6 +2012,17 @@ ada_is_unconstrained_packed_array_type (struct type *type)\n   return 0;\n }\n \n+/* Return true if TYPE is a (Gnat-encoded) constrained packed array\n+   type, or if it is an ordinary (non-Gnat-encoded) packed array.  */\n+\n+static bool\n+ada_is_any_packed_array_type (struct type *type)\n+{\n+  return (ada_is_constrained_packed_array_type (type)\n+\t  || (type->code () == TYPE_CODE_ARRAY\n+\t      && TYPE_FIELD_BITSIZE (type, 0) % 8 != 0));\n+}\n+\n /* Given that TYPE encodes a packed array type (constrained or unconstrained),\n    return the size of its elements in bits.  */\n \n@@ -10609,7 +10620,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n \t  TYPE_TARGET_TYPE (value_type (array)) =\n \t    ada_aligned_type (TYPE_TARGET_TYPE (value_type (array)));\n \n-\tif (ada_is_constrained_packed_array_type (value_type (array)))\n+\tif (ada_is_any_packed_array_type (value_type (array)))\n \t  error (_(\"cannot slice a packed array\"));\n \n \t/* If this is a reference to an array or an array lvalue,"
    },
    {
      "sha": "386b58e802061f57a18dbbdceb015b4d0197f076",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c9a28cbed612a32efca1167d3b4641278a85059e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/mod_from_name.exp: Test printing slice.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/O2_float_param.exp: Test different -fgnat-encodings"
    },
    {
      "sha": "43d81e0026f9df630a4dd1570ff64cda9bd1f42d",
      "filename": "gdb/testsuite/gdb.ada/mod_from_name.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/testsuite/gdb.ada/mod_from_name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c9a28cbed612a32efca1167d3b4641278a85059e/gdb/testsuite/gdb.ada/mod_from_name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/mod_from_name.exp?ref=c9a28cbed612a32efca1167d3b4641278a85059e",
      "patch": "@@ -40,4 +40,5 @@ foreach_with_prefix scenario {all minimal} {\n     }\n     gdb_test \"print xp\" \\\n \t\"= \\\\(y => \\\\(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10\\\\)\\\\)\"\n+    gdb_test \"print slice\" \"cannot slice a packed array\"\n }"
    }
  ]
}