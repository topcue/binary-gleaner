{
  "sha": "5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWU1ZDY2YjZhNDZjN2IwMzUzMzA4YmZiNTA4Yjk2YTU5ZjFhZGRiZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-03-02T18:08:49Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-03-03T18:20:18Z"
    },
    "message": "gdb/fortran: Fix printing of logical true values for Flang\n\nGDB is not able to print logical true values for Flang compiler.\n\nActual result:\n\n  (gdb) p l\n  $1 = 4294967295\n\nExpected result:\n\n  (gdb) p l\n  $1 = .TRUE.\n\nThis is due to GDB expecting representation of true value being 1.\nThe Fortran standard doesnt specify how LOGICAL types are represented.\nDifferent compilers use different non-zero values to represent logical\ntrue. The gfortran compiler uses 1 to represent logical true and the\nflang compiler uses -1. GDB should accept all the non-zero values as\ntrue.\n\nThis is achieved by handling TYPE_CODE_BOOL in f_val_print and\nprinting any non-zero value as true.\n\ngdb/ChangeLog:\n\n\t* f-valprint.c (f_val_print): Handle TYPE_CODE_BOOL, any non-zero\n\tvalue should be printed as true.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/logical.exp: Add tests that any non-zero value is\n\tprinted as true.",
    "tree": {
      "sha": "6f253eff4c7af4858fcf1bc0f2955a0b6f30f042",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6f253eff4c7af4858fcf1bc0f2955a0b6f30f042"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "584cf46d0ab5960cca76bfaf414cee5641166868",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/584cf46d0ab5960cca76bfaf414cee5641166868",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/584cf46d0ab5960cca76bfaf414cee5641166868"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 53,
    "deletions": 1
  },
  "files": [
    {
      "sha": "2ab26d2ead904d7f1961637afeb71b704d3a62e2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\t    Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>\n+\n+\t* f-valprint.c (f_val_print): Handle TYPE_CODE_BOOL, any non-zero\n+\tvalue should be printed as true.\n+\n 2020-03-03  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* windows-tdep.c (windows_solib_create_inferior_hook): New function."
    },
    {
      "sha": "0393ddfa8ab3f051b63377d64bc4939e714f5de0",
      "filename": "gdb/f-valprint.c",
      "status": "modified",
      "additions": 24,
      "deletions": 1,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/f-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/f-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-valprint.c?ref=5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
      "patch": "@@ -357,6 +357,30 @@ f_val_print (struct type *type, int embedded_offset,\n       fprintf_filtered (stream, \" )\");\n       break;     \n \n+    case TYPE_CODE_BOOL:\n+      if (options->format || options->output_format)\n+\t{\n+\t  struct value_print_options opts = *options;\n+\t  opts.format = (options->format ? options->format\n+\t\t\t : options->output_format);\n+\t  val_print_scalar_formatted (type, embedded_offset,\n+\t\t\t\t      original_value, &opts, 0, stream);\n+\t}\n+      else\n+\t{\n+\t  int unit_size = gdbarch_addressable_memory_unit_size (gdbarch);\n+\t  LONGEST val\n+\t    = unpack_long (type, valaddr + embedded_offset * unit_size);\n+\t  /* The Fortran standard doesn't specify how logical types are\n+\t     represented.  Different compilers use different non zero\n+\t     values to represent logical true.  */\n+\t  if (val == 0)\n+\t    fputs_filtered (f_decorations.false_name, stream);\n+\t  else\n+\t    fputs_filtered (f_decorations.true_name, stream);\n+\t}\n+      break;\n+\n     case TYPE_CODE_REF:\n     case TYPE_CODE_FUNC:\n     case TYPE_CODE_FLAGS:\n@@ -366,7 +390,6 @@ f_val_print (struct type *type, int embedded_offset,\n     case TYPE_CODE_RANGE:\n     case TYPE_CODE_UNDEF:\n     case TYPE_CODE_COMPLEX:\n-    case TYPE_CODE_BOOL:\n     case TYPE_CODE_CHAR:\n     default:\n       generic_val_print (type, embedded_offset, address,"
    },
    {
      "sha": "3912a1c6091945483c06f05a08c596a829c7201d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/logical.exp: Add tests that any non-zero value is\n+\tprinted as true.\n+\n 2020-03-03  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* gdb.base/printcmds.exp: Add test to verify printf of a"
    },
    {
      "sha": "96e6f8f9559c543168fc95287c2c41f6cb512ea8",
      "filename": "gdb/testsuite/gdb.fortran/logical.exp",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/testsuite/gdb.fortran/logical.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5e5d66b6a46c7b0353308bfb508b96a59f1addbf/gdb/testsuite/gdb.fortran/logical.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/logical.exp?ref=5e5d66b6a46c7b0353308bfb508b96a59f1addbf",
      "patch": "@@ -33,3 +33,21 @@ gdb_test \"p l1\" \" = \\\\.TRUE\\\\.\"\n gdb_test \"p l2\" \" = \\\\.TRUE\\\\.\"\n gdb_test \"p l4\" \" = \\\\.TRUE\\\\.\"\n gdb_test \"p l8\" \" = \\\\.TRUE\\\\.\"\n+\n+# Different Fortran compilers use different values for logical true.\n+# Check how GDB handles this by modifying the underlying value for our\n+# logical variables and check they still print as true.\n+foreach_with_prefix var { l l1 l2 l4 l8 } {\n+    set len [get_integer_valueof \"sizeof (${var})\" \"get sizeof ${var}\"]\n+    set addr [get_hexadecimal_valueof \"&l\" \"get address of ${var}\"]\n+\n+    for { set i 0 } { $i < $len } { incr i } {\n+\twith_test_prefix \"byte $i\" {\n+\t    gdb_test_no_output \"set *((uint8_t *) ${addr}) = 0xff\" \\\n+\t\t\"set contents of byte at offset $i\"\n+\t    gdb_test \"p l\" \" = \\\\.TRUE\\\\.\"\n+\t    incr addr\n+\t    set addr [format \"0x%x\" $addr]\n+\t}\n+    }\n+}"
    }
  ]
}