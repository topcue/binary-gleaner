{
  "sha": "402d2bfec425f29c5b54089d5ff98ca9a1b8ec27",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDAyZDJiZmVjNDI1ZjI5YzViNTQwODlkNWZmOThjYTlhMWI4ZWMyNw==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-02-12T21:56:16Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-02-12T21:56:16Z"
    },
    "message": "Look for separate debug files in debug directories under a sysroot.\n\nWhen an object file is present in a system root, GDB currently looks\nfor separate debug files under the global debugfile directories.  For\nexample, if the sysroot is set to \"/myroot\" and hte global debugfile\ndirectory is set to \"/usr/lib/debug\", GDB will look for a separate\ndebug file for \"/myroot/lib/libc.so.7\" in the following paths:\n\n  /myroot/lib/libc.so.7.debug\n  /myroot/lib/.debug/libc.so.7.debug\n  /usr/lib/debug//myroot/lib/libc.so.7.debug\n  /usr/lib/debug/lib/libc.so.7.debug\n\nHowever, some system roots include a full system installation\nincluding a nested global debugfile directory under the sysroot.  This\npatch adds an additional check to support such systems.  In the\nexample above the additional path searched is:\n\n  /myroot/usr/lib/debug/lib/libc.so.7.debug\n\nTo try to preserve existing behavior as much as possible, this new\npath is searched last for each global debugfile directory.\n\ngdb/ChangeLog:\n\n\t* symfile.c (find_separate_debug_file): Look for separate debug\n\tfiles in debug directories under the sysroot.",
    "tree": {
      "sha": "4d51d950b2584e326035384f3f8e53b268a52810",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4d51d950b2584e326035384f3f8e53b268a52810"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1ed9f74e85b7ace7debad5ade4775684a1fa99f9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ed9f74e85b7ace7debad5ade4775684a1fa99f9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1ed9f74e85b7ace7debad5ade4775684a1fa99f9"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 20,
    "deletions": 2
  },
  "files": [
    {
      "sha": "e4f74cdc3e862959dff9b5b2e39b2f5fdb488044",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=402d2bfec425f29c5b54089d5ff98ca9a1b8ec27",
      "patch": "@@ -1,3 +1,8 @@\n+2019-02-12  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* symfile.c (find_separate_debug_file): Look for separate debug\n+\tfiles in debug directories under the sysroot.\n+\n 2019-02-12  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* symtab.h (struct minimal_symbol data_p): New const method."
    },
    {
      "sha": "b5802e20adc5f1a8a640af0058132f09bae1ce87",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/402d2bfec425f29c5b54089d5ff98ca9a1b8ec27/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=402d2bfec425f29c5b54089d5ff98ca9a1b8ec27",
      "patch": "@@ -1452,22 +1452,35 @@ find_separate_debug_file (const char *dir,\n       if (separate_debug_file_exists (debugfile, crc32, objfile))\n \treturn debugfile;\n \n-      /* If the file is in the sysroot, try using its base path in the\n-\t global debugfile directory.  */\n       if (canon_dir != NULL\n \t  && filename_ncmp (canon_dir, gdb_sysroot,\n \t\t\t    strlen (gdb_sysroot)) == 0\n \t  && IS_DIR_SEPARATOR (canon_dir[strlen (gdb_sysroot)]))\n \t{\n+\t  /* If the file is in the sysroot, try using its base path in\n+\t     the global debugfile directory.  */\n \t  debugfile = target_prefix ? \"target:\" : \"\";\n \t  debugfile += debugdir.get ();\n \t  debugfile += (canon_dir + strlen (gdb_sysroot));\n \t  debugfile += \"/\";\n \t  debugfile += debuglink;\n \n+\t  if (separate_debug_file_exists (debugfile, crc32, objfile))\n+\t    return debugfile;\n+\n+\t  /* If the file is in the sysroot, try using its base path in\n+\t     the sysroot's global debugfile directory.  */\n+\t  debugfile = target_prefix ? \"target:\" : \"\";\n+\t  debugfile += gdb_sysroot;\n+\t  debugfile += debugdir.get ();\n+\t  debugfile += (canon_dir + strlen (gdb_sysroot));\n+\t  debugfile += \"/\";\n+\t  debugfile += debuglink;\n+\n \t  if (separate_debug_file_exists (debugfile, crc32, objfile))\n \t    return debugfile;\n \t}\n+\n     }\n \n   return std::string ();"
    }
  ]
}