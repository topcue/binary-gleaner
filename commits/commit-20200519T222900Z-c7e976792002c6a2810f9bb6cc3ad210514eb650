{
  "sha": "c7e976792002c6a2810f9bb6cc3ad210514eb650",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzdlOTc2NzkyMDAyYzZhMjgxMGY5YmI2Y2MzYWQyMTA1MTRlYjY1MA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-19T22:29:00Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-19T22:29:00Z"
    },
    "message": "Use bfd_get_filename throughout gdb\n\nThis patch makes gdb use the inline accessor for all bfd->filename\nread accesses.\n\n\t* coff-pe-read.c (read_pe_exported_syms): Use bfd_get_filename\n\trather than accessing bfd->filename directly.\n\t* dtrace-probe.c (dtrace_static_probe_ops::get_probes): Likewise,\n\tand use bfd_section_name.\n\t* dwarf2/frame.c (decode_frame_entry): Likewise.\n\t* exec.c (exec_set_section_address): Likewise.\n\t* solib-aix.c (solib_aix_bfd_open): Likewise.\n\t* stap-probe.c (get_stap_base_address): Likewise.\n\t* symfile.c (reread_symbols): Likewise.",
    "tree": {
      "sha": "edda6f42af6427ed4643c40ba52cd62d17a867ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/edda6f42af6427ed4643c40ba52cd62d17a867ee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7e976792002c6a2810f9bb6cc3ad210514eb650",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7e976792002c6a2810f9bb6cc3ad210514eb650",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7e976792002c6a2810f9bb6cc3ad210514eb650",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7e976792002c6a2810f9bb6cc3ad210514eb650/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "76571211fe65c4942f3ce4e04115a0396cd2522c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76571211fe65c4942f3ce4e04115a0396cd2522c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/76571211fe65c4942f3ce4e04115a0396cd2522c"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 25,
    "deletions": 12
  },
  "files": [
    {
      "sha": "9799e1ed4a97c7aefadf2a18770238fcd36bc44b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -1,3 +1,15 @@\n+2020-05-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff-pe-read.c (read_pe_exported_syms): Use bfd_get_filename\n+\trather than accessing bfd->filename directly.\n+\t* dtrace-probe.c (dtrace_static_probe_ops::get_probes): Likewise,\n+\tand use bfd_section_name.\n+\t* dwarf2/frame.c (decode_frame_entry): Likewise.\n+\t* exec.c (exec_set_section_address): Likewise.\n+\t* solib-aix.c (solib_aix_bfd_open): Likewise.\n+\t* stap-probe.c (get_stap_base_address): Likewise.\n+\t* symfile.c (reread_symbols): Likewise.\n+\n 2020-05-19  Tom Tromey  <tromey@adacore.com>\n \n \t* sparc64-tdep.c (adi_tag_fd): Update call to target_fileio_open."
    },
    {
      "sha": "9253cb115f63c0adcc1b7bdf38eea0a749f20447",
      "filename": "gdb/coff-pe-read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/coff-pe-read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/coff-pe-read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coff-pe-read.c?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -342,7 +342,7 @@ read_pe_exported_syms (minimal_symbol_reader &reader,\n   unsigned long exp_funcbase;\n   unsigned char *expdata, *erva;\n   unsigned long name_rvas, ordinals, nexp, ordbase;\n-  char *dll_name = (char *) dll->filename;\n+  char *dll_name = (char *) bfd_get_filename (dll);\n   int otherix = PE_SECTION_TABLE_SIZE;\n   int is_pe64 = 0;\n   int is_pe32 = 0;"
    },
    {
      "sha": "ce96037be21fe210b8462ad65e0b18121d0c2618",
      "filename": "gdb/dtrace-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/dtrace-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/dtrace-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dtrace-probe.c?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -860,7 +860,7 @@ dtrace_static_probe_ops::get_probes\n          else\n \t    complaint (_(\"could not obtain the contents of\"\n \t\t\t \"section '%s' in objfile `%s'.\"),\n-\t\t       sect->name, abfd->filename);\n+\t\t       bfd_section_name (sect), bfd_get_filename (abfd));\n \n \t  xfree (dof);\n \t}"
    },
    {
      "sha": "a05f841817aa332597d4e9571832e97083c63aa7",
      "filename": "gdb/dwarf2/frame.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/dwarf2/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/dwarf2/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/frame.c?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -2101,21 +2101,21 @@ decode_frame_entry (struct gdbarch *gdbarch,\n     case ALIGN4:\n       complaint (_(\"\\\n Corrupt data in %s:%s; align 4 workaround apparently succeeded\"),\n-\t\t unit->dwarf_frame_section->owner->filename,\n-\t\t unit->dwarf_frame_section->name);\n+\t\t bfd_get_filename (unit->dwarf_frame_section->owner),\n+\t\t bfd_section_name (unit->dwarf_frame_section));\n       break;\n \n     case ALIGN8:\n       complaint (_(\"\\\n Corrupt data in %s:%s; align 8 workaround apparently succeeded\"),\n-\t\t unit->dwarf_frame_section->owner->filename,\n-\t\t unit->dwarf_frame_section->name);\n+\t\t bfd_get_filename (unit->dwarf_frame_section->owner),\n+\t\t bfd_section_name (unit->dwarf_frame_section));\n       break;\n \n     default:\n       complaint (_(\"Corrupt data in %s:%s\"),\n-\t\t unit->dwarf_frame_section->owner->filename,\n-\t\t unit->dwarf_frame_section->name);\n+\t\t bfd_get_filename (unit->dwarf_frame_section->owner),\n+\t\t bfd_section_name (unit->dwarf_frame_section));\n       break;\n     }\n "
    },
    {
      "sha": "93dd157e583ee729d26081d0f7c7a6ce0793e4ff",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -1173,7 +1173,8 @@ exec_set_section_address (const char *filename, int index, CORE_ADDR address)\n   table = current_target_sections;\n   for (p = table->sections; p < table->sections_end; p++)\n     {\n-      if (filename_cmp (filename, p->the_bfd_section->owner->filename) == 0\n+      if (filename_cmp (filename,\n+\t\t\tbfd_get_filename (p->the_bfd_section->owner)) == 0\n \t  && index == p->the_bfd_section->index)\n \t{\n \t  p->endaddr += address - p->addr;"
    },
    {
      "sha": "5da1214a2564867be86ea58ce50f660aa4e71bc1",
      "filename": "gdb/solib-aix.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/solib-aix.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/solib-aix.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-aix.c?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -611,7 +611,7 @@ solib_aix_bfd_open (const char *pathname)\n     (gdb_bfd_openr_next_archived_file (archive_bfd.get (), NULL));\n   while (object_bfd != NULL)\n     {\n-      if (member_name == object_bfd->filename)\n+      if (member_name == bfd_get_filename (object_bfd.get ()))\n \tbreak;\n \n       object_bfd = gdb_bfd_openr_next_archived_file (archive_bfd.get (),"
    },
    {
      "sha": "73596446cce51d94e789b1ff3584b8fec807b5a1",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -1606,7 +1606,7 @@ get_stap_base_address (bfd *obfd, bfd_vma *base)\n     {\n       complaint (_(\"could not obtain base address for \"\n \t\t\t\t\t\"SystemTap section on objfile `%s'.\"),\n-\t\t obfd->filename);\n+\t\t bfd_get_filename (obfd));\n       return 0;\n     }\n "
    },
    {
      "sha": "dd8192a67fbba4f40d2b68a3f8e9b0ad86318d50",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e976792002c6a2810f9bb6cc3ad210514eb650/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=c7e976792002c6a2810f9bb6cc3ad210514eb650",
      "patch": "@@ -2450,7 +2450,7 @@ reread_symbols (void)\n \t a `shared library' on AIX is also an archive), then you should\n \t stat on the archive name, not member name.  */\n       if (objfile->obfd->my_archive)\n-\tres = stat (objfile->obfd->my_archive->filename, &new_statbuf);\n+\tres = stat (bfd_get_filename (objfile->obfd->my_archive), &new_statbuf);\n       else\n \tres = stat (objfile_name (objfile), &new_statbuf);\n       if (res != 0)"
    }
  ]
}