{
  "sha": "2906593ffecef89f8d64e0f1ca21494be71d0ebd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjkwNjU5M2ZmZWNlZjg5ZjhkNjRlMGYxY2EyMTQ5NGJlNzFkMGViZA==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-07-30T16:04:37Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-07-30T16:04:37Z"
    },
    "message": "[PR/24474] Add gdb.lookup_static_symbol to the python API\n\nSimilar to lookup_global_symbol, except that it checks the\nSTATIC_SCOPE.\n\ngdb/ChangeLog:\n\n2019-07-30  Christian Biesinger  <cbiesinger@google.com>\n\n\tPR/24474: Add a function to lookup static variables.\n\t* NEWS: Mention this new function.\n\t* python/py-symbol.c (gdbpy_lookup_static_symbol): New function.\n\t* python/python-internal.h (gdbpy_lookup_static_symbol): New function.\n\t* python/python.c (python_GdbMethods): Add new function.\n\ngdb/doc/ChangeLog:\n\n2019-07-30  Christian Biesinger  <cbiesinger@google.com>\n\n\t* python.texi (Symbols In Python): Document new function\n\tgdb.lookup_static_symbol.\n\ngdb/testsuite/ChangeLog:\n\n2019-07-30  Christian Biesinger  <cbiesinger@google.com>\n\n\t* gdb.python/py-symbol.c: Add a static variable and one in an anonymous\n\tnamespace.\n\t* gdb.python/py-symbol.exp: Test gdb.lookup_static_symbol.",
    "tree": {
      "sha": "8749c60aa8e9da72303e4be797345492dc3018a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8749c60aa8e9da72303e4be797345492dc3018a7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2906593ffecef89f8d64e0f1ca21494be71d0ebd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2906593ffecef89f8d64e0f1ca21494be71d0ebd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2906593ffecef89f8d64e0f1ca21494be71d0ebd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2906593ffecef89f8d64e0f1ca21494be71d0ebd/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5c4dde850c0d4874d3bbe6dd1989bf0f7a5ed1c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c4dde850c0d4874d3bbe6dd1989bf0f7a5ed1c3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5c4dde850c0d4874d3bbe6dd1989bf0f7a5ed1c3"
    }
  ],
  "stats": {
    "total": 116,
    "additions": 116,
    "deletions": 0
  },
  "files": [
    {
      "sha": "00e681938e40b9a61124de59dce2a8a8cdcd3c13",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -1,3 +1,11 @@\n+2019-07-30  Christian Biesinger  <cbiesinger@google.com>\n+\n+\tPR/24474: Add a function to lookup static variables.\n+\t* NEWS: Mention this new function.\n+\t* python/py-symbol.c (gdbpy_lookup_static_symbol): New function.\n+\t* python/python-internal.h (gdbpy_lookup_static_symbol): New function.\n+\t* python/python.c (python_GdbMethods): Add new function.\n+\n 2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n \n \t* NEWS: Mention new functions Objfile.lookup_{global,static}_symbol."
    },
    {
      "sha": "ac44399304c97f988408eb37702cd06a86b7a3af",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -41,6 +41,9 @@\n      there are no filters, or when the 'backtrace' '-no-filters' option\n      is given.\n \n+  ** The new function gdb.lookup_static_symbol can be used to look up\n+     symbols with static linkage.\n+\n   ** gdb.Objfile has new methods 'lookup_global_symbol' and\n      'lookup_static_symbol' to lookup a symbol from this objfile only.\n "
    },
    {
      "sha": "e469b6057d72879147d084223cd5357e75312e6e",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-30  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* python.texi (Symbols In Python): Document new function\n+\tgdb.lookup_static_symbol.\n+\n 2019-07-29  Christian Biesinger  <cbiesinger@google.com>\n \n \t* python.texi (Objfiles In Python): Document new functions"
    },
    {
      "sha": "3fdccd5e435f38acd044d6110f9ddae0ee4af8ac",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -4847,6 +4847,25 @@ The result is a @code{gdb.Symbol} object or @code{None} if the symbol\n is not found.\n @end defun\n \n+@findex gdb.lookup_static_symbol\n+@defun gdb.lookup_static_symbol (name @r{[}, domain@r{]})\n+This function searches for a global symbol with static linkage by name.\n+The search scope can be restricted to by the domain argument.\n+\n+@var{name} is the name of the symbol.  It must be a string.\n+The optional @var{domain} argument restricts the search to the domain type.\n+The @var{domain} argument must be a domain constant defined in the @code{gdb}\n+module and described later in this chapter.\n+\n+The result is a @code{gdb.Symbol} object or @code{None} if the symbol\n+is not found.\n+\n+Note that this function will not find function-scoped static variables. To look\n+up such variables, iterate over the variables of the function's\n+@code{gdb.Block} and check that @code{block.addr_class} is\n+@code{gdb.SYMBOL_LOC_STATIC}.\n+@end defun\n+\n A @code{gdb.Symbol} object has the following attributes:\n \n @defvar Symbol.type"
    },
    {
      "sha": "2b10e21d872a3ff36e29be68f3c05c637755aef9",
      "filename": "gdb/python/py-symbol.c",
      "status": "modified",
      "additions": 40,
      "deletions": 0,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/python/py-symbol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/python/py-symbol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-symbol.c?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -471,6 +471,46 @@ gdbpy_lookup_global_symbol (PyObject *self, PyObject *args, PyObject *kw)\n   return sym_obj;\n }\n \n+/* Implementation of\n+   gdb.lookup_static_symbol (name [, domain) -> symbol or None.  */\n+\n+PyObject *\n+gdbpy_lookup_static_symbol (PyObject *self, PyObject *args, PyObject *kw)\n+{\n+  const char *name;\n+  int domain = VAR_DOMAIN;\n+  static const char *keywords[] = { \"name\", \"domain\", NULL };\n+  struct symbol *symbol = NULL;\n+  PyObject *sym_obj;\n+\n+  if (!gdb_PyArg_ParseTupleAndKeywords (args, kw, \"s|i\", keywords, &name,\n+\t\t\t\t\t&domain))\n+    return NULL;\n+\n+  try\n+    {\n+      symbol = lookup_static_symbol (name, (domain_enum) domain).symbol;\n+    }\n+  catch (const gdb_exception &except)\n+    {\n+      GDB_PY_HANDLE_EXCEPTION (except);\n+    }\n+\n+  if (symbol)\n+    {\n+      sym_obj = symbol_to_symbol_object (symbol);\n+      if (!sym_obj)\n+\treturn NULL;\n+    }\n+  else\n+    {\n+      sym_obj = Py_None;\n+      Py_INCREF (Py_None);\n+    }\n+\n+  return sym_obj;\n+}\n+\n /* This function is called when an objfile is about to be freed.\n    Invalidate the symbol as further actions on the symbol would result\n    in bad data.  All access to obj->symbol should be gated by"
    },
    {
      "sha": "c5578430cfff9d596d542db91184634747cae7be",
      "filename": "gdb/python/python-internal.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/python/python-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/python/python-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python-internal.h?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -424,6 +424,8 @@ PyObject *gdbpy_frame_stop_reason_string (PyObject *, PyObject *);\n PyObject *gdbpy_lookup_symbol (PyObject *self, PyObject *args, PyObject *kw);\n PyObject *gdbpy_lookup_global_symbol (PyObject *self, PyObject *args,\n \t\t\t\t      PyObject *kw);\n+PyObject *gdbpy_lookup_static_symbol (PyObject *self, PyObject *args,\n+\t\t\t\t      PyObject *kw);\n PyObject *gdbpy_start_recording (PyObject *self, PyObject *args);\n PyObject *gdbpy_current_recording (PyObject *self, PyObject *args);\n PyObject *gdbpy_stop_recording (PyObject *self, PyObject *args);"
    },
    {
      "sha": "162470dcc022372664f64ac4a80441abae4b2c33",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -1978,6 +1978,10 @@ a boolean indicating if name is a field of the current implied argument\\n\\\n     METH_VARARGS | METH_KEYWORDS,\n     \"lookup_global_symbol (name [, domain]) -> symbol\\n\\\n Return the symbol corresponding to the given name (or None).\" },\n+  { \"lookup_static_symbol\", (PyCFunction) gdbpy_lookup_static_symbol,\n+    METH_VARARGS | METH_KEYWORDS,\n+    \"lookup_static_symbol (name [, domain]) -> symbol\\n\\\n+Return the static-linkage symbol corresponding to the given name (or None).\" },\n \n   { \"lookup_objfile\", (PyCFunction) gdbpy_lookup_objfile,\n     METH_VARARGS | METH_KEYWORDS,"
    },
    {
      "sha": "8dde64d4b0842a4c0fa6ff1285fc5aa400986740",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-30  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* gdb.python/py-symbol.c: Add a static variable and one in an anonymous\n+\tnamespace.\n+\t* gdb.python/py-symbol.exp: Test gdb.lookup_static_symbol.\n+\n 2019-07-30  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/read1.c (read): Don't use unsetenv (v), use setenv (v, \"\", 1)"
    },
    {
      "sha": "06a931bf5d951784f01f611be47f114f67c24be8",
      "filename": "gdb/testsuite/gdb.python/py-symbol.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/testsuite/gdb.python/py-symbol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/testsuite/gdb.python/py-symbol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-symbol.c?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -32,9 +32,14 @@ class SimpleClass\n     return i; /* Break in class. */\n   }\n };\n+\n+namespace {\n+  int anon = 10;\n+};\n #endif\n \n int qq = 72;\t\t\t/* line of qq */\n+static int rr = 42;\t\t/* line of rr */\n \n int func (int arg)\n {"
    },
    {
      "sha": "5617f127e5bd9953808a2fcff2a14ae8efd9b413",
      "filename": "gdb/testsuite/gdb.python/py-symbol.exp",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/testsuite/gdb.python/py-symbol.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2906593ffecef89f8d64e0f1ca21494be71d0ebd/gdb/testsuite/gdb.python/py-symbol.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-symbol.exp?ref=2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "patch": "@@ -48,6 +48,25 @@ gdb_test \"python print (gdb.lookup_global_symbol('qq').needs_frame)\" \\\n     \"False\" \\\n     \"print whether qq needs a frame\"\n \n+set rr_line [gdb_get_line_number \"line of rr\"]\n+gdb_test \"python print (gdb.lookup_global_symbol ('rr') is None)\" \"True\" \\\n+    \"lookup_global_symbol for static var\"\n+\n+gdb_test \"python print (gdb.lookup_static_symbol ('rr').line)\" \"$rr_line\" \\\n+    \"print line number of rr\"\n+\n+gdb_test \"python print (gdb.lookup_static_symbol ('rr').value ())\" \"42\" \\\n+    \"print value of rr\"\n+\n+gdb_test \"python print (gdb.lookup_static_symbol ('rr').needs_frame)\" \\\n+    \"False\" \\\n+    \"print whether rr needs a frame\"\n+\n+gdb_test \"python print (gdb.lookup_static_symbol ('nonexistent') is None)\" \\\n+    \"True\" \"lookup_static_symbol for nonexistent var\"\n+\n+gdb_test \"python print (gdb.lookup_static_symbol ('qq') is None)\" \\\n+    \"True\" \"lookup_static_symbol for global var\"\n \n if ![runto_main] then {\n     fail \"can't run to main\"\n@@ -137,6 +156,11 @@ gdb_start\n gdb_reinitialize_dir $srcdir/$subdir\n gdb_load ${binfile}-cxx\n \n+gdb_test \"python print (gdb.lookup_global_symbol ('(anonymous namespace)::anon') is None)\" \\\n+    \"True\" \"anon is None\"\n+gdb_test \"python print (gdb.lookup_static_symbol ('(anonymous namespace)::anon').value ())\" \\\n+    \"10\" \"print value of anon\"\n+\n if ![runto_main] then {\n     fail \"can't run to main\"\n     return 0"
    }
  ]
}