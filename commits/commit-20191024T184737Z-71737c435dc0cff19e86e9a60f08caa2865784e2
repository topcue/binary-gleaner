{
  "sha": "71737c435dc0cff19e86e9a60f08caa2865784e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzE3MzdjNDM1ZGMwY2ZmMTllODZlOWE2MGYwOGNhYTI4NjU3ODRlMg==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-23T22:00:51Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-10-24T18:47:37Z"
    },
    "message": "Simplify Python checks in configure.ac\n\nThe version checking code is not necessary. It is only used to define\nHAVE_LIBPYTHON2_6 or HAVE_LIBPYTHON2_7, which is not used anywhere.\n\nIf a version check is desired, the PY_{MAJOR,MINOR}_VERSION macro from\nthe Python headers can be (and is) used, which does not require updating\nconfigure.ac whenever a new Python version is released.\n\ngdb/ChangeLog:\n\n2019-10-24  Christian Biesinger  <cbiesinger@google.com>\n\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Remove the code that uses sed to get the python\n\tversion and defines HAVE_LIBPYTHON2_6 / HAVE_LIBPYTHON2_7.\n\nChange-Id: I07073870d9040c2bc8519882c8b3c1368edd4513",
    "tree": {
      "sha": "9df545ed5a2775848317fae42d279490b57b9abd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9df545ed5a2775848317fae42d279490b57b9abd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/71737c435dc0cff19e86e9a60f08caa2865784e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71737c435dc0cff19e86e9a60f08caa2865784e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/71737c435dc0cff19e86e9a60f08caa2865784e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71737c435dc0cff19e86e9a60f08caa2865784e2/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4ccdfbec5028a56b9847ec2687b9139e1769ffc5"
    }
  ],
  "stats": {
    "total": 124,
    "additions": 29,
    "deletions": 95
  },
  "files": [
    {
      "sha": "0545f4a57b02856dbff7aa9ea0e214a26a829d30",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=71737c435dc0cff19e86e9a60f08caa2865784e2",
      "patch": "@@ -1,3 +1,10 @@\n+2019-10-24  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Remove the code that uses sed to get the python\n+\tversion and defines HAVE_LIBPYTHON2_6 / HAVE_LIBPYTHON2_7.\n+\n 2019-10-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* python/py-progspace.c (pspy_block_for_pc): Return None for all"
    },
    {
      "sha": "a76ac9f3e740c34867cf0037a339a41149ba2df0",
      "filename": "gdb/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/config.in?ref=71737c435dc0cff19e86e9a60f08caa2865784e2",
      "patch": "@@ -246,12 +246,6 @@\n /* Define if you have the mpfr library. */\n #undef HAVE_LIBMPFR\n \n-/* Define if Python 2.6 is being used. */\n-#undef HAVE_LIBPYTHON2_6\n-\n-/* Define if Python 2.7 is being used. */\n-#undef HAVE_LIBPYTHON2_7\n-\n /* Define to 1 if you have the <libunwind-ia64.h> header file. */\n #undef HAVE_LIBUNWIND_IA64_H\n "
    },
    {
      "sha": "dcd614118ad864d09cd4826c2c9a44331831c426",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 10,
      "deletions": 46,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=71737c435dc0cff19e86e9a60f08caa2865784e2",
      "patch": "@@ -10439,32 +10439,12 @@ fi\n \n   have_libpython=no\n   if test \"${have_python_config}\" = yes; then\n-    # Determine the Python version by extracting \"-lpython<version>\"\n-    # part of the python_libs. <version> is usually X.Y with X and Y\n-    # being decimal numbers, but can also be XY (seen on Windows).\n-    #\n-    # The extraction is performed using sed with a regular expression.\n-    # Initially, the regexp used was using the '?' quantifier to make\n-    # the dot in the version number optional.  Unfortunately, this\n-    # does not work with non-GNU versions of sed because, because of\n-    # what looks like a limitation (the '?' quantifier does not work\n-    # with back-references).  We work around this limitation by using\n-    # the '*' quantifier instead.  It means that, in theory, we might\n-    # match unexpected version strings such as \"-lpython2..7\", but\n-    # this seems unlikely in practice.  And even if that happens,\n-    # an error will be triggered later on, when checking that version\n-    # number.\n-    python_version=`echo \" ${python_libs} \" \\\n-                         | sed -e 's,^.* -l\\(python[0-9]*[.]*[0-9]*\\).*$,\\1,'`\n-    case \"${python_version}\" in\n-    python*)\n-\n-  version=${python_version}\n+\n \n   new_CPPFLAGS=${python_includes}\n   new_LIBS=${python_libs}\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${version}\" >&5\n-$as_echo_n \"checking for ${version}... \" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for python\" >&5\n+$as_echo_n \"checking for python... \" >&6; }\n   save_CPPFLAGS=$CPPFLAGS\n   save_LIBS=$LIBS\n   CPPFLAGS=\"$CPPFLAGS $new_CPPFLAGS\"\n@@ -10482,7 +10462,7 @@ Py_Initialize ();\n }\n _ACEOF\n if ac_fn_c_try_link \"$LINENO\"; then :\n-  have_libpython=${version}\n+  have_libpython=yes\n                   found_usable_python=yes\n                   PYTHON_CPPFLAGS=$new_CPPFLAGS\n                   PYTHON_LIBS=$new_LIBS\n@@ -10494,20 +10474,14 @@ rm -f core conftest.err conftest.$ac_objext \\\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${found_usable_python}\" >&5\n $as_echo \"${found_usable_python}\" >&6; }\n \n-      ;;\n-    *)\n-      as_fn_error $? \"unable to determine python version from ${python_libs}\" \"$LINENO\" 5\n-      ;;\n-    esac\n   elif test \"${have_python_config}\" != failed; then\n     if test \"${have_libpython}\" = no; then\n \n-  version=python2.7\n \n   new_CPPFLAGS=${python_includes}\n   new_LIBS=\"-lpython2.7 ${python_libs}\"\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${version}\" >&5\n-$as_echo_n \"checking for ${version}... \" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for python\" >&5\n+$as_echo_n \"checking for python... \" >&6; }\n   save_CPPFLAGS=$CPPFLAGS\n   save_LIBS=$LIBS\n   CPPFLAGS=\"$CPPFLAGS $new_CPPFLAGS\"\n@@ -10525,7 +10499,7 @@ Py_Initialize ();\n }\n _ACEOF\n if ac_fn_c_try_link \"$LINENO\"; then :\n-  have_libpython=${version}\n+  have_libpython=yes\n                   found_usable_python=yes\n                   PYTHON_CPPFLAGS=$new_CPPFLAGS\n                   PYTHON_LIBS=$new_LIBS\n@@ -10540,12 +10514,11 @@ $as_echo \"${found_usable_python}\" >&6; }\n     fi\n     if test \"${have_libpython}\" = no; then\n \n-  version=python2.6\n \n   new_CPPFLAGS=${python_includes}\n   new_LIBS=\"-lpython2.6 ${python_libs}\"\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${version}\" >&5\n-$as_echo_n \"checking for ${version}... \" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for python\" >&5\n+$as_echo_n \"checking for python... \" >&6; }\n   save_CPPFLAGS=$CPPFLAGS\n   save_LIBS=$LIBS\n   CPPFLAGS=\"$CPPFLAGS $new_CPPFLAGS\"\n@@ -10563,7 +10536,7 @@ Py_Initialize ();\n }\n _ACEOF\n if ac_fn_c_try_link \"$LINENO\"; then :\n-  have_libpython=${version}\n+  have_libpython=yes\n                   found_usable_python=yes\n                   PYTHON_CPPFLAGS=$new_CPPFLAGS\n                   PYTHON_LIBS=$new_LIBS\n@@ -10577,15 +10550,6 @@ $as_echo \"${found_usable_python}\" >&6; }\n \n     fi\n   fi\n-  if test \"${have_libpython}\" = python2.7 -o \"${have_libpython}\" = python27; then\n-\n-$as_echo \"#define HAVE_LIBPYTHON2_7 1\" >>confdefs.h\n-\n-  elif test \"${have_libpython}\" = python2.6 -o \"${have_libpython}\" = python26; then\n-\n-$as_echo \"#define HAVE_LIBPYTHON2_6 1\" >>confdefs.h\n-\n-  fi\n \n   if test \"${have_libpython}\" = no; then\n     case \"${with_python}\" in"
    },
    {
      "sha": "f11dccd7fa9f0895132d43e5e1353e9813e3b542",
      "filename": "gdb/configure.ac",
      "status": "modified",
      "additions": 12,
      "deletions": 43,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71737c435dc0cff19e86e9a60f08caa2865784e2/gdb/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.ac?ref=71737c435dc0cff19e86e9a60f08caa2865784e2",
      "patch": "@@ -691,27 +691,25 @@ fi\n # --------------------- #\n \n dnl Utility to simplify finding libpython.\n-dnl $1 = pythonX.Y\n-dnl $2 = the shell variable to assign the result to\n+dnl $1 = the shell variable to assign the result to\n dnl      If libpython is found we store $version here.\n-dnl $3 = additional flags to add to CPPFLAGS\n-dnl $4 = additional flags to add to LIBS\n+dnl $2 = additional flags to add to CPPFLAGS\n+dnl $3 = additional flags to add to LIBS\n \n AC_DEFUN([AC_TRY_LIBPYTHON],\n [\n-  version=$1\n-  define([have_libpython_var],$2)\n-  new_CPPFLAGS=$3\n-  new_LIBS=$4\n-  AC_MSG_CHECKING([for ${version}])\n+  define([have_libpython_var],$1)\n+  new_CPPFLAGS=$2\n+  new_LIBS=$3\n+  AC_MSG_CHECKING([for python])\n   save_CPPFLAGS=$CPPFLAGS\n   save_LIBS=$LIBS\n   CPPFLAGS=\"$CPPFLAGS $new_CPPFLAGS\"\n   LIBS=\"$new_LIBS $LIBS\"\n   found_usable_python=no\n   AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include \"Python.h\"]],\n                                  [[Py_Initialize ();]])],\n-                 [have_libpython_var=${version}\n+                 [have_libpython_var=yes\n                   found_usable_python=yes\n                   PYTHON_CPPFLAGS=$new_CPPFLAGS\n                   PYTHON_LIBS=$new_LIBS])\n@@ -868,47 +866,18 @@ else\n \n   have_libpython=no\n   if test \"${have_python_config}\" = yes; then\n-    # Determine the Python version by extracting \"-lpython<version>\"\n-    # part of the python_libs. <version> is usually X.Y with X and Y\n-    # being decimal numbers, but can also be XY (seen on Windows).\n-    #\n-    # The extraction is performed using sed with a regular expression.\n-    # Initially, the regexp used was using the '?' quantifier to make\n-    # the dot in the version number optional.  Unfortunately, this\n-    # does not work with non-GNU versions of sed because, because of\n-    # what looks like a limitation (the '?' quantifier does not work\n-    # with back-references).  We work around this limitation by using\n-    # the '*' quantifier instead.  It means that, in theory, we might\n-    # match unexpected version strings such as \"-lpython2..7\", but\n-    # this seems unlikely in practice.  And even if that happens,\n-    # an error will be triggered later on, when checking that version\n-    # number.\n-    python_version=`echo \" ${python_libs} \" \\\n-                         | sed -e 's,^.* -l\\(python[[0-9]]*[[.]]*[[0-9]]*\\).*$,\\1,'`\n-    case \"${python_version}\" in\n-    python*)\n-      AC_TRY_LIBPYTHON(${python_version}, have_libpython,\n-                       ${python_includes}, ${python_libs})\n-      ;;\n-    *)\n-      AC_MSG_ERROR([unable to determine python version from ${python_libs}])\n-      ;;\n-    esac\n+    AC_TRY_LIBPYTHON(have_libpython,\n+                     ${python_includes}, ${python_libs})\n   elif test \"${have_python_config}\" != failed; then\n     if test \"${have_libpython}\" = no; then\n-      AC_TRY_LIBPYTHON(python2.7, have_libpython,\n+      AC_TRY_LIBPYTHON(have_libpython,\n                        ${python_includes}, \"-lpython2.7 ${python_libs}\")\n     fi\n     if test \"${have_libpython}\" = no; then\n-      AC_TRY_LIBPYTHON(python2.6, have_libpython,\n+      AC_TRY_LIBPYTHON(have_libpython,\n                        ${python_includes}, \"-lpython2.6 ${python_libs}\")\n     fi\n   fi\n-  if test \"${have_libpython}\" = python2.7 -o \"${have_libpython}\" = python27; then\n-    AC_DEFINE(HAVE_LIBPYTHON2_7, 1, [Define if Python 2.7 is being used.])\n-  elif test \"${have_libpython}\" = python2.6 -o \"${have_libpython}\" = python26; then\n-    AC_DEFINE(HAVE_LIBPYTHON2_6, 1, [Define if Python 2.6 is being used.])\n-  fi\n \n   if test \"${have_libpython}\" = no; then\n     case \"${with_python}\" in"
    }
  ]
}