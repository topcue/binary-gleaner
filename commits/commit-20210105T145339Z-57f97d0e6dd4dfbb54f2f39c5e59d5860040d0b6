{
  "sha": "57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTdmOTdkMGU2ZGQ0ZGZiYjU0ZjJmMzljNWU1OWQ1ODYwMDQwZDBiNg==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-01-05T13:25:56Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-01-05T14:53:39Z"
    },
    "message": "libctf, ld: CTF dumper changes for consistency\n\nIn most places in CTF dumper output, we emit 0x... for hex strings, but\nin three places (top-level type IDs, string table offsets, and the file\nmagic number) we don't emit the 0x.\n\nThis is very confusing if by chance there are no hex digits in the\noutput.  Add 0x consistently to everything, and adjust tests\naccordingly.  While we're at it, improve the indentation of the output\nso that subsequent lines in aggregate output are indented by at least as\nmany columns as the colon in the type output.  (Subsequent indentation\nis still 4 spaces at a time.)\n\nld/ChangeLog\n2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* testsuite/ld-ctf/array.d: Adjust for dumper changes.\n\t* testsuite/ld-ctf/conflicting-cycle-1.B-1.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-1.B-2.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-1.parent.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-2.A-1.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-2.A-2.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-2.parent.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-3.C-1.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-3.C-2.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-cycle-3.parent.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-enums.d: Likewise.\n\t* testsuite/ld-ctf/conflicting-typedefs.d: Likewise.\n\t* testsuite/ld-ctf/cross-tu-cyclic-conflicting.d: Likewise.\n\t* testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d: Likewise.\n\t* testsuite/ld-ctf/cross-tu-into-cycle.d: Likewise.\n\t* testsuite/ld-ctf/cross-tu-noncyclic.d: Likewise.\n\t* testsuite/ld-ctf/cycle-1.d: Likewise.\n\t* testsuite/ld-ctf/cycle-2.A.d: Likewise.\n\t* testsuite/ld-ctf/cycle-2.B.d: Likewise.\n\t* testsuite/ld-ctf/cycle-2.C.d: Likewise.\n\t* testsuite/ld-ctf/data-func-conflicted.d: Likewise.\n\t* testsuite/ld-ctf/diag-cttname-null.d: Likewise.\n\t* testsuite/ld-ctf/diag-cuname.d: Likewise.\n\t* testsuite/ld-ctf/diag-parlabel.d: Likewise.\n\t* testsuite/ld-ctf/diag-wrong-magic-number-mixed.d: Likewise.\n\t* testsuite/ld-ctf/function.d: Likewise.\n\t* testsuite/ld-ctf/slice.d: Likewise.\n\t* testsuite/ld-ctf/super-sub-cycles.d: Likewise.\n\nlibctf/ChangeLog\n2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-dump.c (ctf_dump_format_type): Add 0x to hex type IDs.\n\t(ctf_dump_header): Add 0x to the hex magic number.\n\t(ctf_dump_str): Add 0x to the hex string offsets.\n\t(ctf_dump_membstate_t) <cdm_toplevel_indent>: New.\n\t(ctf_dump_type): Adjust.  Free it when we're done.\n\t(type_hex_digits): New.\n\t(ctf_dump_member): Align output depending on the width of the type\n\tID being generated.  Use printf padding, not a loop, to generate\n\tindentation.",
    "tree": {
      "sha": "8761b8146292351d0056509f56eb08a73b082804",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8761b8146292351d0056509f56eb08a73b082804"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b09ad6eae985c6cf3138775de8e712bc116b4166",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b09ad6eae985c6cf3138775de8e712bc116b4166",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b09ad6eae985c6cf3138775de8e712bc116b4166"
    }
  ],
  "stats": {
    "total": 503,
    "additions": 287,
    "deletions": 216
  },
  "files": [
    {
      "sha": "21ba58a0bfdd9e9e31a5a52d4f7cf8919ca03e84",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -1,3 +1,34 @@\n+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* testsuite/ld-ctf/array.d: Adjust for dumper changes.\n+\t* testsuite/ld-ctf/conflicting-cycle-1.B-1.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-1.B-2.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-1.parent.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-2.A-1.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-2.A-2.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-2.parent.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-3.C-1.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-3.C-2.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-cycle-3.parent.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-enums.d: Likewise.\n+\t* testsuite/ld-ctf/conflicting-typedefs.d: Likewise.\n+\t* testsuite/ld-ctf/cross-tu-cyclic-conflicting.d: Likewise.\n+\t* testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d: Likewise.\n+\t* testsuite/ld-ctf/cross-tu-into-cycle.d: Likewise.\n+\t* testsuite/ld-ctf/cross-tu-noncyclic.d: Likewise.\n+\t* testsuite/ld-ctf/cycle-1.d: Likewise.\n+\t* testsuite/ld-ctf/cycle-2.A.d: Likewise.\n+\t* testsuite/ld-ctf/cycle-2.B.d: Likewise.\n+\t* testsuite/ld-ctf/cycle-2.C.d: Likewise.\n+\t* testsuite/ld-ctf/data-func-conflicted.d: Likewise.\n+\t* testsuite/ld-ctf/diag-cttname-null.d: Likewise.\n+\t* testsuite/ld-ctf/diag-cuname.d: Likewise.\n+\t* testsuite/ld-ctf/diag-parlabel.d: Likewise.\n+\t* testsuite/ld-ctf/diag-wrong-magic-number-mixed.d: Likewise.\n+\t* testsuite/ld-ctf/function.d: Likewise.\n+\t* testsuite/ld-ctf/slice.d: Likewise.\n+\t* testsuite/ld-ctf/super-sub-cycles.d: Likewise.\n+\n 2021-01-05  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-scripts/sysroot-prefix.exp: Exclude some targets."
    },
    {
      "sha": "e07d63e22435437cf4966016caf5dffd782a5462",
      "filename": "ld/testsuite/ld-ctf/array.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/array.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/array.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/array.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -10,7 +10,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Data object section:\t.* \\(0x8 bytes\\)\n@@ -29,7 +29,7 @@ Contents of CTF section .ctf:\n \n   Types:\n #...\n-     [0-9a-f]*: .*\\[10\\] .*\n+     0x[0-9a-f]*: .*\\[10\\] .*\n #...\n-     [0-9a-f]*: .*\\[10\\] .*\n+     0x[0-9a-f]*: .*\\[10\\] .*\n #..."
    },
    {
      "sha": "99b0564bad7c439287fe071909d13da0b04bc3c2",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-1.B-1.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-1.B-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-1.B-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-1.B-1.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -14,7 +14,7 @@\n CTF archive member: .*/B.c:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Parent name: .ctf\n@@ -30,12 +30,12 @@ CTF archive member: .*/B.c:\n   Function objects:\n \n   Variables:\n-    b ->  80000001: struct B \\(size 0x[0-9]*\\)\n+    b ->  0x80000001: struct B \\(size 0x[0-9]*\\)\n \n   Types:\n-     8[0-9a-f]*: struct B .*\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n+     0x8[0-9a-f]*: struct B .*\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n \n   Strings:\n #..."
    },
    {
      "sha": "32bc5c24f0522b99f39bf695f1f82a7800a7477c",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-1.B-2.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-1.B-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-1.B-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-1.B-2.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -14,7 +14,7 @@\n CTF archive member: .*/B-2.c:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Parent name: .ctf\n@@ -30,13 +30,13 @@ CTF archive member: .*/B-2.c:\n   Function objects:\n \n   Variables:\n-    b ->  80000001: struct B \\(.*\n+    b ->  0x80000001: struct B \\(.*\n \n   Types:\n-     8[0-9a-f]*: struct B \\(.*\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int wombat:32 \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+     0x8[0-9a-f]*: struct B \\(.*\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int wombat:32 \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n \n   Strings:\n #..."
    },
    {
      "sha": "4cbe9b61f3c26f9809640eed7699a586e34b8b52",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-1.parent.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-1.parent.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-1.parent.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-1.parent.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -13,7 +13,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t.* \\(0xac bytes\\)\n@@ -29,8 +29,8 @@ Contents of CTF section .ctf:\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct B \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 9\\) struct B \\(.*\n+     0x[0-9a-f]*: struct B \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 9\\) struct B \\(.*\n #...\n CTF archive member: .*:\n #..."
    },
    {
      "sha": "5e5fade0af8104a95cdc9ce5a5dae66ec11bda59",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-2.A-1.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-2.A-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-2.A-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-2.A-1.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -16,7 +16,7 @@\n CTF archive member: .*/A.c:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Parent name: .*\n@@ -29,13 +29,13 @@ CTF archive member: .*/A.c:\n   Function objects:\n \n   Variables:\n-    a ->  80000001: struct A \\(size 0x[0-9a-f]*\\)\n+    a ->  0x80000001: struct A \\(size 0x[0-9a-f]*\\)\n \n   Types:\n-     8[0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct A \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(aligned at 0x[0-9a-f]*\\)\n+     0x8[0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct A \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(aligned at 0x[0-9a-f]*\\)\n \n   Strings:\n-    0: \n+    0x0: \n #..."
    },
    {
      "sha": "ff6785cfde216c7059ef523ef27b857bf3d9ab3c",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-2.A-2.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-2.A-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-2.A-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-2.A-2.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -16,7 +16,7 @@\n CTF archive member: .*/A-2.c:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Parent name: .*\n@@ -29,14 +29,14 @@ CTF archive member: .*/A-2.c:\n   Function objects:\n \n   Variables:\n-    a ->  80000001: struct A \\(size 0x[0-9a-f]*\\)\n+    a ->  0x80000001: struct A \\(size 0x[0-9a-f]*\\)\n \n   Types:\n-     8[0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct A \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int wombat:32 \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+     0x8[0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct A \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int wombat:32 \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n \n   Strings:\n-    0: \n+    0x0: \n #..."
    },
    {
      "sha": "d111ef7b9946d7d03c26f4025564a862c30bff81",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-2.parent.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-2.parent.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-2.parent.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-2.parent.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -15,7 +15,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t.* \\(0x94 bytes\\)\n@@ -28,13 +28,13 @@ Contents of CTF section .ctf:\n   Function objects:\n \n   Variables:\n-    cycle_1 ->  [0-9a-f]*: struct cycle_1 \\* \\(size 0x[0-9a-f]*\\) -> [0-9a-f]*: struct cycle_1 \\(size 0x[0-9a-f]*\\)\n+    cycle_1 ->  0x[0-9a-f]*: struct cycle_1 \\* \\(size 0x[0-9a-f]*\\) -> 0x[0-9a-f]*: struct cycle_1 \\(size 0x[0-9a-f]*\\)\n \n   Types:\n #...\n-     [0-9a-f]*: struct cycle_1 \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct cycle_1 \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct cycle_1 \\* next \\(aligned at 0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: struct cycle_1 \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct cycle_1 \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct cycle_1 \\* next \\(aligned at 0x[0-9a-f]*\\)\n #..."
    },
    {
      "sha": "df61153db2a8dd72dcba61de8ffead67056aefcd",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-3.C-1.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-3.C-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-3.C-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-3.C-1.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -15,7 +15,7 @@\n CTF archive member: .*/C.c:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Parent name: .*\n@@ -28,13 +28,13 @@ CTF archive member: .*/C.c:\n   Function objects:\n \n   Variables:\n-    c ->  80000001: struct C \\(size 0x[0-9a-f]*\\)\n+    c ->  0x80000001: struct C \\(size 0x[0-9a-f]*\\)\n \n   Types:\n-     8[0-9a-f]*: struct C \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct C \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(aligned at 0x[0-9a-f]*\\)\n+     0x8[0-9a-f]*: struct C \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct C \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(aligned at 0x[0-9a-f]*\\)\n \n   Strings:\n-    0: \n+    0x0: \n #..."
    },
    {
      "sha": "e1cfd0cf771492d4dcb9b6bf9906c05862bf0739",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-3.C-2.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-3.C-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-3.C-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-3.C-2.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -15,7 +15,7 @@\n CTF archive member: .*/C-2.c:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Parent name: .*\n@@ -28,14 +28,14 @@ CTF archive member: .*/C-2.c:\n   Function objects:\n \n   Variables:\n-    c ->  80000001: struct C \\(size 0x[0-9a-f]*\\)\n+    c ->  0x80000001: struct C \\(size 0x[0-9a-f]*\\)\n \n   Types:\n-     8[0-9a-f]*: struct C \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct C \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int wombat:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+     0x8[0-9a-f]*: struct C \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 6\\) struct C \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int wombat:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n \n   Strings:\n-    0: \n+    0x0: \n #..."
    },
    {
      "sha": "11d2a048618d4aec17b14ad7f8e50f36a505da9e",
      "filename": "ld/testsuite/ld-ctf/conflicting-cycle-3.parent.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-3.parent.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-cycle-3.parent.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-cycle-3.parent.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -14,7 +14,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t0x0 -- 0x57 \\(0x58 bytes\\)\n@@ -30,9 +30,9 @@ Contents of CTF section .ctf:\n \n   Types:\n #...\n-     [0-9a-f]*: int \\[0x0:0x[0-9a-f]*\\] \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: int \\[0x0:0x[0-9a-f]*\\] \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n #...\n   Strings:\n-    0: \n+    0x0: \n #..."
    },
    {
      "sha": "b93d8124f36a2e6b99336222b146d7f770e441cd",
      "filename": "ld/testsuite/ld-ctf/conflicting-enums.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-enums.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-enums.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-enums.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -10,7 +10,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n   Types:\n@@ -20,16 +20,16 @@ Contents of CTF section .ctf:\n CTF archive member: .*enum.*\\.c:\n #...\n   Types:\n-     8[0-9a-f]*: enum day_of_the_week \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 8\\) enum day_of_the_week \\(aligned at 0x[0-9a-f]*\\)\n+     0x8[0-9a-f]*: enum day_of_the_week \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 8\\) enum day_of_the_week \\(aligned at 0x[0-9a-f]*\\)\n \n   Strings:\n #...\n CTF archive member: .*enum.*\\.c:\n #...\n   Types:\n-     8[0-9a-f]*: enum day_of_the_week \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 8\\) enum day_of_the_week \\(aligned at 0x[0-9a-f]*\\)\n+     0x8[0-9a-f]*: enum day_of_the_week \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x8[0-9a-f]*\\) \\(kind 8\\) enum day_of_the_week \\(aligned at 0x[0-9a-f]*\\)\n \n   Strings:\n #..."
    },
    {
      "sha": "309e4535d7fa147b0cdd7a5e4649afc428e36b3b",
      "filename": "ld/testsuite/ld-ctf/conflicting-typedefs.d",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-typedefs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/conflicting-typedefs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/conflicting-typedefs.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -10,24 +10,24 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n   Types:\n-     1: .*int .*\n-        .*\n-     [0-9]:.*int .*\n-        .*\n-     [0-9]: word .*\n-        \\[0x0\\] \\(ID 0x[0-9]\\) \\(kind 10\\) word \\(aligned at 0x[48]\\)\n+     0x1: .*int .*\n+          .*\n+     0x[0-9]:.*int .*\n+          .*\n+     0x[0-9]: word .*\n+           *\\[0x0\\] \\(ID 0x[0-9]\\) \\(kind 10\\) word \\(aligned at 0x[48]\\)\n \n   Strings:\n #...\n CTF archive member: .*typedef.*\\.c:\n #...\n   Types:\n-     80000001: word .*\n-        \\[0x0\\] \\(ID 0x80000001\\) \\(kind 10\\) word \\(aligned at 0x[48]\\)\n+     0x80000001: word .*\n+           *\\[0x0\\] \\(ID 0x80000001\\) \\(kind 10\\) word \\(aligned at 0x[48]\\)\n \n   Strings:\n #..."
    },
    {
      "sha": "3c975ebaa510824538eda4880360db2f72bab713",
      "filename": "ld/testsuite/ld-ctf/cross-tu-cyclic-conflicting.d",
      "status": "modified",
      "additions": 19,
      "deletions": 19,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-cyclic-conflicting.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-cyclic-conflicting.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cross-tu-cyclic-conflicting.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -14,20 +14,20 @@ Contents of CTF section \\.ctf:\n #...\n   Types:\n #...\n-     [0-9a-f]*: long int \\[0x0:0x[0-9a-f]*\\] \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: long int \\[0x0:0x[0-9a-f]*\\] \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n #...\n-     [0-9a-f]*: struct B .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B .*\n+     0x[0-9a-f]*: struct B .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B .*\n #...\n-     [0-9a-f]*: int \\[0x0:0x[0-9a-f]*\\] \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: int \\[0x0:0x[0-9a-f]*\\] \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n #...\n-     [0-9a-f]*: struct A .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 9\\) struct A .*\n+     0x[0-9a-f]*: struct A .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 9\\) struct A .*\n #...\n-     [0-9a-f]*: struct C .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct C .*\n+     0x[0-9a-f]*: struct C .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct C .*\n #...\n \n   Strings:\n@@ -36,22 +36,22 @@ Contents of CTF section \\.ctf:\n CTF archive member: .*/ld/testsuite/ld-ctf/cross-tu-cyclic-1\\.c:\n #...\n   Types:\n-     80.*[0-9a-f]*: struct A .*\n-        \\[0x0\\] \\(ID 0x80.*\\) \\(kind 6\\) struct A .*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:.*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n+     0x80.*[0-9a-f]*: struct A .*\n+           *\\[0x0\\] \\(ID 0x80.*\\) \\(kind 6\\) struct A .*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:.*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n \n   Strings:\n #...\n \n CTF archive member: .*/ld/testsuite/ld-ctf/cross-tu-cyclic-2\\.c:\n #...\n   Types:\n-     80.*[0-9a-f]*: struct A .*\n-        \\[0x0\\] \\(ID 0x80.*\\) \\(kind 6\\) struct A .*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:.*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* bar .*\n+     0x80.*[0-9a-f]*: struct A .*\n+           *\\[0x0\\] \\(ID 0x80.*\\) \\(kind 6\\) struct A .*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:.*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* bar .*\n \n   Strings:\n #..."
    },
    {
      "sha": "9b0d738434a36d84749a081ecd3a4a19b511365c",
      "filename": "ld/testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cross-tu-cyclic-nonconflicting.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -14,7 +14,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n \n@@ -29,22 +29,22 @@ Contents of CTF section .ctf:\n \n   Types:\n #...\n-     [0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]\\) \\(kind 6\\) struct A \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo \\(aligned at 0x[0-9a-f]*\\)\n-     [0-9a-f]*: long int .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int:[0-9].*\n-     [0-9a-f]*: struct B \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B \\(aligned at 0x[0-9a-f]*\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int foo:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* bar \\(aligned at 0x[0-9a-f]*\\)\n-     [0-9a-f]*: struct B \\* \\(size 0x[0-9a-f]*\\) -> [0-9a-f]*: struct B \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* \\(aligned at 0x[0-9a-f]*\\)\n-     [0-9a-f]*: struct A \\* \\(size 0x[0-9a-f]*\\) -> [0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* \\(aligned at 0x[0-9a-f]*\\)\n-     [0-9a-f]*: int .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int:.*\n+     0x[0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]\\) \\(kind 6\\) struct A \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo \\(aligned at 0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: long int .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int:[0-9].*\n+     0x[0-9a-f]*: struct B \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B \\(aligned at 0x[0-9a-f]*\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int foo:[0-9]* \\(aligned at 0x[0-9a-f]*, format 0x1, offset:bits 0x0:0x[0-9a-f]*\\)\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* bar \\(aligned at 0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: struct B \\* \\(size 0x[0-9a-f]*\\) -> 0x[0-9a-f]*: struct B \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* \\(aligned at 0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: struct A \\* \\(size 0x[0-9a-f]*\\) -> 0x[0-9a-f]*: struct A \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* \\(aligned at 0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: int .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int:.*\n \n   Strings:\n #..."
    },
    {
      "sha": "a21fedc8126eedff5cad91cce9bcf80238cb4bf3",
      "filename": "ld/testsuite/ld-ctf/cross-tu-into-cycle.d",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-into-cycle.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-into-cycle.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cross-tu-into-cycle.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -16,7 +16,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n \n@@ -31,16 +31,16 @@ Contents of CTF section .ctf:\n     conflicty ->  .*\n \n   Types:\n-     [0-9a-f]*: struct A .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A .*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n-     [0-9a-f]*: struct B .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B .*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* next .*\n-     [0-9a-f]*: struct B \\* .*\n-        \\[0x0\\] .*\n-     [0-9a-f]*: struct A \\* .*\n-        \\[0x0\\] .*\n+     0x[0-9a-f]*: struct A .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A .*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n+     0x[0-9a-f]*: struct B .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B .*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* next .*\n+     0x[0-9a-f]*: struct B \\* .*\n+           *\\[0x0\\] .*\n+     0x[0-9a-f]*: struct A \\* .*\n+           *\\[0x0\\] .*\n \n   Strings:\n #..."
    },
    {
      "sha": "d96e5d20ee84f822d078c61959bb9cc0c6faaadd",
      "filename": "ld/testsuite/ld-ctf/cross-tu-noncyclic.d",
      "status": "modified",
      "additions": 12,
      "deletions": 12,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-noncyclic.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cross-tu-noncyclic.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cross-tu-noncyclic.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -12,7 +12,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t.* \\(0x74 bytes\\)\n@@ -29,18 +29,18 @@ Contents of CTF section .ctf:\n \n   Types:\n #...\n-     [0-9a-f]*: struct A .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A .*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:[0-9]* .*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n+     0x[0-9a-f]*: struct A .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A .*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) long int a:[0-9]* .*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* foo .*\n #...\n-     [0-9a-f]*: struct B .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B .*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int foo:[0-9]* .*\n+     0x[0-9a-f]*: struct B .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B .*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int foo:[0-9]* .*\n #...\n-     [0-9a-f]*: struct B \\* \\(size 0x[0-9a-f]*\\) -\\> [0-9a-f]*: struct B .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* .*\n+     0x[0-9a-f]*: struct B \\* \\(size 0x[0-9a-f]*\\) -> 0x[0-9a-f]*: struct B .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* .*\n #...\n-     [0-9a-f]*: struct A \\* \\(size 0x[0-9a-f]*\\) -> [0-9a-f]*: struct A .*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* .*\n+     0x[0-9a-f]*: struct A \\* \\(size 0x[0-9a-f]*\\) -> 0x[0-9a-f]*: struct A .*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* .*\n #..."
    },
    {
      "sha": "578709349faba29ece3e76792ff9f73e7a1df7fc",
      "filename": "ld/testsuite/ld-ctf/cycle-1.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cycle-1.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -12,7 +12,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t.* \\(0xa8 bytes\\)\n@@ -28,9 +28,9 @@ Contents of CTF section .ctf:\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct cycle_1 \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct cycle_1 \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(.*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct cycle_1 \\* next \\(.*\n+     0x[0-9a-f]*: struct cycle_1 \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct cycle_1 \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(.*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct cycle_1 \\* next \\(.*\n #..."
    },
    {
      "sha": "ddb5381e93cf5b5b2ae1f97696dd7cd7a39e5ad5",
      "filename": "ld/testsuite/ld-ctf/cycle-2.A.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-2.A.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-2.A.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cycle-2.A.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -11,7 +11,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t.* \\(0x6c bytes\\)\n@@ -25,16 +25,16 @@ Contents of CTF section .ctf:\n \n   Variables:\n #...\n-    a ->  [0-9a-f]*: struct A \\(.*\n+    a ->  0x[0-9a-f]*: struct A \\(.*\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct A \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n+     0x[0-9a-f]*: struct A \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n #...\n   Strings:\n-    0: \n+    0x0: \n #...\n-    [0-9a-f]*: A\n+    0x[0-9a-f]*: A\n #..."
    },
    {
      "sha": "1d1cdc5377db20533cd072cd303b22be33b414be",
      "filename": "ld/testsuite/ld-ctf/cycle-2.B.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-2.B.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-2.B.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cycle-2.B.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -11,7 +11,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t.* \\(0x6c bytes\\)\n@@ -25,16 +25,16 @@ Contents of CTF section .ctf:\n \n   Variables:\n #...\n-    b ->  [0-9a-f]*: struct B \\(.*\n+    b ->  0x[0-9a-f]*: struct B \\(.*\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct B \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n+     0x[0-9a-f]*: struct B \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n #...\n   Strings:\n-    0: \n+    0x0: \n #...\n-    [0-9a-f]*: B\n+    0x[0-9a-f]*: B\n #..."
    },
    {
      "sha": "4d8f14513dd936858e8c3942f69a353a71dba763",
      "filename": "ld/testsuite/ld-ctf/cycle-2.C.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-2.C.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/cycle-2.C.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/cycle-2.C.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -11,7 +11,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Type section:\t.* \\(0x6c bytes\\)\n@@ -25,16 +25,16 @@ Contents of CTF section .ctf:\n \n   Variables:\n #...\n-    c ->  [0-9a-f]*: struct C \\(.*\n+    c ->  0x[0-9a-f]*: struct C \\(.*\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct C \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct C \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(.*\n+     0x[0-9a-f]*: struct C \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct C \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(.*\n #...\n   Strings:\n-    0: \n+    0x0: \n #...\n-    [0-9a-f]*: C\n+    0x[0-9a-f]*: C\n #..."
    },
    {
      "sha": "62855f8189ee540b24b154163060c6aa69e4162a",
      "filename": "ld/testsuite/ld-ctf/data-func-conflicted.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/data-func-conflicted.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/data-func-conflicted.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/data-func-conflicted.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -10,7 +10,7 @@\n Contents of CTF section \\.ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Data object section:\t.* \\(0xc bytes\\)\n@@ -34,7 +34,7 @@ Contents of CTF section \\.ctf:\n CTF archive member: .*/data-func-1\\.c:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Parent name: \\.ctf\n@@ -59,5 +59,5 @@ CTF archive member: .*/data-func-1\\.c:\n   Variables:\n \n   Types:\n-     80000001: foo_t .* -> .* int .*\n+     0x80000001: foo_t .* -> .* int .*\n #..."
    },
    {
      "sha": "00db4251a4d705539767c484dae50dcd1a2fad8f",
      "filename": "ld/testsuite/ld-ctf/diag-cttname-null.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-cttname-null.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-cttname-null.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/diag-cttname-null.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -9,15 +9,15 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n   Data objects:\n     a -> struct \n #...\n   Types:\n #...\n-     [0-9a-f]*: struct  \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct  \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n+     0x[0-9a-f]*: struct  \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct  \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n #..."
    },
    {
      "sha": "19a4bfd80fa90ae803b787a235659053b7282202",
      "filename": "ld/testsuite/ld-ctf/diag-cuname.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-cuname.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-cuname.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/diag-cuname.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -9,7 +9,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Compilation unit name: \\(\\?\\)\n@@ -29,12 +29,12 @@ Contents of CTF section .ctf:\n \n   Types:\n #...\n-     [0-9a-f]*: struct A \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n+     0x[0-9a-f]*: struct A \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n #...\n   Strings:\n-    0: \n+    0x0: \n #...\n-    [0-9a-f]*: \\(\\?\\)\n+    0x[0-9a-f]*: \\(\\?\\)\n #..."
    },
    {
      "sha": "b2b047cb10f7f815838e64215e0acc1d5bebce7a",
      "filename": "ld/testsuite/ld-ctf/diag-parlabel.d",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-parlabel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-parlabel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/diag-parlabel.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -9,7 +9,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Compilation unit name: .*A.c\n@@ -28,12 +28,12 @@ Contents of CTF section .ctf:\n \n   Types:\n #...\n-     [0-9a-f]*: struct A \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n+     0x[0-9a-f]*: struct A \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n #...\n   Strings:\n-    0: \n+    0x0: \n #...\n-    [0-9a-f]*: A\n+    0x[0-9a-f]*: A\n #..."
    },
    {
      "sha": "8fc1cc883da37704b14707b261fb011cc328e5d4",
      "filename": "ld/testsuite/ld-ctf/diag-wrong-magic-number-mixed.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-wrong-magic-number-mixed.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/diag-wrong-magic-number-mixed.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/diag-wrong-magic-number-mixed.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -10,7 +10,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Variable section:\t0x0 -- 0x17 \\(0x18 bytes\\)\n@@ -25,16 +25,16 @@ Contents of CTF section .ctf:\n \n   Variables:\n #...\n-    b ->  [0-9a-f]*: struct B \\(.*\n+    b ->  0x[0-9a-f]*: struct B \\(.*\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct B \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n+     0x[0-9a-f]*: struct B \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct C \\* c \\(.*\n #...\n   Strings:\n-    0: \n+    0x0: \n #...\n-    [0-9a-f]*: B\n+    0x[0-9a-f]*: B\n #..."
    },
    {
      "sha": "241adc2fb3abf3731ad803a5d32571c7a6318266",
      "filename": "ld/testsuite/ld-ctf/function.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/function.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/function.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/function.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -9,7 +9,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Compilation unit name: .*function.c\n@@ -22,6 +22,6 @@ Contents of CTF section .ctf:\n #...\n   Types:\n #...\n-     [0-9a-f]*: int \\(\\*\\) \\(char, int, float, void \\*, void \\(\\*\\)\\(\\*\\) \\(int\\)\\) \\(size 0x0\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 5\\) int \\(\\*\\) \\(char, int[0-9]*, float, void \\*, void \\(\\*\\)\\(\\*\\) \\(int\\)\\) \\(aligned at 0x[0-9a-f]*\\)\n+     0x[0-9a-f]*: int \\(\\*\\) \\(char, int, float, void \\*, void \\(\\*\\)\\(\\*\\) \\(int\\)\\) \\(size 0x0\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 5\\) int \\(\\*\\) \\(char, int[0-9]*, float, void \\*, void \\(\\*\\)\\(\\*\\) \\(int\\)\\) \\(aligned at 0x[0-9a-f]*\\)\n #..."
    },
    {
      "sha": "e42ffdf4b654b56848f0b1767da4e0033a0e2467",
      "filename": "ld/testsuite/ld-ctf/slice.d",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/slice.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/slice.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/slice.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -9,7 +9,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Compilation unit name: .*slice.c\n@@ -23,10 +23,10 @@ Contents of CTF section .ctf:\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct slices \\(size 0x[0-9a-f]*\\)\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct slices \\(aligned at 0x1\\)\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  one:1 \\(aligned at 0x1, format 0x1, offset:bits 0x0:0x1\\)\n-            \\[0x1\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  two:2 \\(aligned at 0x1, format 0x1, offset:bits 0x1:0x2\\)\n-            \\[0x3\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  six:6 \\(aligned at 0x1, format 0x1, offset:bits 0x3:0x6\\)\n-            \\[0x9\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  ten:10 \\(aligned at 0x2, format 0x1, offset:bits 0x9:0xa\\)\n+     0x[0-9a-f]*: struct slices \\(size 0x[0-9a-f]*\\)\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct slices \\(aligned at 0x1\\)\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  one:1 \\(aligned at 0x1, format 0x1, offset:bits 0x0:0x1\\)\n+               *\\[0x1\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  two:2 \\(aligned at 0x1, format 0x1, offset:bits 0x1:0x2\\)\n+               *\\[0x3\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  six:6 \\(aligned at 0x1, format 0x1, offset:bits 0x3:0x6\\)\n+               *\\[0x9\\] \\(ID 0x[0-9a-f]*\\) \\(kind 1\\) int  ten:10 \\(aligned at 0x2, format 0x1, offset:bits 0x9:0xa\\)\n #..."
    },
    {
      "sha": "65a43a4de9ca653c6d68f6e0d76692ba73641784",
      "filename": "ld/testsuite/ld-ctf/super-sub-cycles.d",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/super-sub-cycles.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/ld/testsuite/ld-ctf/super-sub-cycles.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/super-sub-cycles.d?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -9,7 +9,7 @@\n Contents of CTF section .ctf:\n \n   Header:\n-    Magic number: dff2\n+    Magic number: 0xdff2\n     Version: 4 \\(CTF_VERSION_3\\)\n #...\n     Compilation unit name: .*super-sub-cycles.c\n@@ -18,18 +18,18 @@ Contents of CTF section .ctf:\n #...\n   Types:\n #...\n-     [0-9a-f]*: struct A \\(.*\n-        \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n-            \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B b \\(.*\n-                \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct C c \\(.*\n-                    \\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(.*\n-                    \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct D d \\(.*\n-                        \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n-                \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct D d \\(.*\n-                    \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n-            \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct X x \\(.*\n-                \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct Y y \\(.*\n-                    \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct Z z \\(.*\n-                        \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct Y \\* y \\(.*\n-                        \\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct D \\* d \\(.*\n+     0x[0-9a-f]*: struct A \\(.*\n+           *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct A \\(.*\n+               *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct B b \\(.*\n+                   *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct C c \\(.*\n+                       *\\[0x0\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct A \\* a \\(.*\n+                       *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct D d \\(.*\n+                           *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n+                   *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct D d \\(.*\n+                       *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct B \\* b \\(.*\n+               *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct X x \\(.*\n+                   *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct Y y \\(.*\n+                       *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 6\\) struct Z z \\(.*\n+                           *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct Y \\* y \\(.*\n+                           *\\[0x[0-9a-f]*\\] \\(ID 0x[0-9a-f]*\\) \\(kind 3\\) struct D \\* d \\(.*\n #..."
    },
    {
      "sha": "99f9022ecf09960cdc49a5d26347fa7c0bebb4f8",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -1,3 +1,15 @@\n+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_format_type): Add 0x to hex type IDs.\n+\t(ctf_dump_header): Add 0x to the hex magic number.\n+\t(ctf_dump_str): Add 0x to the hex string offsets.\n+\t(ctf_dump_membstate_t) <cdm_toplevel_indent>: New.\n+\t(ctf_dump_type): Adjust.  Free it when we're done.\n+\t(type_hex_digits): New.\n+\t(ctf_dump_member): Align output depending on the width of the type\n+\tID being generated.  Use printf padding, not a loop, to generate\n+\tindentation.\n+\n 2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-decl.c (ctf_decl_push): Don't print array decls backwards."
    },
    {
      "sha": "ee22f77f832a102f5555f7fd8d9657bcb5196454",
      "filename": "libctf/ctf-dump.c",
      "status": "modified",
      "additions": 39,
      "deletions": 11,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/libctf/ctf-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6/libctf/ctf-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dump.c?ref=57f97d0e6dd4dfbb54f2f39c5e59d5860040d0b6",
      "patch": "@@ -47,6 +47,7 @@ typedef struct ctf_dump_membstate\n {\n   char **cdm_str;\n   ctf_dict_t *cdm_fp;\n+  char *cdm_toplevel_indent;\n } ctf_dump_membstate_t;\n \n static int\n@@ -115,7 +116,7 @@ ctf_dump_format_type (ctf_dict_t *fp, ctf_id_t id, int flag)\n \t  goto err;\n \t}\n \n-      if (asprintf (&bit, \" %s%lx: \", nonroot_leader, id) < 0)\n+      if (asprintf (&bit, \" %s0x%lx: \", nonroot_leader, id) < 0)\n \tgoto oom;\n       str = str_append (str, bit);\n       free (bit);\n@@ -236,7 +237,7 @@ ctf_dump_header (ctf_dict_t *fp, ctf_dump_state_t *state)\n     };\n   const char *verstr = NULL;\n \n-  if (asprintf (&str, \"Magic number: %x\\n\", hp->cth_magic) < 0)\n+  if (asprintf (&str, \"Magic number: 0x%x\\n\", hp->cth_magic) < 0)\n       goto err;\n   ctf_dump_append (state, str);\n \n@@ -454,26 +455,51 @@ ctf_dump_var (const char *name, ctf_id_t type, void *arg)\n   return 0;\n }\n \n+/* Report the number of digits in the hexadecimal representation of a type\n+   ID.  */\n+\n+static int\n+type_hex_digits (ctf_id_t id)\n+{\n+  int i = 0;\n+\n+  if (id == 0)\n+    return 1;\n+\n+  for (; id > 0; id >>= 4, i++);\n+  return i;\n+}\n+\n /* Dump a single member into the string in the membstate.  */\n static int\n ctf_dump_member (const char *name, ctf_id_t id, unsigned long offset,\n-\t\t  int depth, void *arg)\n+\t\t int depth, void *arg)\n {\n   ctf_dump_membstate_t *state = arg;\n   char *typestr = NULL;\n   char *bit = NULL;\n   ctf_encoding_t ep;\n   int has_encoding = 0;\n-  ssize_t i;\n \n-  for (i = 0; i < depth; i++)\n-    *state->cdm_str = str_append (*state->cdm_str, \"    \");\n+  /* Align neatly.  */\n+\n+  if (depth == 0)\n+    {\n+      if (asprintf (&state->cdm_toplevel_indent, \"     %*s\",\n+\t\t    type_hex_digits (id), \"\") < 0)\n+\tgoto oom;\n+    }\n+\n+  if (asprintf (&bit, \"%s%*s\", state->cdm_toplevel_indent, depth * 4, \"\") < 0)\n+    goto oom;\n+  *state->cdm_str = str_append (*state->cdm_str, bit);\n+  free (bit);\n \n   if ((typestr = ctf_type_aname (state->cdm_fp, id)) == NULL)\n     {\n       if (id == 0 || ctf_errno (state->cdm_fp) == ECTF_NONREPRESENTABLE)\n \t{\n-\t  if (asprintf (&bit, \"    [0x%lx] (type not represented in CTF)\",\n+\t  if (asprintf (&bit, \"[0x%lx] (type not represented in CTF)\",\n \t\t\toffset) < 0)\n \t    goto oom;\n \n@@ -491,7 +517,7 @@ ctf_dump_member (const char *name, ctf_id_t id, unsigned long offset,\n       has_encoding = 1;\n       ctf_type_encoding (state->cdm_fp, id, &ep);\n \n-      if (asprintf (&bit, \"    [0x%lx] (ID 0x%lx) (kind %i) %s%s%s:%i \"\n+      if (asprintf (&bit, \"[0x%lx] (ID 0x%lx) (kind %i) %s%s%s:%i \"\n \t\t    \"(aligned at 0x%lx\", offset, id,\n \t\t    ctf_type_kind (state->cdm_fp, id), typestr,\n \t\t    (name[0] != 0 && typestr[0] != 0) ? \" \" : \"\", name,\n@@ -501,7 +527,7 @@ ctf_dump_member (const char *name, ctf_id_t id, unsigned long offset,\n     }\n   else\n     {\n-      if (asprintf (&bit, \"    [0x%lx] (ID 0x%lx) (kind %i) %s%s%s \"\n+      if (asprintf (&bit, \"[0x%lx] (ID 0x%lx) (kind %i) %s%s%s \"\n \t\t    \"(aligned at 0x%lx\", offset, id,\n \t\t    ctf_type_kind (state->cdm_fp, id), typestr,\n \t\t    (name[0] != 0 && typestr[0] != 0) ? \" \" : \"\", name,\n@@ -540,7 +566,7 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n {\n   char *str;\n   ctf_dump_state_t *state = arg;\n-  ctf_dump_membstate_t membstate = { &str, state->cds_fp };\n+  ctf_dump_membstate_t membstate = { &str, state->cds_fp, NULL };\n   size_t len;\n \n   if ((str = ctf_dump_format_type (state->cds_fp, id, flag)) == NULL)\n@@ -558,6 +584,7 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n \t\t    _(\"cannot visit members dumping type 0x%lx\"), id);\n       goto err;\n     }\n+  free (membstate.cdm_toplevel_indent);\n \n   /* Trim off the last linefeed added by ctf_dump_member().  */\n   len = strlen (str);\n@@ -568,6 +595,7 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n   return 0;\n \n  err:\n+  free (membstate.cdm_toplevel_indent);\n   free (str);\n   return 0;\t\t\t\t/* Swallow the error.  */\n }\n@@ -583,7 +611,7 @@ ctf_dump_str (ctf_dict_t *fp, ctf_dump_state_t *state)\n \t fp->ctf_str[CTF_STRTAB_0].cts_len;)\n     {\n       char *str;\n-      if (asprintf (&str, \"%lx: %s\",\n+      if (asprintf (&str, \"0x%lx: %s\",\n \t\t    (unsigned long) (s - fp->ctf_str[CTF_STRTAB_0].cts_strs),\n \t\t    s) < 0)\n \treturn (ctf_set_errno (fp, errno));"
    }
  ]
}