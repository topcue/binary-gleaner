{
  "sha": "65109548f8fb13ac4a6c3311ea46a8b69c548576",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjUxMDk1NDhmOGZiMTNhYzRhNmMzMzExZWE0NmE4YjY5YzU0ODU3Ng==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-24T06:56:40Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-24T08:30:35Z"
    },
    "message": "Overlarge allocation in _bfd_generic_read_ar_hdr_mag\n\n\t* archive.c (_bfd_generic_read_ar_hdr_mag): Sanity check extended\n\tname size.  Use bfd_malloc rather than bfd_zmalloc, clearing just\n\tstruct areltdata.",
    "tree": {
      "sha": "cc7539657dcfe380b7090334d733e9ec4a4bbd98",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cc7539657dcfe380b7090334d733e9ec4a4bbd98"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/65109548f8fb13ac4a6c3311ea46a8b69c548576",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65109548f8fb13ac4a6c3311ea46a8b69c548576",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/65109548f8fb13ac4a6c3311ea46a8b69c548576",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65109548f8fb13ac4a6c3311ea46a8b69c548576/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5a814d6d96bc6426ae1fa8b0d1561ad081deb159",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5a814d6d96bc6426ae1fa8b0d1561ad081deb159",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5a814d6d96bc6426ae1fa8b0d1561ad081deb159"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 18,
    "deletions": 3
  },
  "files": [
    {
      "sha": "da8e05894f07729454a083374043a3edd8bce452",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65109548f8fb13ac4a6c3311ea46a8b69c548576/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65109548f8fb13ac4a6c3311ea46a8b69c548576/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=65109548f8fb13ac4a6c3311ea46a8b69c548576",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* archive.c (_bfd_generic_read_ar_hdr_mag): Sanity check extended\n+\tname size.  Use bfd_malloc rather than bfd_zmalloc, clearing just\n+\tstruct areltdata.\n+\n 2020-03-23  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* elflink.c (_bfd_elf_tls_setup): Mention .tdata in comment."
    },
    {
      "sha": "3423a336956a211eb707d0f2bff724e52ca6b12c",
      "filename": "bfd/archive.c",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65109548f8fb13ac4a6c3311ea46a8b69c548576/bfd/archive.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65109548f8fb13ac4a6c3311ea46a8b69c548576/bfd/archive.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archive.c?ref=65109548f8fb13ac4a6c3311ea46a8b69c548576",
      "patch": "@@ -488,6 +488,7 @@ _bfd_generic_read_ar_hdr_mag (bfd *abfd, const char *mag)\n   bfd_size_type parsed_size;\n   struct areltdata *ared;\n   char *filename = NULL;\n+  ufile_ptr filesize;\n   bfd_size_type namelen = 0;\n   bfd_size_type allocsize = sizeof (struct areltdata) + sizeof (struct ar_hdr);\n   char *allocptr = 0;\n@@ -538,11 +539,19 @@ _bfd_generic_read_ar_hdr_mag (bfd *abfd, const char *mag)\n     {\n       /* BSD-4.4 extended name */\n       namelen = atoi (&hdr.ar_name[3]);\n+      filesize = bfd_get_file_size (abfd);\n+      if (namelen > parsed_size\n+\t  || namelen > -allocsize - 2\n+\t  || (filesize != 0 && namelen > filesize))\n+\t{\n+\t  bfd_set_error (bfd_error_malformed_archive);\n+\t  return NULL;\n+\t}\n       allocsize += namelen + 1;\n       parsed_size -= namelen;\n       extra_size = namelen;\n \n-      allocptr = (char *) bfd_zmalloc (allocsize);\n+      allocptr = (char *) bfd_malloc (allocsize);\n       if (allocptr == NULL)\n \treturn NULL;\n       filename = (allocptr\n@@ -586,13 +595,13 @@ _bfd_generic_read_ar_hdr_mag (bfd *abfd, const char *mag)\n \n   if (!allocptr)\n     {\n-      allocptr = (char *) bfd_zmalloc (allocsize);\n+      allocptr = (char *) bfd_malloc (allocsize);\n       if (allocptr == NULL)\n \treturn NULL;\n     }\n \n+  memset (allocptr, 0, sizeof (struct areltdata));\n   ared = (struct areltdata *) allocptr;\n-\n   ared->arch_header = allocptr + sizeof (struct areltdata);\n   memcpy (ared->arch_header, &hdr, sizeof (struct ar_hdr));\n   ared->parsed_size = parsed_size;"
    }
  ]
}