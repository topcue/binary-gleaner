{
  "sha": "bdfc1e8a0b176257bfc700de755463d3aaf69849",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmRmYzFlOGEwYjE3NjI1N2JmYzcwMGRlNzU1NDYzZDNhYWY2OTg0OQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-10T07:29:52Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-10T07:29:52Z"
    },
    "message": "[gdb/cli] Don't let python colorize strip leading newlines\n\nConsider the test-case gdb.base/async.exp.  Using the executable, I run to\nmain, and land on a line advertised as line 26:\n...\n$ gdb outputs/gdb.base/async/async -ex start\nReading symbols from outputs/gdb.base/async/async...\nTemporary breakpoint 1 at 0x4004e4: file gdb.base/async.c, line 26.\nStarting program: outputs/gdb.base/async/async\n\nTemporary breakpoint 1, main () at gdb.base/async.c:26\n26       y = foo ();\n...\n\nBut actually, the line turns out to be line 28:\n...\n$ cat -n gdb.base/async.c\n    ...\n    26   y = 2;\n    27   z = 9;\n    28   y = foo ();\n...\n\nThis is caused by the following: the python colorizer initializes the lexer\nwith default options (no second argument to get_lexer_for_filename):\n...\n    def colorize(filename, contents):\n        # Don't want any errors.\n        try:\n            lexer = lexers.get_lexer_for_filename(filename)\n            formatter = formatters.TerminalFormatter()\n            return highlight(contents, lexer, formatter)\n...\nwhich include option stripnl=True, which strips leading and trailing newlines.\n\nThis causes the python colorizer to strip the two leading newlines of async.c.\n\nFix this by initializing the lexer with stripnl=False.\n\nBuild and reg-tested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-04-10  Tom de Vries  <tdevries@suse.de>\n\n\tPR cli/25808\n\t* python/lib/gdb/__init__.py: Initialize lexer with stripnl=False.\n\ngdb/testsuite/ChangeLog:\n\n2020-04-10  Tom de Vries  <tdevries@suse.de>\n\n\tPR cli/25808\n\t* gdb.base/style.c: Add leading newlines.\n\t* gdb.base/style.exp: Use gdb_get_line_number to get specific lines.\n\tCheck listing of main's one-line body.",
    "tree": {
      "sha": "e6bc80562d94cb41dbdbcd0d129da3801a0e9803",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e6bc80562d94cb41dbdbcd0d129da3801a0e9803"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bdfc1e8a0b176257bfc700de755463d3aaf69849",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bdfc1e8a0b176257bfc700de755463d3aaf69849",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bdfc1e8a0b176257bfc700de755463d3aaf69849",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bdfc1e8a0b176257bfc700de755463d3aaf69849/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6993bae0747240e6a632233d9700bd72f46fd55d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6993bae0747240e6a632233d9700bd72f46fd55d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6993bae0747240e6a632233d9700bd72f46fd55d"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 24,
    "deletions": 2
  },
  "files": [
    {
      "sha": "2c347fc473d723a4de0b2d015ba6dd7b15c6f0ed",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bdfc1e8a0b176257bfc700de755463d3aaf69849",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-10  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR cli/25808\n+\t* python/lib/gdb/__init__.py: Initialize lexer with stripnl=False.\n+\n 2020-04-09  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* MAINTAINERS (Global Maintainers): Add Tom de Vries."
    },
    {
      "sha": "3dfb51b2af937381778c89b59d64447db3c65a4f",
      "filename": "gdb/python/lib/gdb/__init__.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/python/lib/gdb/__init__.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/python/lib/gdb/__init__.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/lib/gdb/__init__.py?ref=bdfc1e8a0b176257bfc700de755463d3aaf69849",
      "patch": "@@ -216,7 +216,7 @@ def find_pc_line(pc):\n     def colorize(filename, contents):\n         # Don't want any errors.\n         try:\n-            lexer = lexers.get_lexer_for_filename(filename)\n+            lexer = lexers.get_lexer_for_filename(filename, stripnl=False)\n             formatter = formatters.TerminalFormatter()\n             return highlight(contents, lexer, formatter)\n         except:"
    },
    {
      "sha": "023f5a815c612f166698d285186cfd23554bf11f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=bdfc1e8a0b176257bfc700de755463d3aaf69849",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-10  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR cli/25808\n+\t* gdb.base/style.c: Add leading newlines.\n+\t* gdb.base/style.exp: Use gdb_get_line_number to get specific lines.\n+\tCheck listing of main's one-line body.\n+\n 2020-04-08  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (psymtabs_p): New proc."
    },
    {
      "sha": "4e0e0dfcd7739de9134f06fbf4d788845d39cc69",
      "filename": "gdb/testsuite/gdb.base/style.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/testsuite/gdb.base/style.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/testsuite/gdb.base/style.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style.c?ref=bdfc1e8a0b176257bfc700de755463d3aaf69849",
      "patch": "@@ -1,3 +1,7 @@\n+\n+\n+/* The leading newlines here are intentional, do not remove.  They are used to\n+   test that the source highlighter doesn't strip them.  */\n /* Copyright 2018-2020 Free Software Foundation, Inc.\n \n    This program is free software; you can redistribute it and/or modify"
    },
    {
      "sha": "1071b023aa600348193aa7c882e381b3a71c117c",
      "filename": "gdb/testsuite/gdb.base/style.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/testsuite/gdb.base/style.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bdfc1e8a0b176257bfc700de755463d3aaf69849/gdb/testsuite/gdb.base/style.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style.exp?ref=bdfc1e8a0b176257bfc700de755463d3aaf69849",
      "patch": "@@ -39,6 +39,11 @@ save_vars { env(TERM) } {\n \treturn\n     }\n \n+    # Check that the source highlighter has not stripped away the leading\n+    # newlines.\n+    set main_line [gdb_get_line_number \"break here\"]\n+    gdb_test \"list $main_line,$main_line\" \"return.*some_called_function.*\"\n+\n     gdb_test_no_output \"set style enabled on\"\n \n     set main_expr [style main function]\n@@ -79,8 +84,9 @@ save_vars { env(TERM) } {\n     }\n \n     if {$test_macros} {\n+\tset macro_line [gdb_get_line_number \"\\#define SOME_MACRO\"]\n \tgdb_test \"info macro SOME_MACRO\" \\\n-\t    \"Defined at $base_file_expr:16\\r\\n#define SOME_MACRO 23\"\n+\t    \"Defined at $base_file_expr:$macro_line\\r\\n#define SOME_MACRO 23\"\n     }\n \n     set func [style some_called_function function]"
    }
  ]
}