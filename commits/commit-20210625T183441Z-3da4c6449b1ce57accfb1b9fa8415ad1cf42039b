{
  "sha": "3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2RhNGM2NDQ5YjFjZTU3YWNjZmIxYjlmYTg0MTVhZDFjZjQyMDM5Yg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-06-25T18:34:41Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-06-25T18:34:41Z"
    },
    "message": "Change how .debug_aranges padding is skipped\n\nWhen GCC emits .debug_aranges, it adds padding to align the contents\nto two times the address size.  GCC has done this for many years --\nbut there is nothing in the DWARF standard that says this should be\ndone, and LLVM does not seem to add this padding.\n\nIt's simple to detect if the padding exists, though: if the contents\nof one .debug_aranges CU (excluding the header) are not a multiple of\nthe alignment that GCC uses, then anything extra must be padding.\n\nThis patch changes gdb to correctly read both styles.  It removes the\nrequirement that the padding bytes be zero, as this seemed\nunnecessarily pedantic to me.\n\ngdb/ChangeLog\n2021-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (create_addrmap_from_aranges): Change padding\n\tlogic.\n\ngdb/testsuite/ChangeLog\n2021-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* lib/gdb.exp (add_gdb_index, ensure_gdb_index): Add \"style\"\n\tparameter.\n\t* gdb.rust/dwindex.exp: New file.\n\t* gdb.rust/dwindex.rs: New file.",
    "tree": {
      "sha": "eb17dd638c517d85674b7e7cd14e3e36aff95b8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eb17dd638c517d85674b7e7cd14e3e36aff95b8f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3e9f1ca148ca2ecf6cd008ed2678a4cbe253620b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e9f1ca148ca2ecf6cd008ed2678a4cbe253620b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3e9f1ca148ca2ecf6cd008ed2678a4cbe253620b"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 93,
    "deletions": 16
  },
  "files": [
    {
      "sha": "53b3c31fd84edcc4e455b43550de0adf1654c446",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (create_addrmap_from_aranges): Change padding\n+\tlogic.\n+\n 2021-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (process_psymtab_comp_unit): Don't set 'lang'."
    },
    {
      "sha": "671c607a3b3a871a47cdf9f6fdad1111d5d66457",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 12,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
      "patch": "@@ -2637,18 +2637,12 @@ create_addrmap_from_aranges (dwarf2_per_objfile *per_objfile,\n \n       /* Must pad to an alignment boundary that is twice the address\n \t size.  It is undocumented by the DWARF standard but GCC does\n-\t use it.  */\n-      for (size_t padding = ((-(addr - section->buffer))\n-\t\t\t     & (2 * address_size - 1));\n-\t   padding > 0; padding--)\n-\tif (*addr++ != 0)\n-\t  {\n-\t    warning (_(\"Section .debug_aranges in %s entry at offset %s \"\n-\t\t       \"padding is not zero, ignoring .debug_aranges.\"),\n-\t\t     objfile_name (objfile),\n-\t\t     plongest (entry_addr - section->buffer));\n-\t    return;\n-\t  }\n+\t use it.  However, not every compiler does this.  We can see\n+\t whether it has happened by looking at the total length of the\n+\t contents of the aranges for this CU -- it if isn't a multiple\n+\t of twice the address size, then we skip any leftover\n+\t bytes.  */\n+      addr += (entry_end - addr) % (2 * address_size);\n \n       for (;;)\n \t{"
    },
    {
      "sha": "fa5476587e3d6ca7bf24b44088bae2e5e67f5fed",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* lib/gdb.exp (add_gdb_index, ensure_gdb_index): Add \"style\"\n+\tparameter.\n+\t* gdb.rust/dwindex.exp: New file.\n+\t* gdb.rust/dwindex.rs: New file.\n+\n 2021-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.python/py-breakpoint.c (do_throw): New function."
    },
    {
      "sha": "1bc61993240a7016101b90345b037b55ee424eb9",
      "filename": "gdb/testsuite/gdb.rust/dwindex.exp",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/gdb.rust/dwindex.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/gdb.rust/dwindex.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/dwindex.exp?ref=3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
      "patch": "@@ -0,0 +1,43 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that a rustc-produced .debug_aranges can be read.\n+\n+load_lib rust-support.exp\n+if {[skip_rust_tests]} {\n+    continue\n+}\n+\n+standard_testfile .rs\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug rust}]} {\n+    return -1\n+}\n+\n+if {[ensure_gdb_index $binfile \"-dwarf-5\"] == -1} {\n+    return -1\n+}\n+\n+gdb_exit\n+gdb_start\n+set testname \"file with aranges\"\n+gdb_test_multiple \"file $binfile\" \"\" {\n+    -re \"warning: Section \\\\.debug_aranges\" {\n+\tfail $testname\n+    }\n+    -re -wrap \".*\" {\n+\tpass $testname\n+    }\n+}"
    },
    {
      "sha": "439876d0630cad2edbe0faf2bac059b9bd6de39f",
      "filename": "gdb/testsuite/gdb.rust/dwindex.rs",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/gdb.rust/dwindex.rs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/gdb.rust/dwindex.rs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/dwindex.rs?ref=3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
      "patch": "@@ -0,0 +1,22 @@\n+// Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+// This program is free software; you can redistribute it and/or modify\n+// it under the terms of the GNU General Public License as published by\n+// the Free Software Foundation; either version 3 of the License, or\n+// (at your option) any later version.\n+//\n+// This program is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+#![allow(unused_assignments)]\n+\n+\n+fn main () {\n+}"
    },
    {
      "sha": "38f40fdddb5d8c67b5b685b0c19dd9cfd32441ba",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3da4c6449b1ce57accfb1b9fa8415ad1cf42039b/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=3da4c6449b1ce57accfb1b9fa8415ad1cf42039b",
      "patch": "@@ -7688,12 +7688,15 @@ proc verify_psymtab_expanded { filename readin } {\n # Add a .gdb_index section to PROGRAM.\n # PROGRAM is assumed to be the output of standard_output_file.\n # Returns the 0 if there is a failure, otherwise 1.\n+#\n+# STYLE controls which style of index to add, if needed.  The empty\n+# string (the default) means .gdb_index; \"-dwarf-5\" means .debug_names.\n \n-proc add_gdb_index { program } {\n+proc add_gdb_index { program {style \"\"} } {\n     global srcdir GDB env BUILD_DATA_DIRECTORY\n     set contrib_dir \"$srcdir/../contrib\"\n     set env(GDB) \"$GDB --data-directory=$BUILD_DATA_DIRECTORY\"\n-    set result [catch \"exec $contrib_dir/gdb-add-index.sh $program\" output]\n+    set result [catch \"exec $contrib_dir/gdb-add-index.sh $style $program\" output]\n     if { $result != 0 } {\n \tverbose -log \"result is $result\"\n \tverbose -log \"output is $output\"\n@@ -7707,8 +7710,11 @@ proc add_gdb_index { program } {\n # (.gdb_index/.debug_names).  Gdb doesn't support building an index from a\n # program already using one.  Return 1 if a .gdb_index was added, return 0\n # if it already contained an index, and -1 if an error occurred.\n+#\n+# STYLE controls which style of index to add, if needed.  The empty\n+# string (the default) means .gdb_index; \"-dwarf-5\" means .debug_names.\n \n-proc ensure_gdb_index { binfile } {\n+proc ensure_gdb_index { binfile {style \"\"} } {\n     set testfile [file tail $binfile]\n     set test \"check if index present\"\n     gdb_test_multiple \"mt print objfiles ${testfile}\" $test {\n@@ -7719,7 +7725,7 @@ proc ensure_gdb_index { binfile } {\n \t    return 0\n \t}\n \t-re -wrap \"Psymtabs.*\" {\n-\t    if { [add_gdb_index $binfile] != \"1\" } {\n+\t    if { [add_gdb_index $binfile $style] != \"1\" } {\n \t\treturn -1\n \t    }\n \t    return 1"
    }
  ]
}