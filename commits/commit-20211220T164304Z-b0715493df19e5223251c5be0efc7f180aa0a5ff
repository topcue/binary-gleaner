{
  "sha": "b0715493df19e5223251c5be0efc7f180aa0a5ff",
  "node_id": "C_kwDOANOeidoAKGIwNzE1NDkzZGYxOWU1MjIzMjUxYzViZTBlZmM3ZjE4MGFhMGE1ZmY",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-20T16:40:14Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-20T16:43:04Z"
    },
    "message": "Remove puts_debug\n\nI noticed that puts_debug isn't used in the tree.  git log tells me\nthat the last use was removed in 2015:\n\n    commit 40e0b27177e747600d3ec186458fe0e482a1cf77\n    Author: Pedro Alves <palves@redhat.com>\n    Date:   Mon Aug 24 15:40:26 2015 +0100\n\n\tDelete the remaining ROM monitor targets\n\n... and this commit mentions that the code being removed here probably\nhadn't worked for 6 years prior to that.\n\nBased on this, I'm removing puts_debug.  I don't think it's useful.\nTested by rebuilding.",
    "tree": {
      "sha": "74f76540d79a7f34a69096b96d0310412e529ae9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/74f76540d79a7f34a69096b96d0310412e529ae9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b0715493df19e5223251c5be0efc7f180aa0a5ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0715493df19e5223251c5be0efc7f180aa0a5ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b0715493df19e5223251c5be0efc7f180aa0a5ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0715493df19e5223251c5be0efc7f180aa0a5ff/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dde238e063376f96d52ff27f11b31a447ddbdfea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dde238e063376f96d52ff27f11b31a447ddbdfea",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dde238e063376f96d52ff27f11b31a447ddbdfea"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 0,
    "deletions": 87
  },
  "files": [
    {
      "sha": "7d27f9ba8019a3f309402e0e7b4ebe73215cf07c",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 0,
      "deletions": 85,
      "changes": 85,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0715493df19e5223251c5be0efc7f180aa0a5ff/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0715493df19e5223251c5be0efc7f180aa0a5ff/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=b0715493df19e5223251c5be0efc7f180aa0a5ff",
      "patch": "@@ -2041,91 +2041,6 @@ fputc_filtered (int c, struct ui_file *stream)\n   return c;\n }\n \n-/* puts_debug is like fputs_unfiltered, except it prints special\n-   characters in printable fashion.  */\n-\n-void\n-puts_debug (char *prefix, char *string, char *suffix)\n-{\n-  int ch;\n-\n-  /* Print prefix and suffix after each line.  */\n-  static int new_line = 1;\n-  static int return_p = 0;\n-  static const char *prev_prefix = \"\";\n-  static const char *prev_suffix = \"\";\n-\n-  if (*string == '\\n')\n-    return_p = 0;\n-\n-  /* If the prefix is changing, print the previous suffix, a new line,\n-     and the new prefix.  */\n-  if ((return_p || (strcmp (prev_prefix, prefix) != 0)) && !new_line)\n-    {\n-      fputs_unfiltered (prev_suffix, gdb_stdlog);\n-      fputs_unfiltered (\"\\n\", gdb_stdlog);\n-      fputs_unfiltered (prefix, gdb_stdlog);\n-    }\n-\n-  /* Print prefix if we printed a newline during the previous call.  */\n-  if (new_line)\n-    {\n-      new_line = 0;\n-      fputs_unfiltered (prefix, gdb_stdlog);\n-    }\n-\n-  prev_prefix = prefix;\n-  prev_suffix = suffix;\n-\n-  /* Output characters in a printable format.  */\n-  while ((ch = *string++) != '\\0')\n-    {\n-      switch (ch)\n-\t{\n-\tdefault:\n-\t  if (gdb_isprint (ch))\n-\t    fputc_unfiltered (ch, gdb_stdlog);\n-\n-\t  else\n-\t    fprintf_unfiltered (gdb_stdlog, \"\\\\x%02x\", ch & 0xff);\n-\t  break;\n-\n-\tcase '\\\\':\n-\t  fputs_unfiltered (\"\\\\\\\\\", gdb_stdlog);\n-\t  break;\n-\tcase '\\b':\n-\t  fputs_unfiltered (\"\\\\b\", gdb_stdlog);\n-\t  break;\n-\tcase '\\f':\n-\t  fputs_unfiltered (\"\\\\f\", gdb_stdlog);\n-\t  break;\n-\tcase '\\n':\n-\t  new_line = 1;\n-\t  fputs_unfiltered (\"\\\\n\", gdb_stdlog);\n-\t  break;\n-\tcase '\\r':\n-\t  fputs_unfiltered (\"\\\\r\", gdb_stdlog);\n-\t  break;\n-\tcase '\\t':\n-\t  fputs_unfiltered (\"\\\\t\", gdb_stdlog);\n-\t  break;\n-\tcase '\\v':\n-\t  fputs_unfiltered (\"\\\\v\", gdb_stdlog);\n-\t  break;\n-\t}\n-\n-      return_p = ch == '\\r';\n-    }\n-\n-  /* Print suffix if we printed a newline.  */\n-  if (new_line)\n-    {\n-      fputs_unfiltered (suffix, gdb_stdlog);\n-      fputs_unfiltered (\"\\n\", gdb_stdlog);\n-    }\n-}\n-\n-\n /* Print a variable number of ARGS using format FORMAT.  If this\n    information is going to put the amount written (since the last call\n    to REINITIALIZE_MORE_FILTER or the last page break) over the page size,"
    },
    {
      "sha": "4d20ebdffc9365b32f5941fdbc0833c2be56f4b0",
      "filename": "gdb/utils.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0715493df19e5223251c5be0efc7f180aa0a5ff/gdb/utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0715493df19e5223251c5be0efc7f180aa0a5ff/gdb/utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.h?ref=b0715493df19e5223251c5be0efc7f180aa0a5ff",
      "patch": "@@ -447,8 +447,6 @@ extern void puts_unfiltered (const char *);\n \n extern void puts_filtered_tabular (char *string, int width, int right);\n \n-extern void puts_debug (char *prefix, char *string, char *suffix);\n-\n extern void vprintf_filtered (const char *, va_list) ATTRIBUTE_PRINTF (1, 0);\n \n extern void vfprintf_filtered (struct ui_file *, const char *, va_list)"
    }
  ]
}