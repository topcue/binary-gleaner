{
  "sha": "3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2M1YzM2NDk3MjliYTNmOTRmOWQyOGYxMGFhMjI3MGM4YzdlNGFhOQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-15T10:22:47Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-15T10:22:47Z"
    },
    "message": "Fix gdb.multi/multi-kill.exp\n\nThe previous patch misssed declaring the 'testpid' array as namespace\nvariable.  While it at, might as well go back to having start_inferior\nrefer to the \"global\" testpid, using \"variable\" too.\n\ngdb/testsuite/ChangeLog:\n2020-05-15  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.multi/multi-kill.exp (start_inferior): Remove\n\t'testpid' parameter.  Refer to namespace variable directly.\n\t(testpid): Declare as namespace variable.",
    "tree": {
      "sha": "724c501d4ff84e8a06c89425bf505d6ce3e88693",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/724c501d4ff84e8a06c89425bf505d6ce3e88693"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "272c36b87f81fd64e5f4669730da72c39d0716b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272c36b87f81fd64e5f4669730da72c39d0716b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/272c36b87f81fd64e5f4669730da72c39d0716b3"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 12,
    "deletions": 5
  },
  "files": [
    {
      "sha": "b35d10e01bdac55253d8a1e1541ba95eb76ad5c5",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-15  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.multi/multi-kill.exp (start_inferior): Remove\n+\t'testpid' parameter.  Refer to namespace variable directly.\n+\t(testpid): Declare as namespace variable.\n+\n 2020-05-15  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.multi/multi-kill.exp: Wrap in namespace."
    },
    {
      "sha": "b4853a1ea406adaa10430220a06b7f850d53831f",
      "filename": "gdb/testsuite/gdb.multi/multi-kill.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9/gdb/testsuite/gdb.multi/multi-kill.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9/gdb/testsuite/gdb.multi/multi-kill.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/multi-kill.exp?ref=3c5c3649729ba3f94f9d28f10aa2270c8c7e4aa9",
      "patch": "@@ -44,9 +44,9 @@ namespace eval $testfile {\n \n # Start inferior NUM and record its PID in the TESTPID array.\n \n-proc start_inferior {num testpid} {\n+proc start_inferior {num} {\n     with_test_prefix \"start_inferior $num\" {\n-\tupvar $testpid tpid\n+\tvariable testpid\n \tglobal binfile srcfile\n \n \tif {$num != 1} {\n@@ -62,8 +62,8 @@ proc start_inferior {num testpid} {\n \tgdb_run_cmd\n \tgdb_test \"\" \".*reakpoint .*, initialized .*${srcfile}.*\" \"run\"\n \n-\tset tpid($num) [get_integer_valueof \"pid\" -1]\n-\tif {$tpid($num) == -1} {\n+\tset testpid($num) [get_integer_valueof \"pid\" -1]\n+\tif {$testpid($num) == -1} {\n \t    return -1\n \t}\n \n@@ -76,10 +76,11 @@ proc start_inferior {num testpid} {\n set NUM_INFS 10\n \n # The array holding each inferior's PID, indexed by inferior number.\n+variable testpid\n array set testpid {}\n \n for {set i 1} {$i <= $NUM_INFS} {incr i} {\n-    if {[start_inferior $i testpid] < 0} {\n+    if {[start_inferior $i] < 0} {\n \treturn -1\n     }\n }"
    }
  ]
}