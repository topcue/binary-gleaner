{
  "sha": "9a8041fd94b7b5c12cb802f87648cce954d18d2a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWE4MDQxZmQ5NGI3YjVjMTJjYjgwMmY4NzY0OGNjZTk1NGQxOGQyYQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-04-19T11:28:35Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-04-19T11:28:35Z"
    },
    "message": "gas: drop sprint_value()\n\nIts (documented) behavior is unhelpful in particular in 64-bit build\nenvironments: While printing large 32-bit numbers in decimal already\nisn't very meaningful to most people, this even more so goes for yet\nlarger 64-bit numbers. bfd_sprintf_vma() still tries to limit the number\nof digits printed (without depending on a build system property), but\nuniformly produces hex output.",
    "tree": {
      "sha": "0c3070b7a9525345185ba17ef4ff6efba4be9978",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c3070b7a9525345185ba17ef4ff6efba4be9978"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9a8041fd94b7b5c12cb802f87648cce954d18d2a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a8041fd94b7b5c12cb802f87648cce954d18d2a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9a8041fd94b7b5c12cb802f87648cce954d18d2a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a8041fd94b7b5c12cb802f87648cce954d18d2a/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4dee4f3ea143a8910de487a810e972152154292d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4dee4f3ea143a8910de487a810e972152154292d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4dee4f3ea143a8910de487a810e972152154292d"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 19,
    "deletions": 30
  },
  "files": [
    {
      "sha": "2c498a6bceaabdf1c0c4c3a43f044811ef091544",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=9a8041fd94b7b5c12cb802f87648cce954d18d2a",
      "patch": "@@ -1,3 +1,14 @@\n+2021-04-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* as.h (sprint_value): Delete.\n+\t* messages.c (sprint_value): Likewise.\n+\t* config/tc-i386.c (offset_in_range): Use bfd_sprintf_vma in\n+\tplace of sprint_value.\n+\t* config/tc-s390.c (s390_insert_operand): Likewise.\n+\t* doc/internals.texi (sprint_value): Delete section.\n+\t* write.c (fixup_segment): Likewise.\n+\t(relax_segment): Likewise.\n+\n 2021-04-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n \t* testsuite/gas/aarch64/rme-invalid.d: New test."
    },
    {
      "sha": "14a768f8889778bf79c760bf0fed6275944b3f16",
      "filename": "gas/as.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/as.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/as.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/as.h?ref=9a8041fd94b7b5c12cb802f87648cce954d18d2a",
      "patch": "@@ -428,7 +428,6 @@ PRINTF_WHERE_LIKE (as_warn_where);\n \n void   as_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n void   signal_init (void);\n-void   sprint_value (char *, addressT);\n int    had_errors (void);\n int    had_warnings (void);\n void   as_warn_value_out_of_range (const char *, offsetT, offsetT, offsetT,"
    },
    {
      "sha": "e49d0f53f0b929483ba0657d2eb1de90eed0dc81",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=9a8041fd94b7b5c12cb802f87648cce954d18d2a",
      "patch": "@@ -2556,8 +2556,8 @@ offset_in_range (offsetT val, int size)\n     {\n       char buf1[40], buf2[40];\n \n-      sprint_value (buf1, val);\n-      sprint_value (buf2, val & mask);\n+      bfd_sprintf_vma (stdoutput, buf1, val);\n+      bfd_sprintf_vma (stdoutput, buf2, val & mask);\n       as_warn (_(\"%s shortened to %s\"), buf1, buf2);\n     }\n   return val & mask;"
    },
    {
      "sha": "064dd33ad4e5d0ad6382dab7fc3ad8e615144822",
      "filename": "gas/config/tc-s390.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/config/tc-s390.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/config/tc-s390.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-s390.c?ref=9a8041fd94b7b5c12cb802f87648cce954d18d2a",
      "patch": "@@ -626,7 +626,7 @@ s390_insert_operand (unsigned char *insn,\n \t      min <<= 1;\n \t      max <<= 1;\n \t    }\n-\t  sprint_value (buf, val);\n+\t  bfd_sprintf_vma (stdoutput, buf, val);\n \t  if (file == (char *) NULL)\n \t    as_bad (err, buf, (int) min, (int) max);\n \t  else"
    },
    {
      "sha": "91ef97507df89670f2e84f6058501c8a600c35ff",
      "filename": "gas/doc/internals.texi",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/doc/internals.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/doc/internals.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/internals.texi?ref=9a8041fd94b7b5c12cb802f87648cce954d18d2a",
      "patch": "@@ -1918,13 +1918,6 @@ after all input has been read, but messages about fixups should refer to the\n original filename and line number that they are applicable to.\n @end deftypefun\n \n-@deftypefun @{@} void sprint_value (char *@var{buf}, valueT @var{val})\n-This function is helpful for converting a @code{valueT} value into printable\n-format, in case it's wider than modes that @code{*printf} can handle.  If the\n-type is narrow enough, a decimal number will be produced; otherwise, it will be\n-in hexadecimal.  The value itself is not examined to make this determination.\n-@end deftypefun\n-\n @node Test suite\n @section Test suite\n @cindex test suite"
    },
    {
      "sha": "62f931281575940ecc027ad66b881d0bc68c0c00",
      "filename": "gas/messages.c",
      "status": "modified",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/messages.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/messages.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/messages.c?ref=9a8041fd94b7b5c12cb802f87648cce954d18d2a",
      "patch": "@@ -356,22 +356,6 @@ signal_init (void)\n \n /* Support routines.  */\n \n-void\n-sprint_value (char *buf, valueT val)\n-{\n-  if (sizeof (val) <= sizeof (long))\n-    {\n-      sprintf (buf, \"%ld\", (long) val);\n-      return;\n-    }\n-  if (sizeof (val) <= sizeof (bfd_vma))\n-    {\n-      sprintf_vma (buf, val);\n-      return;\n-    }\n-  abort ();\n-}\n-\n #define HEX_MAX_THRESHOLD\t1024\n #define HEX_MIN_THRESHOLD\t-(HEX_MAX_THRESHOLD)\n "
    },
    {
      "sha": "682e28f3834658a0eeff211770b559bf6ae8a666",
      "filename": "gas/write.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a8041fd94b7b5c12cb802f87648cce954d18d2a/gas/write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/write.c?ref=9a8041fd94b7b5c12cb802f87648cce954d18d2a",
      "patch": "@@ -1110,9 +1110,9 @@ fixup_segment (fixS *fixP, segT this_segment)\n \t      if ((add_number & mask) != 0 && (add_number & mask) != mask)\n \t\t{\n \t\t  char buf[50], buf2[50];\n-\t\t  sprint_value (buf, fragP->fr_address + fixP->fx_where);\n+\t\t  bfd_sprintf_vma (stdoutput, buf, fragP->fr_address + fixP->fx_where);\n \t\t  if (add_number > 1000)\n-\t\t    sprint_value (buf2, add_number);\n+\t\t    bfd_sprintf_vma (stdoutput, buf2, add_number);\n \t\t  else\n \t\t    sprintf (buf2, \"%ld\", (long) add_number);\n \t\t  as_bad_where (fixP->fx_file, fixP->fx_line,\n@@ -2866,7 +2866,9 @@ relax_segment (struct frag *segment_frag_root, segT segment, int pass)\n \t\t\t  if (flag_warn_displacement)\n \t\t\t    {\n \t\t\t      char buf[50];\n-\t\t\t      sprint_value (buf, (addressT) lie->addnum);\n+\n+\t\t\t      bfd_sprintf_vma (stdoutput, buf,\n+\t\t\t\t\t       (addressT) lie->addnum);\n \t\t\t      as_warn_where (fragP->fr_file, fragP->fr_line,\n \t\t\t\t\t     _(\".word %s-%s+%s didn't fit\"),\n \t\t\t\t\t     S_GET_NAME (lie->add),"
    }
  ]
}