{
  "sha": "3293b4f66797bb2ccd3dbbf170249556fc16ced7",
  "node_id": "C_kwDOANOeidoAKDMyOTNiNGY2Njc5N2JiMmNjZDNkYmJmMTcwMjQ5NTU2ZmMxNmNlZDc",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@axis.com",
      "date": "2022-02-14T22:50:24Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2022-02-14T22:50:24Z"
    },
    "message": "sim/testsuite/cris: Assembler testcase for PRIx32 usage bug\n\nSeveral C test-cases exposed the bug, but let's have one for\npeople who test using just the assembler and linker.\n\n\t* asm/endmem1.ms: New test.",
    "tree": {
      "sha": "5b99a13a00665f716090401e6f87eccda8fd7c83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5b99a13a00665f716090401e6f87eccda8fd7c83"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3293b4f66797bb2ccd3dbbf170249556fc16ced7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3293b4f66797bb2ccd3dbbf170249556fc16ced7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3293b4f66797bb2ccd3dbbf170249556fc16ced7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3293b4f66797bb2ccd3dbbf170249556fc16ced7/comments",
  "author": {
    "login": "hpataxisdotcom",
    "id": 80339731,
    "node_id": "MDQ6VXNlcjgwMzM5NzMx",
    "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hpataxisdotcom",
    "html_url": "https://github.com/hpataxisdotcom",
    "followers_url": "https://api.github.com/users/hpataxisdotcom/followers",
    "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}",
    "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions",
    "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs",
    "repos_url": "https://api.github.com/users/hpataxisdotcom/repos",
    "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "9d67b0a0978e9651db74aa667be793420e7e4817",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d67b0a0978e9651db74aa667be793420e7e4817",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9d67b0a0978e9651db74aa667be793420e7e4817"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 47,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ff9e334c38a97f607814aae28a7cbabf8aebd54e",
      "filename": "sim/testsuite/cris/asm/endmem1.ms",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3293b4f66797bb2ccd3dbbf170249556fc16ced7/sim/testsuite/cris/asm/endmem1.ms",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3293b4f66797bb2ccd3dbbf170249556fc16ced7/sim/testsuite/cris/asm/endmem1.ms",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cris/asm/endmem1.ms?ref=3293b4f66797bb2ccd3dbbf170249556fc16ced7",
      "patch": "@@ -0,0 +1,47 @@\n+# mach: crisv3 crisv8 crisv10 crisv32\n+\n+; Check that the simulator and the program agrees on the\n+; value of endmem; the base point for further allocations.\n+\n+ .include \"testutils.inc\"\n+ start\n+\n+; First, get the end of memory by calling brk with 0 to get\n+; the current value.\n+ clear.d $r10\n+ movu.w 0x2d,$r9\n+ break 13\n+\n+; Get one more 8192-byte page.\n+ addu.w 8192,$r10\n+\n+; Save it in a (call- and) syscall-saved register.\n+ move.d $r10,$r0\n+\n+; Call brk again to raise the value.\n+ movu.w 0x2d,$r9\n+ break 13\n+\n+; If the simulator messed up internally, it'd have exited\n+; with an error at the brk call.  But, let's sanity-check\n+; the return-value: it should be the same as the input and\n+; the allocated memory should be accessible.\n+ cmp.d $r10,$r0\n+ beq 0f\n+ nop\n+\n+1:\n+ fail\n+\n+0:\n+; Check that we can write and read the last address on that\n+; page.\n+ subq 4,$r10\n+ move.d 0xbad1d101,$r12\n+ move.d $r12,[$r10]\n+ move.d [$r10],$r11\n+ cmp.d $r11,$r12\n+ bne 1b\n+ nop\n+\n+ pass"
    }
  ]
}