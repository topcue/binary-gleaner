{
  "sha": "7e7a35fbca94c5bfe45781067c75671ba508a0c8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2U3YTM1ZmJjYTk0YzViZmU0NTc4MTA2N2M3NTY3MWJhNTA4YTBjOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-21T22:10:44Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-21T22:57:31Z"
    },
    "message": "Shrink size of dwarf2_per_cu_data\n\nI noticed some holes in struct dwarf2_per_cu_data.  This patch\nrearranges the type slightly, and shrinks the size of some fields.\nThis reduces it from 136 bytes to 112 bytes (on x86-64).\n\nI also reduced the size of the DWARF \"version\" fields in a couple of\nspots.  It seemed needless to use a short to hold a value that ranges\nfrom 2 to 5, and this also helped the goal of shrinking\ndwarf2_per_cu_data.\n\n2021-04-21  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.h (struct dwarf2_per_cu_data) <dwarf_version>: Now\n\tunsigned char.\n\t(struct dwarf2_per_cu_data): Rearrange.\n\t* dwarf2/comp-unit.h (struct comp_unit_head) <version>: Now\n\tunsigned char.\n\t(struct comp_unit_head): Rearrange.\n\t* dwarf2/comp-unit.c (read_comp_unit_head): Update.",
    "tree": {
      "sha": "2df6aaa394da1f326582028063cbffeb10ca189a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2df6aaa394da1f326582028063cbffeb10ca189a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7e7a35fbca94c5bfe45781067c75671ba508a0c8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e7a35fbca94c5bfe45781067c75671ba508a0c8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7e7a35fbca94c5bfe45781067c75671ba508a0c8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e7a35fbca94c5bfe45781067c75671ba508a0c8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6d5702a5eb313c8c3195edc21eebf6ef312a3fcc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d5702a5eb313c8c3195edc21eebf6ef312a3fcc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6d5702a5eb313c8c3195edc21eebf6ef312a3fcc"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 34,
    "deletions": 24
  },
  "files": [
    {
      "sha": "20558b5a7648d4f0bbfd04d09929d72e6371be78",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7e7a35fbca94c5bfe45781067c75671ba508a0c8",
      "patch": "@@ -1,3 +1,13 @@\n+2021-04-21  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.h (struct dwarf2_per_cu_data) <dwarf_version>: Now\n+\tunsigned char.\n+\t(struct dwarf2_per_cu_data): Rearrange.\n+\t* dwarf2/comp-unit.h (struct comp_unit_head) <version>: Now\n+\tunsigned char.\n+\t(struct comp_unit_head): Rearrange.\n+\t* dwarf2/comp-unit.c (read_comp_unit_head): Update.\n+\n 2021-04-21  Tom de Vries  <tdevries@suse.de>\n \n \tPR build/27681"
    },
    {
      "sha": "e22f2e9a91c670270267f6a934a7278c0df18ec2",
      "filename": "gdb/dwarf2/comp-unit.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/dwarf2/comp-unit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/dwarf2/comp-unit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/comp-unit.c?ref=7e7a35fbca94c5bfe45781067c75671ba508a0c8",
      "patch": "@@ -48,11 +48,12 @@ read_comp_unit_head (struct comp_unit_head *cu_header,\n   cu_header->initial_length_size = bytes_read;\n   cu_header->offset_size = (bytes_read == 4) ? 4 : 8;\n   info_ptr += bytes_read;\n-  cu_header->version = read_2_bytes (abfd, info_ptr);\n-  if (cu_header->version < 2 || cu_header->version > 5)\n+  unsigned version = read_2_bytes (abfd, info_ptr);\n+  if (version < 2 || version > 5)\n     error (_(\"Dwarf Error: wrong version in compilation unit header \"\n \t   \"(is %d, should be 2, 3, 4 or 5) [in module %s]\"),\n-\t   cu_header->version, filename);\n+\t   version, filename);\n+  cu_header->version = version;\n   info_ptr += 2;\n   if (cu_header->version < 5)\n     switch (section_kind)"
    },
    {
      "sha": "2d3ff4d054b1012e5d26cd33fa33da7af6c2be42",
      "filename": "gdb/dwarf2/comp-unit.h",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/dwarf2/comp-unit.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/dwarf2/comp-unit.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/comp-unit.h?ref=7e7a35fbca94c5bfe45781067c75671ba508a0c8",
      "patch": "@@ -35,7 +35,7 @@\n struct comp_unit_head\n {\n   unsigned int length;\n-  short version;\n+  unsigned char version;\n   unsigned char addr_size;\n   unsigned char signed_addr_p;\n   sect_offset abbrev_sect_off;\n@@ -48,24 +48,23 @@ struct comp_unit_head\n \n   enum dwarf_unit_type unit_type;\n \n-  /* Offset to the first byte of this compilation unit header in the\n-     .debug_info section, for resolving relative reference dies.  */\n-  sect_offset sect_off;\n-\n   /* Offset to first die in this cu from the start of the cu.\n      This will be the first byte following the compilation unit header.  */\n   cu_offset first_die_cu_offset;\n \n+  /* Offset to the first byte of this compilation unit header in the\n+     .debug_info section, for resolving relative reference dies.  */\n+  sect_offset sect_off;\n+\n+  /* For types, offset in the type's DIE of the type defined by this TU.  */\n+  cu_offset type_cu_offset_in_tu;\n \n   /* 64-bit signature of this unit. For type units, it denotes the signature of\n      the type (DW_UT_type in DWARF 4, additionally DW_UT_split_type in DWARF 5).\n      Also used in DWARF 5, to denote the dwo id when the unit type is\n      DW_UT_skeleton or DW_UT_split_compile.  */\n   ULONGEST signature;\n \n-  /* For types, offset in the type's DIE of the type defined by this TU.  */\n-  cu_offset type_cu_offset_in_tu;\n-\n   /* Return the total length of the CU described by this header.  */\n   unsigned int get_length () const\n   {"
    },
    {
      "sha": "4dea86f841dec99e34dae9b68d3fdf3c4f2926f9",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e7a35fbca94c5bfe45781067c75671ba508a0c8/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=7e7a35fbca94c5bfe45781067c75671ba508a0c8",
      "patch": "@@ -438,7 +438,7 @@ struct dwarf2_per_cu_data\n   unsigned int length;\n \n   /* DWARF standard version this data has been read from (such as 4 or 5).  */\n-  short dwarf_version;\n+  unsigned char dwarf_version;\n \n   /* Flag indicating this compilation unit will be read in before\n      any of the current compilation units are processed.  */\n@@ -474,6 +474,18 @@ struct dwarf2_per_cu_data\n      This flag is only valid if is_debug_types is true.  */\n   unsigned int tu_read : 1;\n \n+  /* True if HEADER has been read in.\n+\n+     Don't access this field directly.  It should be private, but we can't make\n+     it private at the moment.  */\n+  mutable bool m_header_read_in : 1;\n+\n+  /* The unit type of this CU.  */\n+  ENUM_BITFIELD (dwarf_unit_type) unit_type : 8;\n+\n+  /* The language of this CU.  */\n+  ENUM_BITFIELD (language) lang : LANGUAGE_BITS;\n+\n   /* Our index in the unshared \"symtabs\" vector.  */\n   unsigned index;\n \n@@ -482,12 +494,6 @@ struct dwarf2_per_cu_data\n      not the DWO file.  */\n   struct dwarf2_section_info *section;\n \n-  /* The unit type of this CU.  */\n-  enum dwarf_unit_type unit_type;\n-\n-  /* The language of this CU.  */\n-  enum language lang;\n-\n   /* Backlink to the owner of this.  */\n   dwarf2_per_bfd *per_bfd;\n \n@@ -500,12 +506,6 @@ struct dwarf2_per_cu_data\n      should be private, but we can't make it private at the moment.  */\n   mutable comp_unit_head m_header;\n \n-  /* True if HEADER has been read in.\n-\n-     Don't access this field directly.  It should be private, but we can't make\n-     it private at the moment.  */\n-  mutable bool m_header_read_in;\n-\n   /* When dwarf2_per_bfd::using_index is true, the 'quick' field\n      is active.  Otherwise, the 'psymtab' field is active.  */\n   union"
    }
  ]
}