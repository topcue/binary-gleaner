{
  "sha": "a8e9f2575981ed1381967c4fca21808c3d869b9f",
  "node_id": "C_kwDOANOeidoAKGE4ZTlmMjU3NTk4MWVkMTM4MTk2N2M0ZmNhMjE4MDhjM2Q4NjliOWY",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-30T19:13:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-25T22:22:49Z"
    },
    "message": "Always print the \"host libthread-db\" message to stdout\n\nlinux-thread-db.c has a bit of unusual code that unconditionally\nprints a message, but decides whether to print to gdb_stdout or\ngdb_stdlog based on a debug flag.  It seems better to me to simply\nalways print this; and this is the only spot in gdb where we\nconditionally pass gdb_stdout to one of the f*_unfiltered functions.",
    "tree": {
      "sha": "5e2a6244a1b9ca8382a4d4447a0db0386773897c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e2a6244a1b9ca8382a4d4447a0db0386773897c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8e9f2575981ed1381967c4fca21808c3d869b9f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8e9f2575981ed1381967c4fca21808c3d869b9f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8e9f2575981ed1381967c4fca21808c3d869b9f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8e9f2575981ed1381967c4fca21808c3d869b9f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4396e0e97d21ad766089748fde1e11257384c49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4396e0e97d21ad766089748fde1e11257384c49",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4396e0e97d21ad766089748fde1e11257384c49"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 2,
    "deletions": 9
  },
  "files": [
    {
      "sha": "18d313bf9bec11d235cc889aea57f3a67f1a3ed2",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8e9f2575981ed1381967c4fca21808c3d869b9f/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8e9f2575981ed1381967c4fca21808c3d869b9f/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=a8e9f2575981ed1381967c4fca21808c3d869b9f",
      "patch": "@@ -940,21 +940,14 @@ try_thread_db_load_1 (struct thread_db_info *info)\n \n   if (!libthread_db_search_path.empty () || libthread_db_debug)\n     {\n-      struct ui_file *file;\n       const char *library;\n \n       library = dladdr_to_soname ((const void *) *info->td_ta_new_p);\n       if (library == NULL)\n \tlibrary = LIBTHREAD_DB_SO;\n \n-      /* If we'd print this to gdb_stdout when debug output is\n-\t disabled, still print it to gdb_stdout if debug output is\n-\t enabled.  User visible output should not depend on debug\n-\t settings.  */\n-      file = !libthread_db_search_path.empty () ? gdb_stdout : gdb_stdlog;\n-      fprintf_unfiltered (file,\n-\t\t\t  _(\"Using host libthread_db library \\\"%ps\\\".\\n\"),\n-\t\t\t  styled_string (file_name_style.style (), library));\n+      printf_unfiltered (_(\"Using host libthread_db library \\\"%ps\\\".\\n\"),\n+\t\t\t styled_string (file_name_style.style (), library));\n     }\n \n   /* The thread library was detected.  Activate the thread_db target"
    }
  ]
}