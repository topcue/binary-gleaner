{
  "sha": "e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTA2ZjNkNmViYTM3ZGY4NDUxZWNjMmNlMmFjNzZjYmE4MTFlOGIzNQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-05T14:24:17Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-12T23:46:41Z"
    },
    "message": "gdb: Support printf 'z' size modifier\n\nThe gdb format mechanism doesn't currently support the 'z' size\nmodifier, there are a few places in GDB where this is used.  Instead\nof removing these uses lets just add support to GDB for using 'z'.\n\nI found this issue when trying to use some of the debug output.\nBefore this commit:\n\n  (gdb) set debug dwarf-line 9\n  (gdb) file test\n  Reading symbols from test...\n  Unrecognized format specifier 'z' in printf\n  (No debugging symbols found in test)\n  (gdb)\n\nAfter this commit:\n\n  (gdb) set debug dwarf-line 9\n  (gdb) file test\n  Reading symbols from test...\n  Adding dir 1: /usr/include\n  Adding file 1: test.c\n  Adding file 2: stdc-predef.h\n  Processing actual line 3: file 1, address 0x4004a0, is_stmt 1, discrim 0\n  Processing actual line 4: file 1, address 0x4004a0, is_stmt 1, discrim 0\n  .... lots of debug output ...\n  Processing actual line 10: file 1, address 0x4003b7, is_stmt 0, discrim 0\n  (gdb)\n\nI've added a self test to cover the integer format size modifiers,\nincluding the 'z' modifier.\n\ngdb/ChangeLog:\n\n\t* gdbsupport/format.c (format_pieces::format_pieces): Support\n\tprintf 'z' size modifier.\n\t* gdbsupport/format.h (enum argclass): Add size_t_arg.\n\t* printcmd.c (ui_printf):  Handle size_t_arg.\n\t* ui-out.c (ui_out::vmessage): Likewise.\n\t* unittests/format_pieces-selftests.c (test_format_int_sizes): New\n\tfunction.\n\t(run_tests): Call test_format_int_sizes.\n\ngdb/gdbserver/ChangeLog:\n\n\t* ax.c (ax_printf): Handle size_t_arg.\n\nChange-Id: Ib6c44d88aa5bce265d757e4c0698881803dd186f",
    "tree": {
      "sha": "b934c6e13719f986aab4714769dd9b56e3e1e075",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b934c6e13719f986aab4714769dd9b56e3e1e075"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "468c0cbb327fadf28386a989f929fcbed4aed8b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/468c0cbb327fadf28386a989f929fcbed4aed8b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/468c0cbb327fadf28386a989f929fcbed4aed8b9"
    }
  ],
  "stats": {
    "total": 108,
    "additions": 106,
    "deletions": 2
  },
  "files": [
    {
      "sha": "4f40ea82ee9c4e3727a1a442eec3c81a6ecce64f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -1,3 +1,14 @@\n+2019-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdbsupport/format.c (format_pieces::format_pieces): Support\n+\tprintf 'z' size modifier.\n+\t* gdbsupport/format.h (enum argclass): Add size_t_arg.\n+\t* printcmd.c (ui_printf):  Handle size_t_arg.\n+\t* ui-out.c (ui_out::vmessage): Likewise.\n+\t* unittests/format_pieces-selftests.c (test_format_int_sizes): New\n+\tfunction.\n+\t(run_tests): Call test_format_int_sizes.\n+\n 2019-11-12  Christian Biesinger  <cbiesinger@google.com>\n \n \t* ada-exp.y (write_ambiguous_var): Update."
    },
    {
      "sha": "e17a7ca461e8b28ea11c77f242d3c24046ce775b",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -1,3 +1,7 @@\n+2019-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ax.c (ax_printf): Handle size_t_arg.\n+\n 2019-11-06  Christian Biesinger  <cbiesinger@google.com>\n \n \t* linux-tdep.c (linux_info_proc): Use strtok_r instead of strtok."
    },
    {
      "sha": "21fde5e6926843a0f0ed0499cc5c352556bdc543",
      "filename": "gdb/gdbserver/ax.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbserver/ax.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbserver/ax.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ax.c?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -904,6 +904,14 @@ ax_printf (CORE_ADDR fn, CORE_ADDR chan, const char *format,\n \t    break;\n \t  }\n \n+\tcase size_t_arg:\n+\t  {\n+\t    size_t val = args[i];\n+\n+\t    printf (current_substring, val);\n+\t    break;\n+\t  }\n+\n \tcase literal_piece:\n \t  /* Print a portion of the format string that has no\n \t     directives.  Note that this will not include any"
    },
    {
      "sha": "2e2d90a92467ecda49cff7dd92e0526fa1dc9764",
      "filename": "gdb/gdbsupport/format.c",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbsupport/format.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbsupport/format.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/format.c?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -123,6 +123,7 @@ format_pieces::format_pieces (const char **arg, bool gdb_extensions)\n \tint seen_space = 0, seen_plus = 0;\n \tint seen_big_l = 0, seen_h = 0, seen_big_h = 0;\n \tint seen_big_d = 0, seen_double_big_d = 0;\n+\tint seen_size_t = 0;\n \tint bad = 0;\n \tint n_int_args = 0;\n \n@@ -234,6 +235,12 @@ format_pieces::format_pieces (const char **arg, bool gdb_extensions)\n \t    else\n \t      seen_big_d = 1;\n \t  }\n+\t/* For size_t or ssize_t.  */\n+\telse if (*f == 'z')\n+\t  {\n+\t    seen_size_t = 1;\n+\t    f++;\n+\t  }\n \n \tswitch (*f)\n \t  {\n@@ -251,7 +258,9 @@ format_pieces::format_pieces (const char **arg, bool gdb_extensions)\n \n \t  case 'd':\n \t  case 'i':\n-\t    if (lcount == 0)\n+\t    if (seen_size_t)\n+\t      this_argclass = size_t_arg;\n+\t    else if (lcount == 0)\n \t      this_argclass = int_arg;\n \t    else if (lcount == 1)\n \t      this_argclass = long_arg;"
    },
    {
      "sha": "07374db3910966764b3ecc3b83f63f5face7f5de",
      "filename": "gdb/gdbsupport/format.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbsupport/format.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/gdbsupport/format.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/format.h?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -38,7 +38,7 @@\n enum argclass\n   {\n     literal_piece,\n-    int_arg, long_arg, long_long_arg, ptr_arg,\n+    int_arg, long_arg, long_long_arg, size_t_arg, ptr_arg,\n     string_arg, wide_string_arg, wide_char_arg,\n     double_arg, long_double_arg,\n     dec32float_arg, dec64float_arg, dec128float_arg"
    },
    {
      "sha": "323a5d05eb7aafc731d56cf4855c77b6333b0dd6",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -2657,6 +2657,16 @@ ui_printf (const char *arg, struct ui_file *stream)\n \t    {\n \t      long val = value_as_long (val_args[i]);\n \n+\t      DIAGNOSTIC_PUSH\n+\t      DIAGNOSTIC_IGNORE_FORMAT_NONLITERAL\n+              fprintf_filtered (stream, current_substring, val);\n+\t      DIAGNOSTIC_POP\n+\t      break;\n+\t    }\n+\t  case size_t_arg:\n+\t    {\n+\t      size_t val = value_as_long (val_args[i]);\n+\n \t      DIAGNOSTIC_PUSH\n \t      DIAGNOSTIC_IGNORE_FORMAT_NONLITERAL\n               fprintf_filtered (stream, current_substring, val);"
    },
    {
      "sha": "80845f4bcaa8d61ee3e7c202b645831a8b22e8da",
      "filename": "gdb/ui-out.c",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/ui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/ui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.c?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -688,6 +688,24 @@ ui_out::vmessage (const ui_file_style &in_style, const char *format,\n \t      }\n \t  }\n \t  break;\n+\tcase size_t_arg:\n+\t  {\n+\t    size_t val = va_arg (args, size_t);\n+\t    switch (piece.n_int_args)\n+\t      {\n+\t      case 0:\n+\t\tcall_do_message (style, current_substring, val);\n+\t\tbreak;\n+\t      case 1:\n+\t\tcall_do_message (style, current_substring, intvals[0], val);\n+\t\tbreak;\n+\t      case 2:\n+\t\tcall_do_message (style, current_substring,\n+\t\t\t\t intvals[0], intvals[1], val);\n+\t\tbreak;\n+\t      }\n+\t  }\n+\t  break;\n \tcase double_arg:\n \t  call_do_message (style, current_substring, va_arg (args, double));\n \t  break;"
    },
    {
      "sha": "3971201478091d9c7e30a043a1f1637d66e75ea9",
      "filename": "gdb/unittests/format_pieces-selftests.c",
      "status": "modified",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/unittests/format_pieces-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e06f3d6eba37df8451ecc2ce2ac76cba811e8b35/gdb/unittests/format_pieces-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/format_pieces-selftests.c?ref=e06f3d6eba37df8451ecc2ce2ac76cba811e8b35",
      "patch": "@@ -76,12 +76,56 @@ test_gdb_formats ()\n     }, true);\n }\n \n+/* Test the different size modifiers that can be applied to an integer\n+   argument.  Test with different integer format specifiers too.  */\n+\n+static void\n+test_format_int_sizes ()\n+{\n+  check (\"Hello\\\\t %hu%lu%llu%zu\", /* ARI: %ll */\n+    {\n+      format_piece (\"Hello\\t \", literal_piece, 0),\n+      format_piece (\"%hu\", int_arg, 0),\n+      format_piece (\"%lu\", long_arg, 0),\n+      format_piece (\"%llu\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%zu\", size_t_arg, 0)\n+    });\n+\n+  check (\"Hello\\\\t %hx%lx%llx%zx\", /* ARI: %ll */\n+    {\n+      format_piece (\"Hello\\t \", literal_piece, 0),\n+      format_piece (\"%hx\", int_arg, 0),\n+      format_piece (\"%lx\", long_arg, 0),\n+      format_piece (\"%llx\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%zx\", size_t_arg, 0)\n+    });\n+\n+  check (\"Hello\\\\t %ho%lo%llo%zo\", /* ARI: %ll */\n+    {\n+      format_piece (\"Hello\\t \", literal_piece, 0),\n+      format_piece (\"%ho\", int_arg, 0),\n+      format_piece (\"%lo\", long_arg, 0),\n+      format_piece (\"%llo\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%zo\", size_t_arg, 0)\n+    });\n+\n+  check (\"Hello\\\\t %hd%ld%lld%zd\", /* ARI: %ll */\n+    {\n+      format_piece (\"Hello\\t \", literal_piece, 0),\n+      format_piece (\"%hd\", int_arg, 0),\n+      format_piece (\"%ld\", long_arg, 0),\n+      format_piece (\"%lld\", long_long_arg, 0), /* ARI: %ll */\n+      format_piece (\"%zd\", size_t_arg, 0)\n+    });\n+}\n+\n static void\n run_tests ()\n {\n   test_escape_sequences ();\n   test_format_specifier ();\n   test_gdb_formats ();\n+  test_format_int_sizes ();\n }\n \n } /* namespace format_pieces */"
    }
  ]
}