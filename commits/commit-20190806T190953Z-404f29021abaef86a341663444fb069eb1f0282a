{
  "sha": "404f29021abaef86a341663444fb069eb1f0282a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDA0ZjI5MDIxYWJhZWY4NmEzNDE2NjM0NDRmYjA2OWViMWYwMjgyYQ==",
  "commit": {
    "author": {
      "name": "Frank Ch. Eigler",
      "email": "fche@redhat.com",
      "date": "2019-08-06T15:23:48Z"
    },
    "committer": {
      "name": "Frank Ch. Eigler",
      "email": "fche@redhat.com",
      "date": "2019-08-06T19:09:53Z"
    },
    "message": "[PR build/24886] disable glibc mcheck support\n\nThis patch drops gdb's configury support for glibc's mcheck function.\nIt has been observed to cause false abort()s, because it is\nthread-unsafe yet interposes every malloc/free operation.  So if any\nlibrary transitively used by gdb also uses threads, then these\nfunctions can easily corrupt their own checking data.  These days, gcc\nASAN and valgrind provide high quality checking, and mcheck is\napparently itself being slowly deprecated.\n\nSo, let's stop linking to it.  Attached patch drops the\nautoconf/Makefile machinery for both gdb and gdbserver.  No\ntestsuite-visible impact.  IMHO not worth mentioning in NEWS.\n\nSee also: https://sourceware.org/bugzilla/show_bug.cgi?id=9939\n\ngdb/ChangeLog\n\n        PR build/24886\n        * configure.ac: Drop enable-libmcheck support.\n        * configure, config.in: Rebuild.\n        * libmcheck.m4: Remove.\n        * acinclude.m4: Don't include it.\n        * Makefile.in: Don't distribute it.\n        * top.c (print_gdb_configuration): Don't mention it.\n\ngdb/gdbserver/ChangeLog\n\n        PR build/24886\n        * configure.ac: Drop enable-libmcheck support.\n        * configure, config.in: Rebuild.\n        * acinclude.m4: Don't include it.",
    "tree": {
      "sha": "76a3409f363d27b2c0fcceaaea2dcf2a86f7e5e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/76a3409f363d27b2c0fcceaaea2dcf2a86f7e5e6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/404f29021abaef86a341663444fb069eb1f0282a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/404f29021abaef86a341663444fb069eb1f0282a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/404f29021abaef86a341663444fb069eb1f0282a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/404f29021abaef86a341663444fb069eb1f0282a/comments",
  "author": {
    "login": "fche",
    "id": 588885,
    "node_id": "MDQ6VXNlcjU4ODg4NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/588885?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fche",
    "html_url": "https://github.com/fche",
    "followers_url": "https://api.github.com/users/fche/followers",
    "following_url": "https://api.github.com/users/fche/following{/other_user}",
    "gists_url": "https://api.github.com/users/fche/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fche/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fche/subscriptions",
    "organizations_url": "https://api.github.com/users/fche/orgs",
    "repos_url": "https://api.github.com/users/fche/repos",
    "events_url": "https://api.github.com/users/fche/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fche/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "fche",
    "id": 588885,
    "node_id": "MDQ6VXNlcjU4ODg4NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/588885?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fche",
    "html_url": "https://github.com/fche",
    "followers_url": "https://api.github.com/users/fche/followers",
    "following_url": "https://api.github.com/users/fche/following{/other_user}",
    "gists_url": "https://api.github.com/users/fche/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fche/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fche/subscriptions",
    "organizations_url": "https://api.github.com/users/fche/orgs",
    "repos_url": "https://api.github.com/users/fche/repos",
    "events_url": "https://api.github.com/users/fche/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fche/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "046bebe1c0a367687bd693eb4594fcdcba0b8f7e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/046bebe1c0a367687bd693eb4594fcdcba0b8f7e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/046bebe1c0a367687bd693eb4594fcdcba0b8f7e"
    }
  ],
  "stats": {
    "total": 353,
    "additions": 63,
    "deletions": 290
  },
  "files": [
    {
      "sha": "974cca4c524d53c0fdbcdf28b5d0bf06548808be",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -1,3 +1,13 @@\n+2019-08-06  Frank Ch. Eigler  <fche@redhat.com>\n+\n+\tPR build/24886\n+\t* configure.ac: Drop enable-libmcheck support.\n+\t* configure, config.in: Rebuild.\n+\t* libmcheck.m4: Remove.\n+\t* acinclude.m4: Don't include it.\n+\t* Makefile.in: Don't distribute it.\n+\t* top.c (print_gdb_configuration): Don't mention it.\n+\n 2019-08-06  Tom Tromey  <tom@tromey.com>\n \n \t* utils.c (set_output_style): Sometimes pass stream to"
    },
    {
      "sha": "044627a073343c455c6ba4dbf5dd51bebbc21fca",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -2044,7 +2044,6 @@ ACLOCAL_AMFLAGS = -I ../config\n aclocal_m4_deps = \\\n \tconfigure.ac \\\n \tacx_configure_dir.m4 \\\n-\tlibmcheck.m4 \\\n \ttransform.m4 \\\n \t../bfd/bfd.m4 \\\n \t../config/acinclude.m4 \\"
    },
    {
      "sha": "6e81aaed3bf442348b3b18f229d7cf01d62b2722",
      "filename": "gdb/acinclude.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/acinclude.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/acinclude.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/acinclude.m4?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -6,9 +6,6 @@ dnl major rewriting for Tcl 7.5 by Don Libes <libes@nist.gov>\n \n sinclude(acx_configure_dir.m4)\n \n-# This gets GDB_AC_LIBMCHECK.\n-sinclude(libmcheck.m4)\n-\n # This gets GDB_AC_TRANSFORM.\n sinclude(transform.m4)\n "
    },
    {
      "sha": "26ca02f6a3e88fae91ed00e8ad1b79b6b68d2473",
      "filename": "gdb/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/config.in?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -243,9 +243,6 @@\n /* Define to 1 if you have the `m' library (-lm). */\n #undef HAVE_LIBM\n \n-/* Define to 1 if you have the `mcheck' library (-lmcheck). */\n-#undef HAVE_LIBMCHECK\n-\n /* Define if you have the mpfr library. */\n #undef HAVE_LIBMPFR\n "
    },
    {
      "sha": "9206f0e7f887d5100b4f5358bdbf68f9a19b5495",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 81,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -879,7 +879,6 @@ with_libmpfr_prefix\n with_python\n with_guile\n enable_source_highlight\n-enable_libmcheck\n with_intel_pt\n with_libipt_prefix\n with_included_regex\n@@ -1556,7 +1555,6 @@ Optional Features:\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-source-highlight\n                           enable source-highlight for source listings\n-  --enable-libmcheck      Try linking with -lmcheck if available\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-gdb-build-warnings\n@@ -11316,85 +11314,6 @@ fi\n \n \n \n-# --------------------- #\n-# Check for libmcheck.  #\n-# --------------------- #\n-\n-# Enable -lmcheck by default (it provides cheap-enough memory mangling),\n-# but turn it off if Python is enabled with threads, since -lmcheck is\n-# not thread safe (http://sourceware.org/bugzilla/show_bug.cgi?id=9939),\n-# and for releases.\n-if test \\( \"${have_libpython}\" = \"no\" -o \"${python_has_threads}\" = \"no\" \\) \\\n-   && $development; then\n-  libmcheck_default=yes\n-else\n-  libmcheck_default=no\n-fi\n-\n-  # Check whether --enable-libmcheck was given.\n-if test \"${enable_libmcheck+set}\" = set; then :\n-  enableval=$enable_libmcheck; case \"${enableval}\" in\n-      yes | y) ENABLE_LIBMCHECK=\"yes\" ;;\n-      no | n)  ENABLE_LIBMCHECK=\"no\" ;;\n-      *) as_fn_error $? \"bad value ${enableval} for --enable-libmcheck\" \"$LINENO\" 5 ;;\n-    esac\n-fi\n-\n-\n-  if test -z \"${ENABLE_LIBMCHECK}\"; then\n-    ENABLE_LIBMCHECK=${libmcheck_default}\n-  fi\n-\n-  if test \"$ENABLE_LIBMCHECK\" = \"yes\" ; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for main in -lmcheck\" >&5\n-$as_echo_n \"checking for main in -lmcheck... \" >&6; }\n-if ${ac_cv_lib_mcheck_main+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lmcheck  $LIBS\"\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-\n-int\n-main ()\n-{\n-return main ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_mcheck_main=yes\n-else\n-  ac_cv_lib_mcheck_main=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_mcheck_main\" >&5\n-$as_echo \"$ac_cv_lib_mcheck_main\" >&6; }\n-if test \"x$ac_cv_lib_mcheck_main\" = xyes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define HAVE_LIBMCHECK 1\n-_ACEOF\n-\n-  LIBS=\"-lmcheck $LIBS\"\n-\n-fi\n-\n-  fi\n-\n-\n-if test \"$ENABLE_LIBMCHECK\" = \"yes\" \\\n-\t-a \"${have_libpython}\" != \"no\" \\\n-\t-a \"${python_has_threads}\" = \"yes\" ; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: --enable-libmcheck may lead to spurious crashes if threads are used in python\" >&5\n-$as_echo \"$as_me: WARNING: --enable-libmcheck may lead to spurious crashes if threads are used in python\" >&2;}\n-fi\n-\n \n # Check whether --with-intel_pt was given.\n if test \"${with_intel_pt+set}\" = set; then :"
    },
    {
      "sha": "05b722b7f11a163e3936e0482e26c65d8bd3cb93",
      "filename": "gdb/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.ac?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -1234,28 +1234,6 @@ fi\n AC_SUBST(SRCHIGH_LIBS)\n AC_SUBST(SRCHIGH_CFLAGS)\n \n-# --------------------- #\n-# Check for libmcheck.  #\n-# --------------------- #\n-\n-# Enable -lmcheck by default (it provides cheap-enough memory mangling),\n-# but turn it off if Python is enabled with threads, since -lmcheck is\n-# not thread safe (http://sourceware.org/bugzilla/show_bug.cgi?id=9939),\n-# and for releases.\n-if test \\( \"${have_libpython}\" = \"no\" -o \"${python_has_threads}\" = \"no\" \\) \\\n-   && $development; then\n-  libmcheck_default=yes\n-else\n-  libmcheck_default=no\n-fi\n-GDB_AC_LIBMCHECK(${libmcheck_default})\n-\n-if test \"$ENABLE_LIBMCHECK\" = \"yes\" \\\n-\t-a \"${have_libpython}\" != \"no\" \\\n-\t-a \"${python_has_threads}\" = \"yes\" ; then\n-  AC_MSG_WARN(--enable-libmcheck may lead to spurious crashes if threads are used in python)\n-fi\n-\n AC_ARG_WITH(intel_pt,\n   AS_HELP_STRING([--with-intel-pt], [include Intel Processor Trace support (auto/yes/no)]),\n   [], [with_intel_pt=auto])"
    },
    {
      "sha": "2dda3521ec9fbd9bc01bab4f5dd804ecd4cabf10",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -1,3 +1,10 @@\n+2019-08-06  Frank Ch. Eigler  <fche@redhat.com>\n+\n+\tPR build/24886\n+\t* configure.ac: Drop enable-libmcheck support.\n+\t* configure, config.in: Rebuild.\n+\t* acinclude.m4: Don't include it.\n+\n 2019-07-19  Alan Hayward  <alan.hayward@arm.com>\n \n \t* configure.srv: Remove Arm xml files."
    },
    {
      "sha": "3887b165c66cc382e2da59691532059e4d62aa29",
      "filename": "gdb/gdbserver/acinclude.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/acinclude.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/acinclude.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/acinclude.m4?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -3,9 +3,6 @@ sinclude(../../bfd/bfd.m4)\n \n sinclude(../acx_configure_dir.m4)\n \n-# This gets GDB_AC_LIBMCHECK.\n-sinclude(../libmcheck.m4)\n-\n # This gets AM_GDB_WARNINGS.\n sinclude(../warning.m4)\n "
    },
    {
      "sha": "3991964f9bd55d608672906f633997ca7e9ba5da",
      "filename": "gdb/gdbserver/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/config.in?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -123,9 +123,6 @@\n /* Define to 1 if you have the `dl' library (-ldl). */\n #undef HAVE_LIBDL\n \n-/* Define to 1 if you have the `mcheck' library (-lmcheck). */\n-#undef HAVE_LIBMCHECK\n-\n /* Define if the target supports branch tracing. */\n #undef HAVE_LINUX_BTRACE\n "
    },
    {
      "sha": "7e5be51cb281f960be3284d7dac6b49bc1d14206",
      "filename": "gdb/gdbserver/configure",
      "status": "modified",
      "additions": 46,
      "deletions": 113,
      "changes": 159,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/configure?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -721,7 +721,6 @@ ac_user_opts='\n enable_option_checking\n enable_maintainer_mode\n enable_largefile\n-enable_libmcheck\n enable_unit_tests\n with_ust\n with_ust_include\n@@ -1367,7 +1366,6 @@ Optional Features:\n                           enable make rules and dependencies not useful (and\n                           sometimes confusing) to the casual installer\n   --disable-largefile     omit support for large files\n-  --enable-libmcheck      Try linking with -lmcheck if available\n   --enable-unit-tests     Enable the inclusion of unit tests when compiling\n                           GDB\n   --enable-werror         treat compile warnings as errors\n@@ -1756,52 +1754,6 @@ $as_echo \"$ac_res\" >&6; }\n \n } # ac_fn_c_check_header_compile\n \n-# ac_fn_c_try_link LINENO\n-# -----------------------\n-# Try to link conftest.$ac_ext, and return whether this succeeded.\n-ac_fn_c_try_link ()\n-{\n-  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n-  rm -f conftest.$ac_objext conftest$ac_exeext\n-  if { { ac_try=\"$ac_link\"\n-case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_link\") 2>conftest.err\n-  ac_status=$?\n-  if test -s conftest.err; then\n-    grep -v '^ *+' conftest.err >conftest.er1\n-    cat conftest.er1 >&5\n-    mv -f conftest.er1 conftest.err\n-  fi\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; } && {\n-\t test -z \"$ac_c_werror_flag\" ||\n-\t test ! -s conftest.err\n-       } && test -s conftest$ac_exeext && {\n-\t test \"$cross_compiling\" = yes ||\n-\t test -x conftest$ac_exeext\n-       }; then :\n-  ac_retval=0\n-else\n-  $as_echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-\tac_retval=1\n-fi\n-  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n-  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n-  # interfere with the next link command; also delete a directory that is\n-  # left behind by Apple's compiler.  We do this before executing the actions.\n-  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n-  as_fn_set_status $ac_retval\n-\n-} # ac_fn_c_try_link\n-\n # ac_fn_c_check_type LINENO TYPE VAR INCLUDES\n # -------------------------------------------\n # Tests whether TYPE exists after having included INCLUDES, setting cache\n@@ -1856,6 +1808,52 @@ $as_echo \"$ac_res\" >&6; }\n \n } # ac_fn_c_check_type\n \n+# ac_fn_c_try_link LINENO\n+# -----------------------\n+# Try to link conftest.$ac_ext, and return whether this succeeded.\n+ac_fn_c_try_link ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  rm -f conftest.$ac_objext conftest$ac_exeext\n+  if { { ac_try=\"$ac_link\"\n+case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_link\") 2>conftest.err\n+  ac_status=$?\n+  if test -s conftest.err; then\n+    grep -v '^ *+' conftest.err >conftest.er1\n+    cat conftest.er1 >&5\n+    mv -f conftest.er1 conftest.err\n+  fi\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; } && {\n+\t test -z \"$ac_c_werror_flag\" ||\n+\t test ! -s conftest.err\n+       } && test -s conftest$ac_exeext && {\n+\t test \"$cross_compiling\" = yes ||\n+\t test -x conftest$ac_exeext\n+       }; then :\n+  ac_retval=0\n+else\n+  $as_echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+\tac_retval=1\n+fi\n+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n+  # interfere with the next link command; also delete a directory that is\n+  # left behind by Apple's compiler.  We do this before executing the actions.\n+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n+  as_fn_set_status $ac_retval\n+\n+} # ac_fn_c_try_link\n+\n # ac_fn_c_check_func LINENO FUNC VAR\n # ----------------------------------\n # Tests whether FUNC exists, setting the cache variable VAR accordingly\n@@ -5827,71 +5825,6 @@ fi\n # Set the 'development' global.\n . $srcdir/../../bfd/development.sh\n \n-# Enable -lmcheck by default (it provides cheap-enough memory\n-# mangling), but turn it off for releases.\n-if $development; then\n-  libmcheck_default=yes\n-else\n-  libmcheck_default=no\n-fi\n-\n-  # Check whether --enable-libmcheck was given.\n-if test \"${enable_libmcheck+set}\" = set; then :\n-  enableval=$enable_libmcheck; case \"${enableval}\" in\n-      yes | y) ENABLE_LIBMCHECK=\"yes\" ;;\n-      no | n)  ENABLE_LIBMCHECK=\"no\" ;;\n-      *) as_fn_error $? \"bad value ${enableval} for --enable-libmcheck\" \"$LINENO\" 5 ;;\n-    esac\n-fi\n-\n-\n-  if test -z \"${ENABLE_LIBMCHECK}\"; then\n-    ENABLE_LIBMCHECK=${libmcheck_default}\n-  fi\n-\n-  if test \"$ENABLE_LIBMCHECK\" = \"yes\" ; then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for main in -lmcheck\" >&5\n-$as_echo_n \"checking for main in -lmcheck... \" >&6; }\n-if ${ac_cv_lib_mcheck_main+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lmcheck  $LIBS\"\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-\n-int\n-main ()\n-{\n-return main ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_mcheck_main=yes\n-else\n-  ac_cv_lib_mcheck_main=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_mcheck_main\" >&5\n-$as_echo \"$ac_cv_lib_mcheck_main\" >&6; }\n-if test \"x$ac_cv_lib_mcheck_main\" = xyes; then :\n-  cat >>confdefs.h <<_ACEOF\n-#define HAVE_LIBMCHECK 1\n-_ACEOF\n-\n-  LIBS=\"-lmcheck $LIBS\"\n-\n-fi\n-\n-  fi\n-\n-\n \n # Check whether we will enable the inclusion of unit tests when\n # compiling GDB."
    },
    {
      "sha": "0009aac9f207197a685330c6bf643d682f8121b4",
      "filename": "gdb/gdbserver/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/gdbserver/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/configure.ac?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -45,15 +45,6 @@ AC_HEADER_STDC\n # Set the 'development' global.\n . $srcdir/../../bfd/development.sh\n \n-# Enable -lmcheck by default (it provides cheap-enough memory\n-# mangling), but turn it off for releases.\n-if $development; then\n-  libmcheck_default=yes\n-else\n-  libmcheck_default=no\n-fi\n-GDB_AC_LIBMCHECK(${libmcheck_default})\n-\n GDB_AC_SELFTEST([\n   srv_selftest_objs=\"gdbsupport/selftest.o\"\n ])"
    },
    {
      "sha": "692a5c8689251adb9d7560121693e98172b5c710",
      "filename": "gdb/libmcheck.m4",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/046bebe1c0a367687bd693eb4594fcdcba0b8f7e/gdb/libmcheck.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/046bebe1c0a367687bd693eb4594fcdcba0b8f7e/gdb/libmcheck.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/libmcheck.m4?ref=046bebe1c0a367687bd693eb4594fcdcba0b8f7e",
      "patch": "@@ -1,43 +0,0 @@\n-dnl Copyright (C) 2012-2019 Free Software Foundation, Inc.\n-dnl\n-dnl This file is part of GDB.\n-dnl\n-dnl This program is free software; you can redistribute it and/or modify\n-dnl it under the terms of the GNU General Public License as published by\n-dnl the Free Software Foundation; either version 3 of the License, or\n-dnl (at your option) any later version.\n-dnl\n-dnl This program is distributed in the hope that it will be useful,\n-dnl but WITHOUT ANY WARRANTY; without even the implied warranty of\n-dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-dnl GNU General Public License for more details.\n-dnl\n-dnl You should have received a copy of the GNU General Public License\n-dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-dnl GDB_AC_LIBMCHECK([DEFAULT])\n-dnl Provide an --enable-libmcheck/--disable-libmcheck set of options\n-dnl allowing a user to enable this option even when building releases,\n-dnl or to disable it when building a snapshot.\n-dnl DEFAULT (yes/no) is used as default if the user doesn't set\n-dnl the option explicitly.\n-\n-AC_DEFUN([GDB_AC_LIBMCHECK],\n-[\n-  AC_ARG_ENABLE(libmcheck,\n-    AS_HELP_STRING([--enable-libmcheck],\n-\t\t   [Try linking with -lmcheck if available]),\n-    [case \"${enableval}\" in\n-      yes | y) ENABLE_LIBMCHECK=\"yes\" ;;\n-      no | n)  ENABLE_LIBMCHECK=\"no\" ;;\n-      *) AC_MSG_ERROR(bad value ${enableval} for --enable-libmcheck) ;;\n-    esac])\n-\n-  if test -z \"${ENABLE_LIBMCHECK}\"; then\n-    ENABLE_LIBMCHECK=[$1]\n-  fi\n-\n-  if test \"$ENABLE_LIBMCHECK\" = \"yes\" ; then\n-    AC_CHECK_LIB(mcheck, main)\n-  fi\n-])"
    },
    {
      "sha": "a9f9a384f7e1ecc1f2f8dfad2289b795754c2f19",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/404f29021abaef86a341663444fb069eb1f0282a/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/404f29021abaef86a341663444fb069eb1f0282a/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=404f29021abaef86a341663444fb069eb1f0282a",
      "patch": "@@ -1462,15 +1462,6 @@ This GDB was configured as follows:\\n\\\n              --without-intel-pt\\n\\\n \"));\n #endif\n-#if HAVE_LIBMCHECK\n-    fprintf_filtered (stream, _(\"\\\n-             --enable-libmcheck\\n\\\n-\"));\n-#else\n-    fprintf_filtered (stream, _(\"\\\n-             --disable-libmcheck\\n\\\n-\"));\n-#endif\n #if HAVE_LIBMPFR\n     fprintf_filtered (stream, _(\"\\\n              --with-mpfr\\n\\"
    }
  ]
}