{
  "sha": "e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTVhMWE3OWE0ZTBlZTMzMjkyZDQ1YjEwYTc1OWViNDFmNzM1OGI3Yw==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-04-08T15:02:55Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-04-12T10:37:24Z"
    },
    "message": "Testsuite: Add gdbserver sysroot test\n\nThe local board file ensures that the sysroot is always set to load\nfiles from the local filesystem.\n\nAdd a gdbserver test to explicitly test the sysroot set to both the\nremote target and the local filesystem.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.server/sysroot.c: New test.\n\t* gdb.server/sysroot.exp: New file.\n\t* lib/gdbserver-support.exp (gdb_target_cmd): Add additional text\n        matching param.",
    "tree": {
      "sha": "a9e38668d1ea376f44ae3a9225fad69d8619d450",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a9e38668d1ea376f44ae3a9225fad69d8619d450"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "62253a61473764b0d084b01eff06a93fb38bb2e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62253a61473764b0d084b01eff06a93fb38bb2e3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/62253a61473764b0d084b01eff06a93fb38bb2e3"
    }
  ],
  "stats": {
    "total": 125,
    "additions": 118,
    "deletions": 7
  },
  "files": [
    {
      "sha": "7fb071adc64c0cfb7235940e204f878b4205803e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-11  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* gdb.server/sysroot.c: New test.\n+\t* gdb.server/sysroot.exp: New file.\n+\t* lib/gdbserver-support.exp (gdb_target_cmd): Add additional text\n+\tmatching param.\n+\n 2019-04-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/align.exp: Extend test to cover structures containing"
    },
    {
      "sha": "7db1a138d16320ba13c43b8a4ff2cf250b63c24a",
      "filename": "gdb/testsuite/gdb.server/sysroot.c",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/gdb.server/sysroot.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/gdb.server/sysroot.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/sysroot.c?ref=e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
      "patch": "@@ -0,0 +1,25 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include <stdio.h>\n+\n+int\n+main ()\n+{\n+  printf (\"Hello World!\\n\");\n+  return 0;\n+}"
    },
    {
      "sha": "4b95fdf087cbb196e91a57e20c937fe217cc3bc7",
      "filename": "gdb/testsuite/gdb.server/sysroot.exp",
      "status": "added",
      "additions": 77,
      "deletions": 0,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/gdb.server/sysroot.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/gdb.server/sysroot.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/sysroot.exp?ref=e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
      "patch": "@@ -0,0 +1,77 @@\n+# This testcase is part of GDB, the GNU debugger.\n+#\n+# Copyright 2019 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that GDB can correctly read the binary and shared libraries\n+# with different sysroot setups: local and \"target:\".\n+\n+load_lib gdbserver-support.exp\n+\n+if { [skip_gdbserver_tests] } {\n+    verbose \"skipping gdbserver tests\"\n+    return -1\n+}\n+\n+standard_testfile\n+if {[build_executable \"failed to prepare\" $testfile $srcfile \"additional_flags=--no-builtin\"] == -1} {\n+    return -1\n+}\n+\n+# Run once with sysroot set to the local filesystem and once set to the remote\n+# target.\n+foreach_with_prefix sysroot { \"local\" \"remote\" } {\n+    global srcdir\n+    global subdir\n+    global binfile\n+\n+    if { $sysroot == \"local\" } {\n+\tset sysroot_command \"/\"\n+\tset reading_symbols \"Reading symbols from $binfile...\"\n+    } else {\n+\tset sysroot_command \"target:\"\n+\tset reading_symbols \"Reading $binfile from remote target...\"\n+    }\n+\n+    # Restart GDB.\n+    clean_restart\n+\n+    # Make sure we're disconnected, in case we're testing with an\n+    # extended-remote board, therefore already connected.\n+    gdb_test \"disconnect\" \".*\"\n+\n+    # Start GDBserver.\n+    set res [gdbserver_start \"\" $binfile]\n+    set gdbserver_protocol [lindex $res 0]\n+    set gdbserver_gdbport [lindex $res 1]\n+\n+    # Set the sysroot.\n+    gdb_test_no_output \"set sysroot $sysroot_command\"\n+\n+    # Connect to gdbserver, making sure GDB reads in the binary correctly.\n+    set test \"connect to remote and read binary\"\n+    if {[gdb_target_cmd $gdbserver_protocol $gdbserver_gdbport $reading_symbols] == 0} {\n+\tpass $test\n+    } else {\n+\tfail $test\n+    }\n+\n+    gdb_breakpoint main\n+    gdb_test \"continue\" \"Breakpoint $decimal.* main.*\" \"continue to main\"\n+\n+    # Test that we can stop inside a library.\n+    gdb_breakpoint printf\n+    gdb_test \"continue\" \"Breakpoint $decimal.* printf .*\" \"continue to printf\"\n+}"
    },
    {
      "sha": "2cb64f7d2f57ed5a6dce93502263fcaa49dbc931",
      "filename": "gdb/testsuite/lib/gdbserver-support.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/lib/gdbserver-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e5a1a79a4e0ee33292d45b10a759eb41f7358b7c/gdb/testsuite/lib/gdbserver-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdbserver-support.exp?ref=e5a1a79a4e0ee33292d45b10a759eb41f7358b7c",
      "patch": "@@ -42,9 +42,11 @@\n \n #\n # gdb_target_cmd\n-# Send gdb the \"target\" command\n+# Send gdb the \"target\" command.  Returns 0 on success, 1 on failure.\n+# If specified, then ADDITIONAL_TEXT must match the text that comes after\n+# the connection message in order for the procedure to succeed.\n #\n-proc gdb_target_cmd { targetname serialport } {\n+proc gdb_target_cmd { targetname serialport {additional_text \"\"} } {\n     global gdb_prompt\n \n     set serialport_re [string_to_regexp $serialport]\n@@ -61,23 +63,23 @@ proc gdb_target_cmd { targetname serialport } {\n \t    -re \"Couldn't establish connection to remote.*$gdb_prompt $\" {\n \t\tverbose \"Connection failed\"\n \t    }\n-\t    -re \"Remote MIPS debugging.*$gdb_prompt\" {\n+\t    -re \"Remote MIPS debugging.*$additional_text.*$gdb_prompt\" {\n \t\tverbose \"Set target to $targetname\"\n \t\treturn 0\n \t    }\n-\t    -re \"Remote debugging using .*$serialport_re.*$gdb_prompt $\" {\n+\t    -re \"Remote debugging using .*$serialport_re.*$additional_text.*$gdb_prompt $\" {\n \t\tverbose \"Set target to $targetname\"\n \t\treturn 0\n \t    }\n-\t    -re \"Remote debugging using stdio.*$gdb_prompt $\" {\n+\t    -re \"Remote debugging using stdio.*$additional_text.*$gdb_prompt $\" {\n \t\tverbose \"Set target to $targetname\"\n \t\treturn 0\n \t    }\n-\t    -re \"Remote target $targetname connected to.*$gdb_prompt $\" {\n+\t    -re \"Remote target $targetname connected to.*$additional_text.*$gdb_prompt $\" {\n \t\tverbose \"Set target to $targetname\"\n \t\treturn 0\n \t    }\n-\t    -re \"Connected to.*$gdb_prompt $\" { \n+\t    -re \"Connected to.*$additional_text.*$gdb_prompt $\" {\n \t\tverbose \"Set target to $targetname\"\n \t\treturn 0\n \t    }"
    }
  ]
}