{
  "sha": "b9771db784e287ec176dd2746a278eacdd973cf4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yjk3NzFkYjc4NGUyODdlYzE3NmRkMjc0NmEyNzhlYWNkZDk3M2NmNA==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-24T16:10:07Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2020-04-25T22:24:51Z"
    },
    "message": "Remove unused code block in inf_ptrace_target::wait\n\nRemove unused PT_GET_PROCESS_STATE block. It used to be used\nby OpenBSD, but it is now reimplemented independently in\nobsd-nat.c.\n\ngdb/ChangeLog:\n\n       * inf-ptrace.c (inf_ptrace_target::wait): Remove\n       `PT_GET_PROCESS_STATE' block.\n\nChange-Id: I9b872df8517b658c0dfe889fc1e4a7009bc5c076",
    "tree": {
      "sha": "c80a2dca1fbb7d621e7bbaae418c11bab6c81f9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c80a2dca1fbb7d621e7bbaae418c11bab6c81f9c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b9771db784e287ec176dd2746a278eacdd973cf4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9771db784e287ec176dd2746a278eacdd973cf4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b9771db784e287ec176dd2746a278eacdd973cf4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9771db784e287ec176dd2746a278eacdd973cf4/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d472f0fbaac80ed6363f26c3f417b9eee7d5e7fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d472f0fbaac80ed6363f26c3f417b9eee7d5e7fc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d472f0fbaac80ed6363f26c3f417b9eee7d5e7fc"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 5,
    "deletions": 38
  },
  "files": [
    {
      "sha": "ba0f680f9747e94528f40b8bd4fd7778833b0533",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9771db784e287ec176dd2746a278eacdd973cf4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9771db784e287ec176dd2746a278eacdd973cf4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b9771db784e287ec176dd2746a278eacdd973cf4",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-25  Kamil Rytarowski  <n54@gmx.com>\n+\n+       * inf-ptrace.c (inf_ptrace_target::wait): Remove\n+       `PT_GET_PROCESS_STATE' block.\n+\n 2020-04-24  Tom Tromey  <tom@tromey.com>\n \n \t* symtab.h (symbol_get_demangled_name): Don't declare."
    },
    {
      "sha": "a83ffcc87989b90416c4df58378dc26f883d3136",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9771db784e287ec176dd2746a278eacdd973cf4/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9771db784e287ec176dd2746a278eacdd973cf4/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=b9771db784e287ec176dd2746a278eacdd973cf4",
      "patch": "@@ -353,44 +353,6 @@ inf_ptrace_target::wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n     }\n   while (pid == -1);\n \n-#ifdef PT_GET_PROCESS_STATE\n-  if (WIFSTOPPED (status))\n-    {\n-      ptrace_state_t pe;\n-      pid_t fpid;\n-\n-      if (ptrace (PT_GET_PROCESS_STATE, pid,\n-\t\t  (PTRACE_TYPE_ARG3)&pe, sizeof pe) == -1)\n-\tperror_with_name ((\"ptrace\"));\n-\n-      switch (pe.pe_report_event)\n-\t{\n-\tcase PTRACE_FORK:\n-\t  ourstatus->kind = TARGET_WAITKIND_FORKED;\n-\t  ourstatus->value.related_pid = ptid_t (pe.pe_other_pid);\n-\n-\t  /* Make sure the other end of the fork is stopped too.  */\n-\t  fpid = waitpid (pe.pe_other_pid, &status, 0);\n-\t  if (fpid == -1)\n-\t    perror_with_name ((\"waitpid\"));\n-\n-\t  if (ptrace (PT_GET_PROCESS_STATE, fpid,\n-\t\t      (PTRACE_TYPE_ARG3)&pe, sizeof pe) == -1)\n-\t    perror_with_name ((\"ptrace\"));\n-\n-\t  gdb_assert (pe.pe_report_event == PTRACE_FORK);\n-\t  gdb_assert (pe.pe_other_pid == pid);\n-\t  if (fpid == inferior_ptid.pid ())\n-\t    {\n-\t      ourstatus->value.related_pid = ptid_t (pe.pe_other_pid);\n-\t      return ptid_t (fpid);\n-\t    }\n-\n-\t  return ptid_t (pid);\n-\t}\n-    }\n-#endif\n-\n   store_waitstatus (ourstatus, status);\n   return ptid_t (pid);\n }"
    }
  ]
}