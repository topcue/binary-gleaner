{
  "sha": "a1530dc7319595b5980e8501092782724c946351",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTE1MzBkYzczMTk1OTViNTk4MGU4NTAxMDkyNzgyNzI0Yzk0NjM1MQ==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-06-03T01:12:28Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-07-30T16:19:13Z"
    },
    "message": "Allow display of negative offsets in print_address_symbolic()\n\nWhen examining addresses associated with blocks with non-contiguous\naddress ranges, it's not uncommon to see large positive offsets which,\nfor some address width, actually represent a smaller negative offset.\nHere's an example taken from the test case (using the\ndw2-ranges-func-lo-cold executable):\n\n    (gdb) x/5i foo_cold\n       0x40110d <foo+4294967277>:\tpush   %rbp\n       0x40110e <foo+4294967278>:\tmov    %rsp,%rbp\n       0x401111 <foo+4294967281>:\tcallq  0x401106 <baz>\n       0x401116 <foo+4294967286>:\tnop\n       0x401117 <foo+4294967287>:\tpop    %rbp\n\nThis commit, in conjuction with an earlier patch from this series, causes\ncases like the above to be displayed like this (below) instead:\n\n(gdb) x/5i foo_cold\n   0x40110d <foo_cold>:\tpush   %rbp\n   0x40110e <foo-18>:\tmov    %rsp,%rbp\n   0x401111 <foo-15>:\tcallq  0x401106 <baz>\n   0x401116 <foo-10>:\tnop\n   0x401117 <foo-9>:\tpop    %rbp\n\nNote that the address of foo_cold is now (due to another patch) being\ndisplayed as <foo_cold> instead of <foo+BigOffset>.  The subsequent\nlines are shown as negative offsets from foo.\n\nDisassembly using the \"disassemble\" command is somewhat affected by\nthese changes:\n\nBefore:\n\n(gdb) disassemble foo_cold\nDump of assembler code for function foo:\nAddress range 0x401120 to 0x40113b:\n   0x0000000000401120 <+0>:\tpush   %rbp\n   0x0000000000401121 <+1>:\tmov    %rsp,%rbp\n   0x0000000000401124 <+4>:\tcallq  0x401119 <bar>\n   0x0000000000401129 <+9>:\tmov    0x2ef1(%rip),%eax        # 0x404020 <e>\n   0x000000000040112f <+15>:\ttest   %eax,%eax\n   0x0000000000401131 <+17>:\tje     0x401138 <foo+24>\n   0x0000000000401133 <+19>:\tcallq  0x40110d <foo+4294967277>\n   0x0000000000401138 <+24>:\tnop\n   0x0000000000401139 <+25>:\tpop    %rbp\n   0x000000000040113a <+26>:\tretq\nAddress range 0x40110d to 0x401119:\n   0x000000000040110d <+-19>:\tpush   %rbp\n   0x000000000040110e <+-18>:\tmov    %rsp,%rbp\n   0x0000000000401111 <+-15>:\tcallq  0x401106 <baz>\n   0x0000000000401116 <+-10>:\tnop\n   0x0000000000401117 <+-9>:\tpop    %rbp\n   0x0000000000401118 <+-8>:\tretq\nEnd of assembler dump.\n\nAfter:\n\n(gdb) disassemble foo_cold\nDump of assembler code for function foo:\nAddress range 0x401120 to 0x40113b:\n   0x0000000000401120 <+0>:\tpush   %rbp\n   0x0000000000401121 <+1>:\tmov    %rsp,%rbp\n   0x0000000000401124 <+4>:\tcallq  0x401119 <bar>\n   0x0000000000401129 <+9>:\tmov    0x2ef1(%rip),%eax        # 0x404020 <e>\n   0x000000000040112f <+15>:\ttest   %eax,%eax\n   0x0000000000401131 <+17>:\tje     0x401138 <foo+24>\n   0x0000000000401133 <+19>:\tcallq  0x40110d <foo_cold>\n   0x0000000000401138 <+24>:\tnop\n   0x0000000000401139 <+25>:\tpop    %rbp\n   0x000000000040113a <+26>:\tretq\nAddress range 0x40110d to 0x401119:\n   0x000000000040110d <-19>:\tpush   %rbp\n   0x000000000040110e <-18>:\tmov    %rsp,%rbp\n   0x0000000000401111 <-15>:\tcallq  0x401106 <baz>\n   0x0000000000401116 <-10>:\tnop\n   0x0000000000401117 <-9>:\tpop    %rbp\n   0x0000000000401118 <-8>:\tretq\nEnd of assembler dump.\n\nNote that negative offsets are now displayed without the leading \"+\".\nAlso, the callq to foo_cold is now displayed as such instead of a callq\nto foo with a large positive offset.\n\ngdb/ChangeLog:\n\n\t* printcmd.c (print_address_symbolic): Print negative offsets.\n\t(build_address_symbolic): Force signed arithmetic when computing\n\toffset.",
    "tree": {
      "sha": "3f80dd7d3fb7e006cdf1989570fb035ee6c612b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3f80dd7d3fb7e006cdf1989570fb035ee6c612b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a1530dc7319595b5980e8501092782724c946351",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1530dc7319595b5980e8501092782724c946351",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a1530dc7319595b5980e8501092782724c946351",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1530dc7319595b5980e8501092782724c946351/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2906593ffecef89f8d64e0f1ca21494be71d0ebd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2906593ffecef89f8d64e0f1ca21494be71d0ebd"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 8,
    "deletions": 6
  },
  "files": [
    {
      "sha": "4d9ec41c696c0a3f7f01b55c0bca3e2854253a08",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1530dc7319595b5980e8501092782724c946351/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1530dc7319595b5980e8501092782724c946351/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a1530dc7319595b5980e8501092782724c946351",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-30  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* printcmd.c (print_address_symbolic): Print negative offsets.\n+\t(build_address_symbolic): Force signed arithmetic when computing\n+\toffset.\n+\n 2019-07-30  Christian Biesinger  <cbiesinger@google.com>\n \n \tPR/24474: Add a function to lookup static variables.\n@@ -84,10 +90,6 @@\n \t* dwarf2-frame.c (dwarf2_frame_cache): Don't decode FDE instructions\n \tfor entry pc when entry pc is out of range for that FDE.\n \n-\t* printcmd.c (print_address_symbolic): Print negative offsets.\n-\t(build_address_symbolic): Force signed arithmetic when computing\n-\toffset.\n-\n 2019-07-26  Brian Callahan  <bcallah@openbsd.org>\n \n \tPR gdb/24839:"
    },
    {
      "sha": "1faa09eee7109fea055d36fdfaa6a23b2b69701c",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a1530dc7319595b5980e8501092782724c946351/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a1530dc7319595b5980e8501092782724c946351/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=a1530dc7319595b5980e8501092782724c946351",
      "patch": "@@ -540,7 +540,7 @@ print_address_symbolic (struct gdbarch *gdbarch, CORE_ADDR addr,\n     fputs_filtered (\"<\", stream);\n   fputs_styled (name.c_str (), function_name_style.style (), stream);\n   if (offset != 0)\n-    fprintf_filtered (stream, \"+%u\", (unsigned int) offset);\n+    fprintf_filtered (stream, \"%+d\", offset);\n \n   /* Append source filename and line number if desired.  Give specific\n      line # of this addr, if we have it; else line # of the nearest symbol.  */\n@@ -680,7 +680,7 @@ build_address_symbolic (struct gdbarch *gdbarch,\n       && name_location + max_symbolic_offset > name_location)\n     return 1;\n \n-  *offset = addr - name_location;\n+  *offset = (LONGEST) addr - name_location;\n \n   *name = name_temp;\n "
    }
  ]
}