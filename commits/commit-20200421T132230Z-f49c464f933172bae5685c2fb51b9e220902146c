{
  "sha": "f49c464f933172bae5685c2fb51b9e220902146c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQ5YzQ2NGY5MzMxNzJiYWU1Njg1YzJmYjUxYjllMjIwOTAyMTQ2Yw==",
  "commit": {
    "author": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-02-11T12:46:27Z"
    },
    "committer": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-04-21T13:22:30Z"
    },
    "message": "[gdb/testsuite] allow more registers in gdb.base/jit-reader.exp\n\nFixes jit-reader test failures on systems that have more registers than\nexpected by the current condition.\n\nOn Intel i9-7920X the following extra registers are printed:\n\nk0             0x0                 0\nk1             0x0                 0\nk2             0x0                 0\nk3             0x0                 0\nk4             0x0                 0\nk5             0x0                 0\nk6             0x0                 0\nk7             0x0                 0\n\ngdb/testsuite/ChangeLog:\n\n2020-02-18  Mihails Strasuns  <mihails.strasuns@intel.com>\n\n\t* gdb.base/jit-reader.exp: Relax register output check.",
    "tree": {
      "sha": "7dfa39e376d35af65faf8e8b1865b47a4ee93168",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7dfa39e376d35af65faf8e8b1865b47a4ee93168"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f49c464f933172bae5685c2fb51b9e220902146c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f49c464f933172bae5685c2fb51b9e220902146c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f49c464f933172bae5685c2fb51b9e220902146c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f49c464f933172bae5685c2fb51b9e220902146c/comments",
  "author": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6914be53bd662eefd979d0c82d2e20e108c4ee66",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6914be53bd662eefd979d0c82d2e20e108c4ee66"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 14,
    "deletions": 2
  },
  "files": [
    {
      "sha": "8663f0021deff90107766c14a0e1f398aa040238",
      "filename": "gdb/testsuite/gdb.base/jit-reader.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f49c464f933172bae5685c2fb51b9e220902146c/gdb/testsuite/gdb.base/jit-reader.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f49c464f933172bae5685c2fb51b9e220902146c/gdb/testsuite/gdb.base/jit-reader.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-reader.exp?ref=f49c464f933172bae5685c2fb51b9e220902146c",
      "patch": "@@ -66,7 +66,8 @@ proc info_registers_current_frame {sp} {\n     set any \"\\[^\\r\\n\\]*\"\n \n     set neg_decimal \"-?$decimal\"\n-    gdb_test \"info registers\" \\\n+\n+    set expected \\\n \t[multi_line \\\n \t     \"rax            $hex +$neg_decimal\" \\\n \t     \"rbx            $hex +$neg_decimal\" \\\n@@ -93,6 +94,11 @@ proc info_registers_current_frame {sp} {\n \t     \"fs             $hex +$neg_decimal\" \\\n \t     \"gs             $hex +$neg_decimal\" \\\n \t    ]\n+\n+    # There may be more registers.\n+    append expected \".*\"\n+\n+    gdb_test \"info registers\" $expected\n }\n \n proc jit_reader_test {} {\n@@ -170,7 +176,8 @@ proc jit_reader_test {} {\n \n \t\t# Since the JIT unwinder only provides RIP/RSP/RBP,\n \t\t# all other registers should show as \"<not saved>\".\n-\t\tgdb_test \"info registers\" \\\n+\n+\t\tset expected \\\n \t\t    [multi_line \\\n \t\t\t \"rax            <not saved>\" \\\n \t\t\t \"rbx            <not saved>\" \\\n@@ -198,6 +205,11 @@ proc jit_reader_test {} {\n \t\t\t \"gs             <not saved>\" \\\n \t\t\t]\n \n+\t\t# There may be more registers.\n+\t\tappend expected \".*\"\n+\n+\t\tgdb_test \"info registers\" $expected\n+\n \t\t# Make sure that \"info frame\" doesn't crash.\n \t\tgdb_test \"info frame\" \"Stack level 1, .*in main.*\"\n "
    }
  ]
}