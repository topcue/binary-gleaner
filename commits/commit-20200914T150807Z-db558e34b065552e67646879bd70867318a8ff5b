{
  "sha": "db558e34b065552e67646879bd70867318a8ff5b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGI1NThlMzRiMDY1NTUyZTY3NjQ2ODc5YmQ3MDg2NzMxOGE4ZmY1Yg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-09-14T15:08:07Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-09-14T15:08:07Z"
    },
    "message": "gdb: add type::endianity_is_not_default / type::set_endianity_is_not_default\n\nAdd the `endianity_is_not_default` and `set_endianity_is_not_default`\nmethods on `struct type`, in order to remove the\n`TYPE_ENDIANITY_NOT_DEFAULT` macro.  In this patch, the macro is changed\nto use the getter, so all the call sites of the macro that are used as a\nsetter are changed to use the setter method directly.  The next patch\nwill remove the macro completely.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (struct type) <endianity_is_not_default,\n\tset_endianity_is_not_default>: New methods.\n\t(TYPE_ENDIANITY_NOT_DEFAULT): Use\n\ttype::endianity_is_not_default, change all write call sites to\n\tuse type::set_endianity_is_not_default.\n\nChange-Id: I67acd68fcdae424d7e4a601afda78612ad5d92db",
    "tree": {
      "sha": "a718e83e308dc84ee1d88d3d6f69c1af7d74ea16",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a718e83e308dc84ee1d88d3d6f69c1af7d74ea16"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/db558e34b065552e67646879bd70867318a8ff5b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db558e34b065552e67646879bd70867318a8ff5b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/db558e34b065552e67646879bd70867318a8ff5b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db558e34b065552e67646879bd70867318a8ff5b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "22c4c60c865ad3251e28b7ac60a069e20c8a0378",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/22c4c60c865ad3251e28b7ac60a069e20c8a0378",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/22c4c60c865ad3251e28b7ac60a069e20c8a0378"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 23,
    "deletions": 5
  },
  "files": [
    {
      "sha": "9d7661d1850cd92f51c1b092bc00de6bc3f55ccd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db558e34b065552e67646879bd70867318a8ff5b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db558e34b065552e67646879bd70867318a8ff5b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=db558e34b065552e67646879bd70867318a8ff5b",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-14  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.h (struct type) <endianity_is_not_default,\n+\tset_endianity_is_not_default>: New methods.\n+\t(TYPE_ENDIANITY_NOT_DEFAULT): Use\n+\ttype::endianity_is_not_default, change all write call sites to\n+\tuse type::set_endianity_is_not_default.\n+\n 2020-09-14  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.h (TYPE_FIXED_INSTANCE): Remove, replace all"
    },
    {
      "sha": "0644a2d5f95b1363f36241fda8adaf344a10b237",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db558e34b065552e67646879bd70867318a8ff5b/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db558e34b065552e67646879bd70867318a8ff5b/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=db558e34b065552e67646879bd70867318a8ff5b",
      "patch": "@@ -18063,7 +18063,7 @@ read_base_type (struct die_info *die, struct dwarf2_cu *cu)\n \n   maybe_set_alignment (cu, die, type);\n \n-  TYPE_ENDIANITY_NOT_DEFAULT (type) = gdbarch_byte_order (arch) != byte_order;\n+  type->set_endianity_is_not_default (gdbarch_byte_order (arch) != byte_order);\n \n   return set_die_type (die, type, cu);\n }"
    },
    {
      "sha": "ed548dd6bcec38ea1ef4ac2ca2080b276c2ba6cb",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db558e34b065552e67646879bd70867318a8ff5b/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db558e34b065552e67646879bd70867318a8ff5b/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=db558e34b065552e67646879bd70867318a8ff5b",
      "patch": "@@ -958,8 +958,8 @@ create_range_type (struct type *result_type, struct type *index_type,\n   if (high_bound->kind () == PROP_CONST && high_bound->const_val () < 0)\n     result_type->set_is_unsigned (false);\n \n-  TYPE_ENDIANITY_NOT_DEFAULT (result_type)\n-    = TYPE_ENDIANITY_NOT_DEFAULT (index_type);\n+  result_type->set_endianity_is_not_default\n+    (index_type->endianity_is_not_default ());\n \n   return result_type;\n }"
    },
    {
      "sha": "beff6a7466e95c8f5ad2e0f1f62212df26143a5a",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db558e34b065552e67646879bd70867318a8ff5b/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db558e34b065552e67646879bd70867318a8ff5b/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=db558e34b065552e67646879bd70867318a8ff5b",
      "patch": "@@ -214,7 +214,7 @@ DEF_ENUM_FLAGS_TYPE (enum type_instance_flag_value, type_instance_flags);\n    that indicates the desired endian interpretation of the variable\n    differs from the native endian representation. */\n \n-#define TYPE_ENDIANITY_NOT_DEFAULT(t) (TYPE_MAIN_TYPE (t)->flag_endianity_not_default)\n+#define TYPE_ENDIANITY_NOT_DEFAULT(t) ((t)->endianity_is_not_default ())\n \n /* * Not textual.  By default, GDB treats all single byte integers as\n    characters (or elements of strings) unless this flag is set.  */\n@@ -798,7 +798,7 @@ struct main_type\n   unsigned int m_flag_gnu_ifunc : 1;\n   unsigned int m_flag_fixed_instance : 1;\n   unsigned int flag_objfile_owned : 1;\n-  unsigned int flag_endianity_not_default : 1;\n+  unsigned int m_flag_endianity_not_default : 1;\n \n   /* * True if this type was declared with \"class\" rather than\n      \"struct\".  */\n@@ -1149,6 +1149,16 @@ struct type\n     this->main_type->m_flag_fixed_instance = is_fixed_instance;\n   }\n \n+  bool endianity_is_not_default () const\n+  {\n+    return this->main_type->m_flag_endianity_not_default;\n+  }\n+\n+  void set_endianity_is_not_default (bool endianity_is_not_default)\n+  {\n+    this->main_type->m_flag_endianity_not_default = endianity_is_not_default;\n+  }\n+\n   /* * Return the dynamic property of the requested KIND from this type's\n      list of dynamic properties.  */\n   dynamic_prop *dyn_prop (dynamic_prop_node_kind kind) const;"
    }
  ]
}