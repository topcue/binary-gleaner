{
  "sha": "d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDg5ZWRmOWI4MTFhYzNjNTY0M2I4YTg2NmMyMzhhOTNmMzVhNWU2Yw==",
  "commit": {
    "author": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2020-03-13T07:52:49Z"
    },
    "committer": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2020-04-21T13:56:23Z"
    },
    "message": "gdb, btrace: make record-btrace per-inferior\n\nWhen there is more than one inferior, the \"record btrace\" command should\nonly apply to the current inferior.\n\ngdb/ChangeLog:\n\n2020-03-19  Markus Metzger  <markus.t.metzger@intel.com>\n\n\t* record-btrace.c (record_btrace_enable_warn): Ignore thread if\n\tits inferior is not recorded by us.\n\t(record_btrace_target_open): Replace call to all_non_exited_threads ()\n\twith call to current_inferior ()->non_exited_threads ().\n\t(record_btrace_target::stop_recording): Likewise.\n\t(record_btrace_target::close): Likewise.\n\t(record_btrace_target::wait): Likewise.\n\t(record_btrace_target::record_stop_replaying): Likewise.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-19  Markus Metzger  <markus.t.metzger@intel.com>\n\n\t* gdb.btrace/multi-inferior.c: New test.\n\t* gdb.btrace/multi-inferior.exp: New file.",
    "tree": {
      "sha": "0941899b8eb3ed9cc108c7d55a786cbf58164424",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0941899b8eb3ed9cc108c7d55a786cbf58164424"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/comments",
  "author": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5897fd4994effd21cbe951e6d2c417097adea162",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5897fd4994effd21cbe951e6d2c417097adea162",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5897fd4994effd21cbe951e6d2c417097adea162"
    }
  ],
  "stats": {
    "total": 126,
    "additions": 121,
    "deletions": 5
  },
  "files": [
    {
      "sha": "bdec0f39079dd1b8975d6f9bdf7dc1f536712b71",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
      "patch": "@@ -1,3 +1,15 @@\n+2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>\n+\n+\t* record-btrace.c (record_btrace_enable_warn): Ignore thread if\n+\tits inferior is not recorded by us.\n+\t(record_btrace_target_open): Replace call to\n+\tall_non_exited_threads () with call to current_inferior\n+\t()->non_exited_threads ().\n+\t(record_btrace_target::stop_recording): Likewise.\n+\t(record_btrace_target::close): Likewise.\n+\t(record_btrace_target::wait): Likewise.\n+\t(record_btrace_target::record_stop_replaying): Likewise.\n+\n 2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>\n \n \t* btrace.c (btrace_enable): Throw an error on double enables and"
    },
    {
      "sha": "226d56dfe3774dad2660a4a33f6801b516c426ce",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
      "patch": "@@ -284,6 +284,11 @@ require_btrace (void)\n static void\n record_btrace_enable_warn (struct thread_info *tp)\n {\n+  /* Ignore this thread if its inferior is not recorded by us.  */\n+  target_ops *rec = tp->inf->target_at (record_stratum);\n+  if (rec != &record_btrace_ops)\n+    return;\n+\n   try\n     {\n       btrace_enable (tp, &record_btrace_conf);\n@@ -387,7 +392,7 @@ record_btrace_target_open (const char *args, int from_tty)\n   if (!target_has_execution)\n     error (_(\"The program is not being run.\"));\n \n-  for (thread_info *tp : all_non_exited_threads ())\n+  for (thread_info *tp : current_inferior ()->non_exited_threads ())\n     if (args == NULL || *args == 0 || number_is_in_list (args, tp->global_num))\n       {\n \tbtrace_enable (tp, &record_btrace_conf);\n@@ -409,7 +414,7 @@ record_btrace_target::stop_recording ()\n \n   record_btrace_auto_disable ();\n \n-  for (thread_info *tp : all_non_exited_threads ())\n+  for (thread_info *tp : current_inferior ()->non_exited_threads ())\n     if (tp->btrace.target != NULL)\n       btrace_disable (tp);\n }\n@@ -443,7 +448,7 @@ record_btrace_target::close ()\n \n   /* We should have already stopped recording.\n      Tear down btrace in case we have not.  */\n-  for (thread_info *tp : all_non_exited_threads ())\n+  for (thread_info *tp : current_inferior ()->non_exited_threads ())\n     btrace_teardown (tp);\n }\n \n@@ -2630,7 +2635,7 @@ record_btrace_target::wait (ptid_t ptid, struct target_waitstatus *status,\n   /* Stop all other threads. */\n   if (!target_is_non_stop_p ())\n     {\n-      for (thread_info *tp : all_non_exited_threads ())\n+      for (thread_info *tp : current_inferior ()->non_exited_threads ())\n \trecord_btrace_cancel_resume (tp);\n     }\n \n@@ -2867,7 +2872,7 @@ record_btrace_target::goto_record (ULONGEST insn)\n void\n record_btrace_target::record_stop_replaying ()\n {\n-  for (thread_info *tp : all_non_exited_threads ())\n+  for (thread_info *tp : current_inferior ()->non_exited_threads ())\n     record_btrace_stop_replaying (tp);\n }\n "
    },
    {
      "sha": "038df8634b286ec898b9214eefff5a70696db18d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>\n+\n+\t* gdb.btrace/multi-inferior.c: New test.\n+\t* gdb.btrace/multi-inferior.exp: New file.\n+\n 2020-04-21  Markus Metzger  <markus.t.metzger@intel.com>\n \n \t* gdb.btrace/enable-new-thread.c: New test."
    },
    {
      "sha": "9d7b2f1a4c28b1c5298708fddf4c8c8ed2f11675",
      "filename": "gdb/testsuite/gdb.btrace/multi-inferior.c",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/testsuite/gdb.btrace/multi-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/testsuite/gdb.btrace/multi-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/multi-inferior.c?ref=d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main (void)\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "87a99332e03e897c5a463446fd9a9d57fa35e10b",
      "filename": "gdb/testsuite/gdb.btrace/multi-inferior.exp",
      "status": "added",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/testsuite/gdb.btrace/multi-inferior.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d89edf9b811ac3c5643b8a866c238a93f35a5e6c/gdb/testsuite/gdb.btrace/multi-inferior.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/multi-inferior.exp?ref=d89edf9b811ac3c5643b8a866c238a93f35a5e6c",
      "patch": "@@ -0,0 +1,72 @@\n+# This testcase is part of GDB, the GNU debugger.\n+#\n+# Copyright 2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that recording is per-inferior.\n+#\n+# When recording an inferior, threads from other inferiors, both existing\n+# and newly created, are not automatically recorded.\n+#\n+# Each inferior can be recorded separately.\n+\n+if { [skip_btrace_tests] } {\n+    unsupported \"target does not support record-btrace\"\n+    return -1\n+}\n+\n+standard_testfile\n+if [prepare_for_testing \"failed to prepare\" $testfile {} {debug}] {\n+    return -1\n+}\n+\n+with_test_prefix \"inferior 1\" {\n+    if ![runto_main] {\n+\tuntested \"failed to run to main\"\n+\treturn -1\n+    }\n+}\n+\n+with_test_prefix \"inferior 2\" {\n+    gdb_test \"add-inferior -exec ${binfile}\" \"Added inferior 2.*\"\n+    gdb_test \"inferior 2\" \"Switching to inferior 2.*\"\n+\n+    if ![runto_main] {\n+\tuntested \"inferior 2: failed to run to main\"\n+\treturn -1\n+    }\n+\n+    gdb_test_no_output \"record btrace\" \"record btrace\"\n+}\n+\n+with_test_prefix \"inferior 1\" {\n+    gdb_test \"inferior 1\" \"Switching to inferior 1.*\"\n+\n+    gdb_test \"info record\" \"No record target is currently active\\\\.\"\n+    gdb_test_no_output \"record btrace\" \"record btrace\"\n+}\n+\n+with_test_prefix \"inferior 3\" {\n+    gdb_test \"add-inferior -exec ${binfile}\" \"Added inferior 3.*\"\n+    gdb_test \"inferior 3\" \"Switching to inferior 3.*\"\n+\n+    if ![runto_main] {\n+\tuntested \"inferior 3: failed to run to main\"\n+\treturn -1\n+    }\n+\n+    gdb_test \"info record\" \"No record target is currently active\\\\.\"\n+    gdb_test_no_output \"record btrace\" \"record btrace\"\n+}"
    }
  ]
}