{
  "sha": "a2e66773735d2d2de2ba652e44650288c88ad752",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTJlNjY3NzM3MzVkMmQyZGUyYmE2NTJlNDQ2NTAyODhjODhhZDc1Mg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-06T09:27:04Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-06T13:55:09Z"
    },
    "message": "Return symbol from symbol_at_address_func\n\ninclude/\n\t* dis-asm.h (struct disassemble_info <symbol_at_address_func>):\n\tReturn asymbol*.\nbinutils/\n\t* objdump.c (objdump_symbol_at_address): Return asymbol*.\nopcodes/\n\t* dis-buf.c (generic_symbol_at_address): Return symbol* NULL.\n\t* s12z-dis.c (decode_possible_symbol): Use symbol returned from\n\tsymbol_at_address_func.",
    "tree": {
      "sha": "f2e8dfe1592fd03641ab6e14951cc89e3e38b79e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2e8dfe1592fd03641ab6e14951cc89e3e38b79e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a2e66773735d2d2de2ba652e44650288c88ad752",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2e66773735d2d2de2ba652e44650288c88ad752",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a2e66773735d2d2de2ba652e44650288c88ad752",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2e66773735d2d2de2ba652e44650288c88ad752/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4db29512ce5616e90a9cdbc4daa852589b7357c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4db29512ce5616e90a9cdbc4daa852589b7357c0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4db29512ce5616e90a9cdbc4daa852589b7357c0"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 32,
    "deletions": 30
  },
  "files": [
    {
      "sha": "413757d685921f9cf87fee488c3045ab9883049c",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2e66773735d2d2de2ba652e44650288c88ad752/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2e66773735d2d2de2ba652e44650288c88ad752/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=a2e66773735d2d2de2ba652e44650288c88ad752",
      "patch": "@@ -1,3 +1,7 @@\n+2021-04-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (objdump_symbol_at_address): Return asymbol*.\n+\n 2021-04-06  Alan Modra  <amodra@gmail.com>\n \n \t* NEWS: Mention C99 requirement."
    },
    {
      "sha": "ea80a704ee39e44a393de085cf3ada0b527dd79e",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2e66773735d2d2de2ba652e44650288c88ad752/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2e66773735d2d2de2ba652e44650288c88ad752/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=a2e66773735d2d2de2ba652e44650288c88ad752",
      "patch": "@@ -1459,14 +1459,16 @@ objdump_print_address (bfd_vma vma, struct disassemble_info *inf)\n \n /* Determine if the given address has a symbol associated with it.  */\n \n-static int\n+static asymbol *\n objdump_symbol_at_address (bfd_vma vma, struct disassemble_info * inf)\n {\n   asymbol * sym;\n \n   sym = find_symbol_for_address (vma, inf, NULL);\n+  if (sym != NULL && bfd_asymbol_value (sym) == vma)\n+    return sym;\n \n-  return (sym != NULL && (bfd_asymbol_value (sym) == vma));\n+  return NULL;\n }\n \n /* Hold the last function name and the last line number we displayed"
    },
    {
      "sha": "639f2bf932433a0899f01e7bce23f68fa0ac0bdd",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2e66773735d2d2de2ba652e44650288c88ad752/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2e66773735d2d2de2ba652e44650288c88ad752/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=a2e66773735d2d2de2ba652e44650288c88ad752",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* dis-asm.h (struct disassemble_info <symbol_at_address_func>):\n+\tReturn asymbol*.\n+\n 2021-04-01  Martin Liska  <mliska@suse.cz>\n \n \t* opcode/cr16.h (strneq): Remove strneq and use startswith."
    },
    {
      "sha": "f3562faa000a32f8c849e661b655851b83a21f1e",
      "filename": "include/dis-asm.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2e66773735d2d2de2ba652e44650288c88ad752/include/dis-asm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2e66773735d2d2de2ba652e44650288c88ad752/include/dis-asm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/dis-asm.h?ref=a2e66773735d2d2de2ba652e44650288c88ad752",
      "patch": "@@ -144,13 +144,13 @@ typedef struct disassemble_info\n      some circumstances we want to include the overlay number in the\n      address, (normally because there is a symbol associated with\n      that address), but sometimes we want to mask out the overlay bits.  */\n-  int (* symbol_at_address_func)\n+  asymbol * (*symbol_at_address_func)\n     (bfd_vma addr, struct disassemble_info *dinfo);\n \n   /* Function called to check if a SYMBOL is can be displayed to the user.\n      This is used by some ports that want to hide special symbols when\n      displaying debugging outout.  */\n-  bool (* symbol_is_valid)\n+  bool (*symbol_is_valid)\n     (asymbol *, struct disassemble_info *dinfo);\n \n   /* These are for buffer_read_memory.  */\n@@ -376,11 +376,11 @@ extern void perror_memory (int, bfd_vma, struct disassemble_info *);\n extern void generic_print_address\n   (bfd_vma, struct disassemble_info *);\n \n-/* Always true.  */\n-extern int generic_symbol_at_address\n+/* Always NULL.  */\n+extern asymbol *generic_symbol_at_address\n   (bfd_vma, struct disassemble_info *);\n \n-/* Also always true.  */\n+/* Always true.  */\n extern bool generic_symbol_is_valid\n   (asymbol *, struct disassemble_info *);\n "
    },
    {
      "sha": "7a380dc0087eb11e086f2fb0334fe571a50c34d2",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2e66773735d2d2de2ba652e44650288c88ad752/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2e66773735d2d2de2ba652e44650288c88ad752/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=a2e66773735d2d2de2ba652e44650288c88ad752",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* dis-buf.c (generic_symbol_at_address): Return symbol* NULL.\n+\t* s12z-dis.c (decode_possible_symbol): Use symbol returned from\n+\tsymbol_at_address_func.\n+\n 2021-04-05  Alan Modra  <amodra@gmail.com>\n \n \t* configure.ac: Don't check for limits.h, string.h, strings.h or"
    },
    {
      "sha": "dfc1563f09d72ef6391dd36a0c26356176a55001",
      "filename": "opcodes/dis-buf.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2e66773735d2d2de2ba652e44650288c88ad752/opcodes/dis-buf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2e66773735d2d2de2ba652e44650288c88ad752/opcodes/dis-buf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/dis-buf.c?ref=a2e66773735d2d2de2ba652e44650288c88ad752",
      "patch": "@@ -87,13 +87,13 @@ generic_print_address (bfd_vma addr, struct disassemble_info *info)\n   (*info->fprintf_func) (info->stream, \"0x%s\", buf);\n }\n \n-/* Just return true.  */\n+/* Just return NULL.  */\n \n-int\n+asymbol *\n generic_symbol_at_address (bfd_vma addr ATTRIBUTE_UNUSED,\n \t\t\t   struct disassemble_info *info ATTRIBUTE_UNUSED)\n {\n-  return 1;\n+  return NULL;\n }\n \n /* Just return TRUE.  */"
    },
    {
      "sha": "ec8f4f708837021048db85aef99d563ed32b4a0d",
      "filename": "opcodes/s12z-dis.c",
      "status": "modified",
      "additions": 5,
      "deletions": 20,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2e66773735d2d2de2ba652e44650288c88ad752/opcodes/s12z-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2e66773735d2d2de2ba652e44650288c88ad752/opcodes/s12z-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/s12z-dis.c?ref=a2e66773735d2d2de2ba652e44650288c88ad752",
      "patch": "@@ -206,27 +206,12 @@ decode_possible_symbol (bfd_vma addr, bfd_vma base,\n                         struct disassemble_info *info, bool relative)\n {\n   const char *fmt = relative  ? \"*%+\" BFD_VMA_FMT \"d\" : \"%\" BFD_VMA_FMT \"d\";\n-  if (!info->symbol_at_address_func (addr + base, info))\n-    {\n-      (*info->fprintf_func) (info->stream, fmt, addr);\n-    }\n+  asymbol *sym = info->symbol_at_address_func (addr + base, info);\n+\n+  if (!sym)\n+    (*info->fprintf_func) (info->stream, fmt, addr);\n   else\n-    {\n-      asymbol *sym = NULL;\n-      int j;\n-      for (j = 0; j < info->symtab_size; ++j)\n-\t{\n-\t  sym = info->symtab[j];\n-\t  if (bfd_asymbol_value (sym) == addr + base)\n-\t    {\n-\t      break;\n-\t    }\n-\t}\n-      if (j < info->symtab_size)\n-\t(*info->fprintf_func) (info->stream, \"%s\", bfd_asymbol_name (sym));\n-      else\n-        (*info->fprintf_func) (info->stream, fmt, addr);\n-    }\n+    (*info->fprintf_func) (info->stream, \"%s\", bfd_asymbol_name (sym));\n }\n \n "
    }
  ]
}