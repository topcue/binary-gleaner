{
  "sha": "1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWU3ZmNjY2I4ZDZkMGE2YmQyOTVhNTA0MDBjNTUzY2M1OTUyNTBmMQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-17T18:07:32Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-22T10:00:19Z"
    },
    "message": "gdb/testsuite: use the correct .debug_str section name for DW_FORM_strp\n\nWhen handling DWARF attributes of the form DW_FORM_strp the strings\nshould be placed in the .debug_str section, not .debug_string as they\ncurrently are by the DWARF assembler (in lib/dwarf.exp).\n\nI've added a test.  This is as much to test the DWARF generator as it\nis to test GDB as GCC makes frequent use of DW_FORM_strp so we can be\npretty sure this part of GDB is already well tested.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.dwarf2/dw2-using-debug-str.c: New file.\n\t* gdb.dwarf2/dw2-using-debug-str.exp: New file.\n\t* lib/dwarf.exp (Dwarf::DW_FORM_strp): Create .debug_str section,\n\tnot .debug_string.",
    "tree": {
      "sha": "b4a2d6cc035441ab202427c8d71ab309d465ca68",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b4a2d6cc035441ab202427c8d71ab309d465ca68"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d171632faa9f563f47224e0f6214f8860ed7bcc4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d171632faa9f563f47224e0f6214f8860ed7bcc4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d171632faa9f563f47224e0f6214f8860ed7bcc4"
    }
  ],
  "stats": {
    "total": 138,
    "additions": 137,
    "deletions": 1
  },
  "files": [
    {
      "sha": "cb5dc81578cd70e65a1d09133e980711ad72e55a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.dwarf2/dw2-using-debug-str.c: New file.\n+\t* gdb.dwarf2/dw2-using-debug-str.exp: New file.\n+\t* lib/dwarf.exp (Dwarf::DW_FORM_strp): Create .debug_str section,\n+\tnot .debug_string.\n+\n 2021-03-20  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.base/maint.exp: Update \"maint print statistics\" output."
    },
    {
      "sha": "27f7f0dfb4bb8b5920f166d27c36197a133df51c",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.c",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.c?ref=1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
      "patch": "@@ -0,0 +1,28 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* Our fake object.  */\n+int global_var[100];\n+\n+int\n+main (int argc, char **argv)\n+{\n+  asm (\"main_label: .globl main_label\");\n+\n+  return 0;\n+}"
    },
    {
      "sha": "3184f9078cb4e8c753b743644b96cf9805d1ef98",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.exp",
      "status": "added",
      "additions": 101,
      "deletions": 0,
      "changes": 101,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-using-debug-str.exp?ref=1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
      "patch": "@@ -0,0 +1,101 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This test is as much about testing the lib/dwarf.exp DWARF generator\n+# as it is about testing GDB.  At the time this test was written, this\n+# was the only test that generated any DWARF using DW_FORM_strp.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+standard_testfile .c -dw.S\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile}] } {\n+    return -1\n+}\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcfile\n+\n+    cu {} {\n+\tcompile_unit {\n+            {language @DW_LANG_C}\n+            {name ${srcfile}}\n+        } {\n+\t    declare_labels int4_type struct_type\n+\n+\t    int4_type: DW_TAG_base_type {\n+\t\t{DW_AT_byte_size 4 DW_FORM_sdata}\n+\t\t{DW_AT_encoding  @DW_ATE_signed}\n+\t\t{DW_AT_name      integer}\n+\t    }\n+\n+\t    struct_type: DW_TAG_structure_type {\n+\t\t{DW_AT_name \"foo_t\" DW_FORM_strp}\n+\t\t{DW_AT_byte_size 12 DW_FORM_sdata}\n+\t    } {\n+\t\tmember {\n+\t\t    {name \"aa\" DW_FORM_strp}\n+\t\t    {type :$int4_type}\n+\t\t    {data_member_location 0 data1}\n+\t\t}\n+\t\tmember {\n+\t\t    {name \"bb\" DW_FORM_strp}\n+\t\t    {type :$int4_type}\n+\t\t    {data_member_location 4 data1}\n+\t\t}\n+\t\tmember {\n+\t\t    {name \"cc\" DW_FORM_strp}\n+\t\t    {type :$int4_type}\n+\t\t    {data_member_location 8 data1}\n+\t\t}\n+\t    }\n+\n+\t    DW_TAG_variable {\n+\t\t{DW_AT_name global_var DW_FORM_strp}\n+\t\t{DW_AT_type :$struct_type}\n+\t\t{DW_AT_location {\n+\t\t    DW_OP_addr [gdb_target_symbol global_var]\n+\t\t} SPECIAL_expr}\n+\t\t{external 1 flag}\n+\t    }\n+\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name main DW_FORM_strp}\n+\t\t{MACRO_AT_range {main}}\n+\t    }\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+# Print the type of global_var.  This type information is entirely\n+# fictional, it only exists in the DWARF, but it contains lots of nice\n+# field names, all of which are stored in the .debug_str section.\n+gdb_test \"p global_var\" \" = \\\\{aa = 0, bb = 0, cc = 0\\\\}\""
    },
    {
      "sha": "4cd5e16c60401cbe3995327588c4fced009a4df7",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e7fcccb8d6d0a6bd295a50400c553cc595250f1/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=1e7fcccb8d6d0a6bd295a50400c553cc595250f1",
      "patch": "@@ -507,7 +507,7 @@ namespace eval Dwarf {\n \n \t\tif {![info exists _strings($value)]} {\n \t\t    set _strings($value) [new_label strp]\n-\t\t    _defer_output .debug_string {\n+\t\t    _defer_output .debug_str {\n \t\t\tdefine_label $_strings($value)\n \t\t\t_op .ascii [_quote $value]\n \t\t    }"
    }
  ]
}