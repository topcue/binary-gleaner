{
  "sha": "a9b34532453a065991b32f15055adf76fa86ff8c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTliMzQ1MzI0NTNhMDY1OTkxYjMyZjE1MDU1YWRmNzZmYTg2ZmY4Yw==",
  "commit": {
    "author": {
      "name": "Eli Zaretskii",
      "email": "eliz@gnu.org",
      "date": "2020-02-14T09:53:55Z"
    },
    "committer": {
      "name": "Eli Zaretskii",
      "email": "eliz@gnu.org",
      "date": "2020-02-14T09:53:55Z"
    },
    "message": "Fix argv[] in programs invoked by gdbserver on MS-Windows\n\ngdbserver/ChangeLog\n2020-02-14  Eli Zaretskii  <eliz@gnu.org>\n\n\t* win32-low.c (create_process): Prepend PROGRAM to ARGS when\n\tpreparing the command line for CreateProcess.\n\t(win32_create_inferior): Reflect the program name in debugging\n\toutput that shows the process and its command line.",
    "tree": {
      "sha": "db1abd4fe77955dcb4ec045acf8dae6335b25011",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/db1abd4fe77955dcb4ec045acf8dae6335b25011"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a9b34532453a065991b32f15055adf76fa86ff8c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9b34532453a065991b32f15055adf76fa86ff8c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a9b34532453a065991b32f15055adf76fa86ff8c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9b34532453a065991b32f15055adf76fa86ff8c/comments",
  "author": {
    "login": "Eli-Zaretskii",
    "id": 20908835,
    "node_id": "MDQ6VXNlcjIwOTA4ODM1",
    "avatar_url": "https://avatars.githubusercontent.com/u/20908835?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Eli-Zaretskii",
    "html_url": "https://github.com/Eli-Zaretskii",
    "followers_url": "https://api.github.com/users/Eli-Zaretskii/followers",
    "following_url": "https://api.github.com/users/Eli-Zaretskii/following{/other_user}",
    "gists_url": "https://api.github.com/users/Eli-Zaretskii/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Eli-Zaretskii/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Eli-Zaretskii/subscriptions",
    "organizations_url": "https://api.github.com/users/Eli-Zaretskii/orgs",
    "repos_url": "https://api.github.com/users/Eli-Zaretskii/repos",
    "events_url": "https://api.github.com/users/Eli-Zaretskii/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Eli-Zaretskii/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "Eli-Zaretskii",
    "id": 20908835,
    "node_id": "MDQ6VXNlcjIwOTA4ODM1",
    "avatar_url": "https://avatars.githubusercontent.com/u/20908835?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Eli-Zaretskii",
    "html_url": "https://github.com/Eli-Zaretskii",
    "followers_url": "https://api.github.com/users/Eli-Zaretskii/followers",
    "following_url": "https://api.github.com/users/Eli-Zaretskii/following{/other_user}",
    "gists_url": "https://api.github.com/users/Eli-Zaretskii/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Eli-Zaretskii/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Eli-Zaretskii/subscriptions",
    "organizations_url": "https://api.github.com/users/Eli-Zaretskii/orgs",
    "repos_url": "https://api.github.com/users/Eli-Zaretskii/repos",
    "events_url": "https://api.github.com/users/Eli-Zaretskii/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Eli-Zaretskii/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "258bf0ee3748d4354e13daf00f02266cafa96389",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/258bf0ee3748d4354e13daf00f02266cafa96389",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/258bf0ee3748d4354e13daf00f02266cafa96389"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 33,
    "deletions": 18
  },
  "files": [
    {
      "sha": "e95177ee5919151b058b3b54e70b0f36ac95d705",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b34532453a065991b32f15055adf76fa86ff8c/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b34532453a065991b32f15055adf76fa86ff8c/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=a9b34532453a065991b32f15055adf76fa86ff8c",
      "patch": "@@ -1,3 +1,10 @@\n+2020-02-14  Eli Zaretskii  <eliz@gnu.org>\n+\n+\t* win32-low.c (create_process): Prepend PROGRAM to ARGS when\n+\tpreparing the command line for CreateProcess.\n+\t(win32_create_inferior): Reflect the program name in debugging\n+\toutput that shows the process and its command line.\n+\n 2020-02-13  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* Makefile.in: Rename source files from .c to .cc."
    },
    {
      "sha": "cdd70da837421adcae57b356a704becb37caa04a",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 26,
      "deletions": 18,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b34532453a065991b32f15055adf76fa86ff8c/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b34532453a065991b32f15055adf76fa86ff8c/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=a9b34532453a065991b32f15055adf76fa86ff8c",
      "patch": "@@ -559,21 +559,25 @@ create_process (const char *program, char *args,\n {\n   const char *inferior_cwd = get_inferior_cwd ();\n   BOOL ret;\n+  size_t argslen, proglen;\n+\n+  proglen = strlen (program) + 1;\n+  argslen = strlen (args) + proglen;\n \n #ifdef _WIN32_WCE\n   wchar_t *p, *wprogram, *wargs, *wcwd = NULL;\n-  size_t argslen;\n \n-  wprogram = alloca ((strlen (program) + 1) * sizeof (wchar_t));\n-  mbstowcs (wprogram, program, strlen (program) + 1);\n+  wprogram = (wchar_t *) alloca (proglen * sizeof (wchar_t));\n+  mbstowcs (wprogram, program, proglen);\n \n   for (p = wprogram; *p; ++p)\n     if (L'/' == *p)\n       *p = L'\\\\';\n \n-  argslen = strlen (args);\n   wargs = alloca ((argslen + 1) * sizeof (wchar_t));\n-  mbstowcs (wargs, args, argslen + 1);\n+  wcscpy (wargs, wprogram);\n+  wcscat (wargs, L\" \");\n+  mbstowcs (wargs + proglen, args, argslen + 1 - proglen);\n \n   if (inferior_cwd != NULL)\n     {\n@@ -601,20 +605,24 @@ Could not convert the expanded inferior cwd to wide-char.\"));\n \t\t\tpi);      /* proc info */\n #else\n   STARTUPINFOA si = { sizeof (STARTUPINFOA) };\n-\n-  ret = CreateProcessA (program,  /* image name */\n-\t\t\targs,     /* command line */\n-\t\t\tNULL,     /* security */\n-\t\t\tNULL,     /* thread */\n-\t\t\tTRUE,     /* inherit handles */\n-\t\t\tflags,    /* start flags */\n-\t\t\tNULL,     /* environment */\n+  char *program_and_args = (char *) alloca (argslen + 1);\n+\n+  strcpy (program_and_args, program);\n+  strcat (program_and_args, \" \");\n+  strcat (program_and_args, args);\n+  ret = CreateProcessA (program,           /* image name */\n+\t\t\tprogram_and_args,  /* command line */\n+\t\t\tNULL,              /* security */\n+\t\t\tNULL,              /* thread */\n+\t\t\tTRUE,              /* inherit handles */\n+\t\t\tflags,             /* start flags */\n+\t\t\tNULL,              /* environment */\n \t\t\t/* current directory */\n \t\t\t(inferior_cwd == NULL\n \t\t\t ? NULL\n \t\t\t : gdb_tilde_expand (inferior_cwd).c_str()),\n-\t\t\t&si,      /* start info */\n-\t\t\tpi);      /* proc info */\n+\t\t\t&si,               /* start info */\n+\t\t\tpi);               /* proc info */\n #endif\n \n   return ret;\n@@ -665,7 +673,7 @@ win32_create_inferior (const char *program,\n   program = real_path;\n #endif\n \n-  OUTMSG2 ((\"Command line is \\\"%s\\\"\\n\", args));\n+  OUTMSG2 ((\"Command line is \\\"%s %s\\\"\\n\", program, args));\n \n #ifdef CREATE_NEW_PROCESS_GROUP\n   flags |= CREATE_NEW_PROCESS_GROUP;\n@@ -688,12 +696,12 @@ win32_create_inferior (const char *program,\n \n   if (!ret)\n     {\n-      error (\"Error creating process \\\"%s%s\\\", (error %d): %s\\n\",\n+      error (\"Error creating process \\\"%s %s\\\", (error %d): %s\\n\",\n \t     program, args, (int) err, strwinerror (err));\n     }\n   else\n     {\n-      OUTMSG2 ((\"Process created: %s\\n\", (char *) args));\n+      OUTMSG2 ((\"Process created: %s %s\\n\", program, (char *) args));\n     }\n \n #ifndef _WIN32_WCE"
    }
  ]
}