{
  "sha": "15a491af3cdc4d7487e848bd9648a15ac3a2d28f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTVhNDkxYWYzY2RjNGQ3NDg3ZTg0OGJkOTY0OGExNWFjM2EyZDI4Zg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-11-23T22:26:00Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-11-23T22:26:00Z"
    },
    "message": "gdb/testsuite: show evaluation errors in gdb_assert\n\nLet's say you put this gdb_assert in a test:\n\n    gdb_assert \"some invalid tcl code\"\n\nYou just get:\n\n    FAIL: gdb.base/template.exp: some invalid tcl code\n\nThat's not very easy to debug, since you don't know what's invalid in\nyour code.\n\nChange gdb_assert to print the error message when catch's return code is\n1 (TCL_ERROR).  The \"warning\" is shown both on stdout and in the log\nfile.  Mark the test as unresolved, because the evaluation error means\nwe couldn't reach a valid pass/fail conclusion.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (gdb_assert): Show error message on error.\n\nChange-Id: Ie6477859554e909ed8d07fb2769c6f2f55e7cce6",
    "tree": {
      "sha": "ab53cc2b6dace943d74de90510816b776e49f25c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ab53cc2b6dace943d74de90510816b776e49f25c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/15a491af3cdc4d7487e848bd9648a15ac3a2d28f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15a491af3cdc4d7487e848bd9648a15ac3a2d28f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/15a491af3cdc4d7487e848bd9648a15ac3a2d28f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15a491af3cdc4d7487e848bd9648a15ac3a2d28f/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "891615f060ff6cf8ea5497fd5f07138a52fe4ede",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/891615f060ff6cf8ea5497fd5f07138a52fe4ede",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/891615f060ff6cf8ea5497fd5f07138a52fe4ede"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 12,
    "deletions": 1
  },
  "files": [
    {
      "sha": "d6358dd88563068d84c360ccbb289d63125a8761",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15a491af3cdc4d7487e848bd9648a15ac3a2d28f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15a491af3cdc4d7487e848bd9648a15ac3a2d28f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=15a491af3cdc4d7487e848bd9648a15ac3a2d28f",
      "patch": "@@ -1,3 +1,7 @@\n+2020-11-23  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* lib/gdb.exp (gdb_assert): Show error message on error.\n+\n 2020-11-23  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.ada/enum_idx_packed.exp: Limit setup_kfail to gnat 9 and 10."
    },
    {
      "sha": "f2954fd5192be628778e6c8a0480388770881419",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15a491af3cdc4d7487e848bd9648a15ac3a2d28f/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15a491af3cdc4d7487e848bd9648a15ac3a2d28f/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=15a491af3cdc4d7487e848bd9648a15ac3a2d28f",
      "patch": "@@ -1728,7 +1728,14 @@ proc gdb_assert { condition {message \"\"} } {\n     }\n \n     set code [catch {uplevel 1 expr $condition} res]\n-    if {$code != 0 || !$res} {\n+    if {$code == 1} {\n+\t# If code is 1 (TCL_ERROR), it means evaluation failed and res contains\n+\t# an error message.  Print the error message, and set res to 0 since we\n+\t# want to return a boolean.\n+\twarning \"While evaluating expression in gdb_assert: $res\"\n+\tunresolved $message\n+\tset res 0\n+    } elseif { !$res } {\n \tfail $message\n     } else {\n \tpass $message"
    }
  ]
}