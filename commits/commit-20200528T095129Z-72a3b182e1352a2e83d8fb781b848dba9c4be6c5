{
  "sha": "72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzJhM2IxODJlMTM1MmEyZTgzZDhmYjc4MWI4NDhkYmE5YzRiZTZjNQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-28T09:51:29Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-28T09:51:29Z"
    },
    "message": "Linker: Remove support for -Map= with an empty argument.\n\n\t* lexsup.c (parse_args): Generate an error if a name is not\n\tprovided to the -Map option.\n\t(ld_options): Mention that the -Map option supports a directory\n\tname as an argument.\n\t* NEWS: Remove mention of support for an empty string as an\n\targument to -Map.\n\t* ld.texi: Likewise.",
    "tree": {
      "sha": "a62ef6cadac6c1e3b5811546265af34fa3ad93af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a62ef6cadac6c1e3b5811546265af34fa3ad93af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1c912705af057b0d30ea51af46d8a00014a84034",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c912705af057b0d30ea51af46d8a00014a84034",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1c912705af057b0d30ea51af46d8a00014a84034"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 29,
    "deletions": 18
  },
  "files": [
    {
      "sha": "580f1473aad14d0d33fe7f08924808ed4496e8fa",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
      "patch": "@@ -1,3 +1,13 @@\n+2020-05-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* lexsup.c (parse_args): Generate an error if a name is not\n+\tprovided to the -Map option.\n+\t(ld_options): Mention that the -Map option supports a directory\n+\tname as an argument.\n+\t* NEWS: Remove mention of support for an empty string as an\n+\targument to -Map.\n+\t* ld.texi: Likewise.\n+\n 2020-05-27  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR ld/22909"
    },
    {
      "sha": "2240aeb788a8bc133a38543ac1d880a712e24429",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
      "patch": "@@ -1,9 +1,8 @@\n -*- text -*-\n \n * The -Map=<filename> command line option has been extended so that if\n-  <filename> is omitted then a file called <output-filename>.map will be\n-  created.  Plus if <filename> is a directory then\n-  <filename>/<output-filename>.map will be created.\n+  <filename> is a directory then <filename>/<output-filename>.map will be\n+  created.\n \n * Add a command-line option for ELF linker, --warn-textrel, to warn that\n   DT_TEXTREL is set in a position-independent executable or shared object."
    },
    {
      "sha": "cb38f47cd3aba0803268e9059923a8cde46d48de",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
      "patch": "@@ -1760,12 +1760,10 @@ Print a summary of all target-specific options on the standard output and exit.\n @kindex -Map=@var{mapfile}\n @item -Map=@var{mapfile}\n Print a link map to the file @var{mapfile}.  See the description of the\n-@option{-M} option, above.  Specifying the empty string as @var{mapfile}\n-(that is, @code{-Map=}) causes the link map to be written to a file\n-named after the @var{output} file, with @code{.map} appended.\n-Specifying a directory as @var{mapfile} causes the link map to be\n-written into a file inside the directory.  The name of the file is\n-again based upon the @var{output} filename with @code{.map} appended.\n+@option{-M} option, above.  Specifying a directory as @var{mapfile}\n+causes the linker map to be written into a file inside the directory.\n+The name of the file is based upon the @var{output} filename with\n+@code{.map} appended.\n \n @cindex memory usage\n @kindex --no-keep-memory"
    },
    {
      "sha": "781f58aff7379b1363320eb4f36e2c5372aee05c",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 13,
      "deletions": 9,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/72a3b182e1352a2e83d8fb781b848dba9c4be6c5/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=72a3b182e1352a2e83d8fb781b848dba9c4be6c5",
      "patch": "@@ -359,7 +359,7 @@ static const struct ld_option ld_options[] =\n   { {\"init\", required_argument, NULL, OPTION_INIT},\n     '\\0', N_(\"SYMBOL\"), N_(\"Call SYMBOL at load-time\"), ONE_DASH },\n   { {\"Map\", required_argument, NULL, OPTION_MAP},\n-    '\\0', N_(\"[FILE]\"), N_(\"Write a map file (default: <outputname>.map)\"), ONE_DASH },\n+    '\\0', N_(\"FILE/DIR\"), N_(\"Write a linker map to FILE or DIR/<outputname>.map\"), ONE_DASH },\n   { {\"no-define-common\", no_argument, NULL, OPTION_NO_DEFINE_COMMON},\n     '\\0', NULL, N_(\"Do not define Common storage\"), TWO_DASHES },\n   { {\"no-demangle\", no_argument, NULL, OPTION_NO_DEMANGLE },\n@@ -1598,29 +1598,33 @@ parse_args (unsigned argc, char **argv)\n   /* Run a couple of checks on the map filename.  */\n   if (config.map_filename)\n     {\n-      /* If name has been provided then use the\n-\t output filename with a .map extension.  */\n       if (config.map_filename[0] == 0)\n \t{\n-\t  /* FIXME: This is a memory leak as the string is never freed.  */\n-\t  if (asprintf (&config.map_filename, \"%s.map\", output_filename) < 0)\n-\t    einfo (_(\"%F%P: %s: can not create name of map file: %E\\n\"));\n+\t  einfo (_(\"%P: no file/directory name provided for map output; ignored\\n\"));\n+\t  config.map_filename = NULL;\n \t}\n       else\n \t{\n \t  struct stat s;\n \n \t  /* If the map filename is actually a directory then create\n-\t     a file inside it, again based upon the output filename.  */\n+\t     a file inside it, based upon the output filename.  */\n \t  if (stat (config.map_filename, &s) >= 0\n \t      && S_ISDIR (s.st_mode))\n \t    {\n \t      char * new_name;\n \n-\t      /* FIXME: Another memory leak.  */\n+\t      /* FIXME: This is a (trivial) memory leak.  */\n \t      if (asprintf (&new_name, \"%s/%s.map\",\n \t\t\t    config.map_filename, output_filename) < 0)\n-\t\teinfo (_(\"%F%P: %s: can not create name of map file: %E\\n\"));\n+\t\t{\n+\t\t  /* If this alloc fails then something is probably very\n+\t\t     wrong.  Better to halt now rather than continue on\n+\t\t     into more problems.  */\n+\t\t  einfo (_(\"%P%F: cannot create name for linker map file: %E\\n\"));\n+\t\t  new_name = NULL;\n+\t\t}\n+\n \t      config.map_filename = new_name;\n \t    }\n \t}"
    }
  ]
}