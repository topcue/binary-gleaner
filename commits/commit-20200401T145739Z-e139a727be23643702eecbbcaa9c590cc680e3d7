{
  "sha": "e139a727be23643702eecbbcaa9c590cc680e3d7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTEzOWE3MjdiZTIzNjQzNzAyZWVjYmJjYWE5YzU5MGNjNjgwZTNkNw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-01T14:57:39Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-01T14:57:39Z"
    },
    "message": "gdb/remote: do not check for null_ptid in stop reply\n\nA gdbserver does not report a ptid in a 'W' or 'X' packet if multi-process\nextensions are not supported or turned off.  See\n\nhttps://sourceware.org/gdb/current/onlinedocs/gdb/General-Query-Packets.html#multiprocess-extensions\nhttps://sourceware.org/gdb/current/onlinedocs/gdb/Stop-Reply-Packets.html#Stop-Reply-Packets\n\nGDB's remote packet parser checks for whether a stop-reply packet\ncontains a ptid if the target is non-stop, and issues an error if no\nptid is included:\n\n  if (target_is_non_stop_p () && event->ptid == null_ptid)\n    error (_(\"No process or thread specified in stop reply: %s\"), buf);\n\nThis leads to the following error when the non-stop\nmode is turned on but multi-process extensions are off:\n\n  $ gdb\n  (gdb) set non-stop on\n  (gdb) set remote multiprocess-feature-packet off\n  (gdb) target remote | gdbserver - ./foo\n  Remote debugging using | gdbserver - ./foo\n  stdin/stdout redirected\n  Process ./foo created; pid = 3712\n  ...\n  (gdb) continue\n  Continuing.\n  ...\n  No process or thread specified in stop reply: W2a\n  (gdb)\n\nBecause the check is done for stop reply packets in general, a similar\nsituation occurs if the 'T' or 'Tthread' packet is disabled in\ngdbserver (i.e.  via --disable-packet=T).  E.g:\n\n  $ gdb\n  (gdb) set non-stop on\n  (gdb) target remote | gdbserver --disable-packet=Tthread - ./foo\n  ...\n  No process or thread specified in stop reply: T0506:0000000000000000;07:10e2ffffff7f0000;10:9060ddf7ff7f0000;\n\nor\n\n  $ gdb\n  (gdb) set non-stop on\n  (gdb) target remote | gdbserver --disable-packet=T - ./foo\n  ...\n  No process or thread specified in stop reply: S05\n\nThe commit\n\n  commit cada5fc921e39a1945c422eea055c8b326d8d353\n  Date:   Wed Mar 11 12:30:13 2020 +0000\n\n      gdb: Handle W and X remote packets without giving a warning\n\nand its predecessor\n\n  commit 24ed6739b699f329c2c45aedee5f8c7d2f54e493\n  Date:   Thu Jan 30 14:35:40 2020 +0000\n\n      gdb/remote: Restore support for 'S' stop reply packet\n\nadded warnings for when GDB has to make a guess for a missing ptid in\ncase of multiple threads/inferiors.  These warnings should suffice.\nSo, the simple solution is to remove the check completely.\n\nRegression-tested on X86_64 Linux.\n\ngdb/ChangeLog:\n2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* remote.c (remote_target::remote_parse_stop_reply): Remove the\n\tcheck for no ptid in the stop reply when the target is non-stop.\n\ngdb/testsuite/ChangeLog:\n2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.server/stop-reply-no-thread.exp: Enhance the test\n\tscenario to cover execution until the end and also the case\n\twhen no packet is disabled when starting gdbserver.",
    "tree": {
      "sha": "cff4fa8ff5d4b43def31d24c51f97669185cf8af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cff4fa8ff5d4b43def31d24c51f97669185cf8af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e139a727be23643702eecbbcaa9c590cc680e3d7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e139a727be23643702eecbbcaa9c590cc680e3d7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e139a727be23643702eecbbcaa9c590cc680e3d7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e139a727be23643702eecbbcaa9c590cc680e3d7/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e0802d59969339502203ad8e0d161b5f93beca73",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e0802d59969339502203ad8e0d161b5f93beca73",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e0802d59969339502203ad8e0d161b5f93beca73"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 30,
    "deletions": 7
  },
  "files": [
    {
      "sha": "f8b95c9a7eee4207851f0c59b9e8c82dfbabc26d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e139a727be23643702eecbbcaa9c590cc680e3d7",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* remote.c (remote_target::remote_parse_stop_reply): Remove the\n+\tcheck for no ptid in the stop reply when the target is non-stop.\n+\n 2020-04-01  Tom Tromey  <tromey@adacore.com>\n \n \t* symtab.h (class lookup_name_info) <lookup_name_info>: Change"
    },
    {
      "sha": "bfbc0bc21d34e7faf830a53c2b712ed6f6ea64ad",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=e139a727be23643702eecbbcaa9c590cc680e3d7",
      "patch": "@@ -7561,9 +7561,6 @@ Packet: '%s'\\n\"),\n       event->ptid = minus_one_ptid;\n       break;\n     }\n-\n-  if (target_is_non_stop_p () && event->ptid == null_ptid)\n-    error (_(\"No process or thread specified in stop reply: %s\"), buf);\n }\n \n /* When the stub wants to tell GDB about a new notification reply, it"
    },
    {
      "sha": "cc2335e90ac0779afe1faa3db577cf6a6669c9cd",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e139a727be23643702eecbbcaa9c590cc680e3d7",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-01  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.server/stop-reply-no-thread.exp: Enhance the test\n+\tscenario to cover execution until the end and also the case\n+\n 2020-03-31  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/c-linkage-name.exp: Fix test-case comment.  Set language to"
    },
    {
      "sha": "7d99b0905757ba40646d38134a6ed8f60dc7671a",
      "filename": "gdb/testsuite/gdb.server/stop-reply-no-thread.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 4,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/testsuite/gdb.server/stop-reply-no-thread.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e139a727be23643702eecbbcaa9c590cc680e3d7/gdb/testsuite/gdb.server/stop-reply-no-thread.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/stop-reply-no-thread.exp?ref=e139a727be23643702eecbbcaa9c590cc680e3d7",
      "patch": "@@ -33,7 +33,7 @@ if [prepare_for_testing \"failed to prepare\" $testfile $srcfile] {\n }\n \n # Run the tests with different features of GDBserver disabled.\n-proc run_test { disable_feature } {\n+proc run_test { disable_feature target_nonstop } {\n     global binfile gdb_prompt decimal\n \n     clean_restart ${binfile}\n@@ -42,14 +42,21 @@ proc run_test { disable_feature } {\n     # extended-remote board, therefore already connected.\n     gdb_test \"disconnect\" \".*\"\n \n-    set res [gdbserver_start \"--disable-packet=${disable_feature}\" $binfile]\n+    set packet_arg \"\"\n+    if { $disable_feature != \"\" } {\n+\tset packet_arg \"--disable-packet=${disable_feature}\"\n+    }\n+    set res [gdbserver_start $packet_arg $binfile]\n     set gdbserver_protocol [lindex $res 0]\n     set gdbserver_gdbport [lindex $res 1]\n \n     # Disable XML-based thread listing, and multi-process extensions.\n     gdb_test_no_output \"set remote threads-packet off\"\n     gdb_test_no_output \"set remote multiprocess-feature-packet off\"\n \n+    # Set target-nonstop mode.\n+    gdb_test_no_output \"maint set target-non-stop ${target_nonstop}\"\n+\n     set res [gdb_target_cmd $gdbserver_protocol $gdbserver_gdbport]\n     if ![gdb_assert {$res == 0} \"connect\"] {\n \treturn\n@@ -76,6 +83,13 @@ proc run_test { disable_feature } {\n     #  Cannot execute this command without a live selected thread.\n     #  (gdb)\n     gdb_test \"c\" \"Breakpoint $decimal, main.*\" \"continue to main\"\n+\n+    # Continue until exit.  The server sends a 'W' with no PID.\n+    # Bad GDB gave an error like below when target is nonstop:\n+    #  (gdb) c\n+    #  Continuing.\n+    #  No process or thread specified in stop reply: W00\n+    gdb_continue_to_end \"\" continue 1\n }\n \n # Disable different features within gdbserver:\n@@ -85,6 +99,8 @@ proc run_test { disable_feature } {\n #\n # T: Start GDBserver with the entire 'T' stop reply packet disabled,\n #    GDBserver will instead send the 'S' stop reply.\n-foreach_with_prefix to_disable { Tthread T } {\n-    run_test $to_disable\n+foreach_with_prefix to_disable { \"\" Tthread T } {\n+    foreach_with_prefix t_nonstop { off on } {\n+\trun_test $to_disable $t_nonstop\n+    }\n }"
    }
  ]
}