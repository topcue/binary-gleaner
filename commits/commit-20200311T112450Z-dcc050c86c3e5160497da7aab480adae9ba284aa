{
  "sha": "dcc050c86c3e5160497da7aab480adae9ba284aa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGNjMDUwYzg2YzNlNTE2MDQ5N2RhN2FhYjQ4MGFkYWU5YmEyODRhYQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-03-11T11:17:39Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-03-11T11:24:50Z"
    },
    "message": "gdb: Fix out of bounds array access in buildsym_compunit::record_line\n\nThis commit:\n\n  commit 8c95582da858ac981f689a6f599acacb8c5c490f\n  Date:   Mon Dec 30 21:04:51 2019 +0000\n\n      gdb: Add support for tracking the DWARF line table is-stmt field\n\nIntroduced an invalid memory access, by reading outside the bounds of\nan array.\n\nThis would cause this valgrind error:\n\n  ==7633== Invalid read of size 4\n  ==7633==    at 0x4D002C: buildsym_compunit::record_line(subfile*, int, unsigned long, bool) (buildsym.c:688)\n  ==7633==    by 0x5F60A5: dwarf_record_line_1(gdbarch*, subfile*, unsigned int, unsigned long, bool, dwarf2_cu*) (read.c:19956)\n  ==7633==    by 0x5F63B0: lnp_state_machine::record_line(bool) (read.c:20024)\n  ==7633==    by 0x5F5DD5: lnp_state_machine::handle_special_opcode(unsigned char) (read.c:19851)\n  ==7633==    by 0x5F6706: dwarf_decode_lines_1(line_header*, dwarf2_cu*, int, unsigned long) (read.c:20135)\n  ==7633==    by 0x5F6C57: dwarf_decode_lines(line_header*, char const*, dwarf2_cu*, dwarf2_psymtab*, unsigned long, int) (read.c:20328)\n  ==7633==    by 0x5DF5F1: handle_DW_AT_stmt_list(die_info*, dwarf2_cu*, char const*, unsigned long) (read.c:10748)\n  ==7633==    by 0x5DF823: read_file_scope(die_info*, dwarf2_cu*) (read.c:10796)\n  ==7633==    by 0x5DDA63: process_die(die_info*, dwarf2_cu*) (read.c:9815)\n  ==7633==    by 0x5DD44A: process_full_comp_unit(dwarf2_per_cu_data*, language) (read.c:9580)\n  ==7633==    by 0x5DAB58: process_queue(dwarf2_per_objfile*) (read.c:8867)\n  ==7633==    by 0x5CB30E: dw2_do_instantiate_symtab(dwarf2_per_cu_data*, bool) (read.c:2374)\n  ==7633==  Address 0xa467f48 is 8 bytes before a block of size 16,024 alloc'd\n  ==7633==    at 0x4C2CDCB: malloc (vg_replace_malloc.c:299)\n  ==7633==    by 0x451FC4: xmalloc (alloc.c:60)\n  ==7633==    by 0x4CFFDF: buildsym_compunit::record_line(subfile*, int, unsigned long, bool) (buildsym.c:678)\n  ==7633==    by 0x5F60A5: dwarf_record_line_1(gdbarch*, subfile*, unsigned int, unsigned long, bool, dwarf2_cu*) (read.c:19956)\n  ==7633==    by 0x5F63B0: lnp_state_machine::record_line(bool) (read.c:20024)\n  ==7633==    by 0x5F5DD5: lnp_state_machine::handle_special_opcode(unsigned char) (read.c:19851)\n  ==7633==    by 0x5F6706: dwarf_decode_lines_1(line_header*, dwarf2_cu*, int, unsigned long) (read.c:20135)\n  ==7633==    by 0x5F6C57: dwarf_decode_lines(line_header*, char const*, dwarf2_cu*, dwarf2_psymtab*, unsigned long, int) (read.c:20328)\n  ==7633==    by 0x5DF5F1: handle_DW_AT_stmt_list(die_info*, dwarf2_cu*, char const*, unsigned long) (read.c:10748)\n  ==7633==    by 0x5DF823: read_file_scope(die_info*, dwarf2_cu*) (read.c:10796)\n  ==7633==    by 0x5DDA63: process_die(die_info*, dwarf2_cu*) (read.c:9815)\n  ==7633==    by 0x5DD44A: process_full_comp_unit(dwarf2_per_cu_data*, language) (read.c:9580)\n\ngdb/ChangeLog:\n\n\t* buildsyms.c (buildsym_compunit::record_line): Avoid accessing\n\tprevious item in the list, when the list has no items.",
    "tree": {
      "sha": "d1ad75b406b783ba4d9adedadc09a8b3b95fbfd9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1ad75b406b783ba4d9adedadc09a8b3b95fbfd9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dcc050c86c3e5160497da7aab480adae9ba284aa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dcc050c86c3e5160497da7aab480adae9ba284aa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dcc050c86c3e5160497da7aab480adae9ba284aa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dcc050c86c3e5160497da7aab480adae9ba284aa/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5496f3c635dce3e12348d6e81c3f74815fdfe7b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5496f3c635dce3e12348d6e81c3f74815fdfe7b5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5496f3c635dce3e12348d6e81c3f74815fdfe7b5"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 16,
    "deletions": 8
  },
  "files": [
    {
      "sha": "5e8fb71cd4d5508d641fb97a4ce0d2fcac38282e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dcc050c86c3e5160497da7aab480adae9ba284aa/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dcc050c86c3e5160497da7aab480adae9ba284aa/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=dcc050c86c3e5160497da7aab480adae9ba284aa",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* buildsyms.c (buildsym_compunit::record_line): Avoid accessing\n+\tprevious item in the list, when the list has no items.\n+\n 2020-03-11  Tom de Vries  <tdevries@suse.de>\n \n \t* dwarf2/loc.c (dwarf2_evaluate_property): Handle NULL frame in"
    },
    {
      "sha": "7155db34b085c36ea3c4d599be8a2151c8bfa889",
      "filename": "gdb/buildsym.c",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dcc050c86c3e5160497da7aab480adae9ba284aa/gdb/buildsym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dcc050c86c3e5160497da7aab480adae9ba284aa/gdb/buildsym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym.c?ref=dcc050c86c3e5160497da7aab480adae9ba284aa",
      "patch": "@@ -681,15 +681,18 @@ buildsym_compunit::record_line (struct subfile *subfile, int line,\n       m_have_line_numbers = true;\n     }\n \n-  /* If we have a duplicate for the previous entry then ignore the new\n-     entry, except, if the new entry is setting the is_stmt flag, then\n-     ensure the previous entry respects the new setting.  */\n-  e = subfile->line_vector->item + subfile->line_vector->nitems - 1;\n-  if (e->line == line && e->pc == pc)\n+  if (subfile->line_vector->nitems > 0)\n     {\n-      if (is_stmt && !e->is_stmt)\n-\te->is_stmt = 1;\n-      return;\n+      /* If we have a duplicate for the previous entry then ignore the new\n+\t entry, except, if the new entry is setting the is_stmt flag, then\n+\t ensure the previous entry respects the new setting.  */\n+      e = subfile->line_vector->item + subfile->line_vector->nitems - 1;\n+      if (e->line == line && e->pc == pc)\n+\t{\n+\t  if (is_stmt && !e->is_stmt)\n+\t    e->is_stmt = 1;\n+\t  return;\n+\t}\n     }\n \n   if (subfile->line_vector->nitems + 1 >= subfile->line_vector_length)"
    }
  ]
}