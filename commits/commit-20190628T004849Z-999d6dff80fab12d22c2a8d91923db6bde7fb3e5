{
  "sha": "999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTk5ZDZkZmY4MGZhYjEyZDIyYzJhOGQ5MTkyM2RiNmJkZTdmYjNlNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-06-28T00:48:49Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-06-28T00:48:49Z"
    },
    "message": "Plugin target handling\n\nThis patch fixes failures with LTO on mingw32 targets.  Since git\ncommit 7cf7fcc83c all possible targets (minus binary) are matched in\nbfd_check_format_matches rather than lower priority targets being\nexcluded once a higher priority target matches.  During linking that\nresults in the ld/plugin.c plugin_object_p function being called with\nthe input file xvec set to plugin_vec, which means\nplugin_get_ir_dummy_bfd doesn't see the real format of the file\n(pe-i386).  It defaults to the output format instead, which happens to\nbe pei-i386, and this wrong choice persists for the dummy bfd.\npei-i386 isn't recognised as a valid linker input file.\n\nSo, omit recognizing a plugin object in bfd_check_format_matches when\nsome other object format matches, and make sure those other object\nformats are checked first.\n\n\t* format.c (bfd_check_format_matches): Don't match plugin target\n\tif another target matches.  Expand comment.\n\t* targets.c (_bfd_target_vector): Move plugin_vec after all other\n\tnon-corefile targets, outside !SELECT_VECS.\n\t* config.bfd: Don't handle targ=plugin here.\n\t* configure.ac: Don't add plugin to enable_targets or handle in\n\ttarget loop setting selvecs and other target vars.\n\t* configure: Regenerate.",
    "tree": {
      "sha": "52f94654b2fd1984897dffd3a043f003e7c5b77a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/52f94654b2fd1984897dffd3a043f003e7c5b77a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f60c61e60e59c2bfc5fdd1b448408c2af287899e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f60c61e60e59c2bfc5fdd1b448408c2af287899e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f60c61e60e59c2bfc5fdd1b448408c2af287899e"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 37,
    "deletions": 26
  },
  "files": [
    {
      "sha": "04bdb78607676cebf37e78dd26a1b9447e27dd63",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
      "patch": "@@ -1,3 +1,14 @@\n+2019-06-28  Alan Modra  <amodra@gmail.com>\n+\n+\t* format.c (bfd_check_format_matches): Don't match plugin target\n+\tif another target matches.  Expand comment.\n+\t* targets.c (_bfd_target_vector): Move plugin_vec after all other\n+\tnon-corefile targets, outside !SELECT_VECS.\n+\t* config.bfd: Don't handle targ=plugin here.\n+\t* configure.ac: Don't add plugin to enable_targets or handle in\n+\ttarget loop setting selvecs and other target vars.\n+\t* configure: Regenerate.\n+\n 2019-06-26  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24703"
    },
    {
      "sha": "13d678e1f88f41c3debc24d97143a2d196051b9a",
      "filename": "bfd/config.bfd",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/config.bfd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/config.bfd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/config.bfd?ref=999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
      "patch": "@@ -218,11 +218,6 @@ esac\n #  convention, else the table becomes a real mess to understand and maintain.\n \n case \"${targ}\" in\n-  plugin)\n-    targ_defvec=plugin_vec\n-    targ_selvecs=\"plugin_vec\"\n-    ;;\n-\n # START OF targmatch.h\n #ifdef BFD64\n   aarch64-*-darwin*)"
    },
    {
      "sha": "b1a727a54a3e761b22b023d47137a959009b22c6",
      "filename": "bfd/configure",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure?ref=999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
      "patch": "@@ -12409,10 +12409,6 @@ else\n fi\n \n \n-if test \"$plugins\" = \"yes\"; then\n-  enable_targets=\"$enable_targets plugin\"\n-fi\n-\n # Check whether --enable-64-bit-bfd was given.\n if test \"${enable_64_bit_bfd+set}\" = set; then :\n   enableval=$enable_64_bit_bfd; case \"${enableval}\" in\n@@ -14613,12 +14609,12 @@ selarchs=\n TDEFINES=\n for targ in $target $canon_targets\n do\n-    if test \"x$targ\" = \"xall\"; then\n+    if test $targ = all; then\n         all_targets=true\n \tassocvecs=\"$assocvecs $targ_defvec $targ_selvecs\"\n-    else\n+    elif test $targ != plugin; then\n \t. $srcdir/config.bfd\n-\tif test \"x$targ\" = \"x$target\"; then\n+\tif test $targ = $target; then\n \t    defvec=$targ_defvec\n \tfi\n \tselvecs=\"$selvecs $targ_defvec $targ_selvecs\"\n@@ -14856,7 +14852,6 @@ do\n     pef_xlib_vec)\t\t tb=\"$tb pef.lo\" ;;\n     pj_elf32_vec)\t\t tb=\"$tb elf32-pj.lo elf32.lo $elf\" ;;\n     pj_elf32_le_vec)\t\t tb=\"$tb elf32-pj.lo elf32.lo $elf\" ;;\n-    plugin_vec)\t\t\t tb=\"$tb plugin.lo\" ;;\n     powerpc_boot_vec)\t\t tb=\"$tb ppcboot.lo\" ;;\n     powerpc_elf32_vec)\t\t tb=\"$tb elf32-ppc.lo elf-vxworks.lo elf32.lo $elf\" ;;\n     powerpc_elf32_le_vec)\t tb=\"$tb elf32-ppc.lo elf-vxworks.lo elf32.lo $elf\" ;;\n@@ -14983,6 +14978,10 @@ do\n     fi\n done\n \n+if test \"$plugins\" = \"yes\"; then\n+     tb=\"$tb plugin.lo\"\n+fi\n+\n # Target architecture .o files.\n # A couple of CPUs use shorter file names to avoid problems on DOS\n # filesystems."
    },
    {
      "sha": "39702ce1315ef0f7a2d699cf100b3b49914ca5e4",
      "filename": "bfd/configure.ac",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.ac?ref=999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
      "patch": "@@ -46,10 +46,6 @@ ACX_LARGEFILE\n \n AM_CONDITIONAL(PLUGINS, test \"$plugins\" = \"yes\")\n \n-if test \"$plugins\" = \"yes\"; then\n-  enable_targets=\"$enable_targets plugin\"\n-fi\n-\n AC_ARG_ENABLE(64-bit-bfd,\n [  --enable-64-bit-bfd     64-bit support (on hosts with narrower word sizes)],\n [case \"${enableval}\" in\n@@ -349,12 +345,12 @@ selarchs=\n TDEFINES=\n for targ in $target $canon_targets\n do\n-    if test \"x$targ\" = \"xall\"; then\n+    if test $targ = all; then\n         all_targets=true\n \tassocvecs=\"$assocvecs $targ_defvec $targ_selvecs\"\n-    else\n+    elif test $targ != plugin; then\n \t. $srcdir/config.bfd\n-\tif test \"x$targ\" = \"x$target\"; then\n+\tif test $targ = $target; then\n \t    defvec=$targ_defvec\n \tfi\n \tselvecs=\"$selvecs $targ_defvec $targ_selvecs\"\n@@ -592,7 +588,6 @@ do\n     pef_xlib_vec)\t\t tb=\"$tb pef.lo\" ;;\n     pj_elf32_vec)\t\t tb=\"$tb elf32-pj.lo elf32.lo $elf\" ;;\n     pj_elf32_le_vec)\t\t tb=\"$tb elf32-pj.lo elf32.lo $elf\" ;;\n-    plugin_vec)\t\t\t tb=\"$tb plugin.lo\" ;;\n     powerpc_boot_vec)\t\t tb=\"$tb ppcboot.lo\" ;;\n     powerpc_elf32_vec)\t\t tb=\"$tb elf32-ppc.lo elf-vxworks.lo elf32.lo $elf\" ;;\n     powerpc_elf32_le_vec)\t tb=\"$tb elf32-ppc.lo elf-vxworks.lo elf32.lo $elf\" ;;\n@@ -719,6 +714,10 @@ do\n     fi\n done\n \n+if test \"$plugins\" = \"yes\"; then\n+     tb=\"$tb plugin.lo\"\n+fi\n+\n # Target architecture .o files.\n # A couple of CPUs use shorter file names to avoid problems on DOS\n # filesystems."
    },
    {
      "sha": "1d1363d18403cef706ec1a81f164c5b6521dd20f",
      "filename": "bfd/format.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/format.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/format.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/format.c?ref=999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
      "patch": "@@ -290,8 +290,15 @@ bfd_check_format_matches (bfd *abfd, bfd_format format, char ***matching)\n     {\n       const bfd_target *temp;\n \n-      /* Don't check the default target twice.  */\n+      /* The binary target matches anything, so don't return it when\n+\t searching.  Don't match the plugin target if we have another\n+\t alternative since we want to properly set the input format\n+\t before allowing a plugin to claim the file.  Also, don't\n+\t check the default target twice.  */\n       if (*target == &binary_vec\n+#if BFD_SUPPORTS_PLUGINS\n+\t  || (match_count != 0 && *target == &plugin_vec)\n+#endif\n \t  || (!abfd->target_defaulted && *target == save_targ))\n \tcontinue;\n "
    },
    {
      "sha": "6b85c6279805290507fe6dca9dd465d02afaa019",
      "filename": "bfd/targets.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/targets.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999d6dff80fab12d22c2a8d91923db6bde7fb3e5/bfd/targets.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/targets.c?ref=999d6dff80fab12d22c2a8d91923db6bde7fb3e5",
      "patch": "@@ -1149,10 +1149,6 @@ static const bfd_target * const _bfd_target_vector[] =\n \t&pj_elf32_vec,\n \t&pj_elf32_le_vec,\n \n-#if BFD_SUPPORTS_PLUGINS\n-\t&plugin_vec,\n-#endif\n-\n \t&powerpc_boot_vec,\n \t&powerpc_elf32_vec,\n \t&powerpc_elf32_le_vec,\n@@ -1305,6 +1301,10 @@ static const bfd_target * const _bfd_target_vector[] =\n /* Likewise for ihex.  */\n \t&ihex_vec,\n \n+#if BFD_SUPPORTS_PLUGINS\n+\t&plugin_vec,\n+#endif\n+\n /* Add any required traditional-core-file-handler.  */\n \n #ifdef AIX386_CORE"
    }
  ]
}