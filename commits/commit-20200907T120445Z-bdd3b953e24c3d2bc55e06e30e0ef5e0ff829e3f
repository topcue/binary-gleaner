{
  "sha": "bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmRkM2I5NTNlMjRjM2QyYmM1NWUwNmUzMGUwZWY1ZTBmZjgyOWUzZg==",
  "commit": {
    "author": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-09-07T12:04:45Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-09-07T12:04:45Z"
    },
    "message": "gas: Output .debug_rnglists for DWARF 5.\n\n\t* dwarf2dbg.c (DWARF2_RNGLISTS_VERSION): New constant.\n\t(out_debug_ranges): Add ranges_sym argument and set it.\n\t(out_debug_rnglists): New function.\n\t(out_debug_info): Change ranges_seg argument to ranges_sym\n\tand use it to set DW_AT_ranges value.\n\t(dwarf2_finish): Remove ranges_seg, add ranges_sym. For\n\tDWARF2_VERSION 5 call out_debug_rnglists.",
    "tree": {
      "sha": "c6415f1a3f91bf0dcdde10b956fcb9782740d9fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c6415f1a3f91bf0dcdde10b956fcb9782740d9fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b0b3ea7e10443f211267babcac99ac6677d593ce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0b3ea7e10443f211267babcac99ac6677d593ce",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b0b3ea7e10443f211267babcac99ac6677d593ce"
    }
  ],
  "stats": {
    "total": 110,
    "additions": 96,
    "deletions": 14
  },
  "files": [
    {
      "sha": "5e82f683715875acc116815c221fe401cd0351fd",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f",
      "patch": "@@ -1,4 +1,14 @@\n-2020-09-07  +2020-08-28  Mark Wielaard  <mark@klomp.org>\n+2020-09-07  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf2dbg.c (DWARF2_RNGLISTS_VERSION): New constant.\n+\t(out_debug_ranges): Add ranges_sym argument and set it.\n+\t(out_debug_rnglists): New function.\n+\t(out_debug_info): Change ranges_seg argument to ranges_sym\n+\tand use it to set DW_AT_ranges value.\n+\t(dwarf2_finish): Remove ranges_seg, add ranges_sym. For\n+\tDWARF2_VERSION 5 call out_debug_rnglists.\n+\n+2020-09-07  Mark Wielaard  <mark@klomp.org>\n \n \t* dwarf2dbg.c (dwarf2_directive_filename): Initialize with_md5 to\n \tFALSE."
    },
    {
      "sha": "ac0ee201f25cd7e2d22ee2dd5f58798d8497ce98",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 85,
      "deletions": 13,
      "changes": 98,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=bdd3b953e24c3d2bc55e06e30e0ef5e0ff829e3f",
      "patch": "@@ -102,6 +102,11 @@\n #define DWARF2_LINE_VERSION (dwarf_level > 3 ? dwarf_level : 3)\n #endif\n \n+/* The .debug_rnglists has only been in DWARF version 5. */\n+#ifndef DWARF2_RNGLISTS_VERSION\n+#define DWARF2_RNGLISTS_VERSION 5\n+#endif\n+\n #include \"subsegs.h\"\n \n #include \"dwarf2.h\"\n@@ -2303,7 +2308,7 @@ out_debug_line (segT line_seg)\n }\n \n static void\n-out_debug_ranges (segT ranges_seg)\n+out_debug_ranges (segT ranges_seg, symbolS **ranges_sym)\n {\n   unsigned int addr_size = sizeof_address;\n   struct line_seg *s;\n@@ -2313,6 +2318,10 @@ out_debug_ranges (segT ranges_seg)\n   memset (&exp, 0, sizeof exp);\n   subseg_set (ranges_seg, 0);\n \n+  /* For DW_AT_ranges to point at (there is no header, so really start\n+     of section, but see out_debug_rnglists).  */\n+  *ranges_sym = symbol_temp_new_now_octets ();\n+\n   /* Base Address Entry.  */\n   for (i = 0; i < addr_size; i++)\n     out_byte (0xff);\n@@ -2351,6 +2360,57 @@ out_debug_ranges (segT ranges_seg)\n     out_byte (0);\n }\n \n+static void\n+out_debug_rnglists (segT ranges_seg, symbolS **ranges_sym)\n+{\n+  expressionS exp;\n+  symbolS *ranges_end;\n+  struct line_seg *s;\n+\n+  /* Unit length.  */\n+  memset (&exp, 0, sizeof exp);\n+  out_header (ranges_seg, &exp);\n+  ranges_end = exp.X_add_symbol;\n+\n+  out_two (DWARF2_RNGLISTS_VERSION);\n+  out_byte (sizeof_address);\n+  out_byte (0); /* Segment Selector size.  */\n+  out_four (0); /* Offset entry count.  */\n+\n+  /* For DW_AT_ranges to point at (must be after the header).   */\n+  *ranges_sym = symbol_temp_new_now_octets ();\n+\n+  for (s = all_segs; s; s = s->next)\n+    {\n+      fragS *frag;\n+      symbolS *beg, *end;\n+\n+      out_byte (DW_RLE_start_length);\n+\n+      frag = first_frag_for_seg (s->seg);\n+      beg = symbol_temp_new (s->seg, frag, 0);\n+      s->text_start = beg;\n+\n+      frag = last_frag_for_seg (s->seg);\n+      end = symbol_temp_new (s->seg, frag, get_frag_fix (frag, s->seg));\n+      s->text_end = end;\n+\n+      exp.X_op = O_symbol;\n+      exp.X_add_symbol = beg;\n+      exp.X_add_number = 0;\n+      emit_expr (&exp, sizeof_address);\n+\n+      exp.X_op = O_symbol;\n+      exp.X_add_symbol = end;\n+      exp.X_add_number = 0;\n+      emit_leb128_expr (&exp, 0);\n+    }\n+\n+  out_byte (DW_RLE_end_of_list);\n+\n+  symbol_set_value_now (ranges_end);\n+}\n+\n /* Emit data for .debug_aranges.  */\n \n static void\n@@ -2468,8 +2528,9 @@ out_debug_abbrev (segT abbrev_seg,\n /* Emit a description of this compilation unit for .debug_info.  */\n \n static void\n-out_debug_info (segT info_seg, segT abbrev_seg, segT line_seg, segT ranges_seg,\n-\t\tsymbolS *name_sym, symbolS *comp_dir_sym, symbolS *producer_sym)\n+out_debug_info (segT info_seg, segT abbrev_seg, segT line_seg,\n+\t\tsymbolS *ranges_sym, symbolS *name_sym,\n+\t\tsymbolS *comp_dir_sym, symbolS *producer_sym)\n {\n   expressionS exp;\n   symbolS *info_end;\n@@ -2538,7 +2599,7 @@ out_debug_info (segT info_seg, segT abbrev_seg, segT line_seg, segT ranges_seg,\n     {\n       /* This attribute is emitted if the code is disjoint.  */\n       /* DW_AT_ranges.  */\n-      TC_DWARF2_EMIT_OFFSET (section_symbol (ranges_seg), sizeof_offset);\n+      TC_DWARF2_EMIT_OFFSET (ranges_sym, sizeof_offset);\n     }\n \n   /* DW_AT_name, DW_AT_comp_dir and DW_AT_producer.  Symbols in .debug_str\n@@ -2703,9 +2764,8 @@ dwarf2_finish (void)\n     {\n       segT abbrev_seg;\n       segT aranges_seg;\n-      segT ranges_seg;\n       segT str_seg;\n-      symbolS *name_sym, *comp_dir_sym, *producer_sym;\n+      symbolS *name_sym, *comp_dir_sym, *producer_sym, *ranges_sym;\n \n       gas_assert (all_segs);\n \n@@ -2728,20 +2788,32 @@ dwarf2_finish (void)\n       record_alignment (aranges_seg, ffs (2 * sizeof_address) - 1);\n \n       if (all_segs->next == NULL)\n-\tranges_seg = NULL;\n+\tranges_sym = NULL;\n       else\n \t{\n-\t  ranges_seg = subseg_new (\".debug_ranges\", 0);\n-\t  bfd_set_section_flags (ranges_seg,\n-\t\t\t\t SEC_READONLY | SEC_DEBUGGING | SEC_OCTETS);\n-\t  record_alignment (ranges_seg, ffs (2 * sizeof_address) - 1);\n-\t  out_debug_ranges (ranges_seg);\n+\t  if (DWARF2_VERSION < 5)\n+\t    {\n+\t      segT ranges_seg = subseg_new (\".debug_ranges\", 0);\n+\t      bfd_set_section_flags (ranges_seg, (SEC_READONLY\n+\t\t\t\t\t\t  | SEC_DEBUGGING\n+\t\t\t\t\t\t  | SEC_OCTETS));\n+\t      record_alignment (ranges_seg, ffs (2 * sizeof_address) - 1);\n+\t      out_debug_ranges (ranges_seg, &ranges_sym);\n+\t    }\n+\t  else\n+\t    {\n+\t      segT rnglists_seg = subseg_new (\".debug_rnglists\", 0);\n+\t      bfd_set_section_flags (rnglists_seg, (SEC_READONLY\n+\t\t\t\t\t\t    | SEC_DEBUGGING\n+\t\t\t\t\t\t    | SEC_OCTETS));\n+\t      out_debug_rnglists (rnglists_seg, &ranges_sym);\n+\t    }\n \t}\n \n       out_debug_aranges (aranges_seg, info_seg);\n       out_debug_abbrev (abbrev_seg, info_seg, line_seg);\n       out_debug_str (str_seg, &name_sym, &comp_dir_sym, &producer_sym);\n-      out_debug_info (info_seg, abbrev_seg, line_seg, ranges_seg,\n+      out_debug_info (info_seg, abbrev_seg, line_seg, ranges_sym,\n \t\t      name_sym, comp_dir_sym, producer_sym);\n     }\n }"
    }
  ]
}