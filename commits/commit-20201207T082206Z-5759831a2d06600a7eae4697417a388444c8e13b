{
  "sha": "5759831a2d06600a7eae4697417a388444c8e13b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTc1OTgzMWEyZDA2NjAwYTdlYWU0Njk3NDE3YTM4ODQ0NGM4ZTEzYg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-12-07T08:20:31Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-12-07T08:22:06Z"
    },
    "message": "gdb/linespec: relax the position of the '-force-condition' flag\n\nThe break command's \"-force-condition\" flag is currently required to\nbe followed by the \"if\" keyword.  This prevents flexibility when using\nother keywords, e.g. \"thread\":\n\n  (gdb) break main -force-condition thread 1 if foo\n  Function \"main -force-condition\" not defined.\n  Make breakpoint pending on future shared library load? (y or [n]) n\n\nRemove the requirement that \"-force-condition\" is always followed by\nan \"if\", so that more flexibility is obtained when positioning\nkeywords.\n\ngdb/ChangeLog:\n2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* linespec.c (linespec_lexer_lex_keyword): The \"-force-condition\"\n\tkeyword may be followed by any keyword.\n\t* breakpoint.c (find_condition_and_thread): Advance 'tok' by\n\t'toklen' in the case for \"-force-condition\".\n\ngdb/testsuite/ChangeLog:\n2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.linespec/keywords.exp: Add tests to check positional\n\tflexibility of \"-force-condition\".",
    "tree": {
      "sha": "c9d0045d36dded7286e2f52b63978d63f162b828",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c9d0045d36dded7286e2f52b63978d63f162b828"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5759831a2d06600a7eae4697417a388444c8e13b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5759831a2d06600a7eae4697417a388444c8e13b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5759831a2d06600a7eae4697417a388444c8e13b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5759831a2d06600a7eae4697417a388444c8e13b/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21e051b3d666bcd614391142a936a8a8cccfa3cb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/21e051b3d666bcd614391142a936a8a8cccfa3cb"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 54,
    "deletions": 17
  },
  "files": [
    {
      "sha": "60b3ce44af295644bddc5542cab214a5384d2fc2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5759831a2d06600a7eae4697417a388444c8e13b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5759831a2d06600a7eae4697417a388444c8e13b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5759831a2d06600a7eae4697417a388444c8e13b",
      "patch": "@@ -1,3 +1,10 @@\n+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* linespec.c (linespec_lexer_lex_keyword): The \"-force-condition\"\n+\tkeyword may be followed by any keyword.\n+\t* breakpoint.c (find_condition_and_thread): Advance 'tok' by\n+\t'toklen' in the case for \"-force-condition\".\n+\n 2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* main.c (catch_command_errors): Add a flag parameter; invoke"
    },
    {
      "sha": "881686ff7a0409bce17add20abe2b1a88ba4b5ef",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5759831a2d06600a7eae4697417a388444c8e13b/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5759831a2d06600a7eae4697417a388444c8e13b/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=5759831a2d06600a7eae4697417a388444c8e13b",
      "patch": "@@ -9263,7 +9263,7 @@ find_condition_and_thread (const char *tok, CORE_ADDR pc,\n \t}\n       else if (toklen >= 1 && strncmp (tok, \"-force-condition\", toklen) == 0)\n \t{\n-\t  tok = cond_start = end_tok + 1;\n+\t  tok = tok + toklen;\n \t  force = true;\n \t}\n       else if (toklen >= 1 && strncmp (tok, \"thread\", toklen) == 0)"
    },
    {
      "sha": "9af8e52f53fdbd5db0fc7b32c86c576b68503493",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 29,
      "deletions": 16,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5759831a2d06600a7eae4697417a388444c8e13b/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5759831a2d06600a7eae4697417a388444c8e13b/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=5759831a2d06600a7eae4697417a388444c8e13b",
      "patch": "@@ -477,32 +477,45 @@ linespec_lexer_lex_keyword (const char *p)\n \t{\n \t  int len = strlen (linespec_keywords[i]);\n \n-\t  /* If P begins with one of the keywords and the next\n-\t     character is whitespace, we may have found a keyword.\n-\t     It is only a keyword if it is not followed by another\n-\t     keyword.  */\n-\t  if (strncmp (p, linespec_keywords[i], len) == 0\n-\t      && isspace (p[len]))\n+\t  /* If P begins with\n+\n+\t     - \"thread\" or \"task\" and the next character is\n+\t     whitespace, we may have found a keyword.  It is only a\n+\t     keyword if it is not followed by another keyword.\n+\n+\t     - \"-force-condition\", the next character may be EOF\n+\t     since this keyword does not take any arguments.  Otherwise,\n+\t     it should be followed by a keyword.\n+\n+\t     - \"if\", ALWAYS stop the lexer, since it is not possible to\n+\t     predict what is going to appear in the condition, which can\n+\t     only be parsed after SaLs have been found.  */\n+\t  if (strncmp (p, linespec_keywords[i], len) == 0)\n \t    {\n \t      int j;\n \n-\t      /* Special case: \"-force\" is always followed by an \"if\".  */\n+\t      if (i == FORCE_KEYWORD_INDEX && p[len] == '\\0')\n+\t\treturn linespec_keywords[i];\n+\n+\t      if (!isspace (p[len]))\n+\t\tcontinue;\n+\n \t      if (i == FORCE_KEYWORD_INDEX)\n \t\t{\n \t\t  p += len;\n \t\t  p = skip_spaces (p);\n-\t\t  int nextlen = strlen (linespec_keywords[IF_KEYWORD_INDEX]);\n-\t\t  if (!(strncmp (p, linespec_keywords[IF_KEYWORD_INDEX], nextlen) == 0\n-\t\t\t&& isspace (p[nextlen])))\n-\t\t    return NULL;\n-\t\t}\n+\t\t  for (j = 0; linespec_keywords[j] != NULL; ++j)\n+\t\t    {\n+\t\t      int nextlen = strlen (linespec_keywords[j]);\n \n-\t      /* Special case: \"if\" ALWAYS stops the lexer, since it\n-\t\t is not possible to predict what is going to appear in\n-\t\t the condition, which can only be parsed after SaLs have\n-\t\t been found.  */\n+\t\t      if (strncmp (p, linespec_keywords[j], nextlen) == 0\n+\t\t\t  && isspace (p[nextlen]))\n+\t\t\treturn linespec_keywords[i];\n+\t\t    }\n+\t\t}\n \t      else if (i != IF_KEYWORD_INDEX)\n \t\t{\n+\t\t  /* We matched a \"thread\" or \"task\".  */\n \t\t  p += len;\n \t\t  p = skip_spaces (p);\n \t\t  for (j = 0; linespec_keywords[j] != NULL; ++j)"
    },
    {
      "sha": "3c28bc75a663f82f619a8017bdf3a28c1b129b66",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5759831a2d06600a7eae4697417a388444c8e13b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5759831a2d06600a7eae4697417a388444c8e13b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=5759831a2d06600a7eae4697417a388444c8e13b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.linespec/keywords.exp: Add tests to check positional\n+\tflexibility of \"-force-condition\".\n+\n 2020-12-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.base/bp-cmds-run-with-ex.c: New file."
    },
    {
      "sha": "645f44fbb83ae58ea1541599040472702a135c47",
      "filename": "gdb/testsuite/gdb.linespec/keywords.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5759831a2d06600a7eae4697417a388444c8e13b/gdb/testsuite/gdb.linespec/keywords.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5759831a2d06600a7eae4697417a388444c8e13b/gdb/testsuite/gdb.linespec/keywords.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.linespec/keywords.exp?ref=5759831a2d06600a7eae4697417a388444c8e13b",
      "patch": "@@ -75,3 +75,15 @@ gdb_test \"break task task 123\" \"Unknown task 123\\\\.\"\n # Test NULL location with valid conditional containing a keyword.\n gdb_breakpoint \"thread if thread == 0\"\n gdb_breakpoint \"task if task == 0\"\n+\n+# Test the positional flexibility of the \"-force-condition\" flag.\n+foreach prefix {\"\" \"thread 1 \"} {\n+    foreach suffix {\"\" \" \" \" thread 1\"} {\n+\tforeach cond {\"\" \" if 1\"} {\n+\t    with_test_prefix \"prefix: '$prefix', suffix: '$suffix', cond: '$cond'\" {\n+\t\tgdb_breakpoint \"main ${prefix}-force-condition${suffix}${cond}\"\\\n+\t\t    \"message\"\n+\t    }\n+\t}\n+    }\n+}"
    }
  ]
}