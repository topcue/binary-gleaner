{
  "sha": "6390859caa7684ff195d57e9f5cc02eae89bdb95",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjM5MDg1OWNhYTc2ODRmZjE5NWQ1N2U5ZjVjYzAyZWFlODliZGI5NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-10-26T18:54:19Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-10-26T19:00:41Z"
    },
    "message": "Don't inherit range-type signed-ness from underlying type\n\nA recent commit changed gdb to inherit the signed-ness of a range type\nfrom its underlying type:\n\n    commit cfabbd351a174406fd5aa063303f5c8bf9266bbc\n    Author: Tom Tromey <tom@tromey.com>\n    Date:   Sat Oct 17 11:41:59 2020 -0600\n\n      Make range types inherit signed-ness from base type\n\nThis passed testing -- but unfortunately, additional testing at\nAdaCore showed that this change was incorrect.  GNAT, at least, can\nemit an unsigned range type whose underlying type is signed.\n\nThis patch reverts the code change from the above.  I chose not to\nreintroduce the FIXME comments, because now we know that they are\nincorrect.  Instead, this patch also adds a comment to\ncreate_range_type.\n\nA new test case is included as well.\n\n2020-10-26  Tom Tromey  <tromey@adacore.com>\n\n\t* gdbtypes.c (create_range_type): Revert previous patch.  Add\n\tcomment.\n\ngdb/testsuite/ChangeLog\n2020-10-26  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/unsigned_range/foo.adb: New file.\n\t* gdb.ada/unsigned_range/pack.adb: New file.\n\t* gdb.ada/unsigned_range/pack.ads: New file.\n\t* gdb.ada/unsigned_range.exp: New file.",
    "tree": {
      "sha": "12ac1d26010823c93a9146af1434b11d6279cd11",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/12ac1d26010823c93a9146af1434b11d6279cd11"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6390859caa7684ff195d57e9f5cc02eae89bdb95",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6390859caa7684ff195d57e9f5cc02eae89bdb95",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6390859caa7684ff195d57e9f5cc02eae89bdb95",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6390859caa7684ff195d57e9f5cc02eae89bdb95/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d744f0f9652ee8de839c09e4517b18c9b88aecb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d744f0f9652ee8de839c09e4517b18c9b88aecb7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d744f0f9652ee8de839c09e4517b18c9b88aecb7"
    }
  ],
  "stats": {
    "total": 142,
    "additions": 141,
    "deletions": 1
  },
  "files": [
    {
      "sha": "43a80fb3b3e8f55393a16c06077b58c27d8de1e2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6390859caa7684ff195d57e9f5cc02eae89bdb95",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-26  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdbtypes.c (create_range_type): Revert previous patch.  Add\n+\tcomment.\n+\n 2020-10-26  Pedro Alves  <pedro@palves.net>\n \n \t* nat/linux-waitpid.c: Include \"gdbsupport/eintr.h\"."
    },
    {
      "sha": "0940fa597fbcd58640aeaa11de787a1a0fb2728a",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=6390859caa7684ff195d57e9f5cc02eae89bdb95",
      "patch": "@@ -950,7 +950,22 @@ create_range_type (struct type *result_type, struct type *index_type,\n \n   result_type->set_bounds (bounds);\n \n-  result_type->set_is_unsigned (index_type->is_unsigned ());\n+  /* Note that the signed-ness of a range type can't simply be copied\n+     from the underlying type.  Consider a case where the underlying\n+     type is 'int', but the range type can hold 0..65535, and where\n+     the range is further specified to fit into 16 bits.  In this\n+     case, if we copy the underlying type's sign, then reading some\n+     range values will cause an unwanted sign extension.  So, we have\n+     some heuristics here instead.  */\n+  if (low_bound->kind () == PROP_CONST && low_bound->const_val () >= 0)\n+    result_type->set_is_unsigned (true);\n+  /* Ada allows the declaration of range types whose upper bound is\n+     less than the lower bound, so checking the lower bound is not\n+     enough.  Make sure we do not mark a range type whose upper bound\n+     is negative as unsigned.  */\n+  if (high_bound->kind () == PROP_CONST && high_bound->const_val () < 0)\n+    result_type->set_is_unsigned (false);\n+\n   result_type->set_endianity_is_not_default\n     (index_type->endianity_is_not_default ());\n "
    },
    {
      "sha": "eff4972b8c8e470ee2a632735778e31b1a985a1e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6390859caa7684ff195d57e9f5cc02eae89bdb95",
      "patch": "@@ -1,3 +1,10 @@\n+2020-10-26  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/unsigned_range/foo.adb: New file.\n+\t* gdb.ada/unsigned_range/pack.adb: New file.\n+\t* gdb.ada/unsigned_range/pack.ads: New file.\n+\t* gdb.ada/unsigned_range.exp: New file.\n+\n 2020-10-26  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (INTERNAL_GDBFLAGS): Set heigth and width."
    },
    {
      "sha": "476aa8ba3c9acbc43ef4f8100b69928405842fa9",
      "filename": "gdb/testsuite/gdb.ada/unsigned_range.exp",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unsigned_range.exp?ref=6390859caa7684ff195d57e9f5cc02eae89bdb95",
      "patch": "@@ -0,0 +1,32 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+if { [skip_ada_tests] } { return -1 }\n+\n+standard_ada_testfile foo\n+\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable {debug}] != \"\"} {\n+    return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+set bp_location [gdb_get_line_number \"BREAK\" ${testdir}/foo.adb]\n+runto \"foo.adb:$bp_location\"\n+\n+gdb_test \"print Value\" \\\n+    [string_to_regexp \" = (one => 8000, two => 51000)\"]"
    },
    {
      "sha": "52c669acc8b33f2ef71a629e47a60b8badb7b5e8",
      "filename": "gdb/testsuite/gdb.ada/unsigned_range/foo.adb",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range/foo.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range/foo.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unsigned_range/foo.adb?ref=6390859caa7684ff195d57e9f5cc02eae89bdb95",
      "patch": "@@ -0,0 +1,39 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with Pack; use Pack;\n+\n+procedure Foo is\n+   type U_W is range 0 .. 65535;\n+   for  U_W'Size use 16;\n+\n+   type R_C is\n+   record\n+      One : U_W;\n+      Two : U_W;\n+   end record;\n+\n+   for R_C use\n+   record at mod 2;\n+      One at 0 range  0 .. 15;\n+      Two at 2 range  0 .. 15;\n+   end record;\n+   for R_C'size use 2*16;\n+\n+   Value: R_C := (One => 8000, Two => 51000);\n+\n+begin\n+   Do_Nothing (Value'Address); --  BREAK\n+end Foo;"
    },
    {
      "sha": "626ea6044ea6fcc5bab9f04c12d6ffa5ee331f0b",
      "filename": "gdb/testsuite/gdb.ada/unsigned_range/pack.adb",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range/pack.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range/pack.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unsigned_range/pack.adb?ref=6390859caa7684ff195d57e9f5cc02eae89bdb95",
      "patch": "@@ -0,0 +1,23 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package body Pack is\n+\n+   procedure Do_Nothing (A : System.Address) is\n+   begin\n+      null;\n+   end Do_Nothing;\n+\n+end Pack;"
    },
    {
      "sha": "f744c538b47645d409bbf252aa9bae05468cd262",
      "filename": "gdb/testsuite/gdb.ada/unsigned_range/pack.ads",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range/pack.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6390859caa7684ff195d57e9f5cc02eae89bdb95/gdb/testsuite/gdb.ada/unsigned_range/pack.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/unsigned_range/pack.ads?ref=6390859caa7684ff195d57e9f5cc02eae89bdb95",
      "patch": "@@ -0,0 +1,19 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with System;\n+package Pack is\n+   procedure Do_Nothing (A : System.Address);\n+end Pack;"
    }
  ]
}