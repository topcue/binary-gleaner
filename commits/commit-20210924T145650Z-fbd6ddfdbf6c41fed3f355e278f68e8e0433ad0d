{
  "sha": "fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d",
  "node_id": "C_kwDOANOeidoAKGZiZDZkZGZkYmY2YzQxZmVkM2YzNTVlMjc4ZjY4ZThlMDQzM2FkMGQ",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-24T14:56:50Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-24T14:56:50Z"
    },
    "message": "[gdb/testsuite] Don't leave gdb instance running after function_range\n\nA typical dwarf assembly test-case start like this:\n...\nstandard_testfile .c -debug.S\n\nset asm_file [standard_output_file $srcfile2]\nDwarf::assemble $asm_file {\n  ...\n}\n\nif { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n\t  [list $srcfile $asm_file] {nodebug}] } {\n    return -1\n}\n...\n\nWhen accidentally using build_for_executable instead of\nprepare_for_testing (or intentionally using it but forgetting to add\nclean_restart $binfile or some such) the mistake may not be caught, because\nanother gdb instance is still running, and we may silently end up testing\ncompiler-generated DWARF.\n\nThis can be caused by something relatively obvious, like an earlier\nprepare_for_testing or clean_restart, but also by something more obscure like\nfunction_range, which may even be triggered by dwarf assembly like this:\n...\n  {MACRO_AT_func {main}}\n...\n\nFix this by calling gdb_exit at the end of function_range.\n\nAlso fix the fallout of that in test-case gdb.dwarf2/dw2-bad-elf.exp, where a\nget_sizeof call used the gdb instance left lingering by function_range.\n\n[ A better and more complete fix would add a new proc get_exec_info, that would\nbe called at the start of the dwarf assembly body:\n...\nDwarf::assemble $asm_file {\n  get_exec_info {main foo} {int void*}\n...\nthat would:\n- do a prepare_for_testing with $srcfile (roughtly equivalent to what\n  MACRO_AT_func does,\n- call function_range for all functions main and foo, without starting a\n  new gdb instance\n- set corresponding variables at the call-site: main_start, main_len,\n  main_end, foo_start, foo_len, foo_end.\n- get size for types int and void*\n- set corresponding variables at the call-site: int_size, void_ptr_size.\n- do a gdb_exit. ]\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "19b00fb9b7a8e105b2df76e18dfe208b98fd8ef8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/19b00fb9b7a8e105b2df76e18dfe208b98fd8ef8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "66484acafd396ecb9bffd9f00ff3c37aec549c83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66484acafd396ecb9bffd9f00ff3c37aec549c83",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/66484acafd396ecb9bffd9f00ff3c37aec549c83"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 9,
    "deletions": 3
  },
  "files": [
    {
      "sha": "d276bf8f0d4428174908fe19d7cb86dd4662b95a",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-bad-elf.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d/gdb/testsuite/gdb.dwarf2/dw2-bad-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d/gdb/testsuite/gdb.dwarf2/dw2-bad-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-bad-elf.exp?ref=fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d",
      "patch": "@@ -36,19 +36,24 @@ if {![dwarf2_support]} {\n \n standard_testfile main.c -other.S -dwarf.S\n \n+if { [prepare_for_testing ${testfile}.exp ${testfile} ${srcfile}] } {\n+    untested \"failed to compile\"\n+    return -1\n+}\n+\n+set int_size [get_sizeof \"int\" 4]\n+\n # Make some DWARF for the test.\n set asm_file [standard_output_file $srcfile3]\n Dwarf::assemble $asm_file {\n-    global srcdir subdir srcfile srcfile2\n+    global srcdir subdir srcfile srcfile2 int_size\n \n     declare_labels ranges_label_1 ranges_label_2 L1 L2\n \n     set main_result [function_range main ${srcdir}/${subdir}/${srcfile}]\n     set main_start [lindex $main_result 0]\n     set main_length [lindex $main_result 1]\n \n-    set int_size [get_sizeof \"int\" 4]\n-\n     cu {} {\n \tDW_TAG_compile_unit {\n \t    {DW_AT_language @DW_LANG_C}"
    },
    {
      "sha": "c248296aa8da881dc582b4494b98dcfe2f17abe8",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=fbd6ddfdbf6c41fed3f355e278f68e8e0433ad0d",
      "patch": "@@ -271,6 +271,7 @@ proc function_range { func src {options {debug}} } {\n \t}\n     }\n \n+    gdb_exit\n     return [list \"${func}_label - $func_label_offset\" $func_length]\n }\n "
    }
  ]
}