{
  "sha": "729a211143c69e42debcb26bec7071d958e12b45",
  "node_id": "C_kwDOANOeidoAKDcyOWEyMTExNDNjNjllNDJkZWJjYjI2YmVjNzA3MWQ5NThlMTJiNDU",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-30T19:34:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-05T18:36:33Z"
    },
    "message": "Filtered output cleanup in expression dumping\n\nMost of the expression-dumping code uses filtered output, but a few\nfunctions did not.  This patch cleans up these instance.\n\nNote that this won't cause any behavior change, because the only calls\nto dump_prefix_expression pass in gdb_stdlog.  However, in the long\nrun it's easier to audit the code if the number of uses of _unfiltered\nis reduced.",
    "tree": {
      "sha": "fc2a3f39ef8918410b5a91d20e09c2fa5153ed75",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fc2a3f39ef8918410b5a91d20e09c2fa5153ed75"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/729a211143c69e42debcb26bec7071d958e12b45",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/729a211143c69e42debcb26bec7071d958e12b45",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/729a211143c69e42debcb26bec7071d958e12b45",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/729a211143c69e42debcb26bec7071d958e12b45/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "50f5d5c34d321275c4e59b2f098023f674c617d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50f5d5c34d321275c4e59b2f098023f674c617d8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/50f5d5c34d321275c4e59b2f098023f674c617d8"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 13,
    "deletions": 13
  },
  "files": [
    {
      "sha": "381a10d85be2f33c68ae7f0fb8beef48a1fe66a5",
      "filename": "gdb/expprint.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/729a211143c69e42debcb26bec7071d958e12b45/gdb/expprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/729a211143c69e42debcb26bec7071d958e12b45/gdb/expprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expprint.c?ref=729a211143c69e42debcb26bec7071d958e12b45",
      "patch": "@@ -138,9 +138,9 @@ dump_for_expression (struct ui_file *stream, int depth,\n {\n   fprintf_filtered (stream, _(\"%*sType flags: \"), depth, \"\");\n   if (flags & TYPE_INSTANCE_FLAG_CONST)\n-    fputs_unfiltered (\"const \", stream);\n+    fputs_filtered (\"const \", stream);\n   if (flags & TYPE_INSTANCE_FLAG_VOLATILE)\n-    fputs_unfiltered (\"volatile\", stream);\n+    fputs_filtered (\"volatile\", stream);\n   fprintf_filtered (stream, \"\\n\");\n }\n \n@@ -152,24 +152,24 @@ dump_for_expression (struct ui_file *stream, int depth,\n   switch (flags & ~C_CHAR)\n     {\n     case C_WIDE_STRING:\n-      fputs_unfiltered (_(\"wide \"), stream);\n+      fputs_filtered (_(\"wide \"), stream);\n       break;\n     case C_STRING_16:\n-      fputs_unfiltered (_(\"u16 \"), stream);\n+      fputs_filtered (_(\"u16 \"), stream);\n       break;\n     case C_STRING_32:\n-      fputs_unfiltered (_(\"u32 \"), stream);\n+      fputs_filtered (_(\"u32 \"), stream);\n       break;\n     default:\n-      fputs_unfiltered (_(\"ordinary \"), stream);\n+      fputs_filtered (_(\"ordinary \"), stream);\n       break;\n     }\n \n   if ((flags & C_CHAR) != 0)\n-    fputs_unfiltered (_(\"char\"), stream);\n+    fputs_filtered (_(\"char\"), stream);\n   else\n-    fputs_unfiltered (_(\"string\"), stream);\n-  fputs_unfiltered (\"\\n\", stream);\n+    fputs_filtered (_(\"string\"), stream);\n+  fputs_filtered (\"\\n\", stream);\n }\n \n void\n@@ -178,13 +178,13 @@ dump_for_expression (struct ui_file *stream, int depth,\n {\n   fprintf_filtered (stream, _(\"%*sRange:\"), depth, \"\");\n   if ((flags & RANGE_LOW_BOUND_DEFAULT) != 0)\n-    fputs_unfiltered (_(\"low-default \"), stream);\n+    fputs_filtered (_(\"low-default \"), stream);\n   if ((flags & RANGE_HIGH_BOUND_DEFAULT) != 0)\n-    fputs_unfiltered (_(\"high-default \"), stream);\n+    fputs_filtered (_(\"high-default \"), stream);\n   if ((flags & RANGE_HIGH_BOUND_EXCLUSIVE) != 0)\n-    fputs_unfiltered (_(\"high-exclusive \"), stream);\n+    fputs_filtered (_(\"high-exclusive \"), stream);\n   if ((flags & RANGE_HAS_STRIDE) != 0)\n-    fputs_unfiltered (_(\"has-stride\"), stream);\n+    fputs_filtered (_(\"has-stride\"), stream);\n   fprintf_filtered (stream, \"\\n\");\n }\n "
    }
  ]
}