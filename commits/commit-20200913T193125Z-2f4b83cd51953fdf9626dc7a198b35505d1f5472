{
  "sha": "2f4b83cd51953fdf9626dc7a198b35505d1f5472",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmY0YjgzY2Q1MTk1M2ZkZjk2MjZkYzdhMTk4YjM1NTA1ZDFmNTQ3Mg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-13T19:31:25Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-13T19:31:25Z"
    },
    "message": "Make default_mi_gdb_start/dbx_gdb_start use gdb_spawn\n\nIf a board file wants to customize how gdb is launched, the obvious\nway is to have the board override gdb_spawn.  However, that doesn't\nwork for either gdb.mi/ testcases or gdb.base/dbx.exp, because\ndefault_mi_gdb_start and dbx_gdb_start don't use gdb_spawn currently.\n\nThat is fixed by this patch.\n\ngdb/testsuite/\n\n\t* gdb.base/dbx.exp (dbx_gdb_start): Adjust to use gdb_spawn\n\tinstead of spawning GDB with remote_spawn.\n\t* lib/mi-support.exp (default_mi_gdb_start): Adjust to use\n\tgdb_spawn instead of spawning GDB with remote_spawn.",
    "tree": {
      "sha": "a88028733218de22e23db0d0025bb6363c8984d0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a88028733218de22e23db0d0025bb6363c8984d0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2f4b83cd51953fdf9626dc7a198b35505d1f5472",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f4b83cd51953fdf9626dc7a198b35505d1f5472",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2f4b83cd51953fdf9626dc7a198b35505d1f5472",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f4b83cd51953fdf9626dc7a198b35505d1f5472/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c49da0e466e1bcb6e1f363ea4a806cfd2c322cb0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c49da0e466e1bcb6e1f363ea4a806cfd2c322cb0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c49da0e466e1bcb6e1f363ea4a806cfd2c322cb0"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 30,
    "deletions": 22
  },
  "files": [
    {
      "sha": "397c6161324c0a9123eeffa12e5b5772287c2487",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2f4b83cd51953fdf9626dc7a198b35505d1f5472/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2f4b83cd51953fdf9626dc7a198b35505d1f5472/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2f4b83cd51953fdf9626dc7a198b35505d1f5472",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-13  Pedro Alves  <pedro@palves.net>\n+\n+\t* gdb.base/dbx.exp (dbx_gdb_start): Adjust to use gdb_spawn\n+\tinstead of spawning GDB with remote_spawn.\n+\t* lib/mi-support.exp (default_mi_gdb_start): Adjust to use\n+\tgdb_spawn instead of spawning GDB with remote_spawn.\n+\n 2020-09-13  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.dwarf2/ada-linkage-name.c (main): Move to the bottom of the"
    },
    {
      "sha": "5228f2e6c228129b90f877a45dfe2dfcf55bcba7",
      "filename": "gdb/testsuite/gdb.base/dbx.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2f4b83cd51953fdf9626dc7a198b35505d1f5472/gdb/testsuite/gdb.base/dbx.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2f4b83cd51953fdf9626dc7a198b35505d1f5472/gdb/testsuite/gdb.base/dbx.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/dbx.exp?ref=2f4b83cd51953fdf9626dc7a198b35505d1f5472",
      "patch": "@@ -26,31 +26,33 @@ if {[build_executable $testfile.exp $testfile \\\n # start gdb -- start gdb running, default procedure\n #\n proc dbx_gdb_start { } {\n-    global GDB\n-    global INTERNAL_GDBFLAGS GDBFLAGS\n     global prompt\n-    global spawn_id\n     global timeout\n-    verbose \"Spawning $GDB -dbx $INTERNAL_GDBFLAGS $GDBFLAGS\"\n+    global gdb_spawn_id\n \n-    if { [which $GDB] == 0 } then {\n-        perror \"$GDB does not exist.\"\n-        exit 1\n+    save_vars { GDBFLAGS } {\n+\tappend GDBFLAGS \" -dbx\"\n+\n+\tset res [gdb_spawn]\n+\tif { $res != 0} {\n+\t    return $res\n+\t}\n     }\n \n     set oldtimeout $timeout\n     set timeout [expr \"$timeout + 60\"]\n-    eval \"spawn $GDB -dbx $INTERNAL_GDBFLAGS $GDBFLAGS\"\n     gdb_expect {\n         -re \".*\\r\\n$gdb_prompt $\" {\n             verbose \"GDB initialized.\"\n         }\n         -re \"$prompt $\" {\n             perror \"GDB never initialized.\"\n+\t    unset gdb_spawn_id\n             return -1\n         }\n         timeout         {\n             perror \"(timeout) GDB never initialized.\"\n+\t    unset gdb_spawn_id\n             return -1\n         }\n     }"
    },
    {
      "sha": "5c1fcca4d233f1e5afe91edc0f2c20d8e777d55a",
      "filename": "gdb/testsuite/lib/mi-support.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 14,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2f4b83cd51953fdf9626dc7a198b35505d1f5472/gdb/testsuite/lib/mi-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2f4b83cd51953fdf9626dc7a198b35505d1f5472/gdb/testsuite/lib/mi-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/mi-support.exp?ref=2f4b83cd51953fdf9626dc7a198b35505d1f5472",
      "patch": "@@ -226,24 +226,19 @@ proc default_mi_gdb_start { args } {\n \tsid_start\n     }\n \n-    verbose \"Spawning $GDB $INTERNAL_GDBFLAGS $GDBFLAGS $MIFLAGS\"\n-\n     if [info exists gdb_spawn_id] {\n \treturn 0\n     }\n \n-    if ![is_remote host] {\n-\tif { [which $GDB] == 0 } then {\n-\t    perror \"$GDB does not exist.\"\n-\t    exit 1\n+    save_vars { GDBFLAGS } {\n+\tappend GDBFLAGS \" $MIFLAGS\"\n+\n+\tset res [gdb_spawn]\n+\tif { $res != 0} {\n+\t    return $res\n \t}\n     }\n \n-    set res [remote_spawn host \"$GDB $INTERNAL_GDBFLAGS $GDBFLAGS $MIFLAGS [host_info gdb_opts]\"]\n-    if { $res < 0 || $res == \"\" } {\n-\tperror \"Spawning $GDB failed.\"\n-\treturn 1\n-    }\n     gdb_expect {\n \t-re \"~\\\"GNU.*\\r\\n~\\\".*$mi_gdb_prompt$\" {\n \t    # We have a new format mi startup prompt.  If we are\n@@ -252,6 +247,7 @@ proc default_mi_gdb_start { args } {\n \t    if { $MIFLAGS == \"-i=mi1\" } {\n \t\tperror \"(mi startup) Got unexpected new mi prompt.\"\n \t\tremote_close host\n+\t\tunset gdb_spawn_id\n \t\treturn -1\n \t    }\n \t    verbose \"GDB initialized.\"\n@@ -263,29 +259,32 @@ proc default_mi_gdb_start { args } {\n \t    if { $MIFLAGS != \"-i=mi1\" } {\n \t\tperror \"(mi startup) Got unexpected old mi prompt.\"\n \t\tremote_close host\n+\t\tunset gdb_spawn_id\n \t\treturn -1\n \t    }\n \t    verbose \"GDB initialized.\"\n \t}\n \t-re \".*unrecognized option.*for a complete list of options.\" {\n \t    untested \"skip mi tests (not compiled with mi support).\"\n \t    remote_close host\n+\t    unset gdb_spawn_id\n \t    return -1\n \t}\n \t-re \".*Interpreter `mi' unrecognized.\" {\n \t    untested \"skip mi tests (not compiled with mi support).\"\n \t    remote_close host\n+\t    unset gdb_spawn_id\n \t    return -1\n \t}\n \ttimeout {\n \t    perror \"(timeout) GDB never initialized after 10 seconds.\"\n \t    remote_close host\n+\t    unset gdb_spawn_id\n \t    return -1\n \t}\n     }\n-    set gdb_spawn_id $res\n-    set gdb_main_spawn_id $res\n-    set mi_spawn_id $res\n+    set gdb_main_spawn_id $gdb_spawn_id\n+    set mi_spawn_id $gdb_spawn_id\n \n     # FIXME: mi output does not go through pagers, so these can be removed.\n     # force the height to \"unlimited\", so no pagers get used"
    }
  ]
}