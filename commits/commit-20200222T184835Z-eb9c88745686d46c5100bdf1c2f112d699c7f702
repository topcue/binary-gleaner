{
  "sha": "eb9c88745686d46c5100bdf1c2f112d699c7f702",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWI5Yzg4NzQ1Njg2ZDQ2YzUxMDBiZGYxYzJmMTEyZDY5OWM3ZjcwMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:26Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:35Z"
    },
    "message": "Reimplement tui_next_win and tui_prev_win\n\nThis reimplements tui_next_win and tui_prev_win.  Now they account for\nthe possibility of windows not on tui_win_list.\n\ngdb/ChangeLog\n2020-02-22  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-data.c (tui_next_win, tui_prev_win): Reimplement.\n\nChange-Id: Ifcd402f76fe0a16e0fe9275a185d550279c01660",
    "tree": {
      "sha": "27d75e2aad66d0cef45365d87945336b23ffb9db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/27d75e2aad66d0cef45365d87945336b23ffb9db"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eb9c88745686d46c5100bdf1c2f112d699c7f702",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb9c88745686d46c5100bdf1c2f112d699c7f702",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eb9c88745686d46c5100bdf1c2f112d699c7f702",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb9c88745686d46c5100bdf1c2f112d699c7f702/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7eed1a8e8386e1b93c51768855c32ddae6f088ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7eed1a8e8386e1b93c51768855c32ddae6f088ae",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7eed1a8e8386e1b93c51768855c32ddae6f088ae"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 17,
    "deletions": 42
  },
  "files": [
    {
      "sha": "16daac356c5859e4cc4782b264bb33f681de780c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb9c88745686d46c5100bdf1c2f112d699c7f702/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb9c88745686d46c5100bdf1c2f112d699c7f702/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=eb9c88745686d46c5100bdf1c2f112d699c7f702",
      "patch": "@@ -1,3 +1,7 @@\n+2020-02-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-data.c (tui_next_win, tui_prev_win): Reimplement.\n+\n 2020-02-22  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (struct tui_source_window_iterator)"
    },
    {
      "sha": "5d42fafccca3c9bbcc406437eeb106ae96c27cfe",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 13,
      "deletions": 42,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb9c88745686d46c5100bdf1c2f112d699c7f702/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb9c88745686d46c5100bdf1c2f112d699c7f702/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=eb9c88745686d46c5100bdf1c2f112d699c7f702",
      "patch": "@@ -26,6 +26,7 @@\n #include \"tui/tui-wingeneral.h\"\n #include \"tui/tui-winsource.h\"\n #include \"gdb_curses.h\"\n+#include <algorithm>\n \n struct tui_win_info *tui_win_list[MAX_MAJOR_WINDOWS];\n \n@@ -103,28 +104,13 @@ tui_set_term_width_to (int w)\n struct tui_win_info *\n tui_next_win (struct tui_win_info *cur_win)\n {\n-  int type = cur_win->type;\n-  struct tui_win_info *next_win = NULL;\n-\n-  if (cur_win->type == CMD_WIN)\n-    type = SRC_WIN;\n-  else\n-    type = cur_win->type + 1;\n-  while (type != cur_win->type && (next_win == NULL))\n-    {\n-      if (tui_win_list[type]\n-\t  && tui_win_list[type]->is_visible ())\n-\tnext_win = tui_win_list[type];\n-      else\n-\t{\n-\t  if (type == CMD_WIN)\n-\t    type = SRC_WIN;\n-\t  else\n-\t    type++;\n-\t}\n-    }\n+  auto iter = std::find (tui_windows.begin (), tui_windows.end (), cur_win);\n+  gdb_assert (iter != tui_windows.end ());\n \n-  return next_win;\n+  ++iter;\n+  if (iter == tui_windows.end ())\n+    return tui_windows[0];\n+  return *iter;\n }\n \n \n@@ -133,28 +119,13 @@ tui_next_win (struct tui_win_info *cur_win)\n struct tui_win_info *\n tui_prev_win (struct tui_win_info *cur_win)\n {\n-  int type = cur_win->type;\n-  struct tui_win_info *prev = NULL;\n-\n-  if (cur_win->type == SRC_WIN)\n-    type = CMD_WIN;\n-  else\n-    type = cur_win->type - 1;\n-  while (type != cur_win->type && (prev == NULL))\n-    {\n-      if (tui_win_list[type]\n-\t  && tui_win_list[type]->is_visible ())\n-\tprev = tui_win_list[type];\n-      else\n-\t{\n-\t  if (type == SRC_WIN)\n-\t    type = CMD_WIN;\n-\t  else\n-\t    type--;\n-\t}\n-    }\n+  auto iter = std::find (tui_windows.begin (), tui_windows.end (), cur_win);\n+  gdb_assert (iter != tui_windows.end ());\n \n-  return prev;\n+  if (iter == tui_windows.begin ())\n+    return tui_windows.back ();\n+  --iter;\n+  return *iter;\n }\n \n "
    }
  ]
}