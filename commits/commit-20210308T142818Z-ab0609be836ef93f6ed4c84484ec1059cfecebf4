{
  "sha": "ab0609be836ef93f6ed4c84484ec1059cfecebf4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWIwNjA5YmU4MzZlZjkzZjZlZDRjODQ0ODRlYzEwNTljZmVjZWJmNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:18Z"
    },
    "message": "Introduce structop_ptr_operation\n\nThis adds class structop_ptr_operation, which implements STRUCTOP_PTR.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expop.h (class structop_ptr_operation): New.\n\t* eval.c (eval_op_structop_ptr): No longer static.  Remove \"op\"\n\tparameter.",
    "tree": {
      "sha": "bde27a09f8f0591e25c5e56d60beede5bb95a5a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bde27a09f8f0591e25c5e56d60beede5bb95a5a2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ab0609be836ef93f6ed4c84484ec1059cfecebf4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab0609be836ef93f6ed4c84484ec1059cfecebf4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ab0609be836ef93f6ed4c84484ec1059cfecebf4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab0609be836ef93f6ed4c84484ec1059cfecebf4/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "808b22cfd7e1afdcba7dea700a76401e2f68f2c6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/808b22cfd7e1afdcba7dea700a76401e2f68f2c6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/808b22cfd7e1afdcba7dea700a76401e2f68f2c6"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 50,
    "deletions": 5
  },
  "files": [
    {
      "sha": "0a985a2fce542e41dd0da82aa8789dde732d19dd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0609be836ef93f6ed4c84484ec1059cfecebf4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0609be836ef93f6ed4c84484ec1059cfecebf4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ab0609be836ef93f6ed4c84484ec1059cfecebf4",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expop.h (class structop_ptr_operation): New.\n+\t* eval.c (eval_op_structop_ptr): No longer static.  Remove \"op\"\n+\tparameter.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (class structop_base_operation)"
    },
    {
      "sha": "1962777cc6d118117d039661f1b5cb04323a8b8b",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0609be836ef93f6ed4c84484ec1059cfecebf4/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0609be836ef93f6ed4c84484ec1059cfecebf4/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=ab0609be836ef93f6ed4c84484ec1059cfecebf4",
      "patch": "@@ -1358,22 +1358,22 @@ eval_op_structop_struct (struct type *expect_type, struct expression *exp,\n \n /* A helper function for STRUCTOP_PTR.  */\n \n-static struct value *\n+struct value *\n eval_op_structop_ptr (struct type *expect_type, struct expression *exp,\n-\t\t      enum noside noside, enum exp_opcode op,\n+\t\t      enum noside noside,\n \t\t      struct value *arg1, const char *string)\n {\n   if (noside == EVAL_SKIP)\n     return eval_skip_value (exp);\n \n   /* Check to see if operator '->' has been overloaded.  If so replace\n      arg1 with the value returned by evaluating operator->().  */\n-  while (unop_user_defined_p (op, arg1))\n+  while (unop_user_defined_p (STRUCTOP_PTR, arg1))\n     {\n       struct value *value = NULL;\n       try\n \t{\n-\t  value = value_x_unop (arg1, op, noside);\n+\t  value = value_x_unop (arg1, STRUCTOP_PTR, noside);\n \t}\n \n       catch (const gdb_exception_error &except)\n@@ -2759,7 +2759,7 @@ evaluate_subexp_standard (struct type *expect_type,\n       tem = longest_to_int (exp->elts[pc + 1].longconst);\n       (*pos) += 3 + BYTES_TO_EXP_ELEM (tem + 1);\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n-      return eval_op_structop_ptr (expect_type, exp, noside, op, arg1,\n+      return eval_op_structop_ptr (expect_type, exp, noside, arg1,\n \t\t\t\t   &exp->elts[pc + 2].string);\n \n     case STRUCTOP_MEMBER:"
    },
    {
      "sha": "38f3ffb5aef5bd0af8761067629a6e1a19920572",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0609be836ef93f6ed4c84484ec1059cfecebf4/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0609be836ef93f6ed4c84484ec1059cfecebf4/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=ab0609be836ef93f6ed4c84484ec1059cfecebf4",
      "patch": "@@ -75,6 +75,11 @@ extern struct value *eval_op_structop_struct (struct type *expect_type,\n \t\t\t\t\t      enum noside noside,\n \t\t\t\t\t      struct value *arg1,\n \t\t\t\t\t      const char *string);\n+extern struct value *eval_op_structop_ptr (struct type *expect_type,\n+\t\t\t\t\t   struct expression *exp,\n+\t\t\t\t\t   enum noside noside,\n+\t\t\t\t\t   struct value *arg1,\n+\t\t\t\t\t   const char *string);\n \n namespace expr\n {\n@@ -848,6 +853,40 @@ class structop_operation\n   }\n };\n \n+class structop_ptr_operation\n+  : public structop_base_operation\n+{\n+public:\n+\n+  using structop_base_operation::structop_base_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    value *val = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+    return eval_op_structop_ptr (expect_type, exp, noside, val,\n+\t\t\t\t std::get<1> (m_storage).c_str ());\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return STRUCTOP_PTR; }\n+\n+protected:\n+\n+  void do_generate_ax (struct expression *exp,\n+\t\t       struct agent_expr *ax,\n+\t\t       struct axs_value *value,\n+\t\t       struct type *cast_type)\n+    override\n+  {\n+    gen_expr_structop (exp, STRUCTOP_PTR,\n+\t\t       std::get<0> (this->m_storage).get (),\n+\t\t       std::get<1> (this->m_storage).c_str (),\n+\t\t       ax, value);\n+  }\n+};\n+\n } /* namespace expr */\n \n #endif /* EXPOP_H */"
    }
  ]
}