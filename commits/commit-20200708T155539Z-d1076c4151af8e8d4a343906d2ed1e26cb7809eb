{
  "sha": "d1076c4151af8e8d4a343906d2ed1e26cb7809eb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDEwNzZjNDE1MWFmOGU4ZDRhMzQzOTA2ZDJlZDFlMjZjYjc4MDllYg==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2020-07-08T15:55:20Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2020-07-08T15:55:39Z"
    },
    "message": "Rename the 'obfd' argument to fbsd_nat_target::find_memory_regions.\n\nThe argument is passed as a generic cookie value to the supplied\ncallback and is not necessarily a pointer to a bfd.\n\ngdb/ChangeLog:\n\n\t* fbsd-nat.c (fbsd_nat_target::find_memory_regions): Rename 'obfd'\n\targument to 'data'.",
    "tree": {
      "sha": "8e5fabe4fb70062d0b691a8fea20b37c71465d01",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8e5fabe4fb70062d0b691a8fea20b37c71465d01"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d1076c4151af8e8d4a343906d2ed1e26cb7809eb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1076c4151af8e8d4a343906d2ed1e26cb7809eb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d1076c4151af8e8d4a343906d2ed1e26cb7809eb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1076c4151af8e8d4a343906d2ed1e26cb7809eb/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "15f3b07769c44d88a5015bd166c14a6cddc6c46a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15f3b07769c44d88a5015bd166c14a6cddc6c46a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/15f3b07769c44d88a5015bd166c14a6cddc6c46a"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 11,
    "deletions": 6
  },
  "files": [
    {
      "sha": "4014fe4405e7ba6991001fb03bff5d173bba2569",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1076c4151af8e8d4a343906d2ed1e26cb7809eb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1076c4151af8e8d4a343906d2ed1e26cb7809eb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d1076c4151af8e8d4a343906d2ed1e26cb7809eb",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-08  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* fbsd-nat.c (fbsd_nat_target::find_memory_regions): Rename 'obfd'\n+\targument to 'data'.\n+\n 2020-07-08  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (ada_exception_message_1): Use read_memory."
    },
    {
      "sha": "a63ad2a8f28f7122714b36c4b8eb302294e36706",
      "filename": "gdb/fbsd-nat.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d1076c4151af8e8d4a343906d2ed1e26cb7809eb/gdb/fbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d1076c4151af8e8d4a343906d2ed1e26cb7809eb/gdb/fbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/fbsd-nat.c?ref=d1076c4151af8e8d4a343906d2ed1e26cb7809eb",
      "patch": "@@ -86,12 +86,12 @@ fbsd_nat_target::pid_to_exec_file (int pid)\n \n #ifdef HAVE_KINFO_GETVMMAP\n /* Iterate over all the memory regions in the current inferior,\n-   calling FUNC for each memory region.  OBFD is passed as the last\n+   calling FUNC for each memory region.  DATA is passed as the last\n    argument to FUNC.  */\n \n int\n fbsd_nat_target::find_memory_regions (find_memory_region_ftype func,\n-\t\t\t\t      void *obfd)\n+\t\t\t\t      void *data)\n {\n   pid_t pid = inferior_ptid.pid ();\n   struct kinfo_vmentry *kve;\n@@ -133,7 +133,7 @@ fbsd_nat_target::find_memory_regions (find_memory_region_ftype func,\n \t Pass MODIFIED as true, we do not know the real modification state.  */\n       func (kve->kve_start, size, kve->kve_protection & KVME_PROT_READ,\n \t    kve->kve_protection & KVME_PROT_WRITE,\n-\t    kve->kve_protection & KVME_PROT_EXEC, 1, obfd);\n+\t    kve->kve_protection & KVME_PROT_EXEC, 1, data);\n     }\n   return 0;\n }\n@@ -160,12 +160,12 @@ fbsd_read_mapping (FILE *mapfile, unsigned long *start, unsigned long *end,\n }\n \n /* Iterate over all the memory regions in the current inferior,\n-   calling FUNC for each memory region.  OBFD is passed as the last\n+   calling FUNC for each memory region.  DATA is passed as the last\n    argument to FUNC.  */\n \n int\n fbsd_nat_target::find_memory_regions (find_memory_region_ftype func,\n-\t\t\t\t      void *obfd)\n+\t\t\t\t      void *data)\n {\n   pid_t pid = inferior_ptid.pid ();\n   unsigned long start, end, size;\n@@ -202,7 +202,7 @@ fbsd_nat_target::find_memory_regions (find_memory_region_ftype func,\n \n       /* Invoke the callback function to create the corefile segment.\n \t Pass MODIFIED as true, we do not know the real modification state.  */\n-      func (start, size, read, write, exec, 1, obfd);\n+      func (start, size, read, write, exec, 1, data);\n     }\n \n   return 0;"
    }
  ]
}