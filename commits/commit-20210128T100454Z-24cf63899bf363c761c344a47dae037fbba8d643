{
  "sha": "24cf63899bf363c761c344a47dae037fbba8d643",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjRjZjYzODk5YmYzNjNjNzYxYzM0NGE0N2RhZTAzN2ZiYmE4ZDY0Mw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-28T09:58:43Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-28T10:04:54Z"
    },
    "message": "gdb: update comment for execute_command_to_string\n\nThe function execute_command_to_string had two header comments, one in\ngdbcmd.h and one in top.c.\n\nThis commit merges the two comments into one and places this comment\nin gdbcmd.h.  The comment in top.c is updated to just reference\ngdbcmd.h.\n\ngdb/ChangeLog:\n\n\t* gdbcmd.h (execute_command_to_string): Update comment.\n\t* top.c (execute_command_to_string): Update header comment.",
    "tree": {
      "sha": "562d0a9045fc5fadebd33ee0f57ceb80c403f7f3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/562d0a9045fc5fadebd33ee0f57ceb80c403f7f3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/24cf63899bf363c761c344a47dae037fbba8d643",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24cf63899bf363c761c344a47dae037fbba8d643",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/24cf63899bf363c761c344a47dae037fbba8d643",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24cf63899bf363c761c344a47dae037fbba8d643/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2a7f6487d0a2f9a5f16d0f67904ac35100313eb1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a7f6487d0a2f9a5f16d0f67904ac35100313eb1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2a7f6487d0a2f9a5f16d0f67904ac35100313eb1"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 12,
    "deletions": 6
  },
  "files": [
    {
      "sha": "46ba66d7c402c29ca6a1e14cd6a5b06ce62ec8a3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24cf63899bf363c761c344a47dae037fbba8d643/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24cf63899bf363c761c344a47dae037fbba8d643/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=24cf63899bf363c761c344a47dae037fbba8d643",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdbcmd.h (execute_command_to_string): Update comment.\n+\t* top.c (execute_command_to_string): Update header comment.\n+\n 2021-01-28  Tom de Vries  <tdevries@suse.de>\n \n \tPR breakpoints/27205"
    },
    {
      "sha": "f541ebd92d2a4f443c0c6d8d44f8e1948e4adec0",
      "filename": "gdb/gdbcmd.h",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24cf63899bf363c761c344a47dae037fbba8d643/gdb/gdbcmd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24cf63899bf363c761c344a47dae037fbba8d643/gdb/gdbcmd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbcmd.h?ref=24cf63899bf363c761c344a47dae037fbba8d643",
      "patch": "@@ -134,9 +134,12 @@ extern struct cmd_list_element *save_cmdlist;\n \n extern void execute_command (const char *, int);\n \n-/* Execute command P and returns its output.  If TERM_OUT,\n-   the output is built using terminal output behaviour such\n-   as cli_styling.  */\n+/* Run execute_command for P and FROM_TTY.  Capture its output into the\n+   returned string, do not display it to the screen.  The global BATCH_FLAG\n+   will temporarily be set to true.  When TERM_OUT is true the output is\n+   collected with terminal behaviour (e.g. with styling).  When TERM_OUT is\n+   false raw output will be collected (e.g. no styling).  */\n+\n extern std::string execute_command_to_string (const char *p, int from_tty,\n \t\t\t\t\t      bool term_out);\n extern void execute_command_to_ui_file (struct ui_file *file,"
    },
    {
      "sha": "3be950796545e206dad1fcf3c9184f3c9e855c24",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24cf63899bf363c761c344a47dae037fbba8d643/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24cf63899bf363c761c344a47dae037fbba8d643/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=24cf63899bf363c761c344a47dae037fbba8d643",
      "patch": "@@ -716,9 +716,7 @@ execute_command_to_ui_file (struct ui_file *file, const char *p, int from_tty)\n   }\n }\n \n-/* Run execute_command for P and FROM_TTY.  Capture its output into the\n-   returned string, do not display it to the screen.  BATCH_FLAG will be\n-   temporarily set to true.  */\n+/* See gdbcmd.h.  */\n \n std::string\n execute_command_to_string (const char *p, int from_tty,"
    }
  ]
}