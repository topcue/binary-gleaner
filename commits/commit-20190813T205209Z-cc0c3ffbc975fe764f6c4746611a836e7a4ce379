{
  "sha": "cc0c3ffbc975fe764f6c4746611a836e7a4ce379",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2MwYzNmZmJjOTc1ZmU3NjRmNmM0NzQ2NjExYTgzNmU3YTRjZTM3OQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-05T18:34:31Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-13T20:52:09Z"
    },
    "message": "Two simplifications in tui-layout.c\n\nThis patch simplifies some code in tui-layout.c.\n\nIn show_layout, all the layout settings can be handled by a single\nswitch statement.  In show_source_disasm_command and\nshow_source_or_disasm_and_command, there is no need to check the\ncurrent layout, as the caller has already done so.\n\ngdb/ChangeLog\n2019-08-13  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.c (show_layout): Unify all layout cases into a\n\tsingle switch.\n\t(show_source_disasm_command, show_source_or_disasm_and_command):\n\tDon't check current layout.",
    "tree": {
      "sha": "77fdb3d0828b251896652ce65af73b997e12e0fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/77fdb3d0828b251896652ce65af73b997e12e0fb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc0c3ffbc975fe764f6c4746611a836e7a4ce379",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc0c3ffbc975fe764f6c4746611a836e7a4ce379",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc0c3ffbc975fe764f6c4746611a836e7a4ce379",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc0c3ffbc975fe764f6c4746611a836e7a4ce379/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f3ffe54e229482bdb0785ae2162f03d60870400",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f3ffe54e229482bdb0785ae2162f03d60870400",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f3ffe54e229482bdb0785ae2162f03d60870400"
    }
  ],
  "stats": {
    "total": 235,
    "additions": 116,
    "deletions": 119
  },
  "files": [
    {
      "sha": "ea3c0777c9970a2a798461ff0832c637abc64405",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc0c3ffbc975fe764f6c4746611a836e7a4ce379/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc0c3ffbc975fe764f6c4746611a836e7a4ce379/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cc0c3ffbc975fe764f6c4746611a836e7a4ce379",
      "patch": "@@ -1,3 +1,10 @@\n+2019-08-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.c (show_layout): Unify all layout cases into a\n+\tsingle switch.\n+\t(show_source_disasm_command, show_source_or_disasm_and_command):\n+\tDon't check current layout.\n+\n 2019-08-13  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.c (make_all_visible): Remove."
    },
    {
      "sha": "91db38404b30abdbf0190b8d884f62f9ea40b271",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 109,
      "deletions": 119,
      "changes": 228,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc0c3ffbc975fe764f6c4746611a836e7a4ce379/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc0c3ffbc975fe764f6c4746611a836e7a4ce379/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=cc0c3ffbc975fe764f6c4746611a836e7a4ce379",
      "patch": "@@ -83,33 +83,29 @@ show_layout (enum tui_layout_type layout)\n       /* First make the current layout be invisible.  */\n       tui_make_all_invisible ();\n       tui_locator_win_info_ptr ()->make_visible (false);\n-      if (layout == SRC_DATA_COMMAND \n-\t  || layout == DISASSEM_DATA_COMMAND)\n+      switch (layout)\n \t{\n+\tcase SRC_DATA_COMMAND:\n+\tcase DISASSEM_DATA_COMMAND:\n \t  show_data (layout);\n \t  tui_refresh_all ();\n-\t}\n-      else\n-\t{\n-\t  switch (layout)\n-\t    {\n-\t      /* Now show the new layout.  */\n-\t    case SRC_COMMAND:\n-\t      show_source_command ();\n-\t      tui_add_to_source_windows (TUI_SRC_WIN);\n-\t      break;\n-\t    case DISASSEM_COMMAND:\n-\t      show_disasm_command ();\n-\t      tui_add_to_source_windows (TUI_DISASM_WIN);\n-\t      break;\n-\t    case SRC_DISASSEM_COMMAND:\n-\t      show_source_disasm_command ();\n-\t      tui_add_to_source_windows (TUI_SRC_WIN);\n-\t      tui_add_to_source_windows (TUI_DISASM_WIN);\n-\t      break;\n-\t    default:\n-\t      break;\n-\t    }\n+\t  break;\n+\t  /* Now show the new layout.  */\n+\tcase SRC_COMMAND:\n+\t  show_source_command ();\n+\t  tui_add_to_source_windows (TUI_SRC_WIN);\n+\t  break;\n+\tcase DISASSEM_COMMAND:\n+\t  show_disasm_command ();\n+\t  tui_add_to_source_windows (TUI_DISASM_WIN);\n+\t  break;\n+\tcase SRC_DISASSEM_COMMAND:\n+\t  show_source_disasm_command ();\n+\t  tui_add_to_source_windows (TUI_SRC_WIN);\n+\t  tui_add_to_source_windows (TUI_DISASM_WIN);\n+\t  break;\n+\tdefault:\n+\t  break;\n \t}\n     }\n }\n@@ -500,59 +496,56 @@ show_disasm_command (void)\n static void\n show_source_disasm_command (void)\n {\n-  if (tui_current_layout () != SRC_DISASSEM_COMMAND)\n-    {\n-      int cmd_height, src_height, asm_height;\n+  int cmd_height, src_height, asm_height;\n \n-      if (TUI_CMD_WIN != NULL)\n-\tcmd_height = TUI_CMD_WIN->height;\n-      else\n-\tcmd_height = tui_term_height () / 3;\n+  if (TUI_CMD_WIN != NULL)\n+    cmd_height = TUI_CMD_WIN->height;\n+  else\n+    cmd_height = tui_term_height () / 3;\n \n-      src_height = (tui_term_height () - cmd_height) / 2;\n-      asm_height = tui_term_height () - (src_height + cmd_height);\n+  src_height = (tui_term_height () - cmd_height) / 2;\n+  asm_height = tui_term_height () - (src_height + cmd_height);\n \n-      if (TUI_SRC_WIN == NULL)\n-\ttui_win_list[SRC_WIN] = new tui_source_window ();\n-      TUI_SRC_WIN->reset (src_height,\n-\t\t\t  tui_term_width (),\n-\t\t\t  0,\n-\t\t\t  0);\n-      TUI_SRC_WIN->make_visible (true);\n-      TUI_SRC_WIN->m_has_locator = false;\n-\n-      struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-      gdb_assert (locator != nullptr);\n-\n-      tui_show_source_content (TUI_SRC_WIN);\n-      if (TUI_DISASM_WIN == NULL)\n-\ttui_win_list[DISASSEM_WIN] = new tui_disasm_window ();\n-      TUI_DISASM_WIN->reset (asm_height,\n-\t\t\t     tui_term_width (),\n-\t\t\t     0,\n-\t\t\t     src_height - 1);\n-      TUI_DISASM_WIN->make_visible (true);\n-      locator->reset (2 /* 1 */ ,\n+  if (TUI_SRC_WIN == NULL)\n+    tui_win_list[SRC_WIN] = new tui_source_window ();\n+  TUI_SRC_WIN->reset (src_height,\n \t\t      tui_term_width (),\n \t\t      0,\n-\t\t      (src_height + asm_height) - 1);\n-      TUI_SRC_WIN->m_has_locator = false;\n-      TUI_DISASM_WIN->m_has_locator = true;\n-      locator->make_visible (true);\n-      tui_show_locator_content ();\n-      tui_show_source_content (TUI_DISASM_WIN);\n-\n-      if (TUI_CMD_WIN == NULL)\n-\ttui_win_list[CMD_WIN] = new tui_cmd_window ();\n-      TUI_CMD_WIN->reset (cmd_height,\n-\t\t\t  tui_term_width (),\n-\t\t\t  0,\n-\t\t\t  tui_term_height () - cmd_height);\n-      /* FIXME tui_cmd_window won't recreate the handle on\n-\t make_visible, so we need this instead.  */\n-      tui_make_window (TUI_CMD_WIN, DONT_BOX_WINDOW);\n-      current_layout = SRC_DISASSEM_COMMAND;\n-    }\n+\t\t      0);\n+  TUI_SRC_WIN->make_visible (true);\n+  TUI_SRC_WIN->m_has_locator = false;\n+\n+  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n+  gdb_assert (locator != nullptr);\n+\n+  tui_show_source_content (TUI_SRC_WIN);\n+  if (TUI_DISASM_WIN == NULL)\n+    tui_win_list[DISASSEM_WIN] = new tui_disasm_window ();\n+  TUI_DISASM_WIN->reset (asm_height,\n+\t\t\t tui_term_width (),\n+\t\t\t 0,\n+\t\t\t src_height - 1);\n+  TUI_DISASM_WIN->make_visible (true);\n+  locator->reset (2 /* 1 */ ,\n+\t\t  tui_term_width (),\n+\t\t  0,\n+\t\t  (src_height + asm_height) - 1);\n+  TUI_SRC_WIN->m_has_locator = false;\n+  TUI_DISASM_WIN->m_has_locator = true;\n+  locator->make_visible (true);\n+  tui_show_locator_content ();\n+  tui_show_source_content (TUI_DISASM_WIN);\n+\n+  if (TUI_CMD_WIN == NULL)\n+    tui_win_list[CMD_WIN] = new tui_cmd_window ();\n+  TUI_CMD_WIN->reset (cmd_height,\n+\t\t      tui_term_width (),\n+\t\t      0,\n+\t\t      tui_term_height () - cmd_height);\n+  /* FIXME tui_cmd_window won't recreate the handle on\n+     make_visible, so we need this instead.  */\n+  tui_make_window (TUI_CMD_WIN, DONT_BOX_WINDOW);\n+  current_layout = SRC_DISASSEM_COMMAND;\n }\n \n \n@@ -630,57 +623,54 @@ tui_gen_win_info::reset (int height_, int width_,\n static void\n show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n {\n-  if (tui_current_layout () != layout_type)\n+  struct tui_source_window_base *win_info;\n+  int src_height, cmd_height;\n+  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n+  gdb_assert (locator != nullptr);\n+\n+  if (TUI_CMD_WIN != NULL)\n+    cmd_height = TUI_CMD_WIN->height;\n+  else\n+    cmd_height = tui_term_height () / 3;\n+  src_height = tui_term_height () - cmd_height;\n+\n+  if (layout_type == SRC_COMMAND)\n     {\n-      struct tui_source_window_base *win_info;\n-      int src_height, cmd_height;\n-      struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-      gdb_assert (locator != nullptr);\n+      if (tui_win_list[SRC_WIN] == nullptr)\n+\ttui_win_list[SRC_WIN] = new tui_source_window ();\n+      win_info = TUI_SRC_WIN;\n+    }\n+  else\n+    {\n+      if (tui_win_list[DISASSEM_WIN] == nullptr)\n+\ttui_win_list[DISASSEM_WIN] = new tui_disasm_window ();\n+      win_info = TUI_DISASM_WIN;\n+    }\n \n-      if (TUI_CMD_WIN != NULL)\n-\tcmd_height = TUI_CMD_WIN->height;\n-      else\n-\tcmd_height = tui_term_height () / 3;\n-      src_height = tui_term_height () - cmd_height;\n+  locator->reset (2 /* 1 */ ,\n+\t\t  tui_term_width (),\n+\t\t  0,\n+\t\t  src_height - 1);\n+  win_info->reset (src_height - 1,\n+\t\t   tui_term_width (),\n+\t\t   0,\n+\t\t   0);\n+  win_info->make_visible (true);\n \n-      if (layout_type == SRC_COMMAND)\n-\t{\n-\t  if (tui_win_list[SRC_WIN] == nullptr)\n-\t    tui_win_list[SRC_WIN] = new tui_source_window ();\n-\t  win_info = TUI_SRC_WIN;\n-\t}\n-      else\n-\t{\n-\t  if (tui_win_list[DISASSEM_WIN] == nullptr)\n-\t    tui_win_list[DISASSEM_WIN] = new tui_disasm_window ();\n-\t  win_info = TUI_DISASM_WIN;\n-\t}\n \n-      locator->reset (2 /* 1 */ ,\n+  win_info->m_has_locator = true;\n+  locator->make_visible (true);\n+  tui_show_locator_content ();\n+  tui_show_source_content (win_info);\n+\n+  if (TUI_CMD_WIN == NULL)\n+    tui_win_list[CMD_WIN] = new tui_cmd_window ();\n+  TUI_CMD_WIN->reset (cmd_height,\n \t\t      tui_term_width (),\n \t\t      0,\n-\t\t      src_height - 1);\n-      win_info->reset (src_height - 1,\n-\t\t       tui_term_width (),\n-\t\t       0,\n-\t\t       0);\n-      win_info->make_visible (true);\n-\n-\n-      win_info->m_has_locator = true;\n-      locator->make_visible (true);\n-      tui_show_locator_content ();\n-      tui_show_source_content (win_info);\n-\n-      if (TUI_CMD_WIN == NULL)\n-\ttui_win_list[CMD_WIN] = new tui_cmd_window ();\n-      TUI_CMD_WIN->reset (cmd_height,\n-\t\t\t  tui_term_width (),\n-\t\t\t  0,\n-\t\t\t  src_height);\n-      /* FIXME tui_cmd_window won't recreate the handle on\n-\t make_visible, so we need this instead.  */\n-      tui_make_window (TUI_CMD_WIN, DONT_BOX_WINDOW);\n-      current_layout = layout_type;\n-    }\n+\t\t      src_height);\n+  /* FIXME tui_cmd_window won't recreate the handle on\n+     make_visible, so we need this instead.  */\n+  tui_make_window (TUI_CMD_WIN, DONT_BOX_WINDOW);\n+  current_layout = layout_type;\n }"
    }
  ]
}