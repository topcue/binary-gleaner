{
  "sha": "2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmZiZTdhZDA1OWQ5ZWMyYThhMzc4YTVjMmI5NzNhMTE4ODY3NzQyMg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-12-19T22:31:50Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:43Z"
    },
    "message": "gdb/frv: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/frv-tdep.c (frv_dummy_id): Delete.\n\t(frv_unwind_pc): Delete.\n\t(frv_unwind_sp): Delete.\n\t(frv_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "a06f896bfe4f9bbb487ea535aa80dbddaf71120a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a06f896bfe4f9bbb487ea535aa80dbddaf71120a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2fbe7ad059d9ec2a8a378a5c2b973a1188677422/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 8,
    "deletions": 27
  },
  "files": [
    {
      "sha": "cb8f6749c827a296e75e16164d75340308c16746",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2fbe7ad059d9ec2a8a378a5c2b973a1188677422/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2fbe7ad059d9ec2a8a378a5c2b973a1188677422/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/frv-tdep.c (frv_dummy_id): Delete.\n+\t(frv_unwind_pc): Delete.\n+\t(frv_unwind_sp): Delete.\n+\t(frv_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb/riscv-tdep.c (riscv_dummy_id): Delete."
    },
    {
      "sha": "804206bcb37a4c1ba12c3bdb8642844ae17c8596",
      "filename": "gdb/frv-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2fbe7ad059d9ec2a8a378a5c2b973a1188677422/gdb/frv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2fbe7ad059d9ec2a8a378a5c2b973a1188677422/gdb/frv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frv-tdep.c?ref=2fbe7ad059d9ec2a8a378a5c2b973a1188677422",
      "patch": "@@ -1367,12 +1367,6 @@ frv_return_value (struct gdbarch *gdbarch, struct value *function,\n     return RETURN_VALUE_REGISTER_CONVENTION;\n }\n \n-static CORE_ADDR\n-frv_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, pc_regnum);\n-}\n-\n /* Given a GDB frame, determine the address of the calling function's\n    frame.  This will be used to create a new GDB frame struct.  */\n \n@@ -1439,24 +1433,6 @@ static const struct frame_base frv_frame_base = {\n   frv_frame_base_address\n };\n \n-static CORE_ADDR\n-frv_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, sp_regnum);\n-}\n-\n-\n-/* Assuming THIS_FRAME is a dummy, return the frame ID of that dummy\n-   frame.  The frame ID's base needs to match the TOS value saved by\n-   save_dummy_frame_tos(), and the PC match the dummy frame's breakpoint.  */\n-\n-static struct frame_id\n-frv_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp = get_frame_register_unsigned (this_frame, sp_regnum);\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n static struct gdbarch *\n frv_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n {\n@@ -1540,16 +1516,13 @@ frv_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_return_value (gdbarch, frv_return_value);\n \n   /* Frame stuff.  */\n-  set_gdbarch_unwind_pc (gdbarch, frv_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, frv_unwind_sp);\n   set_gdbarch_frame_align (gdbarch, frv_frame_align);\n   frame_base_set_default (gdbarch, &frv_frame_base);\n   /* We set the sniffer lower down after the OSABI hooks have been\n      established.  */\n \n   /* Settings for calling functions in the inferior.  */\n   set_gdbarch_push_dummy_call (gdbarch, frv_push_dummy_call);\n-  set_gdbarch_dummy_id (gdbarch, frv_dummy_id);\n \n   /* Settings that should be unnecessary.  */\n   set_gdbarch_inner_than (gdbarch, core_addr_lessthan);"
    }
  ]
}