{
  "sha": "09252140293763eaa230314dee27f605a37154d4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDkyNTIxNDAyOTM3NjNlYWEyMzAzMTRkZWUyN2Y2MDVhMzcxNTRkNA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-12T13:58:57Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-12T13:58:57Z"
    },
    "message": "[gdb/testsuite] Fix internal buffer full error in gdb.base/info-types.exp\n\nWith test-case gdb.base/info-types.exp, I run into:\n...\nERROR: internal buffer is full.\nUNRESOLVED: gdb.base/info-types.exp: l=c: info types\nERROR: internal buffer is full.\nUNRESOLVED: gdb.base/info-types.exp: l=c++: info types\n...\n\nFix this by using exp_continue while matching the output of \"info types\".\n\nTested on x86_64-linux, using make targets check and check-read1.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-12  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/info-types.exp: Use exp_continue during matching of output\n\tof \"info types\".",
    "tree": {
      "sha": "09f202bfbfb806be95a590d06b6aba5facdb66ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/09f202bfbfb806be95a590d06b6aba5facdb66ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/09252140293763eaa230314dee27f605a37154d4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09252140293763eaa230314dee27f605a37154d4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/09252140293763eaa230314dee27f605a37154d4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09252140293763eaa230314dee27f605a37154d4/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "14e9c72c334205c0171d62e716c1fb65472a0eab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14e9c72c334205c0171d62e716c1fb65472a0eab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/14e9c72c334205c0171d62e716c1fb65472a0eab"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 32,
    "deletions": 13
  },
  "files": [
    {
      "sha": "5c5576ed1e9b10113fda75e95f0df3feeb8509df",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09252140293763eaa230314dee27f605a37154d4/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09252140293763eaa230314dee27f605a37154d4/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=09252140293763eaa230314dee27f605a37154d4",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-12  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/info-types.exp: Use exp_continue during matching of output\n+\tof \"info types\".\n+\n 2020-03-12  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.threads/execl.exp: Delete breakpoint after hitting it."
    },
    {
      "sha": "7cce756e92d033a3d605c10490cec18c18813d72",
      "filename": "gdb/testsuite/gdb.base/info-types.exp",
      "status": "modified",
      "additions": 27,
      "deletions": 13,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09252140293763eaa230314dee27f605a37154d4/gdb/testsuite/gdb.base/info-types.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09252140293763eaa230314dee27f605a37154d4/gdb/testsuite/gdb.base/info-types.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-types.exp?ref=09252140293763eaa230314dee27f605a37154d4",
      "patch": "@@ -54,9 +54,6 @@ proc run_test { lang } {\n     if { $lang == \"c++\" } {\n \tset output_re \\\n \t    [multi_line \\\n-\t\t \"All defined types:\" \\\n-\t\t \"\" \\\n-\t\t \"File .*:\" \\\n \t\t \"98:\\[\\t \\]+CL;\" \\\n \t\t \"42:\\[\\t \\]+anon_struct_t;\" \\\n \t\t \"65:\\[\\t \\]+anon_union_t;\" \\\n@@ -86,15 +83,10 @@ proc run_test { lang } {\n \t\t \"19:\\[\\t \\]+typedef float nested_float_t;\" \\\n \t\t \"18:\\[\\t \\]+typedef int nested_int_t;\" \\\n \t\t \"62:\\[\\t \\]+typedef union_t nested_union_t;(\" \\\n-\t\t \"\\[\\t \\]+unsigned int)?(\" \\\n-\t\t \"\" \\\n-\t\t \"File .*:.*)?\" ]\n+\t\t \"\\[\\t \\]+unsigned int)?\"]\n     } else {\n \tset output_re \\\n \t    [multi_line \\\n-\t\t \"All defined types:\" \\\n-\t\t \"\" \\\n-\t\t \"File .*:\" \\\n \t\t \"52:\\[\\t \\]+typedef enum {\\\\.\\\\.\\\\.} anon_enum_t;\" \\\n \t\t \"45:\\[\\t \\]+typedef struct {\\\\.\\\\.\\\\.} anon_struct_t;\" \\\n \t\t \"68:\\[\\t \\]+typedef union {\\\\.\\\\.\\\\.} anon_union_t;\" \\\n@@ -118,12 +110,34 @@ proc run_test { lang } {\n \t\t \"18:\\[\\t \\]+typedef int nested_int_t;\" \\\n \t\t \"62:\\[\\t \\]+typedef union union_t nested_union_t;\" \\\n \t\t \"56:\\[\\t \\]+union union_t;(\" \\\n-\t\t \"\\[\\t \\]+unsigned int)?(\" \\\n-\t\t \"\" \\\n-\t\t \"File .*:.*)?\" ]\n+\t\t \"\\[\\t \\]+unsigned int)?\"]\n     }\n \n-    gdb_test \"info types\" $output_re\n+    set state 0\n+    gdb_test_multiple \"info types\" \"\" {\n+\t-re \"\\r\\nAll defined types:\" {\n+\t    if { $state == 0 } { set state 1 }\n+\t    exp_continue\n+\t}\n+\t-re \"\\r\\n\\r\\nFile .*[string_to_regexp $srcfile]:\" {\n+\t    if { $state == 1 } { set state 2 }\n+\t    exp_continue\n+\t}\n+\t-re $output_re {\n+\t    if { $state == 2 } { set state 3 }\n+\t    exp_continue\n+\t}\n+\t-re \"\\r\\n\\r\\nFile \\[^\\r\\n\\]*:\" {\n+\t    exp_continue\n+\t}\n+\t-re -wrap \"\" {\n+\t    if { $state == 3} {\n+\t\tpass $gdb_test_name\n+\t    } else {\n+\t\tfail $gdb_test_name\n+\t    }\n+\t}\n+    }\n }\n \n foreach_with_prefix l $lang {"
    }
  ]
}