{
  "sha": "d9acf70759a258bf674cef91ae9289e9c7ce2428",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDlhY2Y3MDc1OWEyNThiZjY3NGNlZjkxYWU5Mjg5ZTljN2NlMjQyOA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-29T14:50:46Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-28T00:03:02Z"
    },
    "message": "binutils: Be more forgiving of targets with large numbers of registers\n\nCurrently if a target has a large ( > 1024 ) number of registers then\nwe get a warning when dumping the DWARF whenever a register over the\n1024 limit is referenced, this occurs in dwarf.c:frame_need_space.\n\nThis check was initially introduced to guard against corrupted DWARF\nreferencing stupidly large numbers of registers.\n\nThe frame_need_space function already has a check in place so that, if\na target specifies a set of known DWARF register names then we must\nonly reference a register within this set, it is only after this check\nthat we check for the 1024 limit.\n\nWhat this means is that if a target DOES NOT define a set of known\nregister names and if we reference more than 1024 registers\nframe_need_space will give a warning.\n\nIf a target DOES define a set of known registers and there are more\nthan 1024 defined registers, and we try to reference a register beyond\n1024 we will again get an error.\n\nThis second case feels wrong to me.  My thinking is that if a target\ndefines a set of registers then it is not unreasonable to assume the\ntools can cope with that number of registers.  And so, if the target\ndefines 2000 named DWARF registers, frame_need_space should allow\naccess to all of these registers.\n\nIf a target does not define a set of named registers then the 1024\nlimit should remain.  This is pretty arbitrary, but we do need to have\nsome limit in place I think, so for now that seems as good as any.\n\nThis is an entirely theoretical fix - there are no targets that define\nsuch large numbers of registers, but while experimenting with adding\nsupport for RISC-V CSRs I ran into this issue and felt like it was a\ngood improvement.\n\nbinutils/ChangeLog:\n\n\t* dwarf.c (frame_need_space): Compare dwarf_regnames_count against\n\t0, and only warn about large numbers of registers if the number is\n\tmore than the dwarf_regnames_count.\n\nChange-Id: Ifac1a999ff0677676e81ee373c4c044b6a700827",
    "tree": {
      "sha": "e88786f9633a95319a273f835da062dd76bfed12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e88786f9633a95319a273f835da062dd76bfed12"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d9acf70759a258bf674cef91ae9289e9c7ce2428",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9acf70759a258bf674cef91ae9289e9c7ce2428",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d9acf70759a258bf674cef91ae9289e9c7ce2428",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9acf70759a258bf674cef91ae9289e9c7ce2428/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b7379eaddab00dc4ba9c9b98d8f603b9560366a1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b7379eaddab00dc4ba9c9b98d8f603b9560366a1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b7379eaddab00dc4ba9c9b98d8f603b9560366a1"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 8,
    "deletions": 2
  },
  "files": [
    {
      "sha": "f833c14c125a61a29ed93a3c997a8611169b9d13",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9acf70759a258bf674cef91ae9289e9c7ce2428/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9acf70759a258bf674cef91ae9289e9c7ce2428/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=d9acf70759a258bf674cef91ae9289e9c7ce2428",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (frame_need_space): Compare dwarf_regnames_count against\n+\t0, and only warn about large numbers of registers if the number is\n+\tmore than the dwarf_regnames_count.\n+\n 2019-11-25  Christian Eggers  <ceggers@gmx.de>\n \n \t* objdump.c (disassemble_data): Provide section parameter to"
    },
    {
      "sha": "62f2817d18362d59512859f8996fbf1aeae85a6f",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d9acf70759a258bf674cef91ae9289e9c7ce2428/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d9acf70759a258bf674cef91ae9289e9c7ce2428/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=d9acf70759a258bf674cef91ae9289e9c7ce2428",
      "patch": "@@ -7378,7 +7378,7 @@ frame_need_space (Frame_Chunk *fc, unsigned int reg)\n   if (reg < (unsigned int) fc->ncols)\n     return 0;\n \n-  if (dwarf_regnames_count\n+  if (dwarf_regnames_count > 0\n       && reg > dwarf_regnames_count)\n     return -1;\n \n@@ -7389,7 +7389,7 @@ frame_need_space (Frame_Chunk *fc, unsigned int reg)\n     return -1;\n \n   /* PR 17512: file: 2844a11d.  */\n-  if (fc->ncols > 1024)\n+  if (fc->ncols > 1024 && dwarf_regnames_count == 0)\n     {\n       error (_(\"Unfeasibly large register number: %u\\n\"), reg);\n       fc->ncols = 0;"
    }
  ]
}