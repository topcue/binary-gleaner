{
  "sha": "eb5bbc482128b08d2ee8a2470951a74d8351146f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWI1YmJjNDgyMTI4YjA4ZDJlZThhMjQ3MDk1MWE3NGQ4MzUxMTQ2Zg==",
  "commit": {
    "author": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-11-07T17:07:32Z"
    },
    "committer": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-11-07T17:07:32Z"
    },
    "message": "[Patch][binutils][aarch64] .bfloat16 directive for AArch64 [7/10]\n\nHi,\n\nThis patch is part of a series that adds support for Armv8.6-A\n(Matrix Multiply and BFloat16 extensions) to binutils.\n\nThis patch implements the '.bfloat' directive for the AArch64 backend.\n\nThe syntax for the directive is:\n  .bfloat16 <0-n numbers>\ne.g.\n  .bfloat16 12.0\n  .bfloat16 0.123, 1.0, NaN, 5\n\nThis is implemented by utilizing the ieee_atof_detail function in order\nto encode the slightly\ndifferent bfloat16 format.\n\nAdded testcases to verify the correct encoding for various bfloat16\nvalues (NaN, Infinity (+ & -), normals, subnormals etc...).\n\nCross compiled and tested on aarch64-none-elf and aarch64-none-linux-gnu\nwith no issues.\n\nCommitted on behalf of Mihail Ionescu.\n\ngas/ChangeLog:\n\n2019-10-29  Mihail Ionescu  <mihail.ionescu@arm.com>\n2019-10-29  Barnaby Wilks  <barnaby.wilks@arm.com>\n\n\t* config/tc-aarch64.c (md_atof): Add encoding for the bfloat16 format.\n\t* testsuite/gas/aarch64/bfloat16-directive-le.d: New test.\n\t* testsuite/gas/aarch64/bfloat16-directive-be.d: New test.\n\t* testsuite/gas/aarch64/bfloat16-directive.s: New test.\n\nIs it ok for trunk?\n\nRegards,\nMihail",
    "tree": {
      "sha": "b528a83fba70f26f1c1669cbb3c6a1a107006622",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b528a83fba70f26f1c1669cbb3c6a1a107006622"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eb5bbc482128b08d2ee8a2470951a74d8351146f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb5bbc482128b08d2ee8a2470951a74d8351146f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eb5bbc482128b08d2ee8a2470951a74d8351146f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb5bbc482128b08d2ee8a2470951a74d8351146f/comments",
  "author": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "27cce8667f5c897751bb10d7c859b02b0bb26291",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27cce8667f5c897751bb10d7c859b02b0bb26291",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/27cce8667f5c897751bb10d7c859b02b0bb26291"
    }
  ],
  "stats": {
    "total": 98,
    "additions": 98,
    "deletions": 0
  },
  "files": [
    {
      "sha": "97054cc3f4244b91e12a99c894b23972826bf137",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=eb5bbc482128b08d2ee8a2470951a74d8351146f",
      "patch": "@@ -1,3 +1,11 @@\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+2019-11-07  Barnaby Wilks  <barnaby.wilks@arm.com>\n+\n+\t* config/tc-aarch64.c (md_atof): Add encoding for the bfloat16 format.\n+\t* testsuite/gas/aarch64/bfloat16-directive-le.d: New test.\n+\t* testsuite/gas/aarch64/bfloat16-directive-be.d: New test.\n+\t* testsuite/gas/aarch64/bfloat16-directive.s: New test.\n+\n 2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n 2019-11-07  Barnaby Wilks  <barnaby.wilks@arm.com>\n "
    },
    {
      "sha": "eea863b9a43f7b7036e40ae107d57a65bb10896a",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=eb5bbc482128b08d2ee8a2470951a74d8351146f",
      "patch": "@@ -635,6 +635,54 @@ my_get_expression (expressionS * ep, char **str, int prefix_mode,\n const char *\n md_atof (int type, char *litP, int *sizeP)\n {\n+  /* If this is a bfloat16 type, then parse it slightly differently -\n+     as it does not follow the IEEE standard exactly.  */\n+  if (type == 'b')\n+    {\n+      char * t;\n+      LITTLENUM_TYPE words[MAX_LITTLENUMS];\n+      FLONUM_TYPE generic_float;\n+\n+      t = atof_ieee_detail (input_line_pointer, 1, 8, words, &generic_float);\n+\n+      if (t)\n+\tinput_line_pointer = t;\n+      else\n+\treturn _(\"invalid floating point number\");\n+\n+      switch (generic_float.sign)\n+\t{\n+\t/* Is +Inf.  */\n+\tcase 'P':\n+\t  words[0] = 0x7f80;\n+\t  break;\n+\n+\t/* Is -Inf.  */\n+\tcase 'N':\n+\t  words[0] = 0xff80;\n+\t  break;\n+\n+\t/* Is NaN.  */\n+\t/* bfloat16 has two types of NaN - quiet and signalling.\n+\t   Quiet NaN has bit[6] == 1 && faction != 0, whereas\n+\t   signalling Nan's have bit[0] == 0 && fraction != 0.\n+\t   Chose this specific encoding as it is the same form\n+\t   as used by other IEEE 754 encodings in GAS.  */\n+\tcase 0:\n+\t  words[0] = 0x7fff;\n+\t  break;\n+\n+\tdefault:\n+\t  break;\n+\t}\n+\n+      *sizeP = 2;\n+\n+      md_number_to_chars (litP, (valueT) words[0], sizeof (LITTLENUM_TYPE));\n+\n+      return NULL;\n+    }\n+\n   return ieee_md_atof (type, litP, sizeP, target_big_endian);\n }\n \n@@ -2107,6 +2155,7 @@ const pseudo_typeS md_pseudo_table[] = {\n   {\"variant_pcs\", s_variant_pcs, 0},\n #endif\n   {\"float16\", float_cons, 'h'},\n+  {\"bfloat16\", float_cons, 'b'},\n   {0, 0, 0}\n };\n \f"
    },
    {
      "sha": "132d04e44fad44b1b040c82df70e42ce11e6b483",
      "filename": "gas/testsuite/gas/aarch64/bfloat16-directive-be.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/testsuite/gas/aarch64/bfloat16-directive-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/testsuite/gas/aarch64/bfloat16-directive-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/bfloat16-directive-be.d?ref=eb5bbc482128b08d2ee8a2470951a74d8351146f",
      "patch": "@@ -0,0 +1,11 @@\n+# name: Big endian bfloat16 literal directives\n+# source: bfloat16-directive.s\n+# as: -mbig-endian\n+# objdump: -s --section=.data\n+\n+.*: +file format .*\n+\n+Contents of section \\.data:\n+ 0000 41403dfc 000042f7 8000c2f7 7fff7f80  .*\n+ 0010 ff807f7f ff7f0080 80800001 8001007f  .*\n+ 0020 807f3f80 bf804000 c000               .*"
    },
    {
      "sha": "f22d610d84bfd1961affdbdedbb9be7679844b9f",
      "filename": "gas/testsuite/gas/aarch64/bfloat16-directive-le.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/testsuite/gas/aarch64/bfloat16-directive-le.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/testsuite/gas/aarch64/bfloat16-directive-le.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/bfloat16-directive-le.d?ref=eb5bbc482128b08d2ee8a2470951a74d8351146f",
      "patch": "@@ -0,0 +1,11 @@\n+# name: Little endian bfloat16 literal directives\n+# source: bfloat16-directive.s\n+# as: -mlittle-endian\n+# objdump: -s --section=.data\n+\n+.*: +file format .*\n+\n+Contents of section \\.data:\n+ 0000 4041fc3d 0000f742 0080f7c2 ff7f807f  .*\n+ 0010 80ff7f7f 7fff8000 80800100 01807f00  .*\n+ 0020 7f80803f 80bf0040 00c0               .*"
    },
    {
      "sha": "66e17e4fc7da9b08098a0ca03660df2b5ab4f021",
      "filename": "gas/testsuite/gas/aarch64/bfloat16-directive.s",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/testsuite/gas/aarch64/bfloat16-directive.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb5bbc482128b08d2ee8a2470951a74d8351146f/gas/testsuite/gas/aarch64/bfloat16-directive.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/bfloat16-directive.s?ref=eb5bbc482128b08d2ee8a2470951a74d8351146f",
      "patch": "@@ -0,0 +1,19 @@\n+.data\n+\t.bfloat16 12.0\n+\t.bfloat16 0.123\n+\t.bfloat16 +0.0\n+\t.bfloat16 123.4\n+\t.bfloat16 -0.0\n+\t.bfloat16 -123.4\n+\t.bfloat16 NaN\n+\t.bfloat16 Inf\n+\t.bfloat16 -Inf\n+\t.bfloat16 3.390e+38\n+\t.bfloat16 -3.390e+38\n+\t.bfloat16 1.175e-38\n+\t.bfloat16 -1.175e-38\n+\t.bfloat16 9.194e-41\n+\t.bfloat16 -9.194e-41\n+\t.bfloat16 1.167e-38\n+\t.bfloat16 -1.167e-38\n+\t.bfloat16 1.0, -1, 2.0, -2"
    }
  ]
}