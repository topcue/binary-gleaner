{
  "sha": "1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWY3N2IwMTJlNjFlYzExYzkyYTM1MjIzZmRmZWQ1OThjNmQyZjRlOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-01T18:14:48Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-15T15:31:18Z"
    },
    "message": "Introduce field_unsigned\n\nThis adds field_unsigned and changes various places using field_fmt\nwith \"%u\" to use this instead.  This also replaces an existing\nequivalent helper function in record-btrace.c.\n\n2019-07-15  Tom Tromey  <tromey@adacore.com>\n\n\t* mi/mi-out.h (class mi_ui_out) <do_field_unsigned>: Declare.\n\t* mi/mi-out.c (mi_ui_out::do_field_unsigned): New method.\n\t* cli-out.h (class cli_ui_out) <do_field_unsigned>: Declare.\n\t* cli-out.c (cli_ui_out::do_field_int): New method.\n\t* ui-out.c (ui_out::field_unsigned): New method.\n\t* symfile.c (generic_load): Use field_unsigned.\n\t(print_transfer_performance): Likewise.\n\t* record-btrace.c (ui_out_field_uint): Remove.\n\t(btrace_call_history_insn_range, btrace_call_history): Use\n\tfield_unsigned.\n\t* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn): Use\n\tfield_unsigned.\n\t* ui-out.h (class ui_out) <field_unsigned>: New method.\n\t<do_field_unsigned>: Likewise.",
    "tree": {
      "sha": "46a7d4bb2e7366a33728a40cfde72f0dfaf5c4fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/46a7d4bb2e7366a33728a40cfde72f0dfaf5c4fb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "33eca68072e73d984fc139dde45b8140b94757cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/33eca68072e73d984fc139dde45b8140b94757cb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/33eca68072e73d984fc139dde45b8140b94757cb"
    }
  ],
  "stats": {
    "total": 92,
    "additions": 74,
    "deletions": 18
  },
  "files": [
    {
      "sha": "1b085957682ef31a296c9801af6a1eb0dcd8c1f4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -1,3 +1,20 @@\n+2019-07-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* mi/mi-out.h (class mi_ui_out) <do_field_unsigned>: Declare.\n+\t* mi/mi-out.c (mi_ui_out::do_field_unsigned): New method.\n+\t* cli-out.h (class cli_ui_out) <do_field_unsigned>: Declare.\n+\t* cli-out.c (cli_ui_out::do_field_int): New method.\n+\t* ui-out.c (ui_out::field_unsigned): New method.\n+\t* symfile.c (generic_load): Use field_unsigned.\n+\t(print_transfer_performance): Likewise.\n+\t* record-btrace.c (ui_out_field_uint): Remove.\n+\t(btrace_call_history_insn_range, btrace_call_history): Use\n+\tfield_unsigned.\n+\t* disasm.c (gdb_pretty_print_disassembler::pretty_print_insn): Use\n+\tfield_unsigned.\n+\t* ui-out.h (class ui_out) <field_unsigned>: New method.\n+\t<do_field_unsigned>: Likewise.\n+\n 2019-07-15  Tom Tromey  <tromey@adacore.com>\n \n \t* mi/mi-main.c (list_available_thread_groups): Use field_string."
    },
    {
      "sha": "8d6b426203fe33d43658698c8cf8d917a69ba8cf",
      "filename": "gdb/cli-out.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/cli-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/cli-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli-out.c?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -105,6 +105,19 @@ cli_ui_out::do_field_int (int fldno, int width, ui_align alignment,\n \t\t   ui_out_style_kind::DEFAULT);\n }\n \n+/* output an unsigned field */\n+\n+void\n+cli_ui_out::do_field_unsigned (int fldno, int width, ui_align alignment,\n+\t\t\t       const char *fldname, ULONGEST value)\n+{\n+  if (m_suppress_output)\n+    return;\n+\n+  do_field_string (fldno, width, alignment, fldname, pulongest (value),\n+\t\t   ui_out_style_kind::DEFAULT);\n+}\n+\n /* used to omit a field */\n \n void"
    },
    {
      "sha": "fd1d6274a9f719c277bda11ab10f37b5559d76c8",
      "filename": "gdb/cli-out.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/cli-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/cli-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli-out.h?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -47,6 +47,9 @@ class cli_ui_out : public ui_out\n   virtual void do_end (ui_out_type type) override;\n   virtual void do_field_int (int fldno, int width, ui_align align,\n \t\t\t     const char *fldname, int value) override;\n+  virtual void do_field_unsigned (int fldno, int width, ui_align align,\n+\t\t\t\t  const char *fldname, ULONGEST value)\n+    override;\n   virtual void do_field_skip (int fldno, int width, ui_align align,\n \t\t\t      const char *fldname) override;\n   virtual void do_field_string (int fldno, int width, ui_align align,"
    },
    {
      "sha": "5e1dd6e3a3d25636591ec4c7bda36a5178602ea2",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -209,7 +209,7 @@ gdb_pretty_print_disassembler::pretty_print_insn (struct ui_out *uiout,\n \n     if (insn->number != 0)\n       {\n-\tuiout->field_fmt (\"insn-number\", \"%u\", insn->number);\n+\tuiout->field_unsigned (\"insn-number\", insn->number);\n \tuiout->text (\"\\t\");\n       }\n "
    },
    {
      "sha": "dd99a2b7fb1863bc8471780f0a6aa88fada30263",
      "filename": "gdb/mi/mi-out.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/mi/mi-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/mi/mi-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.c?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -105,6 +105,16 @@ mi_ui_out::do_field_int (int fldno, int width, ui_align alignment,\n \t\t   ui_out_style_kind::DEFAULT);\n }\n \n+/* Output an unsigned field.  */\n+\n+void\n+mi_ui_out::do_field_unsigned (int fldno, int width, ui_align alignment,\n+\t\t\t      const char *fldname, ULONGEST value)\n+{\n+  do_field_string (fldno, width, alignment, fldname, pulongest (value),\n+\t\t   ui_out_style_kind::DEFAULT);\n+}\n+\n /* Used to omit a field.  */\n \n void"
    },
    {
      "sha": "1328684ed2b1b08ddd24825d85d2ca40accd9d22",
      "filename": "gdb/mi/mi-out.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/mi/mi-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/mi/mi-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.h?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -54,6 +54,9 @@ class mi_ui_out : public ui_out\n   virtual void do_end (ui_out_type type) override;\n   virtual void do_field_int (int fldno, int width, ui_align align,\n \t\t\t  const char *fldname, int value) override;\n+  virtual void do_field_unsigned (int fldno, int width, ui_align align,\n+\t\t\t\t  const char *fldname, ULONGEST value)\n+    override;\n   virtual void do_field_skip (int fldno, int width, ui_align align,\n \t\t\t   const char *fldname) override;\n   virtual void do_field_string (int fldno, int width, ui_align align,"
    },
    {
      "sha": "77f2e7c27a953d70703289c74dbbe270e41b394c",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -624,14 +624,6 @@ btrace_ui_out_decode_error (struct ui_out *uiout, int errcode,\n   uiout->text (_(\"]\\n\"));\n }\n \n-/* Print an unsigned int.  */\n-\n-static void\n-ui_out_field_uint (struct ui_out *uiout, const char *fld, unsigned int val)\n-{\n-  uiout->field_fmt (fld, \"%u\", val);\n-}\n-\n /* A range of source lines.  */\n \n struct btrace_line_range\n@@ -1033,9 +1025,9 @@ btrace_call_history_insn_range (struct ui_out *uiout,\n   begin = bfun->insn_offset;\n   end = begin + size - 1;\n \n-  ui_out_field_uint (uiout, \"insn begin\", begin);\n+  uiout->field_unsigned (\"insn begin\", begin);\n   uiout->text (\",\");\n-  ui_out_field_uint (uiout, \"insn end\", end);\n+  uiout->field_unsigned (\"insn end\", end);\n }\n \n /* Compute the lowest and highest source line for the instructions in BFUN\n@@ -1156,7 +1148,7 @@ btrace_call_history (struct ui_out *uiout,\n       msym = bfun->msym;\n \n       /* Print the function index.  */\n-      ui_out_field_uint (uiout, \"index\", bfun->number);\n+      uiout->field_unsigned (\"index\", bfun->number);\n       uiout->text (\"\\t\");\n \n       /* Indicate gaps in the trace.  */"
    },
    {
      "sha": "d2b88fc9e40f9d39f7be3579dc121afb4c2cbbf7",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -2097,7 +2097,7 @@ generic_load (const char *args, int from_tty)\n   uiout->text (\"Start address \");\n   uiout->field_core_addr (\"address\", target_gdbarch (), entry);\n   uiout->text (\", load size \");\n-  uiout->field_fmt (\"load-size\", \"%lu\", total_progress.data_count);\n+  uiout->field_unsigned (\"load-size\", total_progress.data_count);\n   uiout->text (\"\\n\");\n   regcache_write_pc (get_current_regcache (), entry);\n \n@@ -2140,29 +2140,29 @@ print_transfer_performance (struct ui_file *stream,\n \n       if (uiout->is_mi_like_p ())\n \t{\n-\t  uiout->field_fmt (\"transfer-rate\", \"%lu\", rate * 8);\n+\t  uiout->field_unsigned (\"transfer-rate\", rate * 8);\n \t  uiout->text (\" bits/sec\");\n \t}\n       else if (rate < 1024)\n \t{\n-\t  uiout->field_fmt (\"transfer-rate\", \"%lu\", rate);\n+\t  uiout->field_unsigned (\"transfer-rate\", rate);\n \t  uiout->text (\" bytes/sec\");\n \t}\n       else\n \t{\n-\t  uiout->field_fmt (\"transfer-rate\", \"%lu\", rate / 1024);\n+\t  uiout->field_unsigned (\"transfer-rate\", rate / 1024);\n \t  uiout->text (\" KB/sec\");\n \t}\n     }\n   else\n     {\n-      uiout->field_fmt (\"transferred-bits\", \"%lu\", (data_count * 8));\n+      uiout->field_unsigned (\"transferred-bits\", (data_count * 8));\n       uiout->text (\" bits in <1 sec\");\n     }\n   if (write_count > 0)\n     {\n       uiout->text (\", \");\n-      uiout->field_fmt (\"write-rate\", \"%lu\", data_count / write_count);\n+      uiout->field_unsigned (\"write-rate\", data_count / write_count);\n       uiout->text (\" bytes/write\");\n     }\n   uiout->text (\".\\n\");"
    },
    {
      "sha": "65312aa4323c21a34f8a35a5b616c9aae1ab0b68",
      "filename": "gdb/ui-out.c",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/ui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/ui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.c?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -462,6 +462,20 @@ ui_out::field_fmt_int (int input_width, ui_align input_align,\n   do_field_int (fldno, input_width, input_align, fldname, value);\n }\n \n+/* See ui-out.h.  */\n+\n+void\n+ui_out::field_unsigned (const char *fldname, ULONGEST value)\n+{\n+  int fldno;\n+  int width;\n+  ui_align align;\n+\n+  verify_field (&fldno, &width, &align);\n+\n+  do_field_unsigned (fldno, width, align, fldname, value);\n+}\n+\n /* Documented in ui-out.h.  */\n \n void"
    },
    {
      "sha": "afc1c41651d557c59f2b37637d96f3ea7cb6bb32",
      "filename": "gdb/ui-out.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/ui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f77b012e61ec11c92a35223fdfed598c6d2f4e9/gdb/ui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.h?ref=1f77b012e61ec11c92a35223fdfed598c6d2f4e9",
      "patch": "@@ -110,6 +110,8 @@ class ui_out\n   void field_int (const char *fldname, int value);\n   void field_fmt_int (int width, ui_align align, const char *fldname,\n \t\t      int value);\n+  /* Like field_int, but print an unsigned value.  */\n+  void field_unsigned (const char *fldname, ULONGEST value);\n   void field_core_addr (const char *fldname, struct gdbarch *gdbarch,\n \t\t\tCORE_ADDR address);\n   void field_string (const char *fldname, const char *string,\n@@ -157,6 +159,8 @@ class ui_out\n   virtual void do_end (ui_out_type type) = 0;\n   virtual void do_field_int (int fldno, int width, ui_align align,\n \t\t\t     const char *fldname, int value) = 0;\n+  virtual void do_field_unsigned (int fldno, int width, ui_align align,\n+\t\t\t\t  const char *fldname, ULONGEST value) = 0;\n   virtual void do_field_skip (int fldno, int width, ui_align align,\n \t\t\t      const char *fldname) = 0;\n   virtual void do_field_string (int fldno, int width, ui_align align,"
    }
  ]
}