{
  "sha": "b9a3f8429b012b753e30a4222bd8e4cbba019fad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjlhM2Y4NDI5YjAxMmI3NTNlMzBhNDIyMmJkOGU0Y2JiYTAxOWZhZA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:06:52Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-06-12T23:08:09Z"
    },
    "message": "Fix TID parser bug\n\nI noticed this inconsistency in the error messages below:\n\n (gdb) print --1\n Left operand of assignment is not an lvalue.\n\n (gdb) thread apply 1 print --1\n\n Thread 1 (Thread 0x7ffff7fb6740 (LWP 17805)):\n inverted range\n\nThe \"inverted range\" error happens because get_number_trailer returns\n0 to indicate error, but number_or_range_parser::get_number is not\nchecking for that.  I tried detected the error there, but that doesn't\nwork because number_of_range_parser is used in places that _do_ want\nto legitimately handle 0.  IMO we should fix get_number_trailer's\ninterface or use something else when we want to parse 0 too.\n\nI've decided to fix it in a different way, similarly to how\nnumber_or_range_parser::finished was changed in commit 529c08b25ec7\n(\"Add helper functions parse_flags and parse_flags_qcs\").\n\nSeems like a good change, even if we tweaked\nnumber_or_range_parser::get_number, as it simplifies\nthread_apply_command and makes them consistent with\nnumber_or_range_parser::finished().\n\nWe now get the same error message in both cases:\n\n (gdb) print --1\n Left operand of assignment is not an lvalue.\n\n (gdb) thread apply 1 print --1\n\n Thread 1 (Thread 0x7ffff7fb6740 (LWP 17805)):\n Left operand of assignment is not an lvalue.\n\ngdb/ChangeLog:\n2019-06-13  Pedro Alves  <palves@redhat.com>\n\n\t* thread.c (thread_apply_command): Adjust TID parsing.\n\t* tid-parse.c (tid_range_parser::finished): Ensure parsing end is\n\tdetected before end of string.\n\t(tid_is_in_list): Error out if LIST is invalid.\n\ngdb/testsuite/ChangeLog:\n2019-06-13  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.multi/tids.exp: Adjust expected output.  Add \"thread apply 1\n\tfoo --1\" test.",
    "tree": {
      "sha": "516f7f5df8e8313958056dc96dece16a0e0009a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/516f7f5df8e8313958056dc96dece16a0e0009a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b9a3f8429b012b753e30a4222bd8e4cbba019fad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9a3f8429b012b753e30a4222bd8e4cbba019fad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b9a3f8429b012b753e30a4222bd8e4cbba019fad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9a3f8429b012b753e30a4222bd8e4cbba019fad/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3844e605e61777555aed09ab8ce88db2da95bc0b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3844e605e61777555aed09ab8ce88db2da95bc0b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3844e605e61777555aed09ab8ce88db2da95bc0b"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 41,
    "deletions": 12
  },
  "files": [
    {
      "sha": "3843e12710bd79f39815bae8421e14cf4664144b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b9a3f8429b012b753e30a4222bd8e4cbba019fad",
      "patch": "@@ -1,3 +1,10 @@\n+2019-06-13  Pedro Alves  <palves@redhat.com>\n+\n+\t* thread.c (thread_apply_command): Adjust TID parsing.\n+\t* tid-parse.c (tid_range_parser::finished): Ensure parsing end is\n+\tdetected before end of string.\n+\t(tid_is_in_list): Error out if LIST is invalid.\n+\n 2019-06-13  Pedro Alves  <palves@redhat.com>\n \n \t* completer.c (complete_line_internal_1): Rewind completion word"
    },
    {
      "sha": "5590bf964d043e0a479b0213b6fe1c0c64805b7c",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b9a3f8429b012b753e30a4222bd8e4cbba019fad",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-13  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.multi/tids.exp: Adjust expected output.  Add \"thread apply 1\n+\tfoo --1\" test.\n+\n 2019-06-11  Bernhard Heckel  <bernhard.heckel@intel.com>\n \n \t* gdb.fortran/block-data.f: New."
    },
    {
      "sha": "3b0e1c1860ac53a6492dc039fd69b07d1d0a8016",
      "filename": "gdb/testsuite/gdb.multi/tids.exp",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/testsuite/gdb.multi/tids.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/testsuite/gdb.multi/tids.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/tids.exp?ref=b9a3f8429b012b753e30a4222bd8e4cbba019fad",
      "patch": "@@ -350,8 +350,13 @@ with_test_prefix \"two inferiors\" {\n \tthr_apply_info_thr_error \"${prefix}1-\" \"inverted range\"\n \tthr_apply_info_thr_error \"${prefix}2-1\" \"inverted range\"\n \tthr_apply_info_thr_error \"${prefix}2-\\$one\" \"inverted range\"\n-\tthr_apply_info_thr_error \"${prefix}-1\" \"negative value\"\n-\tthr_apply_info_thr_error \"${prefix}-\\$one\" \"negative value\"\n+\tif {$prefix == \"\"} {\n+\t    thr_apply_info_thr_error \"${prefix}-1\" \"Invalid thread ID: -1\"\n+\t    thr_apply_info_thr_error \"${prefix}-\\$one\" \"Invalid thread ID: -\\\\\\$one\"\n+\t} else {\n+\t    thr_apply_info_thr_error \"${prefix}-1\" \"negative value\"\n+\t    thr_apply_info_thr_error \"${prefix}-\\$one\" \"negative value\"\n+\t}\n \tthr_apply_info_thr_error \"${prefix}\\$minus_one\" \\\n \t    \"negative value: ${prefix_re}\\\\\\$minus_one\"\n \n@@ -374,6 +379,13 @@ with_test_prefix \"two inferiors\" {\n \tgdb_test \"thread apply 1.*\" $output\n     }\n \n+    # Check that thread ID list parsing stops at the non-number token\n+    # \"foo\" in a corner case where the \"foo\" is followed by hyphens.\n+    # In this corner case, GDB used to skip past \"foo\", and then parse\n+    # \"--1\" as a tid range for the current inferior.\n+    gdb_test \"thread apply 1 foo --1\" \\\n+\t\"Undefined command: \\\"foo\\\".  Try \\\"help\\\"\\\\.\"\n+\n     # Check that we do parse the inferior number and don't confuse it.\n     gdb_test \"info threads 3.1\" \\\n \t\"No threads match '3.1'\\.\""
    },
    {
      "sha": "a84dbf9fa1e87e85db93f8f4e518325564a79290",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=b9a3f8429b012b753e30a4222bd8e4cbba019fad",
      "patch": "@@ -1560,7 +1560,6 @@ thread_apply_command (const char *tidlist, int from_tty)\n {\n   qcs_flags flags;\n   const char *cmd = NULL;\n-  const char *cmd_or_flags;\n   tid_range_parser parser;\n \n   if (tidlist == NULL || *tidlist == '\\000')\n@@ -1572,17 +1571,15 @@ thread_apply_command (const char *tidlist, int from_tty)\n       int inf_num, thr_start, thr_end;\n \n       if (!parser.get_tid_range (&inf_num, &thr_start, &thr_end))\n-\t{\n-\t  cmd = parser.cur_tok ();\n-\t  break;\n-\t}\n+\tbreak;\n     }\n \n-  cmd_or_flags = cmd;\n-  while (cmd != NULL && parse_flags_qcs (\"thread apply\", &cmd, &flags))\n+  cmd = parser.cur_tok ();\n+\n+  while (parse_flags_qcs (\"thread apply\", &cmd, &flags))\n     ;\n \n-  if (cmd == NULL)\n+  if (*cmd == '\\0')\n     error (_(\"Please specify a command following the thread ID list\"));\n \n   if (tidlist == cmd || !isalpha (cmd[0]))\n@@ -1591,7 +1588,7 @@ thread_apply_command (const char *tidlist, int from_tty)\n   scoped_restore_current_thread restore_thread;\n \n   parser.init (tidlist, current_inferior ()->num);\n-  while (!parser.finished () && parser.cur_tok () < cmd_or_flags)\n+  while (!parser.finished ())\n     {\n       struct thread_info *tp = NULL;\n       struct inferior *inf;"
    },
    {
      "sha": "07d7d2c3b2a32ed4dced150476587c0b0be8c317",
      "filename": "gdb/tid-parse.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/tid-parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9a3f8429b012b753e30a4222bd8e4cbba019fad/gdb/tid-parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tid-parse.c?ref=b9a3f8429b012b753e30a4222bd8e4cbba019fad",
      "patch": "@@ -139,7 +139,13 @@ tid_range_parser::finished () const\n   switch (m_state)\n     {\n     case STATE_INFERIOR:\n-      return *m_cur_tok == '\\0';\n+      /* Parsing is finished when at end of string or null string,\n+\t or we are not in a range and not in front of an integer, negative\n+\t integer, convenience var or negative convenience var.  */\n+      return (*m_cur_tok == '\\0'\n+\t      || !(isdigit (*m_cur_tok)\n+\t\t   || *m_cur_tok == '$'\n+\t\t   || *m_cur_tok == '*'));\n     case STATE_THREAD_RANGE:\n     case STATE_STAR_RANGE:\n       return m_range_parser.finished ();\n@@ -311,6 +317,8 @@ tid_is_in_list (const char *list, int default_inferior,\n     return 1;\n \n   tid_range_parser parser (list, default_inferior);\n+  if (parser.finished ())\n+    invalid_thread_id_error (parser.cur_tok ());\n   while (!parser.finished ())\n     {\n       int tmp_inf, tmp_thr_start, tmp_thr_end;"
    }
  ]
}