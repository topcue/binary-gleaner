{
  "sha": "9b2beaf7788e328f5a954da24b4db13f9ba40465",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWIyYmVhZjc3ODhlMzI4ZjVhOTU0ZGEyNGI0ZGIxM2Y5YmE0MDQ2NQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-27T06:14:29Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-07-01T22:03:02Z"
    },
    "message": "opcodes: cleanup nds32 variables\n\nFor the variables that don't need to be exported, mark them static.\nFor the ones shared between modules, add a \"nds32_\" prefix to avoid\ncollisions with these common variable names.",
    "tree": {
      "sha": "4f0b02fa3176c9df68f8ded6b8326689db06d40f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4f0b02fa3176c9df68f8ded6b8326689db06d40f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9b2beaf7788e328f5a954da24b4db13f9ba40465",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9b2beaf7788e328f5a954da24b4db13f9ba40465",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9b2beaf7788e328f5a954da24b4db13f9ba40465",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9b2beaf7788e328f5a954da24b4db13f9ba40465/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ac8ef6961e18664224b55c1eadc611f0e9f1e5b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac8ef6961e18664224b55c1eadc611f0e9f1e5b5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ac8ef6961e18664224b55c1eadc611f0e9f1e5b5"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 57,
    "deletions": 40
  },
  "files": [
    {
      "sha": "44d059f1ad7979bd46a621ae2e2e83ecdabbf41b",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9b2beaf7788e328f5a954da24b4db13f9ba40465/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9b2beaf7788e328f5a954da24b4db13f9ba40465/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=9b2beaf7788e328f5a954da24b4db13f9ba40465",
      "patch": "@@ -1,3 +1,20 @@\n+2021-07-01  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* nds32-asm.c (operand_fields): Rename to ...\n+\t(nds32_operand_fields): ... this.\n+\t(keyword_gpr): Rename to ...\n+\t(nds32_keyword_gpr): ... this.\n+\t(keyword_usr, keyword_dxr, keyword_sr, keyword_cp, keyword_cpr,\n+\tkeyword_fsr, keyword_fdr, keyword_abdim, keyword_abm,\n+\tkeyword_dpref_st, keyword_cctl_lv, keyword_standby_st,\n+\tkeyword_msync_st, keyword_im5_i, keyword_im5_m, keyword_accumulator,\n+\tkeyword_aridx, keyword_aridx2, keyword_aridxi, keyword_aridxi_mx):\n+\tMark static.\n+\t(keywords): Rename to ...\n+\t(nds32_keywords): ... this.\n+\t* nds32-dis.c: Rename operand_fields to nds32_operand_fields,\n+\tkeywords to nds32_keywords, and keyword_gpr to nds32_keyword_gpr.\n+\n 2021-07-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* z80-dis.c (opc_ed): Make const."
    },
    {
      "sha": "a513255c1c1891196069da3c7c3a4d43eadb2501",
      "filename": "opcodes/nds32-asm.c",
      "status": "modified",
      "additions": 27,
      "deletions": 27,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9b2beaf7788e328f5a954da24b4db13f9ba40465/opcodes/nds32-asm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9b2beaf7788e328f5a954da24b4db13f9ba40465/opcodes/nds32-asm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nds32-asm.c?ref=9b2beaf7788e328f5a954da24b4db13f9ba40465",
      "patch": "@@ -99,7 +99,7 @@ static int parse_im6_ms (struct nds32_asm_desc *, struct nds32_asm_insn *,\n \n    Field table for operands and bit-fields.  */\n \n-const field_t operand_fields[] =\n+const field_t nds32_operand_fields[] =\n {\n   {\"rt\",\t20, 5, 0, HW_GPR, NULL},\n   {\"ra\",\t15, 5, 0, HW_GPR, NULL},\n@@ -1114,7 +1114,7 @@ struct nds32_opcode nds32_opcodes[] =\n   {NULL, NULL, 0, 0, 0, 0, NULL, 0, NULL},\n };\n \n-const keyword_t keyword_gpr[] =\n+const keyword_t nds32_keyword_gpr[] =\n {\n   /* Standard names.  */\n   {\"r0\", 0, ATTR (RDREG)}, {\"r1\", 1, ATTR (RDREG)}, {\"r2\", 2, ATTR (RDREG)},\n@@ -1160,7 +1160,7 @@ const keyword_t keyword_gpr[] =\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_usr[] =\n+static const keyword_t keyword_usr[] =\n {\n   {\"d0.lo\", USRIDX (0, 0), 0},\n   {\"d0.hi\", USRIDX (0, 1), 0},\n@@ -1195,12 +1195,12 @@ const keyword_t keyword_usr[] =\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_dxr[] =\n+static const keyword_t keyword_dxr[] =\n {\n   {\"d0\", 0, 0}, {\"d1\", 1, 0}, {NULL, 0, 0}\n };\n \n-const keyword_t keyword_sr[] =\n+static const keyword_t keyword_sr[] =\n {\n   {\"cpu_ver\", SRIDX (0, 0, 0), 0},\t{\"cr0\", SRIDX (0, 0, 0), 0},\n   {\"icm_cfg\", SRIDX (0, 1, 0), 0},\t{\"cr1\", SRIDX (0, 1, 0), 0},\n@@ -1351,12 +1351,12 @@ const keyword_t keyword_sr[] =\n   {NULL,0 ,0}\n };\n \n-const keyword_t keyword_cp[] =\n+static const keyword_t keyword_cp[] =\n {\n   {\"cp0\", 0, 0}, {\"cp1\", 1, 0}, {\"cp2\", 2, 0}, {\"cp3\", 3, 0}, {NULL, 0, 0}\n };\n \n-const keyword_t keyword_cpr[] =\n+static const keyword_t keyword_cpr[] =\n {\n   {\"cpr0\", 0, 0}, {\"cpr1\", 1, 0}, {\"cpr2\", 2, 0}, {\"cpr3\", 3, 0},\n   {\"cpr4\", 4, 0}, {\"cpr5\", 5, 0}, {\"cpr6\", 6, 0}, {\"cpr7\", 7, 0},\n@@ -1369,7 +1369,7 @@ const keyword_t keyword_cpr[] =\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_fsr[] =\n+static const keyword_t keyword_fsr[] =\n {\n   {\"fs0\", 0, 0}, {\"fs1\", 1, 0}, {\"fs2\", 2, 0}, {\"fs3\", 3, 0}, {\"fs4\", 4, 0},\n   {\"fs5\", 5, 0}, {\"fs6\", 6, 0}, {\"fs7\", 7, 0}, {\"fs8\", 8, 0}, {\"fs9\", 9, 0},\n@@ -1381,7 +1381,7 @@ const keyword_t keyword_fsr[] =\n   {\"fs30\", 30, 0}, {\"fs31\", 31, 0}, {NULL, 0 ,0}\n };\n \n-const keyword_t keyword_fdr[] =\n+static const keyword_t keyword_fdr[] =\n {\n   {\"fd0\", 0, 0}, {\"fd1\", 1, 0}, {\"fd2\", 2, 0}, {\"fd3\", 3, 0}, {\"fd4\", 4, 0},\n   {\"fd5\", 5, 0}, {\"fd6\", 6, 0}, {\"fd7\", 7, 0}, {\"fd8\", 8, 0}, {\"fd9\", 9, 0},\n@@ -1393,14 +1393,14 @@ const keyword_t keyword_fdr[] =\n   {\"fd30\", 30, 0}, {\"fd31\", 31, 0}, {NULL, 0, 0}\n };\n \n-const keyword_t keyword_abdim[] =\n+static const keyword_t keyword_abdim[] =\n {\n   {\"bi\", 0, 0}, {\"bim\", 1, 0}, {\"bd\", 2, 0}, {\"bdm\", 3, 0},\n   {\"ai\", 4, 0}, {\"aim\", 5, 0}, {\"ad\", 6, 0}, {\"adm\", 7, 0},\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_abm[] =\n+static const keyword_t keyword_abm[] =\n {\n   {\"b\", 0, 0}, {\"bm\", 1, 0}, {\"bx\", 2, 0}, {\"bmx\", 3, 0},\n   {\"a\", 4, 0}, {\"am\", 5, 0}, {\"ax\", 6, 0}, {\"amx\", 7, 0},\n@@ -1417,7 +1417,7 @@ static const keyword_t keyword_dtitoff[] =\n   {\"itoff\", 1, 0}, {\"toff\", 3, 0}, {NULL, 0, 0}\n };\n \n-const keyword_t keyword_dpref_st[] =\n+static const keyword_t keyword_dpref_st[] =\n {\n   {\"srd\", 0, 0}, {\"mrd\", 1, 0}, {\"swr\", 2, 0}, {\"mwr\", 3, 0},\n   {\"pte\", 4, 0}, {\"clwr\", 5, 0}, {NULL, 0, 0}\n@@ -1468,7 +1468,7 @@ static const keyword_t keyword_cctl_st5[] =\n   {\"l1d_wball\", 0xf, 0}, {NULL, 0, 0}\n };\n \n-const keyword_t keyword_cctl_lv[] =\n+static const keyword_t keyword_cctl_lv[] =\n {\n   {\"1level\", 0, 0}, {\"alevel\", 1, 0}, {\"0\", 0, 0}, {\"1\", 1, 0},\n   {NULL, 0, 0},\n@@ -1485,7 +1485,7 @@ static const keyword_t keyword_tlbop_st[] =\n   {NULL, 0, 0},\n };\n \n-const keyword_t keyword_standby_st[] =\n+static const keyword_t keyword_standby_st[] =\n {\n   {\"no_wake_grant\", 0, 0},\n   {\"wake_grant\", 1, 0},\n@@ -1497,33 +1497,33 @@ const keyword_t keyword_standby_st[] =\n   {NULL, 0, 0},\n };\n \n-const keyword_t keyword_msync_st[] =\n+static const keyword_t keyword_msync_st[] =\n {\n   {\"all\", 0, 0}, {\"store\", 1, 0},\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_im5_i[] =\n+static const keyword_t keyword_im5_i[] =\n {\n   {\"i0\", 0, 0}, {\"i1\", 1, 0}, {\"i2\", 2, 0}, {\"i3\", 3, 0},\n   {\"i4\", 4, 0}, {\"i5\", 5, 0}, {\"i6\", 6, 0}, {\"i7\", 7, 0},\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_im5_m[] =\n+static const keyword_t keyword_im5_m[] =\n {\n   {\"m0\", 0, 0}, {\"m1\", 1, 0}, {\"m2\", 2, 0}, {\"m3\", 3, 0},\n   {\"m4\", 4, 0}, {\"m5\", 5, 0}, {\"m6\", 6, 0}, {\"m7\", 7, 0},\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_accumulator[] =\n+static const keyword_t keyword_accumulator[] =\n {\n   {\"d0.lo\", 0, 0}, {\"d0.hi\", 1, 0}, {\"d1.lo\", 2, 0}, {\"d1.hi\", 3, 0},\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_aridx[] =\n+static const keyword_t keyword_aridx[] =\n {\n   {\"i0\", 0, 0}, {\"i1\", 1, 0}, {\"i2\", 2, 0}, {\"i3\", 3, 0},\n   {\"i4\", 4, 0}, {\"i5\", 5, 0}, {\"i6\", 6, 0}, {\"i7\", 7, 0},\n@@ -1535,15 +1535,15 @@ const keyword_t keyword_aridx[] =\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_aridx2[] =\n+static const keyword_t keyword_aridx2[] =\n {\n   {\"cbb0\", 0, 0}, {\"cbb1\", 1, 0}, {\"cbb2\", 2, 0}, {\"cbb3\", 3, 0},\n   {\"cbe0\", 4, 0}, {\"cbe1\", 5, 0}, {\"cbe2\", 6, 0}, {\"cbe3\", 7, 0},\n   {\"cb_ctl\", 31, 0},\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_aridxi[] =\n+static const keyword_t keyword_aridxi[] =\n {\n   {\"i0\", 0, 0}, {\"i1\", 1, 0}, {\"i2\", 2, 0}, {\"i3\", 3, 0},\n   {\"i4\", 4, 0}, {\"i5\", 5, 0}, {\"i6\", 6, 0}, {\"i7\", 7, 0},\n@@ -1552,16 +1552,16 @@ const keyword_t keyword_aridxi[] =\n   {NULL, 0, 0}\n };\n \n-const keyword_t keyword_aridxi_mx[] =\n+static const keyword_t keyword_aridxi_mx[] =\n {\n   {\"m1\", 9, 0}, {\"m2\", 10, 0}, {\"m3\",11, 0},\n   {\"m5\",13, 0}, {\"m6\",14, 0}, {\"m7\",15, 0},\n   {NULL, 0, 0}\n };\n \n-const keyword_t *keywords[_HW_LAST] =\n+const keyword_t *nds32_keywords[_HW_LAST] =\n {\n-  keyword_gpr, keyword_usr, keyword_dxr, keyword_sr, keyword_fsr,\n+  nds32_keyword_gpr, keyword_usr, keyword_dxr, keyword_sr, keyword_fsr,\n   keyword_fdr, keyword_cp, keyword_cpr, keyword_abdim, keyword_abm,\n   keyword_dtiton, keyword_dtitoff, keyword_dpref_st,\n   keyword_cctl_st0, keyword_cctl_st1, keyword_cctl_st2,\n@@ -1774,7 +1774,7 @@ build_opcode_syntax (struct nds32_opcode *opc)\n \t      k = i;\n \t    }\n \t}\n-      assert (fidx >= 0 && fidx < (int) ARRAY_SIZE (operand_fields));\n+      assert (fidx >= 0 && fidx < (int) ARRAY_SIZE (nds32_operand_fields));\n       *plex |= LEX_SET_FIELD (k, fidx);\n \n       str += len;\n@@ -1850,10 +1850,10 @@ nds32_asm_init (nds32_asm_desc_t *pdesc, int flags)\n   pdesc->mach = flags & NASM_OPEN_ARCH_MASK;\n \n   /* Setup main core.  */\n-  nds32_keyword_table[NDS32_MAIN_CORE] = &keywords[0];\n+  nds32_keyword_table[NDS32_MAIN_CORE] = &nds32_keywords[0];\n   nds32_keyword_count_table[NDS32_MAIN_CORE] = _HW_LAST;\n   nds32_opcode_table[NDS32_MAIN_CORE] = &nds32_opcodes[0];\n-  nds32_field_table[NDS32_MAIN_CORE] = &operand_fields[0];\n+  nds32_field_table[NDS32_MAIN_CORE] = &nds32_operand_fields[0];\n \n   /* Build operand hash table.  */\n   build_operand_hash_table ();"
    },
    {
      "sha": "c888487efa900a8a7eb7fd0805253d4000ccc20e",
      "filename": "opcodes/nds32-dis.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9b2beaf7788e328f5a954da24b4db13f9ba40465/opcodes/nds32-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9b2beaf7788e328f5a954da24b4db13f9ba40465/opcodes/nds32-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nds32-dis.c?ref=9b2beaf7788e328f5a954da24b4db13f9ba40465",
      "patch": "@@ -69,9 +69,9 @@ extern const field_t *nds32_field_table[NDS32_CORE_COUNT];\n extern opcode_t *nds32_opcode_table[NDS32_CORE_COUNT];\n extern keyword_t **nds32_keyword_table[NDS32_CORE_COUNT];\n extern struct nds32_opcode nds32_opcodes[];\n-extern const field_t operand_fields[];\n-extern keyword_t *keywords[];\n-extern const keyword_t keyword_gpr[];\n+extern const field_t nds32_operand_fields[];\n+extern keyword_t *nds32_keywords[];\n+extern const keyword_t nds32_keyword_gpr[];\n \n static uint32_t nds32_mask_opcode (uint32_t);\n static void nds32_special_opcode (uint32_t, struct nds32_opcode **);\n@@ -127,7 +127,7 @@ nds32_parse_audio_ext (const field_t *pfd,\n   int_value =\n     __GF (insn, pfd->bitpos, pfd->bitsize) << pfd->shift;\n   new_value = int_value;\n-  psys_reg = (keyword_t*) keywords[pfd->hw_res];\n+  psys_reg = (keyword_t*) nds32_keywords[pfd->hw_res];\n \n   /* p = bit[4].bit[1:0], r = bit[4].bit[3:2].  */\n   if (strcmp (pfd->name, \"im5_i\") == 0)\n@@ -264,7 +264,7 @@ nds32_parse_opcode (struct nds32_opcode *opc, bfd_vma pc ATTRIBUTE_UNUSED,\n \tcase '=':\n \tcase '&':\n \t  pstr_src++;\n-\t  /* Compare with operand_fields[].name.  */\n+\t  /* Compare with nds32_operand_fields[].name.  */\n \t  pstr_tmp = &tmp_string[0];\n \t  while (*pstr_src)\n \t    {\n@@ -301,7 +301,7 @@ nds32_parse_opcode (struct nds32_opcode *opc, bfd_vma pc ATTRIBUTE_UNUSED,\n \t\t    {\n \t\t      int_value = nds32_r45map[int_value];\n \t\t    }\n-\t\t  func (stream, \"$%s\", keyword_gpr[int_value].name);\n+\t\t  func (stream, \"$%s\", nds32_keyword_gpr[int_value].name);\n \t\t}\n \t      else if ((pfd->hw_res == HW_INT) || (pfd->hw_res == HW_UINT))\n \t\t{\n@@ -338,7 +338,7 @@ nds32_parse_opcode (struct nds32_opcode *opc, bfd_vma pc ATTRIBUTE_UNUSED,\n \t\t    {\n \t\t      func (stream, \"#%d    ! {$r6\", int_value);\n \t\t      if (push25gpr != 6)\n-\t\t\tfunc (stream, \"~$%s\", keyword_gpr[push25gpr].name);\n+\t\t\tfunc (stream, \"~$%s\", nds32_keyword_gpr[push25gpr].name);\n \t\t      func (stream, \", $fp, $gp, $lp}\");\n \t\t    }\n \t\t  else if (pfd->hw_res == HW_INT)\n@@ -431,9 +431,9 @@ nds32_parse_opcode (struct nds32_opcode *opc, bfd_vma pc ATTRIBUTE_UNUSED,\n \t\t     the convience comparing with bsp320.  */\n \t\t  if (lsmwRb != 31 || lsmwRe != 31)\n \t\t    {\n-\t\t      func (stream, \"$%s\", keyword_gpr[lsmwRb].name);\n+\t\t      func (stream, \"$%s\", nds32_keyword_gpr[lsmwRb].name);\n \t\t      if (lsmwRb != lsmwRe)\n-\t\t\tfunc (stream, \"~$%s\", keyword_gpr[lsmwRe].name);\n+\t\t\tfunc (stream, \"~$%s\", nds32_keyword_gpr[lsmwRe].name);\n \t\t      ifthe1st = 0;\n \t\t    }\n \t\t  if (lsmwEnb4 != 0)\n@@ -447,10 +447,10 @@ nds32_parse_opcode (struct nds32_opcode *opc, bfd_vma pc ATTRIBUTE_UNUSED,\n \t\t\t      if (ifthe1st == 1)\n \t\t\t\t{\n \t\t\t\t  ifthe1st = 0;\n-\t\t\t\t  func (stream, \"$%s\", keyword_gpr[28 + i].name);\n+\t\t\t\t  func (stream, \"$%s\", nds32_keyword_gpr[28 + i].name);\n \t\t\t\t}\n \t\t\t      else\n-\t\t\t\tfunc (stream, \", $%s\", keyword_gpr[28 + i].name);\n+\t\t\t\tfunc (stream, \", $%s\", nds32_keyword_gpr[28 + i].name);\n \t\t\t    }\n \t\t\t  checkbit >>= 1;\n \t\t\t}\n@@ -1257,9 +1257,9 @@ disassemble_init_nds32 (struct disassemble_info *info)\n     return;\n \n   /* Setup main core.  */\n-  nds32_keyword_table[NDS32_MAIN_CORE] = &keywords[0];\n+  nds32_keyword_table[NDS32_MAIN_CORE] = &nds32_keywords[0];\n   nds32_opcode_table[NDS32_MAIN_CORE] = &nds32_opcodes[0];\n-  nds32_field_table[NDS32_MAIN_CORE] = &operand_fields[0];\n+  nds32_field_table[NDS32_MAIN_CORE] = &nds32_operand_fields[0];\n \n   /* Build opcode table.  */\n   opcode_htab = htab_create_alloc (1024, htab_hash_hash, htab_hash_eq,"
    }
  ]
}