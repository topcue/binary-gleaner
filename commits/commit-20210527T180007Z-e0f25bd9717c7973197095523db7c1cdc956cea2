{
  "sha": "e0f25bd9717c7973197095523db7c1cdc956cea2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTBmMjViZDk3MTdjNzk3MzE5NzA5NTUyM2RiN2MxY2RjOTU2Y2VhMg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T17:59:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T18:00:07Z"
    },
    "message": "gdb: make add_info_alias accept target as a cmd_list_element\n\nSame idea as previous patch, but for add_info_alias.\n\ngdb/ChangeLog:\n\n\t* command.h (add_info_alias): Accept target as\n\tcmd_list_element.  Update callers.\n\nChange-Id: If830d423364bf42d7bea5ac4dd3a81adcfce6f7a",
    "tree": {
      "sha": "69041b783e0a83083475fc4390423bdee176ebe3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/69041b783e0a83083475fc4390423bdee176ebe3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e0f25bd9717c7973197095523db7c1cdc956cea2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e0f25bd9717c7973197095523db7c1cdc956cea2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e0f25bd9717c7973197095523db7c1cdc956cea2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e0f25bd9717c7973197095523db7c1cdc956cea2/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3947f654eabb1b6ccf8aad11ece46dc4b027f0f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3947f654eabb1b6ccf8aad11ece46dc4b027f0f0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3947f654eabb1b6ccf8aad11ece46dc4b027f0f0"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 43,
    "deletions": 29
  },
  "files": [
    {
      "sha": "4279359ba33d8c0aa5193afa1b96122bd782ea68",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* command.h (add_info_alias): Accept target as\n+\tcmd_list_element.  Update callers.\n+\n 2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* command.h (add_com_alias): Accept target as"
    },
    {
      "sha": "ae05d1802a8c5317fa42fde51f23825b61073e78",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -15870,7 +15870,8 @@ Convenience variable \\\"$bpnum\\\" contains the number of the last\\n\\\n breakpoint set.\"));\n     }\n \n-  add_info (\"breakpoints\", info_breakpoints_command, _(\"\\\n+  cmd_list_element *info_breakpoints_cmd\n+    = add_info (\"breakpoints\", info_breakpoints_command, _(\"\\\n Status of specified breakpoints (all user-settable breakpoints if no argument).\\n\\\n The \\\"Type\\\" column indicates one of:\\n\\\n \\tbreakpoint     - normal breakpoint\\n\\\n@@ -15886,7 +15887,7 @@ is prefixed with \\\"server \\\".\\n\\n\\\n Convenience variable \\\"$bpnum\\\" contains the number of the last\\n\\\n breakpoint set.\"));\n \n-  add_info_alias (\"b\", \"breakpoints\", 1);\n+  add_info_alias (\"b\", info_breakpoints_cmd, 1);\n \n   add_cmd (\"breakpoints\", class_maintenance, maintenance_info_breakpoints, _(\"\\\n Status of all breakpoints, or breakpoint number NUMBER.\\n\\\n@@ -16053,12 +16054,13 @@ Do \\\"help breakpoints\\\" for info on other commands dealing with breakpoints.\\n\\\n Do \\\"help tracepoints\\\" for info on other tracepoint commands.\"));\n   set_cmd_completer (c, location_completer);\n \n-  add_info (\"tracepoints\", info_tracepoints_command, _(\"\\\n+  cmd_list_element *info_tracepoints_cmd\n+    = add_info (\"tracepoints\", info_tracepoints_command, _(\"\\\n Status of specified tracepoints (all tracepoints if no argument).\\n\\\n Convenience variable \\\"$tpnum\\\" contains the number of the\\n\\\n last tracepoint set.\"));\n \n-  add_info_alias (\"tp\", \"tracepoints\", 1);\n+  add_info_alias (\"tp\", info_tracepoints_cmd, 1);\n \n   add_cmd (\"tracepoints\", class_trace, delete_trace_command, _(\"\\\n Delete specified tracepoints.\\n\\"
    },
    {
      "sha": "2c2d72e20906f506e2f37d58f00bf403a32b87a0",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -986,10 +986,10 @@ add_info (const char *name, cmd_const_cfunc_ftype *fun, const char *doc)\n \n /* Add an alias to the list of info subcommands.  */\n \n-struct cmd_list_element *\n-add_info_alias (const char *name, const char *target_name, int abbrev_flag)\n+cmd_list_element *\n+add_info_alias (const char *name, cmd_list_element *target, int abbrev_flag)\n {\n-  return add_alias_cmd (name, target_name, class_run, abbrev_flag, &infolist);\n+  return add_alias_cmd (name, target, class_run, abbrev_flag, &infolist);\n }\n \n /* Add an element to the list of commands.  */"
    },
    {
      "sha": "e14f27b5f9a77e07417c48ca9954bb3abfa1f37e",
      "filename": "gdb/command.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/command.h?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -373,8 +373,9 @@ extern struct cmd_list_element *add_info (const char *,\n \t\t\t\t\t  cmd_const_cfunc_ftype *fun,\n \t\t\t\t\t  const char *);\n \n-extern struct cmd_list_element *add_info_alias (const char *, const char *,\n-\t\t\t\t\t\tint);\n+extern cmd_list_element *add_info_alias (const char *name,\n+\t\t\t\t\t cmd_list_element *target,\n+\t\t\t\t\t int abbrev_flag);\n \n extern void complete_on_cmdlist (struct cmd_list_element *,\n \t\t\t\t completion_tracker &tracker,"
    },
    {
      "sha": "3b1fca3d20cc34201dae095ac30806d9d2a2c5a7",
      "filename": "gdb/guile/guile.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/guile/guile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/guile/guile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/guile.c?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -790,10 +790,11 @@ This command is only a placeholder.\")\n \t\t       &show_guile_list, 0, &showlist);\n   add_alias_cmd (\"gu\", \"guile\", class_obscure, 1, &showlist);\n \n-  add_basic_prefix_cmd (\"guile\", class_obscure,\n-\t\t\t_(\"Prefix command for Guile info displays.\"),\n-\t\t\t&info_guile_list, 0, &infolist);\n-  add_info_alias (\"gu\", \"guile\", 1);\n+  cmd_list_element *info_guile_cmd\n+    = add_basic_prefix_cmd (\"guile\", class_obscure,\n+\t\t\t    _(\"Prefix command for Guile info displays.\"),\n+\t\t\t    &info_guile_list, 0, &infolist);\n+  add_info_alias (\"gu\", info_guile_cmd, 1);\n \n   /* The name \"print-stack\" is carried over from Python.\n      A better name is \"print-exception\".  */"
    },
    {
      "sha": "3cb05e564c32abc739d296f31a24793a95ca8201",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -3276,13 +3276,14 @@ If non-stop mode is enabled, interrupt only the current thread,\\n\\\n otherwise all the threads in the program are stopped.  To \\n\\\n interrupt all running threads in non-stop mode, use the -a option.\"));\n \n-  c = add_info (\"registers\", info_registers_command, _(\"\\\n+  cmd_list_element *info_registers_cmd\n+    = add_info (\"registers\", info_registers_command, _(\"\\\n List of integer registers and their contents, for selected stack frame.\\n\\\n One or more register names as argument means describe the given registers.\\n\\\n One or more register group names as argument means describe the registers\\n\\\n in the named register groups.\"));\n-  add_info_alias (\"r\", \"registers\", 1);\n-  set_cmd_completer (c, reg_or_group_completer);\n+  add_info_alias (\"r\", info_registers_cmd, 1);\n+  set_cmd_completer (info_registers_cmd, reg_or_group_completer);\n \n   c = add_info (\"all-registers\", info_all_registers_command, _(\"\\\n List of all registers and their contents, for selected stack frame.\\n\\"
    },
    {
      "sha": "427c694bb7606452d3099c8973ad978428adebb0",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -9501,10 +9501,11 @@ _initialize_infrun ()\n     = create_async_event_handler (infrun_async_inferior_event_handler, NULL,\n \t\t\t\t  \"infrun\");\n \n-  add_info (\"signals\", info_signals_command, _(\"\\\n+  cmd_list_element *info_signals_cmd\n+    = add_info (\"signals\", info_signals_command, _(\"\\\n What debugger does when program gets various signals.\\n\\\n Specify a signal as argument to print info on that signal only.\"));\n-  add_info_alias (\"handle\", \"signals\", 0);\n+  add_info_alias (\"handle\", info_signals_cmd, 0);\n \n   c = add_com (\"handle\", class_run, handle_command, _(\"\\\n Specify how to handle signals.\\n\\"
    },
    {
      "sha": "5c8e6ca636626f68f5c5ce8c8048dbd40bcb734c",
      "filename": "gdb/solib.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/solib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/solib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib.c?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -1565,9 +1565,10 @@ _initialize_solib ()\n \n   add_com (\"sharedlibrary\", class_files, sharedlibrary_command,\n \t   _(\"Load shared object library symbols for files matching REGEXP.\"));\n-  add_info (\"sharedlibrary\", info_sharedlibrary_command,\n-\t    _(\"Status of loaded shared object libraries.\"));\n-  add_info_alias (\"dll\", \"sharedlibrary\", 1);\n+  cmd_list_element *info_sharedlibrary_cmd\n+    = add_info (\"sharedlibrary\", info_sharedlibrary_command,\n+\t\t_(\"Status of loaded shared object libraries.\"));\n+  add_info_alias (\"dll\", info_sharedlibrary_cmd, 1);\n   add_com (\"nosharedlibrary\", class_files, no_shared_libraries,\n \t   _(\"Unload all shared object library symbols.\"));\n "
    },
    {
      "sha": "66a4610199327629bc8d06946283950e6fbad3c8",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e0f25bd9717c7973197095523db7c1cdc956cea2/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=e0f25bd9717c7973197095523db7c1cdc956cea2",
      "patch": "@@ -3508,17 +3508,19 @@ With a negative COUNT, print outermost -COUNT frames.\"),\n   add_com_alias (\"bt\", backtrace_cmd, class_stack, 0);\n \n   add_com_alias (\"where\", backtrace_cmd, class_stack, 0);\n-  add_info (\"stack\", backtrace_command,\n-\t    _(\"Backtrace of the stack, or innermost COUNT frames.\"));\n-  add_info_alias (\"s\", \"stack\", 1);\n-\n-  add_prefix_cmd (\"frame\", class_info, &info_frame_cmd.base_command,\n-\t\t  _(\"All about the selected stack frame.\\n\\\n+  cmd_list_element *info_stack_cmd\n+    = add_info (\"stack\", backtrace_command,\n+\t\t_(\"Backtrace of the stack, or innermost COUNT frames.\"));\n+  add_info_alias (\"s\", info_stack_cmd, 1);\n+\n+  cmd_list_element *info_frame_cmd_el\n+    = add_prefix_cmd (\"frame\", class_info, &info_frame_cmd.base_command,\n+\t\t      _(\"All about the selected stack frame.\\n\\\n With no arguments, displays information about the currently selected stack\\n\\\n frame.  Alternatively a frame specification may be provided (See \\\"frame\\\")\\n\\\n the information is then printed about the specified frame.\"),\n-\t\t  &info_frame_cmd_list, 1, &infolist);\n-  add_info_alias (\"f\", \"frame\", 1);\n+\t\t      &info_frame_cmd_list, 1, &infolist);\n+  add_info_alias (\"f\", info_frame_cmd_el, 1);\n \n   add_cmd (\"address\", class_stack, &info_frame_cmd.address,\n \t   _(\"\\"
    }
  ]
}