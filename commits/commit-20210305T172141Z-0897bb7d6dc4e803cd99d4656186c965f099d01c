{
  "sha": "0897bb7d6dc4e803cd99d4656186c965f099d01c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDg5N2JiN2Q2ZGM0ZTgwM2NkOTlkNDY1NjE4NmM5NjVmMDk5ZDAxYw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-30T12:14:38Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-05T17:21:41Z"
    },
    "message": "bfd/riscv: prepare to handle bare metal core dump creation\n\nWhen creating a core file GDB will call the function\nelfcore_write_prstatus to write out the general purpose registers\nalong with the pid/tid for the thread (into a prstatus structure) and\nthe executable name and arguments (into a prpsinfo_t structure).\n\nHowever, for a bare metal RISC-V tool chain the prstatus_t and\nprpsinfo_t types are not defined so the elfcore_write_prstatus\nfunction will return NULL, preventing core file creation.\n\nThis commit provides the `elf_backend_write_core_note' hook and uses\nthe provided function to write out the required information.\n\nIn order to keep changes in the non bare metal tools to a minimum, the\nprovided backend function will itself return NULL when the prstatus_t\nor pspsinfo_t types are available, the consequence of this is that the\ngeneric code in elfcore_write_prstatus will be used just as before.\nBut, when prstatus_t or prpsinfo_t is not available, the new backend\nfunction will write out the information using predefined offsets.\n\nThis new functionality will be used by a later GDB commit that will\nadd bare metal core dumps for RISC-V.\n\nbfd/ChangeLog:\n\n\t* elfnn-riscv.c (PRPSINFO_PR_FNAME_LENGTH): Define.\n\t(PRPSINFO_PR_PSARGS_LENGTH): Define.\n\t(riscv_write_core_note): New function.\n\t(riscv_elf_grok_psinfo): Make use of two new length defines.\n\t(elf_backend_write_core_note): Define.",
    "tree": {
      "sha": "c41cc4d854484dbc98aa8f63ff904a85862cfaed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c41cc4d854484dbc98aa8f63ff904a85862cfaed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0897bb7d6dc4e803cd99d4656186c965f099d01c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0897bb7d6dc4e803cd99d4656186c965f099d01c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0897bb7d6dc4e803cd99d4656186c965f099d01c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0897bb7d6dc4e803cd99d4656186c965f099d01c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "95ce627aeb9df14bdaf70faf67054cb953678797",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95ce627aeb9df14bdaf70faf67054cb953678797",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/95ce627aeb9df14bdaf70faf67054cb953678797"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 91,
    "deletions": 2
  },
  "files": [
    {
      "sha": "9e7f90e16253def5b505603e9a3294480df59459",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0897bb7d6dc4e803cd99d4656186c965f099d01c/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0897bb7d6dc4e803cd99d4656186c965f099d01c/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=0897bb7d6dc4e803cd99d4656186c965f099d01c",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-05  Craig Blackmore  <craig.blackmore@embecosm.com>\n+\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* elfnn-riscv.c (PRPSINFO_PR_FNAME_LENGTH): Define.\n+\t(PRPSINFO_PR_PSARGS_LENGTH): Define.\n+\t(riscv_write_core_note): New function.\n+\t(riscv_elf_grok_psinfo): Make use of two new length defines.\n+\t(elf_backend_write_core_note): Define.\n+\n 2021-03-05  Craig Blackmore  <craig.blackmore@embecosm.com>\n \t    Andrew Burgess  <andrew.burgess@embecosm.com>\n "
    },
    {
      "sha": "76d29b733321e130fd85bcc3162ab9eabfc68309",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 82,
      "deletions": 2,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0897bb7d6dc4e803cd99d4656186c965f099d01c/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0897bb7d6dc4e803cd99d4656186c965f099d01c/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=0897bb7d6dc4e803cd99d4656186c965f099d01c",
      "patch": "@@ -4877,6 +4877,8 @@ _bfd_riscv_relax_section (bfd *abfd, asection *sec,\n # define PRPSINFO_OFFSET_PR_PID\t\t16\n # define PRPSINFO_OFFSET_PR_FNAME\t32\n # define PRPSINFO_OFFSET_PR_PSARGS\t48\n+# define PRPSINFO_PR_FNAME_LENGTH\t16\n+# define PRPSINFO_PR_PSARGS_LENGTH\t80\n #else\n # define PRSTATUS_SIZE\t\t\t376\n # define PRSTATUS_OFFSET_PR_CURSIG\t12\n@@ -4887,8 +4889,83 @@ _bfd_riscv_relax_section (bfd *abfd, asection *sec,\n # define PRPSINFO_OFFSET_PR_PID\t\t24\n # define PRPSINFO_OFFSET_PR_FNAME\t40\n # define PRPSINFO_OFFSET_PR_PSARGS\t56\n+# define PRPSINFO_PR_FNAME_LENGTH\t16\n+# define PRPSINFO_PR_PSARGS_LENGTH\t80\n #endif\n \n+/* Write PRSTATUS and PRPSINFO note into core file.  This will be called\n+   before the generic code in elf.c.  By checking the compiler defines we\n+   only perform any action here if the generic code would otherwise not be\n+   able to help us.  The intention is that bare metal core dumps (where the\n+   prstatus_t and/or prpsinfo_t might not be available) will use this code,\n+   while non bare metal tools will use the generic elf code.  */\n+\n+static char *\n+riscv_write_core_note (bfd *abfd ATTRIBUTE_UNUSED,\n+                       char *buf ATTRIBUTE_UNUSED,\n+                       int *bufsiz ATTRIBUTE_UNUSED,\n+                       int note_type ATTRIBUTE_UNUSED, ...)\n+{\n+  switch (note_type)\n+    {\n+    default:\n+      return NULL;\n+\n+#if !defined (HAVE_PRPSINFO_T)\n+    case NT_PRPSINFO:\n+      {\n+\tchar data[PRPSINFO_SIZE] ATTRIBUTE_NONSTRING;\n+\tva_list ap;\n+\n+\tva_start (ap, note_type);\n+\tmemset (data, 0, sizeof (data));\n+\tstrncpy (data + PRPSINFO_OFFSET_PR_FNAME, va_arg (ap, const char *),\n+                 PRPSINFO_PR_FNAME_LENGTH);\n+#if GCC_VERSION == 8000 || GCC_VERSION == 8001\n+\tDIAGNOSTIC_PUSH;\n+\t/* GCC 8.0 and 8.1 warn about 80 equals destination size with\n+\t   -Wstringop-truncation:\n+\t   https://gcc.gnu.org/bugzilla/show_bug.cgi?id=85643\n+\t */\n+\tDIAGNOSTIC_IGNORE_STRINGOP_TRUNCATION;\n+#endif\n+\tstrncpy (data + PRPSINFO_OFFSET_PR_PSARGS, va_arg (ap, const char *),\n+                 PRPSINFO_PR_PSARGS_LENGTH);\n+#if GCC_VERSION == 8000 || GCC_VERSION == 8001\n+\tDIAGNOSTIC_POP;\n+#endif\n+\tva_end (ap);\n+\treturn elfcore_write_note (abfd, buf, bufsiz,\n+\t\t\t\t   \"CORE\", note_type, data, sizeof (data));\n+      }\n+#endif /* !HAVE_PRPSINFO_T */\n+\n+#if !defined (HAVE_PRSTATUS_T)\n+    case NT_PRSTATUS:\n+      {\n+        char data[PRSTATUS_SIZE];\n+        va_list ap;\n+        long pid;\n+        int cursig;\n+        const void *greg;\n+\n+        va_start (ap, note_type);\n+        memset (data, 0, sizeof(data));\n+        pid = va_arg (ap, long);\n+        bfd_put_32 (abfd, pid, data + PRSTATUS_OFFSET_PR_PID);\n+        cursig = va_arg (ap, int);\n+        bfd_put_16 (abfd, cursig, data + PRSTATUS_OFFSET_PR_CURSIG);\n+        greg = va_arg (ap, const void *);\n+        memcpy (data + PRSTATUS_OFFSET_PR_REG, greg,\n+                PRSTATUS_SIZE - PRSTATUS_OFFSET_PR_REG - ARCH_SIZE / 8);\n+        va_end (ap);\n+        return elfcore_write_note (abfd, buf, bufsiz,\n+                                   \"CORE\", note_type, data, sizeof (data));\n+      }\n+#endif /* !HAVE_PRSTATUS_T */\n+    }\n+}\n+\n /* Support for core dump NOTE sections.  */\n \n static bfd_boolean\n@@ -4930,11 +5007,13 @@ riscv_elf_grok_psinfo (bfd *abfd, Elf_Internal_Note *note)\n \n \t/* pr_fname */\n \telf_tdata (abfd)->core->program = _bfd_elfcore_strndup\n-\t  (abfd, note->descdata + PRPSINFO_OFFSET_PR_FNAME, 16);\n+\t  (abfd, note->descdata + PRPSINFO_OFFSET_PR_FNAME,\n+           PRPSINFO_PR_FNAME_LENGTH);\n \n \t/* pr_psargs */\n \telf_tdata (abfd)->core->command = _bfd_elfcore_strndup\n-\t  (abfd, note->descdata + PRPSINFO_OFFSET_PR_PSARGS, 80);\n+\t  (abfd, note->descdata + PRPSINFO_OFFSET_PR_PSARGS,\n+           PRPSINFO_PR_PSARGS_LENGTH);\n \tbreak;\n     }\n \n@@ -5003,6 +5082,7 @@ riscv_elf_obj_attrs_arg_type (int tag)\n #define elf_backend_grok_prstatus\t\triscv_elf_grok_prstatus\n #define elf_backend_grok_psinfo\t\t\triscv_elf_grok_psinfo\n #define elf_backend_object_p\t\t\triscv_elf_object_p\n+#define elf_backend_write_core_note\t\triscv_write_core_note\n #define elf_info_to_howto_rel\t\t\tNULL\n #define elf_info_to_howto\t\t\triscv_info_to_howto_rela\n #define bfd_elfNN_bfd_relax_section\t\t_bfd_riscv_relax_section"
    }
  ]
}