{
  "sha": "0d7e3cd15fa770e172f442e1a984809fa8ac0fdc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGQ3ZTNjZDE1ZmE3NzBlMTcyZjQ0MmUxYTk4NDgwOWZhOGFjMGZkYw==",
  "commit": {
    "author": {
      "name": "Marco Barisione",
      "email": "mbarisione@undo.io",
      "date": "2021-05-19T15:48:05Z"
    },
    "committer": {
      "name": "Marco Barisione",
      "email": "mbarisione@undo.io",
      "date": "2021-05-19T15:48:05Z"
    },
    "message": "gdb: Move definitions of std::string overloads in ui_out to the header\n\nThese methods are just trivial wrappers around the versions accepting\na char pointer.  By moving them to the header the compiler can inline\nthem.\n\ngdb/ChangeLog:\n\n\t* ui-out.c (ui_out::field_string): Move to ui-out.h.\n\t(ui_out::text): Ditto.\n\t* ui-out.h (class ui_out): Add definitions of\n\tui_out::field_string and ui_out::text which were previously\n\tdefined in ui-out.c.",
    "tree": {
      "sha": "51f3f1659368baf375e7c6660947c44c0b44b4cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/51f3f1659368baf375e7c6660947c44c0b44b4cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc/comments",
  "author": {
    "login": "barisione",
    "id": 4679325,
    "node_id": "MDQ6VXNlcjQ2NzkzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4679325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisione",
    "html_url": "https://github.com/barisione",
    "followers_url": "https://api.github.com/users/barisione/followers",
    "following_url": "https://api.github.com/users/barisione/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisione/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisione/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisione/subscriptions",
    "organizations_url": "https://api.github.com/users/barisione/orgs",
    "repos_url": "https://api.github.com/users/barisione/repos",
    "events_url": "https://api.github.com/users/barisione/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisione/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisione",
    "id": 4679325,
    "node_id": "MDQ6VXNlcjQ2NzkzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4679325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisione",
    "html_url": "https://github.com/barisione",
    "followers_url": "https://api.github.com/users/barisione/followers",
    "following_url": "https://api.github.com/users/barisione/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisione/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisione/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisione/subscriptions",
    "organizations_url": "https://api.github.com/users/barisione/orgs",
    "repos_url": "https://api.github.com/users/barisione/repos",
    "events_url": "https://api.github.com/users/barisione/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisione/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4156e38676b80a5816fde4d5def1bedea6e1c5ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4156e38676b80a5816fde4d5def1bedea6e1c5ab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4156e38676b80a5816fde4d5def1bedea6e1c5ab"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 5,
    "deletions": 15
  },
  "files": [
    {
      "sha": "982d157a932814c41789417f062533a6a28c7870",
      "filename": "gdb/ui-out.c",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc/gdb/ui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc/gdb/ui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.c?ref=0d7e3cd15fa770e172f442e1a984809fa8ac0fdc",
      "patch": "@@ -527,13 +527,6 @@ ui_out::field_string (const char *fldname, const char *string,\n   do_field_string (fldno, width, align, fldname, string, style);\n }\n \n-void\n-ui_out::field_string (const char *fldname, const std::string &string,\n-\t\t      const ui_file_style &style)\n-{\n-  field_string (fldname, string.c_str (), style);\n-}\n-\n /* VARARGS */\n void\n ui_out::field_fmt (const char *fldname, const char *format, ...)\n@@ -582,12 +575,6 @@ ui_out::text (const char *string)\n   do_text (string);\n }\n \n-void\n-ui_out::text (const std::string &string)\n-{\n-  text (string.c_str ());\n-}\n-\n void\n ui_out::call_do_message (const ui_file_style &style, const char *format,\n \t\t\t ...)"
    },
    {
      "sha": "ecf62e8b6012d9eb1f97531eaa69b26751a18706",
      "filename": "gdb/ui-out.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc/gdb/ui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d7e3cd15fa770e172f442e1a984809fa8ac0fdc/gdb/ui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.h?ref=0d7e3cd15fa770e172f442e1a984809fa8ac0fdc",
      "patch": "@@ -192,7 +192,10 @@ class ui_out\n   void field_string (const char *fldname, const char *string,\n \t\t     const ui_file_style &style = ui_file_style ());\n   void field_string (const char *fldname, const std::string &string,\n-\t\t     const ui_file_style &style = ui_file_style ());\n+\t\t     const ui_file_style &style = ui_file_style ())\n+  {\n+    field_string (fldname, string.c_str (), style);\n+  }\n   void field_stream (const char *fldname, string_file &stream,\n \t\t     const ui_file_style &style = ui_file_style ());\n   void field_skip (const char *fldname);\n@@ -204,7 +207,7 @@ class ui_out\n \n   void spaces (int numspaces);\n   void text (const char *string);\n-  void text (const std::string &string);\n+  void text (const std::string &string) { text (string.c_str ()); }\n \n   /* Output a printf-style formatted string.  In addition to the usual\n      printf format specs, this supports a few GDB-specific"
    }
  ]
}