{
  "sha": "15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTVjZDkzZDA1ZThlODQ2NDRhY2M4YmJlYWEzZDVmNDI4MGNjNTE1OQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-28T04:12:35Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-28T04:12:35Z"
    },
    "message": "[gdb/symtab] Handle struct decl with DW_AT_signature\n\nConsider a test-case with sources 36.c:\n...\nstruct s { int i; };\nextern void f (void);\nint main (void) {\n  struct s a;\n  f ();\n  return 0;\n}\n...\nand 36b.c:\n...\nstruct s { int j; };\nvoid f (void) {\n  struct s b;\n}\n...\ncompiled like this:\n...\n$ gcc 36.c 36b.c -g\n...\n\nIt contains DWARF like this:\n...\n <0><d2>: Abbrev Number: 1 (DW_TAG_compile_unit)\n    <d8>   DW_AT_name        : 36.c\n <1><f4>: Abbrev Number: 2 (DW_TAG_structure_type)\n    <f5>   DW_AT_name        : s\n <2><fe>: Abbrev Number: 3 (DW_TAG_member)\n    <ff>   DW_AT_name        : i\n <1><110>: Abbrev Number: 5 (DW_TAG_subprogram)\n    <111>   DW_AT_name        : main\n <2><12d>: Abbrev Number: 6 (DW_TAG_variable)\n    <12e>   DW_AT_name        : a\n    <132>   DW_AT_type        : <0xf4>\n <0><146>: Abbrev Number: 1 (DW_TAG_compile_unit)\n    <14c>   DW_AT_name        : 36b.c\n <1><168>: Abbrev Number: 2 (DW_TAG_structure_type)\n    <169>   DW_AT_name        : s\n <2><172>: Abbrev Number: 3 (DW_TAG_member)\n    <173>   DW_AT_name        : j\n <1><184>: Abbrev Number: 5 (DW_TAG_subprogram)\n    <185>   DW_AT_name        : f\n <2><19b>: Abbrev Number: 6 (DW_TAG_variable)\n    <19c>   DW_AT_name        : b\n    <1a0>   DW_AT_type        : <0x168>\n...\n\nAnd when printing \"struct s\", we get first a random one (with int j), and then\ncontext-specific ones (with int i in main, and int j in f):\n...\n$ gdb -batch a.out \\\n  -ex \"ptype struct s\" \\\n  -ex start \\\n  -ex \"ptype struct s\" \\\n  -ex \"break f\" -ex continue \\\n  -ex \"ptype struct s\" \\\n  | grep \"int [ij];\"\n    int j;\n    int i;\n    int j;\n...\nSame for -readnow.\n\nHowever, if we use -fdebug-types-section:\n...\n$ gcc 36.c 36b.c -g -fdebug-types-section\n...\nwe get:\n...\n$ gdb ... | grep \"int [ij];\"\n    int j;\n    int i;\n    int i;\n$ gdb -readnow ... | grep \"int [ij];\"\n    int j;\n    int j;\n    int j;\n...\n\nThis is due to the fact that both \"struct s\" DIEs have been moved to the\n.debug_types section:\n...\n  Compilation Unit @ offset 0x0:\n   Signature:     0xfd1462823bb6f7b7\n <0><17>: Abbrev Number: 1 (DW_TAG_type_unit)\n <1><1d>: Abbrev Number: 2 (DW_TAG_structure_type)\n    <1e>   DW_AT_name        : s\n <2><27>: Abbrev Number: 3 (DW_TAG_member)\n    <28>   DW_AT_name        : i\n  Compilation Unit @ offset 0x3a:\n   Signature:     0x534310fbefba324d\n <0><51>: Abbrev Number: 1 (DW_TAG_type_unit)\n <1><57>: Abbrev Number: 2 (DW_TAG_structure_type)\n    <58>   DW_AT_name        : s\n <2><61>: Abbrev Number: 3 (DW_TAG_member)\n    <62>   DW_AT_name        : j\n...\nand there's no longer a \"struct s\" DIE in the 36.c and\nand 36b.c CUs to specify which \"struct s\" belongs in the CU.  This is gcc\nPR90232.\n\nHowever, using a tentative patch for gcc that adds these DIEs (according to\nDWARF standard: If the complete declaration of a type has been placed in a\nseparate type unit, an incomplete declaration of that type in the compilation\nunit may provide the unique 64-bit signature of the type using a\nDW_AT_signature attribute):\n...\n  <0><d2>: Abbrev Number: 5 (DW_TAG_compile_unit)\n     <d8>   DW_AT_name        : 36.c\n+ <1><f4>: Abbrev Number: 6 (DW_TAG_structure_type)\n+    <f5>   DW_AT_name        : s\n+    <f7>   DW_AT_signature   : signature: 0xfd1462823bb6f7b7\n+    <ff>   DW_AT_declaration : 1\n  <0><13c>: Abbrev Number: 5 (DW_TAG_compile_unit)\n     <142>   DW_AT_name        : 36b.c\n+ <1><15e>: Abbrev Number: 6 (DW_TAG_structure_type)\n+    <15f>   DW_AT_name        : s\n+    <161>   DW_AT_signature   : signature: 0x534310fbefba324d\n+    <169>   DW_AT_declaration : 1\n...\nstill does not help, because they're declarations, so new_symbol is not called\nfor them in process_structure_scope.\n\nFix this by calling new_symbol for these decls.\n\nBuild and tested on x86_64-linux.\n\nAlso tested with target board enabling by default -fdebug-types-section\n-gdwarf-4, and with gcc with aforementioned tentative patch.  In this\nconfiguration, the patch reduces number of FAILs from 2888 to 238.\n\ngdb/ChangeLog:\n\n2020-04-28  Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf2/read.c (process_structure_scope): Add symbol for struct decl\n\twith DW_AT_signature.\n\ngdb/testsuite/ChangeLog:\n\n2020-04-28  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.dwarf2/main-foo.c: New test.\n\t* gdb.dwarf2/struct-with-sig.exp: New file.",
    "tree": {
      "sha": "400712532427c91f20a7757055e25f3a6e420819",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/400712532427c91f20a7757055e25f3a6e420819"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "30b57e1bea5b4bb2b0430e444db3848694d342b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30b57e1bea5b4bb2b0430e444db3848694d342b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/30b57e1bea5b4bb2b0430e444db3848694d342b3"
    }
  ],
  "stats": {
    "total": 188,
    "additions": 187,
    "deletions": 1
  },
  "files": [
    {
      "sha": "76f6cf789611d8685010f127a671189d396f0b1f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-28  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf2/read.c (process_structure_scope): Add symbol for struct decl\n+\twith DW_AT_signature.\n+\n 2020-04-27  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* configure.ac: Remove check for fs_base/gs_base in"
    },
    {
      "sha": "82564edd7b24d44b2a1fb8ba7dc6faebfcf9aedd",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
      "patch": "@@ -15748,7 +15748,8 @@ process_structure_scope (struct die_info *die, struct dwarf2_cu *cu)\n      these DIEs are identified by the fact that they have no byte_size\n      attribute, and a declaration attribute.  */\n   if (dwarf2_attr (die, DW_AT_byte_size, cu) != NULL\n-      || !die_is_declaration (die, cu))\n+      || !die_is_declaration (die, cu)\n+      || dwarf2_attr (die, DW_AT_signature, cu) != NULL)\n     {\n       struct symbol *sym = new_symbol (die, type, cu);\n "
    },
    {
      "sha": "2fef7c587ee442d65be1ce155a72e6b3af9115a1",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-28  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.dwarf2/main-foo.c: New test.\n+\t* gdb.dwarf2/struct-with-sig.exp: New file.\n+\n 2020-04-25  Tom de Vries  <tdevries@suse.de>\n \n \t* boards/debug-types.exp: New file."
    },
    {
      "sha": "82d7b1f40ed436e761d2ff199b1bda87043b114c",
      "filename": "gdb/testsuite/gdb.dwarf2/main-foo.c",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/testsuite/gdb.dwarf2/main-foo.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/testsuite/gdb.dwarf2/main-foo.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/main-foo.c?ref=15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
      "patch": "@@ -0,0 +1,34 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* Dummy foo function.  */\n+\n+void\n+foo (void)\n+{\n+  asm (\"foo_label: .globl foo_label\");\n+}\n+\n+/* Dummy main function.  */\n+\n+int\n+main()\n+{\n+  asm (\"main_label: .globl main_label\");\n+  foo ();\n+  return 0;\n+}"
    },
    {
      "sha": "1ce013dfea60be0b22c1b2047c3dda3bcff12122",
      "filename": "gdb/testsuite/gdb.dwarf2/struct-with-sig.exp",
      "status": "added",
      "additions": 141,
      "deletions": 0,
      "changes": 141,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/testsuite/gdb.dwarf2/struct-with-sig.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/15cd93d05e8e84644acc8bbeaa3d5f4280cc5159/gdb/testsuite/gdb.dwarf2/struct-with-sig.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/struct-with-sig.exp?ref=15cd93d05e8e84644acc8bbeaa3d5f4280cc5159",
      "patch": "@@ -0,0 +1,141 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+standard_testfile main-foo.c .S\n+\n+# Make some DWARF for the test.\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile\n+\n+    lassign [function_range main ${srcdir}/${subdir}/${srcfile}] \\\n+\tmain_start main_length\n+\n+    lassign [function_range foo ${srcdir}/${subdir}/${srcfile}] \\\n+\tfoo_start foo_length\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {DW_AT_language @DW_LANG_C}\n+\t    {DW_AT_name main.c}\n+\t} {\n+\t    structure_type {\n+\t\t{name s}\n+\t\t{signature 0x0000000000000001 ref_sig8}\n+\t\t{declaration 1 flag}\n+\t    }\n+\t    DW_TAG_subprogram {\n+\t\t{name \"main\"}\n+\t\t{low_pc $main_start addr}\n+\t\t{high_pc \"$main_start + $main_length\" addr}\n+\t    }\n+\t}\n+    }\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {DW_AT_language @DW_LANG_C}\n+\t    {DW_AT_name     foo.c}\n+\t} {\n+\t    structure_type {\n+\t\t{name s}\n+\t\t{signature 0x0000000000000002 ref_sig8}\n+\t\t{declaration 1 flag}\n+\t    }\n+\t    DW_TAG_subprogram {\n+\t\t{name \"foo\"}\n+\t\t{low_pc $foo_start addr}\n+\t\t{high_pc \"$foo_start + $foo_length\" addr}\n+\t    }\n+\t}\n+    }\n+\n+    tu {} 0x0000000000000001 the_type_i {\n+\ttype_unit {} {\n+\t    declare_labels int_type\n+\n+\t    the_type_i: structure_type {\n+\t\t{name s}\n+\t\t{byte_size 4 sdata}\n+\t    } {\n+\t\tmember {\n+\t\t    {name i}\n+\t\t    {type :$int_type}\n+\t\t}\n+\t    }\n+\t    int_type: base_type {\n+\t\t{name int}\n+\t\t{encoding @DW_ATE_signed}\n+\t\t{byte_size 4 sdata}\n+\t    }\n+\t}\n+    }\n+\n+    tu {} 0x0000000000000002 the_type_j {\n+\ttype_unit {} {\n+\t    declare_labels int_type\n+\n+\t    the_type_j: structure_type {\n+\t\t{name s}\n+\t\t{byte_size 4 sdata}\n+\t    } {\n+\t\tmember {\n+\t\t    {name j}\n+\t\t    {type :$int_type}\n+\t\t}\n+\t    }\n+\t    int_type: base_type {\n+\t\t{name int}\n+\t\t{encoding @DW_ATE_signed}\n+\t\t{byte_size 4 sdata}\n+\t    }\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+set struct_s_i_re \\\n+    [multi_line \\\n+\t \"type = struct s {\" \\\n+\t \"    int i;\" \\\n+\t \"}\"]\n+set struct_s_j_re \\\n+    [multi_line \\\n+\t \"type = struct s {\" \\\n+\t \"    int j;\" \\\n+\t \"}\"]\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+gdb_test \"ptype struct s\" $struct_s_i_re \\\n+    \"struct s with int i\"\n+\n+gdb_breakpoint \"foo\"\n+gdb_continue_to_breakpoint \"foo\"\n+\n+gdb_test \"ptype struct s\" $struct_s_j_re \\\n+    \"struct s with int j\""
    }
  ]
}