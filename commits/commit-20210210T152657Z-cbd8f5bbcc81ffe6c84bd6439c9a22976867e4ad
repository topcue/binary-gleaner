{
  "sha": "cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2JkOGY1YmJjYzgxZmZlNmM4NGJkNjQzOWM5YTIyOTc2ODY3ZTRhZA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-02-03T14:02:30Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-02-10T15:26:57Z"
    },
    "message": "libctf: require a Tcl capable of try/catch to run tests\n\nThe run_native_host_cmd implementation in testsuite/lib/ctf-lib.exp\nuses try/catch, which are new in Tcl 8.6.  Require a Tcl that knows\nthat try exists, as suggested by Jan Beulich.\n\nlibctf/ChangeLog\n2021-02-03  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* configure.ac (EXPECT): Check for, in order to define...\n\t(TCL_TRY): ... this, if Tcl supports try/catch.\n\t* Makefile.am (TCL_TRY): Run the testsuite only if set.\n\t* configure: Regenerated.\n\t* Makefile.in: Likewise.",
    "tree": {
      "sha": "69084a263c2db6ce7cfe73dc4610c0143fcb7b48",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/69084a263c2db6ce7cfe73dc4610c0143fcb7b48"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "95148614026da7353721411dd020d024667e3482",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95148614026da7353721411dd020d024667e3482",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/95148614026da7353721411dd020d024667e3482"
    }
  ],
  "stats": {
    "total": 176,
    "additions": 138,
    "deletions": 38
  },
  "files": [
    {
      "sha": "135add5a6c23e6b6051e31929972b4031f480d83",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
      "patch": "@@ -1,3 +1,11 @@\n+2021-02-03  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac (EXPECT): Check for, in order to define...\n+\t(TCL_TRY): ... this, if Tcl supports try/catch.\n+\t* Makefile.am (TCL_TRY): Run the testsuite only if set.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Likewise.\n+\n 2021-02-02  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* configure.ac (CTF_LIBADD): Remove explicit -lintl population in"
    },
    {
      "sha": "03fd6cce0e016005717e75deea5792f2fc99ad1d",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
      "patch": "@@ -62,6 +62,7 @@ EXPECT = expect\n RUNTEST = runtest\n RUNTESTFLAGS =\n \n+if TCL_TRY\n CC_FOR_TARGET = ` \\\n   if [ -f $$r/../gcc/xgcc ] ; then \\\n     if [ -f $$r/../newlib/Makefile ] ; then \\\n@@ -100,3 +101,4 @@ CONFIG_STATUS_DEPENDENCIES = $(BFDDIR)/development.sh\n EXTRA_DEJAGNU_SITE_CONFIG = development.exp\n \n DISTCLEANFILES = site.exp development.exp\n+endif"
    },
    {
      "sha": "7e0dd0912bc3f771189929d7e9b2411d42897f7b",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 48,
      "deletions": 36,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
      "patch": "@@ -330,6 +330,9 @@ ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n+\n+# Setup the testing framework, if you have one\n+EXPECT = expect\n FGREP = @FGREP@\n GENCAT = @GENCAT@\n GMSGFMT = @GMSGFMT@\n@@ -468,31 +471,28 @@ libctf_la_LIBADD = ../bfd/libbfd.la $(libctf_nobfd_la_LIBADD)\n libctf_la_CPPFLAGS = $(AM_CPPFLAGS) -DNOBFD=0\n libctf_la_LDFLAGS = $(libctf_nobfd_la_LDFLAGS)\n libctf_la_SOURCES = $(libctf_nobfd_la_SOURCES) ctf-open-bfd.c\n-\n-# Setup the testing framework, if you have one\n-EXPECT = expect\n RUNTEST = runtest\n RUNTESTFLAGS = \n-CC_FOR_TARGET = ` \\\n-  if [ -f $$r/../gcc/xgcc ] ; then \\\n-    if [ -f $$r/../newlib/Makefile ] ; then \\\n-      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \\\n-    else \\\n-      echo $$r/../gcc/xgcc -B$$r/../gcc/; \\\n-    fi; \\\n-  else \\\n-    if [ \"@host@\" = \"@target@\" ] ; then \\\n-      echo $(CC); \\\n-    else \\\n-      echo gcc | sed '$(transform)'; \\\n-    fi; \\\n-  fi`\n+@TCL_TRY_TRUE@CC_FOR_TARGET = ` \\\n+@TCL_TRY_TRUE@  if [ -f $$r/../gcc/xgcc ] ; then \\\n+@TCL_TRY_TRUE@    if [ -f $$r/../newlib/Makefile ] ; then \\\n+@TCL_TRY_TRUE@      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \\\n+@TCL_TRY_TRUE@    else \\\n+@TCL_TRY_TRUE@      echo $$r/../gcc/xgcc -B$$r/../gcc/; \\\n+@TCL_TRY_TRUE@    fi; \\\n+@TCL_TRY_TRUE@  else \\\n+@TCL_TRY_TRUE@    if [ \"@host@\" = \"@target@\" ] ; then \\\n+@TCL_TRY_TRUE@      echo $(CC); \\\n+@TCL_TRY_TRUE@    else \\\n+@TCL_TRY_TRUE@      echo gcc | sed '$(transform)'; \\\n+@TCL_TRY_TRUE@    fi; \\\n+@TCL_TRY_TRUE@  fi`\n \n \n # development.sh is used to determine -Werror default.\n-CONFIG_STATUS_DEPENDENCIES = $(BFDDIR)/development.sh\n-EXTRA_DEJAGNU_SITE_CONFIG = development.exp\n-DISTCLEANFILES = site.exp development.exp\n+@TCL_TRY_TRUE@CONFIG_STATUS_DEPENDENCIES = $(BFDDIR)/development.sh\n+@TCL_TRY_TRUE@EXTRA_DEJAGNU_SITE_CONFIG = development.exp\n+@TCL_TRY_TRUE@DISTCLEANFILES = site.exp development.exp\n all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -995,6 +995,18 @@ cscopelist-am: $(am__tagged_files)\n distclean-tags:\n \t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n \t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+\n+@TCL_TRY_FALSE@check-DEJAGNU: site.exp\n+@TCL_TRY_FALSE@\tsrcdir='$(srcdir)'; export srcdir; \\\n+@TCL_TRY_FALSE@\tEXPECT=$(EXPECT); export EXPECT; \\\n+@TCL_TRY_FALSE@\tif $(SHELL) -c \"$(RUNTEST) --version\" > /dev/null 2>&1; then \\\n+@TCL_TRY_FALSE@\t  exit_status=0; l='$(DEJATOOL)'; for tool in $$l; do \\\n+@TCL_TRY_FALSE@\t    if $(RUNTEST) $(AM_RUNTESTFLAGS) $(RUNTESTDEFAULTFLAGS) $(RUNTESTFLAGS); \\\n+@TCL_TRY_FALSE@\t    then :; else exit_status=1; fi; \\\n+@TCL_TRY_FALSE@\t  done; \\\n+@TCL_TRY_FALSE@\telse echo \"WARNING: could not find '$(RUNTEST)'\" 1>&2; :;\\\n+@TCL_TRY_FALSE@\tfi; \\\n+@TCL_TRY_FALSE@\texit $$exit_status\n site.exp: Makefile $(EXTRA_DEJAGNU_SITE_CONFIG)\n \t@echo 'Making a new site.exp file ...'\n \t@echo '## these variables are automatically generated by make ##' >site.tmp\n@@ -1327,22 +1339,22 @@ uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n .PRECIOUS: Makefile\n \n \n-check-DEJAGNU: site.exp development.exp\n-\tsrcroot=`cd $(srcdir) && pwd`; export srcroot; \\\n-\tr=`pwd`; export r; \\\n-\tLC_ALL=C; export LC_ALL; \\\n-\tEXPECT=$(EXPECT); export EXPECT; \\\n-\truntest=$(RUNTEST); \\\n-\tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n-\t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n-\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n-\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n-\telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n-\tfi\n-\n-development.exp: $(BFDDIR)/development.sh\n-\t$(EGREP) \"(development|experimental)=\" $(BFDDIR)/development.sh  \\\n-\t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n+@TCL_TRY_TRUE@check-DEJAGNU: site.exp development.exp\n+@TCL_TRY_TRUE@\tsrcroot=`cd $(srcdir) && pwd`; export srcroot; \\\n+@TCL_TRY_TRUE@\tr=`pwd`; export r; \\\n+@TCL_TRY_TRUE@\tLC_ALL=C; export LC_ALL; \\\n+@TCL_TRY_TRUE@\tEXPECT=$(EXPECT); export EXPECT; \\\n+@TCL_TRY_TRUE@\truntest=$(RUNTEST); \\\n+@TCL_TRY_TRUE@\tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n+@TCL_TRY_TRUE@\t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n+@TCL_TRY_TRUE@\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n+@TCL_TRY_TRUE@\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n+@TCL_TRY_TRUE@\telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n+@TCL_TRY_TRUE@\tfi\n+\n+@TCL_TRY_TRUE@development.exp: $(BFDDIR)/development.sh\n+@TCL_TRY_TRUE@\t$(EGREP) \"(development|experimental)=\" $(BFDDIR)/development.sh  \\\n+@TCL_TRY_TRUE@\t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."
    },
    {
      "sha": "902eadd5d7a87bb1569d58091a797523ab06be0f",
      "filename": "libctf/configure",
      "status": "modified",
      "additions": 71,
      "deletions": 2,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure?ref=cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
      "patch": "@@ -636,6 +636,9 @@ am__EXEEXT_TRUE\n LTLIBOBJS\n LIBOBJS\n VERSION_FLAGS\n+TCL_TRY_FALSE\n+TCL_TRY_TRUE\n+EXPECT\n CTF_LIBADD\n SHARED_LDFLAGS\n NEED_CTF_QSORT_R_FALSE\n@@ -11539,7 +11542,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11542 \"configure\"\n+#line 11545 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11645,7 +11648,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11648 \"configure\"\n+#line 11651 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13391,6 +13394,68 @@ fi\n \n \n \n+# Extract the first word of \"expect\", so it can be a program name with args.\n+set dummy expect; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_path_EXPECT+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  case $EXPECT in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_EXPECT=\"$EXPECT\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_EXPECT=\"$as_dir/$ac_word$ac_exec_ext\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+  ;;\n+esac\n+fi\n+EXPECT=$ac_cv_path_EXPECT\n+if test -n \"$EXPECT\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $EXPECT\" >&5\n+$as_echo \"$EXPECT\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for Tcl supporting try/catch\" >&5\n+$as_echo_n \"checking for Tcl supporting try/catch... \" >&6; }\n+if ${ac_cv_libctf_tcl_try+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_cv_libctf_tcl_try=`if test -z $EXPECT; then echo no; else $EXPECT << EOF\n+if [llength [info commands try]] then { puts yes } else { puts no }\n+EOF\n+fi`\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_libctf_tcl_try\" >&5\n+$as_echo \"$ac_cv_libctf_tcl_try\" >&6; }\n+ if test \"${ac_cv_libctf_tcl_try}\" = yes; then\n+  TCL_TRY_TRUE=\n+  TCL_TRY_FALSE='#'\n+else\n+  TCL_TRY_TRUE='#'\n+  TCL_TRY_FALSE=\n+fi\n+\n+\n # Use a version script, if possible, or an -export-symbols-regex otherwise.\n VERSION_FLAGS='-export-symbols-regex ctf_.*'\n if $LD --help 2>&1 | grep -- --version-script >/dev/null; then\n@@ -13552,6 +13617,10 @@ if test -z \"${NEED_CTF_QSORT_R_TRUE}\" && test -z \"${NEED_CTF_QSORT_R_FALSE}\"; th\n   as_fn_error $? \"conditional \\\"NEED_CTF_QSORT_R\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${TCL_TRY_TRUE}\" && test -z \"${TCL_TRY_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"TCL_TRY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : \"${CONFIG_STATUS=./config.status}\"\n ac_write_fail=0"
    },
    {
      "sha": "c6b80442e07a62bcea2c98b61cc38a00d1d51e5e",
      "filename": "libctf/configure.ac",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad/libctf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure.ac?ref=cbd8f5bbcc81ffe6c84bd6439c9a22976867e4ad",
      "patch": "@@ -205,6 +205,15 @@ fi\n AC_SUBST(SHARED_LDFLAGS)\n AC_SUBST(CTF_LIBADD)\n \n+AC_PATH_PROG([EXPECT], [expect])\n+AC_CACHE_CHECK([for Tcl supporting try/catch], [ac_cv_libctf_tcl_try],\n+  [ac_cv_libctf_tcl_try=`if test -z $EXPECT; then echo no; else $EXPECT << EOF\n+if @<:@llength @<:@info commands try@:>@@:>@ then { puts yes } else { puts no }\n+EOF\n+fi`\n+])\n+AM_CONDITIONAL(TCL_TRY, test \"${ac_cv_libctf_tcl_try}\" = yes)\n+\n # Use a version script, if possible, or an -export-symbols-regex otherwise.\n VERSION_FLAGS='-export-symbols-regex ctf_.*'\n if $LD --help 2>&1 | grep -- --version-script >/dev/null; then"
    }
  ]
}