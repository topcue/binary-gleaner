{
  "sha": "bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmJmOWEwYjVlZWYzNTk5YTFjNmE3YTNiZWE0MGRhOWYyYzM3ZGY4Mw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-28T16:15:34Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-28T16:15:34Z"
    },
    "message": "Fix buffer overrun in TIC30 disassembler.\n\n\t* tic30-dis.c (OPERAND_BUFFER_LEN): Define.  Use as length of\n\toperand buffer.  Set value to 15 not 13.\n\t(get_register_operand): Use OPERAND_BUFFER_LEN.\n\t(get_indirect_operand): Likewise.\n\t(print_two_operand): Likewise.\n\t(print_three_operand): Likewise.\n\t(print_oar_insn): Likewise.",
    "tree": {
      "sha": "6b215c99843eb341366c52988e4933ef192f730e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6b215c99843eb341366c52988e4933ef192f730e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d1e304bc27b737e0e7daf0029dd5f1e91a4898ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1e304bc27b737e0e7daf0029dd5f1e91a4898ed",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d1e304bc27b737e0e7daf0029dd5f1e91a4898ed"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 27,
    "deletions": 7
  },
  "files": [
    {
      "sha": "8489b4078823c0fb2491087c6d8fdb3a8242bcbd",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83",
      "patch": "@@ -1,3 +1,13 @@\n+2019-10-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* tic30-dis.c (OPERAND_BUFFER_LEN): Define.  Use as length of\n+\toperand buffer.  Set value to 15 not 13.\n+\t(get_register_operand): Use OPERAND_BUFFER_LEN.\n+\t(get_indirect_operand): Likewise.\n+\t(print_two_operand): Likewise.\n+\t(print_three_operand): Likewise.\n+\t(print_oar_insn): Likewise.\n+\n 2019-10-28  Nick Clifton  <nickc@redhat.com>\n \n \t* ns32k-dis.c (bit_extract): Add sanitiy check of parameters."
    },
    {
      "sha": "a28be8307f8190c596bf3913cfc625d53401d2e2",
      "filename": "opcodes/tic30-dis.c",
      "status": "modified",
      "additions": 17,
      "deletions": 7,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83/opcodes/tic30-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83/opcodes/tic30-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/tic30-dis.c?ref=bbf9a0b5eef3599a1c6a7a3bea40da9f2c37df83",
      "patch": "@@ -188,6 +188,8 @@ get_tic30_instruction (unsigned long insn_word, struct instruction *insn)\n   return 1;\n }\n \n+#define OPERAND_BUFFER_LEN 15\n+\n static int\n get_register_operand (unsigned char fragment, char *buffer)\n {\n@@ -199,7 +201,8 @@ get_register_operand (unsigned char fragment, char *buffer)\n     {\n       if ((fragment & 0x1F) == current_reg->opcode)\n \t{\n-\t  strcpy (buffer, current_reg->name);\n+\t  strncpy (buffer, current_reg->name, OPERAND_BUFFER_LEN);\n+\t  buffer[OPERAND_BUFFER_LEN - 1] = 0;\n \t  return 1;\n \t}\n     }\n@@ -250,18 +253,25 @@ get_indirect_operand (unsigned short fragment,\n \t\tint bufcnt;\n \n \t\tlen = strlen (current_ind->syntax);\n+\n \t\tfor (i = 0, bufcnt = 0; i < len; i++, bufcnt++)\n \t\t  {\n \t\t    buffer[bufcnt] = current_ind->syntax[i];\n+\n \t\t    if (bufcnt > 0\n+\t\t\t&& bufcnt < OPERAND_BUFFER_LEN - 1\n \t\t\t&& buffer[bufcnt - 1] == 'a'\n \t\t\t&& buffer[bufcnt] == 'r')\n \t\t      buffer[++bufcnt] = arnum + '0';\n-\t\t    if (buffer[bufcnt] == '('\n+\t\t    \n+\t\t    if (bufcnt < OPERAND_BUFFER_LEN - 1\n+\t\t\t&& buffer[bufcnt] == '('\n \t\t\t&& current_ind->displacement == DISP_REQUIRED)\n \t\t      {\n-\t\t\tsprintf (&buffer[bufcnt + 1], \"%u\", disp);\n-\t\t\tbufcnt += strlen (&buffer[bufcnt + 1]);\n+\t\t\tsnprintf (buffer + (bufcnt + 1),\n+\t\t\t\t OPERAND_BUFFER_LEN - (bufcnt + 1),\n+\t\t\t\t \"%u\", disp);\n+\t\t\tbufcnt += strlen (buffer + (bufcnt + 1));\n \t\t      }\n \t\t  }\n \t\tbuffer[bufcnt + 1] = '\\0';\n@@ -342,7 +352,7 @@ print_two_operand (disassemble_info *info,\n \t\t   struct instruction *insn)\n {\n   char name[12];\n-  char operand[2][13] =\n+  char operand[2][OPERAND_BUFFER_LEN] =\n   {\n     {0},\n     {0}\n@@ -429,7 +439,7 @@ print_three_operand (disassemble_info *info,\n \t\t     unsigned long insn_word,\n \t\t     struct instruction *insn)\n {\n-  char operand[3][13] =\n+  char operand[3][OPERAND_BUFFER_LEN] =\n   {\n     {0},\n     {0},\n@@ -475,7 +485,7 @@ print_par_insn (disassemble_info *info,\n {\n   size_t i, len;\n   char *name1, *name2;\n-  char operand[2][3][13] =\n+  char operand[2][3][OPERAND_BUFFER_LEN] =\n   {\n     {\n       {0},"
    }
  ]
}