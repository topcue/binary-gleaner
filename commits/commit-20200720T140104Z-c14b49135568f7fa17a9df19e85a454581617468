{
  "sha": "c14b49135568f7fa17a9df19e85a454581617468",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzE0YjQ5MTM1NTY4ZjdmYTE3YTlkZjE5ZTg1YTQ1NDU4MTYxNzQ2OA==",
  "commit": {
    "author": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-07-20T14:01:04Z"
    },
    "committer": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-07-20T14:01:04Z"
    },
    "message": "Skip tests requiring \"alignof (void)\" when compiling using clang\n\nAs an extension, GCC allows void pointer arithmetic, with sizeof(void)\nand alignof(void) both 1.  GDB supports this extension, but clang does\nnot, and fails to compile the generated output of gdb.cp/align.exp\nwith the following error:\n\n gdb compile failed, /gdbtest/build/gdb/testsuite/outputs/gdb.cp/align/align.cc:28:23:\n       error: invalid application of 'alignof' to an incomplete type 'void'\n    unsigned a_void = alignof (void);\n                      ^       ~~~~~~\n 1 error generated.\n\nThis commit adds preprocessor conditionals to the generated output, to\nomit the unsupported code when using clang, and supplies the expected\nvalue so the test can complete.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.cp/align.exp: Fix \"alignof (void)\" tests when compiling\n\twith clang.",
    "tree": {
      "sha": "b79f0023808b02c3cd4e90925c6434fbd1255fc1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b79f0023808b02c3cd4e90925c6434fbd1255fc1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c14b49135568f7fa17a9df19e85a454581617468",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c14b49135568f7fa17a9df19e85a454581617468",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c14b49135568f7fa17a9df19e85a454581617468",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c14b49135568f7fa17a9df19e85a454581617468/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "39326c35dd8f1a154cfe15ca640d73873f2df572",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39326c35dd8f1a154cfe15ca640d73873f2df572",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/39326c35dd8f1a154cfe15ca640d73873f2df572"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 17,
    "deletions": 1
  },
  "files": [
    {
      "sha": "d0b848bb3d8370d9358365b6965d0787a3503e7a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c14b49135568f7fa17a9df19e85a454581617468/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c14b49135568f7fa17a9df19e85a454581617468/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c14b49135568f7fa17a9df19e85a454581617468",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-20  Gary Benson <gbenson@redhat.com>\n+\n+\t* gdb.cp/align.exp: Fix \"alignof (void)\" tests when compiling\n+\twith clang.\n+\n 2020-07-20  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.threads/omp-par-scope.c (lock, lock2): New variable."
    },
    {
      "sha": "4894de02731d4500a8197d7e6bebde29667362de",
      "filename": "gdb/testsuite/gdb.cp/align.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c14b49135568f7fa17a9df19e85a454581617468/gdb/testsuite/gdb.cp/align.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c14b49135568f7fa17a9df19e85a454581617468/gdb/testsuite/gdb.cp/align.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/align.exp?ref=c14b49135568f7fa17a9df19e85a454581617468",
      "patch": "@@ -80,7 +80,9 @@ puts $outfile {\n \n     unsigned a_int3 = alignof (int[3]);\n \n+#if !defined (__clang__)\n     unsigned a_void = alignof (void);\n+#endif\n \n     struct base { char c; };\n     struct derived : public virtual base { int i; };\n@@ -170,5 +172,14 @@ foreach type $typelist {\n \n set expected [get_integer_valueof a_int3 0]\n gdb_test \"print alignof(int\\[3\\])\" \" = $expected\"\n-set expected [get_integer_valueof a_void 0]\n+\n+# As an extension, GCC allows void pointer arithmetic, with\n+# sizeof(void) and alignof(void) both 1.  This test checks\n+# GDB's support of GCC's extension.\n+if [test_compiler_info clang*] {\n+    # Clang doesn't support GCC's extension.\n+    set expected 1\n+} else {\n+    set expected [get_integer_valueof a_void 0]\n+}\n gdb_test \"print alignof(void)\" \" = $expected\""
    }
  ]
}