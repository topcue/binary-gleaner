{
  "sha": "4ca51187d21562b6626eea2bd0e45f6b64719dfd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGNhNTExODdkMjE1NjJiNjYyNmVlYTJiZDBlNDVmNmI2NDcxOWRmZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-22T19:41:28Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-22T19:41:28Z"
    },
    "message": "Constify target_ops::follow_exec\n\nI noticed that target_ops::follow_exec took a \"char *\" parameter,\nwhere \"const char *\" would be more correct.  This patch changes this\n(and related functions) to be constified.\n\nTested by rebuilding.\n\ngdb/ChangeLog\n2019-05-22  Tom Tromey  <tromey@adacore.com>\n\n\t* target.c (target_follow_exec): Constify parameter.\n\t* target-delegates.c: Rebuild.\n\t* remote.c (remote_target::follow_exec): Constify parameter.\n\t* infrun.c (follow_exec): Constify parameter.\n\t* target.h (struct target_ops) <follow_exec>: Constify parameter.\n\t(target_follow_exec): Likewise.",
    "tree": {
      "sha": "495ae47403983a234de936f10b05289268195175",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/495ae47403983a234de936f10b05289268195175"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ca51187d21562b6626eea2bd0e45f6b64719dfd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ca51187d21562b6626eea2bd0e45f6b64719dfd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ca51187d21562b6626eea2bd0e45f6b64719dfd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ca51187d21562b6626eea2bd0e45f6b64719dfd/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "18125b163947bfd0c358d4a5acf4e0e3b43b64cf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18125b163947bfd0c358d4a5acf4e0e3b43b64cf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/18125b163947bfd0c358d4a5acf4e0e3b43b64cf"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 21,
    "deletions": 12
  },
  "files": [
    {
      "sha": "87ae3721764ab18fa963845f8a17564d96f3998c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4ca51187d21562b6626eea2bd0e45f6b64719dfd",
      "patch": "@@ -1,3 +1,12 @@\n+2019-05-22  Tom Tromey  <tromey@adacore.com>\n+\n+\t* target.c (target_follow_exec): Constify parameter.\n+\t* target-delegates.c: Rebuild.\n+\t* remote.c (remote_target::follow_exec): Constify parameter.\n+\t* infrun.c (follow_exec): Constify parameter.\n+\t* target.h (struct target_ops) <follow_exec>: Constify parameter.\n+\t(target_follow_exec): Likewise.\n+\n 2019-05-22  Alan Hayward  <alan.hayward@arm.com>\n \n \t* aarch64-tdep.c (aarch64_execute_dwarf_cfa_vendor_op): Treat"
    },
    {
      "sha": "4fd92f1bac25e50401f8a85e3630e322e7b14965",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=4ca51187d21562b6626eea2bd0e45f6b64719dfd",
      "patch": "@@ -1078,7 +1078,7 @@ show_follow_exec_mode_string (struct ui_file *file, int from_tty,\n /* EXEC_FILE_TARGET is assumed to be non-NULL.  */\n \n static void\n-follow_exec (ptid_t ptid, char *exec_file_target)\n+follow_exec (ptid_t ptid, const char *exec_file_target)\n {\n   struct inferior *inf = current_inferior ();\n   int pid = ptid.pid ();"
    },
    {
      "sha": "124d254478e17485829ed2948120ca4249cd19a8",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=4ca51187d21562b6626eea2bd0e45f6b64719dfd",
      "patch": "@@ -667,7 +667,7 @@ class remote_target : public process_stratum_target\n   const struct btrace_config *btrace_conf (const struct btrace_target_info *) override;\n   bool augmented_libraries_svr4_read () override;\n   int follow_fork (int, int) override;\n-  void follow_exec (struct inferior *, char *) override;\n+  void follow_exec (struct inferior *, const char *) override;\n   int insert_fork_catchpoint (int) override;\n   int remove_fork_catchpoint (int) override;\n   int insert_vfork_catchpoint (int) override;\n@@ -5751,7 +5751,7 @@ remote_target::follow_fork (int follow_child, int detach_fork)\n    follow-exec-mode is \"new\".  */\n \n void\n-remote_target::follow_exec (struct inferior *inf, char *execd_pathname)\n+remote_target::follow_exec (struct inferior *inf, const char *execd_pathname)\n {\n   /* We know that this is a target file name, so if it has the \"target:\"\n      prefix we strip it off before saving it in the program space.  */"
    },
    {
      "sha": "52034fe4360754077a0a985ffb713f7c7f95d5ae",
      "filename": "gdb/target-delegates.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/target-delegates.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/target-delegates.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-delegates.c?ref=4ca51187d21562b6626eea2bd0e45f6b64719dfd",
      "patch": "@@ -59,7 +59,7 @@ struct dummy_target : public target_ops\n   int follow_fork (int arg0, int arg1) override;\n   int insert_exec_catchpoint (int arg0) override;\n   int remove_exec_catchpoint (int arg0) override;\n-  void follow_exec (struct inferior *arg0, char *arg1) override;\n+  void follow_exec (struct inferior *arg0, const char *arg1) override;\n   int set_syscall_catchpoint (int arg0, bool arg1, int arg2, gdb::array_view<const int> arg3) override;\n   void mourn_inferior () override;\n   void pass_signals (gdb::array_view<const unsigned char> arg0) override;\n@@ -227,7 +227,7 @@ struct debug_target : public target_ops\n   int follow_fork (int arg0, int arg1) override;\n   int insert_exec_catchpoint (int arg0) override;\n   int remove_exec_catchpoint (int arg0) override;\n-  void follow_exec (struct inferior *arg0, char *arg1) override;\n+  void follow_exec (struct inferior *arg0, const char *arg1) override;\n   int set_syscall_catchpoint (int arg0, bool arg1, int arg2, gdb::array_view<const int> arg3) override;\n   void mourn_inferior () override;\n   void pass_signals (gdb::array_view<const unsigned char> arg0) override;\n@@ -1585,25 +1585,25 @@ debug_target::remove_exec_catchpoint (int arg0)\n }\n \n void\n-target_ops::follow_exec (struct inferior *arg0, char *arg1)\n+target_ops::follow_exec (struct inferior *arg0, const char *arg1)\n {\n   this->beneath ()->follow_exec (arg0, arg1);\n }\n \n void\n-dummy_target::follow_exec (struct inferior *arg0, char *arg1)\n+dummy_target::follow_exec (struct inferior *arg0, const char *arg1)\n {\n }\n \n void\n-debug_target::follow_exec (struct inferior *arg0, char *arg1)\n+debug_target::follow_exec (struct inferior *arg0, const char *arg1)\n {\n   fprintf_unfiltered (gdb_stdlog, \"-> %s->follow_exec (...)\\n\", this->beneath ()->shortname ());\n   this->beneath ()->follow_exec (arg0, arg1);\n   fprintf_unfiltered (gdb_stdlog, \"<- %s->follow_exec (\", this->beneath ()->shortname ());\n   target_debug_print_struct_inferior_p (arg0);\n   fputs_unfiltered (\", \", gdb_stdlog);\n-  target_debug_print_char_p (arg1);\n+  target_debug_print_const_char_p (arg1);\n   fputs_unfiltered (\")\\n\", gdb_stdlog);\n }\n "
    },
    {
      "sha": "752e62b022f81a895cf8672173d580d2dc4127ce",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=4ca51187d21562b6626eea2bd0e45f6b64719dfd",
      "patch": "@@ -2175,7 +2175,7 @@ target_follow_fork (int follow_child, int detach_fork)\n /* Target wrapper for follow exec hook.  */\n \n void\n-target_follow_exec (struct inferior *inf, char *execd_pathname)\n+target_follow_exec (struct inferior *inf, const char *execd_pathname)\n {\n   current_top_target ()->follow_exec (inf, execd_pathname);\n }"
    },
    {
      "sha": "323357ca5503cea8f32f7bd5e4403214cf4b1034",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca51187d21562b6626eea2bd0e45f6b64719dfd/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=4ca51187d21562b6626eea2bd0e45f6b64719dfd",
      "patch": "@@ -622,7 +622,7 @@ struct target_ops\n       TARGET_DEFAULT_RETURN (1);\n     virtual int remove_exec_catchpoint (int)\n       TARGET_DEFAULT_RETURN (1);\n-    virtual void follow_exec (struct inferior *, char *)\n+    virtual void follow_exec (struct inferior *, const char *)\n       TARGET_DEFAULT_IGNORE ();\n     virtual int set_syscall_catchpoint (int, bool, int,\n \t\t\t\t\tgdb::array_view<const int>)\n@@ -1637,7 +1637,7 @@ int target_follow_fork (int follow_child, int detach_fork);\n /* Handle the target-specific bookkeeping required when the inferior\n    makes an exec call.  INF is the exec'd inferior.  */\n \n-void target_follow_exec (struct inferior *inf, char *execd_pathname);\n+void target_follow_exec (struct inferior *inf, const char *execd_pathname);\n \n /* On some targets, we can catch an inferior exec event when it\n    occurs.  These functions insert/remove an already-created"
    }
  ]
}