{
  "sha": "694c6bf5425024a8654a5541dec88e4dd6ddafb5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njk0YzZiZjU0MjUwMjRhODY1NGE1NTQxZGVjODhlNGRkNmRkYWZiNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-23T18:58:33Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-01-23T19:05:50Z"
    },
    "message": "Remove make_bpstat_clear_actions_cleanup\n\nThis removes make_bpstat_clear_actions_cleanup, replacing it with uses\nof scope_exit.\n\ngdb/ChangeLog:\n2019-01-23  Tom Tromey  <tom@tromey.com>\n\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n\t    Pedro Alves  <palves@redhat.com>\n\n\t* infrun.c (fetch_inferior_event): Use scope_exit.\n\t* utils.h (make_bpstat_clear_actions_cleanup): Don't declare.\n\t* top.c (execute_command): Use scope_exit.\n\t* breakpoint.c (bpstat_do_actions): Use scope_exit.\n\t* utils.c (do_bpstat_clear_actions_cleanup)\n\t(make_bpstat_clear_actions_cleanup): Remove.",
    "tree": {
      "sha": "41d60d864814e18ddffe9477d443d7edd1f85d2a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41d60d864814e18ddffe9477d443d7edd1f85d2a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/694c6bf5425024a8654a5541dec88e4dd6ddafb5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/694c6bf5425024a8654a5541dec88e4dd6ddafb5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/694c6bf5425024a8654a5541dec88e4dd6ddafb5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/694c6bf5425024a8654a5541dec88e4dd6ddafb5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4c41382ac101f10071f92074bab7c33242ef5b15",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c41382ac101f10071f92074bab7c33242ef5b15",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4c41382ac101f10071f92074bab7c33242ef5b15"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 20,
    "deletions": 27
  },
  "files": [
    {
      "sha": "b10e0514023aa947b9d3d65b147d99067fc61e4c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=694c6bf5425024a8654a5541dec88e4dd6ddafb5",
      "patch": "@@ -1,3 +1,14 @@\n+2019-01-23  Tom Tromey  <tom@tromey.com>\n+\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n+\t    Pedro Alves  <palves@redhat.com>\n+\n+\t* infrun.c (fetch_inferior_event): Use scope_exit.\n+\t* utils.h (make_bpstat_clear_actions_cleanup): Don't declare.\n+\t* top.c (execute_command): Use scope_exit.\n+\t* breakpoint.c (bpstat_do_actions): Use scope_exit.\n+\t* utils.c (do_bpstat_clear_actions_cleanup)\n+\t(make_bpstat_clear_actions_cleanup): Remove.\n+\n 2019-01-23  Tom Tromey  <tom@tromey.com>\n \t    Pedro Alves  <palves@redhat.com>\n "
    },
    {
      "sha": "f9dd1944876aa72679b4df6a8775f7ee7c6baddb",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=694c6bf5425024a8654a5541dec88e4dd6ddafb5",
      "patch": "@@ -4468,7 +4468,7 @@ get_bpstat_thread ()\n void\n bpstat_do_actions (void)\n {\n-  struct cleanup *cleanup_if_error = make_bpstat_clear_actions_cleanup ();\n+  auto cleanup_if_error = make_scope_exit (bpstat_clear_actions);\n   thread_info *tp;\n \n   /* Do any commands attached to breakpoint we are stopped at.  */\n@@ -4482,7 +4482,7 @@ bpstat_do_actions (void)\n \tbreak;\n     }\n \n-  discard_cleanups (cleanup_if_error);\n+  cleanup_if_error.release ();\n }\n \n /* Print out the (old or new) value associated with a watchpoint.  */"
    },
    {
      "sha": "76dedd272a03d16d3cc867c5b277b2a28c4bf299",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=694c6bf5425024a8654a5541dec88e4dd6ddafb5",
      "patch": "@@ -3745,8 +3745,8 @@ fetch_inferior_event (void *client_data)\n \n   /* Get executed before make_cleanup_restore_current_thread above to apply\n      still for the thread which has thrown the exception.  */\n-  struct cleanup *ts_old_chain = make_bpstat_clear_actions_cleanup ();\n-\n+  auto defer_bpstat_clear\n+    = make_scope_exit (bpstat_clear_actions);\n   auto defer_delete_threads\n     = make_scope_exit (delete_just_stopped_threads_infrun_breakpoints);\n \n@@ -3802,7 +3802,7 @@ fetch_inferior_event (void *client_data)\n     }\n \n   defer_delete_threads.release ();\n-  discard_cleanups (ts_old_chain);\n+  defer_bpstat_clear.release ();\n \n   /* No error, don't finish the thread states yet.  */\n   finish_state.release ();"
    },
    {
      "sha": "cf6a6abc7de0c9df75fbdb153eaa850c6344e008",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=694c6bf5425024a8654a5541dec88e4dd6ddafb5",
      "patch": "@@ -52,6 +52,7 @@\n #include \"frame.h\"\n #include \"buffer.h\"\n #include \"gdb_select.h\"\n+#include \"common/scope-exit.h\"\n \n /* readline include files.  */\n #include \"readline/readline.h\"\n@@ -539,12 +540,11 @@ set_repeat_arguments (const char *args)\n void\n execute_command (const char *p, int from_tty)\n {\n-  struct cleanup *cleanup_if_error;\n   struct cmd_list_element *c;\n   const char *line;\n   const char *cmd_start = p;\n \n-  cleanup_if_error = make_bpstat_clear_actions_cleanup ();\n+  auto cleanup_if_error = make_scope_exit (bpstat_clear_actions);\n   scoped_value_mark cleanup = prepare_execute_command ();\n \n   /* Force cleanup of any alloca areas if using C alloca instead of\n@@ -554,7 +554,7 @@ execute_command (const char *p, int from_tty)\n   /* This can happen when command_line_input hits end of file.  */\n   if (p == NULL)\n     {\n-      discard_cleanups (cleanup_if_error);\n+      cleanup_if_error.release ();\n       return;\n     }\n \n@@ -649,7 +649,7 @@ execute_command (const char *p, int from_tty)\n   if (has_stack_frames () && inferior_thread ()->state != THREAD_RUNNING)\n     check_frame_language_change ();\n \n-  discard_cleanups (cleanup_if_error);\n+  cleanup_if_error.release ();\n }\n \n /* Run execute_command for P and FROM_TTY.  Capture its output into the"
    },
    {
      "sha": "4af75e348099c62a2a55f52d10fd0d40006065ed",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=694c6bf5425024a8654a5541dec88e4dd6ddafb5",
      "patch": "@@ -3057,23 +3057,6 @@ parse_pid_to_attach (const char *args)\n   return pid;\n }\n \n-/* Helper for make_bpstat_clear_actions_cleanup.  */\n-\n-static void\n-do_bpstat_clear_actions_cleanup (void *unused)\n-{\n-  bpstat_clear_actions ();\n-}\n-\n-/* Call bpstat_clear_actions for the case an exception is throw.  You should\n-   discard_cleanups if no exception is caught.  */\n-\n-struct cleanup *\n-make_bpstat_clear_actions_cleanup (void)\n-{\n-  return make_cleanup (do_bpstat_clear_actions_cleanup, NULL);\n-}\n-\n /* Substitute all occurences of string FROM by string TO in *STRINGP.  *STRINGP\n    must come from xrealloc-compatible allocator and it may be updated.  FROM\n    needs to be delimited by IS_DIR_SEPARATOR or DIRNAME_SEPARATOR (or be"
    },
    {
      "sha": "896feb973c99c84870685ded30af47fc445b9951",
      "filename": "gdb/utils.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/694c6bf5425024a8654a5541dec88e4dd6ddafb5/gdb/utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.h?ref=694c6bf5425024a8654a5541dec88e4dd6ddafb5",
      "patch": "@@ -286,7 +286,6 @@ struct set_batch_flag_and_restore_page_info\n   int m_save_batch_flag;\n };\n \n-extern struct cleanup *make_bpstat_clear_actions_cleanup (void);\n \f\n /* Path utilities.  */\n "
    }
  ]
}