{
  "sha": "30efb6c7af7ad8b50936157fe0a0ef22d6787dd7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzBlZmI2YzdhZjdhZDhiNTA5MzYxNTdmZTBhMGVmMjJkNjc4N2RkNw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-03-16T20:56:36Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-03-16T20:56:36Z"
    },
    "message": "gdb: define builtin long type to be 64 bits on amd64 Cygwin\n\nOn Windows x86-64 (when building with MinGW), the size of the \"long\"\ntype is 32 bits.  amd64_windows_init_abi therefore does:\n\n    set_gdbarch_long_bit (gdbarch, 32);\n\nThis is also used when the chosen OS ABI is Cygwin, where the \"long\"\ntype is 64 bits.  GDB therefore gets sizeof(long) wrong when using the\nbuiltin long type:\n\n    $ ./gdb -nx --data-directory=data-directory -batch -ex \"set architecture i386:x86-64\" -ex \"set osabi Cygwin\" -ex \"print sizeof(long)\"\n    The target architecture is assumed to be i386:x86-64\n    $1 = 4\n\nThis patch makes GDB avoid setting the size of the long type to 32 bits\nwhen using the Cygwin OS ABI.  it will inherit the value set in\namd64_init_abi.\n\nWith this patch, I get:\n\n    $ ./gdb -nx --data-directory=data-directory -batch -ex \"set architecture i386:x86-64\" -ex \"set osabi Cygwin\" -ex \"print sizeof(long)\"\n    The target architecture is assumed to be i386:x86-64\n    $1 = 8\n\ngdb/ChangeLog:\n\n\tPR gdb/21500\n\t* amd64-windows-tdep.c (amd64_windows_init_abi): Rename\n\tto...\n\t(amd64_windows_init_abi_common): ... this.  Don't set size of\n\tlong type.\n\t(amd64_windows_init_abi): New function.\n\t(amd64_cygwin_init_abi): New function.\n\t(_initialize_amd64_windows_tdep): Use amd64_cygwin_init_abi for\n\tthe Cygwin OS ABI.\n\t* i386-windows-tdep.c (_initialize_i386_windows_tdep): Clarify\n\tcomment.",
    "tree": {
      "sha": "5ab2f17411bcb3088e7b56173fc51449791e68ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5ab2f17411bcb3088e7b56173fc51449791e68ee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8db52437243e251c01e352cdb325bc9ace578e7c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8db52437243e251c01e352cdb325bc9ace578e7c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8db52437243e251c01e352cdb325bc9ace578e7c"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 32,
    "deletions": 7
  },
  "files": [
    {
      "sha": "6cb3cb5dccce71ef7b99602a31f55a9df45fe445",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=30efb6c7af7ad8b50936157fe0a0ef22d6787dd7",
      "patch": "@@ -1,3 +1,17 @@\n+2020-03-16  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\tPR gdb/21500\n+\t* amd64-windows-tdep.c (amd64_windows_init_abi): Rename\n+\tto...\n+\t(amd64_windows_init_abi_common): ... this.  Don't set size of\n+\tlong type.\n+\t(amd64_windows_init_abi): New function.\n+\t(amd64_cygwin_init_abi): New function.\n+\t(_initialize_amd64_windows_tdep): Use amd64_cygwin_init_abi for\n+\tthe Cygwin OS ABI.\n+\t* i386-windows-tdep.c (_initialize_i386_windows_tdep): Clarify\n+\tcomment.\n+\n 2020-03-16  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* windows-tdep.h (is_linked_with_cygwin_dll): New declaration."
    },
    {
      "sha": "6d5076d1c4371becf4b122a5393ede780cd0f37a",
      "filename": "gdb/amd64-windows-tdep.c",
      "status": "modified",
      "additions": 17,
      "deletions": 6,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7/gdb/amd64-windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7/gdb/amd64-windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-windows-tdep.c?ref=30efb6c7af7ad8b50936157fe0a0ef22d6787dd7",
      "patch": "@@ -1209,7 +1209,7 @@ amd64_windows_auto_wide_charset (void)\n }\n \n static void\n-amd64_windows_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n+amd64_windows_init_abi_common (gdbarch_info info, struct gdbarch *gdbarch)\n {\n   /* The dwarf2 unwinder (appended very early by i386_gdbarch_init) is\n      preferred over the SEH one.  The reasons are:\n@@ -1229,9 +1229,6 @@ amd64_windows_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n \n   windows_init_abi (info, gdbarch);\n \n-  /* On Windows, \"long\"s are only 32bit.  */\n-  set_gdbarch_long_bit (gdbarch, 32);\n-\n   /* Function calls.  */\n   set_gdbarch_push_dummy_call (gdbarch, amd64_windows_push_dummy_call);\n   set_gdbarch_return_value (gdbarch, amd64_windows_return_value);\n@@ -1244,6 +1241,21 @@ amd64_windows_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n   set_gdbarch_auto_wide_charset (gdbarch, amd64_windows_auto_wide_charset);\n }\n \n+static void\n+amd64_windows_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n+{\n+  amd64_windows_init_abi_common (info, gdbarch);\n+\n+  /* On Windows, \"long\"s are only 32bit.  */\n+  set_gdbarch_long_bit (gdbarch, 32);\n+}\n+\n+static void\n+amd64_cygwin_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n+{\n+  amd64_windows_init_abi_common (info, gdbarch);\n+}\n+\n static gdb_osabi\n amd64_windows_osabi_sniffer (bfd *abfd)\n {\n@@ -1262,11 +1274,10 @@ void _initialize_amd64_windows_tdep ();\n void\n _initialize_amd64_windows_tdep ()\n {\n-  /* The Cygwin and Windows OS ABIs are currently equivalent.  */\n   gdbarch_register_osabi (bfd_arch_i386, bfd_mach_x86_64, GDB_OSABI_WINDOWS,\n                           amd64_windows_init_abi);\n   gdbarch_register_osabi (bfd_arch_i386, bfd_mach_x86_64, GDB_OSABI_CYGWIN,\n-                          amd64_windows_init_abi);\n+                          amd64_cygwin_init_abi);\n \n   gdbarch_register_osabi_sniffer (bfd_arch_i386, bfd_target_coff_flavour,\n \t\t\t\t  amd64_windows_osabi_sniffer);"
    },
    {
      "sha": "b26731c6bf2895985284d126f37e41177e8e5c8f",
      "filename": "gdb/i386-windows-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7/gdb/i386-windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30efb6c7af7ad8b50936157fe0a0ef22d6787dd7/gdb/i386-windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-windows-tdep.c?ref=30efb6c7af7ad8b50936157fe0a0ef22d6787dd7",
      "patch": "@@ -270,7 +270,7 @@ _initialize_i386_windows_tdep ()\n   gdbarch_register_osabi_sniffer (bfd_arch_i386, bfd_target_elf_flavour,\n                                   i386_cygwin_core_osabi_sniffer);\n \n-  /* The Windows and Cygwin OS ABIs are currently equivalent.  */\n+  /* The Windows and Cygwin OS ABIs are currently equivalent on i386.  */\n   gdbarch_register_osabi (bfd_arch_i386, 0, GDB_OSABI_WINDOWS,\n                           i386_windows_init_abi);\n   gdbarch_register_osabi (bfd_arch_i386, 0, GDB_OSABI_CYGWIN,"
    }
  ]
}