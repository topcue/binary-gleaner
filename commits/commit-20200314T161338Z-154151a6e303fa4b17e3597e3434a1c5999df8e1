{
  "sha": "154151a6e303fa4b17e3597e3434a1c5999df8e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTU0MTUxYTZlMzAzZmE0YjE3ZTM1OTdlMzQzNGExYzU5OTlkZjhlMQ==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T16:13:38Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T16:13:38Z"
    },
    "message": "Add support for NetBSD threads in m68k-bsd-nat.c\n\nNetBSD ptrace(2) accepts thread id (LWP) as the 4th argument for threads.\n\ngdb/ChangeLog:\n\n        * m68k-bsd-nat.c (fetch_registers): New variable lwp and pass\n        it to the ptrace call.\n        * m68k-bsd-nat.c (store_registers): Likewise.",
    "tree": {
      "sha": "80a46ec032669ecfabe28d84a9fda4cafc44731d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/80a46ec032669ecfabe28d84a9fda4cafc44731d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/154151a6e303fa4b17e3597e3434a1c5999df8e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/154151a6e303fa4b17e3597e3434a1c5999df8e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/154151a6e303fa4b17e3597e3434a1c5999df8e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/154151a6e303fa4b17e3597e3434a1c5999df8e1/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bc10778499a971ab9ccecb074cc406d49e1ee608",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc10778499a971ab9ccecb074cc406d49e1ee608",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bc10778499a971ab9ccecb074cc406d49e1ee608"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 14,
    "deletions": 6
  },
  "files": [
    {
      "sha": "04db5e76734d0de121fa9fa782b26199a5eacd49",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/154151a6e303fa4b17e3597e3434a1c5999df8e1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/154151a6e303fa4b17e3597e3434a1c5999df8e1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=154151a6e303fa4b17e3597e3434a1c5999df8e1",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* m68k-bsd-nat.c (fetch_registers): New variable lwp and pass\n+\tit to the ptrace call.\n+\t* m68k-bsd-nat.c (store_registers): Likewise.\n+\n 2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n \n \t* m68k-bsd-nat.c (m68kbsd_supply_gregset): Change type of regs to"
    },
    {
      "sha": "9c42da5ca77c33bea8b72049cc90766e364486e3",
      "filename": "gdb/m68k-bsd-nat.c",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/154151a6e303fa4b17e3597e3434a1c5999df8e1/gdb/m68k-bsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/154151a6e303fa4b17e3597e3434a1c5999df8e1/gdb/m68k-bsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m68k-bsd-nat.c?ref=154151a6e303fa4b17e3597e3434a1c5999df8e1",
      "patch": "@@ -121,12 +121,13 @@ void\n m68k_bsd_nat_target::fetch_registers (struct regcache *regcache, int regnum)\n {\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n   if (regnum == -1 || m68kbsd_gregset_supplies_p (regnum))\n     {\n       struct reg regs;\n \n-      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get registers\"));\n \n       m68kbsd_supply_gregset (regcache, &regs);\n@@ -136,7 +137,7 @@ m68k_bsd_nat_target::fetch_registers (struct regcache *regcache, int regnum)\n     {\n       struct fpreg fpregs;\n \n-      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get floating point status\"));\n \n       m68kbsd_supply_fpregset (regcache, &fpregs);\n@@ -150,30 +151,31 @@ void\n m68k_bsd_nat_target::store_registers (struct regcache *regcache, int regnum)\n {\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n   if (regnum == -1 || m68kbsd_gregset_supplies_p (regnum))\n     {\n       struct reg regs;\n \n-      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n         perror_with_name (_(\"Couldn't get registers\"));\n \n       m68kbsd_collect_gregset (regcache, &regs, regnum);\n \n-      if (ptrace (PT_SETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+      if (ptrace (PT_SETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n         perror_with_name (_(\"Couldn't write registers\"));\n     }\n \n   if (regnum == -1 || m68kbsd_fpregset_supplies_p (regnum))\n     {\n       struct fpreg fpregs;\n \n-      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get floating point status\"));\n \n       m68kbsd_collect_fpregset (regcache, &fpregs, regnum);\n \n-      if (ptrace (PT_SETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+      if (ptrace (PT_SETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't write floating point status\"));\n     }\n }"
    }
  ]
}