{
  "sha": "6c130ba387aa3533712e2ea31cd212ac2e269f61",
  "node_id": "C_kwDOANOeidoAKDZjMTMwYmEzODdhYTM1MzM3MTJlMmVhMzFjZDIxMmFjMmUyNjlmNjE",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-04T18:13:30Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-11-04T18:14:36Z"
    },
    "message": "gdbserver: re-generate configure\n\nI get some diffs when running autoconf in gdbserver, probably leftovers\nfrom commit 5dfe4bfcb969 (\"Fix format_pieces selftest on Windows\").\nRe-generate configure in that directory.\n\nChange-Id: Icdc9906af95fbaf1047a579914b2983f8ec5db08",
    "tree": {
      "sha": "0efc701cb837f7f66fd60fc14136f3b6f823712e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0efc701cb837f7f66fd60fc14136f3b6f823712e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6c130ba387aa3533712e2ea31cd212ac2e269f61",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c130ba387aa3533712e2ea31cd212ac2e269f61",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6c130ba387aa3533712e2ea31cd212ac2e269f61",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6c130ba387aa3533712e2ea31cd212ac2e269f61/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "33d3e18ed79de364401edab99917d351afd39fd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/33d3e18ed79de364401edab99917d351afd39fd8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/33d3e18ed79de364401edab99917d351afd39fd8"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 49,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5fb5b7a35f7a5aad0bebb88654169c7cf7a3fe98",
      "filename": "gdbserver/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c130ba387aa3533712e2ea31cd212ac2e269f61/gdbserver/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c130ba387aa3533712e2ea31cd212ac2e269f61/gdbserver/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/config.in?ref=6c130ba387aa3533712e2ea31cd212ac2e269f61",
      "patch": "@@ -398,6 +398,9 @@\n /* Additional package description */\n #undef PKGVERSION\n \n+/* Define to 1 if the \"%ll\" format works to print long longs. */\n+#undef PRINTF_HAS_LONG_LONG\n+\n /* Define to necessary symbol if this constant uses a non-standard name on\n    your system. */\n #undef PTHREAD_CREATE_JOINABLE"
    },
    {
      "sha": "0e32d198ad909192312784c9613c7795edb38311",
      "filename": "gdbserver/configure",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6c130ba387aa3533712e2ea31cd212ac2e269f61/gdbserver/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6c130ba387aa3533712e2ea31cd212ac2e269f61/gdbserver/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/configure?ref=6c130ba387aa3533712e2ea31cd212ac2e269f61",
      "patch": "@@ -8558,6 +8558,52 @@ fi\n     fi\n   fi\n \n+  # Check if the compiler and runtime support printing long longs.\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for long long support in printf\" >&5\n+$as_echo_n \"checking for long long support in printf... \" >&6; }\n+if ${gdb_cv_printf_has_long_long+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test \"$cross_compiling\" = yes; then :\n+  gdb_cv_printf_has_long_long=no\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+char buf[32];\n+    long long l = 0;\n+    l = (l << 16) + 0x0123;\n+    l = (l << 16) + 0x4567;\n+    l = (l << 16) + 0x89ab;\n+    l = (l << 16) + 0xcdef;\n+    sprintf (buf, \"0x%016llx\", l);\n+    return (strcmp (\"0x0123456789abcdef\", buf));\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  gdb_cv_printf_has_long_long=yes\n+else\n+  gdb_cv_printf_has_long_long=no\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gdb_cv_printf_has_long_long\" >&5\n+$as_echo \"$gdb_cv_printf_has_long_long\" >&6; }\n+  if test \"$gdb_cv_printf_has_long_long\" = yes; then\n+\n+$as_echo \"#define PRINTF_HAS_LONG_LONG 1\" >>confdefs.h\n+\n+  fi\n+\n \n $as_echo \"#define _STRUCTURED_PROC 1\" >>confdefs.h\n "
    }
  ]
}