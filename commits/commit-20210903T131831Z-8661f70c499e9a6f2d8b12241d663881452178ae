{
  "sha": "8661f70c499e9a6f2d8b12241d663881452178ae",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODY2MWY3MGM0OTllOWE2ZjJkOGIxMjI0MWQ2NjM4ODE0NTIxNzhhZQ==",
  "commit": {
    "author": {
      "name": "Felix Willgerodt",
      "email": "felix.willgerodt@intel.com",
      "date": "2020-09-11T13:43:54Z"
    },
    "committer": {
      "name": "Felix Willgerodt",
      "email": "felix.willgerodt@intel.com",
      "date": "2021-09-03T13:18:31Z"
    },
    "message": "Add half support for AVX512 register view.\n\nThis adds support for the half datatype, FP16, to the AVX512 register printing.\n\ngdb/ChangeLog:\n2020-07-21  Felix Willgerodt  <Felix.Willgerodt@intel.com>\n\n\t* i386-tdep.c (i386_zmm_type) <v32_half>: New field.\n\t(i386_ymm_type) <v16_half>: New field.\n\t(i386_gdbarch_init): Add set_gdbarch_half_format.\n\t* features/i386/64bit-avx512.xml: Add half type.\n\t* features/i386/64bit-avx512.c: Regenerated.\n\t* features/i386/64bit-sse.xml: Add half type.\n\t* features/i386/64bit-sse.c: Regenerated.\n\ngdb/testsuite/ChangeLog:\n2021-07-21  Felix Willgerodt  <Felix.Willgerodt@intel.com>\n\n\t* gdb.arch/x86-avx512fp16.c: New file.\n\t* gdb.arch/x86-avx512fp16.exp: New file.\n\t* lib/gdb.exp (skip_avx512fp16_tests): New function.",
    "tree": {
      "sha": "8164f14d7b716fa22f74211ed61fb39059c5c62b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8164f14d7b716fa22f74211ed61fb39059c5c62b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8661f70c499e9a6f2d8b12241d663881452178ae",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8661f70c499e9a6f2d8b12241d663881452178ae",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8661f70c499e9a6f2d8b12241d663881452178ae",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8661f70c499e9a6f2d8b12241d663881452178ae/comments",
  "author": {
    "login": "felix-willgerodt",
    "id": 68062808,
    "node_id": "MDQ6VXNlcjY4MDYyODA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felix-willgerodt",
    "html_url": "https://github.com/felix-willgerodt",
    "followers_url": "https://api.github.com/users/felix-willgerodt/followers",
    "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}",
    "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions",
    "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs",
    "repos_url": "https://api.github.com/users/felix-willgerodt/repos",
    "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "felix-willgerodt",
    "id": 68062808,
    "node_id": "MDQ6VXNlcjY4MDYyODA4",
    "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/felix-willgerodt",
    "html_url": "https://github.com/felix-willgerodt",
    "followers_url": "https://api.github.com/users/felix-willgerodt/followers",
    "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}",
    "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions",
    "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs",
    "repos_url": "https://api.github.com/users/felix-willgerodt/repos",
    "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "41bbbb89c4d31a15ef317dd7de8af749d2a35e5f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41bbbb89c4d31a15ef317dd7de8af749d2a35e5f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/41bbbb89c4d31a15ef317dd7de8af749d2a35e5f"
    }
  ],
  "stats": {
    "total": 310,
    "additions": 310,
    "deletions": 0
  },
  "files": [
    {
      "sha": "adc7fe06276048f04161b217d1187ed38aba3861",
      "filename": "gdb/features/i386/32bit-sse.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/32bit-sse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/32bit-sse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/32bit-sse.c?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -13,6 +13,9 @@ create_feature_i386_32bit_sse (struct target_desc *result, long regnum)\n   element_type = tdesc_named_type (feature, \"bfloat16\");\n   tdesc_create_vector (feature, \"v8bf16\", element_type, 8);\n \n+  element_type = tdesc_named_type (feature, \"ieee_half\");\n+  tdesc_create_vector (feature, \"v8h\", element_type, 8);\n+\n   element_type = tdesc_named_type (feature, \"ieee_single\");\n   tdesc_create_vector (feature, \"v4f\", element_type, 4);\n \n@@ -36,6 +39,8 @@ create_feature_i386_32bit_sse (struct target_desc *result, long regnum)\n   tdesc_type *field_type;\n   field_type = tdesc_named_type (feature, \"v8bf16\");\n   tdesc_add_field (type_with_fields, \"v8_bfloat16\", field_type);\n+  field_type = tdesc_named_type (feature, \"v8h\");\n+  tdesc_add_field (type_with_fields, \"v8_half\", field_type);\n   field_type = tdesc_named_type (feature, \"v4f\");\n   tdesc_add_field (type_with_fields, \"v4_float\", field_type);\n   field_type = tdesc_named_type (feature, \"v2d\");"
    },
    {
      "sha": "f7d1a75e754655f9075cc17760f2d78c1b13e26d",
      "filename": "gdb/features/i386/32bit-sse.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/32bit-sse.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/32bit-sse.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/32bit-sse.xml?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -8,6 +8,7 @@\n <!DOCTYPE feature SYSTEM \"gdb-target.dtd\">\n <feature name=\"org.gnu.gdb.i386.sse\">\n   <vector id=\"v8bf16\" type=\"bfloat16\" count=\"8\"/>\n+  <vector id=\"v8h\" type=\"ieee_half\" count=\"8\"/>\n   <vector id=\"v4f\" type=\"ieee_single\" count=\"4\"/>\n   <vector id=\"v2d\" type=\"ieee_double\" count=\"2\"/>\n   <vector id=\"v16i8\" type=\"int8\" count=\"16\"/>\n@@ -16,6 +17,7 @@\n   <vector id=\"v2i64\" type=\"int64\" count=\"2\"/>\n   <union id=\"vec128\">\n     <field name=\"v8_bfloat16\" type=\"v8bf16\"/>\n+    <field name=\"v8_half\" type=\"v8h\"/>\n     <field name=\"v4_float\" type=\"v4f\"/>\n     <field name=\"v2_double\" type=\"v2d\"/>\n     <field name=\"v16_int8\" type=\"v16i8\"/>"
    },
    {
      "sha": "9ceadd89cda90d6d4efa7c6a9fae795b343da841",
      "filename": "gdb/features/i386/64bit-avx512.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-avx512.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-avx512.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/64bit-avx512.c?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -13,6 +13,9 @@ create_feature_i386_64bit_avx512 (struct target_desc *result, long regnum)\n   element_type = tdesc_named_type (feature, \"bfloat16\");\n   tdesc_create_vector (feature, \"v8bf16\", element_type, 8);\n \n+  element_type = tdesc_named_type (feature, \"ieee_half\");\n+  tdesc_create_vector (feature, \"v8h\", element_type, 8);\n+\n   element_type = tdesc_named_type (feature, \"ieee_single\");\n   tdesc_create_vector (feature, \"v4f\", element_type, 4);\n \n@@ -36,6 +39,8 @@ create_feature_i386_64bit_avx512 (struct target_desc *result, long regnum)\n   tdesc_type *field_type;\n   field_type = tdesc_named_type (feature, \"v8bf16\");\n   tdesc_add_field (type_with_fields, \"v8_bfloat16\", field_type);\n+  field_type = tdesc_named_type (feature, \"v8h\");\n+  tdesc_add_field (type_with_fields, \"v8_half\", field_type);\n   field_type = tdesc_named_type (feature, \"v4f\");\n   tdesc_add_field (type_with_fields, \"v4_float\", field_type);\n   field_type = tdesc_named_type (feature, \"v2d\");"
    },
    {
      "sha": "b7fe4d5015b1dd6e9d425402fe41272ea6a13395",
      "filename": "gdb/features/i386/64bit-avx512.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-avx512.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-avx512.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/64bit-avx512.xml?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -8,6 +8,7 @@\n <!DOCTYPE feature SYSTEM \"gdb-target.dtd\">\n <feature name=\"org.gnu.gdb.i386.avx512\">\n   <vector id=\"v8bf16\" type=\"bfloat16\" count=\"8\"/>\n+  <vector id=\"v8h\" type=\"ieee_half\" count=\"8\"/>\n   <vector id=\"v4f\" type=\"ieee_single\" count=\"4\"/>\n   <vector id=\"v2d\" type=\"ieee_double\" count=\"2\"/>\n   <vector id=\"v16i8\" type=\"int8\" count=\"16\"/>\n@@ -16,6 +17,7 @@\n   <vector id=\"v2i64\" type=\"int64\" count=\"2\"/>\n   <union id=\"vec128\">\n     <field name=\"v8_bfloat16\" type=\"v8bf16\"/>\n+    <field name=\"v8_half\" type=\"v8h\"/>\n     <field name=\"v4_float\" type=\"v4f\"/>\n     <field name=\"v2_double\" type=\"v2d\"/>\n     <field name=\"v16_int8\" type=\"v16i8\"/>"
    },
    {
      "sha": "ffb7a45ec1acd7384b9f87c92cebf1e3c1f80cfd",
      "filename": "gdb/features/i386/64bit-sse.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-sse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-sse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/64bit-sse.c?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -13,6 +13,9 @@ create_feature_i386_64bit_sse (struct target_desc *result, long regnum)\n   element_type = tdesc_named_type (feature, \"bfloat16\");\n   tdesc_create_vector (feature, \"v8bf16\", element_type, 8);\n \n+  element_type = tdesc_named_type (feature, \"ieee_half\");\n+  tdesc_create_vector (feature, \"v8h\", element_type, 8);\n+\n   element_type = tdesc_named_type (feature, \"ieee_single\");\n   tdesc_create_vector (feature, \"v4f\", element_type, 4);\n \n@@ -36,6 +39,8 @@ create_feature_i386_64bit_sse (struct target_desc *result, long regnum)\n   tdesc_type *field_type;\n   field_type = tdesc_named_type (feature, \"v8bf16\");\n   tdesc_add_field (type_with_fields, \"v8_bfloat16\", field_type);\n+  field_type = tdesc_named_type (feature, \"v8h\");\n+  tdesc_add_field (type_with_fields, \"v8_half\", field_type);\n   field_type = tdesc_named_type (feature, \"v4f\");\n   tdesc_add_field (type_with_fields, \"v4_float\", field_type);\n   field_type = tdesc_named_type (feature, \"v2d\");"
    },
    {
      "sha": "9ae2310af3372da9cad263c75f8025b60db6b2b3",
      "filename": "gdb/features/i386/64bit-sse.xml",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-sse.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/features/i386/64bit-sse.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/64bit-sse.xml?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -8,6 +8,7 @@\n <!DOCTYPE feature SYSTEM \"gdb-target.dtd\">\n <feature name=\"org.gnu.gdb.i386.sse\">\n   <vector id=\"v8bf16\" type=\"bfloat16\" count=\"8\"/>\n+  <vector id=\"v8h\" type=\"ieee_half\" count=\"8\"/>\n   <vector id=\"v4f\" type=\"ieee_single\" count=\"4\"/>\n   <vector id=\"v2d\" type=\"ieee_double\" count=\"2\"/>\n   <vector id=\"v16i8\" type=\"int8\" count=\"16\"/>\n@@ -16,6 +17,7 @@\n   <vector id=\"v2i64\" type=\"int64\" count=\"2\"/>\n   <union id=\"vec128\">\n     <field name=\"v8_bfloat16\" type=\"v8bf16\"/>\n+    <field name=\"v8_half\" type=\"v8h\"/>\n     <field name=\"v4_float\" type=\"v4f\"/>\n     <field name=\"v2_double\" type=\"v2d\"/>\n     <field name=\"v16_int8\" type=\"v16i8\"/>"
    },
    {
      "sha": "c2835a2458d11882e75d03622b8a84270b5abc82",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -3117,6 +3117,7 @@ i386_zmm_type (struct gdbarch *gdbarch)\n \tint8_t v64_int8[64];\n \tdouble v8_double[8];\n \tfloat v16_float[16];\n+\tfloat16_t v32_half[32];\n \tbfloat16_t v32_bfloat16[32];\n       };\n #endif\n@@ -3127,6 +3128,8 @@ i386_zmm_type (struct gdbarch *gdbarch)\n \t\t\t       \"__gdb_builtin_type_vec512i\", TYPE_CODE_UNION);\n       append_composite_type_field (t, \"v32_bfloat16\",\n \t\t\t\t   init_vector_type (bt->builtin_bfloat16, 32));\n+      append_composite_type_field (t, \"v32_half\",\n+\t\t\t\t   init_vector_type (bt->builtin_half, 32));\n       append_composite_type_field (t, \"v16_float\",\n \t\t\t\t   init_vector_type (bt->builtin_float, 16));\n       append_composite_type_field (t, \"v8_double\",\n@@ -3173,6 +3176,7 @@ i386_ymm_type (struct gdbarch *gdbarch)\n \tint8_t v32_int8[32];\n \tdouble v4_double[4];\n \tfloat v8_float[8];\n+\tfloat16_t v16_half[16];\n \tbfloat16_t v16_bfloat16[16];\n       };\n #endif\n@@ -3183,6 +3187,8 @@ i386_ymm_type (struct gdbarch *gdbarch)\n \t\t\t       \"__gdb_builtin_type_vec256i\", TYPE_CODE_UNION);\n       append_composite_type_field (t, \"v16_bfloat16\",\n \t\t\t\t   init_vector_type (bt->builtin_bfloat16, 16));\n+      append_composite_type_field (t, \"v16_half\",\n+\t\t\t\t   init_vector_type (bt->builtin_half, 16));\n       append_composite_type_field (t, \"v8_float\",\n \t\t\t\t   init_vector_type (bt->builtin_float, 8));\n       append_composite_type_field (t, \"v4_double\","
    },
    {
      "sha": "ebc72957bb3c75f4d715ca17058b34c93ea1dae3",
      "filename": "gdb/testsuite/gdb.arch/x86-avx512fp16.c",
      "status": "added",
      "additions": 164,
      "deletions": 0,
      "changes": 164,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/testsuite/gdb.arch/x86-avx512fp16.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/testsuite/gdb.arch/x86-avx512fp16.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/x86-avx512fp16.c?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -0,0 +1,164 @@\n+/* Test program for bfloat16 of AVX 512 registers.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+typedef struct\n+{\n+  float f[4];\n+} v4sd_t;\n+\n+typedef struct\n+{\n+  float f[8];\n+} v8sd_t;\n+\n+typedef struct\n+{\n+  float f[16];\n+} v16sd_t;\n+\n+v4sd_t xmm_data[] =\n+{\n+  { {  0.0,  0.125,  0.25,  0.375 } },\n+  { {  0.5,  0.625,  0.75,  0.875 } },\n+  { {  1.0,  1.125,  1.25,  1.375 } },\n+  { {  1.5,  1.625,  1.75,  1.875 } },\n+  { {  2.0,  2.125,  2.25,  2.375 } },\n+  { {  2.5,  2.625,  2.75,  2.875 } },\n+  { {  3.0,  3.125,  3.25,  3.375 } },\n+  { {  3.5,  3.625,  3.75,  3.875 } },\n+};\n+\n+v8sd_t ymm_data[] =\n+{\n+  { {  8.0,  8.25,  8.5,  8.75,  9.0,  9.25,  9.5,  9.75 } },\n+  { { 10.0, 10.25, 10.5, 10.75, 11.0, 11.25, 11.5, 11.75 } },\n+  { { 12.0, 12.25, 12.5, 12.75, 13.0, 13.25, 13.5, 13.75 } },\n+  { { 14.0, 14.25, 14.5, 14.75, 15.0, 15.25, 15.5, 15.75 } },\n+  { { 16.0, 16.25, 16.5, 16.75, 17.0, 17.25, 17.5, 17.75 } },\n+  { { 18.0, 18.25, 18.5, 18.75, 19.0, 19.25, 19.5, 19.75 } },\n+  { { 20.0, 20.25, 20.5, 20.75, 21.0, 21.25, 21.5, 21.75 } },\n+  { { 22.0, 22.25, 22.5, 22.75, 23.0, 23.25, 23.5, 23.75 } },\n+};\n+\n+v16sd_t zmm_data[] =\n+{\n+  { { 20.0,  20.5,  21.0,  21.5,  22.0,  22.5,  23.0,  23.5,  24.0,  24.5,\n+      25.0,  25.5,  26.0,  26.5,  27.0,  27.5 } },\n+  { { 28.0,  28.5,  29.0,  29.5,  30.0,  30.5,  31.0,  31.5,  32.0,  32.5,\n+      33.0,  33.5,  34.0,  34.5,  35.0,  35.5 } },\n+  { { 36.0,  36.5,  37.0,  37.5,  38.0,  38.5,  39.0,  39.5,  40.0,  40.5,\n+      41.0,  41.5,  42.0,  42.5,  43.0,  43.5 } },\n+  { { 44.0,  44.5,  45.0,  45.5,  46.0,  46.5,  47.0,  47.5,  48.0,  48.5,\n+      49.0,  49.5,  50.0,  50.5,  51.0,  51.5 } },\n+  { { 52.0,  52.5,  53.0,  53.5,  54.0,  54.5,  55.0,  55.5,  56.0,  56.5,\n+      57.0,  57.5,  58.0,  58.5,  59.0,  59.5 } },\n+  { { 60.0,  60.5,  61.0,  61.5,  62.0,  62.5,  63.0,  63.5,  64.0,  64.5,\n+      65.0,  65.5,  66.0,  66.5,  67.0,  67.5 } },\n+  { { 68.0,  68.5,  69.0,  69.5,  70.0,  70.5,  71.0,  71.5,  72.0,  72.5,\n+      73.0,  73.5,  74.0,  74.5,  75.0,  75.5 } },\n+  { { 76.0,  76.5,  77.0,  77.5,  78.0,  78.5,  79.0,  79.5,  80.0,  80.5,\n+      81.0,  81.5,  82.0,  82.5,  83.0,  83.5 } },\n+};\n+\n+void\n+move_data_to_xmm_reg (void)\n+{\n+  asm (\"vmovups 0(%0), %%xmm0 \\n\\t\"\n+       \"vmovups 16(%0), %%xmm1 \\n\\t\"\n+       \"vmovups 32(%0), %%xmm2 \\n\\t\"\n+       \"vmovups 48(%0), %%xmm3 \\n\\t\"\n+       \"vmovups 64(%0), %%xmm4 \\n\\t\"\n+       \"vmovups 80(%0), %%xmm5 \\n\\t\"\n+       \"vmovups 96(%0), %%xmm6 \\n\\t\"\n+       \"vmovups 112(%0), %%xmm7 \\n\\t\"\n+       : /* no output operands  */\n+       : \"r\" (xmm_data));\n+}\n+\n+void\n+move_data_to_ymm_reg (void)\n+{\n+  asm (\"vmovups 0(%0), %%ymm0 \\n\\t\"\n+       \"vmovups 32(%0), %%ymm1 \\n\\t\"\n+       \"vmovups 64(%0), %%ymm2 \\n\\t\"\n+       \"vmovups 96(%0), %%ymm3 \\n\\t\"\n+       \"vmovups 128(%0), %%ymm4 \\n\\t\"\n+       \"vmovups 160(%0), %%ymm5 \\n\\t\"\n+       \"vmovups 192(%0), %%ymm6 \\n\\t\"\n+       \"vmovups 224(%0), %%ymm7 \\n\\t\"\n+       : /* no output operands  */\n+       : \"r\" (ymm_data));\n+}\n+\n+void\n+move_data_to_zmm_reg (void)\n+{\n+  asm (\"vmovups 0(%0), %%zmm0 \\n\\t\"\n+       \"vmovups 64(%0), %%zmm1 \\n\\t\"\n+       \"vmovups 128(%0), %%zmm2 \\n\\t\"\n+       \"vmovups 192(%0), %%zmm3 \\n\\t\"\n+       \"vmovups 256(%0), %%zmm4 \\n\\t\"\n+       \"vmovups 320(%0), %%zmm5 \\n\\t\"\n+       \"vmovups 384(%0), %%zmm6 \\n\\t\"\n+       \"vmovups 448(%0), %%zmm7 \\n\\t\"\n+       : /* no output operands  */\n+       : \"r\" (zmm_data));\n+}\n+\n+void\n+convert_xmm_from_float_to_half (void)\n+{\n+  asm(\"vcvtps2phx %xmm1, %xmm0\");\n+  asm(\"vcvtps2phx %xmm7, %xmm6\");\n+}\n+\n+void\n+convert_ymm_from_float_to_half (void)\n+{\n+  asm(\"vcvtps2phx %ymm1, %xmm0\");\n+  asm(\"vcvtps2phx %ymm7, %xmm6\");\n+}\n+\n+void\n+convert_zmm_from_float_to_half (void)\n+{\n+  asm(\"vcvtps2phx %zmm1, %ymm0\");\n+  asm(\"vcvtps2phx %zmm7, %ymm6\");\n+}\n+\n+int\n+main ()\n+{\n+  /* Move initial values from array to registers and read from XMM regs.  */\n+  move_data_to_xmm_reg ();\n+  convert_xmm_from_float_to_half ();\n+  asm (\"nop\"); /* first breakpoint here  */\n+\n+  /* Move initial values from array to registers and read from YMM regs.  */\n+  move_data_to_ymm_reg ();\n+  convert_ymm_from_float_to_half ();\n+  asm (\"nop\"); /* second breakpoint here  */\n+\n+  /* Move initial values from array to registers and read from ZMM regs.  */\n+  move_data_to_zmm_reg ();\n+  convert_zmm_from_float_to_half ();\n+  asm (\"nop\"); /* third breakpoint here  */\n+\n+  return 0;\n+}"
    },
    {
      "sha": "22575cc2fe81a693a1b232f6e4ffaf41cadb388e",
      "filename": "gdb/testsuite/gdb.arch/x86-avx512fp16.exp",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/testsuite/gdb.arch/x86-avx512fp16.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/testsuite/gdb.arch/x86-avx512fp16.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/x86-avx512fp16.exp?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -0,0 +1,68 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test fp16 support in AVX512 registers.\n+\n+if { [skip_avx512fp16_tests] } {\n+    unsupported \"target does not support AVX512fp16\"\n+    return -1\n+}\n+\n+standard_testfile\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile}] } {\n+    return -1\n+}\n+\n+if { ![runto_main] } {\n+    unsupported \"could not run to main\"\n+    return -1\n+}\n+\n+# Test xmm.\n+set line1 [gdb_get_line_number \"first breakpoint here\"]\n+gdb_breakpoint $line1\n+gdb_continue_to_breakpoint \"line1\" \".*$srcfile:$line1.*\"\n+\n+gdb_test \"print \\$xmm0.v8_half\" \\\n+    \"= \\\\{0.5, 0.625, 0.75, 0.875, 0, 0, 0, 0\\\\}\"\n+\n+gdb_test \"print \\$xmm6.v8_half\" \\\n+    \"= \\\\{3.5, 3.625, 3.75, 3.875, 0, 0, 0, 0\\\\}\"\n+\n+# Test ymm.\n+set line2 [gdb_get_line_number \"second breakpoint here\"]\n+gdb_breakpoint $line2\n+gdb_continue_to_breakpoint \"line2\" \".*$srcfile:$line2.*\"\n+\n+gdb_test \"print \\$ymm0.v16_half\\[1\\]\" \"= 10.25\"\n+gdb_test \"print \\$ymm6.v16_half\\[1\\]\" \"= 22.25\"\n+\n+# Test zmm.\n+set line3 [gdb_get_line_number \"third breakpoint here\"]\n+gdb_breakpoint $line3\n+gdb_continue_to_breakpoint \"line3\" \".*$srcfile:$line3.*\"\n+\n+gdb_test \"print \\$zmm0.v32_half\\[1\\]\" \"= 28.5\"\n+gdb_test \"print \\$zmm6.v32_half\\[1\\]\" \"= 76.5\"\n+\n+# Test setting of half values.\n+gdb_test_no_output \"set var \\$xmm0.v8_half\\[0\\] = 32.25\"\n+gdb_test_no_output \"set var \\$ymm3.v16_half\\[1\\] = 33.5\"\n+gdb_test_no_output \"set var \\$zmm7.v32_half\\[2\\] = 22.75\"\n+\n+gdb_test \"p \\$xmm0.v8_half\\[0\\]\" \"= 32.25\"\n+gdb_test \"p \\$ymm3.v16_half\\[1\\]\" \"= 33.5\"\n+gdb_test \"p \\$zmm7.v32_half\\[2\\]\" \"= 22.75\""
    },
    {
      "sha": "ca9864b9007f647396391b3334ec72e070e64f3d",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8661f70c499e9a6f2d8b12241d663881452178ae/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=8661f70c499e9a6f2d8b12241d663881452178ae",
      "patch": "@@ -3384,6 +3384,57 @@ gdb_caching_proc skip_avx512bf16_tests {\n     return $skip_avx512bf16_tests\n }\n \n+# Run a test on the target to see if it supports avx512fp16.  Return 0 if so,\n+# 1 if it does not.  Based on 'check_vmx_hw_available' from the GCC testsuite.\n+\n+gdb_caching_proc skip_avx512fp16_tests {\n+    global srcdir subdir gdb_prompt inferior_exited_re\n+\n+    set me \"skip_avx512fp16_tests\"\n+    if { ![istarget \"i?86-*-*\"] && ![istarget \"x86_64-*-*\"] } {\n+        verbose \"$me:  target does not support avx512fp16, returning 1\" 2\n+        return 1\n+    }\n+\n+    # Compile a test program.\n+    set src {\n+        int main() {\n+            asm volatile (\"vcvtps2phx %xmm1, %xmm0\");\n+            return 0;\n+        }\n+    }\n+    if {![gdb_simple_compile $me $src executable]} {\n+        return 1\n+    }\n+\n+    # No error message, compilation succeeded so now run it via gdb.\n+\n+    gdb_exit\n+    gdb_start\n+    gdb_reinitialize_dir $srcdir/$subdir\n+    gdb_load \"$obj\"\n+    gdb_run_cmd\n+    gdb_expect {\n+        -re \".*Illegal instruction.*${gdb_prompt} $\" {\n+            verbose -log \"$me:  avx512fp16 hardware not detected.\"\n+            set skip_avx512fp16_tests 1\n+        }\n+        -re \".*$inferior_exited_re normally.*${gdb_prompt} $\" {\n+            verbose -log \"$me:  avx512fp16 hardware detected.\"\n+            set skip_avx512fp16_tests 0\n+        }\n+        default {\n+            warning \"\\n$me:  default case taken.\"\n+            set skip_avx512fp16_tests 1\n+        }\n+    }\n+    gdb_exit\n+    remote_file build delete $obj\n+\n+    verbose \"$me:  returning $skip_avx512fp16_tests\" 2\n+    return $skip_avx512fp16_tests\n+}\n+\n # Run a test on the target to see if it supports btrace hardware.  Return 0 if so,\n # 1 if it does not.  Based on 'check_vmx_hw_available' from the GCC testsuite.\n "
    }
  ]
}