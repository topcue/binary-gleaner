{
  "sha": "8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGE2ZDVlMzVmZWMwNzE5N2RhYzFjZjdkMmEzZTYyZDU4NTY3ZDRlMw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-04T18:47:36Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-04T18:47:36Z"
    },
    "message": "gdb: remove TYPE_DYN_PROP_KIND\n\nReplace uses with calling the dynamic_prop::kind method directly.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (TYPE_DYN_PROP_KIND): Remove, replace uses with\n\tdynamic_prop::kind.\n\nChange-Id: I78a3e2890f0b3e3950e9a19ad657b976cbb9610b",
    "tree": {
      "sha": "92a4213a047d269806fb8b8d000782ad619de8da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/92a4213a047d269806fb8b8d000782ad619de8da"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51d6067d78461449ed056cccdd5e1467d767fdd6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51d6067d78461449ed056cccdd5e1467d767fdd6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51d6067d78461449ed056cccdd5e1467d767fdd6"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 12,
    "deletions": 9
  },
  "files": [
    {
      "sha": "da68b1194e8e7a81640dc175f3efd3773f94f2d3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
      "patch": "@@ -1,3 +1,8 @@\n+2020-08-04  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdbtypes.h (TYPE_DYN_PROP_KIND): Remove, replace uses with\n+\tdynamic_prop::kind.\n+\n 2020-08-04  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdbtypes.h (TYPE_DYN_PROP_BATON): Remove."
    },
    {
      "sha": "c3a01673d2bc539a935dc2a62fbbe9876bf1fa7f",
      "filename": "gdb/f-typeprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/f-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/f-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-typeprint.c?ref=8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
      "patch": "@@ -196,11 +196,11 @@ f_type_print_varspec_suffix (struct type *type, struct ui_file *stream,\n       else if (type_not_allocated (type))\n \tprint_rank_only = true;\n       else if ((TYPE_ASSOCIATED_PROP (type)\n-\t\t&& PROP_CONST != TYPE_DYN_PROP_KIND (TYPE_ASSOCIATED_PROP (type)))\n+\t\t&& PROP_CONST != TYPE_ASSOCIATED_PROP (type)->kind ())\n \t       || (TYPE_ALLOCATED_PROP (type)\n-\t\t   && PROP_CONST != TYPE_DYN_PROP_KIND (TYPE_ALLOCATED_PROP (type)))\n+\t\t   && PROP_CONST != TYPE_ALLOCATED_PROP (type)->kind ())\n \t       || (TYPE_DATA_LOCATION (type)\n-\t\t   && PROP_CONST != TYPE_DYN_PROP_KIND (TYPE_DATA_LOCATION (type))))\n+\t\t   && PROP_CONST != TYPE_DATA_LOCATION (type)->kind ()))\n \t{\n \t  /* This case exist when we ptype a typename which has the dynamic\n \t     properties but cannot be resolved as there is no object.  */"
    },
    {
      "sha": "4b1f40ab77dc1e8857c2d2a8e24dd314aa5dfdc2",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
      "patch": "@@ -4133,8 +4133,8 @@ type_not_allocated (const struct type *type)\n {\n   struct dynamic_prop *prop = TYPE_ALLOCATED_PROP (type);\n \n-  return (prop && TYPE_DYN_PROP_KIND (prop) == PROP_CONST\n-         && !TYPE_DYN_PROP_ADDR (prop));\n+  return (prop != nullptr && prop->kind () == PROP_CONST\n+\t  && !TYPE_DYN_PROP_ADDR (prop));\n }\n \n /* Associated status of type TYPE.  Return zero if type TYPE is associated.\n@@ -4145,8 +4145,8 @@ type_not_associated (const struct type *type)\n {\n   struct dynamic_prop *prop = TYPE_ASSOCIATED_PROP (type);\n \n-  return (prop && TYPE_DYN_PROP_KIND (prop) == PROP_CONST\n-         && !TYPE_DYN_PROP_ADDR (prop));\n+  return (prop != nullptr && prop->kind () == PROP_CONST\n+\t  && !TYPE_DYN_PROP_ADDR (prop));\n }\n \n /* rank_one_type helper for when PARM's type code is TYPE_CODE_PTR.  */"
    },
    {
      "sha": "de54a5ed73b62a437f9493aa264fbe538938f1cf",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=8a6d5e35fec07197dac1cf7d2a3e62d58567d4e3",
      "patch": "@@ -1638,8 +1638,6 @@ extern bool set_type_align (struct type *, ULONGEST);\n /* Attribute accessors for dynamic properties.  */\n #define TYPE_DYN_PROP_ADDR(dynprop) \\\n   (dynprop->const_val ())\n-#define TYPE_DYN_PROP_KIND(dynprop) \\\n-  (dynprop->kind ())\n \n /* C++ */\n "
    }
  ]
}