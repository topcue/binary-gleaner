{
  "sha": "037311d1df303c91395cdfe07b6ab414de99e420",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDM3MzExZDFkZjMwM2M5MTM5NWNkZmUwN2I2YWI0MTRkZTk5ZTQyMA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-12-09T00:41:22Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-12-09T00:41:32Z"
    },
    "message": "gas: Generate a new section for SHF_GNU_RETAIN\n\nFor\n\t.globl\tfoo2\n\t.section\t.data.foo,\"aR\"\n\t.align 4\n\t.type\tfoo2, @object\n\t.size\tfoo2, 4\nfoo2:\n\t.long\t2\n\t.globl\tfoo1\n\t.section\t.data.foo\n\t.align 4\n\t.type\tfoo1, @object\n\t.size\tfoo1, 4\nfoo1:\n\t.long\t1\n\ngenerate a new section if the SHF_GNU_RETAIN bit doesn't match.\n\n\t* config/obj-elf.c (SEC_ASSEMBLER_SHF_MASK): New.\n\t(get_section_by_match): Also check if SEC_ASSEMBLER_SHF_MASK of\n\tsh_flags matches.  Rename info to sh_info.\n\t(obj_elf_change_section): Don't check previous SHF_GNU_RETAIN.\n\tRename info to sh_info.\n\t(obj_elf_section): Rename info to sh_info.  Set sh_flags for\n\tSHF_GNU_RETAIN.\n\t* config/obj-elf.h (elf_section_match): Rename info to sh_info.\n\tAdd sh_flags.\n\t* testsuite/gas/elf/elf.exp: Run section27.\n\t* testsuite/gas/elf/section24b.d: Updated.\n\t* testsuite/gas/elf/section27.d: New file.\n\t* testsuite/gas/elf/section27.s: Likewise.",
    "tree": {
      "sha": "2d60f4001e36f5e4b1445fa630e0098ce31b7a57",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2d60f4001e36f5e4b1445fa630e0098ce31b7a57"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/037311d1df303c91395cdfe07b6ab414de99e420",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/037311d1df303c91395cdfe07b6ab414de99e420",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/037311d1df303c91395cdfe07b6ab414de99e420",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/037311d1df303c91395cdfe07b6ab414de99e420/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd235d453e8ee2f641cbafa4b7078a1407a50ec1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd235d453e8ee2f641cbafa4b7078a1407a50ec1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd235d453e8ee2f641cbafa4b7078a1407a50ec1"
    }
  ],
  "stats": {
    "total": 118,
    "additions": 97,
    "deletions": 21
  },
  "files": [
    {
      "sha": "987a47c154f92e3e7135d5d29d53b328d0687d6b",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037311d1df303c91395cdfe07b6ab414de99e420/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037311d1df303c91395cdfe07b6ab414de99e420/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=037311d1df303c91395cdfe07b6ab414de99e420",
      "patch": "@@ -1,3 +1,19 @@\n+2020-12-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/obj-elf.c (SEC_ASSEMBLER_SHF_MASK): New.\n+\t(get_section_by_match): Also check if SEC_ASSEMBLER_SHF_MASK of\n+\tsh_flags matches.  Rename info to sh_info.\n+\t(obj_elf_change_section): Don't check previous SHF_GNU_RETAIN.\n+\tRename info to sh_info.\n+\t(obj_elf_section): Rename info to sh_info.  Set sh_flags for\n+\tSHF_GNU_RETAIN.\n+\t* config/obj-elf.h (elf_section_match): Rename info to sh_info.\n+\tAdd sh_flags.\n+\t* testsuite/gas/elf/elf.exp: Run section27.\n+\t* testsuite/gas/elf/section24b.d: Updated.\n+\t* testsuite/gas/elf/section27.d: New file.\n+\t* testsuite/gas/elf/section27.s: Likewise.\n+\n 2020-12-04  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* testsuite/gas/s390/zarch-z10.s: Add tests for risbgz."
    },
    {
      "sha": "5d3b1a0edc4f8742bf3a9a49072b7c459e320726",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 18,
      "deletions": 17,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037311d1df303c91395cdfe07b6ab414de99e420/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037311d1df303c91395cdfe07b6ab414de99e420/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=037311d1df303c91395cdfe07b6ab414de99e420",
      "patch": "@@ -519,6 +519,9 @@ struct section_stack\n \n static struct section_stack *section_stack;\n \n+/* ELF section flags for unique sections.  */\n+#define SEC_ASSEMBLER_SHF_MASK SHF_GNU_RETAIN\n+\n /* Return TRUE iff SEC matches the section info INF.  */\n \n static bfd_boolean\n@@ -529,9 +532,12 @@ get_section_by_match (bfd *abfd ATTRIBUTE_UNUSED, asection *sec, void *inf)\n   const char *group_name = elf_group_name (sec);\n   const char *linked_to_symbol_name\n     = sec->map_head.linked_to_symbol_name;\n-  unsigned int info = elf_section_data (sec)->this_hdr.sh_info;\n+  unsigned int sh_info = elf_section_data (sec)->this_hdr.sh_info;\n+  bfd_vma sh_flags = (elf_section_data (sec)->this_hdr.sh_flags\n+\t\t      & SEC_ASSEMBLER_SHF_MASK);\n \n-  return (info == match->info\n+  return (sh_info == match->sh_info\n+\t  && sh_flags == match->sh_flags\n \t  && ((bfd_section_flags (sec) & SEC_ASSEMBLER_SECTION_ID)\n \t       == (match->flags & SEC_ASSEMBLER_SECTION_ID))\n \t  && sec->section_id == match->section_id\n@@ -740,7 +746,7 @@ obj_elf_change_section (const char *name,\n \ttype = bfd_elf_get_default_section_type (flags);\n       elf_section_type (sec) = type;\n       elf_section_flags (sec) = attr;\n-      elf_section_data (sec)->this_hdr.sh_info = match_p->info;\n+      elf_section_data (sec)->this_hdr.sh_info = match_p->sh_info;\n \n       /* Prevent SEC_HAS_CONTENTS from being inadvertently set.  */\n       if (type == SHT_NOBITS)\n@@ -806,17 +812,9 @@ obj_elf_change_section (const char *name,\n \t\tas_bad (_(\"changed section attributes for %s\"), name);\n \t    }\n \t  else\n-\t    {\n-\t      /* Don't overwrite a previously set SHF_GNU_RETAIN flag for the\n-\t\t section.  The entire section must be marked retained.  */\n-\t      if ((elf_tdata (stdoutput)->has_gnu_osabi & elf_gnu_osabi_retain)\n-\t\t  && ((elf_section_flags (old_sec) & SHF_GNU_RETAIN)))\n-\t\tattr |= SHF_GNU_RETAIN;\n-\n-\t      /* FIXME: Maybe we should consider removing a previously set\n-\t\t processor or application specific attribute as suspicious ?  */\n-\t      elf_section_flags (sec) = attr;\n-\t    }\n+\t    /* FIXME: Maybe we should consider removing a previously set\n+\t       processor or application specific attribute as suspicious?  */\n+\t    elf_section_flags (sec) = attr;\n \n \t  if ((flags & SEC_MERGE) && old_sec->entsize != (unsigned) entsize)\n \t    as_bad (_(\"changed section entity size for %s\"), name);\n@@ -1322,18 +1320,21 @@ obj_elf_section (int push)\n \t      if (ISDIGIT (* input_line_pointer))\n \t\t{\n \t\t  char *t = input_line_pointer;\n-\t\t  match.info = strtoul (input_line_pointer,\n+\t\t  match.sh_info = strtoul (input_line_pointer,\n \t\t\t\t\t&input_line_pointer, 0);\n-\t\t  if (match.info == (unsigned int) -1)\n+\t\t  if (match.sh_info == (unsigned int) -1)\n \t\t    {\n \t\t      as_warn (_(\"unsupported mbind section info: %s\"), t);\n-\t\t      match.info = 0;\n+\t\t      match.sh_info = 0;\n \t\t    }\n \t\t}\n \t      else\n \t\tinput_line_pointer = save;\n \t    }\n \n+\t  if ((gnu_attr & SHF_GNU_RETAIN) != 0)\n+\t    match.sh_flags |= SHF_GNU_RETAIN;\n+\n \t  if (*input_line_pointer == ',')\n \t    {\n \t      char *save = input_line_pointer;"
    },
    {
      "sha": "c714ba7a7088d8afc1eba2582b2c47b52caea485",
      "filename": "gas/config/obj-elf.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037311d1df303c91395cdfe07b6ab414de99e420/gas/config/obj-elf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037311d1df303c91395cdfe07b6ab414de99e420/gas/config/obj-elf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.h?ref=037311d1df303c91395cdfe07b6ab414de99e420",
      "patch": "@@ -106,8 +106,9 @@ struct elf_section_match\n {\n   const char *   group_name;\n   const char *   linked_to_symbol_name;\n-  unsigned int   info;\n   unsigned int   section_id;\n+  unsigned int   sh_info;\t\t/* ELF section information.  */\n+  bfd_vma        sh_flags;\t\t/* ELF section flags.  */\n   flagword       flags;\n };\n "
    },
    {
      "sha": "80dec4effcbb62eefd6aa9c286688097ce24a1d9",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=037311d1df303c91395cdfe07b6ab414de99e420",
      "patch": "@@ -268,6 +268,7 @@ if { [is_elf_format] } then {\n     run_dump_test \"section24b\"\n     run_dump_test \"section25\"\n     run_dump_test \"section26\"\n+    run_dump_test \"section27\"\n     run_dump_test \"sh-link-zero\"\n     run_dump_test \"dwarf2-1\" $dump_opts\n     run_dump_test \"dwarf2-2\" $dump_opts"
    },
    {
      "sha": "03dd2916efcf9686f353bc34f9618e36625e9d4c",
      "filename": "gas/testsuite/gas/elf/section24b.d",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/section24b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/section24b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section24b.d?ref=037311d1df303c91395cdfe07b6ab414de99e420",
      "patch": "@@ -3,8 +3,12 @@\n #source: section24.s\n #readelf: -S --wide\n \n-#failif\n #...\n-  \\[..\\] .(text|data|bss|rodata)[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 [^R] .*\n+  \\[..\\] .text[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 +AX .*\n+#...\n+  \\[..\\] .data[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 +WA .*\n+#...\n+  \\[..\\] .bss[ \t]+NOBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 +WA .*\n+#...\n+  \\[..\\] .rodata[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 +A .*\n #pass\n-"
    },
    {
      "sha": "da0734fe846c8b5154d0459798dfe5bc0dba1f1b",
      "filename": "gas/testsuite/gas/elf/section27.d",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/section27.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/section27.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section27.d?ref=037311d1df303c91395cdfe07b6ab414de99e420",
      "patch": "@@ -0,0 +1,19 @@\n+#readelf: -h -S --wide\n+#name: SHF_GNU_RETAIN sections 27\n+#notarget: ![supports_gnu_osabi]\n+\n+#...\n+ +OS/ABI: +UNIX - (GNU|FreeBSD)\n+#...\n+  \\[..\\] .text[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00  AX.*\n+#...\n+  \\[..\\] .data[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00  WA.*\n+#...\n+  \\[..\\] .bss[ \t]+NOBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00  WA.*\n+#...\n+  \\[..\\] .bss[ \t]+NOBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 WAR.*\n+#...\n+  \\[..\\] .data[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 WAR.*\n+#...\n+  \\[..\\] .text[ \t]+PROGBITS[ \t]+[0-9a-f]+ [0-9a-f]+ [0-9a-f]+ 00 AXR.*\n+#pass"
    },
    {
      "sha": "78e410ff9533fb1d486d697787542514e6083661",
      "filename": "gas/testsuite/gas/elf/section27.s",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/section27.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/037311d1df303c91395cdfe07b6ab414de99e420/gas/testsuite/gas/elf/section27.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section27.s?ref=037311d1df303c91395cdfe07b6ab414de99e420",
      "patch": "@@ -0,0 +1,34 @@\n+\t.section\t.bss,\"aw\"\n+\t.global\tdiscard0\n+\t.type\tdiscard0, %object\n+discard0:\n+\t.zero\t2\n+\n+\t.section\t.data,\"aw\"\n+\t.global\tdiscard1\n+\t.type\tdiscard1, %object\n+discard1:\n+\t.word\t1\n+\n+\t.text\n+\t.global\tdiscard2\n+\t.type\tdiscard2, %function\n+discard2:\n+\t.word\t0\n+\n+\t.section\t.bss,\"awR\",%nobits\n+\t.global\tretain0\n+\t.type\tretain0, %object\n+retain0:\n+\t.zero\t2\n+\n+\t.section\t.data,\"awR\",%progbits\n+\t.type\tretain1, %object\n+retain1:\n+\t.word\t1\n+\n+\t.section\t.text,\"axR\",%progbits\n+\t.global\tretain2\n+\t.type\tretain2, %function\n+retain2:\n+\t.word\t0"
    }
  ]
}