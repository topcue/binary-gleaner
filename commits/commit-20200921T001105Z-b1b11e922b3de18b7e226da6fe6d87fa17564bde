{
  "sha": "b1b11e922b3de18b7e226da6fe6d87fa17564bde",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjFiMTFlOTIyYjNkZTE4YjdlMjI2ZGE2ZmU2ZDg3ZmExNzU2NGJkZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-16T22:14:53Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-21T00:11:05Z"
    },
    "message": "PR26569, R_RISCV_RVC_JUMP results in buffer overflow\n\nThis patch corrects \"size\" and \"bitsize\" in R_RISCV_RVC_* reloc howtos\nso that elfnn-riscv.c:perform_relocation doesn't access past the end\nof a section.  I've also corrected \"size\" in the R_RISCV_CALL* reloc\nhowtos since these relocs apply to two consecutive instructions.  That\ncaused fallout in the assembler with complaints about \"fixup not\ncontained within frag\" due to tc-riscv.c:append_insn finishing off a\nfrag after the auipc insn making up a \"call\" macro.  Which is a little\nrude since the CALL reloc also relocates the following jalr.  Fixed by\nchanging the frag handling a little.\n\nI've also changed R_RISCV_ALIGN and R_RISCV_TPREL_ADD marker reloc\nhowtos to look like R_RISCV_NONE, and corrected dst_mask for numerous\nrelocs, not that it matters very much.\n\nbfd/\n\tPR 26569\n\t* elfxx-riscv.c (howto_table): Correct size and bitsize of\n\tR_RISCV_RVC_BRANCH, R_RISCV_RVC_JUMP, and R_RISCV_RVC_LUI.\n\tCorrect size for R_RISCV_TLS_DTPMOD32, R_RISCV_TLS_DTPREL32,\n\tR_RISCV_CALL, and R_RISCV_CALL_PLT.  Make R_RISCV_TPREL_ADD and\n\tR_RISCV_ALIGN like R_RISCV_NONE.  Correct dst_mask many relocs.\ngas/\n\t* config/tc-riscv.c (append_insn): Don't tie off frags at CALL\n\trelocs.\n\t(riscv_call): Tie them off after the jalr.\n\t(md_apply_fix): Zero fx_size of RELAX fixup.",
    "tree": {
      "sha": "9b536f098bf4f10f69e2c860088804d4baf456b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9b536f098bf4f10f69e2c860088804d4baf456b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b1b11e922b3de18b7e226da6fe6d87fa17564bde",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1b11e922b3de18b7e226da6fe6d87fa17564bde",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b1b11e922b3de18b7e226da6fe6d87fa17564bde",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1b11e922b3de18b7e226da6fe6d87fa17564bde/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4f94229e83d28b00d415a932ff467ee7a621081c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f94229e83d28b00d415a932ff467ee7a621081c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4f94229e83d28b00d415a932ff467ee7a621081c"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 54,
    "deletions": 33
  },
  "files": [
    {
      "sha": "608e3c796c067e5e238652058732d12f9b3f3c44",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1b11e922b3de18b7e226da6fe6d87fa17564bde/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1b11e922b3de18b7e226da6fe6d87fa17564bde/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=b1b11e922b3de18b7e226da6fe6d87fa17564bde",
      "patch": "@@ -1,3 +1,12 @@\n+2020-09-21  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26569\n+\t* elfxx-riscv.c (howto_table): Correct size and bitsize of\n+\tR_RISCV_RVC_BRANCH, R_RISCV_RVC_JUMP, and R_RISCV_RVC_LUI.\n+\tCorrect size for R_RISCV_TLS_DTPMOD32, R_RISCV_TLS_DTPREL32,\n+\tR_RISCV_CALL, and R_RISCV_CALL_PLT.  Make R_RISCV_TPREL_ADD and\n+\tR_RISCV_ALIGN like R_RISCV_NONE.  Correct dst_mask many relocs.\n+\n 2020-09-17  Mikael Pettersson  <mikpelinux@gmail.com>\n \n \tPR ld/18808"
    },
    {
      "sha": "e5adea57b124489fadae67ef8aad47e978c03d1d",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 30,
      "deletions": 30,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1b11e922b3de18b7e226da6fe6d87fa17564bde/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1b11e922b3de18b7e226da6fe6d87fa17564bde/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=b1b11e922b3de18b7e226da6fe6d87fa17564bde",
      "patch": "@@ -69,7 +69,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_32\",\t\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 64 bit relocation.  */\n@@ -99,7 +99,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_RELATIVE\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   HOWTO (R_RISCV_COPY,\t\t\t/* type */\n@@ -133,7 +133,7 @@ static reloc_howto_type howto_table[] =\n   /* Dynamic TLS relocations.  */\n   HOWTO (R_RISCV_TLS_DTPMOD32,\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 4,\t\t\t\t/* size */\n+\t 2,\t\t\t\t/* size */\n \t 32,\t\t\t\t/* bitsize */\n \t FALSE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n@@ -142,7 +142,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_TLS_DTPMOD32\",\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   HOWTO (R_RISCV_TLS_DTPMOD64,\t\t/* type */\n@@ -161,7 +161,7 @@ static reloc_howto_type howto_table[] =\n \n   HOWTO (R_RISCV_TLS_DTPREL32,\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 4,\t\t\t\t/* size */\n+\t 2,\t\t\t\t/* size */\n \t 32,\t\t\t\t/* bitsize */\n \t FALSE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n@@ -170,7 +170,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_TLS_DTPREL32\",\t/* name */\n \t TRUE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   HOWTO (R_RISCV_TLS_DTPREL64,\t\t/* type */\n@@ -198,7 +198,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_TLS_TPREL32\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   HOWTO (R_RISCV_TLS_TPREL64,\t\t/* type */\n@@ -254,7 +254,7 @@ static reloc_howto_type howto_table[] =\n   /* 32-bit PC-relative function call (AUIPC/JALR).  */\n   HOWTO (R_RISCV_CALL,\t\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 2,\t\t\t\t/* size */\n+\t 4,\t\t\t\t/* size */\n \t 64,\t\t\t\t/* bitsize */\n \t TRUE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n@@ -270,7 +270,7 @@ static reloc_howto_type howto_table[] =\n   /* Like R_RISCV_CALL, but not locally binding.  */\n   HOWTO (R_RISCV_CALL_PLT,\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 2,\t\t\t\t/* size */\n+\t 4,\t\t\t\t/* size */\n \t 64,\t\t\t\t/* bitsize */\n \t TRUE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n@@ -466,14 +466,14 @@ static reloc_howto_type howto_table[] =\n   /* TLS LE thread pointer usage.  May be relaxed.  */\n   HOWTO (R_RISCV_TPREL_ADD,\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 2,\t\t\t\t/* size */\n-\t 32,\t\t\t\t/* bitsize */\n+\t 3,\t\t\t\t/* size */\n+\t 0,\t\t\t\t/* bitsize */\n \t FALSE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n \t complain_overflow_dont,\t/* complain_on_overflow */\n \t bfd_elf_generic_reloc,\t\t/* special_function */\n \t \"R_RISCV_TPREL_ADD\",\t\t/* name */\n-\t TRUE,\t\t\t\t/* partial_inplace */\n+\t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n \t 0,\t\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n@@ -490,7 +490,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_ADD8\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xff,\t\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 16-bit in-place addition, for local label subtraction.  */\n@@ -505,7 +505,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_ADD16\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 32-bit in-place addition, for local label subtraction.  */\n@@ -520,7 +520,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_ADD32\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 64-bit in-place addition, for local label subtraction.  */\n@@ -550,7 +550,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_SUB8\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xff,\t\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 16-bit in-place addition, for local label subtraction.  */\n@@ -565,7 +565,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_SUB16\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 32-bit in-place addition, for local label subtraction.  */\n@@ -580,7 +580,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_SUB32\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 64-bit in-place addition, for local label subtraction.  */\n@@ -633,7 +633,7 @@ static reloc_howto_type howto_table[] =\n      addend rounded up to the next power of two.  */\n   HOWTO (R_RISCV_ALIGN,\t\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 2,\t\t\t\t/* size */\n+\t 3,\t\t\t\t/* size */\n \t 0,\t\t\t\t/* bitsize */\n \t FALSE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n@@ -643,13 +643,13 @@ static reloc_howto_type howto_table[] =\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n \t 0,\t\t\t\t/* dst_mask */\n-\t TRUE),\t\t\t\t/* pcrel_offset */\n+\t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 8-bit PC-relative branch offset.  */\n   HOWTO (R_RISCV_RVC_BRANCH,\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 2,\t\t\t\t/* size */\n-\t 32,\t\t\t\t/* bitsize */\n+\t 1,\t\t\t\t/* size */\n+\t 16,\t\t\t\t/* bitsize */\n \t TRUE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n \t complain_overflow_signed,\t/* complain_on_overflow */\n@@ -663,8 +663,8 @@ static reloc_howto_type howto_table[] =\n   /* 11-bit PC-relative jump offset.  */\n   HOWTO (R_RISCV_RVC_JUMP,\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 2,\t\t\t\t/* size */\n-\t 32,\t\t\t\t/* bitsize */\n+\t 1,\t\t\t\t/* size */\n+\t 16,\t\t\t\t/* bitsize */\n \t TRUE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n \t complain_overflow_dont,\t/* complain_on_overflow */\n@@ -678,8 +678,8 @@ static reloc_howto_type howto_table[] =\n   /* High 6 bits of 18-bit absolute address.  */\n   HOWTO (R_RISCV_RVC_LUI,\t\t/* type */\n \t 0,\t\t\t\t/* rightshift */\n-\t 2,\t\t\t\t/* size */\n-\t 32,\t\t\t\t/* bitsize */\n+\t 1,\t\t\t\t/* size */\n+\t 16,\t\t\t\t/* bitsize */\n \t FALSE,\t\t\t\t/* pc_relative */\n \t 0,\t\t\t\t/* bitpos */\n \t complain_overflow_dont,\t/* complain_on_overflow */\n@@ -807,7 +807,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_SET8\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xff,\t\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 16-bit in-place setting, for local label subtraction.  */\n@@ -822,7 +822,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_SET16\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 32-bit in-place setting, for local label subtraction.  */\n@@ -837,7 +837,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_SET32\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n \n   /* 32-bit PC relative.  */\n@@ -852,7 +852,7 @@ static reloc_howto_type howto_table[] =\n \t \"R_RISCV_32_PCREL\",\t\t/* name */\n \t FALSE,\t\t\t\t/* partial_inplace */\n \t 0,\t\t\t\t/* src_mask */\n-\t MINUS_ONE,\t\t\t/* dst_mask */\n+\t 0xffffffff,\t\t\t/* dst_mask */\n \t FALSE),\t\t\t/* pcrel_offset */\n };\n "
    },
    {
      "sha": "ff8fa2201c5405a4e6a12c13ce2bfc1af6a108ae",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1b11e922b3de18b7e226da6fe6d87fa17564bde/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1b11e922b3de18b7e226da6fe6d87fa17564bde/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=b1b11e922b3de18b7e226da6fe6d87fa17564bde",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-21  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26569\n+\t* config/tc-riscv.c (append_insn): Don't tie off frags at CALL\n+\trelocs.\n+\t(riscv_call): Tie them off after the jalr.\n+\t(md_apply_fix): Zero fx_size of RELAX fixup.\n+\n 2020-09-018  David Faust  <david.faust@oracle.com>\n \n \t* testsuite/gas/bpf/alu-xbpf.d: New file."
    },
    {
      "sha": "eb31e42a2e7ce92bd6dc00bc7e5230dbf1793674",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1b11e922b3de18b7e226da6fe6d87fa17564bde/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1b11e922b3de18b7e226da6fe6d87fa17564bde/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=b1b11e922b3de18b7e226da6fe6d87fa17564bde",
      "patch": "@@ -1133,9 +1133,7 @@ append_insn (struct riscv_cl_insn *ip, expressionS *address_expr,\n      optimized away or compressed by the linker during relaxation, to prevent\n      the assembler from computing static offsets across such an instruction.\n      This is necessary to get correct EH info.  */\n-  if (reloc_type == BFD_RELOC_RISCV_CALL\n-      || reloc_type == BFD_RELOC_RISCV_CALL_PLT\n-      || reloc_type == BFD_RELOC_RISCV_HI20\n+  if (reloc_type == BFD_RELOC_RISCV_HI20\n       || reloc_type == BFD_RELOC_RISCV_PCREL_HI20\n       || reloc_type == BFD_RELOC_RISCV_TPREL_HI20\n       || reloc_type == BFD_RELOC_RISCV_TPREL_ADD)\n@@ -1311,8 +1309,13 @@ static void\n riscv_call (int destreg, int tempreg, expressionS *ep,\n \t    bfd_reloc_code_real_type reloc)\n {\n+  /* Ensure the jalr is emitted to the same frag as the auipc.  */\n+  frag_grow (8);\n   macro_build (ep, \"auipc\", \"d,u\", tempreg, reloc);\n   macro_build (NULL, \"jalr\", \"d,s\", destreg, tempreg);\n+  /* See comment at end of append_insn.  */\n+  frag_wane (frag_now);\n+  frag_new (0);\n }\n \n /* Load an integer constant into a register.  */\n@@ -3031,6 +3034,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n       fixP->fx_next = xmemdup (fixP, sizeof (*fixP), sizeof (*fixP));\n       fixP->fx_next->fx_addsy = fixP->fx_next->fx_subsy = NULL;\n       fixP->fx_next->fx_r_type = BFD_RELOC_RISCV_RELAX;\n+      fixP->fx_next->fx_size = 0;\n     }\n }\n "
    }
  ]
}