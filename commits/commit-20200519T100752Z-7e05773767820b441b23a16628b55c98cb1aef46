{
  "sha": "7e05773767820b441b23a16628b55c98cb1aef46",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2UwNTc3Mzc2NzgyMGI0NDFiMjNhMTY2MjhiNTVjOThjYjFhZWY0Ng==",
  "commit": {
    "author": {
      "name": "Siddhesh Poyarekar",
      "email": "siddesh.poyarekar@arm.com",
      "date": "2020-05-19T10:07:52Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-19T10:07:52Z"
    },
    "message": "[PATCH v3] aarch64: Emit jump slot for conditional branch to undefined symbols\n\nThe linker silently writes out a conditional branch to 0 if the\ntarget symbol in R_AARCH64_CONDBR19 or R_AARCH64_TSTBR14 relocations is\nundefined.  Emit a PLT instead so that behaviour is the same for these\nrelocations as the llvm linker.\n\nThe special behaviour for undefined weak symbols, where conditional\nbranches to such symbols result in a branch unto themselves, has been\nretained.  This is because the weak-undefined.s test explicitly checks\nfor that, leading me to conclude that it's expected behaviour.\n\nbfd\t* elfnn-aarch64.c (elfNN_aarch64_final_link_relocate): Club\n\tBFD_RELOC_AARCH64_BRANCH19 and BFD_RELOC_AARCH64_TSTBR14\n\tcases with BFD_RELOC_AARCH64_JUMP26.\n\t(elfNN_aarch64_check_relocs): Likewise.\n\nld\t* testsuite/ld-aarch64/aarch64-elf.exp: New test\n\temit-relocs-560.\n\t* testsuite/ld-aarch64/emit-relocs-560.d: New file.\n\t* testsuite/ld-aarch64/emit-relocs-560.s: New file.",
    "tree": {
      "sha": "76a372538e574c4de9168c05126acc4908be6f81",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/76a372538e574c4de9168c05126acc4908be6f81"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7e05773767820b441b23a16628b55c98cb1aef46",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e05773767820b441b23a16628b55c98cb1aef46",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7e05773767820b441b23a16628b55c98cb1aef46",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e05773767820b441b23a16628b55c98cb1aef46/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "607b483327fdfc75fb193870b3c4e7445ce3f64d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/607b483327fdfc75fb193870b3c4e7445ce3f64d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/607b483327fdfc75fb193870b3c4e7445ce3f64d"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 44,
    "deletions": 4
  },
  "files": [
    {
      "sha": "c10c1e93c9abb9c948c7ed21c1c2372d1a9033e9",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e05773767820b441b23a16628b55c98cb1aef46/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e05773767820b441b23a16628b55c98cb1aef46/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7e05773767820b441b23a16628b55c98cb1aef46",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-19  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>\n+\n+\t* elfnn-aarch64.c (elfNN_aarch64_final_link_relocate): Club\n+\tBFD_RELOC_AARCH64_BRANCH19 and BFD_RELOC_AARCH64_TSTBR14\n+\tcases with BFD_RELOC_AARCH64_JUMP26.\n+\t(elfNN_aarch64_check_relocs): Likewise.\n+\n 2020-05-19  Alan Modra  <amodra@gmail.com>\n \n \t* aix5ppc-core.c (xcoff64_core_file_matches_executable_p): Use"
    },
    {
      "sha": "02df893fcdd41d0ddaf31eb5b8c613615790da38",
      "filename": "bfd/elfnn-aarch64.c",
      "status": "modified",
      "additions": 18,
      "deletions": 4,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e05773767820b441b23a16628b55c98cb1aef46/bfd/elfnn-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e05773767820b441b23a16628b55c98cb1aef46/bfd/elfnn-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-aarch64.c?ref=7e05773767820b441b23a16628b55c98cb1aef46",
      "patch": "@@ -5494,6 +5494,7 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n   bfd_vma orig_value = value;\n   bfd_boolean resolved_to_zero;\n   bfd_boolean abs_symbol_p;\n+  bfd_boolean via_plt_p;\n \n   globals = elf_aarch64_hash_table (info);\n \n@@ -5515,6 +5516,8 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n \t\t  : bfd_is_und_section (sym_sec));\n   abs_symbol_p = h != NULL && bfd_is_abs_symbol (&h->root);\n \n+  via_plt_p = (globals->root.splt != NULL && h != NULL\n+\t       && h->plt.offset != (bfd_vma) - 1);\n \n   /* Since STT_GNU_IFUNC symbol must go through PLT, we handle\n      it here if it is defined in a non-shared object.  */\n@@ -5850,12 +5853,23 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n \tvalue += signed_addend;\n       break;\n \n+    case BFD_RELOC_AARCH64_BRANCH19:\n+    case BFD_RELOC_AARCH64_TSTBR14:\n+      /* A conditional branch to an undefined weak symbol is converted to a\n+\t branch to itself.  */\n+      if (weak_undef_p && !via_plt_p)\n+\t{\n+\t  value = _bfd_aarch64_elf_resolve_relocation (input_bfd, bfd_r_type,\n+\t\t\t\t\t\t       place, value,\n+\t\t\t\t\t\t       signed_addend,\n+\t\t\t\t\t\t       weak_undef_p);\n+\t  break;\n+\t}\n+      /* Fall through.  */\n     case BFD_RELOC_AARCH64_CALL26:\n     case BFD_RELOC_AARCH64_JUMP26:\n       {\n \tasection *splt = globals->root.splt;\n-\tbfd_boolean via_plt_p =\n-\t  splt != NULL && h != NULL && h->plt.offset != (bfd_vma) - 1;\n \n \t/* A call to an undefined weak symbol is converted to a jump to\n \t   the next instruction unless a PLT entry will be created.\n@@ -5943,7 +5957,6 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n     case BFD_RELOC_AARCH64_32:\n #endif\n     case BFD_RELOC_AARCH64_ADD_LO12:\n-    case BFD_RELOC_AARCH64_BRANCH19:\n     case BFD_RELOC_AARCH64_LDST128_LO12:\n     case BFD_RELOC_AARCH64_LDST16_LO12:\n     case BFD_RELOC_AARCH64_LDST32_LO12:\n@@ -5959,7 +5972,6 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n     case BFD_RELOC_AARCH64_MOVW_G2_NC:\n     case BFD_RELOC_AARCH64_MOVW_G2_S:\n     case BFD_RELOC_AARCH64_MOVW_G3:\n-    case BFD_RELOC_AARCH64_TSTBR14:\n       value = _bfd_aarch64_elf_resolve_relocation (input_bfd, bfd_r_type,\n \t\t\t\t\t\t   place, value,\n \t\t\t\t\t\t   signed_addend, weak_undef_p);\n@@ -8022,6 +8034,8 @@ elfNN_aarch64_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t    break;\n \t  }\n \n+\tcase BFD_RELOC_AARCH64_BRANCH19:\n+\tcase BFD_RELOC_AARCH64_TSTBR14:\n \tcase BFD_RELOC_AARCH64_CALL26:\n \tcase BFD_RELOC_AARCH64_JUMP26:\n \t  /* If this is a local symbol then we resolve it"
    },
    {
      "sha": "cf566b3255911431281313d4706f5fd1dfee57d5",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e05773767820b441b23a16628b55c98cb1aef46/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e05773767820b441b23a16628b55c98cb1aef46/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=7e05773767820b441b23a16628b55c98cb1aef46",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-19  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>\n+\n+\t* testsuite/ld-aarch64/aarch64-elf.exp: New test\n+\temit-relocs-560.\n+\t* testsuite/ld-aarch64/emit-relocs-560.d: New file.\n+\t* testsuite/ld-aarch64/emit-relocs-560.s: New file.\n+\n 2020-05-19  Alan Modra  <amodra@gmail.com>\n \n \t* emultempl/beos.em (sort_by_file_name): Use bfd_get_filename"
    },
    {
      "sha": "4c44fa1642b9fea081e78376a27e203f4c751af8",
      "filename": "ld/testsuite/ld-aarch64/aarch64-elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e05773767820b441b23a16628b55c98cb1aef46/ld/testsuite/ld-aarch64/aarch64-elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e05773767820b441b23a16628b55c98cb1aef46/ld/testsuite/ld-aarch64/aarch64-elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/aarch64-elf.exp?ref=7e05773767820b441b23a16628b55c98cb1aef46",
      "patch": "@@ -236,6 +236,7 @@ run_dump_test_lp64 \"emit-relocs-557\"\n run_dump_test_lp64 \"emit-relocs-558\"\n run_dump_test_lp64 \"emit-relocs-558-overflow\"\n run_dump_test_lp64 \"emit-relocs-559\"\n+run_dump_test_lp64 \"emit-relocs-560\"\n \n run_dump_test \"reloc-overflow-bad\"\n "
    },
    {
      "sha": "153532457b4ea955fb09b6c97508fe8ce78adcaf",
      "filename": "ld/testsuite/ld-aarch64/emit-relocs-560.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e05773767820b441b23a16628b55c98cb1aef46/ld/testsuite/ld-aarch64/emit-relocs-560.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e05773767820b441b23a16628b55c98cb1aef46/ld/testsuite/ld-aarch64/emit-relocs-560.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/emit-relocs-560.d?ref=7e05773767820b441b23a16628b55c98cb1aef46",
      "patch": "@@ -0,0 +1,8 @@\n+#source: emit-relocs-560.s\n+#ld: -shared\n+#readelf: -r\n+\n+Relocation section '.rela.plt' at offset 0x[0-9a-f]+ contains 2 entries:\n+  Offset          Info           Type           Sym. Value    Sym. Name \\+ Addend\n+[0-9a-f]+  000100000402 R_AARCH64_JUMP_SL 0000000000000000 baz \\+ 0\n+[0-9a-f]+  000200000402 R_AARCH64_JUMP_SL 0000000000000000 bar \\+ 0"
    },
    {
      "sha": "9529e8fd5e25d881f30ba780f2ed7466eb755f0b",
      "filename": "ld/testsuite/ld-aarch64/emit-relocs-560.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7e05773767820b441b23a16628b55c98cb1aef46/ld/testsuite/ld-aarch64/emit-relocs-560.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7e05773767820b441b23a16628b55c98cb1aef46/ld/testsuite/ld-aarch64/emit-relocs-560.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/emit-relocs-560.s?ref=7e05773767820b441b23a16628b55c98cb1aef46",
      "patch": "@@ -0,0 +1,3 @@\n+foo:\n+\ttbz\tx0, 1, bar\n+\tcbnz\tx1, baz"
    }
  ]
}