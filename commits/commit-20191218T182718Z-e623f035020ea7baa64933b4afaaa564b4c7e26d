{
  "sha": "e623f035020ea7baa64933b4afaaa564b4c7e26d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTYyM2YwMzUwMjBlYTdiYWE2NDkzM2I0YWZhYWE1NjRiNGM3ZTI2ZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-12-18T18:27:18Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-12-18T18:27:18Z"
    },
    "message": "Fix indentation (and clang warning) in c-lang.c\n\nI see this warning when building with clang:\n\n      CXX    c-lang.o\n    /home/smarchi/src/binutils-gdb/gdb/c-lang.c:314:7: error: misleading indentation; statement is not part of the previous 'if' [-Werror,-Wmisleading-indentation]\n          *length = i * width;\n          ^\n    /home/smarchi/src/binutils-gdb/gdb/c-lang.c:308:4: note: previous statement is here\n              if (extract_unsigned_integer (contents + i * width,\n              ^\n\nIt took me a while to notice that some lines in that area have a\nspurious space before the tabs, at the beginning of the ling.  I'm not\nsure how clang translates that to misleading indentation, but making the\nindentation correct gets rid of the error.\n\nThere are many more instances of this in the code base (`grep -P '^ \\t'\n*.c`), if others think it's a good idea, it would be pretty easy to fix\nthem all up in one shot.\n\ngdb/ChangeLog:\n\n\t* c-lang.c (c_get_string, asm_language_defn): Remove space\n\tbefore tab.",
    "tree": {
      "sha": "32159da2a99dd9994e54d1257dc56c97d1736a56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/32159da2a99dd9994e54d1257dc56c97d1736a56"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e623f035020ea7baa64933b4afaaa564b4c7e26d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e623f035020ea7baa64933b4afaaa564b4c7e26d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e623f035020ea7baa64933b4afaaa564b4c7e26d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e623f035020ea7baa64933b4afaaa564b4c7e26d/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "28ce7b07473c33f2e4e380a861973d68ffe8017f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/28ce7b07473c33f2e4e380a861973d68ffe8017f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/28ce7b07473c33f2e4e380a861973d68ffe8017f"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 10,
    "deletions": 5
  },
  "files": [
    {
      "sha": "53885e13fc76b27f4a60d210dd2c16f9bcfa9368",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e623f035020ea7baa64933b4afaaa564b4c7e26d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e623f035020ea7baa64933b4afaaa564b4c7e26d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e623f035020ea7baa64933b4afaaa564b4c7e26d",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-18  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* c-lang.c (c_get_string, asm_language_defn): Remove space\n+\tbefore tab.\n+\n 2019-12-18  Tom Tromey  <tromey@adacore.com>\n \n \tPR build/25250:"
    },
    {
      "sha": "1f40e885d99aac3e41227fd22e15f7ccb40d8ce2",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e623f035020ea7baa64933b4afaaa564b4c7e26d/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e623f035020ea7baa64933b4afaaa564b4c7e26d/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=e623f035020ea7baa64933b4afaaa564b4c7e26d",
      "patch": "@@ -303,14 +303,14 @@ c_get_string (struct value *value, gdb::unique_xmalloc_ptr<gdb_byte> *buffer,\n       if (*length >= 0)\n \ti  = *length;\n       else\n- \t/* Otherwise, look for a null character.  */\n- \tfor (i = 0; i < fetchlimit; i++)\n+\t/* Otherwise, look for a null character.  */\n+\tfor (i = 0; i < fetchlimit; i++)\n \t  if (extract_unsigned_integer (contents + i * width,\n \t\t\t\t\twidth, byte_order) == 0)\n- \t    break;\n+\t    break;\n   \n       /* I is now either a user-defined length, the number of non-null\n- \t characters, or FETCHLIMIT.  */\n+\t characters, or FETCHLIMIT.  */\n       *length = i * width;\n       buffer->reset ((gdb_byte *) xmalloc (*length));\n       memcpy (buffer->get (), contents, *length);\n@@ -1119,7 +1119,7 @@ extern const struct language_defn asm_language_defn =\n   0,\t\t\t\t/* String lower bound */\n   default_word_break_characters,\n   default_collect_symbol_completion_matches,\n-  c_language_arch_info, \t/* FIXME: la_language_arch_info.  */\n+  c_language_arch_info,\t\t/* FIXME: la_language_arch_info.  */\n   default_print_array_index,\n   default_pass_by_reference,\n   c_watch_location_expression,"
    }
  ]
}