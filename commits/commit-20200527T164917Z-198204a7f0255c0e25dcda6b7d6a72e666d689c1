{
  "sha": "198204a7f0255c0e25dcda6b7d6a72e666d689c1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTk4MjA0YTdmMDI1NWMwZTI1ZGNkYTZiN2Q2YTcyZTY2NmQ2ODljMQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-27T16:49:17Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-27T16:49:17Z"
    },
    "message": " [PATCH] allow empty string as argument to -Map\n\n\t* lexsup.c (parse_args): If the map filename is defined but empty\n\tcreate a name based upon the output file name.  If the name is\n\tdefined but refers to a directory create a file inside the\n\tdirectory based on the output file name.\n\t* ld.texi: Document the new feature.\n\t* testsuite/ld-script/map-address.exp: Add test of new feature.\n\t* NEWS: Mention the new feature.",
    "tree": {
      "sha": "dc802f5592620ef65711ded01600f38420541270",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dc802f5592620ef65711ded01600f38420541270"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/198204a7f0255c0e25dcda6b7d6a72e666d689c1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/198204a7f0255c0e25dcda6b7d6a72e666d689c1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/198204a7f0255c0e25dcda6b7d6a72e666d689c1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/198204a7f0255c0e25dcda6b7d6a72e666d689c1/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "17ee85fc2af74471e8c57502714a32bbeac5f1ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17ee85fc2af74471e8c57502714a32bbeac5f1ae",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/17ee85fc2af74471e8c57502714a32bbeac5f1ae"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 76,
    "deletions": 2
  },
  "files": [
    {
      "sha": "fa0510d8bf627cdc250583be9177b41205536889",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=198204a7f0255c0e25dcda6b7d6a72e666d689c1",
      "patch": "@@ -1,3 +1,14 @@\n+2020-05-27  Rasmus Villemoes <rv@rasmusvillemoes.dk>\n+\t    Nick Clifton  <nickc@redhat.com>\n+\n+\t* lexsup.c (parse_args): If the map filename is defined but empty\n+\tcreate a name based upon the output file name.  If the name is\n+\tdefined but refers to a directory create a file inside the\n+\tdirectory based on the output file name.\n+\t* ld.texi: Document the new feature.\n+\t* testsuite/ld-script/map-address.exp: Add test of new feature.\n+\t* NEWS: Mention the new feature.\n+\n 2020-05-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/22909"
    },
    {
      "sha": "98f07a73e12c2ed7e0d9e18baa0b7e9d887e381a",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=198204a7f0255c0e25dcda6b7d6a72e666d689c1",
      "patch": "@@ -1,5 +1,10 @@\n -*- text -*-\n \n+* The -Map=<filename> command line option has been extended so that if\n+  <filename> is omitted then a file called <output-filename>.map will be\n+  created.  Plus if <filename> is a directory then\n+  <filename>/<output-filename>.map will be created.\n+\n * Add a command-line option for ELF linker, --warn-textrel, to warn that\n   DT_TEXTREL is set in a position-independent executable or shared object.\n "
    },
    {
      "sha": "52342523ed3372bf2c9bb5aec9db443eb99c870b",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=198204a7f0255c0e25dcda6b7d6a72e666d689c1",
      "patch": "@@ -1760,7 +1760,12 @@ Print a summary of all target-specific options on the standard output and exit.\n @kindex -Map=@var{mapfile}\n @item -Map=@var{mapfile}\n Print a link map to the file @var{mapfile}.  See the description of the\n-@option{-M} option, above.\n+@option{-M} option, above.  Specifying the empty string as @var{mapfile}\n+(that is, @code{-Map=}) causes the link map to be written to a file\n+named after the @var{output} file, with @code{.map} appended.\n+Specifying a directory as @var{mapfile} causes the link map to be\n+written into a file inside the directory.  The name of the file is\n+again based upon the @var{output} filename with @code{.map} appended.\n \n @cindex memory usage\n @kindex --no-keep-memory"
    },
    {
      "sha": "49c4f23950dda582b35e4ab0291d2244356cafd1",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 32,
      "deletions": 1,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=198204a7f0255c0e25dcda6b7d6a72e666d689c1",
      "patch": "@@ -359,7 +359,7 @@ static const struct ld_option ld_options[] =\n   { {\"init\", required_argument, NULL, OPTION_INIT},\n     '\\0', N_(\"SYMBOL\"), N_(\"Call SYMBOL at load-time\"), ONE_DASH },\n   { {\"Map\", required_argument, NULL, OPTION_MAP},\n-    '\\0', N_(\"FILE\"), N_(\"Write a map file\"), ONE_DASH },\n+    '\\0', N_(\"[FILE]\"), N_(\"Write a map file (default: <outputname>.map)\"), ONE_DASH },\n   { {\"no-define-common\", no_argument, NULL, OPTION_NO_DEFINE_COMMON},\n     '\\0', NULL, N_(\"Do not define Common storage\"), TWO_DASHES },\n   { {\"no-demangle\", no_argument, NULL, OPTION_NO_DEMANGLE },\n@@ -1595,6 +1595,37 @@ parse_args (unsigned argc, char **argv)\n \t}\n     }\n \n+  /* Run a couple of checks on the map filename.  */\n+  if (config.map_filename)\n+    {\n+      /* If name has been provided then use the\n+\t output filename with a .map extension.  */\n+      if (config.map_filename[0] == 0)\n+\t{\n+\t  /* FIXME: This is a memory leak as the string is never freed.  */\n+\t  if (asprintf (&config.map_filename, \"%s.map\", output_filename) < 0)\n+\t    einfo (_(\"%F%P: %s: can not create name of map file: %E\\n\"));\n+\t}\n+      else\n+\t{\n+\t  struct stat s;\n+\n+\t  /* If the map filename is actually a directory then create\n+\t     a file inside it, again based upon the output filename.  */\n+\t  if (stat (config.map_filename, &s) >= 0\n+\t      && S_ISDIR (s.st_mode))\n+\t    {\n+\t      char * new_name;\n+\n+\t      /* FIXME: Another memory leak.  */\n+\t      if (asprintf (&new_name, \"%s/%s.map\",\n+\t\t\t    config.map_filename, output_filename) < 0)\n+\t\teinfo (_(\"%F%P: %s: can not create name of map file: %E\\n\"));\n+\t      config.map_filename = new_name;\n+\t    }\n+\t}\n+    }\n+\n   if (command_line.soname && command_line.soname[0] == '\\0')\n     {\n       einfo (_(\"%P: SONAME must not be empty string; ignored\\n\"));"
    },
    {
      "sha": "352a9d8f1efd9ce6e5370798dbbe2cfb6817d97c",
      "filename": "ld/testsuite/ld-scripts/map-address.exp",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/testsuite/ld-scripts/map-address.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/198204a7f0255c0e25dcda6b7d6a72e666d689c1/ld/testsuite/ld-scripts/map-address.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/map-address.exp?ref=198204a7f0255c0e25dcda6b7d6a72e666d689c1",
      "patch": "@@ -45,3 +45,25 @@ if {[regexp_diff \\\n } else {\n     pass $testname\n }\n+\n+set testname \"map to directory\"\n+\n+if {![ld_link $ld tmpdir/map-address \\\n+\t \"-T $srcdir/$subdir/map-address.t \\\n+\t  tmpdir/map-address.o \\\n+\t  -Map tmpdir --output fred\"]} {\n+    fail $testname\n+    return\n+}\n+\n+if [is_remote host] then {\n+    remote_upload host \"tmpdir/fred.map\"\n+}\n+\n+if {[regexp_diff \\\n+\t       \"tmpdir/fred.map\" \\\n+\t       \"$srcdir/$subdir/map-address.d\"]} {\n+    fail $testname\n+} else {\n+    pass $testname\n+}"
    }
  ]
}