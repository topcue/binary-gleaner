{
  "sha": "24338fb9d964135fced728e943d0e8e80df3840b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjQzMzhmYjlkOTY0MTM1ZmNlZDcyOGU5NDNkMGU4ZTgwZGYzODQwYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:03Z"
    },
    "message": "Split out eval_op_lognot\n\nThis splits UNOP_LOGICAL_NOT into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_lognot): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "64f1dd379bf3760381559da9430a20154a6194b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64f1dd379bf3760381559da9430a20154a6194b9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/24338fb9d964135fced728e943d0e8e80df3840b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24338fb9d964135fced728e943d0e8e80df3840b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/24338fb9d964135fced728e943d0e8e80df3840b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24338fb9d964135fced728e943d0e8e80df3840b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1f09ec811eec9ea3a5ef4276f8e94ea6c5e85ef2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f09ec811eec9ea3a5ef4276f8e94ea6c5e85ef2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1f09ec811eec9ea3a5ef4276f8e94ea6c5e85ef2"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 25,
    "deletions": 9
  },
  "files": [
    {
      "sha": "b9a873727f71a1f42f1c41660763498abc1c3359",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24338fb9d964135fced728e943d0e8e80df3840b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24338fb9d964135fced728e943d0e8e80df3840b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=24338fb9d964135fced728e943d0e8e80df3840b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_lognot): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_complement): New function."
    },
    {
      "sha": "6d447d5f706059e4af85e5840aa8211d820e23b1",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 20,
      "deletions": 9,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24338fb9d964135fced728e943d0e8e80df3840b/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24338fb9d964135fced728e943d0e8e80df3840b/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=24338fb9d964135fced728e943d0e8e80df3840b",
      "patch": "@@ -1805,6 +1805,25 @@ eval_op_complement (struct type *expect_type, struct expression *exp,\n     }\n }\n \n+/* A helper function for UNOP_LOGICAL_NOT.  */\n+\n+static struct value *\n+eval_op_lognot (struct type *expect_type, struct expression *exp,\n+\t\tenum noside noside, enum exp_opcode op,\n+\t\tstruct value *arg1)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  if (unop_user_defined_p (op, arg1))\n+    return value_x_unop (arg1, op, noside);\n+  else\n+    {\n+      struct type *type = language_bool_type (exp->language_defn,\n+\t\t\t\t\t      exp->gdbarch);\n+      return value_from_longest (type, (LONGEST) value_logical_not (arg1));\n+    }\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2668,15 +2687,7 @@ evaluate_subexp_standard (struct type *expect_type,\n \n     case UNOP_LOGICAL_NOT:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      if (unop_user_defined_p (op, arg1))\n-\treturn value_x_unop (arg1, op, noside);\n-      else\n-\t{\n-\t  type = language_bool_type (exp->language_defn, exp->gdbarch);\n-\t  return value_from_longest (type, (LONGEST) value_logical_not (arg1));\n-\t}\n+      return eval_op_lognot (expect_type, exp, noside, op, arg1);\n \n     case UNOP_IND:\n       if (expect_type && expect_type->code () == TYPE_CODE_PTR)"
    }
  ]
}