{
  "sha": "ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWQzYmRhYzQyY2U4ZTU0NWUwNGJkMTVhMTUzYTg1YWVlNGE3YTlhZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-13T20:53:08Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-06T10:18:37Z"
    },
    "message": "gdb/testsuite: allow gdb.base/overlays.exp to compile for m32r\n\nThe gdb.base/overlays.exp test is only currently supported on m32r\nbaremetal targets, however, when I configure a toolchain for m32r-elf\nthe test does not compile.\n\nThis commit updates the linker script, fixes some TCL errors in the\nexp file, and adds some missing includes to the source file so that\nthe test does compile.\n\nWith this test, when run against an m32r-elf toolchain the test mostly\npasses, but there are a couple of failures, these are GDB issues and\nwill be addressed in a later commit.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/m32r.ld: Remove SEARCH_DIR line.  Add MEMORY regions,\n\tmake use of regions throughout.\n\t* gdb.base/overlays.exp: Enclose string with variableds in \"..\",\n\tnot {...}.\n\t* gdb.base/ovlymgr.c: Add 'string.h' and 'stdlib.h' includes.",
    "tree": {
      "sha": "83a279efdcf4b8c95d6f17cd7d0c05ce56571fee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/83a279efdcf4b8c95d6f17cd7d0c05ce56571fee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3ce6300ea8e9d205e6c4e0d6bfab31cf1fe4ac07",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ce6300ea8e9d205e6c4e0d6bfab31cf1fe4ac07",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3ce6300ea8e9d205e6c4e0d6bfab31cf1fe4ac07"
    }
  ],
  "stats": {
    "total": 96,
    "additions": 58,
    "deletions": 38
  },
  "files": [
    {
      "sha": "a6ac59d5e939fdbba66008fc9c7f595c1e0b349d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
      "patch": "@@ -1,3 +1,11 @@\n+2020-10-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/m32r.ld: Remove SEARCH_DIR line.  Add MEMORY regions,\n+\tmake use of regions throughout.\n+\t* gdb.base/overlays.exp: Enclose string with variableds in \"..\",\n+\tnot {...}.\n+\t* gdb.base/ovlymgr.c: Add 'string.h' and 'stdlib.h' includes.\n+\n 2020-10-05  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* gdb.base/call-sc.c: Fix return struct on stack test case."
    },
    {
      "sha": "3358f4ce7fa427d791a1c98b37d2d28d9fa1b74d",
      "filename": "gdb/testsuite/gdb.base/m32r.ld",
      "status": "modified",
      "additions": 47,
      "deletions": 37,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/gdb.base/m32r.ld",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/gdb.base/m32r.ld",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/m32r.ld?ref=ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
      "patch": "@@ -2,34 +2,43 @@ OUTPUT_FORMAT(\"elf32-m32r\", \"elf32-m32r\",\n \t      \"elf32-m32r\")\n OUTPUT_ARCH(m32r)\n ENTRY(_start)\n- SEARCH_DIR(/usr/cygnus/m32r-961018/H-sparc-sun-sunos4.1//lib);\n+\n+MEMORY\n+{\n+  RAM : ORIGIN = 0x208000, LENGTH = 0x100000\n+  OVLY_1 : ORIGIN = 0x300000, LENGTH = 0x40000\n+  OVLY_2 : ORIGIN = 0x340000, LENGTH = 0x40000\n+  OVLY_3 : ORIGIN = 0x380000, LENGTH = 0x40000\n+  OVLY_4 : ORIGIN = 0x3c0000, LENGTH = 0x40000\n+  OVLY_STORAGE : ORIGIN = 0x400000, LENGTH = 0x100000\n+}\n+\n /* Do we need any of these for elf?\n    __DYNAMIC = 0;    */\n SECTIONS\n {\n-     OVERLAY 0x300000 : AT (0x400000)\n-        {\n-          .ovly0 { foo.o(.text) }\n-          .ovly1 { bar.o(.text) }\n-        }\n-     OVERLAY 0x380000 : AT (0x480000)\n-        {\n-          .ovly2 { baz.o(.text) }\n-          .ovly3 { grbx.o(.text) }\n-        }\n-     OVERLAY 0x340000 : AT (0x440000)\n-        {\n-          .data00 { foo.o(.data) }\n-          .data01 { bar.o(.data) }\n-        }\n-     OVERLAY 0x3C0000 : AT (0x4C0000)\n-        {\n-          .data02 { baz.o(.data) }\n-          .data03 { grbx.o(.data) }\n-        }\n+   OVERLAY :\n+      {\n+        .ovly0 { */overlays2.o(.text) }\n+        .ovly1 { */overlays3.o(.text) }\n+      } >OVLY_1 AT>OVLY_STORAGE\n+   OVERLAY :\n+      {\n+        .ovly2 { */overlays4.o(.text) }\n+        .ovly3 { */overlays5.o(.text) }\n+      } >OVLY_3 AT>OVLY_STORAGE\n+   OVERLAY :\n+      {\n+        .data00 { */overlays2.o(.data) }\n+        .data01 { */overlays3.o(.data) }\n+      } >OVLY_2 AT>OVLY_STORAGE\n+   OVERLAY :\n+      {\n+        .data02 { */overlays4.o(.data) }\n+        .data03 { */overlays5.o(.data) }\n+      } >OVLY_4 AT>OVLY_STORAGE\n \n   /* Read-only sections, merged into text segment: */\n-  . = 0x208000;\n   .interp        : { *(.interp) \t}\n   .hash          : { *(.hash)\t\t}\n   .dynsym        : { *(.dynsym)\t\t}\n@@ -54,20 +63,21 @@ SECTIONS\n   .rela.bss      : { *(.rela.bss)\t}\n   .rel.plt       : { *(.rel.plt)\t}\n   .rela.plt      : { *(.rela.plt)\t}\n-  .init          : { *(.init)\t\t} =0\n-  .plt           : { *(.plt)\t\t}\n+  .init          : { *(.init)\t\t} >RAM AT>RAM =0\n+  .plt           : { *(.plt)\t\t} >RAM AT>RAM\n+\n   .text          :\n   {\n     *(.text)\n     /* .gnu.warning sections are handled specially by elf32.em.  */\n     *(.gnu.warning)\n     *(.gnu.linkonce.t*)\n-  } =0\n+  } >RAM AT>RAM =0\n   _etext = .;\n   PROVIDE (etext = .);\n-  .fini          : { *(.fini)\t\t} =0\n-  .rodata        : { *(.rodata) *(.gnu.linkonce.r*) }\n-  .rodata1       : { *(.rodata1)\t}\n+  .fini          : { *(.fini)\t\t} >RAM AT>RAM =0\n+  .rodata        : { *(.rodata) *(.gnu.linkonce.r*) } >RAM AT>RAM\n+  .rodata1       : { *(.rodata1)\t} >RAM AT>RAM\n   /* Adjust the address for the data segment.  We want to adjust up to\n      the same address within the page on the next page up.  */\n   . = ALIGN(32) + (ALIGN(8) & (32 - 1));\n@@ -120,21 +130,21 @@ SECTIONS\n \tLONG((_novlys - _ovly_table) / 16);\n \n     CONSTRUCTORS\n-  }\n-  .data1         : { *(.data1)\t\t}\n-  .ctors         : { *(.ctors)\t\t}\n-  .dtors         : { *(.dtors)\t\t}\n-  .got           : { *(.got.plt) *(.got)}\n-  .dynamic       : { *(.dynamic)\t}\n+  } >RAM AT>RAM\n+  .data1         : { *(.data1)\t\t} >RAM AT>RAM\n+  .ctors         : { *(.ctors)\t\t} >RAM AT>RAM\n+  .dtors         : { *(.dtors)\t\t} >RAM AT>RAM\n+  .got           : { *(.got.plt) *(.got)} >RAM AT>RAM\n+  .dynamic       : { *(.dynamic)\t} >RAM AT>RAM\n   /* We want the small data sections together, so single-instruction offsets\n      can access them all, and initialized data all before uninitialized, so\n      we can shorten the on-disk segment size.  */\n-  .sdata         : { *(.sdata)\t\t}\n+  .sdata         : { *(.sdata)\t\t} >RAM AT>RAM\n   _edata  =  .;\n   PROVIDE (edata = .);\n   __bss_start = .;\n-  .sbss          : { *(.sbss) *(.scommon) }\n-  .bss           : { *(.dynbss) *(.bss) *(COMMON) }\n+  .sbss          : { *(.sbss) *(.scommon) } >RAM AT>RAM\n+  .bss           : { *(.dynbss) *(.bss) *(COMMON) } >RAM AT>RAM\n   _end = . ;\n   PROVIDE (end = .);\n   /* Stabs debugging sections.  */"
    },
    {
      "sha": "248379e25ebb5b03dcf14ae3c74891f4fb61551b",
      "filename": "gdb/testsuite/gdb.base/overlays.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/gdb.base/overlays.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/gdb.base/overlays.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/overlays.exp?ref=ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
      "patch": "@@ -38,7 +38,7 @@ standard_testfile overlays.c ovlymgr.c foo.c bar.c baz.c grbx.c\n \n if {[build_executable $testfile.exp $testfile \\\n \t [list $srcfile $srcfile2 $srcfile3 $srcfile4 $srcfile5 $srcfile6] \\\n-\t {debug ldscript=-Wl,-T$linker_script}] == -1} {\n+\t \"debug ldscript=-Wl,-T$linker_script\"] == -1} {\n      untested \"failed to compile\"\n      return -1\n }"
    },
    {
      "sha": "262c2a61f02ed0a06e6e143f8a6da6a33d351974",
      "filename": "gdb/testsuite/gdb.base/ovlymgr.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/gdb.base/ovlymgr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ed3bdac42ce8e545e04bd15a153a85aee4a7a9af/gdb/testsuite/gdb.base/ovlymgr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ovlymgr.c?ref=ed3bdac42ce8e545e04bd15a153a85aee4a7a9af",
      "patch": "@@ -4,6 +4,8 @@\n  */\n \n #include \"ovlymgr.h\"\n+#include <string.h>\n+#include <stdlib.h>\n \n /* Local functions and data: */\n "
    }
  ]
}