{
  "sha": "4fdba23df6d202b9d428818fc209e527797b576f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGZkYmEyM2RmNmQyMDJiOWQ0Mjg4MThmYzIwOWU1Mjc3OTdiNTc2Zg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-07-04T18:26:59Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-07-10T22:51:11Z"
    },
    "message": "Testcase for previous handle_no_resumed fixes\n\nThis adds a testcase that covers the scenarios described in the\nprevious two commits.\n\ngdb/testsuite/ChangeLog:\n\n\tPR gdb/26199\n\t* gdb.multi/multi-target.c (exit_thread): New.\n\t(thread_start): Break loop if EXIT_THREAD.\n\t* gdb.multi/multi-target.exp (test_no_unwaited_for): New proc.\n\t(top level) Call test_no_resumed.",
    "tree": {
      "sha": "08078a1e0b8e6807d70aaebfacce6c19a6d107ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/08078a1e0b8e6807d70aaebfacce6c19a6d107ae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4fdba23df6d202b9d428818fc209e527797b576f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4fdba23df6d202b9d428818fc209e527797b576f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4fdba23df6d202b9d428818fc209e527797b576f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4fdba23df6d202b9d428818fc209e527797b576f/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d6cc5d980a902d273d424c49fc55e77757c3a05d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d6cc5d980a902d273d424c49fc55e77757c3a05d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d6cc5d980a902d273d424c49fc55e77757c3a05d"
    }
  ],
  "stats": {
    "total": 88,
    "additions": 87,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c0f1f1cc14c3c50a414823aeaab35b09a7d3b93f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4fdba23df6d202b9d428818fc209e527797b576f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4fdba23df6d202b9d428818fc209e527797b576f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4fdba23df6d202b9d428818fc209e527797b576f",
      "patch": "@@ -1,3 +1,11 @@\n+2020-07-10  Pedro Alves  <pedro@palves.net>\n+\n+\tPR gdb/26199\n+\t* gdb.multi/multi-target.c (exit_thread): New.\n+\t(thread_start): Break loop if EXIT_THREAD.\n+\t* gdb.multi/multi-target.exp (test_no_unwaited_for): New proc.\n+\t(top level) Call test_no_resumed.\n+\n 2020-07-08  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/catch_ex/foo.adb: Pass string to raise."
    },
    {
      "sha": "b337e59a1196535a75bd61f266dc7948fb4842f1",
      "filename": "gdb/testsuite/gdb.multi/multi-target.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4fdba23df6d202b9d428818fc209e527797b576f/gdb/testsuite/gdb.multi/multi-target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4fdba23df6d202b9d428818fc209e527797b576f/gdb/testsuite/gdb.multi/multi-target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/multi-target.c?ref=4fdba23df6d202b9d428818fc209e527797b576f",
      "patch": "@@ -26,12 +26,14 @@\n \n static pthread_barrier_t barrier;\n \n+volatile int exit_thread;\n+\n static void *\n thread_start (void *arg)\n {\n   pthread_barrier_wait (&barrier);\n \n-  while (1)\n+  while (!exit_thread)\n     sleep (1);\n   return NULL;\n }"
    },
    {
      "sha": "d19cee6595a024c8a7707a124eadf0649881403f",
      "filename": "gdb/testsuite/gdb.multi/multi-target.exp",
      "status": "modified",
      "additions": 76,
      "deletions": 0,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4fdba23df6d202b9d428818fc209e527797b576f/gdb/testsuite/gdb.multi/multi-target.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4fdba23df6d202b9d428818fc209e527797b576f/gdb/testsuite/gdb.multi/multi-target.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/multi-target.exp?ref=4fdba23df6d202b9d428818fc209e527797b576f",
      "patch": "@@ -439,6 +439,77 @@ proc test_info_inferiors {multi_process} {\n     }\n }\n \n+# Test that when there's a foreground execution command in progress, a\n+# TARGET_WAITKIND_NO_RESUMED for a particular target is ignored when\n+# other targets are still resumed.\n+\n+proc test_no_resumed {} {\n+    proc test_no_resumed_infs {inf_A inf_B} {\n+\tglobal gdb_prompt\n+\n+\tif {![setup \"off\"]} {\n+\t    untested \"setup failed\"\n+\t    return\n+\t}\n+\n+\tgdb_test \"thread $inf_A.2\" \"Switching to thread $inf_A\\.2 .*\" \\\n+\t    \"select thread of target A\"\n+\n+\tgdb_test_no_output \"set scheduler-locking on\"\n+\n+\tgdb_test_multiple \"continue &\" \"\" {\n+\t    -re \"Continuing.*$gdb_prompt \" {\n+\t\tpass $gdb_test_name\n+\t    }\n+\t}\n+\n+\tgdb_test \"thread $inf_B.2\" \"Switching to thread $inf_B\\.2 .*\" \\\n+\t    \"select thread of target B\"\n+\tgdb_test \"p exit_thread = 1\" \" = 1\" \\\n+\t    \"set the thread to exit on resumption\"\n+\n+\t# Wait 3 seconds.  If we see any response from GDB, such as\n+\t# \"No unwaited-for children left.\" it's a bug.\n+\tgdb_test_multiple \"continue\" \"continue\" {\n+\t    -timeout 3\n+\t    timeout {\n+\t\tpass $gdb_test_name\n+\t    }\n+\t}\n+\n+\t# Now stop the program (all targets).\n+\tsend_gdb \"\\003\"\n+\tgdb_test_multiple \"\" \"send_gdb control C\" {\n+\t    -re \"received signal SIGINT.*$gdb_prompt $\" {\n+\t\tpass $gdb_test_name\n+\t    }\n+\t}\n+\n+\tgdb_test_multiple \"info threads\" \"all threads stopped\" {\n+\t    -re \"\\\\\\(running\\\\\\).*$gdb_prompt $\" {\n+\t\tfail $gdb_test_name\n+\t    }\n+\t    -re \"$gdb_prompt $\" {\n+\t\tpass $gdb_test_name\n+\t    }\n+\t}\n+    }\n+\n+    # inferior 1 -> native\n+    # inferior 2 -> extended-remote 1\n+    # inferior 5 -> extended-remote 2\n+    set inferiors {1 2 5}\n+    foreach_with_prefix inf_A $inferiors {\n+\tforeach_with_prefix inf_B $inferiors {\n+\t    if {$inf_A == $inf_B} {\n+\t\tcontinue\n+\t    }\n+\t    test_no_resumed_infs $inf_A $inf_B\n+\t}\n+    }\n+}\n+\n+\n # Make a core file with two threads upfront.  Several tests load the\n # same core file.\n prepare_core\n@@ -467,4 +538,9 @@ with_test_prefix \"info-inferiors\" {\n     }\n }\n \n+# Test TARGET_WAITKIND_NO_RESUMED handling with multiple targets.\n+with_test_prefix \"no-resumed\" {\n+    test_no_resumed\n+}\n+\n cleanup_gdbservers"
    }
  ]
}