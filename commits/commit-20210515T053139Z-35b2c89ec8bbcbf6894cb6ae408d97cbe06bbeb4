{
  "sha": "35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzViMmM4OWVjOGJiY2JmNjg5NGNiNmFlNDA4ZDk3Y2JlMDZiYmViNA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:28:37Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T05:31:39Z"
    },
    "message": "display_debug_pubnames_worker\n\n\t* dwarf.c (display_debug_pubnames_worker): Delete initial_length_size.\n\tSimplify length check.  Constrain reads to length given by header.",
    "tree": {
      "sha": "2b385e0254463af27c629d664add2285ccc1dc12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2b385e0254463af27c629d664add2285ccc1dc12"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "56051e28a33aa6b3c37a61d4647da324c21bc64d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56051e28a33aa6b3c37a61d4647da324c21bc64d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/56051e28a33aa6b3c37a61d4647da324c21bc64d"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 19,
    "deletions": 20
  },
  "files": [
    {
      "sha": "5fd8bc1fa15ec3493b50a580a42ccbbf27c2413d",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (display_debug_pubnames_worker): Delete initial_length_size.\n+\tSimplify length check.  Constrain reads to length given by header.\n+\n 2021-05-15  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf.c (display_debug_lines_decoded): Don't use strnlen when"
    },
    {
      "sha": "878f4f766dbe01d7e0215bd4d869ff374d4ddc9d",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 14,
      "deletions": 20,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=35b2c89ec8bbcbf6894cb6ae408d97cbe06bbeb4",
      "patch": "@@ -5616,46 +5616,40 @@ display_debug_pubnames_worker (struct dwarf_section *section,\n   while (start < end)\n     {\n       unsigned char *data;\n-      unsigned long sec_off;\n-      unsigned int offset_size, initial_length_size;\n+      unsigned long sec_off = start - section->start;\n+      unsigned int offset_size;\n \n       SAFE_BYTE_GET_AND_INC (names.pn_length, start, 4, end);\n       if (names.pn_length == 0xffffffff)\n \t{\n \t  SAFE_BYTE_GET_AND_INC (names.pn_length, start, 8, end);\n \t  offset_size = 8;\n-\t  initial_length_size = 12;\n \t}\n       else\n-\t{\n-\t  offset_size = 4;\n-\t  initial_length_size = 4;\n-\t}\n+\toffset_size = 4;\n \n-      sec_off = start - section->start;\n-      if (sec_off + names.pn_length < sec_off\n-\t  || sec_off + names.pn_length > section->size)\n+      if (names.pn_length > (size_t) (end - start))\n \t{\n \t  warn (_(\"Debug info is corrupted, %s header at %#lx has length %s\\n\"),\n \t\tsection->name,\n-\t\tsec_off - initial_length_size,\n+\t\tsec_off,\n \t\tdwarf_vmatoa (\"x\", names.pn_length));\n \t  break;\n \t}\n \n       data = start;\n       start += names.pn_length;\n \n-      SAFE_BYTE_GET_AND_INC (names.pn_version, data, 2, end);\n-      SAFE_BYTE_GET_AND_INC (names.pn_offset, data, offset_size, end);\n+      SAFE_BYTE_GET_AND_INC (names.pn_version, data, 2, start);\n+      SAFE_BYTE_GET_AND_INC (names.pn_offset, data, offset_size, start);\n \n       if (num_debug_info_entries != DEBUG_INFO_UNAVAILABLE\n \t  && num_debug_info_entries > 0\n \t  && find_debug_info_for_offset (names.pn_offset) == NULL)\n \twarn (_(\".debug_info offset of 0x%lx in %s section does not point to a CU header.\\n\"),\n \t      (unsigned long) names.pn_offset, section->name);\n \n-      SAFE_BYTE_GET_AND_INC (names.pn_size, data, offset_size, end);\n+      SAFE_BYTE_GET_AND_INC (names.pn_size, data, offset_size, start);\n \n       printf (_(\"  Length:                              %ld\\n\"),\n \t      (long) names.pn_length);\n@@ -5689,14 +5683,14 @@ display_debug_pubnames_worker (struct dwarf_section *section,\n \t  bfd_size_type maxprint;\n \t  dwarf_vma offset;\n \n-\t  SAFE_BYTE_GET_AND_INC (offset, data, offset_size, end);\n+\t  SAFE_BYTE_GET_AND_INC (offset, data, offset_size, start);\n \n \t  if (offset == 0)\n \t    break;\n \n-\t  if (data >= end)\n+\t  if (data >= start)\n \t    break;\n-\t  maxprint = (end - data) - 1;\n+\t  maxprint = (start - data) - 1;\n \n \t  if (is_gnu)\n \t    {\n@@ -5705,7 +5699,7 @@ display_debug_pubnames_worker (struct dwarf_section *section,\n \t      const char *kind_name;\n \t      int is_static;\n \n-\t      SAFE_BYTE_GET_AND_INC (kind_data, data, 1, end);\n+\t      SAFE_BYTE_GET_AND_INC (kind_data, data, 1, start);\n \t      maxprint --;\n \t      /* GCC computes the kind as the upper byte in the CU index\n \t\t word, and then right shifts it by the CU index size.\n@@ -5724,9 +5718,9 @@ display_debug_pubnames_worker (struct dwarf_section *section,\n \t\t    (unsigned long) offset, (int) maxprint, data);\n \n \t  data += strnlen ((char *) data, maxprint);\n-\t  if (data < end)\n+\t  if (data < start)\n \t    data++;\n-\t  if (data >= end)\n+\t  if (data >= start)\n \t    break;\n \t}\n     }"
    }
  ]
}