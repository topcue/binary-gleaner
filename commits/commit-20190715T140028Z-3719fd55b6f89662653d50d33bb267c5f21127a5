{
  "sha": "3719fd55b6f89662653d50d33bb267c5f21127a5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzcxOWZkNTViNmY4OTY2MjY1M2Q1MGQzM2JiMjY3YzVmMjExMjdhNQ==",
  "commit": {
    "author": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-07-15T14:00:28Z"
    },
    "committer": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-07-15T14:00:28Z"
    },
    "message": "cpu,opcodes,gas: fix explicit arguments to eBPF ldabs instructions\n\nThis patch fixes the eBPF CPU description in order to reflect the\nright explicit arguments passed to the ldabs{b,h,w,dw} instructions,\nupdates the corresponding GAS tests, and updates the BPF section of\nthe GAS manual.\n\ncpu/ChangeLog:\n\n2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* bpf.cpu (dlabs): New pmacro.\n\t(dlind): Likewise.\n\nopcodes/ChangeLog:\n\n2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* bpf-desc.c: Regenerate.\n\t* bpf-opc.c: Likewise.\n\t* bpf-opc.h: Likewise.\n\ngas/ChangeLog:\n\n2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* testsuite/gas/bpf/mem.s: ldabs instructions do not take a `src'\n\tregister as an argument.\n\t* testsuite/gas/bpf/mem.d: Updated accordingly.\n\t* testsuite/gas/bpf/mem-be.d: Likewise.\n\t* doc/c-bpf.texi (BPF Opcodes): Update to reflect the correct\n\texplicit arguments to ldabs and ldind instructions.",
    "tree": {
      "sha": "7c046c3a10249178af42ff1ab11ba51468b62d6c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7c046c3a10249178af42ff1ab11ba51468b62d6c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3719fd55b6f89662653d50d33bb267c5f21127a5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3719fd55b6f89662653d50d33bb267c5f21127a5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3719fd55b6f89662653d50d33bb267c5f21127a5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3719fd55b6f89662653d50d33bb267c5f21127a5/comments",
  "author": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5b9d7a9a647260ba754fbd2a176d37806f15acc8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b9d7a9a647260ba754fbd2a176d37806f15acc8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5b9d7a9a647260ba754fbd2a176d37806f15acc8"
    }
  ],
  "stats": {
    "total": 246,
    "additions": 119,
    "deletions": 127
  },
  "files": [
    {
      "sha": "41d008f0e17177bb58bc8afc35818f7231e24214",
      "filename": "cpu/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/cpu/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/cpu/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/ChangeLog?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf.cpu (dlabs): New pmacro.\n+\t(dlind): Likewise.\n+\n 2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* bpf.cpu (dlsi): ldabs and ldind instructions do not take an"
    },
    {
      "sha": "b8a3a92e66ee4965ff2cee546824a579646824f2",
      "filename": "cpu/bpf.cpu",
      "status": "modified",
      "additions": 38,
      "deletions": 25,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/cpu/bpf.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/cpu/bpf.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/bpf.cpu?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -466,36 +466,49 @@\n (define-lddw le)\n (define-lddw be)\n \n-;; The absolute/indirect load instructions are non-generic loads\n-;; designed to be used in socket filters.  They come in several\n-;; variants:\n+;; The absolute load instructions are non-generic loads designed to be\n+;; used in socket filters.  They come in several variants:\n+;;\n+;; LDABS{w,h,b,dw}\n+\n+(define-pmacro (dlabs x-suffix x-size)\n+  (dni (.sym \"ldabs\" x-suffix)\n+       (.str \"ldabs\" x-suffix)\n+       (all-isas)\n+       (.str \"ldabs\" x-suffix \" $imm32\")\n+       (+ imm32 (f-offset16 0) (f-regs 0)\n+          OP_CLASS_LD OP_MODE_ABS (.sym OP_SIZE_ x-size))\n+       () ()))\n+\n+(dlabs \"w\" W)\n+(dlabs \"h\" H)\n+(dlabs \"b\" B)\n+(dlabs \"dw\" DW)\n+\n+;; The indirect load instructions are non-generic loads designed to be\n+;; used in socket filters.  They come in several variants:\n ;;\n-;; LD{abs,ind}{w,h,b,dw}le for the little-endian ISA\n-;; LD{abs,ind}[w,h,b,dw}be for the big-endian ISA\n+;; LDIND{w,h,b,dw}le for the little-endian ISA\n+;; LDIND[w,h,b,dw}be for the big-endian ISA\n \n-(define-pmacro (dlsi x-basename x-suffix x-class x-size x-mode x-endian)\n-  (dni (.sym x-basename x-suffix x-endian)\n-       (.str x-basename x-suffix)\n+(define-pmacro (dlind x-suffix x-size x-endian)\n+  (dni (.sym \"ldind\" x-suffix x-endian)\n+       (.str \"ldind\" x-suffix)\n        ((ISA (.sym ebpf x-endian)))\n-       (.str x-basename x-suffix \" $src\" x-endian \",$imm32\")\n+       (.str \"ldind\" x-suffix \" $src\" x-endian \",$imm32\")\n        (+ imm32 (f-offset16 0) ((.sym f-dst x-endian) 0) (.sym src x-endian)\n-          (.sym OP_CLASS_ x-class) (.sym OP_SIZE_ x-size)\n-          (.sym OP_MODE_ x-mode)) () ()))\n+          OP_CLASS_LD OP_MODE_IND (.sym OP_SIZE_ x-size))\n+       () ()))\n \n-(define-pmacro (define-ldabsind x-endian)\n-  (begin\n-    (dlsi \"ldabs\" \"w\" LD W ABS x-endian)\n-    (dlsi \"ldabs\" \"h\" LD H ABS x-endian)\n-    (dlsi \"ldabs\" \"b\" LD B ABS x-endian)\n-    (dlsi \"ldabs\" \"dw\" LD DW ABS x-endian)\n-    \n-    (dlsi \"ldind\" \"w\" LD W IND x-endian)\n-    (dlsi \"ldind\" \"h\" LD H IND x-endian)\n-    (dlsi \"ldind\" \"b\" LD B IND x-endian)\n-    (dlsi \"ldind\" \"dw\" LD DW IND x-endian)))\n-\n-(define-ldabsind le)\n-(define-ldabsind be)\n+(define-pmacro (define-ldind x-endian)\n+  (begin    \n+    (dlind \"w\" W x-endian)\n+    (dlind \"h\" H x-endian)\n+    (dlind \"b\" B x-endian)\n+    (dlind \"dw\" DW x-endian)))\n+\n+(define-ldind le)\n+(define-ldind be)\n \n ;; Generic load and store instructions are provided for several word\n ;; sizes.  They come in several variants:"
    },
    {
      "sha": "2d8a99724ac4cf9c6a62d3604e7e75ce26fdfc98",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -1,3 +1,12 @@\n+2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* testsuite/gas/bpf/mem.s: ldabs instructions do not take a `src'\n+\tregister as an argument.\n+\t* testsuite/gas/bpf/mem.d: Updated accordingly.\n+\t* testsuite/gas/bpf/mem-be.d: Likewise.\n+\t* doc/c-bpf.texi (BPF Opcodes): Update to reflect the correct\n+\texplicit arguments to ldabs and ldind instructions.\n+\n 2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* testsuite/gas/bpf/mem.s: Do not use explicit arguments for"
    },
    {
      "sha": "13f41441caa9137ca7d300563f8922a25e28283e",
      "filename": "gas/doc/c-bpf.texi",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/doc/c-bpf.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/doc/c-bpf.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-bpf.texi?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -234,26 +234,26 @@ tree for more information.\n Absolute loads:\n \n @table @code\n-@item ldabsdw %d, %s, imm32\n+@item ldabsdw imm32\n Absolute 64-bit load.\n-@item ldabsw %d, %s, imm32\n+@item ldabsw imm32\n Absolute 32-bit load.\n-@item ldabsh %d, %s, imm32\n+@item ldabsh imm32\n Absolute 16-bit load.\n-@item ldabsb %d, %s, imm32\n+@item ldabsb imm32\n Absolute 8-bit load.\n @end table\n \n Indirect loads:\n \n @table @code\n-@item ldinddw %d, %s, imm32\n+@item ldinddw %s, imm32\n Indirect 64-bit load.\n-@item ldindw %d, %s, imm32\n+@item ldindw %s, imm32\n Indirect 32-bit load.\n-@item ldindh %d, %s, imm32\n+@item ldindh %s, imm32\n Indirect 16-bit load.\n-@item ldindb %d, %s, imm32\n+@item ldindb %s, imm32\n Indirect 8-bit load.\n @end table\n "
    },
    {
      "sha": "b3dba80c2b67914895101c32ef91289895685e8b",
      "filename": "gas/testsuite/gas/bpf/mem-be.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/testsuite/gas/bpf/mem-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/testsuite/gas/bpf/mem-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem-be.d?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -8,10 +8,10 @@\n Disassembly of section .text:\n \n 0+ <.text>:\n-   0:\t20 03 00 00 00 00 be ef \tldabsw %r3,0xbeef\n-   8:\t28 05 00 00 00 00 be ef \tldabsh %r5,0xbeef\n-  10:\t30 07 00 00 00 00 be ef \tldabsb %r7,0xbeef\n-  18:\t38 09 00 00 00 00 be ef \tldabsdw %r9,0xbeef\n+   0:\t20 00 00 00 00 00 be ef \tldabsw 0xbeef\n+   8:\t28 00 00 00 00 00 be ef \tldabsh 0xbeef\n+  10:\t30 00 00 00 00 00 be ef \tldabsb 0xbeef\n+  18:\t38 00 00 00 00 00 be ef \tldabsdw 0xbeef\n   20:\t40 03 00 00 00 00 be ef \tldindw %r3,0xbeef\n   28:\t48 05 00 00 00 00 be ef \tldindh %r5,0xbeef\n   30:\t50 07 00 00 00 00 be ef \tldindb %r7,0xbeef"
    },
    {
      "sha": "0e0b498ea91e61099356fb79a5d9055141d6406c",
      "filename": "gas/testsuite/gas/bpf/mem.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/testsuite/gas/bpf/mem.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/testsuite/gas/bpf/mem.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem.d?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -7,10 +7,10 @@\n Disassembly of section .text:\n \n 0+ <.text>:\n-   0:\t20 30 00 00 ef be 00 00 \tldabsw %r3,0xbeef\n-   8:\t28 50 00 00 ef be 00 00 \tldabsh %r5,0xbeef\n-  10:\t30 70 00 00 ef be 00 00 \tldabsb %r7,0xbeef\n-  18:\t38 90 00 00 ef be 00 00 \tldabsdw %r9,0xbeef\n+   0:\t20 00 00 00 ef be 00 00 \tldabsw 0xbeef\n+   8:\t28 00 00 00 ef be 00 00 \tldabsh 0xbeef\n+  10:\t30 00 00 00 ef be 00 00 \tldabsb 0xbeef\n+  18:\t38 00 00 00 ef be 00 00 \tldabsdw 0xbeef\n   20:\t40 30 00 00 ef be 00 00 \tldindw %r3,0xbeef\n   28:\t48 50 00 00 ef be 00 00 \tldindh %r5,0xbeef\n   30:\t50 70 00 00 ef be 00 00 \tldindb %r7,0xbeef"
    },
    {
      "sha": "af6f41b0db005b1f7323268380b7ab38909b26d3",
      "filename": "gas/testsuite/gas/bpf/mem.s",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/testsuite/gas/bpf/mem.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/gas/testsuite/gas/bpf/mem.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem.s?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -2,10 +2,10 @@\n \n         .text\n \n- \tldabsw %r3, 0xbeef\n-\tldabsh %r5, 0xbeef\n- \tldabsb %r7, 0xbeef\n- \tldabsdw %r9, 0xbeef\n+ \tldabsw 0xbeef\n+\tldabsh 0xbeef\n+ \tldabsb 0xbeef\n+ \tldabsdw 0xbeef\n \tldindw %r3, 0xbeef\n  \tldindh %r5, 0xbeef\n  \tldindb %r7, 0xbeef"
    },
    {
      "sha": "c00cb8adf59d68a83d6f9591256bba53ed82d231",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-15  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf-desc.c: Regenerate.\n+\t* bpf-opc.c: Likewise.\n+\t* bpf-opc.h: Likewise.\n+\n 2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* bpf-desc.c: Regenerate."
    },
    {
      "sha": "18ded6e797532d16df94f4909b5144975ad9765e",
      "filename": "opcodes/bpf-desc.c",
      "status": "modified",
      "additions": 12,
      "deletions": 32,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/bpf-desc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/bpf-desc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/bpf-desc.c?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -824,25 +824,25 @@ static const CGEN_IBASE bpf_cgen_insn_table[MAX_INSNS] =\n     BPF_INSN_LDDWBE, \"lddwbe\", \"lddw\", 128,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldabsw $srcle,$imm32 */\n+/* ldabsw $imm32 */\n   {\n-    BPF_INSN_LDABSWLE, \"ldabswle\", \"ldabsw\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n+    BPF_INSN_LDABSW, \"ldabsw\", \"ldabsw\", 64,\n+    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\xc0\" } } } }\n   },\n-/* ldabsh $srcle,$imm32 */\n+/* ldabsh $imm32 */\n   {\n-    BPF_INSN_LDABSHLE, \"ldabshle\", \"ldabsh\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n+    BPF_INSN_LDABSH, \"ldabsh\", \"ldabsh\", 64,\n+    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\xc0\" } } } }\n   },\n-/* ldabsb $srcle,$imm32 */\n+/* ldabsb $imm32 */\n   {\n-    BPF_INSN_LDABSBLE, \"ldabsble\", \"ldabsb\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n+    BPF_INSN_LDABSB, \"ldabsb\", \"ldabsb\", 64,\n+    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\xc0\" } } } }\n   },\n-/* ldabsdw $srcle,$imm32 */\n+/* ldabsdw $imm32 */\n   {\n-    BPF_INSN_LDABSDWLE, \"ldabsdwle\", \"ldabsdw\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n+    BPF_INSN_LDABSDW, \"ldabsdw\", \"ldabsdw\", 64,\n+    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\xc0\" } } } }\n   },\n /* ldindw $srcle,$imm32 */\n   {\n@@ -864,26 +864,6 @@ static const CGEN_IBASE bpf_cgen_insn_table[MAX_INSNS] =\n     BPF_INSN_LDINDDWLE, \"ldinddwle\", \"ldinddw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldabsw $srcbe,$imm32 */\n-  {\n-    BPF_INSN_LDABSWBE, \"ldabswbe\", \"ldabsw\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n-  },\n-/* ldabsh $srcbe,$imm32 */\n-  {\n-    BPF_INSN_LDABSHBE, \"ldabshbe\", \"ldabsh\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n-  },\n-/* ldabsb $srcbe,$imm32 */\n-  {\n-    BPF_INSN_LDABSBBE, \"ldabsbbe\", \"ldabsb\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n-  },\n-/* ldabsdw $srcbe,$imm32 */\n-  {\n-    BPF_INSN_LDABSDWBE, \"ldabsdwbe\", \"ldabsdw\", 64,\n-    { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n-  },\n /* ldindw $srcbe,$imm32 */\n   {\n     BPF_INSN_LDINDWBE, \"ldindwbe\", \"ldindw\", 64,"
    },
    {
      "sha": "7707aaa0da883ebd718137fbcbca808e44810977",
      "filename": "opcodes/bpf-opc.c",
      "status": "modified",
      "additions": 26,
      "deletions": 46,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/bpf-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/bpf-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/bpf-opc.c?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -89,11 +89,15 @@ static const CGEN_IFMT ifmt_lddwbe ATTRIBUTE_UNUSED = {\n   8, 128, 0xff, { { F (F_IMM64) }, { F (F_OFFSET16) }, { F (F_DSTBE) }, { F (F_OP_MODE) }, { F (F_OP_SIZE) }, { F (F_SRCBE) }, { F (F_OP_CLASS) }, { 0 } }\n };\n \n-static const CGEN_IFMT ifmt_ldabswle ATTRIBUTE_UNUSED = {\n+static const CGEN_IFMT ifmt_ldabsw ATTRIBUTE_UNUSED = {\n+  8, 64, 0xff, { { F (F_IMM32) }, { F (F_OFFSET16) }, { F (F_REGS) }, { F (F_OP_MODE) }, { F (F_OP_SIZE) }, { F (F_OP_CLASS) }, { 0 } }\n+};\n+\n+static const CGEN_IFMT ifmt_ldindwle ATTRIBUTE_UNUSED = {\n   8, 64, 0xff, { { F (F_IMM32) }, { F (F_OFFSET16) }, { F (F_SRCLE) }, { F (F_OP_MODE) }, { F (F_OP_SIZE) }, { F (F_DSTLE) }, { F (F_OP_CLASS) }, { 0 } }\n };\n \n-static const CGEN_IFMT ifmt_ldabswbe ATTRIBUTE_UNUSED = {\n+static const CGEN_IFMT ifmt_ldindwbe ATTRIBUTE_UNUSED = {\n   8, 64, 0xff, { { F (F_IMM32) }, { F (F_OFFSET16) }, { F (F_DSTBE) }, { F (F_OP_MODE) }, { F (F_OP_SIZE) }, { F (F_SRCBE) }, { F (F_OP_CLASS) }, { 0 } }\n };\n \n@@ -792,101 +796,77 @@ static const CGEN_OPCODE bpf_cgen_insn_opcode_table[MAX_INSNS] =\n     { { MNEM, ' ', OP (DSTBE), ',', OP (IMM64), 0 } },\n     & ifmt_lddwbe, { 0x18 }\n   },\n-/* ldabsw $srcle,$imm32 */\n+/* ldabsw $imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x20 }\n+    { { MNEM, ' ', OP (IMM32), 0 } },\n+    & ifmt_ldabsw, { 0x20 }\n   },\n-/* ldabsh $srcle,$imm32 */\n+/* ldabsh $imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x28 }\n+    { { MNEM, ' ', OP (IMM32), 0 } },\n+    & ifmt_ldabsw, { 0x28 }\n   },\n-/* ldabsb $srcle,$imm32 */\n+/* ldabsb $imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x30 }\n+    { { MNEM, ' ', OP (IMM32), 0 } },\n+    & ifmt_ldabsw, { 0x30 }\n   },\n-/* ldabsdw $srcle,$imm32 */\n+/* ldabsdw $imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x38 }\n+    { { MNEM, ' ', OP (IMM32), 0 } },\n+    & ifmt_ldabsw, { 0x38 }\n   },\n /* ldindw $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x40 }\n+    & ifmt_ldindwle, { 0x40 }\n   },\n /* ldindh $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x48 }\n+    & ifmt_ldindwle, { 0x48 }\n   },\n /* ldindb $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x50 }\n+    & ifmt_ldindwle, { 0x50 }\n   },\n /* ldinddw $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswle, { 0x58 }\n-  },\n-/* ldabsw $srcbe,$imm32 */\n-  {\n-    { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x20 }\n-  },\n-/* ldabsh $srcbe,$imm32 */\n-  {\n-    { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x28 }\n-  },\n-/* ldabsb $srcbe,$imm32 */\n-  {\n-    { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x30 }\n-  },\n-/* ldabsdw $srcbe,$imm32 */\n-  {\n-    { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x38 }\n+    & ifmt_ldindwle, { 0x58 }\n   },\n /* ldindw $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x40 }\n+    & ifmt_ldindwbe, { 0x40 }\n   },\n /* ldindh $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x48 }\n+    & ifmt_ldindwbe, { 0x48 }\n   },\n /* ldindb $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x50 }\n+    & ifmt_ldindwbe, { 0x50 }\n   },\n /* ldinddw $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n     { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n-    & ifmt_ldabswbe, { 0x58 }\n+    & ifmt_ldindwbe, { 0x58 }\n   },\n /* ldxw $dstle,[$srcle+$offset16] */\n   {"
    },
    {
      "sha": "a2cdc7c5ed5b13c39f99ca865ef2099b229ec5f7",
      "filename": "opcodes/bpf-opc.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/bpf-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3719fd55b6f89662653d50d33bb267c5f21127a5/opcodes/bpf-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/bpf-opc.h?ref=3719fd55b6f89662653d50d33bb267c5f21127a5",
      "patch": "@@ -74,10 +74,9 @@ typedef enum cgen_insn_type {\n  , BPF_INSN_MOVRBE, BPF_INSN_MOV32IBE, BPF_INSN_MOV32RBE, BPF_INSN_ARSHIBE\n  , BPF_INSN_ARSHRBE, BPF_INSN_ARSH32IBE, BPF_INSN_ARSH32RBE, BPF_INSN_NEGBE\n  , BPF_INSN_NEG32BE, BPF_INSN_ENDLELE, BPF_INSN_ENDBELE, BPF_INSN_ENDLEBE\n- , BPF_INSN_ENDBEBE, BPF_INSN_LDDWLE, BPF_INSN_LDDWBE, BPF_INSN_LDABSWLE\n- , BPF_INSN_LDABSHLE, BPF_INSN_LDABSBLE, BPF_INSN_LDABSDWLE, BPF_INSN_LDINDWLE\n- , BPF_INSN_LDINDHLE, BPF_INSN_LDINDBLE, BPF_INSN_LDINDDWLE, BPF_INSN_LDABSWBE\n- , BPF_INSN_LDABSHBE, BPF_INSN_LDABSBBE, BPF_INSN_LDABSDWBE, BPF_INSN_LDINDWBE\n+ , BPF_INSN_ENDBEBE, BPF_INSN_LDDWLE, BPF_INSN_LDDWBE, BPF_INSN_LDABSW\n+ , BPF_INSN_LDABSH, BPF_INSN_LDABSB, BPF_INSN_LDABSDW, BPF_INSN_LDINDWLE\n+ , BPF_INSN_LDINDHLE, BPF_INSN_LDINDBLE, BPF_INSN_LDINDDWLE, BPF_INSN_LDINDWBE\n  , BPF_INSN_LDINDHBE, BPF_INSN_LDINDBBE, BPF_INSN_LDINDDWBE, BPF_INSN_LDXWLE\n  , BPF_INSN_LDXHLE, BPF_INSN_LDXBLE, BPF_INSN_LDXDWLE, BPF_INSN_STXWLE\n  , BPF_INSN_STXHLE, BPF_INSN_STXBLE, BPF_INSN_STXDWLE, BPF_INSN_LDXWBE"
    }
  ]
}