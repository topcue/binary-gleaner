{
  "sha": "697bba18273d3a03f9093a94cf3e1d75012905f3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njk3YmJhMTgyNzNkM2EwM2Y5MDkzYTk0Y2YzZTFkNzUwMTI5MDVmMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-27T17:48:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-27T17:48:18Z"
    },
    "message": "Attribute method inlining\n\nThis inlines a couple of methods on struct attribute, improving the\nperformance of DWARF partial symbol reading.  These methods were\ndiscovered as hot spots using callgrind.\n\nFor this patch, and for all the patches in this series, I tested gdb's\nperformance on three programs:\n\n1. gdb itself -- I built gdb and copied it to /tmp, ensuring that the\n   same version was used in all tests.\n\n2. The system libxul.so, the main library of Firefox.  I installed the\n   separate debuginfo and ensured that gdb read it.\n\n3. A large-ish Ada program that I happen to have.\n\nI ran gdb 10 times like:\n\n\t  /bin/time -f %e \\\n\t\t    ./gdb/gdb --data-directory ./gdb/data-directory -nx \\\n\t\t    -iex 'set debug-file-directory /usr/lib/debug' \\\n\t\t    -batch $X\n\n... where $X was the test executable.  Then I computed the mean time.\nThis was all done with a standard (-g -O2) build of gdb.\n\nThe baseline times were\n\ngdb    1.90\nlibxul 2.12\nAda    2.61\n\nThis patch brings the numbers down to\n\ngdb    1.88\nlibxul 2.11\nAda    2.60\n\nNot a huge change, but still visible in the results.\n\ngdb/ChangeLog\n2020-05-27  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2/attribute.h (struct attribute) <form_is_ref>: Inline.\n\t<get_ref_die_offset>: Inline.\n\t<get_ref_die_offset_complaint>: New method.\n\t* dwarf2/attribute.c (attribute::form_is_ref): Move to header.\n\t(attribute::get_ref_die_offset_complaint): Rename from\n\tget_ref_die_offset.  Just issue complaint.",
    "tree": {
      "sha": "65dc74d932cbb53e4cacb55bc26e8db803a0d0a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/65dc74d932cbb53e4cacb55bc26e8db803a0d0a2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/697bba18273d3a03f9093a94cf3e1d75012905f3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/697bba18273d3a03f9093a94cf3e1d75012905f3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/697bba18273d3a03f9093a94cf3e1d75012905f3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/697bba18273d3a03f9093a94cf3e1d75012905f3/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c17ace4397c73bcdeb616f1b854a1cf8a8b6579c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c17ace4397c73bcdeb616f1b854a1cf8a8b6579c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c17ace4397c73bcdeb616f1b854a1cf8a8b6579c"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 34,
    "deletions": 29
  },
  "files": [
    {
      "sha": "ad82241112f262c111be3b1fed06865b31ea461b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/697bba18273d3a03f9093a94cf3e1d75012905f3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/697bba18273d3a03f9093a94cf3e1d75012905f3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=697bba18273d3a03f9093a94cf3e1d75012905f3",
      "patch": "@@ -1,3 +1,12 @@\n+2020-05-27  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2/attribute.h (struct attribute) <form_is_ref>: Inline.\n+\t<get_ref_die_offset>: Inline.\n+\t<get_ref_die_offset_complaint>: New method.\n+\t* dwarf2/attribute.c (attribute::form_is_ref): Move to header.\n+\t(attribute::get_ref_die_offset_complaint): Rename from\n+\tget_ref_die_offset.  Just issue complaint.\n+\n 2020-05-27  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* cli/cli-cmds.c (shell_escape): Move exit_status_set_internal_vars."
    },
    {
      "sha": "b39cfe2c00dbd74c6d31df8d2fc26815be56be13",
      "filename": "gdb/dwarf2/attribute.c",
      "status": "modified",
      "additions": 2,
      "deletions": 27,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/697bba18273d3a03f9093a94cf3e1d75012905f3/gdb/dwarf2/attribute.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/697bba18273d3a03f9093a94cf3e1d75012905f3/gdb/dwarf2/attribute.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/attribute.c?ref=697bba18273d3a03f9093a94cf3e1d75012905f3",
      "patch": "@@ -120,38 +120,13 @@ attribute::form_is_constant () const\n     }\n }\n \n-/* DW_ADDR is always stored already as sect_offset; despite for the forms\n-   besides DW_FORM_ref_addr it is stored as cu_offset in the DWARF file.  */\n-\n-bool\n-attribute::form_is_ref () const\n-{\n-  switch (form)\n-    {\n-    case DW_FORM_ref_addr:\n-    case DW_FORM_ref1:\n-    case DW_FORM_ref2:\n-    case DW_FORM_ref4:\n-    case DW_FORM_ref8:\n-    case DW_FORM_ref_udata:\n-    case DW_FORM_GNU_ref_alt:\n-      return true;\n-    default:\n-      return false;\n-    }\n-}\n-\n /* See attribute.h.  */\n \n-sect_offset\n-attribute::get_ref_die_offset () const\n+void\n+attribute::get_ref_die_offset_complaint () const\n {\n-  if (form_is_ref ())\n-    return (sect_offset) DW_UNSND (this);\n-\n   complaint (_(\"unsupported die ref attribute form: '%s'\"),\n \t     dwarf_form_name (form));\n-  return {};\n }\n \n /* See attribute.h.  */"
    },
    {
      "sha": "ffb91e878f108216f823bf1afdb9c2f746bce39e",
      "filename": "gdb/dwarf2/attribute.h",
      "status": "modified",
      "additions": 23,
      "deletions": 2,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/697bba18273d3a03f9093a94cf3e1d75012905f3/gdb/dwarf2/attribute.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/697bba18273d3a03f9093a94cf3e1d75012905f3/gdb/dwarf2/attribute.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/attribute.h?ref=697bba18273d3a03f9093a94cf3e1d75012905f3",
      "patch": "@@ -82,7 +82,16 @@ struct attribute\n   /* DW_ADDR is always stored already as sect_offset; despite for the forms\n      besides DW_FORM_ref_addr it is stored as cu_offset in the DWARF file.  */\n \n-  bool form_is_ref () const;\n+  bool form_is_ref () const\n+  {\n+    return (form == DW_FORM_ref_addr\n+\t    || form == DW_FORM_ref1\n+\t    || form == DW_FORM_ref2\n+\t    || form == DW_FORM_ref4\n+\t    || form == DW_FORM_ref8\n+\t    || form == DW_FORM_ref_udata\n+\t    || form == DW_FORM_GNU_ref_alt);\n+  }\n \n   /* Check if the attribute's form is a DW_FORM_block*\n      if so return true else false.  */\n@@ -92,7 +101,13 @@ struct attribute\n   /* Return DIE offset of this attribute.  Return 0 with complaint if\n      the attribute is not of the required kind.  */\n \n-  sect_offset get_ref_die_offset () const;\n+  sect_offset get_ref_die_offset () const\n+  {\n+    if (form_is_ref ())\n+      return (sect_offset) u.unsnd;\n+    get_ref_die_offset_complaint ();\n+    return {};\n+  }\n \n   /* Return the constant value held by this attribute.  Return\n      DEFAULT_VALUE if the value held by the attribute is not\n@@ -119,6 +134,12 @@ struct attribute\n       ULONGEST signature;\n     }\n   u;\n+\n+private:\n+\n+  /* Used by get_ref_die_offset to issue a complaint.  */\n+\n+  void get_ref_die_offset_complaint () const;\n };\n \n /* Get at parts of an attribute structure.  */"
    }
  ]
}