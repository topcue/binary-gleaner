{
  "sha": "5c49f2cd78c69d50bc7c7119596a226f05939d06",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWM0OWYyY2Q3OGM2OWQ1MGJjN2M3MTE5NTk2YTIyNmYwNTkzOWQwNg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-25T15:46:07Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-10-25T15:46:07Z"
    },
    "message": "Improve objcopy's note mergeing capabilities.\n\n\t* objcopy.c (struct merged_note_section): New structure.  Used to\n\tchain together details of mergeable note sections.\n\t(is_merged_note_section): Rename to is_megreable_note_section and\n\treturn true for note sections that use GNU_BUILD_ATTRS_SECTION_NAME\n\tas a prefix.\n\t(num_bytes): Delete\n\t(objcoopy_internal_note): Add padded_namesz field.\n\t(DEBUG_MERGE): New macro.  Set to non-zero to enable debugging of\n\tthe note merging code.\n\t(gap_exists): Rename to overlaps_or_adjoins and return TRUE for\n\toverlapping notes or adjoining notes.\n\t(contained_by, is_deleted_note, is_version_note)\n\t(compare_gnu_build_notes, sort_gnu_build_notes): New functions.\n\t(merge_gnu_build_notes):  Rework.  Sort notes into a mergeable\n\torder first.  Merge them.  Then sort them into an ascending\n\taddress order before writing them out.\n\t(copy_object): Handle more than one mergeable note section.\n\t* testsuite/binutils-all/note-2-32.d: Update for new merging\n\tbehaviour.\n\t* testsuite/binutils-all/note-2-32.s: Likewise.\n\t* testsuite/binutils-all/note-2-64.d: Likewise.\n\t* testsuite/binutils-all/note-2-64.s: Likewise.\n\t* testsuite/binutils-all/note-3-32.d: Likewise.\n\t* testsuite/binutils-all/note-3-32.s: Likewise.\n\t* testsuite/binutils-all/note-3-64.d: Likewise.\n\t* testsuite/binutils-all/note-3-64.s: Likewise.\n\t* testsuite/binutils-all/note-4-32.d: Likewise.\n\t* testsuite/binutils-all/note-4-32.s: Likewise.\n\t* testsuite/binutils-all/note-4-64.d: Likewise.\n\t* testsuite/binutils-all/note-4-64.s: Likewise.\n\t* testsuite/binutils-all/note-6-32.s: New test source file.\n\t* testsuite/binutils-all/note-6-64.s: New test source file.\n\t* testsuite/binutils-all/note-6-32.d: New test driver file.\n\t* testsuite/binutils-all/note-6-64.d: New test driver file.\n\t* testsuite/binutils-all/objcopy.exp: Run the new test.",
    "tree": {
      "sha": "9576132049dfa4a3fdf2cd5e4697d04c8bed02b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9576132049dfa4a3fdf2cd5e4697d04c8bed02b6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5c49f2cd78c69d50bc7c7119596a226f05939d06",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c49f2cd78c69d50bc7c7119596a226f05939d06",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5c49f2cd78c69d50bc7c7119596a226f05939d06",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c49f2cd78c69d50bc7c7119596a226f05939d06/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "27cee81d06fcff87d9c026a571db58c29c489dfa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27cee81d06fcff87d9c026a571db58c29c489dfa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/27cee81d06fcff87d9c026a571db58c29c489dfa"
    }
  ],
  "stats": {
    "total": 1410,
    "additions": 985,
    "deletions": 425
  },
  "files": [
    {
      "sha": "224ebeb04efb78dab56f29166cde33fd4a7f0603",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -1,3 +1,41 @@\n+2019-10-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (struct merged_note_section): New structure.  Used to\n+\tchain together details of mergeable note sections.\n+\t(is_merged_note_section): Rename to is_megreable_note_section and\n+\treturn true for note sections that use GNU_BUILD_ATTRS_SECTION_NAME\n+\tas a prefix.\n+\t(num_bytes): Delete\n+\t(objcoopy_internal_note): Add padded_namesz field.\n+\t(DEBUG_MERGE): New macro.  Set to non-zero to enable debugging of\n+\tthe note merging code.\n+\t(gap_exists): Rename to overlaps_or_adjoins and return TRUE for\n+\toverlapping notes or adjoining notes.\n+\t(contained_by, is_deleted_note, is_version_note)\n+\t(compare_gnu_build_notes, sort_gnu_build_notes): New functions.\n+\t(merge_gnu_build_notes):  Rework.  Sort notes into a mergeable\n+\torder first.  Merge them.  Then sort them into an ascending\n+\taddress order before writing them out.\n+\t(copy_object): Handle more than one mergeable note section.\n+\t* testsuite/binutils-all/note-2-32.d: Update for new merging\n+\tbehaviour.\n+\t* testsuite/binutils-all/note-2-32.s: Likewise.\n+\t* testsuite/binutils-all/note-2-64.d: Likewise.\n+\t* testsuite/binutils-all/note-2-64.s: Likewise.\n+\t* testsuite/binutils-all/note-3-32.d: Likewise.\n+\t* testsuite/binutils-all/note-3-32.s: Likewise.\n+\t* testsuite/binutils-all/note-3-64.d: Likewise.\n+\t* testsuite/binutils-all/note-3-64.s: Likewise.\n+\t* testsuite/binutils-all/note-4-32.d: Likewise.\n+\t* testsuite/binutils-all/note-4-32.s: Likewise.\n+\t* testsuite/binutils-all/note-4-64.d: Likewise.\n+\t* testsuite/binutils-all/note-4-64.s: Likewise.\n+\t* testsuite/binutils-all/note-6-32.s: New test source file.\n+\t* testsuite/binutils-all/note-6-64.s: New test source file.\n+\t* testsuite/binutils-all/note-6-32.d: New test driver file.\n+\t* testsuite/binutils-all/note-6-64.d: New test driver file.\n+\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n+\n 2019-10-25  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (process_program_headers): Check PT_PHDR p_offset"
    },
    {
      "sha": "47c5310f2baee663d440213fafa0b483a1e4e49c",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 447,
      "deletions": 314,
      "changes": 761,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -97,8 +97,14 @@ static int deterministic = -1;\t\t/* Enable deterministic archives.  */\n static int status = 0;\t\t\t/* Exit status.  */\n \n static bfd_boolean    merge_notes = FALSE;\t/* Merge note sections.  */\n-static bfd_byte *     merged_notes = NULL;\t/* Contents on note section undergoing a merge.  */\n-static bfd_size_type  merged_size = 0;\t\t/* New, smaller size of the merged note section.  */\n+\n+typedef struct merged_note_section\n+{\n+  asection *                    sec;\t /* The section that is being merged.  */\n+  bfd_byte *                    contents;/* New contents of the section.  */\n+  bfd_size_type                 size;\t /* New size of the section.  */\n+  struct merged_note_section *  next;  \t /* Link to next merged note section.  */\n+} merged_note_section;\n \n enum strip_action\n {\n@@ -1283,7 +1289,7 @@ is_update_section (bfd *abfd ATTRIBUTE_UNUSED, asection *sec)\n }\n \n static bfd_boolean\n-is_merged_note_section (bfd * abfd, asection * sec)\n+is_mergeable_note_section (bfd * abfd, asection * sec)\n {\n   if (merge_notes\n       && bfd_get_flavour (abfd) == bfd_target_elf_flavour\n@@ -1292,9 +1298,9 @@ is_merged_note_section (bfd * abfd, asection * sec)\n \t We should add support for more note types.  */\n       && ((elf_section_data (sec)->this_hdr.sh_flags & SHF_GNU_BUILD_NOTE) != 0\n \t  /* Old versions of GAS (prior to 2.27) could not set the section\n-\t     flags to OS-specific values, so we also accept sections with the\n-\t     expected name.  */\n-\t  || (strcmp (sec->name, GNU_BUILD_ATTRS_SECTION_NAME) == 0)))\n+\t     flags to OS-specific values, so we also accept sections that\n+\t     start with the expected name.  */\n+\t  || (CONST_STRNEQ (sec->name, GNU_BUILD_ATTRS_SECTION_NAME))))\n     return TRUE;\n \n   return FALSE;\n@@ -1917,56 +1923,81 @@ copy_unknown_object (bfd *ibfd, bfd *obfd)\n   return TRUE;\n }\n \n-/* Returns the number of bytes needed to store VAL.  */\n-\n-static inline unsigned int\n-num_bytes (unsigned long val)\n-{\n-  unsigned int count = 0;\n-\n-  /* FIXME: There must be a faster way to do this.  */\n-  while (val)\n-    {\n-      count ++;\n-      val >>= 8;\n-    }\n-  return count;\n-}\n-\n typedef struct objcopy_internal_note\n {\n   Elf_Internal_Note  note;\n+  unsigned long      padded_namesz;\n   bfd_vma            start;\n   bfd_vma            end;\n-  bfd_boolean        modified;\n } objcopy_internal_note;\n   \n-/* Returns TRUE if a gap does, or could, exist between the address range\n-   covered by PNOTE1 and PNOTE2.  */\n+#define DEBUG_MERGE 0\n+\n+#if DEBUG_MERGE\n+#define merge_debug(format, ...) fprintf (stderr, format, ## __VA_ARGS__)\n+#else\n+#define merge_debug(format, ...)\n+#endif\n+\n+/* Returns TRUE iff PNOTE1 overlaps or adjoins PNOTE2.  */\n \n static bfd_boolean\n-gap_exists (objcopy_internal_note * pnote1,\n-\t    objcopy_internal_note * pnote2)\n+overlaps_or_adjoins (objcopy_internal_note * pnote1,\n+\t\t     objcopy_internal_note * pnote2)\n {\n-  /* Without range end notes, we assume that a gap might exist.  */\n-  if (pnote1->end == 0 || pnote2->end == 0)\n+  if (pnote1->end < pnote2->start)\n+    /* FIXME: Alignment of 16 bytes taken from x86_64 binaries.\n+       Really we should extract the alignment of the section\n+       covered by the notes.  */\n+    return BFD_ALIGN (pnote1->end, 16) < pnote2->start;\n+\n+  if (pnote2->end < pnote2->start)\n+    return BFD_ALIGN (pnote2->end, 16) < pnote1->start;\n+\n+  if (pnote1->end < pnote2->end)\n+    return TRUE;\n+\n+  if (pnote2->end < pnote1->end)\n     return TRUE;\n \n-  /* FIXME: Alignment of 16 bytes taken from x86_64 binaries.\n-     Really we should extract the alignment of the section covered by the notes.  */\n-  return BFD_ALIGN (pnote1->end, 16) < pnote2->start;\n+  return FALSE;\n+}\n+\n+/* Returns TRUE iff NEEDLE is fully contained by HAYSTACK.  */\n+\n+static bfd_boolean\n+contained_by (objcopy_internal_note * needle,\n+\t      objcopy_internal_note * haystack)\n+{\n+  return needle->start >= haystack->start && needle->end <= haystack->end;\n }\n \n static bfd_boolean\n is_open_note (objcopy_internal_note * pnote)\n {\n-  return (pnote->note.type == NT_GNU_BUILD_ATTRIBUTE_OPEN);\n+  return pnote->note.type == NT_GNU_BUILD_ATTRIBUTE_OPEN;\n }\n \n static bfd_boolean\n is_func_note (objcopy_internal_note * pnote)\n {\n-  return (pnote->note.type == NT_GNU_BUILD_ATTRIBUTE_FUNC);\n+  return pnote->note.type == NT_GNU_BUILD_ATTRIBUTE_FUNC;\n+}\n+\n+static bfd_boolean\n+is_deleted_note (objcopy_internal_note * pnote)\n+{\n+  return pnote->note.type == 0;\n+}\n+\n+static bfd_boolean\n+is_version_note (objcopy_internal_note * pnote)\n+{\n+  return (pnote->note.namesz > 4\n+\t  && pnote->note.namedata[0] == 'G'\n+\t  && pnote->note.namedata[1] == 'A'\n+\t  && pnote->note.namedata[2] == '$'\n+\t  && pnote->note.namedata[3] == GNU_BUILD_ATTRIBUTE_VERSION);\n }\n \n static bfd_boolean\n@@ -1979,11 +2010,97 @@ is_64bit (bfd * abfd)\n   return elf_elfheader (abfd)->e_ident[EI_CLASS] == ELFCLASS64;\n }\n \n+/* This sorting function is used to get the notes into an order\n+   that makes merging easy.  */\n+\n+static int\n+compare_gnu_build_notes (const void * data1, const void * data2)\n+{\n+  objcopy_internal_note * pnote1 = (objcopy_internal_note *) data1;\n+  objcopy_internal_note * pnote2 = (objcopy_internal_note *) data2;\n+\n+  /* Sort notes based upon the attribute they record.  */\n+  int cmp = memcmp (pnote1->note.namedata + 3,\n+\t\t    pnote2->note.namedata + 3,\n+\t\t    pnote1->note.namesz < pnote2->note.namesz ?\n+\t\t    pnote1->note.namesz - 3 : pnote2->note.namesz - 3);\n+  if (cmp)\n+    return cmp;\n+  \n+  if (pnote1->end < pnote2->start)\n+    return -1;\n+  if (pnote1->start > pnote2->end)\n+    return 1;\n+\n+  /* Overlaps - we should merge the two ranges.  */\n+  if (pnote1->start < pnote2->start)\n+    return -1;\n+  if (pnote1->end > pnote2->end)\n+    return 1;\n+  \n+  /* Put OPEN notes before function notes.  */\n+  if (is_open_note (pnote1) && ! is_open_note (pnote2))\n+    return -1;\n+  if (! is_open_note (pnote1) && is_open_note (pnote2))\n+    return 1;\n+  \n+  return 0;\n+}\n+\n+/* This sorting function is used to get the notes into an order\n+   that makes eliminating address ranges easier.  */\n+\n+static int\n+sort_gnu_build_notes (const void * data1, const void * data2)\n+{\n+  objcopy_internal_note * pnote1 = (objcopy_internal_note *) data1;\n+  objcopy_internal_note * pnote2 = (objcopy_internal_note *) data2;\n+\n+  if (pnote1->note.type != pnote2->note.type)\n+    {\n+      /* Move deleted notes to the end.  */\n+      if (is_deleted_note (pnote1))     /* 1: OFD 2: OFD */\n+\treturn 1;\n+\n+      /* Move OPEN notes to the start.  */\n+      if (is_open_note (pnote1))\t/* 1: OF  2: OFD */\n+\treturn -1;\n+\n+      if (is_deleted_note (pnote2))\t/* 1: F   2: O D */\n+\treturn 1;\n+\n+      return 1;\t\t\t\t/* 1: F   2: O   */\n+    }\n+  \n+  /* Sort by starting address.  */\n+  if (pnote1->start < pnote2->start)\n+    return -1;\n+  if (pnote1->start > pnote2->start)\n+    return 1;\n+\n+  /* Then by end address (bigger range first).  */\n+  if (pnote1->end > pnote2->end)\n+    return -1;\n+  if (pnote1->end < pnote2->end)\n+    return 1;\n+\n+  /* Then by attribute type.  */\n+  if (pnote1->note.namesz > 4\n+      && pnote2->note.namesz > 4\n+      && pnote1->note.namedata[3] != pnote2->note.namedata[3])\n+    return pnote1->note.namedata[3] - pnote2->note.namedata[3];\n+  \n+  return 0;\n+}\n+\n /* Merge the notes on SEC, removing redundant entries.\n    Returns the new, smaller size of the section upon success.  */\n \n static bfd_size_type\n-merge_gnu_build_notes (bfd * abfd, asection * sec, bfd_size_type size, bfd_byte * contents)\n+merge_gnu_build_notes (bfd *          abfd,\n+\t\t       asection *     sec,\n+\t\t       bfd_size_type  size,\n+\t\t       bfd_byte *     contents)\n {\n   objcopy_internal_note *  pnotes_end;\n   objcopy_internal_note *  pnotes = NULL;\n@@ -1992,11 +2109,8 @@ merge_gnu_build_notes (bfd * abfd, asection * sec, bfd_size_type size, bfd_byte\n   unsigned            version_1_seen = 0;\n   unsigned            version_2_seen = 0;\n   unsigned            version_3_seen = 0;\n-  bfd_boolean         duplicate_found = FALSE;\n   const char *        err = NULL;\n   bfd_byte *          in = contents;\n-  int                 attribute_type_byte;\n-  int                 val_start;\n   unsigned long       previous_func_start = 0;\n   unsigned long       previous_open_start = 0;\n   unsigned long       previous_func_end = 0;\n@@ -2015,20 +2129,33 @@ merge_gnu_build_notes (bfd * abfd, asection * sec, bfd_size_type size, bfd_byte\n       relcount = bfd_canonicalize_reloc (abfd, sec, relpp, isympp);\n       free (relpp);\n       if (relcount != 0)\n-\tgoto done;\n+\t{\n+\t  if (! is_strip)\n+\t    non_fatal (_(\"%s[%s]: Cannot merge - there are relocations against this section\"),\n+\t\t       bfd_get_filename (abfd), bfd_section_name (sec));\n+\t  goto done;\n+\t}\n     }\n   \n   /* Make a copy of the notes and convert to our internal format.\n      Minimum size of a note is 12 bytes.  Also locate the version\n      notes and check them.  */\n-  pnote = pnotes = (objcopy_internal_note *) xcalloc ((size / 12), sizeof (* pnote));\n+  pnote = pnotes = (objcopy_internal_note *)\n+    xcalloc ((size / 12), sizeof (* pnote));\n   while (remain >= 12)\n     {\n       bfd_vma start, end;\n \n-      pnote->note.namesz = (bfd_get_32 (abfd, in    ) + 3) & ~3;\n-      pnote->note.descsz = (bfd_get_32 (abfd, in + 4) + 3) & ~3;\n-      pnote->note.type   =  bfd_get_32 (abfd, in + 8);\n+      pnote->note.namesz   = bfd_get_32 (abfd, in);\n+      pnote->note.descsz   = bfd_get_32 (abfd, in + 4);\n+      pnote->note.type     = bfd_get_32 (abfd, in + 8);\n+      pnote->padded_namesz = (pnote->note.namesz + 3) & ~3;\n+\n+      if (((pnote->note.descsz + 3) & ~3) != pnote->note.descsz)\n+\t{\n+\t  err = _(\"corrupt GNU build attribute note: description size not a factor of 4\");\n+\t  goto done;\n+\t}\n \n       if (pnote->note.type    != NT_GNU_BUILD_ATTRIBUTE_OPEN\n \t  && pnote->note.type != NT_GNU_BUILD_ATTRIBUTE_FUNC)\n@@ -2037,7 +2164,7 @@ merge_gnu_build_notes (bfd * abfd, asection * sec, bfd_size_type size, bfd_byte\n \t  goto done;\n \t}\n \n-      if (pnote->note.namesz + pnote->note.descsz + 12 > remain)\n+      if (pnote->padded_namesz + pnote->note.descsz + 12 > remain)\n \t{\n \t  err = _(\"corrupt GNU build attribute note: note too big\");\n \t  goto done;\n@@ -2050,21 +2177,17 @@ merge_gnu_build_notes (bfd * abfd, asection * sec, bfd_size_type size, bfd_byte\n \t}\n \n       pnote->note.namedata = (char *)(in + 12);\n-      pnote->note.descdata = (char *)(in + 12 + pnote->note.namesz);\n+      pnote->note.descdata = (char *)(in + 12 + pnote->padded_namesz);\n \n-      remain -= 12 + pnote->note.namesz + pnote->note.descsz;\n-      in     += 12 + pnote->note.namesz + pnote->note.descsz;\n+      remain -= 12 + pnote->padded_namesz + pnote->note.descsz;\n+      in     += 12 + pnote->padded_namesz + pnote->note.descsz;\n \n       if (pnote->note.namesz > 2\n \t  && pnote->note.namedata[0] == '$'\n \t  && pnote->note.namedata[1] == GNU_BUILD_ATTRIBUTE_VERSION\n \t  && pnote->note.namedata[2] == '1')\n \t++ version_1_seen;\n-      else if (pnote->note.namesz > 4\n-\t       && pnote->note.namedata[0] == 'G'\n-\t       && pnote->note.namedata[1] == 'A'\n-\t       && pnote->note.namedata[2] == '$'\n-\t       && pnote->note.namedata[3] == GNU_BUILD_ATTRIBUTE_VERSION)\n+      else if (is_version_note (pnote))\n \t{\n \t  if (pnote->note.namedata[4] == '2')\n \t    ++ version_2_seen;\n@@ -2170,282 +2293,234 @@ merge_gnu_build_notes (bfd * abfd, asection * sec, bfd_size_type size, bfd_byte\n \n   if (version_1_seen == 0 && version_2_seen == 0 && version_3_seen == 0)\n     {\n+#if 0\n       err = _(\"bad GNU build attribute notes: no known versions detected\");\n       goto done;\n+#else\n+      /* This happens with glibc.  No idea why.  */\n+      non_fatal (_(\"%s[%s]: Warning: version note missing - assuming version 3\"),\n+\t\t bfd_get_filename (abfd), bfd_section_name (sec));\n+      version_3_seen = 2;\n+#endif\n     }\n \n-  if ((version_1_seen > 0 && version_2_seen > 0)\n+  if (   (version_1_seen > 0 && version_2_seen > 0)\n       || (version_1_seen > 0 && version_3_seen > 0)\n       || (version_2_seen > 0 && version_3_seen > 0))\n     {\n       err = _(\"bad GNU build attribute notes: multiple different versions\");\n       goto done;\n     }\n \n-  /* Merging is only needed if there is more than one version note...  */\n-  if (version_1_seen == 1 || version_2_seen == 1 || version_3_seen == 1)\n-    goto done;\n+  /* We are now only supporting the merging v3+ notes\n+     - it makes things much simpler.  */\n+  if (version_3_seen == 0)\n+    {\n+      merge_debug (\"%s: skipping merge - not using v3 notes\", bfd_section_name (sec));\n+      goto done;\n+    }\n+\n+  merge_debug (\"Merging section %s which contains %ld notes\\n\",\n+\t       sec->name, pnotes_end - pnotes);\n \n-  attribute_type_byte = version_1_seen ? 1 : 3;\n-  val_start = attribute_type_byte + 1;\n+  /* Sort the notes.  */\n+  qsort (pnotes, pnotes_end - pnotes, sizeof (* pnotes),\n+\t compare_gnu_build_notes);\n \n-  /* We used to require that the first note be a version note,\n-     but this is no longer enforced.  Due to the problems with\n-     linking sections with the same name (eg .gnu.build.note.hot)\n-     we cannot guarantee that the first note will be a version note.  */\n+#if DEBUG_MERGE\n+  merge_debug (\"Results of initial sort:\\n\");\n+  for (pnote = pnotes; pnote < pnotes_end; pnote ++)\n+    merge_debug (\"offset %#08lx range %#08lx..%#08lx type %ld attribute %d namesz %ld\\n\",\n+\t\t (pnote->note.namedata - (char *) contents) - 12,\n+\t\t pnote->start, pnote->end,\n+\t\t pnote->note.type,\n+\t\t pnote->note.namedata[3],\n+\t\t pnote->note.namesz\n+\t\t );\n+#endif\n \n   /* Now merge the notes.  The rules are:\n-     1. Preserve the ordering of the notes.\n-     2. Preserve any NT_GNU_BUILD_ATTRIBUTE_FUNC notes.\n-     3. Eliminate any NT_GNU_BUILD_ATTRIBUTE_OPEN notes that have the same\n-        full name field as the immediately preceeding note with the same type\n-\tof name and whose address ranges coincide.\n-\tIE - if there are gaps in the coverage of the notes, then these gaps\n-\tmust be preserved.\n-     4. Combine the numeric value of any NT_GNU_BUILD_ATTRIBUTE_OPEN notes\n-        of type GNU_BUILD_ATTRIBUTE_STACK_SIZE.\n-     5. If an NT_GNU_BUILD_ATTRIBUTE_OPEN note is going to be preserved and\n-        its description field is empty then the nearest preceeding OPEN note\n-\twith a non-empty description field must also be preserved *OR* the\n-\tdescription field of the note must be changed to contain the starting\n-\taddress to which it refers.\n-     6. Notes with the same start and end address can be deleted.\n-     7. FIXME: Elminate duplicate version notes - even function specific ones ?  */\n+     1. If a note has a zero range, it can be eliminated.\n+     2. If two notes have the same namedata then:\n+        2a. If one note's range is fully covered by the other note\n+\t    then it can be deleted.\n+\t2b. If one note's range partially overlaps or adjoins the\n+\t    other note then if they are both of the same type (open\n+\t    or func) then they can be merged and one deleted.  If\n+\t    they are of different types then they cannot be merged.  */\n   for (pnote = pnotes; pnote < pnotes_end; pnote ++)\n     {\n-      int                      note_type;\n-      objcopy_internal_note *  back;\n-      objcopy_internal_note *  prev_open_with_range = NULL;\n+      /* Skip already deleted notes.\n+\t FIXME: Can this happen ?  We are scanning forwards and\n+\t deleting backwards after all.  */\n+      if (is_deleted_note (pnote))\n+\tcontinue;\n \n-      /* Rule 6 - delete 0-range notes.  */\n+      /* Rule 1 - delete 0-range notes.  */\n       if (pnote->start == pnote->end)\n \t{\n-\t  duplicate_found = TRUE;\n+\t  merge_debug (\"Delete note at offset %#08lx - empty range\\n\",\n+\t\t       (pnote->note.namedata - (char *) contents) - 12);\n \t  pnote->note.type = 0;\n \t  continue;\n \t}\n \n-      /* Rule 2 - preserve function notes.  */\n-      if (! is_open_note (pnote))\n-\t{\n-\t  int iter;\n-\n-\t  /* Check to see if there is an identical previous function note.\n-\t     This can happen with overlays for example.  */\n-\t  for (iter = 0, back = pnote -1; back >= pnotes; back --)\n-\t    {\n-\t      if (back->start == pnote->start\n-\t\t  && back->end == pnote->end\n-\t\t  && back->note.namesz == pnote->note.namesz\n-\t\t  && memcmp (back->note.namedata, pnote->note.namedata, pnote->note.namesz) == 0)\n-\t\t{\n-\t\t  duplicate_found = TRUE;\n-\t\t  pnote->note.type = 0;\n-\t\t  break;\n-\t\t}\n-\n-\t      /* Don't scan too far back however.  */\n-\t      if (iter ++ > 16)\n-\t\tbreak;\n-\t    }\n-\t  continue;\n-\t}\n-\n-      note_type = pnote->note.namedata[attribute_type_byte];\n+      int iter;\n+      objcopy_internal_note * back;\n \n-      /* Scan backwards from pnote, looking for duplicates.\n-\t Clear the type field of any found - but do not delete them just yet.  */\n-      for (back = pnote - 1; back >= pnotes; back --)\n+      /* Rule 2: Check to see if there is an identical previous note.  */\n+      for (iter = 0, back = pnote - 1; back >= pnotes; back --)\n \t{\n-\t  int back_type = back->note.namedata[attribute_type_byte];\n-\n-\t  /* If this is the first open note with an address\n-\t     range that\twe have encountered then record it.  */\n-\t  if (prev_open_with_range == NULL\n-\t      && back->note.descsz > 0\n-\t      && ! is_func_note (back))\n-\t    prev_open_with_range = back;\n-\n-\t  if (! is_open_note (back))\n-\t    continue;\n-\n-\t  /* If the two notes are different then keep on searching.  */\n-\t  if (back_type != note_type)\n+\t  if (is_deleted_note (back))\n \t    continue;\n \n-\t  /* Rule 4 - combine stack size notes.  */\n-\t  if (back_type == GNU_BUILD_ATTRIBUTE_STACK_SIZE)\n+\t  /* Our sorting function should have placed all identically\n+\t     attributed notes together, so if we see a note of a different\n+\t     attribute type stop searching.  */\n+\t  if (back->note.namesz != pnote->note.namesz\n+\t      || memcmp (back->note.namedata,\n+\t\t\t pnote->note.namedata, pnote->note.namesz) != 0)\n+\t    break;\n+\t  \n+\t  if (back->start == pnote->start\n+\t      && back->end == pnote->end)\n \t    {\n-\t      unsigned char * name;\n-\t      unsigned long   note_val;\n-\t      unsigned long   back_val;\n-\t      unsigned int    shift;\n-\t      unsigned int    bytes;\n-\t      unsigned long   byte;\n-\n-\t      for (shift = 0, note_val = 0,\n-\t\t     bytes = pnote->note.namesz - val_start,\n-\t\t     name = (unsigned char *) pnote->note.namedata + val_start;\n-\t\t   bytes--;)\n-\t\t{\n-\t\t  byte = (* name ++) & 0xff;\n-\t\t  note_val |= byte << shift;\n-\t\t  shift += 8;\n-\t\t}\n-\n-\t      for (shift = 0, back_val = 0,\n-\t\t     bytes = back->note.namesz - val_start,\n-\t\t     name = (unsigned char *) back->note.namedata + val_start;\n-\t\t   bytes--;)\n-\t\t{\n-\t\t  byte = (* name ++) & 0xff;\n-\t\t  back_val |= byte << shift;\n-\t\t  shift += 8;\n-\t\t}\n-\n-\t      back_val += note_val;\n-\t      if (num_bytes (back_val) >= back->note.namesz - val_start)\n-\t\t{\n-\t\t  /* We have a problem - the new value requires more bytes of\n-\t\t     storage in the name field than are available.  Currently\n-\t\t     we have no way of fixing this, so we just preserve both\n-\t\t     notes.  */\n-\t\t  continue;\n-\t\t}\n-\n-\t      /* Write the new val into back.  */\n-\t      name = (unsigned char *) back->note.namedata + val_start;\n-\t      while (name < (unsigned char *) back->note.namedata\n-\t\t     + back->note.namesz)\n-\t\t{\n-\t\t  byte = back_val & 0xff;\n-\t\t  * name ++ = byte;\n-\t\t  if (back_val == 0)\n-\t\t    break;\n-\t\t  back_val >>= 8;\n-\t\t}\n-\n-\t      duplicate_found = TRUE;\n+\t      merge_debug (\"Delete note at offset %#08lx - duplicate of note at offset %#08lx\\n\",\n+\t\t\t   (pnote->note.namedata - (char *) contents) - 12,\n+\t\t\t   (back->note.namedata - (char *) contents) - 12);\n \t      pnote->note.type = 0;\n \t      break;\n \t    }\n \n-\t  /* Rule 3 - combine identical open notes.  */\n-\t  if (back->note.namesz == pnote->note.namesz\n-\t      && memcmp (back->note.namedata,\n-\t\t\t pnote->note.namedata, back->note.namesz) == 0\n-\t      && ! gap_exists (back, pnote))\n+\t  /* Rule 2a.  */\n+\t  if (contained_by (pnote, back))\n \t    {\n-\t      duplicate_found = TRUE;\n+\t      merge_debug (\"Delete note at offset %#08lx - fully contained by note at %#08lx\\n\",\n+\t\t\t   (pnote->note.namedata - (char *) contents) - 12,\n+\t\t\t   (back->note.namedata - (char *) contents) - 12);\n \t      pnote->note.type = 0;\n-\n-\t      if (pnote->end > back->end)\n-\t\tback->end = pnote->end;\n-\n-\t      if (version_3_seen)\n-\t\tback->modified = TRUE;\n \t      break;\n \t    }\n \n-\t  /* Rule 5 - Since we are keeping this note we must check to see\n-\t     if its description refers back to an earlier OPEN version\n-\t     note that has been scheduled for deletion.  If so then we\n-\t     must make sure that version note is also preserved.  */\n-\t  if (version_3_seen)\n+#if DEBUG_MERGE\n+\t  /* This should not happen as we have sorted the\n+\t     notes with earlier starting addresses first.  */\n+\t  if (contained_by (back, pnote))\n+\t    merge_debug (\"ERROR: UNEXPECTED CONTAINMENT\\n\");\n+#endif\n+\n+\t  /* Rule 2b.  */\n+\t  if (overlaps_or_adjoins (back, pnote)\n+\t      && is_func_note (back) == is_func_note (pnote))\n \t    {\n-\t      /* As of version 3 we can just\n-\t\t move the range into the note.  */\n-\t      pnote->modified = TRUE;\n-\t      pnote->note.type = NT_GNU_BUILD_ATTRIBUTE_FUNC;\n-\t      back->modified = TRUE;\n-\t      back->note.type = NT_GNU_BUILD_ATTRIBUTE_FUNC;\n+\t      merge_debug (\"Delete note at offset %#08lx - merge into note at %#08lx\\n\",\n+\t\t\t   (pnote->note.namedata - (char *) contents) - 12,\n+\t\t\t   (back->note.namedata - (char *) contents) - 12);\n+\n+\t      back->end   = back->end > pnote->end ? back->end : pnote->end;\n+\t      back->start = back->start < pnote->start ? back->start : pnote->start;\n+\t      pnote->note.type = 0;\n+\t      break;\n \t    }\n-\t  else\n+\n+\t  /* Don't scan too far back however.  */\n+\t  if (iter ++ > 16)\n \t    {\n-\t      if (pnote->note.descsz == 0\n-\t\t  && prev_open_with_range != NULL\n-\t\t  && prev_open_with_range->note.type == 0)\n-\t\tprev_open_with_range->note.type = NT_GNU_BUILD_ATTRIBUTE_OPEN;\n+\t      /* FIXME: Not sure if this can ever be triggered.  */\n+\t      merge_debug (\"ITERATION LIMIT REACHED\\n\");\n+\t      break;\n \t    }\n-\n-\t  /* We have found a similar attribute but the details do not match.\n-\t     Stop searching backwards.  */\n-\t  break;\n \t}\n+#if DEBUG_MERGE\n+      if (! is_deleted_note (pnote))\n+\tmerge_debug (\"Unable to do anything with note at %#08lx\\n\",\n+\t\t     (pnote->note.namedata - (char *) contents) - 12);\n+#endif\t\t     \n     }\n \n-  if (duplicate_found)\n+  /* Resort the notes.  */\n+  merge_debug (\"Final sorting of notes\\n\");\n+  qsort (pnotes, pnotes_end - pnotes, sizeof (* pnotes), sort_gnu_build_notes);\n+\n+  /* Reconstruct the ELF notes.  */\n+  bfd_byte *     new_contents;\n+  bfd_byte *     old;\n+  bfd_byte *     new;\n+  bfd_size_type  new_size;\n+  bfd_vma        prev_start = 0;\n+  bfd_vma        prev_end = 0;\n+\n+  new = new_contents = xmalloc (size);\n+  for (pnote = pnotes, old = contents;\n+       pnote < pnotes_end;\n+       pnote ++)\n     {\n-      bfd_byte *     new_contents;\n-      bfd_byte *     old;\n-      bfd_byte *     new;\n-      bfd_size_type  new_size;\n-      bfd_vma        prev_start = 0;\n-      bfd_vma        prev_end = 0;\n-\n-      /* Eliminate the duplicates.  */\n-      new = new_contents = xmalloc (size);\n-      for (pnote = pnotes, old = contents;\n-\t   pnote < pnotes_end;\n-\t   pnote ++)\n-\t{\n-\t  bfd_size_type note_size = 12 + pnote->note.namesz + pnote->note.descsz;\n+      bfd_size_type note_size = 12 + pnote->padded_namesz + pnote->note.descsz;\n \n-\t  if (pnote->note.type != 0)\n+      if (! is_deleted_note (pnote))\n+\t{\n+\t  /* Create the note, potentially using the\n+\t     address range of the previous note.  */\n+\t  if (pnote->start == prev_start && pnote->end == prev_end)\n+\t    {\n+\t      bfd_put_32 (abfd, pnote->note.namesz, new);\n+\t      bfd_put_32 (abfd, 0, new + 4);\n+\t      bfd_put_32 (abfd, pnote->note.type, new + 8);\n+\t      new += 12;\n+\t      memcpy (new, pnote->note.namedata, pnote->note.namesz);\n+\t      if (pnote->note.namesz < pnote->padded_namesz)\n+\t\tmemset (new + pnote->note.namesz, 0, pnote->padded_namesz - pnote->note.namesz);\n+\t      new += pnote->padded_namesz;\n+\t    }\n+\t  else\n \t    {\n-\t      if (pnote->modified)\n+\t      bfd_put_32 (abfd, pnote->note.namesz, new);\n+\t      bfd_put_32 (abfd, is_64bit (abfd) ? 16 : 8, new + 4);\n+\t      bfd_put_32 (abfd, pnote->note.type, new + 8);\n+\t      new += 12;\n+\t      memcpy (new, pnote->note.namedata, pnote->note.namesz);\n+\t      if (pnote->note.namesz < pnote->padded_namesz)\n+\t\tmemset (new + pnote->note.namesz, 0, pnote->padded_namesz - pnote->note.namesz);\n+\t      new += pnote->padded_namesz;\n+\t      if (is_64bit (abfd))\n \t\t{\n-\t\t  /* If the note has been modified then we must copy it by\n-\t\t     hand, potentially adding in a new description field.  */\n-\t\t  if (pnote->start == prev_start && pnote->end == prev_end)\n-\t\t    {\n-\t\t      bfd_put_32 (abfd, pnote->note.namesz, new);\n-\t\t      bfd_put_32 (abfd, 0, new + 4);\n-\t\t      bfd_put_32 (abfd, pnote->note.type, new + 8);\n-\t\t      new += 12;\n-\t\t      memcpy (new, pnote->note.namedata, pnote->note.namesz);\n-\t\t      new += pnote->note.namesz;\n-\t\t    }\n-\t\t  else\n-\t\t    {\n-\t\t      bfd_put_32 (abfd, pnote->note.namesz, new);\n-\t\t      bfd_put_32 (abfd, is_64bit (abfd) ? 16 : 8, new + 4);\n-\t\t      bfd_put_32 (abfd, pnote->note.type, new + 8);\n-\t\t      new += 12;\n-\t\t      memcpy (new, pnote->note.namedata, pnote->note.namesz);\n-\t\t      new += pnote->note.namesz;\n-\t\t      if (is_64bit (abfd))\n-\t\t\t{\n-\t\t\t  bfd_put_64 (abfd, pnote->start, new);\n-\t\t\t  bfd_put_64 (abfd, pnote->end, new + 8);\n-\t\t\t  new += 16;\n-\t\t\t}\n-\t\t      else\n-\t\t\t{\n-\t\t\t  bfd_put_32 (abfd, pnote->start, new);\n-\t\t\t  bfd_put_32 (abfd, pnote->end, new + 4);\n-\t\t\t  new += 8;\n-\t\t\t}\n-\t\t    }\n+\t\t  bfd_put_64 (abfd, pnote->start, new);\n+\t\t  bfd_put_64 (abfd, pnote->end, new + 8);\n+\t\t  new += 16;\n \t\t}\n \t      else\n \t\t{\n-\t\t  memcpy (new, old, note_size);\n-\t\t  new += note_size;\n+\t\t  bfd_put_32 (abfd, pnote->start, new);\n+\t\t  bfd_put_32 (abfd, pnote->end, new + 4);\n+\t\t  new += 8;\n \t\t}\n+\n \t      prev_start = pnote->start;\n \t      prev_end = pnote->end;\n \t    }\n-\n-\t  old += note_size;\n \t}\n \n-      new_size = new - new_contents;\n-      memcpy (contents, new_contents, new_size);\n-      size = new_size;\n-      free (new_contents);\n+      old += note_size;\n     }\n \n+#if DEBUG_MERGE\n+  merge_debug (\"Results of merge:\\n\");\n+  for (pnote = pnotes; pnote < pnotes_end; pnote ++)\n+    if (! is_deleted_note (pnote))\n+      merge_debug (\"offset %#08lx range %#08lx..%#08lx type %ld attribute %d namesz %ld\\n\",\n+\t\t   (pnote->note.namedata - (char *) contents) - 12,\n+\t\t   pnote->start, pnote->end,\n+\t\t   pnote->note.type,\n+\t\t   pnote->note.namedata[3],\n+\t\t   pnote->note.namesz\n+\t\t   );\n+#endif\n+  \n+  new_size = new - new_contents;\n+  memcpy (contents, new_contents, new_size);\n+  size = new_size;\n+  free (new_contents);\n+\n  done:\n   if (err)\n     {\n@@ -2783,53 +2858,62 @@ copy_object (bfd *ibfd, bfd *obfd, const bfd_arch_info_type *input_arch)\n \t}\n     }\n \n+  merged_note_section * merged_note_sections = NULL;\n   if (merge_notes)\n     {\n       /* This palaver is necessary because we must set the output\n \t section size first, before its contents are ready.  */\n-      osec = bfd_get_section_by_name (ibfd, GNU_BUILD_ATTRS_SECTION_NAME);\n-      if (osec && is_merged_note_section (ibfd, osec))\n+      for (osec = ibfd->sections; osec != NULL; osec = osec->next)\n \t{\n-\t  bfd_size_type size;\n-\t  \n-\t  size = bfd_section_size (osec);\n+\t  if (! is_mergeable_note_section (ibfd, osec))\n+\t    continue;\n+\n+\t  bfd_size_type size = bfd_section_size (osec);\n+\n \t  if (size == 0)\n \t    {\n-\t      bfd_nonfatal_message (NULL, ibfd, osec, _(\"warning: note section is empty\"));\n-\t      merge_notes = FALSE;\n+\t      bfd_nonfatal_message (NULL, ibfd, osec,\n+\t\t\t\t    _(\"warning: note section is empty\"));\n+\t      continue;\n \t    }\n-\t  else if (! bfd_get_full_section_contents (ibfd, osec, & merged_notes))\n+\n+\t  merged_note_section * merged = xmalloc (sizeof * merged);\n+\t  merged->contents = NULL;\n+\t  if (! bfd_get_full_section_contents (ibfd, osec, & merged->contents))\n \t    {\n-\t      bfd_nonfatal_message (NULL, ibfd, osec, _(\"warning: could not load note section\"));\n-\t      free (merged_notes);\n-\t      merged_notes = NULL;\n-\t      merge_notes = FALSE;\n+\t      bfd_nonfatal_message (NULL, ibfd, osec,\n+\t\t\t\t    _(\"warning: could not load note section\"));\n+\t      free (merged->contents);\n+\t      free (merged);\n+\t      continue;\n \t    }\n-\t  else\n+\n+\t  merged->size = merge_gnu_build_notes (ibfd, osec, size,\n+\t\t\t\t\t\tmerged->contents);\n+\t  if (merged->size == size)\n \t    {\n-\t      merged_size = merge_gnu_build_notes (ibfd, osec, size, merged_notes);\n-\t      if (merged_size == size)\n-\t\t{\n-\t\t  /* Merging achieves nothing.  */\n-\t\t  free (merged_notes);\n-\t\t  merged_notes = NULL;\n-\t\t  merge_notes = FALSE;\n-\t\t  merged_size = 0;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  if (osec->output_section == NULL\n-\t\t      || !bfd_set_section_size (osec->output_section,\n-\t\t\t\t\t\tmerged_size))\n-\t\t    {\n-\t\t      bfd_nonfatal_message (NULL, obfd, osec, _(\"warning: failed to set merged notes size\"));\n-\t\t      free (merged_notes);\n-\t\t      merged_notes = NULL;\n-\t\t      merge_notes = FALSE;\n-\t\t      merged_size = 0;\n-\t\t    }\n-\t\t}\n+\t      /* Merging achieves nothing.  */\n+\t      merge_debug (\"Merge of section %s achieved nothing - skipping\\n\",\n+\t\t\t   bfd_section_name (osec));\n+\t      free (merged->contents);\n+\t      free (merged);\n+\t      continue;\n \t    }\n+\n+\t  if (osec->output_section == NULL\n+\t      || !bfd_set_section_size (osec->output_section, merged->size))\n+\t    {\n+\t      bfd_nonfatal_message (NULL, obfd, osec,\n+\t\t\t\t    _(\"warning: failed to set merged notes size\"));\n+\t      free (merged->contents);\n+\t      free (merged);\n+\t      continue;\n+\t    }\n+\n+\t  /* Add section to list of merged sections.  */\n+\t  merged->sec  = osec;\n+\t  merged->next = merged_note_sections;\n+\t  merged_note_sections = merged;\n \t}\n     }\n \n@@ -3154,23 +3238,72 @@ copy_object (bfd *ibfd, bfd *obfd, const bfd_arch_info_type *input_arch)\n \t}\n     }\n \n-  if (merge_notes)\n+  if (merged_note_sections != NULL)\n     {\n-      osec = bfd_get_section_by_name (obfd, GNU_BUILD_ATTRS_SECTION_NAME);\n-      if (osec && is_merged_note_section (obfd, osec))\n+      merged_note_section * merged = NULL;\n+\n+      for (osec = obfd->sections; osec != NULL; osec = osec->next)\n \t{\n-\t  if (! bfd_set_section_contents (obfd, osec, merged_notes, 0, merged_size))\n+\t  if (! is_mergeable_note_section (obfd, osec))\n+\t    continue;\n+\n+\t  if (merged == NULL)\n+\t    merged = merged_note_sections;\n+\n+\t  /* It is likely that output sections are in the same order\n+\t     as the input sections, but do not assume that this is\n+\t     the case.  */\n+\t  if (strcmp (bfd_section_name (merged->sec),\n+\t\t      bfd_section_name (osec)) != 0)\n \t    {\n-\t      bfd_nonfatal_message (NULL, obfd, osec, _(\"error: failed to copy merged notes into output\"));\n+\t      for (merged = merged_note_sections;\n+\t\t   merged != NULL;\n+\t\t   merged = merged->next)\n+\t\tif (strcmp (bfd_section_name (merged->sec),\n+\t\t\t    bfd_section_name (osec)) == 0)\n+\t\t  break;\n+\n+\t      if (merged == NULL)\n+\t\t{\n+\t\t  bfd_nonfatal_message\n+\t\t    (NULL, obfd, osec,\n+\t\t     _(\"error: failed to copy merged notes into output\"));\n+\t\t  continue;\n+\t\t}\n+\t    }\n+\n+\t  if (! is_mergeable_note_section (obfd, osec))\n+\t    {\n+\t      bfd_nonfatal_message\n+\t\t(NULL, obfd, osec,\n+\t\t _(\"error: failed to copy merged notes into output\"));\n+\t      continue;\n+\t    }\n+\n+\t  if (! bfd_set_section_contents (obfd, osec, merged->contents, 0,\n+\t\t\t\t\t  merged->size))\n+\t    {\n+\t      bfd_nonfatal_message\n+\t\t(NULL, obfd, osec,\n+\t\t _(\"error: failed to copy merged notes into output\"));\n \t      return FALSE;\n \t    }\n+\n+\t  merged = merged->next;\n+\t}\n+\n+      /* Free the memory.  */\n+      merged_note_section * next;\n+      for (merged = merged_note_sections; merged != NULL; merged = next)\n+\t{\n+\t  next = merged->next;\n+\t  free (merged->contents);\n+\t  free (merged);\n \t}\n-      else if (! is_strip)\n-\tbfd_nonfatal_message (NULL, obfd, osec, _(\"could not find any mergeable note sections\"));\n-      free (merged_notes);\n-      merged_notes = NULL;\n-      merge_notes = FALSE;\n     }\n+  else if (merge_notes && ! is_strip)\n+    non_fatal (_(\"%s: Could not find any mergeable note sections\"),\n+\t       bfd_get_filename (ibfd));\n \n   if (gnu_debuglink_filename != NULL)\n     {\n@@ -3959,7 +4092,7 @@ skip_section (bfd *ibfd, sec_ptr isection, bfd_boolean skip_copy)\n \n   /* When merging a note section we skip the copying of the contents,\n      but not the copying of the relocs associated with the contents.  */\n-  if (skip_copy && is_merged_note_section (ibfd, isection))\n+  if (skip_copy && is_mergeable_note_section (ibfd, isection))\n     return TRUE;\n \n   flags = bfd_section_flags (isection);"
    },
    {
      "sha": "1412ad768d31f008a6adc752bf9706a220af8781",
      "filename": "binutils/testsuite/binutils-all/note-2-32.d",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-2-32.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -6,12 +6,11 @@\n \n #...\n [ \t]+Owner[ \t]+Data size[ \t]+Description\n-[ \t]+\\$<version>1[ \t]+0x00000004[ \t]+OPEN[ \t]+Applies to region from 0x100 \\(note1.s\\)\n-[ \t]+\\$<tool>gcc 7.0.1[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\+<stack prot>true[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\*<PIC>static[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\*<ABI>0x0[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\$<version>1[ \t]+0x00000004[ \t]+OPEN[ \t]+Applies to region from 0x104 \\(note2.s\\)\n-[ \t]+!<stack prot>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x104\n-[ \t]+\\*<PIC>pic[ \t]+0x00000004[ \t]+func[ \t]+Applies to region from 0x104 \\(func1\\)\n+[ \t]+GA\\$<version>3p1[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x10b \\(note1.s\\)\n+[ \t]+GA\\$<tool>gcc 7.0.1[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x10b\n+[ \t]+GA\\*<ABI>0x0[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x108 \\(note1.s\\)\n+[ \t]+GA\\+<stack prot>true[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x104 \\(note1.s\\)\n+[ \t]+GA\\*<PIC>static[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x104\n+[ \t]+GA!<stack prot>false[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x104 to 0x108 \\(note2.s\\)\n+[ \t]+GA\\*<PIC>pic[ \t]+0x00000008[ \t]+func[ \t]+Applies to region from 0x104 to 0x106 \\(func1\\)\n #..."
    },
    {
      "sha": "ccb6cecc2b7fc796824cbc7d2f46fae78879e9b8",
      "filename": "binutils/testsuite/binutils-all/note-2-32.s",
      "status": "modified",
      "additions": 44,
      "deletions": 32,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-2-32.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -6,32 +6,37 @@ note1.s:\n \t\n \t.pushsection .gnu.build.attributes, \"0x100000\", %note\n \t.balign 4\n-\t.dc.l 4\n-\t.dc.l 4\n+\t.dc.l 8\n+\t.dc.l 8\n \t.dc.l 0x100\n-\t.asciz \"$\u00011\"\n+\t.asciz \"GA$\u00013p1\"\n \t.dc.l 0x100\n+\t.dc.l 0x104\n \n-\t.dc.l 12\n+\t.dc.l 14\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.asciz \"$\u0005gcc 7.0.1\"\n+\t.asciz \"GA$\u0005gcc 7.0.1\"\n+\t.dc.b 0,0\n \n-\t.dc.l 3\n+\t.dc.l 5\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.dc.b 0x2b, 0x2, 0\n-\t.dc.b 0\n+\t.dc.b 0x47, 0x41, 0x2b, 0x2, 0\n+\t.dc.b 0,0,0\n \n-\t.dc.l 4\n+\t.dc.l 6\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.dc.b 0x2a, 0x7, 0, 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0, 0\n+\t.dc.b 0,0\n \n-\t.dc.l 4\n+\t.dc.l 6\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.dc.b 0x2a, 0x6, 0, 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0, 0\n+\t.dc.b 0,0\n+\t\n \t.popsection\n \n \n@@ -42,33 +47,38 @@ func1:\n \t.dc.l 0x100\n \t\n \t.pushsection .gnu.build.attributes, \"0x100000\", %note\n-\t.dc.l 4 \t\n-\t.dc.l 4\t\t\n+\t.dc.l 8\t\n+\t.dc.l 8\t\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u00011\"\t\n+\t.asciz \"GA$\u00013p1\"\t\n \t.dc.l 0x104\t\n-\n-\t.dc.l 12 \t\n+\t.dc.l 0x108\n+\t\n+\t.dc.l 14 \t\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u0005gcc 7.0.1\"\t\n+\t.asciz \"GA$\u0005gcc 7.0.1\"\n+\t.dc.b 0,0\n \n-\t.dc.l 3\t\t\n+\t.dc.l 5\t\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.dc.b 0x21, 0x2, 0\n-\t.dc.b 0 \t\n+\t.dc.b 0x47, 0x41, 0x21, 0x2, 0\n+\t.dc.b 0,0,0\n \n-\t.dc.l 4\t\t\n-\t.dc.l 4\t\t\n+\t.dc.l 6\t\n+\t.dc.l 8\t\t\n \t.dc.l 0x101\t\n-\t.dc.b 0x2a, 0x7, 1, 0\n-\t.dc.l 0x104\t\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 1, 0\n+\t.dc.b 0,0\n+\t.dc.l 0x104\n+\t.dc.l 0x106\n \t\n-\t.dc.l 4\t\t\n+\t.dc.l 6\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.dc.b 0x2a, 0x6, 0, 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0, 0\n+\t.dc.b 0,0\n \t.popsection\n \n \t\n@@ -77,16 +87,18 @@ note3.s:\n \t.dc.l 0x100\n \t\n \t.pushsection .gnu.build.attributes, \"0x100000\", %note\n-\t.dc.l 4 \t\n-\t.dc.l 4\t\t\n+\t.dc.l 8\t\n+\t.dc.l 8\t\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u00011\"\t\n+\t.asciz \"GA$\u00013p1\"\t\n \t.dc.l 0x108\n+\t.dc.l 0x10b\n \n-\t.dc.l 12 \t\n+\t.dc.l 14\t\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u0005gcc 7.0.1\"\t\n+\t.asciz \"GA$\u0005gcc 7.0.1\"\n+\t.dc.b 0,0\n \n \t.popsection\n \t"
    },
    {
      "sha": "26a0231f949ae3948189e9d10bd5bbd19e62338b",
      "filename": "binutils/testsuite/binutils-all/note-2-64.d",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-2-64.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -10,12 +10,11 @@\n \n #...\n [ \t]+Owner[ \t]+Data size[ \t]+Description\n-[ \t]+\\$<version>1[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x100 \\(note1.s\\)\n-[ \t]+\\$<tool>gcc 7.0.1[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\+<stack prot>true[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\*<PIC>static[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\*<ABI>0x0[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100\n-[ \t]+\\$<version>1[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x104 \\(note2.s\\)\n-[ \t]+!<stack prot>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x104\n-[ \t]+\\*<PIC>pic[ \t]+0x00000008[ \t]+func[ \t]+Applies to region from 0x104 \\(func1\\)\n+[ \t]+GA\\$<version>3p1[ \t]+0x00000010[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x10b \\(note1.s\\)\n+[ \t]+GA\\$<tool>gcc 7.0.1[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x10b\n+[ \t]+GA\\*<ABI>0x0[ \t]+0x00000010[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x108 \\(note1.s\\)\n+[ \t]+GA\\+<stack prot>true[ \t]+0x00000010[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x104 \\(note1.s\\)\n+[ \t]+GA\\*<PIC>static[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x104\n+[ \t]+GA!<stack prot>false[ \t]+0x00000010[ \t]+OPEN[ \t]+Applies to region from 0x104 to 0x108 \\(note2.s\\)\n+[ \t]+GA\\*<PIC>pic[ \t]+0x00000010[ \t]+func[ \t]+Applies to region from 0x104 to 0x106 \\(func1\\)\n #..."
    },
    {
      "sha": "e421d6bdbfe8f282f91ce8198ca19128dceed8d6",
      "filename": "binutils/testsuite/binutils-all/note-2-64.s",
      "status": "modified",
      "additions": 48,
      "deletions": 30,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-2-64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-2-64.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -6,32 +6,43 @@ note1.s:\n \t\n \t.pushsection .gnu.build.attributes, \"0x100000\", %note\n \t.balign 4\n-\t.dc.l 4\n \t.dc.l 8\n+\t.dc.l 16\n \t.dc.l 0x100\n-\t.asciz \"$\u00011\"\n+\t.asciz \"GA$\u00013p1\"\n \t.8byte 0x100\n+\t.8byte 0x104\n \n-\t.dc.l 12\n+\t.dc.l 14\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.asciz \"$\u0005gcc 7.0.1\"\n+\t.asciz \"GA$\u0005gcc 7.0.1\"\n+\t.dc.b 0,0\n+\t\n+\t.dc.l 5\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2b, 0x2, 0\n+\t.dc.b 0,0,0\n \n-\t.dc.l 3\n+\t.dc.l 6\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.dc.b 0x2b, 0x2, 0\n-\t.dc.b 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0, 0\n+\t.dc.b 0,0\n \n-\t.dc.l 4\n+\t.dc.l 6\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.dc.b 0x2a, 0x7, 0, 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0, 0\n+\t.dc.b 0,0\n \n-\t.dc.l 4\n+\t.dc.l 6\n \t.dc.l 0\n \t.dc.l 0x100\n-\t.dc.b 0x2a, 0x6, 0, 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0, 0\n+\t.dc.b 0,0\n+\n \t.popsection\n \n \n@@ -43,33 +54,38 @@ func1:\n \t.dc.l 0x100\n \n \t.pushsection .gnu.build.attributes, \"0x100000\", %note\n-\t.dc.l 4 \t\n-\t.dc.l 8\t\t\n+\t.dc.l 8\n+\t.dc.l 16\t\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u00011\"\t\n+\t.asciz \"GA$\u00013p1\"\n \t.8byte 0x104\t\n+\t.8byte 0x108\t\n \n-\t.dc.l 12 \t\n+\t.dc.l 14 \t\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u0005gcc 7.0.1\"\t\n-\n-\t.dc.l 3\t\t\n+\t.asciz \"GA$\u0005gcc 7.0.1\"\t\n+\t.dc.b 0,0\n+\t\n+\t.dc.l 5\t\t\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.dc.b 0x21, 0x2, 0\n-\t.dc.b 0 \t\n+\t.dc.b 0x47, 0x41, 0x21, 0x2, 0\n+\t.dc.b 0,0,7 \t\n \n-\t.dc.l 4\n-\t.dc.l 8\t\n+\t.dc.l 6\n+\t.dc.l 16\n \t.dc.l 0x101\t\n-\t.dc.b 0x2a, 0x7, 1, 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 1, 0\n+\t.dc.b 0,0\n \t.8byte 0x104\t\n+\t.8byte 0x106\t\n \n-\t.dc.l 4\n+\t.dc.l 6\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.dc.b 0x2a, 0x6, 0, 0\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0, 0\n+\t.dc.b 0,0\n \t.popsection\n \t\n \n@@ -78,15 +94,17 @@ note3.s:\n \t.dc.l 0x100\n \t\n \t.pushsection .gnu.build.attributes, \"0x100000\", %note\n-\t.dc.l 4 \t\n-\t.dc.l 8\t\t\n+\t.dc.l 8\t\n+\t.dc.l 16\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u00011\"\t\n+\t.asciz \"GA$\u00013p1\"\n \t.8byte 0x108\n+\t.8byte 0x10b\n \n-\t.dc.l 12 \t\n+\t.dc.l 14 \t\n \t.dc.l 0\t\t\n \t.dc.l 0x100\t\n-\t.asciz \"$\u0005gcc 7.0.1\"\t\n+\t.asciz \"GA$\u0005gcc 7.0.1\"\n+\t.dc.b 0,0\n \n \t.popsection"
    },
    {
      "sha": "783a409b05d4f29645cb37819e7051b06f3575d5",
      "filename": "binutils/testsuite/binutils-all/note-3-32.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-3-32.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -7,12 +7,12 @@\n #...\n Displaying notes found in: .gnu.build.attributes\n [ \t]+Owner[ \t]+Data size[ \t]+Description\n-[ \t]+GA\\$<version>2p1[ \t]+0x0000000.[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122 \\(note_1.s\\)\n-[ \t]+GA\\$<tool>gcc 6.3.1 20161221[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n-[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\$<version>3p1[ \t]+0x0000000.[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122 \\(note_1.s\\)\n [ \t]+GA\\*<stack prot>off[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n-[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\$<tool>gcc 6.3.1 20161221[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n [ \t]+GA\\*<PIC>PIC[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n [ \t]+GA\\!<short enum>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n-[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n #..."
    },
    {
      "sha": "a9993c654c10e3a8ab1358146bb51b97c10d5b80",
      "filename": "binutils/testsuite/binutils-all/note-3-32.s",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-3-32.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -9,10 +9,11 @@ note_1.s:\n \t.balign 4\n \n \t.dc.l 8\n-\t.dc.l 4\n+\t.dc.l 8\n \t.dc.l 0x100\n-\t.asciz \"GA$\u00012p1\"\n-\t.dc.l note_1.s\n+\t.asciz \"GA$\u00013p1\"\n+\t.dc.l 0x100 /* note_1.s */\n+\t.dc.l 0x122 /* note_1.s end */\n \n \t.dc.l 23\n \t.dc.l 0\n@@ -55,4 +56,12 @@ note_1.s:\n \t.dc.l 0x100\n \t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n \t.dc.b 0, 0, 0\n+\n+\t.dc.l 5\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x21, 0x8, 0\n+\t.dc.b 0, 0, 0\n+\n+\n \t.popsection"
    },
    {
      "sha": "61a4d9f7b636f4baaa7fde8491433613910c5403",
      "filename": "binutils/testsuite/binutils-all/note-3-64.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-3-64.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -7,12 +7,12 @@\n #...\n Displaying notes found in: .gnu.build.attributes\n [ \t]+Owner[ \t]+Data size[ \t]+Description\n-[ \t]+GA\\$<version>2p1[ \t]+0x0000000.[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122 \\(note_1.s\\)\n-[ \t]+GA\\$<tool>gcc 6.3.1 20161221[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n-[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\$<version>3p1[ \t]+0x00000010[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122 \\(note_1.s\\)\n [ \t]+GA\\*<stack prot>off[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n-[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\$<tool>gcc 6.3.1 20161221[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n [ \t]+GA\\*<PIC>PIC[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n [ \t]+GA\\!<short enum>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n-[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n+[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x122\n #..."
    },
    {
      "sha": "e0fd62f6c78e312754183db9e760b36f2b7490e4",
      "filename": "binutils/testsuite/binutils-all/note-3-64.s",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-3-64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-3-64.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -9,10 +9,11 @@ note_1.s:\n \t.balign 4\n \n \t.dc.l 8\n-\t.dc.l 8\n+\t.dc.l 16\n \t.dc.l 0x100\n-\t.asciz \"GA$\u00012p1\"\n-\t.8byte note_1.s\n+\t.asciz \"GA$\u00013p1\"\n+\t.8byte 0x100 /* note_1.s */\n+\t.8byte 0x122 /* note_1 end */\n \n \t.dc.l 23\n \t.dc.l 0\n@@ -55,4 +56,11 @@ note_1.s:\n \t.dc.l 0x100\n \t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n \t.dc.b 0, 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0x2, 0\n+\t.dc.b 0, 0\n+\n \t.popsection"
    },
    {
      "sha": "33784c3bbd8174a197ec77c18105c48ad78d980a",
      "filename": "binutils/testsuite/binutils-all/note-4-32.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-4-32.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -8,12 +8,12 @@\n Displaying notes found in: .gnu.build.attributes\n [ \t]+Owner[ \t]+Data size[ \t]+Description\n [ \t]+GA\\$<version>3p3[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110 \\(note_4.s\\)\n-[ \t]+GA\\$<tool>gcc 7.2.1 20170915[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n-[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n [ \t]+GA\\*<stack prot>off[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n-[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n+[ \t]+GA\\$<tool>gcc 7.2.1 20170915[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n+[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n [ \t]+GA\\*<PIC>PIC[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n [ \t]+GA\\!<short enum>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n-[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n+[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n+[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x10. to 0x110\n [ \t]+GA\\*<stack prot>strong[ \t]+0x00000008[ \t]+func[ \t]+Applies to region from 0x10. to 0x10c.*\n #..."
    },
    {
      "sha": "722ab7a8090ae8ba99dc3cc9a8c739faf4743be5",
      "filename": "binutils/testsuite/binutils-all/note-4-32.s",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-4-32.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -18,8 +18,8 @@ note_4.s_end:\n \t.dc.l 8\n \t.dc.l 0x100\n \t.asciz \"GA$\u00013p3\"\n-\t.dc.l note_4.s - 2\n-\t.dc.l note_4.s_end\n+\t.dc.l 0x100 /* note_4.s - 2 */\n+\t.dc.l 0x110 /* note_4.s_end */\n \n \t.dc.l 23\n \t.dc.l 0\n@@ -63,12 +63,18 @@ note_4.s_end:\n \t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n \t.dc.b 0, 0, 0\n \n+\t.dc.l 5\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x21, 0x8, 0\n+\t.dc.b 0, 0, 0\n+\n \t.dc.l 6\n \t.dc.l 8\n \t.dc.l 0x101\n \t.dc.b 0x47, 0x41, 0x2a, 0x2, 0x3, 0\n \t.dc.b 0, 0\n-\t.dc.l bar\n-\t.dc.l bar_end\n+\t.dc.l 0x108 /* bar */\n+\t.dc.l 0x10c /* bar_end */\n \t\n \t.popsection"
    },
    {
      "sha": "1520d43056e097d86e254a89a36a1097650687a4",
      "filename": "binutils/testsuite/binutils-all/note-4-64.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-4-64.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -8,12 +8,12 @@\n Displaying notes found in: .gnu.build.attributes\n [ \t]+Owner[ \t]+Data size[ \t]+Description\n [ \t]+GA\\$<version>3p3[ \t]+0x00000010[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120 \\(note_4.s\\)\n-[ \t]+GA\\$<tool>gcc 7.2.1 20170915[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n-[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n [ \t]+GA\\*<stack prot>off[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n-[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n+[ \t]+GA\\$<tool>gcc 7.2.1 20170915[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n+[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n [ \t]+GA\\*<PIC>PIC[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n [ \t]+GA\\!<short enum>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n-[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n-[ \t]+GA\\*<stack prot>strong[ \t]+0x00000010[ \t]+func[ \t]+Applies to region from 0x110 to 0x11c.*\n+[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n+[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x120\n+[ \t]+GA\\*<stack prot>strong[ \t]+0x00000010[ \t]+func[ \t]+Applies to region from 0x110 to 0x120.*\n #..."
    },
    {
      "sha": "70b2e57f77c38f4d77ecf9d44e9d61aca87c7ef8",
      "filename": "binutils/testsuite/binutils-all/note-4-64.s",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-4-64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-4-64.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -22,8 +22,8 @@ note_4.s_end:\n \t.dc.l 16\n \t.dc.l 0x100\n \t.asciz \"GA$\u00013p3\"\n-\t.8byte note_4.s - 2\n-\t.8byte note_4.s_end\n+\t.8byte 0x100 /* note_4.s - 2 */\n+\t.8byte 0x120 /* note_4.s_end */\n \n \t.dc.l 23\n \t.dc.l 0\n@@ -67,12 +67,18 @@ note_4.s_end:\n \t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n \t.dc.b 0, 0, 0\n \n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0x2, 0\n+\t.dc.b 0, 0\n+\n \t.dc.l 6\n \t.dc.l 16\n \t.dc.l 0x101\n \t.dc.b 0x47, 0x41, 0x2a, 0x2, 0x3, 0\n \t.dc.b 0, 0\n-\t.8byte bar\n-\t.8byte bar_end\n+\t.8byte 0x110 /* bar */\n+\t.8byte 0x120 /* bar_end */\n \t\n \t.popsection"
    },
    {
      "sha": "75b7b5945acbb412c4453de03ec100e58ab970ed",
      "filename": "binutils/testsuite/binutils-all/note-6-32.d",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-6-32.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -0,0 +1,20 @@\n+#PROG: objcopy\n+#readelf: --notes --wide\n+#objcopy: --merge-notes\n+#name: v3 gnu build attribute note merging (32-bit)\n+#source: note-6-32.s\n+\n+#...\n+Displaying notes found in: .gnu.build.attributes\n+[ \t]+Owner[ \t]+Data size[ \t]+Description\n+[ \t]+GA\\$<version>3p1[ \t]+0x00000008[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106 \\(note_test\\)\n+[ \t]+GA\\*<stack prot>off[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\$<tool>gcc 8.3.1 20190507[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*<PIC>PIC[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\!<short enum>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\$<version>3p1[ \t]+0x00000008[ \t]+func[ \t]+Applies to region from 0x102 to 0x106\n+[ \t]+GA\\$<tool>hello world[ \t]+0x00000000[ \t]+func[ \t]+Applies to region from 0x102 to 0x106\n+#..."
    },
    {
      "sha": "12a1c76fcfbb05c99ff69869b6c07ca328d27033",
      "filename": "binutils/testsuite/binutils-all/note-6-32.s",
      "status": "added",
      "additions": 145,
      "deletions": 0,
      "changes": 145,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-6-32.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -0,0 +1,145 @@\n+\t.text\n+\t.org    0x100\n+\t.global note_test\n+note_test:\t\n+note_1_start:\n+\t.word 0\n+note_1_end:\n+note_2_start:\n+\t.word 0\n+note_2_end:\n+note_3_start:\n+\t.word 0\n+note_3_end:\n+note_test_end:\t\n+\t.size   note_test, note_test_end - note_test\n+\t\n+\t.pushsection .gnu.build.attributes, \"\", %note\n+\t.balign 4\n+\n+\t.dc.l 8\n+\t.dc.l 8\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u00013p1\"\n+\t.4byte 0x100  /* note_1_start */\n+\t.4byte 0x102  /* note_1_end */\n+\n+\t.dc.l 23\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u0005gcc 8.3.1 20190507\"\n+\t.dc.b 0\n+\n+\t.dc.l 10\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x47, 0x4f, 0x57, 0, 0, 0x7, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x2, 0, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x46, 0x4f, 0x52, 0x54, 0x49, 0x46, 0x59, 0, 0xff, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0x2, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 5\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x21, 0x8, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n+\t.dc.b 0, 0, 0\n+\n+\t\n+\t.dc.l 8\n+\t.dc.l 8\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u00013p1\"\n+\t.4byte 0x102  /* note_2_start */\n+\t.4byte 0x106  /* note_3_end */\n+\n+\t.dc.l 23\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u0005gcc 8.3.1 20190507\"\n+\t.dc.b 0\n+\n+\t.dc.l 10\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x47, 0x4f, 0x57, 0, 0, 0x7, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x2, 0, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x46, 0x4f, 0x52, 0x54, 0x49, 0x46, 0x59, 0, 0xff, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0x2, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 5\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x21, 0x8, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n+\t.dc.b 0, 0, 0\n+\n+\n+\t.dc.l 8\n+\t.dc.l 8\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u00013p1\"\n+\t.4byte 0x102  /* note_2_start */\n+\t.4byte 0x104  /* note_2_end */\n+\n+\t.dc.l 16\n+\t.dc.l 0\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u0005hello world\"\n+\n+\n+\t.dc.l 8\n+\t.dc.l 8\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u00013p1\"\n+\t.4byte 0x104  /* note_3_start */\n+\t.4byte 0x106  /* note_3_end */\n+\n+\t.dc.l 16\n+\t.dc.l 0\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u0005hello world\"\n+\n+\t.popsection"
    },
    {
      "sha": "0bdec235ed61683a0bd13cfddd8de98f3602d96c",
      "filename": "binutils/testsuite/binutils-all/note-6-64.d",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-6-64.d?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -0,0 +1,20 @@\n+#PROG: objcopy\n+#readelf: --notes --wide\n+#objcopy: --merge-notes\n+#name: v3 gnu build attribute note merging (64-bit)\n+#source: note-6-64.s\n+\n+#...\n+Displaying notes found in: .gnu.build.attributes\n+[ \t]+Owner[ \t]+Data size[ \t]+Description\n+[ \t]+GA\\$<version>3p1[ \t]+0x00000010[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106 \\(note_test\\)\n+[ \t]+GA\\*<stack prot>off[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\$<tool>gcc 8.3.1 20190507[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*<ABI>0x[0-9a-f]+[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*<PIC>PIC[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\!<short enum>false[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*FORTIFY:0xff[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\*GOW:0x700[ \t]+0x00000000[ \t]+OPEN[ \t]+Applies to region from 0x100 to 0x106\n+[ \t]+GA\\$<version>3p1[ \t]+0x00000010[ \t]+func[ \t]+Applies to region from 0x102 to 0x106\n+[ \t]+GA\\$<tool>hello world[ \t]+0x00000000[ \t]+func[ \t]+Applies to region from 0x102 to 0x106\n+#..."
    },
    {
      "sha": "3fe3f9d805e18f085352ed0341126a6095669dcd",
      "filename": "binutils/testsuite/binutils-all/note-6-64.s",
      "status": "added",
      "additions": 145,
      "deletions": 0,
      "changes": 145,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/note-6-64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/note-6-64.s?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -0,0 +1,145 @@\n+\t.text\n+\t.org    0x100\n+\t.global note_test\n+note_test:\t\n+note_1_start:\n+\t.word 0\n+note_1_end:\n+note_2_start:\n+\t.word 0\n+note_2_end:\n+note_3_start:\n+\t.word 0\n+note_3_end:\n+note_test_end:\t\n+\t.size   note_test, note_test_end - note_test\n+\t\n+\t.pushsection .gnu.build.attributes, \"\", %note\n+\t.balign 4\n+\n+\t.dc.l 8\n+\t.dc.l 16\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u00013p1\"\n+\t.8byte 0x100  /* note_1_start */\n+\t.8byte 0x102  /* note_1_end */\n+\n+\t.dc.l 23\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u0005gcc 8.3.1 20190507\"\n+\t.dc.b 0\n+\n+\t.dc.l 10\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x47, 0x4f, 0x57, 0, 0, 0x7, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x2, 0, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x46, 0x4f, 0x52, 0x54, 0x49, 0x46, 0x59, 0, 0xff, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0x2, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 5\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x21, 0x8, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n+\t.dc.b 0, 0, 0\n+\n+\n+\t.dc.l 8\n+\t.dc.l 16\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u00013p1\"\n+\t.8byte 0x102  /* note_2_start */\n+\t.8byte 0x106  /* note_3_end */\n+\n+\t.dc.l 23\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.asciz \"GA$\u0005gcc 8.3.1 20190507\"\n+\t.dc.b 0\n+\n+\t.dc.l 10\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x47, 0x4f, 0x57, 0, 0, 0x7, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x2, 0, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x46, 0x4f, 0x52, 0x54, 0x49, 0x46, 0x59, 0, 0xff, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 6\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x7, 0x2, 0\n+\t.dc.b 0, 0\n+\n+\t.dc.l 5\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x21, 0x8, 0\n+\t.dc.b 0, 0, 0\n+\n+\t.dc.l 13\n+\t.dc.l 0\n+\t.dc.l 0x100\n+\t.dc.b 0x47, 0x41, 0x2a, 0x6, 0xf2, 0x3, 0x38, 0xee, 0xce, 0xfa, 0x5e, 0x3c, 0\n+\t.dc.b 0, 0, 0\n+\n+\n+\t.dc.l 8\n+\t.dc.l 16\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u00013p1\"\n+\t.8byte 0x102  /* note_2_start */\n+\t.8byte 0x104  /* note_2_end */\n+\n+\t.dc.l 16\n+\t.dc.l 0\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u0005hello world\"\n+\n+\n+\t.dc.l 8\n+\t.dc.l 16\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u00013p1\"\n+\t.8byte 0x104  /* note_3_start */\n+\t.8byte 0x106  /* note_3_end */\n+\n+\t.dc.l 16\n+\t.dc.l 0\n+\t.dc.l 0x101\n+\t.asciz \"GA$\u0005hello world\"\n+\n+\t.popsection"
    },
    {
      "sha": "6c4b0196ab7d9f0c1fdd27d3a11b6bdf47bed3e0",
      "filename": "binutils/testsuite/binutils-all/objcopy.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/objcopy.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c49f2cd78c69d50bc7c7119596a226f05939d06/binutils/testsuite/binutils-all/objcopy.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objcopy.exp?ref=5c49f2cd78c69d50bc7c7119596a226f05939d06",
      "patch": "@@ -1108,10 +1108,12 @@ if [is_elf_format] {\n \trun_dump_test \"note-2-64\"\n \trun_dump_test \"note-3-64\"\n \trun_dump_test \"note-4-64\"\n+\trun_dump_test \"note-6-64\"\n     } else {\n \trun_dump_test \"note-2-32\"\n \trun_dump_test \"note-3-32\"\n \trun_dump_test \"note-4-32\"\n+\trun_dump_test \"note-6-32\"\n     }\n     run_dump_test \"note-5\"\n }"
    }
  ]
}