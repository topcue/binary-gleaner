{
  "sha": "4659554b280bee894d117360f403d4073edd3bc9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDY1OTU1NGIyODBiZWU4OTRkMTE3MzYwZjQwM2Q0MDczZWRkM2JjOQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-02T15:10:05Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-02T15:10:08Z"
    },
    "message": "libctf: minor error-handling fixes\n\nA transient bug in the preceding change (fixed before commit) exposed a\nnew failure, of ld/testsuite/ld-ctf/diag-parname.d.  This attempts to\nensure that if we link a dict with child type IDs but no attached\nparent, we get a suitable ECTF_NOPARENT error.  This was happening\nbefore this commit, but only by chance, because ctf_variable_iter and\nctf_variable_next check to see if the dict they're passed is a child\ndict without an associated parent.  We forgot error-checking on the\nctf_variable_next call, and as a result this was concealed -- and\nlooking for the problem exposed a new bug.\n\nIf any of the lookups beneath ctf_dedup_hash_type fail, the CTF link\ndoes *not* fail, but acts quite bizarrely, skipping the type but\nemitting an error to the CTF error/warning log -- so the linker will\nreport an error, emit a partial CTF dict missing some types, and exit\nwith exitcode 0 as if nothing went wrong.  Since ctf_dedup_hash_type is\nnever expected to fail in normal operation, this is surely wrong:\nfailures at emission time do not emit partial CTF dicts, so failures\nat hashing time should not either.\n\nSo propagate the error back up.\n\nAlso fix a couple of smaller bugs where we fail to properly free things\nand/or propagate error codes on various rare link-time errors and\nout-of-memory conditions.\n\nlibctf/ChangeLog\n2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-dedup.c (ctf_dedup): Pass on errors from ctf_dedup_hash_type.\n\tCall ctf_dedup_fini properly on other errors.\n\t(ctf_dedup_emit_type): Set the errno on dynhash insertion failure.\n\t* ctf-link.c (ctf_link_deduplicating_per_cu): Close outputs beyond\n\toutput 0 when asserting because >1 output is found.\n\t(ctf_link_deduplicating): Likewise, when asserting because the\n\tshared output is not the same as the passed-in fp.",
    "tree": {
      "sha": "e11ddc0ffde88ae6f8e72217efbb31309094b91c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e11ddc0ffde88ae6f8e72217efbb31309094b91c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4659554b280bee894d117360f403d4073edd3bc9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4659554b280bee894d117360f403d4073edd3bc9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4659554b280bee894d117360f403d4073edd3bc9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4659554b280bee894d117360f403d4073edd3bc9/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f5060e56338f837f3bb218da50297938d493bacc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5060e56338f837f3bb218da50297938d493bacc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f5060e56338f837f3bb218da50297938d493bacc"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 32,
    "deletions": 8
  },
  "files": [
    {
      "sha": "767d48c3599264f68c13322c98edad16f3c7ede1",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4659554b280bee894d117360f403d4073edd3bc9/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4659554b280bee894d117360f403d4073edd3bc9/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=4659554b280bee894d117360f403d4073edd3bc9",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dedup.c (ctf_dedup): Pass on errors from ctf_dedup_hash_type.\n+\tCall ctf_dedup_fini properly on other errors.\n+\t(ctf_dedup_emit_type): Set the errno on dynhash insertion failure.\n+\t* ctf-link.c (ctf_link_deduplicating_per_cu): Close outputs beyond\n+\toutput 0 when asserting because >1 output is found.\n+\t(ctf_link_deduplicating): Likewise, when asserting because the\n+\tshared output is not the same as the passed-in fp.\n+\n 2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-impl.h (ctf_dict_t) <ctf_link_type_mapping>: No longer used"
    },
    {
      "sha": "ef8507a59f288bcf35ac889e33c0d1b411f8dca1",
      "filename": "libctf/ctf-dedup.c",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4659554b280bee894d117360f403d4073edd3bc9/libctf/ctf-dedup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4659554b280bee894d117360f403d4073edd3bc9/libctf/ctf-dedup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dedup.c?ref=4659554b280bee894d117360f403d4073edd3bc9",
      "patch": "@@ -1924,15 +1924,17 @@ ctf_dedup (ctf_dict_t *output, ctf_dict_t **inputs, uint32_t ninputs,\n \n       while ((id = ctf_type_next (inputs[i], &it, NULL, 1)) != CTF_ERR)\n \t{\n-\t  ctf_dedup_hash_type (output, inputs[i], inputs, parents,\n-\t\t\t       i, id, 0, 0, ctf_dedup_populate_mappings);\n+\t  if (ctf_dedup_hash_type (output, inputs[i], inputs,\n+\t\t\t\t   parents, i, id, 0, 0,\n+\t\t\t\t   ctf_dedup_populate_mappings) == NULL)\n+\t    goto err;\t\t\t\t/* errno is set for us.  */\n \t}\n       if (ctf_errno (inputs[i]) != ECTF_NEXT_END)\n \t{\n \t  ctf_set_errno (output, ctf_errno (inputs[i]));\n \t  ctf_err_warn (output, 0, 0, _(\"iteration failure \"\n \t\t\t\t\t\"computing type hashes\"));\n-\t  return -1;\n+\t  goto err;\n \t}\n     }\n \n@@ -1943,7 +1945,7 @@ ctf_dedup (ctf_dict_t *output, ctf_dict_t **inputs, uint32_t ninputs,\n \n   ctf_dprintf (\"Detecting type name ambiguity\\n\");\n   if (ctf_dedup_detect_name_ambiguity (output, inputs) < 0)\n-    return -1;\t\t\t\t\t/* errno is set for us.  */\n+      goto err;\t\t\t\t\t/* errno is set for us.  */\n \n   /* If the link mode is CTF_LINK_SHARE_DUPLICATED, we change any unconflicting\n      types whose output mapping references only one input dict into a\n@@ -1953,7 +1955,7 @@ ctf_dedup (ctf_dict_t *output, ctf_dict_t **inputs, uint32_t ninputs,\n     {\n       ctf_dprintf (\"Conflictifying unshared types\\n\");\n       if (ctf_dedup_conflictify_unshared (output, inputs) < 0)\n-\treturn -1;\t\t\t\t/* errno is set for us.  */\n+\tgoto err;\t\t\t\t/* errno is set for us.  */\n     }\n   return 0;\n \n@@ -2882,7 +2884,10 @@ ctf_dedup_emit_type (const char *hval, ctf_dict_t *output, ctf_dict_t **inputs,\n \t\t     id, out_id);\n \t/* Record the need to emit the members of this structure later.  */\n \tif (ctf_dynhash_insert (d->cd_emission_struct_members, id, out_id) < 0)\n-\t  goto err_target;\n+\t  {\n+\t    ctf_set_errno (target, errno);\n+\t    goto err_target;\n+\t  }\n \tbreak;\n       }\n     default:"
    },
    {
      "sha": "05733a0cb7d821e76cddcbeeb9aeb40b8e70b4a7",
      "filename": "libctf/ctf-link.c",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4659554b280bee894d117360f403d4073edd3bc9/libctf/ctf-link.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4659554b280bee894d117360f403d4073edd3bc9/libctf/ctf-link.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-link.c?ref=4659554b280bee894d117360f403d4073edd3bc9",
      "patch": "@@ -1134,7 +1134,12 @@ ctf_link_deduplicating_per_cu (ctf_dict_t *fp)\n \t  goto err_inputs;\n \t}\n       if (!ctf_assert (fp, noutputs == 1))\n-\tgoto err_inputs_outputs;\n+\t{\n+\t  size_t j;\n+\t  for (j = 1; j < noutputs; j++)\n+\t    ctf_dict_close (outputs[j]);\n+\t  goto err_inputs_outputs;\n+\t}\n \n       if (!(fp->ctf_link_flags & CTF_LINK_OMIT_VARIABLES_SECTION)\n \t  && ctf_link_deduplicating_variables (out, inputs, ninputs, 1) < 0)\n@@ -1263,7 +1268,11 @@ ctf_link_deduplicating (ctf_dict_t *fp)\n     }\n \n   if (!ctf_assert (fp, outputs[0] == fp))\n-    goto err;\n+    {\n+      for (i = 1; i < noutputs; i++)\n+\tctf_dict_close (outputs[i]);\n+      goto err;\n+    }\n \n   for (i = 0; i < noutputs; i++)\n     {"
    }
  ]
}