{
  "sha": "3b1450b38c644f99aa2e211747b428b9f8d15cca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2IxNDUwYjM4YzY0NGY5OWFhMmUyMTE3NDdiNDI4YjlmOGQxNWNjYQ==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-08-26T08:19:13Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-08-28T01:37:35Z"
    },
    "message": "RISC-V: Treat R_RISCV_CALL and R_RISCV_CALL_PLT as the same in check_relocs.\n\nIn fact, we can treate these two relocation as the same one in the\nriscv_elf_check_relocs.  I have heard that RISC-V lld had made this\nimprovement, and so had GNU AARCH64, they only need R_AARCH64_CALL26\nfor calls rather than two seperate relocations.\n\nBeside, the following PLT issue for RISC-V 32-bit glibc seems to be\nfixed by applying at least this patch.\n\n<https://sourceware.org/pipermail/libc-alpha/2020-August/117214.html>\n\nI have ran the toolchain regression, and everything seems fine for now.\n\n\tbfd/\n\t* elfnn-riscv.c (riscv_elf_check_relocs): Treat R_RISCV_CALL\n\tand R_RISCV_CALL_PLT as the same in the riscv_elf_check_relocs.\n\t(riscv_elf_relocate_section): Remove the R_RISCV_CALL for the\n\tunresolved reloc checks.\n\n\tld/\n\ttestsuite/ld-riscv-elf/lib-nopic-01a.s: Use R_RISCV_JAL rather\n\tthan R_RISCV_CALL.\n\ttestsuite/ld-riscv-elf/lib-nopic-01b.d: Likewise.\n\ttestsuite/ld-riscv-elf/lib-nopic-01b.s: Likewise.",
    "tree": {
      "sha": "a75075ca5c25bb1bbe1b2e3a5138f6cb0d8f3280",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a75075ca5c25bb1bbe1b2e3a5138f6cb0d8f3280"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3b1450b38c644f99aa2e211747b428b9f8d15cca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b1450b38c644f99aa2e211747b428b9f8d15cca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3b1450b38c644f99aa2e211747b428b9f8d15cca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b1450b38c644f99aa2e211747b428b9f8d15cca/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "f2f08254b11c2248dc3fd9440b2bad29c74357e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f2f08254b11c2248dc3fd9440b2bad29c74357e4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f2f08254b11c2248dc3fd9440b2bad29c74357e4"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 27,
    "deletions": 12
  },
  "files": [
    {
      "sha": "cbec1c5eecb6691713d1c43145747c4f429cc7bd",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b1450b38c644f99aa2e211747b428b9f8d15cca/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b1450b38c644f99aa2e211747b428b9f8d15cca/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=3b1450b38c644f99aa2e211747b428b9f8d15cca",
      "patch": "@@ -1,3 +1,10 @@\n+2020-08-28  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* elfnn-riscv.c (riscv_elf_check_relocs): Treat R_RISCV_CALL\n+\tand R_RISCV_CALL_PLT as the same in the riscv_elf_check_relocs.\n+\t(riscv_elf_relocate_section): Remove the R_RISCV_CALL for the\n+\tunresolved reloc checks.\n+\n 2020-08-27  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR 26356"
    },
    {
      "sha": "e6c5d1fba5ad74851c34b3ebf4c3d741a6b9b120",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b1450b38c644f99aa2e211747b428b9f8d15cca/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b1450b38c644f99aa2e211747b428b9f8d15cca/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=3b1450b38c644f99aa2e211747b428b9f8d15cca",
      "patch": "@@ -557,21 +557,23 @@ riscv_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t    return FALSE;\n \t  break;\n \n+\tcase R_RISCV_CALL:\n \tcase R_RISCV_CALL_PLT:\n-\t  /* This symbol requires a procedure linkage table entry.  We\n+\t  /* These symbol requires a procedure linkage table entry.  We\n \t     actually build the entry in adjust_dynamic_symbol,\n-\t     because this might be a case of linking PIC code without\n+\t     because these might be a case of linking PIC code without\n \t     linking in any dynamic objects, in which case we don't\n \t     need to generate a procedure linkage table after all.  */\n \n-\t  if (h != NULL)\n-\t    {\n-\t      h->needs_plt = 1;\n-\t      h->plt.refcount += 1;\n-\t    }\n+\t  /* If it is a local symbol, then we resolve it directly\n+\t     without creating a PLT entry.  */\n+\t  if (h == NULL)\n+\t    continue;\n+\n+\t  h->needs_plt = 1;\n+\t  h->plt.refcount += 1;\n \t  break;\n \n-\tcase R_RISCV_CALL:\n \tcase R_RISCV_JAL:\n \tcase R_RISCV_BRANCH:\n \tcase R_RISCV_RVC_BRANCH:\n@@ -2189,7 +2191,6 @@ riscv_elf_relocate_section (bfd *output_bfd,\n \t{\n \t  switch (r_type)\n \t    {\n-\t    case R_RISCV_CALL:\n \t    case R_RISCV_JAL:\n \t    case R_RISCV_RVC_JUMP:\n \t      if (asprintf (&msg_buf,"
    },
    {
      "sha": "787d7605f5de580b95eb993dd77a11d2e6a0009c",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=3b1450b38c644f99aa2e211747b428b9f8d15cca",
      "patch": "@@ -1,3 +1,10 @@\n+2020-08-28  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\ttestsuite/ld-riscv-elf/lib-nopic-01a.s: Use R_RISCV_JAL rather\n+\tthan R_RISCV_CALL.\n+\ttestsuite/ld-riscv-elf/lib-nopic-01b.d: Likewise.\n+\ttestsuite/ld-riscv-elf/lib-nopic-01b.s: Likewise.\n+\n 2020-08-27  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* emultempl/msp430.em: Remove unused variable \"buf\"."
    },
    {
      "sha": "632875d423af4f8753fb9ad336d1fcba145465b7",
      "filename": "ld/testsuite/ld-riscv-elf/lib-nopic-01a.s",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/testsuite/ld-riscv-elf/lib-nopic-01a.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/testsuite/ld-riscv-elf/lib-nopic-01a.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/lib-nopic-01a.s?ref=3b1450b38c644f99aa2e211747b428b9f8d15cca",
      "patch": "@@ -4,6 +4,6 @@\n \t.globl  func1\n \t.type   func1, @function\n func1:\n-\tcall    func2\n+\tjal\tfunc2\n \tjr      ra\n \t.size   func1, .-func1"
    },
    {
      "sha": "1c2c907fc308334627dab63dec998f9ceba31ac5",
      "filename": "ld/testsuite/ld-riscv-elf/lib-nopic-01b.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/testsuite/ld-riscv-elf/lib-nopic-01b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/testsuite/ld-riscv-elf/lib-nopic-01b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/lib-nopic-01b.d?ref=3b1450b38c644f99aa2e211747b428b9f8d15cca",
      "patch": "@@ -2,4 +2,4 @@\n #source: lib-nopic-01b.s\n #as:\n #ld: -shared tmpdir/lib-nopic-01a.so\n-#error: .*relocation R_RISCV_CALL against `func1' can not be used when making a shared object; recompile with -fPIC\n+#error: .*relocation R_RISCV_JAL against `func1' can not be used when making a shared object; recompile with -fPIC"
    },
    {
      "sha": "ea7b02988951d94406db961be7d7a034cef13de7",
      "filename": "ld/testsuite/ld-riscv-elf/lib-nopic-01b.s",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/testsuite/ld-riscv-elf/lib-nopic-01b.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b1450b38c644f99aa2e211747b428b9f8d15cca/ld/testsuite/ld-riscv-elf/lib-nopic-01b.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-riscv-elf/lib-nopic-01b.s?ref=3b1450b38c644f99aa2e211747b428b9f8d15cca",
      "patch": "@@ -4,6 +4,6 @@\n \t.globl  func2\n \t.type   func2, @function\n func2:\n-\tcall    func1\n+\tjal\tfunc1\n \tjr      ra\n \t.size   func2, .-func2"
    }
  ]
}