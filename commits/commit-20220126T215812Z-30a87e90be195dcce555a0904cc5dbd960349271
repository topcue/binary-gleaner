{
  "sha": "30a87e90be195dcce555a0904cc5dbd960349271",
  "node_id": "C_kwDOANOeidoAKDMwYTg3ZTkwYmUxOTVkY2NlNTU1YTA5MDRjYzVkYmQ5NjAzNDkyNzE",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-24T15:19:43Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-26T21:58:12Z"
    },
    "message": "gdb/python: add gdb.history_count function\n\nAdd a new function gdb.history_count to the Python api, this function\nreturns an integer, the number of items in GDB's value history.\n\nThis is useful if you want to pull items from the history by their\nabsolute number, for example, if you wanted to show a complete history\nlist.  Previously we could figure out how many items are in the\nhistory list by trying to fetch the items, and then catching the\nexception when the item is not available, but having this function\nseems nicer.",
    "tree": {
      "sha": "0d2c98c5a8416afabe6a39e141928b1fb15d0a56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0d2c98c5a8416afabe6a39e141928b1fb15d0a56"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/30a87e90be195dcce555a0904cc5dbd960349271",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30a87e90be195dcce555a0904cc5dbd960349271",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/30a87e90be195dcce555a0904cc5dbd960349271",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30a87e90be195dcce555a0904cc5dbd960349271/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "51d185a65f3679f887d456e20d22475ac8586938",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51d185a65f3679f887d456e20d22475ac8586938",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51d185a65f3679f887d456e20d22475ac8586938"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 43,
    "deletions": 0
  },
  "files": [
    {
      "sha": "e1900596ca74b9dfcbd428558af314b0ef0edcae",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -109,6 +109,9 @@ show debug lin-lwp\n      integer, the index of the new item in the history list, is\n      returned.\n \n+  ** New function gdb.history_count(), which returns the number of\n+     values in GDB's value history.\n+\n   ** New gdb.events.gdb_exiting event.  This event is called with a\n      gdb.GdbExitingEvent object which has the read-only attribute\n      'exit_code', which contains the value of the GDB exit code.  This"
    },
    {
      "sha": "f1d182729634d9fda821fa83c1eb452fdf858158",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -387,6 +387,11 @@ as its result, then placing the value into the history will allow the\n user convenient access to those values via CLI history facilities.\n @end defun\n \n+@defun gdb.history_count ()\n+Return an integer indicating the number of values in @value{GDBN}'s\n+value history (@pxref{Value History}).\n+@end defun\n+\n @findex gdb.convenience_variable\n @defun gdb.convenience_variable (name)\n Return the value of the convenience variable (@pxref{Convenience"
    },
    {
      "sha": "6401d96897f40d9b8e1477856bed3fcf8f8eea73",
      "filename": "gdb/python/py-value.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/python/py-value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/python/py-value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-value.c?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -2012,6 +2012,14 @@ gdbpy_add_history (PyObject *self, PyObject *args)\n   return nullptr;\n }\n \n+/* Return an integer, the number of items in GDB's history.  */\n+\n+PyObject *\n+gdbpy_history_count (PyObject *self, PyObject *args)\n+{\n+  return gdb_py_object_from_ulongest (value_history_count ()).release ();\n+}\n+\n /* Return the value of a convenience variable.  */\n PyObject *\n gdbpy_convenience_variable (PyObject *self, PyObject *args)"
    },
    {
      "sha": "5e15f62f74578b6509f2716349f8fc657349695e",
      "filename": "gdb/python/python-internal.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/python/python-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/python/python-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python-internal.h?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -412,6 +412,7 @@ extern enum ext_lang_rc gdbpy_get_matching_xmethod_workers\n \f\n PyObject *gdbpy_history (PyObject *self, PyObject *args);\n PyObject *gdbpy_add_history (PyObject *self, PyObject *args);\n+extern PyObject *gdbpy_history_count (PyObject *self, PyObject *args);\n PyObject *gdbpy_convenience_variable (PyObject *self, PyObject *args);\n PyObject *gdbpy_set_convenience_variable (PyObject *self, PyObject *args);\n PyObject *gdbpy_breakpoints (PyObject *, PyObject *);"
    },
    {
      "sha": "2c8081e1b07e38150782a930bc695480c161332f",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -2212,6 +2212,8 @@ PyMethodDef python_GdbMethods[] =\n     \"Get a value from history\" },\n   { \"add_history\", gdbpy_add_history, METH_VARARGS,\n     \"Add a value to the value history list\" },\n+  { \"history_count\", gdbpy_history_count, METH_NOARGS,\n+    \"Return an integer, the number of values in GDB's value history\" },\n   { \"execute\", (PyCFunction) execute_gdb_command, METH_VARARGS | METH_KEYWORDS,\n     \"execute (command [, from_tty] [, to_string]) -> [String]\\n\\\n Evaluate command, a string, as a gdb CLI command.  Optionally returns\\n\\"
    },
    {
      "sha": "60039c9373f72741bd45f5ef5fb4245150a108da",
      "filename": "gdb/testsuite/gdb.python/py-value.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/testsuite/gdb.python/py-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/testsuite/gdb.python/py-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-value.exp?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -647,6 +647,17 @@ proc test_value_sub_classes {} {\n \t\"check printing of MyValue when initiaized with a type\"\n }\n \n+# Test the history count.  This must be the first thing called after\n+# starting GDB as it depends on there being nothing in the value\n+# history.\n+proc test_history_count {} {\n+    for { set i 0 } { $i < 5 } { incr i } {\n+\tgdb_test \"python print('history count is %d' % gdb.history_count())\" \\\n+\t    \"history count is $i\" \"history count is $i\"\n+\tgdb_test \"print $i\" \" = $i\"\n+    }\n+}\n+\n # Build C version of executable.  C++ is built later.\n if { [build_inferior \"${binfile}\" \"c\"] < 0 } {\n     return -1\n@@ -658,6 +669,7 @@ clean_restart ${binfile}\n # Skip all tests if Python scripting is not enabled.\n if { [skip_python_tests] } { continue }\n \n+test_history_count\n test_value_creation\n test_value_reinit\n test_value_numeric_ops"
    },
    {
      "sha": "7bd9891b3e97a7c101d59433d12853dd43ede900",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -1909,6 +1909,14 @@ access_value_history (int num)\n   return value_copy (value_history[absnum].get ());\n }\n \n+/* See value.h.  */\n+\n+ULONGEST\n+value_history_count ()\n+{\n+  return value_history.size ();\n+}\n+\n static void\n show_values (const char *num_exp, int from_tty)\n {"
    },
    {
      "sha": "0de4b5f3aefcd3273238c171e435cfe7103195c6",
      "filename": "gdb/value.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/30a87e90be195dcce555a0904cc5dbd960349271/gdb/value.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/30a87e90be195dcce555a0904cc5dbd960349271/gdb/value.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.h?ref=30a87e90be195dcce555a0904cc5dbd960349271",
      "patch": "@@ -948,6 +948,10 @@ extern void binop_promote (const struct language_defn *language,\n \n extern struct value *access_value_history (int num);\n \n+/* Return the number of items in the value history.  */\n+\n+extern ULONGEST value_history_count ();\n+\n extern struct value *value_of_internalvar (struct gdbarch *gdbarch,\n \t\t\t\t\t   struct internalvar *var);\n "
    }
  ]
}