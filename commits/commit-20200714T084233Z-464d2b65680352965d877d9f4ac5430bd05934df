{
  "sha": "464d2b65680352965d877d9f4ac5430bd05934df",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDY0ZDJiNjU2ODAzNTI5NjVkODc3ZDlmNGFjNTQzMGJkMDU5MzRkZg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:42:33Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:42:33Z"
    },
    "message": "x86: drop Rdq, Rd, and MaskR\n\nRdq, Rd, and MaskR can be replaced by Edq, Ed / Rm, and MaskE\nrespectively, as OP_R() doesn't enforce ModRM.mod == 3, and hence where\nMOD matters but hasn't been decoded yet it needs to be anyway. (The case\nof converting to Rm is temporary until a subsequent change.)",
    "tree": {
      "sha": "2ed65cc603a84764dc815f9a4a221c8eea1f2b25",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2ed65cc603a84764dc815f9a4a221c8eea1f2b25"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/464d2b65680352965d877d9f4ac5430bd05934df",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/464d2b65680352965d877d9f4ac5430bd05934df",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/464d2b65680352965d877d9f4ac5430bd05934df",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/464d2b65680352965d877d9f4ac5430bd05934df/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "035e7389dd36526df823b28e7f9fb1dea16cae2e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/035e7389dd36526df823b28e7f9fb1dea16cae2e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/035e7389dd36526df823b28e7f9fb1dea16cae2e"
    }
  ],
  "stats": {
    "total": 185,
    "additions": 122,
    "deletions": 63
  },
  "files": [
    {
      "sha": "73b31e5713446d774859c3b61d9d3bddc022fea0",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=464d2b65680352965d877d9f4ac5430bd05934df",
      "patch": "@@ -1,3 +1,23 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (Rd, Rdq, MaskR): Delete.\n+\t(MOD_EVEX_0F3828_P_1, MOD_EVEX_0F382A_P_1_W_1,\n+\tMOD_EVEX_0F3838_P_1, MOD_EVEX_0F383A_P_1_W_0,\n+\tMOD_EVEX_0F387A_W_0, MOD_EVEX_0F387B_W_0,\n+\tMOD_EVEX_0F387C): New enumerators.\n+\t(reg_table): Use Edq for rdssp.\n+\t(prefix_table): Use Edq for incssp.\n+\t(mod_table): Use Rm for move to/from %tr. Use MaskE for kand*,\n+\tkandn*, knot*, kor*, kxnor*, kxor*, kadd*, kunpck*, kortest*,\n+\tktest*, and kshift*. Use Edq / MaskE for kmov*.\n+\t* i386-dis-evex.h: Reference mod_table[] for opcode 0F387C.\n+\t* i386-dis-evex-mod.h: New entries for opcodes 0F3828, 0F382A,\n+\t0F3838, 0F383A, 0F387A, 0F387B, and 0F387C.\n+\t* i386-dis-evex-prefix.h: Reference mod_table[] for opcodes\n+\t0F3828_P_1 and 0F3838_P_1.\n+\t* i386-dis-evex-w.h: Reference mod_table[] for opcodes\n+\t0F382A_P_1, 0F383A_P_1, 0F387A, and 0F387B.\n+\n 2020-07-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (PREFIX_0F01_REG_7_MOD_3_RM_3,"
    },
    {
      "sha": "4259368a04de85513e2ca9dd62117d13b53e68fd",
      "filename": "opcodes/i386-dis-evex-mod.h",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex-mod.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex-mod.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-mod.h?ref=464d2b65680352965d877d9f4ac5430bd05934df",
      "patch": "@@ -44,6 +44,26 @@\n   {\n     { EVEX_LEN_TABLE (EVEX_LEN_0F381B_W_1_M_0) },\n   },\n+  /* MOD_EVEX_0F3828_P_1 */\n+  {\n+    { Bad_Opcode },\n+    { \"vpmovm2%BW\",\t{ XM, MaskE }, 0 },\n+  },\n+  /* MOD_EVEX_0F382A_P_1_W_1 */\n+  {\n+    { Bad_Opcode },\n+    { \"vpbroadcastmb2q\",\t{ XM, MaskE }, 0 },\n+  },\n+  /* MOD_EVEX_0F3838_P_1 */\n+  {\n+    { Bad_Opcode },\n+    { \"vpmovm2%DQ\",\t{ XM, MaskE }, 0 },\n+  },\n+  /* MOD_EVEX_0F383A_P_1_W_0 */\n+  {\n+    { Bad_Opcode },\n+    { \"vpbroadcastmw2d\",\t{ XM, MaskE }, 0 },\n+  },\n   /* MOD_EVEX_0F385A_W_0 */\n   {\n     { EVEX_LEN_TABLE (EVEX_LEN_0F385A_W_0_M_0) },\n@@ -60,6 +80,21 @@\n   {\n     { EVEX_LEN_TABLE (EVEX_LEN_0F385B_W_1_M_0) },\n   },\n+  /* MOD_EVEX_0F387A_W_0 */\n+  {\n+    { Bad_Opcode },\n+    { \"vpbroadcastb\",\t{ XM, Ed }, PREFIX_DATA },\n+  },\n+  /* MOD_EVEX_0F387B_W_0 */\n+  {\n+    { Bad_Opcode },\n+    { \"vpbroadcastw\",\t{ XM, Ed }, PREFIX_DATA },\n+  },\n+  /* MOD_EVEX_0F387C */\n+  {\n+    { Bad_Opcode },\n+    { \"vpbroadcastK\",\t{ XM, Edq }, PREFIX_DATA },\n+  },\n   {\n     /* MOD_EVEX_0F38C6_REG_1 */\n     { EVEX_LEN_TABLE (EVEX_LEN_0F38C6_R_1_M_0) },"
    },
    {
      "sha": "fa54400389d6280d6992466be3f352f8178a38e7",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=464d2b65680352965d877d9f4ac5430bd05934df",
      "patch": "@@ -250,7 +250,7 @@\n   /* PREFIX_EVEX_0F3828 */\n   {\n     { Bad_Opcode },\n-    { \"vpmovm2%BW\",\t{ XM, MaskR }, 0 },\n+    { MOD_TABLE (MOD_EVEX_0F3828_P_1) },\n     { VEX_W_TABLE (EVEX_W_0F3828_P_2) },\n   },\n   /* PREFIX_EVEX_0F3829 */\n@@ -304,7 +304,7 @@\n   /* PREFIX_EVEX_0F3838 */\n   {\n     { Bad_Opcode },\n-    { \"vpmovm2%DQ\",\t{ XM, MaskR }, 0 },\n+    { MOD_TABLE (MOD_EVEX_0F3838_P_1) },\n     { \"vpminsb\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3839 */"
    },
    {
      "sha": "a046d11f88125195f77ec80fb495afec66126822",
      "filename": "opcodes/i386-dis-evex-w.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex-w.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex-w.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-w.h?ref=464d2b65680352965d877d9f4ac5430bd05934df",
      "patch": "@@ -455,7 +455,7 @@\n   /* EVEX_W_0F382A_P_1 */\n   {\n     { Bad_Opcode },\n-    { \"vpbroadcastmb2q\",\t{ XM, MaskR }, 0 },\n+    { MOD_TABLE (MOD_EVEX_0F382A_P_1_W_1) },\n   },\n   /* EVEX_W_0F382A_P_2 */\n   {\n@@ -500,7 +500,7 @@\n   },\n   /* EVEX_W_0F383A_P_1 */\n   {\n-    { \"vpbroadcastmw2d\",\t{ XM, MaskR }, 0 },\n+    { MOD_TABLE (MOD_EVEX_0F383A_P_1_W_0) },\n   },\n   /* EVEX_W_0F3852_P_1 */\n   {\n@@ -544,11 +544,11 @@\n   },\n   /* EVEX_W_0F387A */\n   {\n-    { \"vpbroadcastb\",\t{ XM, Rd }, PREFIX_DATA },\n+    { MOD_TABLE (MOD_EVEX_0F387A_W_0) },\n   },\n   /* EVEX_W_0F387B */\n   {\n-    { \"vpbroadcastw\",\t{ XM, Rd }, PREFIX_DATA },\n+    { MOD_TABLE (MOD_EVEX_0F387B_W_0) },\n   },\n   /* EVEX_W_0F3883 */\n   {"
    },
    {
      "sha": "c93394210ccf5d166fe50393dd15ea8d176fc974",
      "filename": "opcodes/i386-dis-evex.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis-evex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex.h?ref=464d2b65680352965d877d9f4ac5430bd05934df",
      "patch": "@@ -432,7 +432,7 @@ static const struct dis386 evex_table[][256] = {\n     { VEX_W_TABLE (VEX_W_0F3879) },\n     { VEX_W_TABLE (EVEX_W_0F387A) },\n     { VEX_W_TABLE (EVEX_W_0F387B) },\n-    { \"vpbroadcastK\",\t{ XM, Rdq }, PREFIX_DATA },\n+    { MOD_TABLE (MOD_EVEX_0F387C) },\n     { \"vpermt2%BW\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { \"vpermt2%DQ\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { \"vpermt2p%XW\",\t{ XM, Vex, EXx }, PREFIX_DATA },"
    },
    {
      "sha": "35399bc6d448146c243f215acdaf8e23d29cb1ce",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 60,
      "deletions": 56,
      "changes": 116,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/464d2b65680352965d877d9f4ac5430bd05934df/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=464d2b65680352965d877d9f4ac5430bd05934df",
      "patch": "@@ -274,8 +274,6 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define Gm { OP_G, m_mode }\n #define Gva { OP_G, va_mode }\n #define Gw { OP_G, w_mode }\n-#define Rd { OP_R, d_mode }\n-#define Rdq { OP_R, dq_mode }\n #define Rm { OP_R, m_mode }\n #define Ib { OP_I, b_mode }\n #define sIb { OP_sI, b_mode }\t/* sign extened byte */\n@@ -412,7 +410,6 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define MaskG { OP_G, mask_mode }\n #define MaskE { OP_E, mask_mode }\n #define MaskBDE { OP_E, mask_bd_mode }\n-#define MaskR { OP_R, mask_mode }\n #define MaskVex { OP_VEX, mask_mode }\n \n #define MVexVSIBDWpX { OP_M, vex_vsib_d_w_dq_mode }\n@@ -912,10 +909,17 @@ enum\n   MOD_EVEX_0F381A_W_1,\n   MOD_EVEX_0F381B_W_0,\n   MOD_EVEX_0F381B_W_1,\n+  MOD_EVEX_0F3828_P_1,\n+  MOD_EVEX_0F382A_P_1_W_1,\n+  MOD_EVEX_0F3838_P_1,\n+  MOD_EVEX_0F383A_P_1_W_0,\n   MOD_EVEX_0F385A_W_0,\n   MOD_EVEX_0F385A_W_1,\n   MOD_EVEX_0F385B_W_0,\n   MOD_EVEX_0F385B_W_1,\n+  MOD_EVEX_0F387A_W_0,\n+  MOD_EVEX_0F387B_W_0,\n+  MOD_EVEX_0F387C,\n   MOD_EVEX_0F38C6_REG_1,\n   MOD_EVEX_0F38C6_REG_2,\n   MOD_EVEX_0F38C6_REG_5,\n@@ -2884,7 +2888,7 @@ static const struct dis386 reg_table[][8] = {\n   /* REG_0F1E_P_1_MOD_3 */\n   {\n     { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"rdsspK\",\t\t{ Rdq }, PREFIX_OPCODE },\n+    { \"rdsspK\",\t\t{ Edq }, PREFIX_OPCODE },\n     { \"nopQ\",\t\t{ Ev }, 0 },\n     { \"nopQ\",\t\t{ Ev }, 0 },\n     { \"nopQ\",\t\t{ Ev }, 0 },\n@@ -3425,7 +3429,7 @@ static const struct dis386 prefix_table[][4] = {\n   /* PREFIX_0FAE_REG_5_MOD_3 */\n   {\n     { \"lfence\",\t\t{ Skip_MODRM }, 0 },\n-    { \"incsspK\",\t{ Rdq }, PREFIX_OPCODE },\n+    { \"incsspK\",\t{ Edq }, PREFIX_OPCODE },\n   },\n \n   /* PREFIX_0FAE_REG_6_MOD_0 */\n@@ -7990,12 +7994,12 @@ static const struct dis386 mod_table[][2] = {\n   {\n     /* MOD_0F24 */\n     { Bad_Opcode },\n-    { \"movL\",\t\t{ Rd, Td }, 0 },\n+    { \"movL\",\t\t{ Rm, Td }, 0 },\n   },\n   {\n     /* MOD_0F26 */\n     { Bad_Opcode },\n-    { \"movL\",\t\t{ Td, Rd }, 0 },\n+    { \"movL\",\t\t{ Td, Rm }, 0 },\n   },\n   {\n     /* MOD_0F2B_PREFIX_0 */\n@@ -8286,157 +8290,157 @@ static const struct dis386 mod_table[][2] = {\n   {\n     /* MOD_VEX_W_0_0F41_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandw\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandw\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F41_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandq\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandq\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F41_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandb\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandb\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F41_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandd\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandd\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F42_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandnw\",         { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandnw\",         { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F42_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandnq\",         { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandnq\",         { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F42_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandnb\",         { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandnb\",         { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F42_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kandnd\",         { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kandnd\",         { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F44_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"knotw\",          { MaskG, MaskR }, 0 },\n+    { \"knotw\",          { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F44_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"knotq\",          { MaskG, MaskR }, 0 },\n+    { \"knotq\",          { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F44_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"knotb\",          { MaskG, MaskR }, 0 },\n+    { \"knotb\",          { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F44_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"knotd\",          { MaskG, MaskR }, 0 },\n+    { \"knotd\",          { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F45_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"korw\",       { MaskG, MaskVex, MaskR }, 0 },\n+    { \"korw\",       { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F45_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"korq\",       { MaskG, MaskVex, MaskR }, 0 },\n+    { \"korq\",       { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F45_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"korb\",       { MaskG, MaskVex, MaskR }, 0 },\n+    { \"korb\",       { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F45_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kord\",       { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kord\",       { MaskG, MaskVex, MaskE }, 0 },\n   },\n  {\n     /* MOD_VEX_W_0_0F46_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxnorw\",     { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxnorw\",     { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F46_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxnorq\",     { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxnorq\",     { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F46_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxnorb\",     { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxnorb\",     { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F46_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxnord\",     { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxnord\",     { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F47_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxorw\",      { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxorw\",      { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F47_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxorq\",      { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxorq\",      { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F47_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxorb\",      { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxorb\",      { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F47_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kxord\",      { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kxord\",      { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F4A_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kaddw\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kaddw\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F4A_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kaddq\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kaddq\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F4A_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kaddb\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kaddb\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F4A_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kaddd\",          { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kaddd\",          { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F4B_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kunpckwd\",   { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kunpckwd\",   { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F4B_P_0_LEN_1 */\n     { Bad_Opcode },\n-    { \"kunpckdq\",   { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kunpckdq\",   { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F4B_P_2_LEN_1 */\n     { Bad_Opcode },\n-    { \"kunpckbw\",   { MaskG, MaskVex, MaskR }, 0 },\n+    { \"kunpckbw\",   { MaskG, MaskVex, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_0F50 */\n@@ -8516,72 +8520,72 @@ static const struct dis386 mod_table[][2] = {\n   {\n     /* MOD_VEX_W_0_0F92_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"kmovw\",\t\t{ MaskG, Rdq }, 0 },\n+    { \"kmovw\",\t\t{ MaskG, Edq }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F92_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"kmovb\",\t\t{ MaskG, Rdq }, 0 },\n+    { \"kmovb\",\t\t{ MaskG, Edq }, 0 },\n   },\n   {\n     /* MOD_VEX_0F92_P_3_LEN_0 */\n     { Bad_Opcode },\n-    { \"kmovK\",\t\t{ MaskG, Rdq }, 0 },\n+    { \"kmovK\",\t\t{ MaskG, Edq }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F93_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"kmovw\",\t\t{ Gdq, MaskR }, 0 },\n+    { \"kmovw\",\t\t{ Gdq, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F93_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"kmovb\",\t\t{ Gdq, MaskR }, 0 },\n+    { \"kmovb\",\t\t{ Gdq, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_0F93_P_3_LEN_0 */\n     { Bad_Opcode },\n-    { \"kmovK\",\t\t{ Gdq, MaskR }, 0 },\n+    { \"kmovK\",\t\t{ Gdq, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F98_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"kortestw\", { MaskG, MaskR }, 0 },\n+    { \"kortestw\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F98_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"kortestq\", { MaskG, MaskR }, 0 },\n+    { \"kortestq\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F98_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"kortestb\", { MaskG, MaskR }, 0 },\n+    { \"kortestb\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F98_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"kortestd\", { MaskG, MaskR }, 0 },\n+    { \"kortestd\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F99_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"ktestw\", { MaskG, MaskR }, 0 },\n+    { \"ktestw\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F99_P_0_LEN_0 */\n     { Bad_Opcode },\n-    { \"ktestq\", { MaskG, MaskR }, 0 },\n+    { \"ktestq\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F99_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"ktestb\", { MaskG, MaskR }, 0 },\n+    { \"ktestb\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_W_1_0F99_P_2_LEN_0 */\n     { Bad_Opcode },\n-    { \"ktestd\", { MaskG, MaskR }, 0 },\n+    { \"ktestd\", { MaskG, MaskE }, 0 },\n   },\n   {\n     /* MOD_VEX_0FAE_REG_2 */\n@@ -8643,22 +8647,22 @@ static const struct dis386 mod_table[][2] = {\n   {\n     /* MOD_VEX_0F3A30_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftr%BW\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftr%BW\",\t{ MaskG, MaskE, Ib }, PREFIX_DATA },\n   },\n   {\n     /* MOD_VEX_0F3A31_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftr%DQ\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftr%DQ\",\t{ MaskG, MaskE, Ib }, PREFIX_DATA },\n   },\n   {\n     /* MOD_VEX_0F3A32_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftl%BW\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftl%BW\",\t{ MaskG, MaskE, Ib }, PREFIX_DATA },\n   },\n   {\n     /* MOD_VEX_0F3A33_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftl%DQ\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftl%DQ\",\t{ MaskG, MaskE, Ib }, PREFIX_DATA },\n   },\n   {\n     /* MOD_VEX_0FXOP_09_12 */"
    }
  ]
}