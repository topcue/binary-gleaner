{
  "sha": "bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmRhMTNjZGNmMGRiNGQ5Y2VlNjQ4YmZhMGJmYzdmMWE0NDE1ZDJhNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-01T22:06:37Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-12T22:50:50Z"
    },
    "message": "Make the objfile constructor private\n\nThis changes the objfile constructor to be private, changing the\ncallers to use a factory method.  This isn't perhaps strictly needed\nfor the goal of this series -- changing the container model of\nobjfiles -- but is a nice symmetry.\n\ngdb/ChangeLog\n2019-12-12  Tom Tromey  <tom@tromey.com>\n\n\t* symfile.c (symbol_file_add_with_addrs): Use objfile::make.\n\t* objfiles.h (struct objfile): Make constructor private.\n\t<make>: New static method.\n\t* jit.c (jit_object_close_impl): Update.\n\nChange-Id: I42e07bc80a88cf3322ace94ffe869ae5788bcb29",
    "tree": {
      "sha": "a11e4629bd2cfa2b93099d1348b2e49697559fa2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a11e4629bd2cfa2b93099d1348b2e49697559fa2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ac0ab1842de0e4522248ff9805c5c4e3267c8ae7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac0ab1842de0e4522248ff9805c5c4e3267c8ae7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ac0ab1842de0e4522248ff9805c5c4e3267c8ae7"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 22,
    "deletions": 3
  },
  "files": [
    {
      "sha": "393d43ef3169f1e738a6a53fd7dd06b6e8011bb8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-12  Tom Tromey  <tom@tromey.com>\n+\n+\t* symfile.c (symbol_file_add_with_addrs): Use objfile::make.\n+\t* objfiles.h (struct objfile): Make constructor private.\n+\t<make>: New static method.\n+\t* jit.c (jit_object_close_impl): Update.\n+\n 2019-12-12  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* jit.c (jit_reader_try_read_symtab): Replace xmalloc/xfree with"
    },
    {
      "sha": "2018e2c6f0d2826354817b15f085735add479e81",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
      "patch": "@@ -786,8 +786,8 @@ jit_object_close_impl (struct gdb_symbol_callbacks *cb,\n \n   priv_data = (jit_dbg_reader_data *) cb->priv_data;\n \n-  objfile = new struct objfile (NULL, \"<< JIT compiled code >>\",\n-\t\t\t\tOBJF_NOT_FILENAME);\n+  objfile = objfile::make (nullptr, \"<< JIT compiled code >>\",\n+\t\t\t   OBJF_NOT_FILENAME);\n   objfile->per_bfd->gdbarch = target_gdbarch ();\n \n   j = NULL;"
    },
    {
      "sha": "b5c04eb7cb95247b9aeda332dc6a0e7f12d36754",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
      "patch": "@@ -394,7 +394,19 @@ class separate_debug_range\n \n struct objfile\n {\n+private:\n+\n+  /* The only way to create an objfile is to call objfile::make.  */\n   objfile (bfd *, const char *, objfile_flags);\n+\n+public:\n+\n+  /* Create an objfile.  */\n+  static objfile *make (bfd *bfd_, const char *name_, objfile_flags flags_)\n+  {\n+    return new objfile (bfd_, name_, flags_);\n+  }\n+\n   ~objfile ();\n \n   DISABLE_COPY_AND_ASSIGN (objfile);"
    },
    {
      "sha": "eef27a8418ebaf1705865827104a44cafb3d9957",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=bda13cdcf0db4d9cee648bfa0bfc7f1a4415d2a7",
      "patch": "@@ -1093,7 +1093,7 @@ symbol_file_add_with_addrs (bfd *abfd, const char *name,\n \n   if (mainline)\n     flags |= OBJF_MAINLINE;\n-  objfile = new struct objfile (abfd, name, flags);\n+  objfile = objfile::make (abfd, name, flags);\n \n   if (parent)\n     add_separate_debug_objfile (objfile, parent);"
    }
  ]
}