{
  "sha": "b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjEzYjFiYzA1NDM1ZDJiOGIyZjFhMGY0OGViYTEyN2E3Yzk5ZmJiNA==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-08T09:02:08Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-08T09:02:08Z"
    },
    "message": "x86: re-work operand swapping for FMA4 and 4-operand XOP insns\n\nThere's no need for custom operand handling here, except for the VEX.W\ncontrolled operand swapping. The latter can be easily integrated into\nOP_REG_VexI4().",
    "tree": {
      "sha": "5d4d7e1dcd44b2e72b6139b52db8cb89a5475b91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5d4d7e1dcd44b2e72b6139b52db8cb89a5475b91"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "babcb2ea89cf9b533bd029266d6ff92e1df61fea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/babcb2ea89cf9b533bd029266d6ff92e1df61fea",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/babcb2ea89cf9b533bd029266d6ff92e1df61fea"
    }
  ],
  "stats": {
    "total": 114,
    "additions": 49,
    "deletions": 65
  },
  "files": [
    {
      "sha": "5b6949cc2050b868e1dfeeef6e89443fd4f265e4",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (OP_EX_VexW, EXVexW, EXdVexW, EXqVexW): Delete.\n+\t(prefix_table, vex_len_table): Replace operands for FMA4 insns.\n+\t(xop_table): Replace operands of 4-operand insns.\n+\t(OP_REG_VexI4): Move VEX.W based operand swaping here.\n+\n 2020-07-07  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* arc-opc.c (insert_rbd): New function."
    },
    {
      "sha": "eb1157b6ba2eecc2eb1e6f91b8e2abdc3049e8a6",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 42,
      "deletions": 65,
      "changes": 107,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=b13b1bc05435d2b8b2f1a0f48eba127a7c99fbb4",
      "patch": "@@ -89,7 +89,6 @@ static void OP_XS (int, int);\n static void OP_M (int, int);\n static void OP_VEX (int, int);\n static void OP_EX_Vex (int, int);\n-static void OP_EX_VexW (int, int);\n static void OP_EX_VexImmW (int, int);\n static void OP_XMM_Vex (int, int);\n static void OP_XMM_VexW (int, int);\n@@ -423,9 +422,6 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define VexGdq { OP_VEX, dq_mode }\n #define EXdVexScalarS { OP_EX_Vex, d_scalar_swap_mode }\n #define EXqVexScalarS { OP_EX_Vex, q_scalar_swap_mode }\n-#define EXVexW { OP_EX_VexW, x_mode }\n-#define EXdVexW { OP_EX_VexW, d_mode }\n-#define EXqVexW { OP_EX_VexW, q_mode }\n #define EXVexImmW { OP_EX_VexImmW, x_mode }\n #define XMVexScalar { OP_XMM_Vex, scalar_mode }\n #define XMVexW { OP_XMM_VexW, 0 }\n@@ -6452,28 +6448,28 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmaddsubps\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmaddsubps\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A5D */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmaddsubpd\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmaddsubpd\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A5E */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmsubaddps\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmsubaddps\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A5F */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmsubaddpd\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmsubaddpd\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A60 */\n@@ -6509,14 +6505,14 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmaddps\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmaddps\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A69 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmaddpd\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmaddpd\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A6A */\n@@ -6537,14 +6533,14 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmsubps\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmsubps\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A6D */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfmsubpd\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfmsubpd\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A6E */\n@@ -6565,14 +6561,14 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmaddps\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfnmaddps\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A79 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmaddpd\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfnmaddpd\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A7A */\n@@ -6593,15 +6589,15 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmsubps\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfnmsubps\", { XM, Vex, EXx, XMVexI4 }, 0 },\n     { Bad_Opcode },\n   },\n \n   /* PREFIX_VEX_0F3A7D */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfnmsubpd\", { XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vfnmsubpd\", { XM, Vex, EXx, XMVexI4 }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3A7E */\n@@ -7571,44 +7567,44 @@ static const struct dis386 xop_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmacssww\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n-    { \"vpmacsswd\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n-    { \"vpmacssdql\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vpmacssww\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n+    { \"vpmacsswd\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n+    { \"vpmacssdql\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n     /* 88 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmacssdd\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n-    { \"vpmacssdqh\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vpmacssdd\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n+    { \"vpmacssdqh\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n     /* 90 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmacsww\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n-    { \"vpmacswd\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n-    { \"vpmacsdql\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vpmacsww\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n+    { \"vpmacswd\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n+    { \"vpmacsdql\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n     /* 98 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmacsdd\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n-    { \"vpmacsdqh\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vpmacsdd\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n+    { \"vpmacsdqh\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n     /* a0 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpcmov\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n-    { \"vpperm\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vpcmov\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n+    { \"vpperm\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmadcsswd\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vpmadcsswd\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n     { Bad_Opcode },\n     /* a8 */\n     { Bad_Opcode },\n@@ -7626,7 +7622,7 @@ static const struct dis386 xop_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmadcswd\", \t{ XMVexW, Vex, EXVexW, EXVexW }, 0 },\n+    { \"vpmadcswd\", \t{ XM, Vex, EXx, XMVexI4 }, 0 },\n     { Bad_Opcode },\n     /* b8 */\n     { Bad_Opcode },\n@@ -9633,42 +9629,42 @@ static const struct dis386 vex_len_table[][2] = {\n \n   /* VEX_LEN_0F3A6A_P_2 */\n   {\n-    { \"vfmaddss\",\t{ XMVexW, Vex128, EXdVexW, EXdVexW }, 0 },\n+    { \"vfmaddss\",\t{ XMScalar, VexScalar, EXxmm_md, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3A6B_P_2 */\n   {\n-    { \"vfmaddsd\",\t{ XMVexW, Vex128, EXqVexW, EXqVexW }, 0 },\n+    { \"vfmaddsd\",\t{ XMScalar, VexScalar, EXxmm_mq, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3A6E_P_2 */\n   {\n-    { \"vfmsubss\",\t{ XMVexW, Vex128, EXdVexW, EXdVexW }, 0 },\n+    { \"vfmsubss\",\t{ XMScalar, VexScalar, EXxmm_md, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3A6F_P_2 */\n   {\n-    { \"vfmsubsd\",\t{ XMVexW, Vex128, EXqVexW, EXqVexW }, 0 },\n+    { \"vfmsubsd\",\t{ XMScalar, VexScalar, EXxmm_mq, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3A7A_P_2 */\n   {\n-    { \"vfnmaddss\",\t{ XMVexW, Vex128, EXdVexW, EXdVexW }, 0 },\n+    { \"vfnmaddss\",\t{ XMScalar, VexScalar, EXxmm_md, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3A7B_P_2 */\n   {\n-    { \"vfnmaddsd\",\t{ XMVexW, Vex128, EXqVexW, EXqVexW }, 0 },\n+    { \"vfnmaddsd\",\t{ XMScalar, VexScalar, EXxmm_mq, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3A7E_P_2 */\n   {\n-    { \"vfnmsubss\",\t{ XMVexW, Vex128, EXdVexW, EXdVexW }, 0 },\n+    { \"vfnmsubss\",\t{ XMScalar, VexScalar, EXxmm_md, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3A7F_P_2 */\n   {\n-    { \"vfnmsubsd\",\t{ XMVexW, Vex128, EXqVexW, EXqVexW }, 0 },\n+    { \"vfnmsubsd\",\t{ XMScalar, VexScalar, EXxmm_mq, XMVexI4 }, 0 },\n   },\n \n   /* VEX_LEN_0F3ADF_P_2 */\n@@ -16100,33 +16096,6 @@ OP_Vex_2src_2 (int bytemode, int sizeflag)\n     }\n }\n \n-static void\n-OP_EX_VexW (int bytemode, int sizeflag)\n-{\n-  int reg = -1;\n-\n-  if (!vex_w_done)\n-    {\n-      /* Skip mod/rm byte.  */\n-      MODRM_CHECK;\n-      codep++;\n-\n-      if (vex.w)\n-\treg = get_vex_imm8 (sizeflag, 0) >> 4;\n-    }\n-  else\n-    {\n-      if (!vex.w)\n-\treg = get_vex_imm8 (sizeflag, 1) >> 4;\n-    }\n-\n-  OP_EX_VexReg (bytemode, sizeflag, reg);\n-\n-  if (vex_w_done)\n-    codep++;\n-  vex_w_done = 1;\n-}\n-\n static void\n OP_REG_VexI4 (int bytemode, int sizeflag ATTRIBUTE_UNUSED)\n {\n@@ -16155,6 +16124,14 @@ OP_REG_VexI4 (int bytemode, int sizeflag ATTRIBUTE_UNUSED)\n       abort ();\n     }\n   oappend (names[reg]);\n+\n+  if (vex.w)\n+    {\n+      /* Swap 3rd and 4th operands.  */\n+      strcpy (scratchbuf, op_out[3]);\n+      strcpy (op_out[3], op_out[2]);\n+      strcpy (op_out[2], scratchbuf);\n+    }\n }\n \n static void"
    }
  ]
}