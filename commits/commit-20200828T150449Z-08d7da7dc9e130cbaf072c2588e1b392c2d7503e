{
  "sha": "08d7da7dc9e130cbaf072c2588e1b392c2d7503e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDhkN2RhN2RjOWUxMzBjYmFmMDcyYzI1ODhlMWIzOTJjMmQ3NTAzZQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-28T15:04:49Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-28T15:04:49Z"
    },
    "message": "Fix a bogus error message from the DWARF LEB129 decoder when trying to read a signed LEB128 value containing the largest possible signed negative integer value.\n\n\tPR 26548\n\t* dwarf.c (read_leb128): When checking for overflow of a signed\n\tread, use a signed shift.",
    "tree": {
      "sha": "874e50e069bc1884bcd310c039f58a1f76131775",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/874e50e069bc1884bcd310c039f58a1f76131775"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/08d7da7dc9e130cbaf072c2588e1b392c2d7503e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/08d7da7dc9e130cbaf072c2588e1b392c2d7503e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/08d7da7dc9e130cbaf072c2588e1b392c2d7503e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/08d7da7dc9e130cbaf072c2588e1b392c2d7503e/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a1e60a1bdce8f555f45b5f94c059d83abf883567",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a1e60a1bdce8f555f45b5f94c059d83abf883567",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a1e60a1bdce8f555f45b5f94c059d83abf883567"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 27,
    "deletions": 7
  },
  "files": [
    {
      "sha": "ca9028688f9e017e79d389644845fe53cb8b1748",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/08d7da7dc9e130cbaf072c2588e1b392c2d7503e/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/08d7da7dc9e130cbaf072c2588e1b392c2d7503e/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=08d7da7dc9e130cbaf072c2588e1b392c2d7503e",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26548\n+\t* dwarf.c (read_leb128): When checking for overflow of a signed\n+\tread, use a signed shift.\n+\n 2020-08-28  Cooper Qu  <cooper.qu@linux.alibaba.com>\n \n \t* readelf.c (get_csky_section_type_name): New."
    },
    {
      "sha": "616e53484908ae38e5f19bd884952f373014c946",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 21,
      "deletions": 7,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/08d7da7dc9e130cbaf072c2588e1b392c2d7503e/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/08d7da7dc9e130cbaf072c2588e1b392c2d7503e/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=08d7da7dc9e130cbaf072c2588e1b392c2d7503e",
      "patch": "@@ -345,20 +345,34 @@ read_leb128 (unsigned char *data,\n   while (data < end)\n     {\n       unsigned char byte = *data++;\n+      bfd_boolean cont = (byte & 0x80) ? TRUE : FALSE;\n+\n+      byte &= 0x7f;\n       num_read++;\n \n       if (shift < sizeof (result) * 8)\n \t{\n-\t  result |= ((dwarf_vma) (byte & 0x7f)) << shift;\n-\t  if ((result >> shift) != (byte & 0x7f))\n-\t    /* Overflow.  */\n-\t    status |= 2;\n+\t  result |= ((dwarf_vma) byte) << shift;\n+\t  if (sign)\n+\t    {\n+\t      if ((((dwarf_signed_vma) result >> shift) & 0x7f) != byte)\n+\t\t/* Overflow.  */\n+\t\tstatus |= 2;\n+\t    }\n+\t  else if ((result >> shift) != byte)\n+\t    {\n+\t      /* Overflow.  */\n+\t      status |= 2;\n+\t    }\n+\n \t  shift += 7;\n \t}\n-      else if ((byte & 0x7f) != 0)\n-\tstatus |= 2;\n+      else if (byte != 0)\n+\t{\n+\t  status |= 2;\n+\t}\n \n-      if ((byte & 0x80) == 0)\n+      if (!cont)\n \t{\n \t  status &= ~1;\n \t  if (sign && (shift < 8 * sizeof (result)) && (byte & 0x40))"
    }
  ]
}