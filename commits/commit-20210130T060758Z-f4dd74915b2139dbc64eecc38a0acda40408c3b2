{
  "sha": "f4dd74915b2139dbc64eecc38a0acda40408c3b2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjRkZDc0OTE1YjIxMzlkYmM2NGVlY2MzOGEwYWNkYTQwNDA4YzNiMg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-16T03:24:38Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-30T06:07:58Z"
    },
    "message": "sim: hw: replace fgets with getline\n\nThis avoids fixed sized buffers on the stack.",
    "tree": {
      "sha": "ce630a698206acb88d939985045ec9b1464450b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce630a698206acb88d939985045ec9b1464450b6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f4dd74915b2139dbc64eecc38a0acda40408c3b2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4dd74915b2139dbc64eecc38a0acda40408c3b2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f4dd74915b2139dbc64eecc38a0acda40408c3b2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4dd74915b2139dbc64eecc38a0acda40408c3b2/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "481fac96bd6e2db034174f534bed885f3e76925a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/481fac96bd6e2db034174f534bed885f3e76925a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/481fac96bd6e2db034174f534bed885f3e76925a"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 41,
    "deletions": 30
  },
  "files": [
    {
      "sha": "cafb4b2043282aca3611b21e9a09b81250d82f0b",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4dd74915b2139dbc64eecc38a0acda40408c3b2/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4dd74915b2139dbc64eecc38a0acda40408c3b2/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=f4dd74915b2139dbc64eecc38a0acda40408c3b2",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-hw.c (merge_device_file): Replace fgets with getline.\n+\n 2021-01-30  Mike Frysinger  <vapier@gentoo.org>\n \n \t* gennltvals.sh (gen_arches): Sort calls by first arg."
    },
    {
      "sha": "11d3abdbbfb07c7b0acae4fe458c7637e8a7592e",
      "filename": "sim/common/sim-hw.c",
      "status": "modified",
      "additions": 37,
      "deletions": 30,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4dd74915b2139dbc64eecc38a0acda40408c3b2/sim/common/sim-hw.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4dd74915b2139dbc64eecc38a0acda40408c3b2/sim/common/sim-hw.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-hw.c?ref=f4dd74915b2139dbc64eecc38a0acda40408c3b2",
      "patch": "@@ -138,8 +138,9 @@ merge_device_file (struct sim_state *sd,\n {\n   FILE *description;\n   struct hw *current = STATE_HW (sd)->tree;\n-  int line_nr;\n-  char device_path[1000];\n+  char *device_path = NULL;\n+  size_t buf_size = 0;\n+  ssize_t device_path_len;\n \n   /* try opening the file */\n   description = fopen (file_name, \"r\");\n@@ -149,19 +150,14 @@ merge_device_file (struct sim_state *sd,\n       return SIM_RC_FAIL;\n     }\n \n-  line_nr = 0;\n-  while (fgets (device_path, sizeof (device_path), description))\n+  while ((device_path_len = getline (&device_path, &buf_size, description)) > 0)\n     {\n       char *device;\n-      /* check that a complete line was read */\n-      if (strchr (device_path, '\\n') == NULL)\n-\t{\n-\t  fclose (description);\n-\t  sim_io_eprintf (sd, \"%s:%d: line to long\", file_name, line_nr);\n-\t  return SIM_RC_FAIL;\n-\t}\n-      *strchr (device_path, '\\n') = '\\0';\n-      line_nr++;\n+      char *next_line = NULL;\n+\n+      if (device_path[device_path_len - 1] == '\\n')\n+\tdevice_path[--device_path_len] = '\\0';\n+\n       /* skip comments (\"#\" or \";\") and blank lines lines */\n       for (device = device_path;\n \t   *device != '\\0' && isspace (*device);\n@@ -170,33 +166,44 @@ merge_device_file (struct sim_state *sd,\n \t  || device[0] == ';'\n \t  || device[0] == '\\0')\n \tcontinue;\n+\n       /* merge any appended lines */\n-      while (device_path[strlen (device_path) - 1] == '\\\\')\n+      while (device_path[device_path_len - 1] == '\\\\')\n \t{\n-\t  int curlen = strlen (device_path) - 1;\n+\t  size_t next_buf_size = 0;\n+\t  ssize_t next_line_len;\n+\n \t  /* zap the `\\' at the end of the line */\n-\t  device_path[curlen] = '\\0';\n+\t  device_path[--device_path_len] = '\\0';\n+\n+\t  /* get the next line */\n+\t  next_line_len = getline (&next_line, &next_buf_size, description);\n+\t  if (next_line_len <= 0)\n+\t    break;\n+\n+\t  if (next_line[next_line_len - 1] == '\\n')\n+\t    next_line[--next_line_len] = '\\0';\n+\n \t  /* append the next line */\n-\t  if (!fgets (device_path + curlen,\n-\t\t      sizeof (device_path) - curlen,\n-\t\t      description))\n-\t    {\n-\t      fclose (description);\n-\t      sim_io_eprintf (sd, \"%s:%d: unexpected eof\", file_name, line_nr);\n-\t      return SIM_RC_FAIL;\n-\t    }\n-\t  if (strchr (device_path, '\\n') == NULL)\n+\t  if (buf_size - device_path_len <= next_line_len)\n \t    {\n-\t      fclose (description);\n-\t      sim_io_eprintf (sd, \"%s:%d: line to long\", file_name, line_nr);\n-\t      return SIM_RC_FAIL;\n+\t      ptrdiff_t offset = device - device_path;\n+\n+\t      buf_size += next_buf_size;\n+\t      device_path = xrealloc (device_path, buf_size);\n+\t      device = device_path + offset;\n \t    }\n-\t  *strchr (device_path, '\\n') = '\\0';\n-\t  line_nr++;\n+\t  memcpy (device_path + device_path_len, next_line,\n+\t\t  next_line_len + 1);\n+\t  device_path_len += next_line_len;\n \t}\n+      free (next_line);\n+\n       /* parse this line */\n       current = hw_tree_parse (current, \"%s\", device);\n     }\n+\n+  free (device_path);\n   fclose (description);\n   return SIM_RC_OK;\n }"
    }
  ]
}