{
  "sha": "fe69d4fcf0194a37a151f513e56ec31e106f3002",
  "node_id": "C_kwDOANOeidoAKGZlNjlkNGZjZjAxOTRhMzdhMTUxZjUxM2U1NmVjMzFlMTA2ZjMwMDI",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-02-15T01:43:40Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-02-16T08:45:40Z"
    },
    "message": "asan: buffer overflow in peXXigen.c\n\n\t* peXXigen.c (_bfd_XX_bfd_copy_private_bfd_data_common): Properly\n\tsanity check DataDirectory[PE_DEBUG_DATA].Size.",
    "tree": {
      "sha": "b96aa1c7ccdd46dd58b89abb8b6774e82940ebea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b96aa1c7ccdd46dd58b89abb8b6774e82940ebea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fe69d4fcf0194a37a151f513e56ec31e106f3002",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe69d4fcf0194a37a151f513e56ec31e106f3002",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fe69d4fcf0194a37a151f513e56ec31e106f3002",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe69d4fcf0194a37a151f513e56ec31e106f3002/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e94b2738a1510462b481ef44901d7e91739b1f4f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e94b2738a1510462b481ef44901d7e91739b1f4f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e94b2738a1510462b481ef44901d7e91739b1f4f"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 10,
    "deletions": 4
  },
  "files": [
    {
      "sha": "d11ea01c5546abedc768e9181f47b9181140a467",
      "filename": "bfd/peXXigen.c",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fe69d4fcf0194a37a151f513e56ec31e106f3002/bfd/peXXigen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fe69d4fcf0194a37a151f513e56ec31e106f3002/bfd/peXXigen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peXXigen.c?ref=fe69d4fcf0194a37a151f513e56ec31e106f3002",
      "patch": "@@ -2937,6 +2937,7 @@ bool\n _bfd_XX_bfd_copy_private_bfd_data_common (bfd * ibfd, bfd * obfd)\n {\n   pe_data_type *ipe, *ope;\n+  bfd_size_type size;\n \n   /* One day we may try to grok other private data.  */\n   if (ibfd->xvec->flavour != bfd_target_coff_flavour\n@@ -2971,7 +2972,8 @@ _bfd_XX_bfd_copy_private_bfd_data_common (bfd * ibfd, bfd * obfd)\n   memcpy (ope->dos_message, ipe->dos_message, sizeof (ope->dos_message));\n \n   /* The file offsets contained in the debug directory need rewriting.  */\n-  if (ope->pe_opthdr.DataDirectory[PE_DEBUG_DATA].Size != 0)\n+  size = ope->pe_opthdr.DataDirectory[PE_DEBUG_DATA].Size;\n+  if (size != 0)\n     {\n       bfd_vma addr = ope->pe_opthdr.DataDirectory[PE_DEBUG_DATA].VirtualAddress\n \t+ ope->pe_opthdr.ImageBase;\n@@ -2980,12 +2982,16 @@ _bfd_XX_bfd_copy_private_bfd_data_common (bfd * ibfd, bfd * obfd)\n \t representing s_size, not virt_size).  Therefore don't look for the\n \t section containing the first byte, but for that covering the last\n \t one.  */\n-      bfd_vma last = addr + ope->pe_opthdr.DataDirectory[PE_DEBUG_DATA].Size - 1;\n+      bfd_vma last = addr + size - 1;\n       asection *section = find_section_by_vma (obfd, last);\n       bfd_byte *data;\n+      bfd_vma dataoff = addr - section->vma;\n \n       /* PR 17512: file: 0f15796a.  */\n-      if (section && addr < section->vma)\n+      if (section\n+\t  && (addr < section->vma\n+\t      || section->size < dataoff\n+\t      || section->size - dataoff < size))\n \t{\n \t  /* xgettext:c-format */\n \t  _bfd_error_handler\n@@ -3000,7 +3006,7 @@ _bfd_XX_bfd_copy_private_bfd_data_common (bfd * ibfd, bfd * obfd)\n \t{\n \t  unsigned int i;\n \t  struct external_IMAGE_DEBUG_DIRECTORY *dd =\n-\t    (struct external_IMAGE_DEBUG_DIRECTORY *)(data + (addr - section->vma));\n+\t    (struct external_IMAGE_DEBUG_DIRECTORY *)(data + dataoff);\n \n \t  for (i = 0; i < ope->pe_opthdr.DataDirectory[PE_DEBUG_DATA].Size\n \t\t / sizeof (struct external_IMAGE_DEBUG_DIRECTORY); i++)"
    }
  ]
}