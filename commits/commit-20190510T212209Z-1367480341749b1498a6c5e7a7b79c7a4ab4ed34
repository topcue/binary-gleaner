{
  "sha": "1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTM2NzQ4MDM0MTc0OWIxNDk4YTZjNWU3YTdiNzljN2E0YWI0ZWQzNA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-05-10T21:22:09Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-05-10T21:22:09Z"
    },
    "message": "Fix GDB build when using --disable-gdbmi\n\nSince commit\n\n    b4be1b064860 (\"Fix MI output for multi-location breakpoints\")\n\nwe get this error when building with --disable-gdbmi:\n\n      CXXLD  gdb\n    /home/smarchi/src/binutils-gdb/gdb/breakpoint.c:6358: error: undefined reference to 'mi_multi_location_breakpoint_output_fixed(ui_out*)'\n\nThis is due to breakpoint.c using a function defined in mi/mi-main.c, even\nthough mi/mi-main.c isn't included in the build.\n\nTo fix it, use the flags feature of ui_out.  mi_ui_out has the new\nfix_multi_location_breakpoint_output flag set for versions >= 3.  Also,\nmove the global variable fix_multi_location_breakpoint_output to\nbreakpoint.c, so it can be read there even when we build without MI.  I\nrenamed it to fix_multi_location_breakpoint_output_globally so it\ndoesn't clash with the new enumerator.\n\ngdb/ChangeLog:\n\n\t* breakpoint.h (fix_multi_location_breakpoint_output_globally):\n\tNew variable declaration.\n\t* breakpoint.c (fix_multi_location_breakpoint_output_globally):\n\tNew variable.\n\t(print_one_breakpoint): Use ui_out::test_flags and new global\n\tvariable to compute use_fixed_output.\n\t* mi/mi-main.h (mi_multi_location_breakpoint_output_fixed):\n\tRemove.\n\t* mi/mi-main.c (fix_multi_location_breakpoint_output): Remove.\n\t(mi_multi_location_breakpoint_output_fixed): Remove.\n\t(mi_cmd_fix_multi_location_breakpoint_output): Adjust to set the\n\tnew variable.\n\t* mi/mi-out.c (mi_ui_out::mi_ui_out): Set\n\tfix_multi_location_breakpoint_output flag if version >= 3.\n\t* ui-out.h (enum ui_out_flag)\n\t<fix_multi_location_breakpoint_output>: New enumerator.",
    "tree": {
      "sha": "9ab9cbcfabab084d71008197cdb25ff945fe140b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ab9cbcfabab084d71008197cdb25ff945fe140b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a9eac7f9b45e92b83db476d167e5ff26607a8b47",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9eac7f9b45e92b83db476d167e5ff26607a8b47",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a9eac7f9b45e92b83db476d167e5ff26607a8b47"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 39,
    "deletions": 32
  },
  "files": [
    {
      "sha": "9492412efb9e9f93a78d2e5a120fb285ac8311af",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
      "patch": "@@ -1,3 +1,22 @@\n+2019-05-10  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* breakpoint.h (fix_multi_location_breakpoint_output_globally):\n+\tNew variable declaration.\n+\t* breakpoint.c (fix_multi_location_breakpoint_output_globally):\n+\tNew variable.\n+\t(print_one_breakpoint): Use ui_out::test_flags and new global\n+\tvariable to compute use_fixed_output.\n+\t* mi/mi-main.h (mi_multi_location_breakpoint_output_fixed):\n+\tRemove.\n+\t* mi/mi-main.c (fix_multi_location_breakpoint_output): Remove.\n+\t(mi_multi_location_breakpoint_output_fixed): Remove.\n+\t(mi_cmd_fix_multi_location_breakpoint_output): Adjust to set the\n+\tnew variable.\n+\t* mi/mi-out.c (mi_ui_out::mi_ui_out): Set\n+\tfix_multi_location_breakpoint_output flag if version >= 3.\n+\t* ui-out.h (enum ui_out_flag)\n+\t<fix_multi_location_breakpoint_output>: New enumerator.\n+\n 2019-05-10  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* contrib/cc-with-tweaks.sh: Validate dwz's work."
    },
    {
      "sha": "054bb1b13da485a5ca89cacdc4fd2a51e68d1101",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
      "patch": "@@ -6337,13 +6337,19 @@ print_one_breakpoint_location (struct breakpoint *b,\n     }\n }\n \n+/* See breakpoint.h. */\n+\n+bool fix_multi_location_breakpoint_output_globally = false;\n+\n static void\n print_one_breakpoint (struct breakpoint *b,\n \t\t      struct bp_location **last_loc, \n \t\t      int allflag)\n {\n   struct ui_out *uiout = current_uiout;\n-  bool use_fixed_output = mi_multi_location_breakpoint_output_fixed (uiout);\n+  bool use_fixed_output\n+    = (uiout->test_flags (fix_multi_location_breakpoint_output)\n+       || fix_multi_location_breakpoint_output_globally);\n \n   gdb::optional<ui_out_emit_tuple> bkpt_tuple_emitter (gdb::in_place, uiout, \"bkpt\");\n   print_one_breakpoint_location (b, NULL, 0, last_loc, allflag);"
    },
    {
      "sha": "3646ea63cb81662391c76f5d2cc931c6759032ec",
      "filename": "gdb/breakpoint.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/breakpoint.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/breakpoint.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.h?ref=1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
      "patch": "@@ -1670,4 +1670,9 @@ extern void print_breakpoint (breakpoint *bp);\n /* Command element for the 'commands' command.  */\n extern cmd_list_element *commands_cmd_element;\n \n+/* Whether to use the fixed output when printing information about a\n+   multi-location breakpoint (see PR 9659).  */\n+\n+extern bool fix_multi_location_breakpoint_output_globally;\n+\n #endif /* !defined (BREAKPOINT_H) */"
    },
    {
      "sha": "01786c3c1e84602293f0ecb35621d7231babe6a1",
      "filename": "gdb/mi/mi-main.c",
      "status": "modified",
      "additions": 1,
      "deletions": 19,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/mi/mi-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/mi/mi-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-main.c?ref=1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
      "patch": "@@ -2699,31 +2699,13 @@ mi_cmd_trace_frame_collected (const char *command, char **argv, int argc)\n   }\n }\n \n-/* Whether to use the fixed output when printing information about a\n-   multi-location breakpoint (see PR 9659).  */\n-\n-static bool fix_multi_location_breakpoint_output = false;\n-\n /* See mi/mi-main.h.  */\n \n void\n mi_cmd_fix_multi_location_breakpoint_output (const char *command, char **argv,\n \t\t\t\t\t     int argc)\n {\n-  fix_multi_location_breakpoint_output = true;\n-}\n-\n-/* See mi/mi-main.h.  */\n-\n-bool\n-mi_multi_location_breakpoint_output_fixed (ui_out *uiout)\n-{\n-  mi_ui_out *mi_uiout = dynamic_cast<mi_ui_out *> (uiout);\n-\n-  if (mi_uiout == nullptr)\n-    return false;\n-\n-  return mi_uiout->version () >= 3 || fix_multi_location_breakpoint_output;\n+  fix_multi_location_breakpoint_output_globally = true;\n }\n \n void"
    },
    {
      "sha": "1986228d22bd8211b8235b024d4febc089158403",
      "filename": "gdb/mi/mi-main.h",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/mi/mi-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/mi/mi-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-main.h?ref=1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
      "patch": "@@ -59,12 +59,4 @@ extern struct mi_suppress_notification mi_suppress_notification;\n extern void mi_cmd_fix_multi_location_breakpoint_output (const char *command,\n \t\t\t\t\t\t\t char **argv, int argc);\n \n-/* Return whether -break-list, -break-insert, =breakpoint-created and\n-   =breakpoint-modified should use the \"fixed\" output format (see PR\n-   9659).\n-\n-   Return false if UIOUT is not an MI UI.  */\n-\n-extern bool mi_multi_location_breakpoint_output_fixed (ui_out *uiout);\n-\n #endif /* MI_MI_MAIN_H */"
    },
    {
      "sha": "d8bee0f39279b8f5a90dba55a04f92d334ac3735",
      "filename": "gdb/mi/mi-out.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/mi/mi-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/mi/mi-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-out.c?ref=1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
      "patch": "@@ -280,7 +280,9 @@ mi_ui_out::version ()\n /* Constructor for an `mi_out_data' object.  */\n \n mi_ui_out::mi_ui_out (int mi_version)\n-: m_suppress_field_separator (false),\n+: ui_out (mi_version >= 3\n+\t  ? fix_multi_location_breakpoint_output : (ui_out_flag) 0),\n+  m_suppress_field_separator (false),\n   m_suppress_output (false),\n   m_mi_version (mi_version)\n {"
    },
    {
      "sha": "9eba70eedac646911e137348298fbc27d41ec048",
      "filename": "gdb/ui-out.h",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/ui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1367480341749b1498a6c5e7a7b79c7a4ab4ed34/gdb/ui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.h?ref=1367480341749b1498a6c5e7a7b79c7a4ab4ed34",
      "patch": "@@ -49,9 +49,10 @@ enum ui_align\n \n /* flags enum */\n enum ui_out_flag\n-  {\n-    ui_source_list = (1 << 0),\n-  };\n+{\n+  ui_source_list = (1 << 0),\n+  fix_multi_location_breakpoint_output = (1 << 1),\n+};\n \n DEF_ENUM_FLAGS_TYPE (ui_out_flag, ui_out_flags);\n "
    }
  ]
}