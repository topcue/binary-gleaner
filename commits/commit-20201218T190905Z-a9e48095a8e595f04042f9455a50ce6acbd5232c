{
  "sha": "a9e48095a8e595f04042f9455a50ce6acbd5232c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTllNDgwOTVhOGU1OTVmMDQwNDJmOTQ1NWE1MGNlNmFjYmQ1MjMyYw==",
  "commit": {
    "author": {
      "name": "Jameson Nash",
      "email": "vtjnash@gmail.com",
      "date": "2020-12-18T19:08:53Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-12-18T19:09:05Z"
    },
    "message": "gdb: define COFF file offsets with file_ptr\n\nThe arguments to these functions are file_ptr, so these declarations\nwere accidentally implicitly down-casting them to signed int. This\nallows for reading files between 2 and 4 GB in size in my testing (I\ndon't have a larger dll currently to test). These may not be natively\nsupported by Windows, but can appear when using split-dwarf information.\n\nThis solves a \"can't get string table\" error resulting from attempting\nto pass a negative offset to bfd_seek. I encountered this occuring while\ntrying to use a debug file for libLLVM.dll, but searching online reveals\nat least one other person may have run into a similar problem with\nFirefox?\n\n    https://sourceforge.net/p/mingw-w64/mailman/mingw-w64-public/thread/CA+cU71k2bU0azQxjy4-77ynQj1O+TKmgtaTKe59n7Bjub1y7Tg@mail.gmail.com/\n\nWith this patch, the debug file appears to load successfully and I can\nsee debug information in gdb for the library.\n\ngdb/ChangeLog:\n\n\t* coffread.c (linetab_offset): Change type to file_ptr.\n\t(linetab_size): Likewise.\n\t(enter_linenos): Change parameter type to file_ptr.\n\t(init_lineno): Likewise.\n\t(init_stringtab): Likewise.\n\t(coff_symtab_read): Likewise.\n\t(coff_symfile_read): Change variable types to file_ptr.\n\nChange-Id: I6ae3bf31efc51c826734ade6731ea6b1c32129f3",
    "tree": {
      "sha": "e565f51351b5e51b3b3a234c1066146965768777",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e565f51351b5e51b3b3a234c1066146965768777"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a9e48095a8e595f04042f9455a50ce6acbd5232c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9e48095a8e595f04042f9455a50ce6acbd5232c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a9e48095a8e595f04042f9455a50ce6acbd5232c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9e48095a8e595f04042f9455a50ce6acbd5232c/comments",
  "author": {
    "login": "vtjnash",
    "id": 330950,
    "node_id": "MDQ6VXNlcjMzMDk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/330950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vtjnash",
    "html_url": "https://github.com/vtjnash",
    "followers_url": "https://api.github.com/users/vtjnash/followers",
    "following_url": "https://api.github.com/users/vtjnash/following{/other_user}",
    "gists_url": "https://api.github.com/users/vtjnash/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vtjnash/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vtjnash/subscriptions",
    "organizations_url": "https://api.github.com/users/vtjnash/orgs",
    "repos_url": "https://api.github.com/users/vtjnash/repos",
    "events_url": "https://api.github.com/users/vtjnash/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vtjnash/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "86ef42bd7333091725991ba568807fcec0a2c1d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86ef42bd7333091725991ba568807fcec0a2c1d1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/86ef42bd7333091725991ba568807fcec0a2c1d1"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 25,
    "deletions": 15
  },
  "files": [
    {
      "sha": "9b7b0105db50829c3ef50716ccedb22c07fbcfe8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9e48095a8e595f04042f9455a50ce6acbd5232c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9e48095a8e595f04042f9455a50ce6acbd5232c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a9e48095a8e595f04042f9455a50ce6acbd5232c",
      "patch": "@@ -1,3 +1,13 @@\n+2020-12-18  Jameson Nash  <vtjnash@gmail.com>\n+\n+\t* coffread.c (linetab_offset): Change type to file_ptr.\n+\t(linetab_size): Likewise.\n+\t(enter_linenos): Change parameter type to file_ptr.\n+\t(init_lineno): Likewise.\n+\t(init_stringtab): Likewise.\n+\t(coff_symtab_read): Likewise.\n+\t(coff_symfile_read): Change variable types to file_ptr.\n+\n 2020-12-17  Tom Tromey  <tromey@adacore.com>\n \n \t* printcmd.c (print_variable_and_value): Don't use n_spaces."
    },
    {
      "sha": "78cd2477c23fea9963f50b4f79b167c3183aacd0",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9e48095a8e595f04042f9455a50ce6acbd5232c/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9e48095a8e595f04042f9455a50ce6acbd5232c/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=a9e48095a8e595f04042f9455a50ce6acbd5232c",
      "patch": "@@ -155,8 +155,8 @@ static int type_vector_length;\n #define INITIAL_TYPE_VECTOR_LENGTH 160\n \n static char *linetab = NULL;\n-static long linetab_offset;\n-static unsigned long linetab_size;\n+static file_ptr linetab_offset;\n+static file_ptr linetab_size;\n \n static char *stringtab = NULL;\n \n@@ -188,23 +188,23 @@ static struct symbol *process_coff_symbol (struct coff_symbol *,\n \n static void patch_opaque_types (struct symtab *);\n \n-static void enter_linenos (long, int, int, struct objfile *);\n+static void enter_linenos (file_ptr, int, int, struct objfile *);\n \n-static int init_lineno (bfd *, long, int, gdb::unique_xmalloc_ptr<char> *);\n+static int init_lineno (bfd *, file_ptr, file_ptr, gdb::unique_xmalloc_ptr<char> *);\n \n static char *getsymname (struct internal_syment *);\n \n static const char *coff_getfilename (union internal_auxent *);\n \n-static int init_stringtab (bfd *, long, gdb::unique_xmalloc_ptr<char> *);\n+static int init_stringtab (bfd *, file_ptr, gdb::unique_xmalloc_ptr<char> *);\n \n static void read_one_sym (struct coff_symbol *,\n \t\t\t  struct internal_syment *,\n \t\t\t  union internal_auxent *);\n \n static void coff_symtab_read (minimal_symbol_reader &,\n-\t\t\t      long, unsigned int, struct objfile *);\n-\f\n+\t\t\t      file_ptr, unsigned int, struct objfile *);\n+\n /* We are called once per section from coff_symfile_read.  We\n    need to examine each section we are passed, check to see\n    if it is something we are interested in processing, and\n@@ -540,9 +540,9 @@ coff_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n   const char *filename = bfd_get_filename (abfd);\n   int val;\n   unsigned int num_symbols;\n-  int symtab_offset;\n-  int stringtab_offset;\n-  int stabstrsize;\n+  file_ptr symtab_offset;\n+  file_ptr stringtab_offset;\n+  unsigned int stabstrsize;\n   \n   info = coff_objfile_data_key.get (objfile);\n   symfile_bfd = abfd;\t\t/* Kludge for swap routines.  */\n@@ -750,7 +750,7 @@ coff_symfile_finish (struct objfile *objfile)\n \n static void\n coff_symtab_read (minimal_symbol_reader &reader,\n-\t\t  long symtab_offset, unsigned int nsyms,\n+\t\t  file_ptr symtab_offset, unsigned int nsyms,\n \t\t  struct objfile *objfile)\n {\n   struct gdbarch *gdbarch = objfile->arch ();\n@@ -796,7 +796,7 @@ coff_symtab_read (minimal_symbol_reader &reader,\n   bfd_seek (objfile->obfd, 0, 0);\n \n   /* Position to read the symbol table.  */\n-  val = bfd_seek (objfile->obfd, (long) symtab_offset, 0);\n+  val = bfd_seek (objfile->obfd, symtab_offset, 0);\n   if (val < 0)\n     perror_with_name (objfile_name (objfile));\n \n@@ -1270,7 +1270,7 @@ read_one_sym (struct coff_symbol *cs,\n /* Support for string table handling.  */\n \n static int\n-init_stringtab (bfd *abfd, long offset, gdb::unique_xmalloc_ptr<char> *storage)\n+init_stringtab (bfd *abfd, file_ptr offset, gdb::unique_xmalloc_ptr<char> *storage)\n {\n   long length;\n   int val;\n@@ -1366,7 +1366,7 @@ coff_getfilename (union internal_auxent *aux_entry)\n    them into GDB's data structures.  */\n \n static int\n-init_lineno (bfd *abfd, long offset, int size,\n+init_lineno (bfd *abfd, file_ptr offset, file_ptr size,\n \t     gdb::unique_xmalloc_ptr<char> *storage)\n {\n   int val;\n@@ -1399,7 +1399,7 @@ init_lineno (bfd *abfd, long offset, int size,\n #endif\n \n static void\n-enter_linenos (long file_offset, int first_line,\n+enter_linenos (file_ptr file_offset, int first_line,\n \t       int last_line, struct objfile *objfile)\n {\n   struct gdbarch *gdbarch = objfile->arch ();"
    }
  ]
}