{
  "sha": "fa9c3fa035433debc24503e32c59688650ffcdbb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmE5YzNmYTAzNTQzM2RlYmMyNDUwM2UzMmM1OTY4ODY1MGZmY2RiYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-22T13:08:49Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-29T15:57:47Z"
    },
    "message": "Make some DWARF complaints clearer\n\nI noticed that the complaint in partial_die_parent_scope was not using\ndwarf_tag_name, so I changed that.  Then I noticed that dwarf_tag_name\ndoes not show the numeric value for an unrecognized tag, so I changed\nthat function and all the related functions to do so.\n\ngdb/ChangeLog\n2019-05-29  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2read.c (partial_die_parent_scope): Call dwarf_tag_name.\n\t(dwarf_unknown): New function.\n\t(dwarf_tag_name, dwarf_attr_name, dwarf_form_name)\n\t(dwarf_type_encoding_name): Use dwarf_unknown.",
    "tree": {
      "sha": "748962869050a8b22eac312e0c23f8d19c79067c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/748962869050a8b22eac312e0c23f8d19c79067c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fa9c3fa035433debc24503e32c59688650ffcdbb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa9c3fa035433debc24503e32c59688650ffcdbb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fa9c3fa035433debc24503e32c59688650ffcdbb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa9c3fa035433debc24503e32c59688650ffcdbb/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4330d61dfb05d77fd925efdca45091f12e3a6266",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4330d61dfb05d77fd925efdca45091f12e3a6266",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4330d61dfb05d77fd925efdca45091f12e3a6266"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 26,
    "deletions": 6
  },
  "files": [
    {
      "sha": "37c0069e3f2193ae4f2f715937ec81fb94ef30e9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa9c3fa035433debc24503e32c59688650ffcdbb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa9c3fa035433debc24503e32c59688650ffcdbb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fa9c3fa035433debc24503e32c59688650ffcdbb",
      "patch": "@@ -1,3 +1,10 @@\n+2019-05-29  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2read.c (partial_die_parent_scope): Call dwarf_tag_name.\n+\t(dwarf_unknown): New function.\n+\t(dwarf_tag_name, dwarf_attr_name, dwarf_form_name)\n+\t(dwarf_type_encoding_name): Use dwarf_unknown.\n+\n 2019-05-29  Tom Tromey  <tromey@adacore.com>\n \n \tPR c++/20020:"
    },
    {
      "sha": "f47d130fa220123843798f33e0844c53f02107b9",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 19,
      "deletions": 6,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa9c3fa035433debc24503e32c59688650ffcdbb/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa9c3fa035433debc24503e32c59688650ffcdbb/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=fa9c3fa035433debc24503e32c59688650ffcdbb",
      "patch": "@@ -8831,8 +8831,9 @@ partial_die_parent_scope (struct partial_die_info *pdi,\n       /* FIXME drow/2004-04-01: What should we be doing with\n \t function-local names?  For partial symbols, we should probably be\n \t ignoring them.  */\n-      complaint (_(\"unhandled containing DIE tag %d for DIE at %s\"),\n-\t\t parent->tag, sect_offset_str (pdi->sect_off));\n+      complaint (_(\"unhandled containing DIE tag %s for DIE at %s\"),\n+\t\t dwarf_tag_name (parent->tag),\n+\t\t sect_offset_str (pdi->sect_off));\n       parent->scope = grandparent_scope;\n     }\n \n@@ -22829,6 +22830,18 @@ dwarf2_extension (struct die_info *die, struct dwarf2_cu **ext_cu)\n   return follow_die_ref (die, attr, ext_cu);\n }\n \n+/* A convenience function that returns an \"unknown\" DWARF name,\n+   including the value of V.  STR is the name of the entity being\n+   printed, e.g., \"TAG\".  */\n+\n+static const char *\n+dwarf_unknown (const char *str, unsigned v)\n+{\n+  char *cell = get_print_cell ();\n+  xsnprintf (cell, PRINT_CELL_SIZE, \"DW_%s_<unknown: %u>\", str, v);\n+  return cell;\n+}\n+\n /* Convert a DIE tag into its string name.  */\n \n static const char *\n@@ -22837,7 +22850,7 @@ dwarf_tag_name (unsigned tag)\n   const char *name = get_DW_TAG_name (tag);\n \n   if (name == NULL)\n-    return \"DW_TAG_<unknown>\";\n+    return dwarf_unknown (\"TAG\", tag);\n \n   return name;\n }\n@@ -22860,7 +22873,7 @@ dwarf_attr_name (unsigned attr)\n   name = get_DW_AT_name (attr);\n \n   if (name == NULL)\n-    return \"DW_AT_<unknown>\";\n+    return dwarf_unknown (\"AT\", attr);\n \n   return name;\n }\n@@ -22873,7 +22886,7 @@ dwarf_form_name (unsigned form)\n   const char *name = get_DW_FORM_name (form);\n \n   if (name == NULL)\n-    return \"DW_FORM_<unknown>\";\n+    return dwarf_unknown (\"FORM\", form);\n \n   return name;\n }\n@@ -22895,7 +22908,7 @@ dwarf_type_encoding_name (unsigned enc)\n   const char *name = get_DW_ATE_name (enc);\n \n   if (name == NULL)\n-    return \"DW_ATE_<unknown>\";\n+    return dwarf_unknown (\"ATE\", enc);\n \n   return name;\n }"
    }
  ]
}