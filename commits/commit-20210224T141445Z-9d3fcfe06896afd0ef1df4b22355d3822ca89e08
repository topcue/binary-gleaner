{
  "sha": "9d3fcfe06896afd0ef1df4b22355d3822ca89e08",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWQzZmNmZTA2ODk2YWZkMGVmMWRmNGIyMjM1NWQzODIyY2E4OWUwOA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-02-24T14:14:45Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-02-24T14:14:45Z"
    },
    "message": "Fix a potential integer overflow when adding together section sizes for the AVR port of objdump.\n\n\tPR 27285\n\t* od-elf32_avr.c (elf32_avr_get_memory_usage): Check for overflows\n\twhen adding together the section sizes.",
    "tree": {
      "sha": "d42f62dbc16be9264996689809bb4cfdc08c9b0a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d42f62dbc16be9264996689809bb4cfdc08c9b0a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9d3fcfe06896afd0ef1df4b22355d3822ca89e08",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d3fcfe06896afd0ef1df4b22355d3822ca89e08",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9d3fcfe06896afd0ef1df4b22355d3822ca89e08",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9d3fcfe06896afd0ef1df4b22355d3822ca89e08/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c74147bbe00a74b95365fb7fd6631924b1a3d11d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c74147bbe00a74b95365fb7fd6631924b1a3d11d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c74147bbe00a74b95365fb7fd6631924b1a3d11d"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 58,
    "deletions": 9
  },
  "files": [
    {
      "sha": "8f2f844a5db3b15f9db10b444551077bae14f846",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d3fcfe06896afd0ef1df4b22355d3822ca89e08/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d3fcfe06896afd0ef1df4b22355d3822ca89e08/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=9d3fcfe06896afd0ef1df4b22355d3822ca89e08",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-24  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 27285\n+\t* od-elf32_avr.c (elf32_avr_get_memory_usage): Check for overflows\n+\twhen adding together the section sizes.\n+\n 2021-02-24  Nick Clifton  <nickc@redhat.com>\n \n \t* objcopy.c (merge_gnu_build_notes): Remove support for v1/v2 GNU"
    },
    {
      "sha": "0f3c19b51f9a01e1ece8a07d8a9ee192d34c9539",
      "filename": "binutils/od-elf32_avr.c",
      "status": "modified",
      "additions": 52,
      "deletions": 9,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9d3fcfe06896afd0ef1df4b22355d3822ca89e08/binutils/od-elf32_avr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9d3fcfe06896afd0ef1df4b22355d3822ca89e08/binutils/od-elf32_avr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/od-elf32_avr.c?ref=9d3fcfe06896afd0ef1df4b22355d3822ca89e08",
      "patch": "@@ -166,9 +166,9 @@ elf32_avr_get_device_info (bfd *abfd, char *description,\n \n static void\n elf32_avr_get_memory_usage (bfd *abfd,\n-        bfd_size_type *text_usage,\n-        bfd_size_type *data_usage,\n-        bfd_size_type *eeprom_usage)\n+\t\t\t    bfd_size_type *text_usage,\n+\t\t\t    bfd_size_type *data_usage,\n+\t\t\t    bfd_size_type *eeprom_usage)\n {\n \n   bfd_size_type avr_datasize = 0;\n@@ -177,6 +177,7 @@ elf32_avr_get_memory_usage (bfd *abfd,\n   bfd_size_type bootloadersize = 0;\n   bfd_size_type noinitsize = 0;\n   bfd_size_type eepromsize = 0;\n+  bfd_size_type res;\n   asection *section;\n \n   if ((section = bfd_get_section_by_name (abfd, \".data\")) != NULL)\n@@ -192,8 +193,50 @@ elf32_avr_get_memory_usage (bfd *abfd,\n   if ((section = bfd_get_section_by_name (abfd, \".eeprom\")) != NULL)\n     eepromsize = bfd_section_size (section);\n \n-  *text_usage = avr_textsize + avr_datasize + bootloadersize;\n-  *data_usage = avr_datasize + avr_bsssize + noinitsize;\n+  /* PR 27285: Check for overflow.  */\n+  res = avr_textsize + avr_datasize;\n+  if (res < avr_textsize || res < avr_datasize)\n+    {\n+      fprintf (stderr, _(\"Warning: textsize (%#lx) + datasize (%#lx) overflows size type\\n\"),\n+\t       (long) avr_textsize, (long) avr_datasize);\n+      res = (bfd_size_type) -1;\n+    }\n+  else\n+    {\n+      bfd_size_type res2;\n+      res2 = res + bootloadersize;\n+      if (res2 < bootloadersize || res2 < res)\n+\t{\n+\t  fprintf (stderr, _(\"Warning: textsize (%#lx) + datasize (%#lx) + bootloadersize (%#lx) overflows size type\\n\"),\n+\t\t   (long) avr_textsize, (long) avr_datasize, (long) bootloadersize);\n+\t  res2 = (bfd_size_type) -1;\n+\t}\n+      res = res2;\n+    }\n+  *text_usage = res;\n+\n+  res = avr_datasize + avr_bsssize;\n+  if (res < avr_datasize || res < avr_bsssize)\n+    {\n+      fprintf (stderr, _(\"Warning: datatsize (%#lx) + bssssize (%#lx) overflows size type\\n\"),\n+\t       (long) avr_datasize, (long) avr_bsssize);\n+      res = (bfd_size_type) -1;\n+    }\n+  else\n+    {\n+      bfd_size_type res2;\n+\n+      res2 = res + noinitsize;\n+      if (res2 < res || res2 < noinitsize)\n+\t{\n+\t  fprintf (stderr, _(\"Warning: datasize (%#lx) + bsssize (%#lx) + noinitsize (%#lx) overflows size type\\n\"),\n+\t\t   (long) avr_datasize, (long) avr_bsssize, (long) noinitsize);\n+\t  res2 = (bfd_size_type) -1;\n+\t}\n+      res = res2;\n+    }\n+  *data_usage = res;\n+\n   *eeprom_usage = eepromsize;\n }\n \n@@ -220,21 +263,21 @@ elf32_avr_dump_mem_usage (bfd *abfd)\n     }\n \n   elf32_avr_get_memory_usage (abfd, &text_usage, &data_usage,\n-     &eeprom_usage);\n+\t\t\t      &eeprom_usage);\n \n   printf (\"AVR Memory Usage\\n\"\n           \"----------------\\n\"\n           \"Device: %s\\n\\n\", device.name);\n \n   /* Text size */\n-  printf (\"Program:%8ld bytes\", text_usage);\n+  printf (\"Program:%8lu bytes\", text_usage);\n   if (device.flash_size > 0)\n     printf (\" (%2.1f%% Full)\", ((float) text_usage / device.flash_size) * 100);\n \n   printf (\"\\n(.text + .data + .bootloader)\\n\\n\");\n \n   /* Data size */\n-  printf (\"Data:   %8ld bytes\", data_usage);\n+  printf (\"Data:   %8lu bytes\", data_usage);\n   if (device.ram_size > 0)\n     printf (\" (%2.1f%% Full)\", ((float) data_usage / device.ram_size) * 100);\n \n@@ -243,7 +286,7 @@ elf32_avr_dump_mem_usage (bfd *abfd)\n   /* EEPROM size */\n   if (eeprom_usage > 0)\n     {\n-      printf (\"EEPROM: %8ld bytes\", eeprom_usage);\n+      printf (\"EEPROM: %8lu bytes\", eeprom_usage);\n       if (device.eeprom_size > 0)\n         printf (\" (%2.1f%% Full)\", ((float) eeprom_usage / device.eeprom_size) * 100);\n "
    }
  ]
}