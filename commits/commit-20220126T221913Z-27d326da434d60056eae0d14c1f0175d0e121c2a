{
  "sha": "27d326da434d60056eae0d14c1f0175d0e121c2a",
  "node_id": "C_kwDOANOeidoAKDI3ZDMyNmRhNDM0ZDYwMDU2ZWFlMGQxNGMxZjAxNzVkMGUxMjFjMmE",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-31T22:04:58Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-26T22:19:13Z"
    },
    "message": "Remove global wrap_here function\n\nThis removes the global wrap_here function, so that future calls\ncannot be introduced.  Instead, all callers must use the method on the\nappropriate ui_file.\n\nThis temporarily moves the implementation of this method to utils.c.\nThis will change once the remaining patches to untangle the pager have\nbeen written.",
    "tree": {
      "sha": "f03d0251eee87288cc2b0a06a761af0bcd0d3d70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f03d0251eee87288cc2b0a06a761af0bcd0d3d70"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/27d326da434d60056eae0d14c1f0175d0e121c2a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27d326da434d60056eae0d14c1f0175d0e121c2a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/27d326da434d60056eae0d14c1f0175d0e121c2a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27d326da434d60056eae0d14c1f0175d0e121c2a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1285ce8629b37f800bf21731ee7c7a8b1b8d0233"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 3,
    "deletions": 23
  },
  "files": [
    {
      "sha": "d30ec04a68fc03f8811d4831e2770a5fd2ce3b3e",
      "filename": "gdb/ui-file.c",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27d326da434d60056eae0d14c1f0175d0e121c2a/gdb/ui-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27d326da434d60056eae0d14c1f0175d0e121c2a/gdb/ui-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.c?ref=27d326da434d60056eae0d14c1f0175d0e121c2a",
      "patch": "@@ -131,12 +131,6 @@ ui_file::printchar (int c, int quoter, bool async_safe)\n     this->write (buf, out);\n }\n \n-void\n-ui_file::wrap_here (int indent)\n-{\n-  ::wrap_here (indent);\n-}\n-\n \f\n \n void"
    },
    {
      "sha": "152fa9b630ab1c5d956720f63a1b951975b080eb",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 3,
      "deletions": 17,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27d326da434d60056eae0d14c1f0175d0e121c2a/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27d326da434d60056eae0d14c1f0175d0e121c2a/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=27d326da434d60056eae0d14c1f0175d0e121c2a",
      "patch": "@@ -1519,29 +1519,15 @@ get_chars_per_line ()\n   return chars_per_line;\n }\n \n-/* Indicate that if the next sequence of characters overflows the\n-   line, a newline should be inserted here rather than when it hits\n-   the end.  If INDENT is non-zero, it is a number of spaces to be\n-   printed to indent the wrapped part on the next line.\n-\n-   If the line is already overfull, we immediately print a newline and\n-   the indentation, and disable further wrapping.\n-\n-   If we don't know the width of lines, but we know the page height,\n-   we must not wrap words, but should still keep track of newlines\n-   that were explicitly printed.\n-\n-   This routine is guaranteed to force out any output which has been\n-   squirreled away in the wrap_buffer, so wrap_here (0) can be\n-   used to force out output from the wrap_buffer.  */\n+/* See ui-file.h.  */\n \n void\n-wrap_here (int indent)\n+ui_file::wrap_here (int indent)\n {\n   /* This should have been allocated, but be paranoid anyway.  */\n   gdb_assert (filter_initialized);\n \n-  flush_wrap_buffer (gdb_stdout);\n+  flush_wrap_buffer (this);\n   if (chars_per_line == UINT_MAX)\t/* No line overflow checking.  */\n     {\n       wrap_column = 0;"
    }
  ]
}