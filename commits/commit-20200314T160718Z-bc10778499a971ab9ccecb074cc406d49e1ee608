{
  "sha": "bc10778499a971ab9ccecb074cc406d49e1ee608",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmMxMDc3ODQ5OWE5NzFhYjljY2VjYjA3NGNjNDA2ZDQ5ZTFlZTYwOA==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T16:07:18Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-14T16:07:18Z"
    },
    "message": "m68k: bsd: Change type from char * to gdb_byte *\n\n\t* m68k-bsd-nat.c (m68kbsd_supply_gregset): Change type of regs to\n\tgdb_byte *.\n\t* m68k-bsd-nat.c (m68kbsd_supply_fpregset): Likewise.\n\t* m68k-bsd-nat.c (m68kbsd_collect_gregset): Likewise.\n\t* m68k-bsd-nat.c (m68kbsd_supply_pcb): Cast &tmp to gdb_byte *.",
    "tree": {
      "sha": "bbb498ba1b784384fbb022bf3a7d869324c801bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bbb498ba1b784384fbb022bf3a7d869324c801bc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bc10778499a971ab9ccecb074cc406d49e1ee608",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc10778499a971ab9ccecb074cc406d49e1ee608",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bc10778499a971ab9ccecb074cc406d49e1ee608",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc10778499a971ab9ccecb074cc406d49e1ee608/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "01a801176ea15ddfc988cade2e3d84c3b0abfec3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/01a801176ea15ddfc988cade2e3d84c3b0abfec3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/01a801176ea15ddfc988cade2e3d84c3b0abfec3"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 12,
    "deletions": 4
  },
  "files": [
    {
      "sha": "6703f1d4ae055f773095f50094aa355d62603276",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc10778499a971ab9ccecb074cc406d49e1ee608/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc10778499a971ab9ccecb074cc406d49e1ee608/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bc10778499a971ab9ccecb074cc406d49e1ee608",
      "patch": "@@ -1,3 +1,11 @@\n+2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* m68k-bsd-nat.c (m68kbsd_supply_gregset): Change type of regs to\n+\tgdb_byte *.\n+\t* m68k-bsd-nat.c (m68kbsd_supply_fpregset): Likewise.\n+\t* m68k-bsd-nat.c (m68kbsd_collect_gregset): Likewise.\n+\t* m68k-bsd-nat.c (m68kbsd_supply_pcb): Cast &tmp to gdb_byte *.\n+\n 2020-03-14  Kamil Rytarowski  <n54@gmx.com>\n \n \t* m68k-bsd-nat.c (m68k_bsd_nat_target): Inherit from"
    },
    {
      "sha": "a3123a731991127e9f789925df9bbf96260e471f",
      "filename": "gdb/m68k-bsd-nat.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc10778499a971ab9ccecb074cc406d49e1ee608/gdb/m68k-bsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc10778499a971ab9ccecb074cc406d49e1ee608/gdb/m68k-bsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m68k-bsd-nat.c?ref=bc10778499a971ab9ccecb074cc406d49e1ee608",
      "patch": "@@ -57,7 +57,7 @@ m68kbsd_fpregset_supplies_p (int regnum)\n static void\n m68kbsd_supply_gregset (struct regcache *regcache, const void *gregs)\n {\n-  const char *regs = gregs;\n+  const gdb_byte *regs = (const gdb_byte *) gregs;\n   int regnum;\n \n   for (regnum = M68K_D0_REGNUM; regnum <= M68K_PC_REGNUM; regnum++)\n@@ -70,7 +70,7 @@ static void\n m68kbsd_supply_fpregset (struct regcache *regcache, const void *fpregs)\n {\n   struct gdbarch *gdbarch = regcache->arch ();\n-  const char *regs = fpregs;\n+  const gdb_byte *regs = (const gdb_byte *) fpregs;\n   int regnum;\n \n   for (regnum = M68K_FP0_REGNUM; regnum <= M68K_FPI_REGNUM; regnum++)\n@@ -85,7 +85,7 @@ static void\n m68kbsd_collect_gregset (const struct regcache *regcache,\n \t\t\t void *gregs, int regnum)\n {\n-  char *regs = gregs;\n+  gdb_byte *regs = (gdb_byte *) gregs;\n   int i;\n \n   for (i = M68K_D0_REGNUM; i <= M68K_PC_REGNUM; i++)\n@@ -218,7 +218,7 @@ m68kbsd_supply_pcb (struct regcache *regcache, struct pcb *pcb)\n   tmp = pcb->pcb_ps & 0xffff;\n   regcache->raw_supply (M68K_PS_REGNUM, &tmp);\n \n-  read_memory (pcb->pcb_regs[PCB_REGS_FP] + 4, (char *) &tmp, sizeof tmp);\n+  read_memory (pcb->pcb_regs[PCB_REGS_FP] + 4, (gdb_byte *) &tmp, sizeof tmp);\n   regcache->raw_supply (M68K_PC_REGNUM, &tmp);\n \n   return 1;"
    }
  ]
}