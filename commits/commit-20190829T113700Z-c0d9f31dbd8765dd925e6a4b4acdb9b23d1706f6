{
  "sha": "c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzBkOWYzMWRiZDg3NjVkZDkyNWU2YTRiNGFjZGI5YjIzZDE3MDZmNg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-29T09:05:54Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-29T11:37:00Z"
    },
    "message": "PR24697, R_PPC_EMB_SDA21 cannot be used when making a shared object\n\nThis removes a restriction on various R_PPC_EMB relocations that has\nbeen present for ppc32 since 1996-04-26 git commit e25a798839.  As far\nas I know, only those relocs that would require addressing via r2 for\n.sdata2/.sbss2 access are disallowed in shared libraries.\n\n\tPR 24697\n\t* elf32-ppc.c (ppc_elf_check_relocs): Call bad_shared_reloc\n\twhen !bfd_link_executable for R_PPC_EMB_SDA2I16 and\n\tR_PPC_EMB_SDA2REL.  Don't call bad_shared_reloc for any other\n\treloc.",
    "tree": {
      "sha": "f2d9204312bc52783b59059935c3b05f64745642",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2d9204312bc52783b59059935c3b05f64745642"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd9b12c2451f0e46e73ec54d8762727d428b4c14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd9b12c2451f0e46e73ec54d8762727d428b4c14",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd9b12c2451f0e46e73ec54d8762727d428b4c14"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 10,
    "deletions": 17
  },
  "files": [
    {
      "sha": "d292e87f56ba1368cfa671b90f08eab30e859252",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-29  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24697\n+\t* elf32-ppc.c (ppc_elf_check_relocs): Call bad_shared_reloc\n+\twhen !bfd_link_executable for R_PPC_EMB_SDA2I16 and\n+\tR_PPC_EMB_SDA2REL.  Don't call bad_shared_reloc for any other\n+\treloc.\n+\n 2019-08-29  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (xlate_pcrel_opt): Add poff parameter.  Allow offset"
    },
    {
      "sha": "5e5834a70ca9f5bcbd3e718b4c57e16465568d3e",
      "filename": "bfd/elf32-ppc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 17,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6/bfd/elf32-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6/bfd/elf32-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-ppc.c?ref=c0d9f31dbd8765dd925e6a4b4acdb9b23d1706f6",
      "patch": "@@ -3096,11 +3096,6 @@ ppc_elf_check_relocs (bfd *abfd,\n \n \t  /* Indirect .sdata relocation.  */\n \tcase R_PPC_EMB_SDAI16:\n-\t  if (bfd_link_pic (info))\n-\t    {\n-\t      bad_shared_reloc (abfd, r_type);\n-\t      return FALSE;\n-\t    }\n \t  htab->sdata[0].sym->ref_regular = 1;\n \t  if (!elf_allocate_pointer_linker_section (abfd, &htab->sdata[0],\n \t\t\t\t\t\t    h, rel))\n@@ -3114,7 +3109,7 @@ ppc_elf_check_relocs (bfd *abfd,\n \n \t  /* Indirect .sdata2 relocation.  */\n \tcase R_PPC_EMB_SDA2I16:\n-\t  if (bfd_link_pic (info))\n+\t  if (!bfd_link_executable (info))\n \t    {\n \t      bad_shared_reloc (abfd, r_type);\n \t      return FALSE;\n@@ -3160,7 +3155,7 @@ ppc_elf_check_relocs (bfd *abfd,\n \t  break;\n \n \tcase R_PPC_EMB_SDA2REL:\n-\t  if (bfd_link_pic (info))\n+\t  if (!bfd_link_executable (info))\n \t    {\n \t      bad_shared_reloc (abfd, r_type);\n \t      return FALSE;\n@@ -3177,11 +3172,6 @@ ppc_elf_check_relocs (bfd *abfd,\n \tcase R_PPC_VLE_SDA21:\n \tcase R_PPC_EMB_SDA21:\n \tcase R_PPC_EMB_RELSDA:\n-\t  if (bfd_link_pic (info))\n-\t    {\n-\t      bad_shared_reloc (abfd, r_type);\n-\t      return FALSE;\n-\t    }\n \t  if (h != NULL)\n \t    {\n \t      ppc_elf_hash_entry (h)->has_sda_refs = TRUE;\n@@ -3194,11 +3184,6 @@ ppc_elf_check_relocs (bfd *abfd,\n \tcase R_PPC_EMB_NADDR16_LO:\n \tcase R_PPC_EMB_NADDR16_HI:\n \tcase R_PPC_EMB_NADDR16_HA:\n-\t  if (bfd_link_pic (info))\n-\t    {\n-\t      bad_shared_reloc (abfd, r_type);\n-\t      return FALSE;\n-\t    }\n \t  if (h != NULL)\n \t    h->non_got_ref = TRUE;\n \t  break;"
    }
  ]
}