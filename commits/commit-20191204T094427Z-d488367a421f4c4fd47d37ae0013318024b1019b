{
  "sha": "d488367a421f4c4fd47d37ae0013318024b1019b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDQ4ODM2N2E0MjFmNGM0ZmQ0N2QzN2FlMDAxMzMxODAyNGIxMDE5Yg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-04T09:44:27Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-04T09:44:27Z"
    },
    "message": "x86-64/Intel: fix CALL/JMP with dword operand\n\nWhile dc2be329b950 (\"i386: Only check suffix in instruction mnemonic\")\nhas made the assembler accept these in the first place (they were wrongly\nrejected before), the generated code was still wrong in that it lacked\nan operand size override. (In 64-bit code, other than in 16- and 32-bit\nones, CALL and JMP with memory operands are all entirely unambiguous: No\noperand size can have two meanings.)",
    "tree": {
      "sha": "2e7cf0601770ff42699ff8d2fa16afd9f20e217d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2e7cf0601770ff42699ff8d2fa16afd9f20e217d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d488367a421f4c4fd47d37ae0013318024b1019b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d488367a421f4c4fd47d37ae0013318024b1019b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d488367a421f4c4fd47d37ae0013318024b1019b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d488367a421f4c4fd47d37ae0013318024b1019b/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "319ff62c8ab28c846365aef65c137735f8af88cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/319ff62c8ab28c846365aef65c137735f8af88cb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/319ff62c8ab28c846365aef65c137735f8af88cb"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 31,
    "deletions": 6
  },
  "files": [
    {
      "sha": "d309806521ed9b1b7e64eb684ad719b6ba050ad2",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d488367a421f4c4fd47d37ae0013318024b1019b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d488367a421f4c4fd47d37ae0013318024b1019b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d488367a421f4c4fd47d37ae0013318024b1019b",
      "patch": "@@ -1,3 +1,11 @@\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386-intel.c (i386_intel_operand): Also handle DWORD\n+\twith 64-bit mode branches.\n+\t* testsuite/gas/i386/x86-64-jump.s: Extend Intel syntax branch\n+\toperand coverage.\n+\t* testsuite/gas/i386/x86-64-jump.d: Adjust expectations.\n+\n 2019-12-04  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (output_insn): Don't consider Cpu* settings"
    },
    {
      "sha": "51fa38d91f65672f7e1361ad4df88224123ceb64",
      "filename": "gas/config/tc-i386-intel.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d488367a421f4c4fd47d37ae0013318024b1019b/gas/config/tc-i386-intel.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d488367a421f4c4fd47d37ae0013318024b1019b/gas/config/tc-i386-intel.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386-intel.c?ref=d488367a421f4c4fd47d37ae0013318024b1019b",
      "patch": "@@ -657,11 +657,12 @@ i386_intel_operand (char *operand_string, int got_a_float)\n \t       && current_templates->start->name[3] == 0)\n \t      || current_templates->start->base_opcode == 0x62 /* bound */)\n \t    suffix = WORD_MNEM_SUFFIX;\n-\t  else if (flag_code == CODE_16BIT\n+\t  else if (flag_code != CODE_32BIT\n \t\t   && (current_templates->start->opcode_modifier.jump == JUMP\n \t\t       || current_templates->start->opcode_modifier.jump\n \t\t\t  == JUMP_DWORD))\n-\t    suffix = LONG_DOUBLE_MNEM_SUFFIX;\n+\t    suffix = flag_code == CODE_16BIT ? LONG_DOUBLE_MNEM_SUFFIX\n+\t\t\t\t\t     : WORD_MNEM_SUFFIX;\n \t  else if (got_a_float == 1)\t/* \"f...\" */\n \t    suffix = SHORT_MNEM_SUFFIX;\n \t  else"
    },
    {
      "sha": "1a1521d2782282ad046b0ea8c6ae1584c91f9215",
      "filename": "gas/testsuite/gas/i386/x86-64-jump.d",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d488367a421f4c4fd47d37ae0013318024b1019b/gas/testsuite/gas/i386/x86-64-jump.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d488367a421f4c4fd47d37ae0013318024b1019b/gas/testsuite/gas/i386/x86-64-jump.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-jump.d?ref=d488367a421f4c4fd47d37ae0013318024b1019b",
      "patch": "@@ -31,14 +31,22 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\te3 00                \tjrcxz  0x69\t68: R_X86_64_PC8\t\\$\\+0x1\n [ \t]*[a-f0-9]+:\t90                   \tnop\n [ \t]*[a-f0-9]+:\t66 ff 13             \tcallw  \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\t66 ff 1b             \tlcallw \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\tff 1b                \tlcall  \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\tff 13                \tcallq  \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\tff 13                \tcallq  \\*\\(%rbx\\)\n [ \t]*[a-f0-9]+:\tff 1b                \tlcall  \\*\\(%rbx\\)\n [ \t]*[a-f0-9]+:\t66 ff 23             \tjmpw   \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\t66 ff 2b             \tljmpw  \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\tff 2b                \tljmp   \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\tff 23                \tjmpq   \\*\\(%rbx\\)\n+[ \t]*[a-f0-9]+:\tff 23                \tjmpq   \\*\\(%rbx\\)\n [ \t]*[a-f0-9]+:\tff 2b                \tljmp   \\*\\(%rbx\\)\n-[ \t]*[a-f0-9]+:\teb 00                \tjmp    0x76\n+[ \t]*[a-f0-9]+:\teb 00                \tjmp    0x[0-9a-f]*\n [ \t]*[a-f0-9]+:\t90                   \tnop\n-[ \t]*[a-f0-9]+:\t67 e3 00             \tjecxz  0x7a\n+[ \t]*[a-f0-9]+:\t67 e3 00             \tjecxz  0x[0-9a-f]*\n [ \t]*[a-f0-9]+:\t90                   \tnop\n-[ \t]*[a-f0-9]+:\te3 00                \tjrcxz  0x7d\n+[ \t]*[a-f0-9]+:\te3 00                \tjrcxz  0x[0-9a-f]*\n [ \t]*[a-f0-9]+:\t90                   \tnop\n-[ \t]*[a-f0-9]+:\teb 00                \tjmp    0x80\n+[ \t]*[a-f0-9]+:\teb 00                \tjmp    0x[0-9a-f]*\n #pass"
    },
    {
      "sha": "104ed53d0807b8b9a4606519be8ebec05a403220",
      "filename": "gas/testsuite/gas/i386/x86-64-jump.s",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d488367a421f4c4fd47d37ae0013318024b1019b/gas/testsuite/gas/i386/x86-64-jump.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d488367a421f4c4fd47d37ae0013318024b1019b/gas/testsuite/gas/i386/x86-64-jump.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-jump.s?ref=d488367a421f4c4fd47d37ae0013318024b1019b",
      "patch": "@@ -29,9 +29,17 @@\n \n \t.intel_syntax noprefix\n \tcall\tword ptr [rbx]\n+\tcall\tdword ptr [rbx]\n \tcall\tfword ptr [rbx]\n+\tcall\tqword ptr [rbx]\n+\tcall\tnear ptr [rbx]\n+\tcall\tfar ptr [rbx]\n \tjmp\tword ptr [rbx]\n+\tjmp\tdword ptr [rbx]\n \tjmp\tfword ptr [rbx]\n+\tjmp\tqword ptr [rbx]\n+\tjmp\tnear ptr [rbx]\n+\tjmp\tfar ptr [rbx]\n \tjmp\t$+2\n \tnop\n \tjecxz\t3+$"
    }
  ]
}