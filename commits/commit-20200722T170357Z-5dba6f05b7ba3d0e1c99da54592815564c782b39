{
  "sha": "5dba6f05b7ba3d0e1c99da54592815564c782b39",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWRiYTZmMDViN2JhM2QwZTFjOTlkYTU0NTkyODE1NTY0Yzc4MmIzOQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-05T22:18:06Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T17:03:57Z"
    },
    "message": "ld: new options --ctf-variables and --ctf-share-types\n\nlibctf recently changed to make it possible to not emit the CTF\nvariables section.  Make this the default for ld: the variables section\nis a simple name -> type mapping, and the names can be quite voluminous.\nNothing in the variables section appears in the symbol table, by\ndefinition, so GDB cannot make use of them: special-purpose projects\nthat implement their own analogues of symbol table lookup can do so, but\nthey'll need to tell the linker to emit the variables section after all.\n\nThe new --ctf-variables option does this.\n\nThe --ctf-share-types option (valid values \"share-duplicated\" and\n\"share-unconflicted\") allow the caller to specify the CTF link mode.\nMost users will want share-duplicated, since it allows for more\nconvenient debugging: but very large projects composed of many decoupled\ncomponents may want to use share-unconflicted mode, which places types\nthat appear in only one TU into per-TU dicts.  (They may also want to\nrelink the CTF using the ctf_link API and cu-mapping, to make their\n\"components\" larger than a single TU.  Right now the linker does not\nexpose the CU-mapping machinery.  Perhaps it should in future to make\nthis use case easier.)\n\nFor now, giving the linker the ability to emit share-duplicated CTF lets\nus add testcases for that mode to the testsuite.\n\nld/\n\t* ldlex.h (option_values) <OPTION_CTF_VARIABLES,\n\tOPTION_NO_CTF_VARIABLES, OPTION_CTF_SHARE_TYPES>: New.\n\t* ld.h (ld_config_type) <ctf_variables, ctf_share_duplicated>:\n\tNew fields.\n\t* ldlang.c (lang_merge_ctf): Use them.\n\t* lexsup.c (ld_options): Add ctf-variables, no-ctf-variables,\n\tctf-share-types.\n\t(parse_args) <OPTION_CTF_VARIABLES, OPTION_NO_CTF_VARIABLES,\n\tOPTION_CTF_SHARE_TYPES>: New cases.\n\t* ld.texi: Document new options.\n\t* NEWS: Likewise.",
    "tree": {
      "sha": "61183e2ed21e7b52a7f8540a844f2208cb6e28b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/61183e2ed21e7b52a7f8540a844f2208cb6e28b9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5dba6f05b7ba3d0e1c99da54592815564c782b39",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5dba6f05b7ba3d0e1c99da54592815564c782b39",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5dba6f05b7ba3d0e1c99da54592815564c782b39",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5dba6f05b7ba3d0e1c99da54592815564c782b39/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f320bba50ff0aab7ce342ab9e3d25f49fc45d468",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f320bba50ff0aab7ce342ab9e3d25f49fc45d468",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f320bba50ff0aab7ce342ab9e3d25f49fc45d468"
    }
  ],
  "stats": {
    "total": 108,
    "additions": 107,
    "deletions": 1
  },
  "files": [
    {
      "sha": "b45da76422ade86a2fc73c25e00f313a9065a220",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=5dba6f05b7ba3d0e1c99da54592815564c782b39",
      "patch": "@@ -1,3 +1,17 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ldlex.h (option_values) <OPTION_CTF_VARIABLES,\n+\tOPTION_NO_CTF_VARIABLES, OPTION_CTF_SHARE_TYPES>: New.\n+\t* ld.h (ld_config_type) <ctf_variables, ctf_share_duplicated>:\n+\tNew fields.\n+\t* ldlang.c (lang_merge_ctf): Use them.\n+\t* lexsup.c (ld_options): Add ctf-variables, no-ctf-variables,\n+\tctf-share-types.\n+\t(parse_args) <OPTION_CTF_VARIABLES, OPTION_NO_CTF_VARIABLES,\n+\tOPTION_CTF_SHARE_TYPES>: New cases.\n+\t* ld.texi: Document new options.\n+\t* NEWS: Likewise.\n+\n 2020-07-22  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n \n \t* ldlang.c (lang_merge_ctf): Turn errors into warnings."
    },
    {
      "sha": "0fea911feaf5aab838aba1bc6ba079d0a83491ab",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=5dba6f05b7ba3d0e1c99da54592815564c782b39",
      "patch": "@@ -1,5 +1,15 @@\n -*- text -*-\n \n+* The linker now deduplicates the types in .ctf sections.  The new\n+  command-line option --ctf-share-types describes how to do this:\n+  its default value, share-unconflicted, produces the most compact\n+  output.\n+\n+* The linker now omits the \"variable section\" from .ctf sections by\n+  default, saving space.  This is almost certainly what you want\n+  unless you are working on a project that has its own analogue\n+  of symbol tables that are not reflected in the ELF symtabs.\n+\n Changes in 2.35:\n \n * X86 NaCl target support is removed."
    },
    {
      "sha": "7f7d71672e672a76356cb0775fa9afe3d29c6f5c",
      "filename": "ld/ld.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ld.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ld.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.h?ref=5dba6f05b7ba3d0e1c99da54592815564c782b39",
      "patch": "@@ -302,6 +302,14 @@ typedef struct\n \n   /* If set, print discarded sections in map file output.  */\n   bfd_boolean print_map_discarded;\n+\n+  /* If set, emit the names and types of statically-linked variables\n+     into the CTF.  */\n+  bfd_boolean ctf_variables;\n+\n+  /* If set, share only duplicated types in CTF, rather than sharing\n+     all types that are not in conflict.  */\n+  bfd_boolean ctf_share_duplicated;\n } ld_config_type;\n \n extern ld_config_type config;"
    },
    {
      "sha": "b9b331b35605f92b3bb17309d1cab18580f3ec96",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=5dba6f05b7ba3d0e1c99da54592815564c782b39",
      "patch": "@@ -1612,6 +1612,40 @@ definition.  If the symbol is defined as a common value then any files\n where this happens appear next.  Finally any files that reference the\n symbol are listed.\n \n+@cindex ctf variables\n+@kindex --ctf-variables\n+@kindex --no-ctf-variables\n+@item --ctf-variables\n+@item --no-ctf-variables\n+The CTF debuginfo format supports a section which encodes the names and\n+types of variables found in the program which do not appear in any symbol\n+table. These variables clearly cannot be looked up by address by\n+conventional debuggers, so the space used for their types and names is\n+usually wasted: the types are usually small but the names are often not.\n+@option{--ctf-variables} causes the generation of such a section.\n+The default behaviour can be restored with @option{--no-ctf-variables}.\n+\n+@cindex ctf type sharing\n+@kindex --ctf-share-types\n+@item --ctf-share-types=@var{method}\n+Adjust the method used to share types between translation units in CTF.\n+\n+@table @samp\n+@item share-unconflicted\n+Put all types that do not have ambiguous definitions into the shared dictionary,\n+where debuggers can easily access them, even if they only occur in one\n+translation unit.  This is the default.\n+\n+@item share-duplicated\n+Put only types that occur in multiple translation units into the shared\n+dictionary: types with only one definition go into per-translation-unit\n+dictionaries.  Types with ambiguous definitions in multiple translation units\n+always go into per-translation-unit dictionaries.  This tends to make the CTF\n+larger, but may reduce the amount of CTF in the shared dictionary.  For very\n+large projects this may speed up opening the CTF and save memory in the CTF\n+consumer at runtime.\n+@end table\n+\n @cindex common allocation\n @kindex --no-define-common\n @item --no-define-common"
    },
    {
      "sha": "bf29144330d5249b4a5cb16b8e6cf66247201ffa",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=5dba6f05b7ba3d0e1c99da54592815564c782b39",
      "patch": "@@ -3755,6 +3755,7 @@ static void\n lang_merge_ctf (void)\n {\n   asection *output_sect;\n+  int flags = 0;\n \n   if (!ctf_output)\n     return;\n@@ -3791,7 +3792,14 @@ lang_merge_ctf (void)\n \t}\n     }\n \n-  if (ctf_link (ctf_output, CTF_LINK_SHARE_UNCONFLICTED) < 0)\n+  if (!config.ctf_share_duplicated)\n+    flags = CTF_LINK_SHARE_UNCONFLICTED;\n+  else\n+    flags = CTF_LINK_SHARE_DUPLICATED;\n+  if (!config.ctf_variables)\n+    flags |= CTF_LINK_OMIT_VARIABLES_SECTION;\n+\n+  if (ctf_link (ctf_output, flags) < 0)\n     {\n       einfo (_(\"%P: warning: CTF linking failed; \"\n \t       \"output will have no CTF section: `%s'\\n\"),"
    },
    {
      "sha": "6eac75cef531860d0e5cb72bb54ee9170f5679d3",
      "filename": "ld/ldlex.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ldlex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/ldlex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlex.h?ref=5dba6f05b7ba3d0e1c99da54592815564c782b39",
      "patch": "@@ -155,6 +155,9 @@ enum option_values\n   OPTION_NON_CONTIGUOUS_REGIONS,\n   OPTION_NON_CONTIGUOUS_REGIONS_WARNINGS,\n   OPTION_DEPENDENCY_FILE,\n+  OPTION_CTF_VARIABLES,\n+  OPTION_NO_CTF_VARIABLES,\n+  OPTION_CTF_SHARE_TYPES,\n };\n \n /* The initial parser states.  */"
    },
    {
      "sha": "2c2d0fc8ac0c7bec1ff234b3d0ddfa43f4535477",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5dba6f05b7ba3d0e1c99da54592815564c782b39/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=5dba6f05b7ba3d0e1c99da54592815564c782b39",
      "patch": "@@ -572,6 +572,18 @@ static const struct ld_option ld_options[] =\n   { {\"no-print-map-discarded\", no_argument, NULL, OPTION_NO_PRINT_MAP_DISCARDED},\n     '\\0', NULL, N_(\"Do not show discarded sections in map file output\"),\n     TWO_DASHES },\n+  { {\"ctf-variables\", no_argument, NULL, OPTION_CTF_VARIABLES},\n+    '\\0', NULL, N_(\"Emit names and types of static variables in CTF\"),\n+    TWO_DASHES },\n+  { {\"no-ctf-variables\", no_argument, NULL, OPTION_NO_CTF_VARIABLES},\n+    '\\0', NULL, N_(\"Do not emit names and types of static variables in CTF\"),\n+    TWO_DASHES },\n+  { {\"ctf-share-types=<method>\", required_argument, NULL,\n+     OPTION_CTF_SHARE_TYPES},\n+    '\\0', NULL, N_(\"How to share CTF types between translation units.\\n\"\n+\t\t   \"                                <method> is: share-unconflicted (default),\\n\"\n+\t\t   \"                                             share-duplicated\"),\n+    TWO_DASHES },\n };\n \n #define OPTION_COUNT ARRAY_SIZE (ld_options)\n@@ -1637,6 +1649,23 @@ parse_args (unsigned argc, char **argv)\n \tcase OPTION_DEPENDENCY_FILE:\n \t  config.dependency_file = optarg;\n \t  break;\n+\n+\tcase OPTION_CTF_VARIABLES:\n+\t  config.ctf_variables = TRUE;\n+\t  break;\n+\n+\tcase OPTION_NO_CTF_VARIABLES:\n+\t  config.ctf_variables = FALSE;\n+\t  break;\n+\n+\tcase OPTION_CTF_SHARE_TYPES:\n+\t  if (strcmp (optarg, \"share-unconflicted\") == 0)\n+\t    config.ctf_share_duplicated = FALSE;\n+\t  else if (strcmp (optarg, \"share-duplicated\") == 0)\n+\t    config.ctf_share_duplicated = TRUE;\n+\t  else\n+\t    einfo (_(\"%F%P: bad --ctf-share-types option: %s\\n\"), optarg);\n+\t  break;\n \t}\n     }\n "
    }
  ]
}