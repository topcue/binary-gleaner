{
  "sha": "76cf450b4ce818b298451619e80e041e6eb4ec24",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzZjZjQ1MGI0Y2U4MThiMjk4NDUxNjE5ZTgwZTA0MWU2ZWI0ZWMyNA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-12-12T19:57:03Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-12-12T20:03:45Z"
    },
    "message": "i386: Add -mbranches-within-32B-boundaries\n\nAdd -mbranches-within-32B-boundaries to enable\n\n-malign-branch-boundary=32\n-malign-branch=jcc+fused+jmp\n-malign-branch-prefix-size=5\n\n\t* config/tc-i386.c (OPTION_MBRANCHES_WITH_32B_BOUNDARIES): New.\n\t(md_longopts): Add -mbranches-within-32B-boundaries.\n\t(md_parse_option): Handle -mbranches-within-32B-boundaries.\n\t(md_show_usage): Add -mbranches-within-32B-boundaries.",
    "tree": {
      "sha": "a98323a4931de9b690d0607773ee3df61c19df44",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a98323a4931de9b690d0607773ee3df61c19df44"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/76cf450b4ce818b298451619e80e041e6eb4ec24",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76cf450b4ce818b298451619e80e041e6eb4ec24",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/76cf450b4ce818b298451619e80e041e6eb4ec24",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76cf450b4ce818b298451619e80e041e6eb4ec24/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e379e5f385f874adb0b414f917adb1fc50e20de9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e379e5f385f874adb0b414f917adb1fc50e20de9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e379e5f385f874adb0b414f917adb1fc50e20de9"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 31,
    "deletions": 0
  },
  "files": [
    {
      "sha": "c6f776c028f5f22a9352c793601f601cf8a3096f",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/76cf450b4ce818b298451619e80e041e6eb4ec24/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/76cf450b4ce818b298451619e80e041e6eb4ec24/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=76cf450b4ce818b298451619e80e041e6eb4ec24",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/tc-i386.c (OPTION_MBRANCHES_WITH_32B_BOUNDARIES): New.\n+\t(md_longopts): Add -mbranches-within-32B-boundaries.\n+\t(md_parse_option): Handle -mbranches-within-32B-boundaries.\n+\t(md_show_usage): Add -mbranches-within-32B-boundaries.\n+\n 2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/tc-i386.c (_i386_insn): Add has_gotpc_tls_reloc."
    },
    {
      "sha": "6c71fc4d223b989e6b1bdfe4a5c8906d48aa1ffa",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/76cf450b4ce818b298451619e80e041e6eb4ec24/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/76cf450b4ce818b298451619e80e041e6eb4ec24/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=76cf450b4ce818b298451619e80e041e6eb4ec24",
      "patch": "@@ -12000,6 +12000,7 @@ const char *md_shortopts = \"qnO::\";\n #define OPTION_MALIGN_BRANCH_BOUNDARY (OPTION_MD_BASE + 27)\n #define OPTION_MALIGN_BRANCH_PREFIX_SIZE (OPTION_MD_BASE + 28)\n #define OPTION_MALIGN_BRANCH (OPTION_MD_BASE + 29)\n+#define OPTION_MBRANCHES_WITH_32B_BOUNDARIES (OPTION_MD_BASE + 30)\n \n struct option md_longopts[] =\n {\n@@ -12038,6 +12039,7 @@ struct option md_longopts[] =\n   {\"malign-branch-boundary\", required_argument, NULL, OPTION_MALIGN_BRANCH_BOUNDARY},\n   {\"malign-branch-prefix-size\", required_argument, NULL, OPTION_MALIGN_BRANCH_PREFIX_SIZE},\n   {\"malign-branch\", required_argument, NULL, OPTION_MALIGN_BRANCH},\n+  {\"mbranches-within-32B-boundaries\", no_argument, NULL, OPTION_MBRANCHES_WITH_32B_BOUNDARIES},\n   {\"mamd64\", no_argument, NULL, OPTION_MAMD64},\n   {\"mintel64\", no_argument, NULL, OPTION_MINTEL64},\n   {NULL, no_argument, NULL, 0}\n@@ -12500,6 +12502,14 @@ md_parse_option (int c, const char *arg)\n       free (saved);\n       break;\n \n+    case OPTION_MBRANCHES_WITH_32B_BOUNDARIES:\n+      align_branch_power = 5;\n+      align_branch_prefix_size = 5;\n+      align_branch = (align_branch_jcc_bit\n+\t\t      | align_branch_fused_bit\n+\t\t      | align_branch_jmp_bit);\n+      break;\n+\n     case OPTION_MAMD64:\n       intel64 = 0;\n       break;\n@@ -12763,6 +12773,9 @@ md_show_usage (FILE *stream)\n   -malign-branch-prefix-size=NUM (default: 5)\\n\\\n                           align branches with NUM prefixes per instruction\\n\"));\n   fprintf (stream, _(\"\\\n+  -mbranches-within-32B-boundaries\\n\\\n+                          align branches within 32 byte boundary\\n\"));\n+  fprintf (stream, _(\"\\\n   -mamd64                 accept only AMD64 ISA [default]\\n\"));\n   fprintf (stream, _(\"\\\n   -mintel64               accept only Intel64 ISA\\n\"));"
    },
    {
      "sha": "08f139cc1501fc5f1ab27d9559d6348794a94d56",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/76cf450b4ce818b298451619e80e041e6eb4ec24/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/76cf450b4ce818b298451619e80e041e6eb4ec24/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=76cf450b4ce818b298451619e80e041e6eb4ec24",
      "patch": "@@ -449,6 +449,17 @@ This option specifies the maximum number of prefixes on an instruction\n to align branches.  @var{NUM} should be between 0 and 5.  The default\n @var{NUM} is 5.\n \n+@cindex @samp{-mbranches-within-32B-boundaries} option, i386\n+@cindex @samp{-mbranches-within-32B-boundaries} option, x86-64\n+@item -mbranches-within-32B-boundaries\n+This option aligns conditional jumps, fused conditional jumps and\n+unconditional jumps within 32 byte boundary with up to 5 segment prefixes\n+on an instruction.  It is equivalent to\n+@option{-malign-branch-boundary=32}\n+@option{-malign-branch=jcc+fused+jmp}\n+@option{-malign-branch-prefix-size=5}.\n+The default doesn't align branches.\n+\n @cindex @samp{-mx86-used-note=} option, i386\n @cindex @samp{-mx86-used-note=} option, x86-64\n @item -mx86-used-note=@var{no}"
    }
  ]
}