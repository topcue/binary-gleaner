{
  "sha": "6d14d64dfefef524398f45fd59c1443ebac624f6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQxNGQ2NGRmZWZlZjUyNDM5OGY0NWZkNTljMTQ0M2ViYWM2MjRmNg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-10T20:17:00Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-23T21:50:29Z"
    },
    "message": "gdb/sh: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* sh-tdep.c (sh_unwind_sp): Delete.\n\t(sh_unwind_pc): Delete.\n\t(sh_dummy_id): Delete.\n\t(sh_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "ed3ef9ec2751d2ed9a4b433ccb1178cade8efce8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ed3ef9ec2751d2ed9a4b433ccb1178cade8efce8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d14d64dfefef524398f45fd59c1443ebac624f6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d14d64dfefef524398f45fd59c1443ebac624f6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d14d64dfefef524398f45fd59c1443ebac624f6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d14d64dfefef524398f45fd59c1443ebac624f6/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a40dde9db56ffcea8c2b99e8c4e292ce64f64f9c"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 8,
    "deletions": 25
  },
  "files": [
    {
      "sha": "28f16788d8afabc58d546d091dc892ced607c485",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d14d64dfefef524398f45fd59c1443ebac624f6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d14d64dfefef524398f45fd59c1443ebac624f6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6d14d64dfefef524398f45fd59c1443ebac624f6",
      "patch": "@@ -1,3 +1,11 @@\n+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* sh-tdep.c (sh_unwind_sp): Delete.\n+\t(sh_unwind_pc): Delete.\n+\t(sh_dummy_id): Delete.\n+\t(sh_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* score-tdep.c (score_unwind_sp): Delete."
    },
    {
      "sha": "8337a07501e295356405fe046142fa8304291054",
      "filename": "gdb/sh-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d14d64dfefef524398f45fd59c1443ebac624f6/gdb/sh-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d14d64dfefef524398f45fd59c1443ebac624f6/gdb/sh-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sh-tdep.c?ref=6d14d64dfefef524398f45fd59c1443ebac624f6",
      "patch": "@@ -1976,28 +1976,6 @@ static const struct frame_unwind sh_frame_unwind = {\n   default_frame_sniffer\n };\n \n-static CORE_ADDR\n-sh_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame,\n-\t\t\t\t\t gdbarch_sp_regnum (gdbarch));\n-}\n-\n-static CORE_ADDR\n-sh_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame,\n-\t\t\t\t\t gdbarch_pc_regnum (gdbarch));\n-}\n-\n-static struct frame_id\n-sh_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR sp = get_frame_register_unsigned (this_frame,\n-\t\t\t\t\t      gdbarch_sp_regnum (gdbarch));\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n static CORE_ADDR\n sh_frame_base_address (struct frame_info *this_frame, void **this_cache)\n {\n@@ -2308,9 +2286,6 @@ sh_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_believe_pcc_promotion (gdbarch, 1);\n \n   set_gdbarch_frame_align (gdbarch, sh_frame_align);\n-  set_gdbarch_unwind_sp (gdbarch, sh_unwind_sp);\n-  set_gdbarch_unwind_pc (gdbarch, sh_unwind_pc);\n-  set_gdbarch_dummy_id (gdbarch, sh_dummy_id);\n   frame_base_set_default (gdbarch, &sh_frame_base);\n \n   set_gdbarch_stack_frame_destroyed_p (gdbarch, sh_stack_frame_destroyed_p);"
    }
  ]
}