{
  "sha": "c2962e6ab47869f13d4a72bac0b25a7e86a7fb94",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzI5NjJlNmFiNDc4NjlmMTNkNGE3MmJhYzBiMjVhN2U4NmE3ZmI5NA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-07T20:28:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-07T20:28:56Z"
    },
    "message": "gdb: remove target description macros\n\nIn my opinion, the target_desc_fetched, current_target_desc and\ntarget_description_filename macros in target-descriptions.c are not very\nuseful.  I don't think it's useful to hide that they operate on the\ncurrent inferior, as everything currently works under the assumption\nthat the various tdesc commands operate on the current inferior, and I\ndon't see that changing in the foreseeable future.\n\nThis change also avoids having multiple unnecessary calls to\ncurrent_inferior and get_tdesc_info per function.\n\ngdb/ChangeLog:\n\n\t* target-descriptions.c (struct target_desc_info) <tdesc>:\n\tAdjust doc.\n\t(target_desc_fetched): Remove.\n\t(current_target_desc): Remove.\n\t(target_description_filename): Remove.\n\t(target_find_description): Adjust.\n\t(target_clear_description): Adjust.\n\t(target_current_description): Adjust.\n\t(set_tdesc_filename_cmd): Adjust.\n\t(show_tdesc_filename_cmd): Adjust.\n\t(unset_tdesc_filename_cmd): Adjust.\n\t(maint_print_c_tdesc_cmd): Adjust.\n\t(maint_print_xml_tdesc_cmd): Adjust.\n\nChange-Id: Ibfb581490e949c16d59924e2cac633ede5c26c5b",
    "tree": {
      "sha": "9cb48ce4207dcdd35f5d73c709d68a17de4a59bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9cb48ce4207dcdd35f5d73c709d68a17de4a59bb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0d315c88a77a811fdfad0b9fdaa4d8b337cc0a39",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d315c88a77a811fdfad0b9fdaa4d8b337cc0a39",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0d315c88a77a811fdfad0b9fdaa4d8b337cc0a39"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 53,
    "deletions": 38
  },
  "files": [
    {
      "sha": "5eff687b319c6201ce6d905abc796536ff85eba1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c2962e6ab47869f13d4a72bac0b25a7e86a7fb94",
      "patch": "@@ -1,3 +1,19 @@\n+2021-05-07  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* target-descriptions.c (struct target_desc_info) <tdesc>:\n+\tAdjust doc.\n+\t(target_desc_fetched): Remove.\n+\t(current_target_desc): Remove.\n+\t(target_description_filename): Remove.\n+\t(target_find_description): Adjust.\n+\t(target_clear_description): Adjust.\n+\t(target_current_description): Adjust.\n+\t(set_tdesc_filename_cmd): Adjust.\n+\t(show_tdesc_filename_cmd): Adjust.\n+\t(unset_tdesc_filename_cmd): Adjust.\n+\t(maint_print_c_tdesc_cmd): Adjust.\n+\t(maint_print_xml_tdesc_cmd): Adjust.\n+\n 2021-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* infcmd.c (notice_new_inferior): Change parameter type."
    },
    {
      "sha": "7bd05231cced21c7e0eae4dd557e4913ca4768ff",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 37,
      "deletions": 38,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2962e6ab47869f13d4a72bac0b25a7e86a7fb94/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=c2962e6ab47869f13d4a72bac0b25a7e86a7fb94",
      "patch": "@@ -450,7 +450,7 @@ struct target_desc_info\n \n   /* The description fetched from the target, or NULL if the target\n      did not supply any description.  Only valid when\n-     target_desc_fetched is set.  Only the description initialization\n+     FETCHED is set.  Only the description initialization\n      code should access this; normally, the description should be\n      accessed through the gdbarch object.  */\n \n@@ -511,15 +511,6 @@ target_desc_info_free (struct target_desc_info *tdesc_info)\n     }\n }\n \n-/* Convenience helper macros.  */\n-\n-#define target_desc_fetched \\\n-  get_tdesc_info (current_inferior ())->fetched\n-#define current_target_desc \\\n-  get_tdesc_info (current_inferior ())->tdesc\n-#define target_description_filename \\\n-  get_tdesc_info (current_inferior ())->filename\n-\n /* The string manipulated by the \"set tdesc filename ...\" command.  */\n \n static char *tdesc_filename_cmd_string;\n@@ -530,11 +521,13 @@ static char *tdesc_filename_cmd_string;\n void\n target_find_description (void)\n {\n+  target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n+\n   /* If we've already fetched a description from the target, don't do\n      it again.  This allows a target to fetch the description early,\n      during its to_open or to_create_inferior, if it needs extra\n      information about the target to initialize.  */\n-  if (target_desc_fetched)\n+  if (tdesc_info->fetched)\n     return;\n \n   /* The current architecture should not have any target description\n@@ -544,31 +537,29 @@ target_find_description (void)\n \n   /* First try to fetch an XML description from the user-specified\n      file.  */\n-  current_target_desc = NULL;\n-  if (target_description_filename != NULL\n-      && *target_description_filename != '\\0')\n-    current_target_desc\n-      = file_read_description_xml (target_description_filename);\n+  tdesc_info->tdesc = nullptr;\n+  if (tdesc_info->filename != nullptr && *tdesc_info->filename != '\\0')\n+    tdesc_info->tdesc = file_read_description_xml (tdesc_info->filename);\n \n   /* Next try to read the description from the current target using\n      target objects.  */\n-  if (current_target_desc == NULL)\n-    current_target_desc = target_read_description_xml\n+  if (tdesc_info->tdesc == nullptr)\n+    tdesc_info->tdesc = target_read_description_xml\n       (current_inferior ()->top_target ());\n \n   /* If that failed try a target-specific hook.  */\n-  if (current_target_desc == NULL)\n-    current_target_desc = target_read_description\n+  if (tdesc_info->tdesc == nullptr)\n+    tdesc_info->tdesc = target_read_description\n       (current_inferior ()->top_target ());\n \n   /* If a non-NULL description was returned, then update the current\n      architecture.  */\n-  if (current_target_desc)\n+  if (tdesc_info->tdesc != nullptr)\n     {\n       struct gdbarch_info info;\n \n       gdbarch_info_init (&info);\n-      info.target_desc = current_target_desc;\n+      info.target_desc = tdesc_info->tdesc;\n       if (!gdbarch_update_p (info))\n \twarning (_(\"Architecture rejected target-supplied description\"));\n       else\n@@ -577,7 +568,7 @@ target_find_description (void)\n \n \t  data = ((struct tdesc_arch_data *)\n \t\t  gdbarch_data (target_gdbarch (), tdesc_data));\n-\t  if (tdesc_has_registers (current_target_desc)\n+\t  if (tdesc_has_registers (tdesc_info->tdesc)\n \t      && data->arch_regs.empty ())\n \t    warning (_(\"Target-supplied registers are not supported \"\n \t\t       \"by the current architecture\"));\n@@ -586,7 +577,7 @@ target_find_description (void)\n \n   /* Now that we know this description is usable, record that we\n      fetched it.  */\n-  target_desc_fetched = 1;\n+  tdesc_info->fetched = 1;\n }\n \n /* Discard any description fetched from the current target, and switch\n@@ -595,14 +586,15 @@ target_find_description (void)\n void\n target_clear_description (void)\n {\n-  struct gdbarch_info info;\n+  target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n \n-  if (!target_desc_fetched)\n+  if (!tdesc_info->fetched)\n     return;\n \n-  target_desc_fetched = 0;\n-  current_target_desc = NULL;\n+  tdesc_info->fetched = 0;\n+  tdesc_info->tdesc = nullptr;\n \n+  gdbarch_info info;\n   gdbarch_info_init (&info);\n   if (!gdbarch_update_p (info))\n     internal_error (__FILE__, __LINE__,\n@@ -616,8 +608,10 @@ target_clear_description (void)\n const struct target_desc *\n target_current_description (void)\n {\n-  if (target_desc_fetched)\n-    return current_target_desc;\n+  target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n+\n+  if (tdesc_info->fetched)\n+    return tdesc_info->tdesc;\n \n   return NULL;\n }\n@@ -1298,8 +1292,10 @@ static void\n set_tdesc_filename_cmd (const char *args, int from_tty,\n \t\t\tstruct cmd_list_element *c)\n {\n-  xfree (target_description_filename);\n-  target_description_filename = xstrdup (tdesc_filename_cmd_string);\n+  target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n+\n+  xfree (tdesc_info->filename);\n+  tdesc_info->filename = xstrdup (tdesc_filename_cmd_string);\n \n   target_clear_description ();\n   target_find_description ();\n@@ -1310,7 +1306,7 @@ show_tdesc_filename_cmd (struct ui_file *file, int from_tty,\n \t\t\t struct cmd_list_element *c,\n \t\t\t const char *value)\n {\n-  value = target_description_filename;\n+  value = get_tdesc_info (current_inferior ())->filename;\n \n   if (value != NULL && *value != '\\0')\n     printf_filtered (_(\"The target description will be read from \\\"%s\\\".\\n\"),\n@@ -1323,8 +1319,10 @@ show_tdesc_filename_cmd (struct ui_file *file, int from_tty,\n static void\n unset_tdesc_filename_cmd (const char *args, int from_tty)\n {\n-  xfree (target_description_filename);\n-  target_description_filename = NULL;\n+  target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n+\n+  xfree (tdesc_info->filename);\n+  tdesc_info->filename = nullptr;\n   target_clear_description ();\n   target_find_description ();\n }\n@@ -1778,8 +1776,9 @@ maint_print_c_tdesc_cmd (const char *args, int from_tty)\n \t architecture's.  This lets a GDB for one architecture generate C\n \t for another architecture's description, even though the gdbarch\n \t initialization code will reject the new description.  */\n-      tdesc = current_target_desc;\n-      filename = target_description_filename;\n+      target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n+      tdesc = tdesc_info->tdesc;\n+      filename = tdesc_info->filename;\n     }\n   else\n     {\n@@ -1850,7 +1849,7 @@ maint_print_xml_tdesc_cmd (const char *args, int from_tty)\n \t architecture's.  This lets a GDB for one architecture generate XML\n \t for another architecture's description, even though the gdbarch\n \t initialization code will reject the new description.  */\n-      tdesc = current_target_desc;\n+      tdesc = get_tdesc_info (current_inferior ())->tdesc;\n     }\n   else\n     {"
    }
  ]
}