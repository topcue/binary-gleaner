{
  "sha": "37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzdhMTQxYmZlZDRkZDNjMzNkNzdjMTVkZmRlMDBlNGI0ZjViMjRjNw==",
  "commit": {
    "author": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2020-06-03T13:37:39Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-06-03T13:37:39Z"
    },
    "message": "ld: Add --export-dynamic-symbol and --export-dynamic-symbol-list\n\n--export-dynamic-symbol-list is like a dynamic list, but without\nthe symbolic property for unspecified symbols.\n\nWhen creating an executable, --export-dynamic-symbol-list is treated\nlike --dynamic-list.\n\nWhen creating a shared library, it is treated like --dynamic-list if\n-Bsymbolic or --dynamic-list are used,  otherwise, it is ignored, so\nthat references to matched symbols will not be bound to the definitions\nwithin the shared library.\n\n\tPR ld/25910\n\t* NEWS: Mention --export-dynamic-symbol[-list].\n\t* ld.texi: Document --export-dynamic-symbol[-list].\n\t* ldgram.y: Pass current_dynamic_list_p to\n\tlang_append_dynamic_list.\n\t* ldlang.c (current_dynamic_list_p): New.\n\t(ang_append_dynamic_list): Updated to take a pointer to\n\tstruct bfd_elf_dynamic_list * argument instead of using\n\tlink_info.dynamic_list.\n\t(lang_append_dynamic_list_cpp_typeinfo): Pass\n\t&link_info.dynamic_list to ang_append_dynamic_list.\n\t(lang_append_dynamic_list_cpp_new): Likewise.\n\t* ldlang.h (current_dynamic_list_p): New.\n\t(lang_append_dynamic_list): Add a pointer to\n\tstruct bfd_elf_dynamic_list * argument.\n\t* ldlex.h (option_values): Add OPTION_EXPORT_DYNAMIC_SYMBOL and\n\tOPTION_EXPORT_DYNAMIC_SYMBOL_LIST.\n\t* lexsup.c (ld_options): Add entries for\n\tOPTION_EXPORT_DYNAMIC_SYMBOL and\n\tOPTION_EXPORT_DYNAMIC_SYMBOL_LIST.\n\t(parse_args): Handle --export-dynamic-symbol and\n\t--export-dynamic-symbol-list.\n\t* testsuite/ld-dynamic/export-dynamic-symbol-1.d: New.\n\t* testsuite/ld-dynamic/export-dynamic-symbol-2.d: New.\n\t* testsuite/ld-dynamic/export-dynamic-symbol-glob.d: New.\n\t* testsuite/ld-dynamic/export-dynamic-symbol-list-1.d: New.\n\t* testsuite/ld-dynamic/export-dynamic-symbol-list-2.d: New.\n\t* testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d: New.\n\t* testsuite/ld-dynamic/export-dynamic-symbol.exp: New.\n\t* testsuite/ld-dynamic/export-dynamic-symbol.s: New.\n\t* testsuite/ld-dynamic/foo-bar.list: New.\n\t* testsuite/ld-dynamic/foo.list: New.\n\t* testsuite/ld-dynamic/foo.s: New.\n\t* testsuite/ld-dynamic/fstar.list: New.\n\t* testsuite/ld-elf/dlempty.list: New.\n\t* testsuite/ld-elf/shared.exp: Add tests for\n\t--export-dynamic-symbol and --export-dynamic-symbol-list.",
    "tree": {
      "sha": "05fc3a047c219a7e59357a758472a566e926a570",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/05fc3a047c219a7e59357a758472a566e926a570"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "433953ffa1a59531a5537327a4e3ce24565e609c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/433953ffa1a59531a5537327a4e3ce24565e609c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/433953ffa1a59531a5537327a4e3ce24565e609c"
    }
  ],
  "stats": {
    "total": 350,
    "additions": 341,
    "deletions": 9
  },
  "files": [
    {
      "sha": "799f2131538e853bcf2604a71410b999478581a9",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -1,3 +1,44 @@\n+2020-06-03  Fangrui Song  <maskray@google.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/25910\n+\t* NEWS: Mention --export-dynamic-symbol[-list].\n+\t* ld.texi: Document --export-dynamic-symbol[-list].\n+\t* ldgram.y: Pass current_dynamic_list_p to\n+\tlang_append_dynamic_list.\n+\t* ldlang.c (current_dynamic_list_p): New.\n+\t(ang_append_dynamic_list): Updated to take a pointer to\n+\tstruct bfd_elf_dynamic_list * argument instead of using\n+\tlink_info.dynamic_list.\n+\t(lang_append_dynamic_list_cpp_typeinfo): Pass\n+\t&link_info.dynamic_list to ang_append_dynamic_list.\n+\t(lang_append_dynamic_list_cpp_new): Likewise.\n+\t* ldlang.h (current_dynamic_list_p): New.\n+\t(lang_append_dynamic_list): Add a pointer to\n+\tstruct bfd_elf_dynamic_list * argument.\n+\t* ldlex.h (option_values): Add OPTION_EXPORT_DYNAMIC_SYMBOL and\n+\tOPTION_EXPORT_DYNAMIC_SYMBOL_LIST.\n+\t* lexsup.c (ld_options): Add entries for\n+\tOPTION_EXPORT_DYNAMIC_SYMBOL and\n+\tOPTION_EXPORT_DYNAMIC_SYMBOL_LIST.\n+\t(parse_args): Handle --export-dynamic-symbol and\n+\t--export-dynamic-symbol-list.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol-1.d: New.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol-2.d: New.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol-glob.d: New.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol-list-1.d: New.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol-list-2.d: New.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d: New.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol.exp: New.\n+\t* testsuite/ld-dynamic/export-dynamic-symbol.s: New.\n+\t* testsuite/ld-dynamic/foo-bar.list: New.\n+\t* testsuite/ld-dynamic/foo.list: New.\n+\t* testsuite/ld-dynamic/foo.s: New.\n+\t* testsuite/ld-dynamic/fstar.list: New.\n+\t* testsuite/ld-elf/dlempty.list: New.\n+\t* testsuite/ld-elf/shared.exp: Add tests for\n+\t--export-dynamic-symbol and --export-dynamic-symbol-list.\n+\n 2020-06-03  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/ld-elf/linux-x86.exp: Make copied source files"
    },
    {
      "sha": "485e1cf5b9a3ffcbb36e4d0d084a814a5e88e4c5",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -1,5 +1,8 @@\n -*- text -*-\n \n+* Add ELF linker command-line options, --export-dynamic-symbol and\n+  --export-dynamic-symbol-list, to make symbols dynamic.\n+\n * Add a configure option, --enable-textrel-check=[no|yes|warning|error],\n   to decide what ELF linker should do by default with DT_TEXTREL in an\n   executable or shared library.  Default to yes for Linux/x86 targets."
    },
    {
      "sha": "bf474d4c62b04f7d1de3016f6dec8b1f8ca0cfac",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -569,6 +569,24 @@ Note that this option is specific to ELF targeted ports.  PE targets\n support a similar function to export all symbols from a DLL or EXE; see\n the description of @samp{--export-all-symbols} below.\n \n+@kindex --export-dynamic-symbol=@var{glob}\n+@cindex export dynamic symbol\n+@item --export-dynamic-symbol=@var{glob}\n+When creating a dynamically linked executable, symbols matching\n+@var{glob} will be added to the dynamic symbol table. When creating a\n+shared library, references to symbols matching @var{glob} will not be\n+bound to the definitions within the shared library. This option is a\n+no-op when creating a shared library and @samp{-Bsymbolic} or\n+@samp{--dynamic-list} are not specified. This option is only meaningful\n+on ELF platforms which support shared libraries.\n+\n+@kindex --export-dynamic-symbol-list=@var{file}\n+@cindex export dynamic symbol list\n+@item --export-dynamic-symbol-list=@var{file}\n+Specify a @samp{--export-dynamic-symbol} for each pattern in the file.\n+The format of the file is the same as the version node without\n+scope and node name.  See @ref{VERSION} for more information.\n+\n @ifclear SingleFormat\n @cindex big-endian objects\n @cindex endianness"
    },
    {
      "sha": "36845c4c30447de2c874b75fa7a9d63e0ca23357",
      "filename": "ld/ldgram.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldgram.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldgram.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldgram.y?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -1313,7 +1313,7 @@ dynamic_list_node:\n dynamic_list_tag:\n \t\tvers_defns ';'\n \t\t{\n-\t\t  lang_append_dynamic_list ($1);\n+\t\t  lang_append_dynamic_list (current_dynamic_list_p, $1);\n \t\t}\n \t;\n "
    },
    {
      "sha": "14a6a577d224ecd32a5b1d00fb194d00f12f017f",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -118,6 +118,7 @@ lang_statement_list_type file_chain = { NULL, NULL };\n    lang_statement_union).  */\n lang_statement_list_type input_file_chain;\n static const char *current_input_file;\n+struct bfd_elf_dynamic_list **current_dynamic_list_p;\n struct bfd_sym_chain entry_symbol = { NULL, NULL };\n const char *entry_section = \".text\";\n struct lang_input_statement_flags input_flags;\n@@ -9324,15 +9325,16 @@ lang_add_unique (const char *name)\n /* Append the list of dynamic symbols to the existing one.  */\n \n void\n-lang_append_dynamic_list (struct bfd_elf_version_expr *dynamic)\n+lang_append_dynamic_list (struct bfd_elf_dynamic_list **list_p,\n+\t\t\t  struct bfd_elf_version_expr *dynamic)\n {\n-  if (link_info.dynamic_list)\n+  if (*list_p)\n     {\n       struct bfd_elf_version_expr *tail;\n       for (tail = dynamic; tail->next != NULL; tail = tail->next)\n \t;\n-      tail->next = link_info.dynamic_list->head.list;\n-      link_info.dynamic_list->head.list = dynamic;\n+      tail->next = (*list_p)->head.list;\n+      (*list_p)->head.list = dynamic;\n     }\n   else\n     {\n@@ -9341,7 +9343,7 @@ lang_append_dynamic_list (struct bfd_elf_version_expr *dynamic)\n       d = (struct bfd_elf_dynamic_list *) xcalloc (1, sizeof *d);\n       d->head.list = dynamic;\n       d->match = lang_vers_match;\n-      link_info.dynamic_list = d;\n+      *list_p = d;\n     }\n }\n \n@@ -9363,7 +9365,7 @@ lang_append_dynamic_list_cpp_typeinfo (void)\n     dynamic = lang_new_vers_pattern (dynamic, symbols [i], \"C++\",\n \t\t\t\t     FALSE);\n \n-  lang_append_dynamic_list (dynamic);\n+  lang_append_dynamic_list (&link_info.dynamic_list, dynamic);\n }\n \n /* Append the list of C++ operator new and delete dynamic symbols to the\n@@ -9384,7 +9386,7 @@ lang_append_dynamic_list_cpp_new (void)\n     dynamic = lang_new_vers_pattern (dynamic, symbols [i], \"C++\",\n \t\t\t\t     FALSE);\n \n-  lang_append_dynamic_list (dynamic);\n+  lang_append_dynamic_list (&link_info.dynamic_list, dynamic);\n }\n \n /* Scan a space and/or comma separated string of features.  */"
    },
    {
      "sha": "529ccd15859ec21a9cfcacb22efd9ed44e7a0d95",
      "filename": "ld/ldlang.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldlang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldlang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.h?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -513,6 +513,8 @@ extern bfd_boolean entry_from_cmdline;\n extern lang_statement_list_type file_chain;\n extern lang_statement_list_type input_file_chain;\n \n+extern struct bfd_elf_dynamic_list **current_dynamic_list_p;\n+\n extern int lang_statement_iteration;\n extern struct asneeded_minfo **asneeded_list_tail;\n \n@@ -673,7 +675,8 @@ extern struct bfd_elf_version_deps *lang_add_vers_depend\n   (struct bfd_elf_version_deps *, const char *);\n extern void lang_register_vers_node\n   (const char *, struct bfd_elf_version_tree *, struct bfd_elf_version_deps *);\n-extern void lang_append_dynamic_list (struct bfd_elf_version_expr *);\n+extern void lang_append_dynamic_list (struct bfd_elf_dynamic_list **,\n+\t\t\t\t      struct bfd_elf_version_expr *);\n extern void lang_append_dynamic_list_cpp_typeinfo (void);\n extern void lang_append_dynamic_list_cpp_new (void);\n extern void lang_add_unique"
    },
    {
      "sha": "6388247b45299e76945461d014e8dce810ea66ed",
      "filename": "ld/ldlex.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldlex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/ldlex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlex.h?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -81,6 +81,8 @@ enum option_values\n   OPTION_DYNAMIC_LIST_CPP_NEW,\n   OPTION_DYNAMIC_LIST_CPP_TYPEINFO,\n   OPTION_DYNAMIC_LIST_DATA,\n+  OPTION_EXPORT_DYNAMIC_SYMBOL,\n+  OPTION_EXPORT_DYNAMIC_SYMBOL_LIST,\n   OPTION_WARN_COMMON,\n   OPTION_WARN_CONSTRUCTORS,\n   OPTION_WARN_FATAL,"
    },
    {
      "sha": "4808f7443d146b5409aa8fb2374f016b7408fef1",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -504,6 +504,10 @@ static const struct ld_option ld_options[] =\n     '\\0', NULL, N_(\"Use C++ typeinfo dynamic list\"), TWO_DASHES },\n   { {\"dynamic-list\", required_argument, NULL, OPTION_DYNAMIC_LIST},\n     '\\0', N_(\"FILE\"), N_(\"Read dynamic list\"), TWO_DASHES },\n+  { {\"export-dynamic-symbol\", required_argument, NULL, OPTION_EXPORT_DYNAMIC_SYMBOL},\n+    '\\0', N_(\"SYMBOL\"), N_(\"Export the specified symbol\"), EXACTLY_TWO_DASHES },\n+  { {\"export-dynamic-symbol-list\", required_argument, NULL, OPTION_EXPORT_DYNAMIC_SYMBOL_LIST},\n+    '\\0', N_(\"FILE\"), N_(\"Read export dynamic symbol list\"), EXACTLY_TWO_DASHES },\n   { {\"warn-common\", no_argument, NULL, OPTION_WARN_COMMON},\n     '\\0', NULL, N_(\"Warn about duplicate common symbols\"), TWO_DASHES },\n   { {\"warn-constructors\", no_argument, NULL, OPTION_WARN_CONSTRUCTORS},\n@@ -588,6 +592,7 @@ parse_args (unsigned argc, char **argv)\n     dynamic_list_data,\n     dynamic_list\n   } opt_dynamic_list = dynamic_list_unset;\n+  struct bfd_elf_dynamic_list *export_list = NULL;\n \n   shortopts = (char *) xmalloc (OPTION_COUNT * 3 + 2);\n   longopts = (struct option *)\n@@ -1419,11 +1424,35 @@ parse_args (unsigned argc, char **argv)\n \t    ldfile_open_command_file (optarg);\n \t    saved_script_handle = hold_script_handle;\n \t    parser_input = input_dynamic_list;\n+\t    current_dynamic_list_p = &link_info.dynamic_list;\n \t    yyparse ();\n \t  }\n \t  if (opt_dynamic_list != dynamic_list_data)\n \t    opt_dynamic_list = dynamic_list;\n \t  break;\n+\tcase OPTION_EXPORT_DYNAMIC_SYMBOL:\n+\t  {\n+\t    struct bfd_elf_version_expr *expr\n+\t      = lang_new_vers_pattern (NULL, xstrdup (optarg), NULL,\n+\t\t\t\t       FALSE);\n+\t    lang_append_dynamic_list (&export_list, expr);\n+          }\n+\t  break;\n+\tcase OPTION_EXPORT_DYNAMIC_SYMBOL_LIST:\n+\t  /* This option indicates a small script that only specifies\n+\t     an export list.  Read it, but don't assume that we've\n+\t     seen a linker script.  */\n+\t  {\n+\t    FILE *hold_script_handle;\n+\n+\t    hold_script_handle = saved_script_handle;\n+\t    ldfile_open_command_file (optarg);\n+\t    saved_script_handle = hold_script_handle;\n+\t    parser_input = input_dynamic_list;\n+\t    current_dynamic_list_p = &export_list;\n+\t    yyparse ();\n+\t  }\n+\t  break;\n \tcase OPTION_WARN_COMMON:\n \t  config.warn_common = TRUE;\n \t  break;\n@@ -1666,6 +1695,49 @@ parse_args (unsigned argc, char **argv)\n       && command_line.check_section_addresses < 0)\n     command_line.check_section_addresses = 0;\n \n+  if (export_list)\n+    {\n+      struct bfd_elf_version_expr *head = export_list->head.list;\n+      struct bfd_elf_version_expr *next;\n+\n+      /* For --export-dynamic-symbol[-list]:\n+\t 1. When building executable, treat like --dynamic-list.\n+\t 2. When building shared object:\n+\t    a. If -Bsymbolic or --dynamic-list are used, treat like\n+\t       --dynamic-list.\n+\t    b. Otherwise, ignored.\n+       */\n+      if (!bfd_link_relocatable (&link_info)\n+\t  && (bfd_link_executable (&link_info)\n+\t      || opt_symbolic != symbolic_unset\n+\t      || opt_dynamic_list != dynamic_list_unset))\n+\t{\n+\t  /* Append the export list to link_info.dynamic_list.  */\n+\t  if (link_info.dynamic_list)\n+\t    {\n+\t      for (next = head; next->next != NULL; next = next->next)\n+\t\t;\n+\t      next->next = link_info.dynamic_list->head.list;\n+\t      link_info.dynamic_list->head.list = head;\n+\t    }\n+\t  else\n+\t    link_info.dynamic_list = export_list;\n+\n+\t  if (opt_dynamic_list != dynamic_list_data)\n+\t    opt_dynamic_list = dynamic_list;\n+\t}\n+      else\n+\t{\n+\t  /* Free the export list.  */\n+\t  for (; head->next != NULL; head = next)\n+\t    {\n+\t      next = head->next;\n+\t      free (head);\n+\t    }\n+\t  free (export_list);\n+\t}\n+    }\n+\n   switch (opt_dynamic_list)\n     {\n     case dynamic_list_unset:"
    },
    {
      "sha": "25ae13023e6cec9ce882e6aac1d8ded5cfa62d6e",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol-1.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol-1.d?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,9 @@\n+#name: --export-dynamic-symbol foo archive\n+#source: export-dynamic-symbol.s\n+#ld: -pie --export-dynamic-symbol foo tmpdir/libpr25910.a\n+#nm: -n\n+\n+#failif\n+#...\n+[0-9a-f]+ T +foo\n+#..."
    },
    {
      "sha": "d38508a5b5a51ce0bc9266f5fd5936b8984ef800",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol-2.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol-2.d?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,9 @@\n+#name: -u --export-dynamic-symbol foo archive\n+#source: export-dynamic-symbol.s\n+#ld: -pie -u foo --export-dynamic-symbol foo --export-dynamic-symbol=bar tmpdir/libpr25910.a\n+#nm: -D\n+\n+#...\n+[0-9a-f]+ T +bar\n+[0-9a-f]+ T +foo\n+#..."
    },
    {
      "sha": "f8187be75c7f9aa77286c6d330c65d0affbe1751",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol-glob.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-glob.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-glob.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol-glob.d?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,8 @@\n+#name: -u --export-dynamic-symbol \"f*\" archive\n+#source: export-dynamic-symbol.s\n+#ld: -pie -u foo --export-dynamic-symbol \"f*\" tmpdir/libpr25910.a\n+#nm: -D\n+\n+#...\n+[0-9a-f]+ T +foo\n+#..."
    },
    {
      "sha": "fc58af93571b76bcbf8145143b34810b112ce6c9",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol-list-1.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-1.d?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,9 @@\n+#name: --export-dynamic-symbol-list foo archive\n+#source: export-dynamic-symbol.s\n+#ld: -pie --export-dynamic-symbol-list foo.list tmpdir/libpr25910.a\n+#nm: -n\n+\n+#failif\n+#...\n+[0-9a-f]+ T +foo\n+#..."
    },
    {
      "sha": "337f642ee9eac6e78b4b78eb0318cb5632d10f12",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol-list-2.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-2.d?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,9 @@\n+#name: -u --export-dynamic-symbol-list foo bar archive\n+#source: export-dynamic-symbol.s\n+#ld: -pie -u foo --export-dynamic-symbol-list foo-bar.list tmpdir/libpr25910.a\n+#nm: -D\n+\n+#...\n+[0-9a-f]+ T +bar\n+[0-9a-f]+ T +foo\n+#..."
    },
    {
      "sha": "916a22ca239a37041248d0288f2c8983764ee9f8",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol-list-glob.d?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,8 @@\n+#name: -u --export-dynamic-symbol-list fstar archive\n+#source: export-dynamic-symbol.s\n+#ld: -pie -u foo --export-dynamic-symbol-list fstar.list tmpdir/libpr25910.a\n+#nm: -D\n+\n+#...\n+[0-9a-f]+ T +foo\n+#..."
    },
    {
      "sha": "ae530361fb14ba24c0581834783fb7cd93bf18ff",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol.exp",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol.exp?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,70 @@\n+# Expect script for ld --export-dynamic-symbol tests\n+#   Copyright (C) 2020 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+#\n+\n+if ![is_elf_format] {\n+    return\n+}\n+\n+# Skip targets where -shared is not supported\n+\n+if ![check_shared_lib_support] {\n+    return\n+}\n+\n+set old_ASFLAGS $ASFLAGS\n+\n+# These targets require extra GAS options when building code for shared\n+# libraries.\n+if [istarget \"nds32*-*\"] {\n+    append ASFLAGS \" -mpic\"\n+}\n+if [istarget \"tic6x-*-*\"] {\n+    append ASFLAGS \" -mpic -mpid=near\"\n+}\n+if [istarget \"sparc*-*-*\"] {\n+    append ASFLAGS \" -K PIC -Av9\"\n+}\n+\n+set old_LDFLAGS $LDFLAGS\n+\n+# These targets require a non-default emulation for successful shared\n+# library/executable builds.\n+if [istarget \"tic6x-*-*\"] {\n+    append LDFLAGS \" -melf32_tic6x_le\"\n+}\n+\n+set build_tests {\n+  {\"Build libpr25910.a\"\n+   \"\" \"\" \"\"\n+   {foo.s} {} \"libpr25910.a\"}\n+}\n+\n+run_ld_link_tests $build_tests\n+\n+set test_list [lsort [glob -nocomplain $srcdir/$subdir/export-dynamic-symbol-*.d]]\n+foreach test_file $test_list {\n+    set test_name [file rootname $test_file]\n+    verbose $test_name\n+    run_dump_test $test_name\n+}\n+\n+set ASFLAGS $old_ASFLAGS\n+set LDFLAGS $old_LDFLAGS"
    },
    {
      "sha": "c55da536c550e97fb20877d32118f8a5e487e532",
      "filename": "ld/testsuite/ld-dynamic/export-dynamic-symbol.s",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/export-dynamic-symbol.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/export-dynamic-symbol.s?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,17 @@\n+\t.text\n+\t.global start\t/* Used by SH targets.  */\n+start:\n+\t.global _start\n+_start:\n+\t.global __start\n+__start:\n+\t.global main\t/* Used by HPPA targets.  */\n+main:\n+\t.globl\t_main\t/* Used by LynxOS targets.  */\n+_main:\n+\t.word 0\n+\n+\t.section .text.1, \"ax\"\n+\t.global bar\n+bar:\n+\t.word 0"
    },
    {
      "sha": "87732e1de4d440e48deae223d86efca93b3fa8a7",
      "filename": "ld/testsuite/ld-dynamic/foo-bar.list",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/foo-bar.list",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/foo-bar.list",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/foo-bar.list?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1 @@\n+{ foo; bar; };"
    },
    {
      "sha": "f89f569438f32e207f30419eb8a005c77ccc3bdd",
      "filename": "ld/testsuite/ld-dynamic/foo.list",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/foo.list",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/foo.list",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/foo.list?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1 @@\n+{ foo; };"
    },
    {
      "sha": "4a70181776f111acfebab68a75998ed8d95b16d3",
      "filename": "ld/testsuite/ld-dynamic/foo.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/foo.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/foo.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/foo.s?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,4 @@\n+\t.text\n+\t.globl foo\n+foo:\n+\t.byte 0"
    },
    {
      "sha": "330d1dd2b837878bbd1d369cc3774eb92c09ee69",
      "filename": "ld/testsuite/ld-dynamic/fstar.list",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/fstar.list",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-dynamic/fstar.list",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-dynamic/fstar.list?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1 @@\n+{ f*; };"
    },
    {
      "sha": "9b3884b10ec77389983abdeed6ec2a56af970396",
      "filename": "ld/testsuite/ld-elf/dlempty.list",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-elf/dlempty.list",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-elf/dlempty.list",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/dlempty.list?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -0,0 +1,3 @@\n+{\n+  empty;\n+};"
    },
    {
      "sha": "5606c9937fbc4a725d11ee716635dc6b2214ee92",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=37a141bfed4dd3c33d77c15dfde00e4b4f5b24c7",
      "patch": "@@ -601,6 +601,27 @@ set build_tests {\n   {\"Build libdl2d.so with --dynamic-list-data -Bsymbolic\"\n    \"-shared -Wl,-Bsymbolic,--dynamic-list-data\" \"-fPIC\"\n    {dl2.c dl2xxx.c} {} \"libdl2d.so\"}\n+  {\"Build libdl2e.so with --export-dynamic-symbol=foo\"\n+   \"-shared -Wl,--export-dynamic-symbol=foo\" \"-fPIC\"\n+   {dl2.c dl2xxx.c} {} \"libdl2e.so\"}\n+  {\"Build libdl2f.so with --dynamic-list=dlempty.list and --export-dynamic-symbol=foo\"\n+   \"-shared -Wl,--dynamic-list=dlempty.list,--export-dynamic-symbol=foo\" \"-fPIC\"\n+   {dl2.c dl2xxx.c} {} \"libdl2f.so\"}\n+  {\"Build libdl2g.so with --export-dynamic-symbol-list=dl2.list\"\n+   \"-shared -Wl,--export-dynamic-symbol-list=dl2.list\" \"-fPIC\"\n+   {dl2.c dl2xxx.c} {} \"libdl2g.so\"}\n+  {\"Build libdl2h.so with --dynamic-list=dlempty.list and --export-dynamic-symbol-list=dl2.list\"\n+   \"-shared -Wl,--dynamic-list=dlempty.list,--export-dynamic-symbol-list=dl2.list\" \"-fPIC\"\n+   {dl2.c dl2xxx.c} {} \"libdl2h.so\"}\n+  {\"Build libdl2i.so with -Bsymbolic and --export-dynamic-symbol=foo\"\n+   \"-shared -Wl,-Bsymbolic,--export-dynamic-symbol=foo\" \"-fPIC\"\n+   {dl2.c dl2xxx.c} {} \"libdl2i.so\"}\n+  {\"Build libdl2j.so with -Bsymbolic and --export-dynamic-symbol-list=dl2.list\"\n+   \"-shared -Wl,-Bsymbolic,--export-dynamic-symbol-list=dl2.list\" \"-fPIC\"\n+   {dl2.c dl2xxx.c} {} \"libdl2j.so\"}\n+  {\"Build libdl2k.so with --export-dynamic-symbol-list=dl2.list and -Bsymbolic\"\n+   \"-shared -Wl,--export-dynamic-symbol-list=dl2.list,-Bsymbolic\" \"-fPIC\"\n+   {dl2.c dl2xxx.c} {} \"libdl2k.so\"}\n   {\"Build libdl4a.so with --dynamic-list=dl4.list\"\n    \"-shared -Wl,--dynamic-list=dl4.list\" \"-fPIC\"\n    {dl4.c dl4xxx.c} {} \"libdl4a.so\"}\n@@ -880,6 +901,27 @@ set run_tests [list \\\n     [list \"Run with libdl2d.so\" \\\n      \"-Wl,--no-as-needed tmpdir/libdl2d.so\" \"\" \\\n      {dl2main.c} \"dl2d\" \"dl2a.out\" ] \\\n+    [list \"Run with libdl2e.so\" \\\n+     \"-Wl,--no-as-needed tmpdir/libdl2e.so\" \"\" \\\n+     {dl2main.c} \"dl2e\" \"dl2b.out\" ] \\\n+    [list \"Run with libdl2f.so\" \\\n+     \"-Wl,--no-as-needed tmpdir/libdl2f.so\" \"\" \\\n+     {dl2main.c} \"dl2f\" \"dl2a.out\" ] \\\n+    [list \"Run with libdl2g.so\" \\\n+     \"-Wl,--no-as-needed tmpdir/libdl2g.so\" \"\" \\\n+     {dl2main.c} \"dl2g\" \"dl2b.out\" ] \\\n+    [list \"Run with libdl2h.so\" \\\n+     \"-Wl,--no-as-needed tmpdir/libdl2h.so\" \"\" \\\n+     {dl2main.c} \"dl2h\" \"dl2a.out\" ] \\\n+    [list \"Run with libdl2i.so\" \\\n+     \"-Wl,--no-as-needed tmpdir/libdl2i.so\" \"\" \\\n+     {dl2main.c} \"dl2i\" \"dl2a.out\" ] \\\n+    [list \"Run with libdl2j.so\" \\\n+     \"-Wl,--no-as-needed tmpdir/libdl2j.so\" \"\" \\\n+     {dl2main.c} \"dl2j\" \"dl2a.out\" ] \\\n+    [list \"Run with libdl2k.so\" \\\n+     \"-Wl,--no-as-needed tmpdir/libdl2k.so\" \"\" \\\n+     {dl2main.c} \"dl2k\" \"dl2a.out\" ] \\\n     [list \"Run with libdl4a.so\" \\\n      \"-Wl,--no-as-needed tmpdir/libdl4a.so\" \"\" \\\n      {dl4main.c} \"dl4a\" \"dl4a.out\" ] \\"
    }
  ]
}