{
  "sha": "833a4480dd7cadfd645d7b141168a0e22dc50665",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODMzYTQ0ODBkZDdjYWRmZDY0NWQ3YjE0MTE2OGEwZTIyZGM1MDY2NQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-10T20:08:18Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-23T21:50:27Z"
    },
    "message": "gdb/rs6000: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* rs6000-tdep.c (rs6000_unwind_pc): Delete.\n\t(rs6000_dummy_id): Delete.\n\t(rs6000_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "f24633106adb449c3320377f7785a446e50a2bea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f24633106adb449c3320377f7785a446e50a2bea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/833a4480dd7cadfd645d7b141168a0e22dc50665",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/833a4480dd7cadfd645d7b141168a0e22dc50665",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/833a4480dd7cadfd645d7b141168a0e22dc50665",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/833a4480dd7cadfd645d7b141168a0e22dc50665/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f2cef4945a916e3b566010340bbc70cfe927916",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f2cef4945a916e3b566010340bbc70cfe927916",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f2cef4945a916e3b566010340bbc70cfe927916"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 7,
    "deletions": 18
  },
  "files": [
    {
      "sha": "0c8fcced6813751f7edc0dbd60506b2b48a02c8d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/833a4480dd7cadfd645d7b141168a0e22dc50665/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/833a4480dd7cadfd645d7b141168a0e22dc50665/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=833a4480dd7cadfd645d7b141168a0e22dc50665",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* rs6000-tdep.c (rs6000_unwind_pc): Delete.\n+\t(rs6000_dummy_id): Delete.\n+\t(rs6000_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* or1k-tdep.c (or1k_dummy_id): Delete."
    },
    {
      "sha": "328b41cc595c2257e708ef2ebcf8764f1ffec5d0",
      "filename": "gdb/rs6000-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/833a4480dd7cadfd645d7b141168a0e22dc50665/gdb/rs6000-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/833a4480dd7cadfd645d7b141168a0e22dc50665/gdb/rs6000-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rs6000-tdep.c?ref=833a4480dd7cadfd645d7b141168a0e22dc50665",
      "patch": "@@ -3404,20 +3404,6 @@ find_variant_by_arch (enum bfd_architecture arch, unsigned long mach)\n }\n \n \f\n-static CORE_ADDR\n-rs6000_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame,\n-\t\t\t\t\t gdbarch_pc_regnum (gdbarch));\n-}\n-\n-static struct frame_id\n-rs6000_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return frame_id_build (get_frame_register_unsigned\n-\t\t\t  (this_frame, gdbarch_sp_regnum (gdbarch)),\n-\t\t\t get_frame_pc (this_frame));\n-}\n \n struct rs6000_frame_cache\n {\n@@ -7101,19 +7087,15 @@ rs6000_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n     case GDB_OSABI_LINUX:\n     case GDB_OSABI_NETBSD:\n     case GDB_OSABI_UNKNOWN:\n-      set_gdbarch_unwind_pc (gdbarch, rs6000_unwind_pc);\n       frame_unwind_append_unwinder (gdbarch, &rs6000_epilogue_frame_unwind);\n       frame_unwind_append_unwinder (gdbarch, &rs6000_frame_unwind);\n-      set_gdbarch_dummy_id (gdbarch, rs6000_dummy_id);\n       frame_base_append_sniffer (gdbarch, rs6000_frame_base_sniffer);\n       break;\n     default:\n       set_gdbarch_believe_pcc_promotion (gdbarch, 1);\n \n-      set_gdbarch_unwind_pc (gdbarch, rs6000_unwind_pc);\n       frame_unwind_append_unwinder (gdbarch, &rs6000_epilogue_frame_unwind);\n       frame_unwind_append_unwinder (gdbarch, &rs6000_frame_unwind);\n-      set_gdbarch_dummy_id (gdbarch, rs6000_dummy_id);\n       frame_base_append_sniffer (gdbarch, rs6000_frame_base_sniffer);\n     }\n "
    }
  ]
}