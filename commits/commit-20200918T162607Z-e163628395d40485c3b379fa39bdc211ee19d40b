{
  "sha": "e163628395d40485c3b379fa39bdc211ee19d40b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTE2MzYyODM5NWQ0MDQ4NWMzYjM3OWZhMzliZGMyMTFlZTE5ZDQwYg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-13T20:48:31Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-09-18T16:26:07Z"
    },
    "message": "sim/m32r: return register sizes after fetch and store\n\nThe m32r simulator currently always returns -1 for the register size\nafter both a fetch and a store.  In the fetch case GDB is forgiving of\nthis, but in the store case GDB treats a return value of -1 as an\nerror.\n\nThis commit updates the m32r simulator to return a valid register size\nwhen fetching or storing a register.  This fixes any GDB test that\nwrites to a register, which will include any GDB test that makes an\ninferior call, for example gdb.base/break.exp.\n\nsim/m32r/ChangeLog:\n\n\t* m32r.c (m32rbf_register_size): New function.\n\t(m32rbf_fetch_register): Use new function.\n\t(m32rbf_store_register): Likewise.",
    "tree": {
      "sha": "2e037263e3a38a783b4f41812fcee0e99d9b06f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2e037263e3a38a783b4f41812fcee0e99d9b06f7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e163628395d40485c3b379fa39bdc211ee19d40b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e163628395d40485c3b379fa39bdc211ee19d40b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e163628395d40485c3b379fa39bdc211ee19d40b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e163628395d40485c3b379fa39bdc211ee19d40b/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d3483b43ff12afe3db2bed7184b7113cbaa358a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3483b43ff12afe3db2bed7184b7113cbaa358a5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d3483b43ff12afe3db2bed7184b7113cbaa358a5"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 24,
    "deletions": 2
  },
  "files": [
    {
      "sha": "05f478b41db94f2c5940a63cb73ef7a57a128004",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e163628395d40485c3b379fa39bdc211ee19d40b/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e163628395d40485c3b379fa39bdc211ee19d40b/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=e163628395d40485c3b379fa39bdc211ee19d40b",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-18  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* m32r.c (m32rbf_register_size): New function.\n+\t(m32rbf_fetch_register): Use new function.\n+\t(m32rbf_store_register): Likewise.\n+\n 2017-09-06  John Baldwin  <jhb@FreeBSD.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "8936b677bcf087d6568dc2119459bb70a4cf5744",
      "filename": "sim/m32r/m32r.c",
      "status": "modified",
      "additions": 18,
      "deletions": 2,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e163628395d40485c3b379fa39bdc211ee19d40b/sim/m32r/m32r.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e163628395d40485c3b379fa39bdc211ee19d40b/sim/m32r/m32r.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/m32r.c?ref=e163628395d40485c3b379fa39bdc211ee19d40b",
      "patch": "@@ -24,6 +24,14 @@\n #include \"cgen-mem.h\"\n #include \"cgen-ops.h\"\n \n+/* Return the size of REGNO in bytes.  */\n+\n+static int\n+m32rbf_register_size (int regno)\n+{\n+  return 4;\n+}\n+\n /* Decode gdb ctrl register number.  */\n \n int\n@@ -48,6 +56,10 @@ m32r_decode_gdb_ctrl_regnum (int gdb_regnum)\n int\n m32rbf_fetch_register (SIM_CPU *current_cpu, int rn, unsigned char *buf, int len)\n {\n+  int size = m32rbf_register_size (rn);\n+  if (len != size)\n+    return -1;\n+\n   if (rn < 16)\n     SETTWI (buf, m32rbf_h_gr_get (current_cpu, rn));\n   else\n@@ -76,14 +88,18 @@ m32rbf_fetch_register (SIM_CPU *current_cpu, int rn, unsigned char *buf, int len\n \treturn 0;\n       }\n \n-  return -1; /*FIXME*/\n+  return size;\n }\n \n /* The contents of BUF are in target byte order.  */\n \n int\n m32rbf_store_register (SIM_CPU *current_cpu, int rn, unsigned char *buf, int len)\n {\n+  int size = m32rbf_register_size (rn);\n+  if (len != size)\n+    return -1;\n+\n   if (rn < 16)\n     m32rbf_h_gr_set (current_cpu, rn, GETTWI (buf));\n   else\n@@ -121,7 +137,7 @@ m32rbf_store_register (SIM_CPU *current_cpu, int rn, unsigned char *buf, int len\n \treturn 0;\n       }\n \n-  return -1; /*FIXME*/\n+  return size;\n }\n \f\n USI"
    }
  ]
}