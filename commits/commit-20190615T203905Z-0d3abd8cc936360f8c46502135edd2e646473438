{
  "sha": "0d3abd8cc936360f8c46502135edd2e646473438",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGQzYWJkOGNjOTM2MzYwZjhjNDY1MDIxMzVlZGQyZTY0NjQ3MzQzOA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-06-12T21:34:26Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-06-15T20:39:05Z"
    },
    "message": "gdb: Remove an update of current_source_line and current_source_symtab\n\nWhile reviewing some of the annotation code I noticed that\nidentify_source_line (in source.c) sets current_source_line,\ncurrent_source_symtab, and also calls clear_lines_listed_range.  This\nseems a little strange, identify_source_line is really a wrapper\naround annotate_source, and is only called when annotation_level is\ngreater than 0 (so annotations are turned on).\n\nIt seems weird (to me) that when annotations are on we update GDB's\nidea of the \"current\" line/symtab, but when they are off we don't,\ngiven that annotations are really about communicating GDB's state to a\nuser (GUI) and surely shouldn't be changing GDB's behaviour.\n\nThis commit removes from identify_source_line all of the setting of\ncurrent line/symtab and the call to clear_lines_listed_range, after\ndoing this GDB still passes all tests, so I don't believe these lines\nwere actually required.\n\nWith this code removed identify_source_line is only a wrapper around\nannotate_source, so I moved identify_source_line to annotate.c and\nrenamed it to annotate_source_line.\n\ngdb/ChangeLog:\n\n\t* annotate.c: Add 'source.h' and 'objfiles.h' includes.\n\t(annotate_source): Make static.\n\t(annotate_source_line): Moved from source.c and renamed from\n\tidentify_source_line.  Update the return type.\n\t* annotate.h (annotate_source): Delete declaration.\n\t(annotate_source_line): Declaration moved from source.h, and\n\trenamed from identify_source_line.  Return type updated.\n\t* source.c (identify_source_line): Moved to annotate.c and renamed\n\tto annotate_source_line.\n\t(info_line_command): Remove check of annotation_level.\n\t* source.h (identify_source_line): Move declaration to annotate.h\n\tand rename to annotate_source_line.\n\t* stack.c: Add 'annotate.h' include.\n\t(print_frame_info): Remove check of annotation_level before\n\tcalling annotate_source_line.",
    "tree": {
      "sha": "2bd974cd6710dab5d47507b48cae93ed4d80ab31",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2bd974cd6710dab5d47507b48cae93ed4d80ab31"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d3abd8cc936360f8c46502135edd2e646473438",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d3abd8cc936360f8c46502135edd2e646473438",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d3abd8cc936360f8c46502135edd2e646473438",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d3abd8cc936360f8c46502135edd2e646473438/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "00df30ae1ea6db8f3693cad8a499f55f1d66e913",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00df30ae1ea6db8f3693cad8a499f55f1d66e913",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/00df30ae1ea6db8f3693cad8a499f55f1d66e913"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 62,
    "deletions": 43
  },
  "files": [
    {
      "sha": "f0489df3a5c789c61d155e4f99dc8349bc9b63c8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d3abd8cc936360f8c46502135edd2e646473438/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d3abd8cc936360f8c46502135edd2e646473438/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0d3abd8cc936360f8c46502135edd2e646473438",
      "patch": "@@ -1,3 +1,21 @@\n+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* annotate.c: Add 'source.h' and 'objfiles.h' includes.\n+\t(annotate_source): Make static.\n+\t(annotate_source_line): Moved from source.c and renamed from\n+\tidentify_source_line.  Update the return type.\n+\t* annotate.h (annotate_source): Delete declaration.\n+\t(annotate_source_line): Declaration moved from source.h, and\n+\trenamed from identify_source_line.  Return type updated.\n+\t* source.c (identify_source_line): Moved to annotate.c and renamed\n+\tto annotate_source_line.\n+\t(info_line_command): Remove check of annotation_level.\n+\t* source.h (identify_source_line): Move declaration to annotate.h\n+\tand rename to annotate_source_line.\n+\t* stack.c: Add 'annotate.h' include.\n+\t(print_frame_info): Remove check of annotation_level before\n+\tcalling annotate_source_line.\n+\n 2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* source-cache.c (source_cache::get_plain_source_lines): Use"
    },
    {
      "sha": "84f8129b22d0f0fbc94e0eda05eac5aeb270d12b",
      "filename": "gdb/annotate.c",
      "status": "modified",
      "additions": 28,
      "deletions": 1,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d3abd8cc936360f8c46502135edd2e646473438/gdb/annotate.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d3abd8cc936360f8c46502135edd2e646473438/gdb/annotate.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/annotate.c?ref=0d3abd8cc936360f8c46502135edd2e646473438",
      "patch": "@@ -26,6 +26,8 @@\n #include \"inferior.h\"\n #include \"infrun.h\"\n #include \"top.h\"\n+#include \"source.h\"\n+#include \"objfiles.h\"\n \f\n \n /* Prototypes for local functions.  */\n@@ -417,7 +419,7 @@ annotate_arg_end (void)\n     printf_filtered ((\"\\n\\032\\032arg-end\\n\"));\n }\n \n-void\n+static void\n annotate_source (const char *filename, int line, int character, int mid,\n \t\t struct gdbarch *gdbarch, CORE_ADDR pc)\n {\n@@ -430,6 +432,31 @@ annotate_source (const char *filename, int line, int character, int mid,\n \t\t   mid ? \"middle\" : \"beg\", paddress (gdbarch, pc));\n }\n \n+/* See annotate.h.  */\n+\n+bool\n+annotate_source_line (struct symtab *s, int line, int mid_statement,\n+\t\t      CORE_ADDR pc)\n+{\n+  if (annotation_level > 0)\n+    {\n+      if (s->line_charpos == nullptr)\n+\topen_source_file_with_line_charpos (s);\n+      if (s->fullname == nullptr)\n+\treturn false;\n+      /* Don't index off the end of the line_charpos array.  */\n+      if (line > s->nlines)\n+\treturn false;\n+\n+      annotate_source (s->fullname, line, s->line_charpos[line - 1],\n+\t\t       mid_statement, get_objfile_arch (SYMTAB_OBJFILE (s)),\n+\t\t       pc);\n+      return true;\n+    }\n+  return false;\n+}\n+\n+\n void\n annotate_frame_begin (int level, struct gdbarch *gdbarch, CORE_ADDR pc)\n {"
    },
    {
      "sha": "9683b7e09ac4b5c43b1355d1981bc2b51aae6a15",
      "filename": "gdb/annotate.h",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d3abd8cc936360f8c46502135edd2e646473438/gdb/annotate.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d3abd8cc936360f8c46502135edd2e646473438/gdb/annotate.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/annotate.h?ref=0d3abd8cc936360f8c46502135edd2e646473438",
      "patch": "@@ -87,8 +87,17 @@ struct annotate_arg_emitter\n   DISABLE_COPY_AND_ASSIGN (annotate_arg_emitter);\n };\n \n-extern void annotate_source (const char *, int, int, int,\n-\t\t\t     struct gdbarch *, CORE_ADDR);\n+/* If annotations are turned on then print annotation describing the full\n+   name of the source file S and the line number LINE and its corresponding\n+   character position.\n+\n+   MID_STATEMENT is nonzero if the PC is not at the beginning of that\n+   line.\n+\n+   Return true if successful, false if the file could not be found or\n+   annotations are turned off.  */\n+extern bool annotate_source_line (struct symtab *s, int line,\n+\t\t\t\t  int mid_statement, CORE_ADDR pc);\n \n extern void annotate_frame_begin (int, struct gdbarch *, CORE_ADDR);\n extern void annotate_function_call (void);"
    },
    {
      "sha": "dec5a2f84bab5490c19a66b11f1e8bc0d1867457",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 2,
      "deletions": 25,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d3abd8cc936360f8c46502135edd2e646473438/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d3abd8cc936360f8c46502135edd2e646473438/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=0d3abd8cc936360f8c46502135edd2e646473438",
      "patch": "@@ -1212,29 +1212,6 @@ open_source_file_with_line_charpos (struct symtab *s)\n \n \f\n \n-/* See source.h.  */\n-\n-int\n-identify_source_line (struct symtab *s, int line, int mid_statement,\n-\t\t      CORE_ADDR pc)\n-{\n-  if (s->line_charpos == nullptr)\n-    open_source_file_with_line_charpos (s);\n-  if (s->fullname == 0)\n-    return 0;\n-  if (line > s->nlines)\n-    /* Don't index off the end of the line_charpos array.  */\n-    return 0;\n-  annotate_source (s->fullname, line, s->line_charpos[line - 1],\n-\t\t   mid_statement, get_objfile_arch (SYMTAB_OBJFILE (s)), pc);\n-\n-  current_source_line = line;\n-  current_source_symtab = s;\n-  clear_lines_listed_range ();\n-  return 1;\n-}\n-\f\n-\n /* Print source lines from the file of symtab S,\n    starting with line number LINE and stopping before line number STOPLINE.  */\n \n@@ -1519,8 +1496,8 @@ info_line_command (const char *arg, int from_tty)\n \n \t  /* If this is the only line, show the source code.  If it could\n \t     not find the file, don't do anything special.  */\n-\t  if (annotation_level && sals.size () == 1)\n-\t    identify_source_line (sal.symtab, sal.line, 0, start_pc);\n+\t  if (sals.size () == 1)\n+\t    annotate_source_line (sal.symtab, sal.line, 0, start_pc);\n \t}\n       else\n \t/* Is there any case in which we get here, and have an address"
    },
    {
      "sha": "1c45405774b830f673fc1703442cb42962a9ca5c",
      "filename": "gdb/source.h",
      "status": "modified",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d3abd8cc936360f8c46502135edd2e646473438/gdb/source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d3abd8cc936360f8c46502135edd2e646473438/gdb/source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.h?ref=0d3abd8cc936360f8c46502135edd2e646473438",
      "patch": "@@ -127,17 +127,6 @@ extern void clear_current_source_symtab_and_line (void);\n /* Add a source path substitution rule.  */\n extern void add_substitute_path_rule (char *, char *);\n \n-/* Print text describing the full name of the source file S\n-   and the line number LINE and its corresponding character position.\n-   The text starts with two Ctrl-z so that the Emacs-GDB interface\n-   can easily find it.\n-\n-   MID_STATEMENT is nonzero if the PC is not at the beginning of that line.\n-\n-   Return 1 if successful, 0 if could not find the file.  */\n-extern int identify_source_line (struct symtab *s, int line,\n-\t\t\t\t int mid_statement, CORE_ADDR pc);\n-\n /* Flags passed as 4th argument to print_source_lines.  */\n enum print_source_lines_flag\n   {"
    },
    {
      "sha": "f471efe3df78ddc5f7d10f41f2c054b1eb53a8c8",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d3abd8cc936360f8c46502135edd2e646473438/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d3abd8cc936360f8c46502135edd2e646473438/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=0d3abd8cc936360f8c46502135edd2e646473438",
      "patch": "@@ -47,6 +47,7 @@\n #include \"linespec.h\"\n #include \"cli/cli-utils.h\"\n #include \"objfiles.h\"\n+#include \"annotate.h\"\n \n #include \"symfile.h\"\n #include \"extension.h\"\n@@ -962,13 +963,11 @@ print_frame_info (const frame_print_options &fp_opts,\n \n   if (source_print && sal.symtab)\n     {\n-      int done = 0;\n       int mid_statement = ((print_what == SRC_LINE)\n \t\t\t   && frame_show_address (frame, sal));\n+      bool done = annotate_source_line (sal.symtab, sal.line, mid_statement,\n+\t\t\t\t\tget_frame_pc (frame));\n \n-      if (annotation_level)\n-\tdone = identify_source_line (sal.symtab, sal.line, mid_statement,\n-\t\t\t\t     get_frame_pc (frame));\n       if (!done)\n \t{\n \t  if (deprecated_print_frame_info_listing_hook)"
    }
  ]
}