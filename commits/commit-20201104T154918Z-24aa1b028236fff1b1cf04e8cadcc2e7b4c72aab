{
  "sha": "24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjRhYTFiMDI4MjM2ZmZmMWIxY2YwNGU4Y2FkY2MyZTdiNGM3MmFhYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:18Z"
    },
    "message": "Resolve dynamic type in ada_value_struct_elt\n\nAn internal AdaCore test case showed that gdb mishandled a case of\nassigning to an array element in a packed array inside a variant\nrecord.  This problem can only be seen with -fgnat-encodings=minimal,\nwhich isn't yet widely used.  This patch fixes the bug, and also\nupdates an existing test to check this case.\n\ngdb/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_value_struct_elt): Resolve dynamic type.\n\ngdb/testsuite/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/set_pckd_arr_elt.exp: Also test\n\t-fgnat-encodings=minimal.  Add tests.\n\t* gdb.ada/set_pckd_arr_elt/foo.adb (Foo): Add VA variable.\n\tCall Update_Small a second time.\n\t* gdb.ada/set_pckd_arr_elt/pck.adb (New_Variant): New function.\n\t* gdb.ada/set_pckd_arr_elt/pck.ads (Buffer, Variant)\n\t(Variant_Access): New types.\n\t(New_Variant): Declare.",
    "tree": {
      "sha": "869a2e61f57a091c293e643c9b064fd406deae53",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/869a2e61f57a091c293e643c9b064fd406deae53"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c9a28cbed612a32efca1167d3b4641278a85059e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9a28cbed612a32efca1167d3b4641278a85059e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c9a28cbed612a32efca1167d3b4641278a85059e"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 64,
    "deletions": 13
  },
  "files": [
    {
      "sha": "79ee2b96c70508a7405a94d507df4022c2bd97ed",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
      "patch": "@@ -1,3 +1,7 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_value_struct_elt): Resolve dynamic type.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (ada_is_any_packed_array_type): New function."
    },
    {
      "sha": "7613e190108f1f9a38e5a7e4b56ea26cafdfaf1f",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
      "patch": "@@ -4396,6 +4396,10 @@ ada_value_struct_elt (struct value *arg, const char *name, int no_err)\n       t1 = ada_to_fixed_type (ada_get_base_type (t1), NULL,\n \t\t\t      address, NULL, check_tag);\n \n+      /* Resolve the dynamic type as well.  */\n+      arg = value_from_contents_and_address (t1, nullptr, address);\n+      t1 = value_type (arg);\n+\n       if (find_struct_field (name, t1, 0,\n \t\t\t     &field_type, &byte_offset, &bit_offset,\n \t\t\t     &bit_size, NULL))"
    },
    {
      "sha": "874395af38db24653b8483f3747852cb04cba514",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
      "patch": "@@ -1,3 +1,14 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/set_pckd_arr_elt.exp: Also test\n+\t-fgnat-encodings=minimal.  Add tests.\n+\t* gdb.ada/set_pckd_arr_elt/foo.adb (Foo): Add VA variable.\n+\tCall Update_Small a second time.\n+\t* gdb.ada/set_pckd_arr_elt/pck.adb (New_Variant): New function.\n+\t* gdb.ada/set_pckd_arr_elt/pck.ads (Buffer, Variant)\n+\t(Variant_Access): New types.\n+\t(New_Variant): Declare.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/mod_from_name.exp: Test printing slice."
    },
    {
      "sha": "adaee7d592d2186d0d8d017202a0069ec96f14e2",
      "filename": "gdb/testsuite/gdb.ada/set_pckd_arr_elt.exp",
      "status": "modified",
      "additions": 22,
      "deletions": 13,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/set_pckd_arr_elt.exp?ref=24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
      "patch": "@@ -19,25 +19,34 @@ if { [skip_ada_tests] } { return -1 }\n \n standard_ada_testfile foo\n \n-if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable {debug}] != \"\"} {\n-    return -1\n-}\n+foreach_with_prefix scenario {all minimal} {\n+    set flags [list debug additional_flags=-fgnat-encodings=$scenario]\n+\n+    if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable $flags] != \"\"} {\n+\treturn -1\n+    }\n \n-clean_restart ${testfile}\n+    clean_restart ${testfile}\n \n-set bp_location [gdb_get_line_number \"STOP\" ${testdir}/foo.adb]\n-runto \"foo.adb:$bp_location\"\n+    set bp_location [gdb_get_line_number \"STOP\" ${testdir}/foo.adb]\n+    runto \"foo.adb:$bp_location\"\n \n-gdb_test \"print sa(3) := 9\" \" = 9\"\n+    gdb_test \"print sa(3) := 9\" \" = 9\"\n+    gdb_test \"print va.t(1) := 15\" \" = 15\"\n \n-# To verify that the assignment was made correctly, we use the fact\n-# that the program passes this very same element as an argument to\n-# one of the functions.  So we insert a breakpoint on that function,\n-# and verify that the argument value is correct.\n+    # To verify that the assignment was made correctly, we use the fact\n+    # that the program passes this very same element as an argument to\n+    # one of the functions.  So we insert a breakpoint on that function,\n+    # and verify that the argument value is correct.\n \n-gdb_breakpoint \"update_small\"\n+    gdb_breakpoint \"update_small\"\n \n-gdb_test \"continue\" \\\n+    gdb_test \"continue\" \\\n         \"Breakpoint .*, pck\\\\.update_small \\\\(s=9\\\\) at .*pck.adb:.*\" \\\n         \"continue to update_small\"\n \n+    # And again for the second call.\n+    gdb_test \"continue\" \\\n+        \"Breakpoint .*, pck\\\\.update_small \\\\(s=15\\\\) at .*pck.adb:.*\" \\\n+        \"continue to update_small for va.t\"\n+}"
    },
    {
      "sha": "04b444ada9576c3a1f2761590c1865176c8bd1ca",
      "filename": "gdb/testsuite/gdb.ada/set_pckd_arr_elt/foo.adb",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt/foo.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt/foo.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/set_pckd_arr_elt/foo.adb?ref=24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
      "patch": "@@ -17,6 +17,8 @@ with Pck; use Pck;\n \n procedure Foo is\n    SA : Simple_Array := (1, 2, 3, 4);\n+   VA : Variant_Access := New_Variant (Size => 3);\n begin\n    Update_Small (SA (3));  -- STOP\n+   Update_Small (VA.T (1));\n end Foo;"
    },
    {
      "sha": "d19ed2ed20ad9c91344689f1941965f50f921945",
      "filename": "gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.adb",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.adb?ref=24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
      "patch": "@@ -14,6 +14,13 @@\n --  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n package body Pck is\n+   function New_Variant (Size : Integer) return Variant_Access is\n+      Result : Variant (Size => Size) :=\n+        (Size => Size, A => 11, T => (others => 13));\n+   begin\n+      return new Variant'(Result);\n+   end New_Variant;\n+\n    procedure Update_Small (S : in out Small) is\n    begin\n       null;"
    },
    {
      "sha": "d04809d9d0a4d7cd71d412b2d138bf57c5ff073e",
      "filename": "gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.ads",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab/gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/set_pckd_arr_elt/pck.ads?ref=24aa1b028236fff1b1cf04e8cadcc2e7b4c72aab",
      "patch": "@@ -18,5 +18,19 @@ package Pck is\n    type Simple_Array is array (1 .. 4) of Small;\n    pragma Pack (Simple_Array);\n \n+   type Buffer is array (Integer range <>) of Small;\n+   pragma Pack (Buffer);\n+\n+   type Variant (Size : Integer := 1) is\n+   record\n+      A : Small;\n+      T : Buffer (1 .. Size);\n+   end record;\n+   pragma Pack (Variant);\n+\n+   type Variant_Access is access all Variant;\n+\n+   function New_Variant (Size : Integer) return Variant_Access;\n+\n    procedure Update_Small (S : in out Small);\n end Pck;"
    }
  ]
}