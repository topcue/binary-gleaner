{
  "sha": "7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzI0MmZhOGFhNzU5NmI0ZTE1NGNhOTZkZGY1Y2U0OTM1M2JmMmU1ZA==",
  "commit": {
    "author": {
      "name": "Gunther Nikl",
      "email": "gnikl@justmail.de",
      "date": "2020-05-04T15:07:26Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-04T15:07:26Z"
    },
    "message": "[PATCH] bfd: tweak SET_ARCH_MACH of aout-cris.c\n\n\t* aout-cris.c (DEFAULT_ARCH): Delete define.\n\t(MY_set_arch_mach): Likewise.\n\t(SET_ARCH_MACH): Use bfd_set_arch_mach with an explicit architecture\n\tof bfd_arch_cris.\n\t(swap_ext_reloc_in): Add casts to r_index extraction. Mask valid bits\n\tof r_type before the shift.",
    "tree": {
      "sha": "64094a7b7e94bd4116523e4572dc69ec08b820e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64094a7b7e94bd4116523e4572dc69ec08b820e6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cff69cf4cf97e1eb4c2cca8e985e403b1a97c059",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cff69cf4cf97e1eb4c2cca8e985e403b1a97c059",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cff69cf4cf97e1eb4c2cca8e985e403b1a97c059"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 18,
    "deletions": 11
  },
  "files": [
    {
      "sha": "19ecf8929240bfd9a06d6a02f1b5cb361147b3d8",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d",
      "patch": "@@ -1,4 +1,13 @@\n-2020-05-01  Wilco Dijkstra  <wdijkstr@arm.com>\n+2020-05-04  Gunther Nikl  <gnikl@justmail.de>\n+\n+\t* aout-cris.c (DEFAULT_ARCH): Delete define.\n+\t(MY_set_arch_mach): Likewise.\n+\t(SET_ARCH_MACH): Use bfd_set_arch_mach with an explicit architecture\n+\tof bfd_arch_cris.\n+\t(swap_ext_reloc_in): Add casts to r_index extraction. Mask valid bits\n+\tof r_type before the shift.\n+\n+2020-05-04  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR ld/25665\n \t* elfnn-aarch64.c (group_sections): Copy implementation from"
    },
    {
      "sha": "d6221d17e76d606919ef3b2ef0c29b667ccd6b8e",
      "filename": "bfd/aout-cris.c",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d/bfd/aout-cris.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d/bfd/aout-cris.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/aout-cris.c?ref=7242fa8aa7596b4e154ca96ddf5ce49353bf2e5d",
      "patch": "@@ -56,9 +56,6 @@\n #define TARGET_PAGE_SIZE SEGMENT_SIZE\n #define TARGETNAME \"a.out-cris\"\n \n-/* The definition here seems not used; just provided as a convention.  */\n-#define DEFAULT_ARCH bfd_arch_cris\n-\n /* Do not \"beautify\" the CONCAT* macro args.  Traditional C will not\n    remove whitespace added here, and thus will fail to concatenate\n    the tokens.  */\n@@ -92,9 +89,8 @@ static bfd_boolean MY (set_sizes) (bfd *);\n    through SET_ARCH_MACH.  The default bfd_default_set_arch_mach will\n    not call set_sizes.  */\n \n-#define MY_set_arch_mach NAME (aout, set_arch_mach)\n #define SET_ARCH_MACH(BFD, EXECP) \\\n- MY_set_arch_mach (BFD, DEFAULT_ARCH, N_MACHTYPE (EXECP))\n+  bfd_set_arch_mach (BFD, bfd_arch_cris, N_MACHTYPE (EXECP))\n \n /* These macros describe the binary layout of the reloc information we\n    use in a file.  */\n@@ -231,12 +227,14 @@ MY (swap_ext_reloc_in) (bfd *abfd,\n   cache_ptr->address = (GET_SWORD (abfd, bytes->r_address));\n \n   /* Now the fun stuff.  */\n-  r_index =  (bytes->r_index[2] << 16)\n-    | (bytes->r_index[1] << 8)\n-    |  bytes->r_index[0];\n+  r_index =  (((unsigned int) bytes->r_index[2] << 16)\n+    | ((unsigned int) bytes->r_index[1] << 8)\n+    |  bytes->r_index[0]);\n+  \n   r_extern = (0 != (bytes->r_type[0] & RELOC_EXT_BITS_EXTERN_LITTLE));\n-  r_type = ((bytes->r_type[0]) >> RELOC_EXT_BITS_TYPE_SH_LITTLE)\n-    & RELOC_EXT_BITS_TYPE_LITTLE;\n+\n+  r_type = ((bytes->r_type[0] & RELOC_EXT_BITS_TYPE_LITTLE)\n+    >> RELOC_EXT_BITS_TYPE_SH_LITTLE);\n \n   if (r_type > 2)\n     {"
    }
  ]
}