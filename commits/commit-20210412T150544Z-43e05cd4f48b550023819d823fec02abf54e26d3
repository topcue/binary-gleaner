{
  "sha": "43e05cd4f48b550023819d823fec02abf54e26d3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDNlMDVjZDRmNDhiNTUwMDIzODE5ZDgyM2ZlYzAyYWJmNTRlMjZkMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-12T09:03:45Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-12T15:05:44Z"
    },
    "message": "ENABLE_CHECKING in bfd, opcodes, binutils, ld\n\ngas already has this.  Here it enables checking hash table type passed\nto elf_link_hash_lookup and elf_link_hash_traverse.\n\nbfd/\n\t* elf-bfd.h (ENABLE_CHECKING): Define.\n\t(elf_link_hash_lookup): Abort if wrong type of hash table.\n\t(elf_link_hash_traverse): Likewise.\n\t* configure.ac (--enable-checking): Add support.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\nbinutils/\n\t* configure.ac (--enable-checking): Add support.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\nld/\n\t* configure.ac (--enable-checking): Add support.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\nopcodes/\n\t* configure.ac (--enable-checking): Add support.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.",
    "tree": {
      "sha": "8db8be01bef7bae060fcfef55b7d6d0843731274",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8db8be01bef7bae060fcfef55b7d6d0843731274"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/43e05cd4f48b550023819d823fec02abf54e26d3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43e05cd4f48b550023819d823fec02abf54e26d3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/43e05cd4f48b550023819d823fec02abf54e26d3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43e05cd4f48b550023819d823fec02abf54e26d3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/04977957ecfc723bc4f57460e8e4eed7e6b69f32",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/04977957ecfc723bc4f57460e8e4eed7e6b69f32"
    }
  ],
  "stats": {
    "total": 186,
    "additions": 178,
    "deletions": 8
  },
  "files": [
    {
      "sha": "fa7e649c022c2c123885b7b85dcebefaa8f04c3f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -1,3 +1,11 @@\n+2021-04-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf-bfd.h (ENABLE_CHECKING): Define.\n+\t(elf_link_hash_lookup): Abort if wrong type of hash table.\n+\t* configure.ac (--enable-checking): Add support.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2021-04-12  Alan Modra  <amodra@gmail.com>\n \n \t* elf-bfd.h (is_elf_hash_table): Convert macro to inline function."
    },
    {
      "sha": "6d46ea72a6c3a44a83cd386dc97db4522639466d",
      "filename": "bfd/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/config.in?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -14,6 +14,9 @@\n    default. */\n #undef DEFAULT_LD_Z_SEPARATE_CODE\n \n+/* Define if you want run-time sanity checks. */\n+#undef ENABLE_CHECKING\n+\n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n #undef ENABLE_NLS"
    },
    {
      "sha": "d98e330df8b4a4a5d703569d65c9bbc2a33d30ff",
      "filename": "bfd/configure",
      "status": "modified",
      "additions": 20,
      "deletions": 2,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -826,6 +826,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_plugins\n enable_largefile\n+enable_checking\n enable_64_bit_bfd\n enable_targets\n enable_64_bit_archive\n@@ -1484,6 +1485,7 @@ Optional Features:\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-plugins        Enable support for plugins\n   --disable-largefile     omit support for large files\n+  --enable-checking       enable run-time checks\n   --enable-64-bit-bfd     64-bit support (on hosts with narrower word sizes)\n   --enable-targets        alternative target configurations\n   --enable-64-bit-archive force 64-bit archives\n@@ -11042,7 +11044,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11045 \"configure\"\n+#line 11047 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11148,7 +11150,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11151 \"configure\"\n+#line 11153 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11788,6 +11790,22 @@ else\n fi\n \n \n+ac_checking=\n+. ${srcdir}/development.sh\n+test \"$development\" = true && ac_checking=yes\n+# Check whether --enable-checking was given.\n+if test \"${enable_checking+set}\" = set; then :\n+  enableval=$enable_checking; case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac\n+fi\n+if test x$ac_checking != x ; then\n+\n+$as_echo \"#define ENABLE_CHECKING 1\" >>confdefs.h\n+\n+fi\n+\n # Check whether --enable-64-bit-bfd was given.\n if test \"${enable_64_bit_bfd+set}\" = set; then :\n   enableval=$enable_64_bit_bfd; case \"${enableval}\" in"
    },
    {
      "sha": "07a75ed162639427d8a9243dd6ce509bdfbec90c",
      "filename": "bfd/configure.ac",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.ac?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -69,6 +69,19 @@ esac\n \n AM_CONDITIONAL(PLUGINS, test \"$plugins\" = \"yes\")\n \n+ac_checking=\n+. ${srcdir}/development.sh\n+test \"$development\" = true && ac_checking=yes\n+AC_ARG_ENABLE(checking,\n+[  --enable-checking       enable run-time checks],\n+[case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac])dnl\n+if test x$ac_checking != x ; then\n+  AC_DEFINE(ENABLE_CHECKING, 1, [Define if you want run-time sanity checks.])\n+fi\n+\n AC_ARG_ENABLE(64-bit-bfd,\n [  --enable-64-bit-bfd     64-bit support (on hosts with narrower word sizes)],\n [case \"${enableval}\" in"
    },
    {
      "sha": "5a2f64233f9c727facb5445e6c8f0afebe04c5de",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -27,6 +27,10 @@\n #include \"elf/internal.h\"\n #include \"bfdlink.h\"\n \n+#ifndef ENABLE_CHECKING\n+#define ENABLE_CHECKING 0\n+#endif\n+\n #ifdef __cplusplus\n extern \"C\" {\n #endif\n@@ -721,6 +725,8 @@ static inline struct elf_link_hash_entry *\n elf_link_hash_lookup (struct elf_link_hash_table *table, const char *string,\n \t\t      bool create, bool copy, bool follow)\n {\n+  if (ENABLE_CHECKING && !is_elf_hash_table (&table->root))\n+    abort ();\n   return (struct elf_link_hash_entry *)\n     bfd_link_hash_lookup (&table->root, string, create, copy, follow);\n }\n@@ -732,6 +738,8 @@ elf_link_hash_traverse (struct elf_link_hash_table *table,\n \t\t\tbool (*f) (struct elf_link_hash_entry *, void *),\n \t\t\tvoid *info)\n {\n+  if (ENABLE_CHECKING && !is_elf_hash_table (&table->root))\n+    abort ();\n   bfd_link_hash_traverse (&table->root,\n \t\t\t  (bool (*) (struct bfd_link_hash_entry *, void *)) f,\n \t\t\t  info);"
    },
    {
      "sha": "1dbb038fda6f0328c24e7480ce286da91ec77019",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac (--enable-checking): Add support.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2021-04-09  Alan Modra  <amodra@gmail.com>\n \n \t* objdump.c (struct objdump_disasm_info): Delete dynrelbuf and"
    },
    {
      "sha": "cc6aad16dddb19169dab422927d69abecd285196",
      "filename": "binutils/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/config.in?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -19,6 +19,9 @@\n /* Should strings use -a behavior by default? */\n #undef DEFAULT_STRINGS_ALL\n \n+/* Define if you want run-time sanity checks. */\n+#undef ENABLE_CHECKING\n+\n /* Handle .ctf type-info sections */\n #undef ENABLE_LIBCTF\n "
    },
    {
      "sha": "938ef4836989fcc5c2204165246e242a31caec03",
      "filename": "binutils/configure",
      "status": "modified",
      "additions": 20,
      "deletions": 2,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -817,6 +817,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_plugins\n enable_largefile\n+enable_checking\n enable_targets\n enable_deterministic_archives\n enable_default_strings_all\n@@ -1481,6 +1482,7 @@ Optional Features:\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-plugins        Enable support for plugins\n   --disable-largefile     omit support for large files\n+  --enable-checking       enable run-time checks\n   --enable-targets        alternative target configurations\n   --enable-deterministic-archives\n                           ar and ranlib default to -D behavior\n@@ -10872,7 +10874,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10875 \"configure\"\n+#line 10877 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10978,7 +10980,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10981 \"configure\"\n+#line 10983 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11583,6 +11585,22 @@ fi\n \n \n \n+ac_checking=\n+. ${srcdir}/../bfd/development.sh\n+test \"$development\" = true && ac_checking=yes\n+# Check whether --enable-checking was given.\n+if test \"${enable_checking+set}\" = set; then :\n+  enableval=$enable_checking; case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac\n+fi\n+if test x$ac_checking != x ; then\n+\n+$as_echo \"#define ENABLE_CHECKING 1\" >>confdefs.h\n+\n+fi\n+\n # Check whether --enable-targets was given.\n if test \"${enable_targets+set}\" = set; then :\n   enableval=$enable_targets; case \"${enableval}\" in"
    },
    {
      "sha": "2553b809e6c1f26a1843d8ad3dd435af61587c2d",
      "filename": "binutils/configure.ac",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/binutils/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure.ac?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -33,6 +33,19 @@ AC_USE_SYSTEM_EXTENSIONS\n LT_INIT\n ACX_LARGEFILE\n \n+ac_checking=\n+. ${srcdir}/../bfd/development.sh\n+test \"$development\" = true && ac_checking=yes\n+AC_ARG_ENABLE(checking,\n+[  --enable-checking       enable run-time checks],\n+[case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac])dnl\n+if test x$ac_checking != x ; then\n+  AC_DEFINE(ENABLE_CHECKING, 1, [Define if you want run-time sanity checks.])\n+fi\n+\n AC_ARG_ENABLE(targets,\n [  --enable-targets        alternative target configurations],\n [case \"${enableval}\" in"
    },
    {
      "sha": "c862e8b13aee70221f63d591104f63c6362c08dd",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac (--enable-checking): Add support.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2021-04-12  Alan Modra  <amodra@gmail.com>\n \n \t* emultempl/mipself.em (mips_create_output_section_statements):"
    },
    {
      "sha": "26d55a00d47b97d55046ec69711626ce48e2f6b3",
      "filename": "ld/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/ld/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/ld/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/config.in?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -33,6 +33,9 @@\n    */\n #undef DEFAULT_NEW_DTAGS\n \n+/* Define if you want run-time sanity checks. */\n+#undef ENABLE_CHECKING\n+\n /* Handle .ctf type-info sections */\n #undef ENABLE_LIBCTF\n "
    },
    {
      "sha": "d8f8b2de18e5b8b8fbf71893b56f6b435a5229d7",
      "filename": "ld/configure",
      "status": "modified",
      "additions": 20,
      "deletions": 2,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/ld/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/ld/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -824,6 +824,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_plugins\n enable_largefile\n+enable_checking\n with_lib_path\n enable_targets\n enable_64_bit_bfd\n@@ -1494,6 +1495,7 @@ Optional Features:\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n   --enable-plugins        Enable support for plugins\n   --disable-largefile     omit support for large files\n+  --enable-checking       enable run-time checks\n   --enable-targets        alternative target configurations\n   --enable-64-bit-bfd     64-bit support (on hosts with narrower word sizes)\n   --enable-gold[=ARG]     build gold [ARG={default,yes,no}]\n@@ -11410,7 +11412,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11413 \"configure\"\n+#line 11415 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11516,7 +11518,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11519 \"configure\"\n+#line 11521 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15127,6 +15129,22 @@ fi\n \n \n \n+ac_checking=\n+. ${srcdir}/../bfd/development.sh\n+test \"$development\" = true && ac_checking=yes\n+# Check whether --enable-checking was given.\n+if test \"${enable_checking+set}\" = set; then :\n+  enableval=$enable_checking; case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac\n+fi\n+if test x$ac_checking != x ; then\n+\n+$as_echo \"#define ENABLE_CHECKING 1\" >>confdefs.h\n+\n+fi\n+\n \n # Check whether --with-lib-path was given.\n if test \"${with_lib_path+set}\" = set; then :"
    },
    {
      "sha": "8ea97c43cd42f670f2c24cc9a66807f41960243b",
      "filename": "ld/configure.ac",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/ld/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/ld/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.ac?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -37,6 +37,19 @@ AC_PROG_INSTALL\n LT_INIT\n ACX_LARGEFILE\n \n+ac_checking=\n+. ${srcdir}/../bfd/development.sh\n+test \"$development\" = true && ac_checking=yes\n+AC_ARG_ENABLE(checking,\n+[  --enable-checking       enable run-time checks],\n+[case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac])dnl\n+if test x$ac_checking != x ; then\n+  AC_DEFINE(ENABLE_CHECKING, 1, [Define if you want run-time sanity checks.])\n+fi\n+\n AC_ARG_WITH(lib-path, [  --with-lib-path=dir1:dir2...  set default LIB_PATH],LIB_PATH=$withval)\n AC_ARG_ENABLE(targets,\n [  --enable-targets        alternative target configurations],"
    },
    {
      "sha": "f63eb4797496d717318b1fa6f62c244d5816594d",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac (--enable-checking): Add support.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\n 2021-04-09  Tejas Belagod  <tejas.belagod@arm.com>\n \n \t* aarch64-tbl.h (struct aarch64_opcode aarch64_opcode_table): Reclassify"
    },
    {
      "sha": "392cda5d0d90ea1bade1690fd027cca94cd37ac7",
      "filename": "opcodes/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/config.in?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -7,6 +7,9 @@\n #endif\n #define __CONFIG_H__ 1\n \n+/* Define if you want run-time sanity checks. */\n+#undef ENABLE_CHECKING\n+\n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n #undef ENABLE_NLS"
    },
    {
      "sha": "922a939125b328e80de80725da74cdb9feddc0e3",
      "filename": "opcodes/configure",
      "status": "modified",
      "additions": 20,
      "deletions": 2,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/configure?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -799,6 +799,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+enable_checking\n enable_targets\n enable_werror\n enable_build_warnings\n@@ -1446,6 +1447,7 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --enable-checking       enable run-time checks\n   --enable-targets        alternative target configurations\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings\n@@ -10806,7 +10808,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10809 \"configure\"\n+#line 10811 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10912,7 +10914,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10915 \"configure\"\n+#line 10917 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11150,6 +11152,22 @@ CC=\"$lt_save_CC\"\n \n \n \n+ac_checking=\n+. ${srcdir}/../bfd/development.sh\n+test \"$development\" = true && ac_checking=yes\n+# Check whether --enable-checking was given.\n+if test \"${enable_checking+set}\" = set; then :\n+  enableval=$enable_checking; case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac\n+fi\n+if test x$ac_checking != x ; then\n+\n+$as_echo \"#define ENABLE_CHECKING 1\" >>confdefs.h\n+\n+fi\n+\n # Check whether --enable-targets was given.\n if test \"${enable_targets+set}\" = set; then :\n   enableval=$enable_targets; case \"${enableval}\" in"
    },
    {
      "sha": "911c9c6f0826dd1922807ce7e66724715063bbbd",
      "filename": "opcodes/configure.ac",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43e05cd4f48b550023819d823fec02abf54e26d3/opcodes/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/configure.ac?ref=43e05cd4f48b550023819d823fec02abf54e26d3",
      "patch": "@@ -40,6 +40,19 @@ AC_DISABLE_SHARED\n \n LT_INIT\n \n+ac_checking=\n+. ${srcdir}/../bfd/development.sh\n+test \"$development\" = true && ac_checking=yes\n+AC_ARG_ENABLE(checking,\n+[  --enable-checking       enable run-time checks],\n+[case \"${enableval}\" in\n+  no|none)  ac_checking= ;;\n+  *)\t    ac_checking=yes ;;\n+esac])dnl\n+if test x$ac_checking != x ; then\n+  AC_DEFINE(ENABLE_CHECKING, 1, [Define if you want run-time sanity checks.])\n+fi\n+\n AC_ARG_ENABLE(targets,\n [  --enable-targets        alternative target configurations],\n [case \"${enableval}\" in"
    }
  ]
}