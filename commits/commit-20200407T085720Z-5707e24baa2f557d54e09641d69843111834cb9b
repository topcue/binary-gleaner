{
  "sha": "5707e24baa2f557d54e09641d69843111834cb9b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTcwN2UyNGJhYTJmNTU3ZDU0ZTA5NjQxZDY5ODQzMTExODM0Y2I5Yg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-07T08:57:20Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-07T08:57:20Z"
    },
    "message": "[gdb/symtab] Fix check-psymtab failure for inline function\n\nConsider test-case inline.c, containing an inline function foo:\n...\nstatic inline int foo (void) { return 0; }\nint main (void) { return foo (); }\n...\n\nAnd the test-case compiled with -O2 and debug info:\n...\n$ gcc -g inline.c -O2\n...\n\nThis results in a DWARF entry for foo without pc info:\n...\n<1><114>: Abbrev Number: 4 (DW_TAG_subprogram)\n   <115>   DW_AT_name        : foo\n   <119>   DW_AT_decl_file   : 1\n   <11a>   DW_AT_decl_line   : 2\n   <11b>   DW_AT_prototyped  : 1\n   <11b>   DW_AT_type        : <0x10d>\n   <11f>   DW_AT_inline      : 3       (declared as inline and inlined)\n...\n\nWhen loading the executable in gdb, we create a partial symbol for foo, but\nafter expansion into a full symbol table no actual symbol is created,\nresulting in a maint check-psymtab failure:\n...\n(gdb) maint check-psymtab\nStatic symbol `foo' only found in inline.c psymtab\n...\n\nFix this by skipping this type of partial symbol during the check.\n\nNote that we're not fixing this by not creating the partial symbol, because\nthis breaks setting a breakpoint on an inlined inline function in a CU for\nwhich the partial symtab has not been expanded (test-case\ngdb.dwarf2/break-inline-psymtab.exp).\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-04-07  Tom de Vries  <tdevries@suse.de>\n\n\t* psymtab.c (maintenance_check_psymtabs): Skip static LOC_BLOCK\n\tsymbols without address.\n\ngdb/testsuite/ChangeLog:\n\n2020-04-07  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/check-psymtab.c: New test.\n\t* gdb.base/check-psymtab.exp: New file.",
    "tree": {
      "sha": "f2e70f756659a3f4bb1f70af80a991fc72148afb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2e70f756659a3f4bb1f70af80a991fc72148afb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5707e24baa2f557d54e09641d69843111834cb9b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5707e24baa2f557d54e09641d69843111834cb9b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5707e24baa2f557d54e09641d69843111834cb9b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5707e24baa2f557d54e09641d69843111834cb9b/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bb651e8b7fc7904b06031a665138e9e6ae79adf3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb651e8b7fc7904b06031a665138e9e6ae79adf3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bb651e8b7fc7904b06031a665138e9e6ae79adf3"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 73,
    "deletions": 7
  },
  "files": [
    {
      "sha": "16a0089872242cfb41df92a7b2d10b5c02c538f7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5707e24baa2f557d54e09641d69843111834cb9b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5707e24baa2f557d54e09641d69843111834cb9b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5707e24baa2f557d54e09641d69843111834cb9b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-07  Tom de Vries  <tdevries@suse.de>\n+\n+\t* psymtab.c (maintenance_check_psymtabs): Skip static LOC_BLOCK\n+\tsymbols without address.\n+\n 2020-04-06  Kamil Rytarowski  <n54@gmx.com>\n \n \t* nbsd-nat.h (struct thread_info): Add forward declaration."
    },
    {
      "sha": "44d4978d5394552da01c4167e192c7fd3eefe13c",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5707e24baa2f557d54e09641d69843111834cb9b/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5707e24baa2f557d54e09641d69843111834cb9b/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=5707e24baa2f557d54e09641d69843111834cb9b",
      "patch": "@@ -2113,7 +2113,7 @@ maintenance_check_psymtabs (const char *ignore, int from_tty)\n   struct compunit_symtab *cust = NULL;\n   const struct blockvector *bv;\n   const struct block *b;\n-  int length;\n+  int i;\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     for (partial_symtab *ps : require_partial_symbols (objfile, true))\n@@ -2147,9 +2147,14 @@ maintenance_check_psymtabs (const char *ignore, int from_tty)\n \tb = BLOCKVECTOR_BLOCK (bv, STATIC_BLOCK);\n \tpartial_symbol **psym\n \t  = &objfile->partial_symtabs->static_psymbols[ps->statics_offset];\n-\tlength = ps->n_static_syms;\n-\twhile (length--)\n+\tfor (i = 0; i < ps->n_static_syms; psym++, i++)\n \t  {\n+\t    /* Skip symbols for inlined functions without address.  These may\n+\t       or may not have a match in the full symtab.  */\n+\t    if ((*psym)->aclass == LOC_BLOCK\n+\t\t&& (*psym)->ginfo.value.address == 0)\n+\t      continue;\n+\n \t    sym = block_lookup_symbol (b, (*psym)->ginfo.search_name (),\n \t\t\t\t       symbol_name_match_type::SEARCH_NAME,\n \t\t\t\t       (*psym)->domain);\n@@ -2161,12 +2166,10 @@ maintenance_check_psymtabs (const char *ignore, int from_tty)\n \t\tputs_filtered (ps->filename);\n \t\tprintf_filtered (\" psymtab\\n\");\n \t      }\n-\t    psym++;\n \t  }\n \tb = BLOCKVECTOR_BLOCK (bv, GLOBAL_BLOCK);\n \tpsym = &objfile->partial_symtabs->global_psymbols[ps->globals_offset];\n-\tlength = ps->n_global_syms;\n-\twhile (length--)\n+\tfor (i = 0; i < ps->n_global_syms; psym++, i++)\n \t  {\n \t    sym = block_lookup_symbol (b, (*psym)->ginfo.search_name (),\n \t\t\t\t       symbol_name_match_type::SEARCH_NAME,\n@@ -2179,7 +2182,6 @@ maintenance_check_psymtabs (const char *ignore, int from_tty)\n \t\tputs_filtered (ps->filename);\n \t\tprintf_filtered (\" psymtab\\n\");\n \t      }\n-\t    psym++;\n \t  }\n \tif (ps->raw_text_high () != 0\n \t    && (ps->text_low (objfile) < BLOCK_START (b)"
    },
    {
      "sha": "bd55a78b211296c8f2fbdbd2e2cdd348e59616ec",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5707e24baa2f557d54e09641d69843111834cb9b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5707e24baa2f557d54e09641d69843111834cb9b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=5707e24baa2f557d54e09641d69843111834cb9b",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-07  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/check-psymtab.c: New test.\n+\t* gdb.base/check-psymtab.exp: New file.\n+\n 2020-04-06  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/variant-record/proc.adb: New file."
    },
    {
      "sha": "01c4fc8bb722e08d4903d1d826e14c9f9c7a6f0b",
      "filename": "gdb/testsuite/gdb.base/check-psymtab.c",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5707e24baa2f557d54e09641d69843111834cb9b/gdb/testsuite/gdb.base/check-psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5707e24baa2f557d54e09641d69843111834cb9b/gdb/testsuite/gdb.base/check-psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/check-psymtab.c?ref=5707e24baa2f557d54e09641d69843111834cb9b",
      "patch": "@@ -0,0 +1,28 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+static inline int __attribute__((__always_inline__))\n+foo (void)\n+{\n+  return 0;\n+}\n+\n+int\n+main (void)\n+{\n+  return foo ();\n+}"
    },
    {
      "sha": "e9d40f3484950c8e087bd8fe8af0f7d362633ffc",
      "filename": "gdb/testsuite/gdb.base/check-psymtab.exp",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5707e24baa2f557d54e09641d69843111834cb9b/gdb/testsuite/gdb.base/check-psymtab.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5707e24baa2f557d54e09641d69843111834cb9b/gdb/testsuite/gdb.base/check-psymtab.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/check-psymtab.exp?ref=5707e24baa2f557d54e09641d69843111834cb9b",
      "patch": "@@ -0,0 +1,26 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+standard_testfile\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile]} {\n+    return -1\n+}\n+\n+gdb_test_no_output \"maint expand-symtabs\"\n+\n+# Check that we don't get:\n+#   Static symbol `foo' only found in check-psymtab.c psymtab\n+gdb_test_no_output \"maint check-psymtab\""
    }
  ]
}