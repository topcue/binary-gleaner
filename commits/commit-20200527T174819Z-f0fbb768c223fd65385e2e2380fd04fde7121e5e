{
  "sha": "f0fbb768c223fd65385e2e2380fd04fde7121e5e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjBmYmI3NjhjMjIzZmQ2NTM4NWUyZTIzODBmZDA0ZmRlNzEyMWU1ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-27T17:48:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-27T17:48:19Z"
    },
    "message": "Use add_partial_symbol in load_partial_dies\n\nAn earlier patch added the add_partial_symbol helper function to\ndwarf2/read.c.  However, a couple of calls to add_psymbol_to_list were\nleft in place.  It turns out that these calls slow down partial symbol\nreading, because they still go via the path that tries to needlessly\ndemangle already-demangled names.\n\nThis patch improves the performance of partial symbol reading by\nchanging this code to use add_partial_symbol instead.\n\nThe run previous to this had times of (see the first patch in the\nseries for an explanation):\n\ngdb    1.64\nlibxul 1.99\nAda    2.47\n\nThis patch improves the times to:\n\ngdb    1.47\nlibxul 1.89\nAda    2.39\n\ngdb/ChangeLog\n2020-05-27  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2/read.c (load_partial_dies): Use add_partial_symbol.",
    "tree": {
      "sha": "c8384b7b106c852f4f2f698bc5553e4619d9e760",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8384b7b106c852f4f2f698bc5553e4619d9e760"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f0fbb768c223fd65385e2e2380fd04fde7121e5e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f0fbb768c223fd65385e2e2380fd04fde7121e5e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f0fbb768c223fd65385e2e2380fd04fde7121e5e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f0fbb768c223fd65385e2e2380fd04fde7121e5e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 7,
    "deletions": 10
  },
  "files": [
    {
      "sha": "90577b7e61eb34431558856c84a258d63991dcf4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f0fbb768c223fd65385e2e2380fd04fde7121e5e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f0fbb768c223fd65385e2e2380fd04fde7121e5e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f0fbb768c223fd65385e2e2380fd04fde7121e5e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-05-27  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2/read.c (load_partial_dies): Use add_partial_symbol.\n+\n 2020-05-27  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/abbrev.h (struct abbrev_table) <lookup_abbrev>: Inline."
    },
    {
      "sha": "a62224c0be2ae87d0e8295019640677eef8b4ee9",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 10,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f0fbb768c223fd65385e2e2380fd04fde7121e5e/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f0fbb768c223fd65385e2e2380fd04fde7121e5e/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=f0fbb768c223fd65385e2e2380fd04fde7121e5e",
      "patch": "@@ -18358,10 +18358,8 @@ load_partial_dies (const struct die_reader_specs *reader,\n \t      || pdi.tag == DW_TAG_subrange_type))\n \t{\n \t  if (building_psymtab && pdi.raw_name != NULL)\n-\t    add_psymbol_to_list (pdi.name (cu), false,\n-\t\t\t\t VAR_DOMAIN, LOC_TYPEDEF, -1,\n-\t\t\t\t psymbol_placement::STATIC,\n-\t\t\t\t 0, cu->language, objfile);\n+\t    add_partial_symbol (&pdi, cu);\n+\n \t  info_ptr = locate_pdi_sibling (reader, &pdi, info_ptr);\n \t  continue;\n \t}\n@@ -18392,12 +18390,7 @@ load_partial_dies (const struct die_reader_specs *reader,\n \t  if (pdi.raw_name == NULL)\n \t    complaint (_(\"malformed enumerator DIE ignored\"));\n \t  else if (building_psymtab)\n-\t    add_psymbol_to_list (pdi.name (cu), false,\n-\t\t\t\t VAR_DOMAIN, LOC_CONST, -1,\n-\t\t\t\t cu->language == language_cplus\n-\t\t\t\t ? psymbol_placement::GLOBAL\n-\t\t\t\t : psymbol_placement::STATIC,\n-\t\t\t\t 0, cu->language, objfile);\n+\t    add_partial_symbol (&pdi, cu);\n \n \t  info_ptr = locate_pdi_sibling (reader, &pdi, info_ptr);\n \t  continue;"
    }
  ]
}