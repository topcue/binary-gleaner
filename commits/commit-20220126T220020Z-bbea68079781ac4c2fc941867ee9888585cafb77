{
  "sha": "bbea68079781ac4c2fc941867ee9888585cafb77",
  "node_id": "C_kwDOANOeidoAKGJiZWE2ODA3OTc4MWFjNGMyZmM5NDE4NjdlZTk4ODg1ODVjYWZiNzc",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-07T16:48:49Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-01-26T22:00:20Z"
    },
    "message": "gdb/python: improve the auto help text for gdb.Parameter\n\nThis commit attempts to improve the help text that is generated for\ngdb.Parameter objects when the user fails to provide their own\ndocumentation.\n\nDocumentation for a gdb.Parameter is currently pulled from two\nsources: the class documentation string, and the set_doc/show_doc\nclass attributes.  Thus, a fully documented parameter might look like\nthis:\n\n  class Param_All (gdb.Parameter):\n     \"\"\"This is the class documentation string.\"\"\"\n\n     show_doc = \"Show the state of this parameter\"\n     set_doc = \"Set the state of this parameter\"\n\n     def get_set_string (self):\n        val = \"on\"\n        if (self.value == False):\n           val = \"off\"\n        return \"Test Parameter has been set to \" + val\n\n     def __init__ (self, name):\n        super (Param_All, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)\n        self._value = True\n\n  Param_All ('param-all')\n\nThen in GDB we see this:\n\n  (gdb) help set param-all\n  Set the state of this parameter\n  This is the class documentation string.\n\nWhich is fine.  But, if the user skips both of the documentation parts\nlike this:\n\n  class Param_None (gdb.Parameter):\n\n     def get_set_string (self):\n        val = \"on\"\n        if (self.value == False):\n           val = \"off\"\n        return \"Test Parameter has been set to \" + val\n\n     def __init__ (self, name):\n        super (Param_None, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)\n        self._value = True\n\n  Param_None ('param-none')\n\nNow in GDB we see this:\n\n  (gdb) help set param-none\n  This command is not documented.\n  This command is not documented.\n\nThat's not great, the duplicated text looks a bit weird.  If we drop\ndifferent parts we get different results.  Here's what we get if the\nuser drops the set_doc and show_doc attributes:\n\n  (gdb) help set param-doc\n  This command is not documented.\n  This is the class documentation string.\n\nThat kind of sucks, we say it's undocumented, then proceed to print\nthe documentation.  Finally, if we drop the class documentation but\nkeep the set_doc and show_doc:\n\n  (gdb) help set param-set-show\n  Set the state of this parameter\n  This command is not documented.\n\nThat seems OK.\n\nSo, I think there's room for improvement.\n\nWith this patch, for the four cases above we now see this:\n\n  # All values provided by the user, no change in this case:\n  (gdb) help set param-all\n  Set the state of this parameter\n  This is the class documentation string.\n\n  # Nothing provided by the user, the first string is now different:\n  (gdb) help set param-none\n  Set the current value of 'param-none'.\n  This command is not documented.\n\n  # Only the class documentation is provided, the first string is\n  # changed as in the previous case:\n  (gdb) help set param-doc\n  Set the current value of 'param-doc'.\n  This is the class documentation string.\n\n  # Only the set_doc and show_doc are provided, this case is unchanged\n  # from before the patch:\n  (gdb) help set param-set-show\n  Set the state of this parameter\n  This command is not documented.\n\nThe one place where this change might be considered a negative is when\ndealing with prefix commands.  If we create a prefix command but don't\nsupply the set_doc / show_doc strings, then this is what we saw before\nmy patch:\n\n  (gdb) python Param_None ('print param-none')\n  (gdb) help set print\n  set print, set pr, set p\n  Generic command for setting how things print.\n\n  List of set print subcommands:\n\n  ... snip ...\n  set print param-none -- This command is not documented.\n  ... snip ...\n\nAnd after my patch:\n\n  (gdb) python Param_None ('print param-none')\n  (gdb) help set print\n  set print, set pr, set p\n  Generic command for setting how things print.\n\n  List of set print subcommands:\n\n  ... snip ...\n  set print param-none -- Set the current value of 'print param-none'.\n  ... snip ...\n\nThis seems slightly less helpful than before, but I don't think its\nterrible.\n\nAdditionally, I've changed what we print when the get_show_string\nmethod is not provided in Python.\n\nBack when gdb.Parameter was first added to GDB, we didn't provide a\nshow function when registering the internal command object within\nGDB.  As a result, GDB would make use of its \"magic\" mangling of the\nshow_doc string to create a sentence that would display the current\nvalue (see deprecated_show_value_hack in cli/cli-setshow.c).\n\nHowever, when we added support for the get_show_string method to\ngdb.Parameter, there was an attempt to maintain backward compatibility\nby displaying the show_doc string with the current value appended, see\nget_show_value in py-param.c.  Unfortunately, this isn't anywhere\nclose to what deprecated_show_value_hack does, and the results are\npretty poor, for example, this is GDB before my patch:\n\n  (gdb) show param-none\n  This command is not documented. off\n\nI think we can all agree that this is pretty bad.\n\nAfter my patch, we how show this:\n\n  (gdb) show param-none\n  The current value of 'param-none' is \"off\".\n\nWhich at least is a real sentence, even if it's not very informative.\n\nThis patch does change the way that the Python API behaves slightly,\nbut only in the cases when the user has missed providing GDB with some\ninformation.  In most cases I think the new behaviour is a lot better,\nthere's the one case (noted above) which is a bit iffy, but I think is\nstill OK.\n\nI've updated the existing gdb.python/py-parameter.exp test to cover\nthe modified behaviour.\n\nFinally, I've updated the documentation to (I hope) make it clearer\nhow the various bits of help text come together.",
    "tree": {
      "sha": "f343468dca466eab905282b7a63a7707e2933c97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f343468dca466eab905282b7a63a7707e2933c97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bbea68079781ac4c2fc941867ee9888585cafb77",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbea68079781ac4c2fc941867ee9888585cafb77",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bbea68079781ac4c2fc941867ee9888585cafb77",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbea68079781ac4c2fc941867ee9888585cafb77/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "30a87e90be195dcce555a0904cc5dbd960349271",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/30a87e90be195dcce555a0904cc5dbd960349271",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/30a87e90be195dcce555a0904cc5dbd960349271"
    }
  ],
  "stats": {
    "total": 181,
    "additions": 151,
    "deletions": 30
  },
  "files": [
    {
      "sha": "a71350ba68b2c0a22b5ad6fe97d105f41d9deca7",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=bbea68079781ac4c2fc941867ee9888585cafb77",
      "patch": "@@ -145,6 +145,20 @@ cmd_list_element::prefixname () const\n   return prefixname;\n }\n \n+/* See cli/cli-decode.h.  */\n+\n+std::vector<std::string>\n+cmd_list_element::command_components () const\n+{\n+  std::vector<std::string> result;\n+\n+  if (this->prefix != nullptr)\n+    result = this->prefix->command_components ();\n+\n+  result.emplace_back (std::string (this->name));\n+  return result;\n+}\n+\n /* Add element named NAME.\n    Space for NAME and DOC must be allocated by the caller.\n    CLASS is the top level category into which commands are broken down"
    },
    {
      "sha": "db35ea4982bfadd19ba7ffe3051859c1d4db1d0b",
      "filename": "gdb/cli/cli-decode.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/cli/cli-decode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/cli/cli-decode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.h?ref=bbea68079781ac4c2fc941867ee9888585cafb77",
      "patch": "@@ -80,6 +80,12 @@ struct cmd_list_element\n      For non-prefix commands, return an empty string.  */\n   std::string prefixname () const;\n \n+  /* Return a vector of strings describing the components of the full name\n+     of this command.  For example, if this command is 'set AA BB CC',\n+     then the vector will contain 4 elements 'set', 'AA', 'BB', and 'CC'\n+     in that order.  */\n+  std::vector<std::string> command_components () const;\n+\n   /* Return true if this command is an alias of another command.  */\n   bool is_alias () const\n   { return this->alias_target != nullptr; }"
    },
    {
      "sha": "da88b8a7690f85a6ac9fa9f07763d9c98c693d76",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 32,
      "deletions": 9,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=bbea68079781ac4c2fc941867ee9888585cafb77",
      "patch": "@@ -4175,23 +4175,46 @@ represent the possible values for the parameter.\n If @var{parameter-class} is not @code{PARAM_ENUM}, then the presence\n of a fourth argument will cause an exception to be thrown.\n \n-The help text for the new parameter is taken from the Python\n-documentation string for the parameter's class, if there is one.  If\n-there is no documentation string, a default value is used.\n+The help text for the new parameter includes the Python documentation\n+string from the parameter's class, if there is one.  If there is no\n+documentation string, a default value is used.  The documentation\n+string is included in the output of the parameters @code{help set} and\n+@code{help show} commands, and should be written taking this into\n+account.\n @end defun\n \n @defvar Parameter.set_doc\n If this attribute exists, and is a string, then its value is used as\n-the help text for this parameter's @code{set} command.  The value is\n-examined when @code{Parameter.__init__} is invoked; subsequent changes\n-have no effect.\n+the first part of the help text for this parameter's @code{set}\n+command.  The second part of the help text is taken from the\n+documentation string for the parameter's class, if there is one.\n+\n+The value of @code{set_doc} should give a brief summary specific to\n+the set action, this text is only displayed when the user runs the\n+@code{help set} command for this parameter.  The class documentation\n+should be used to give a fuller description of what the parameter\n+does, this text is displayed for both the @code{help set} and\n+@code{help show} commands.\n+\n+The @code{set_doc} value is examined when @code{Parameter.__init__} is\n+invoked; subsequent changes have no effect.\n @end defvar\n \n @defvar Parameter.show_doc\n If this attribute exists, and is a string, then its value is used as\n-the help text for this parameter's @code{show} command.  The value is\n-examined when @code{Parameter.__init__} is invoked; subsequent changes\n-have no effect.\n+the first part of the help text for this parameter's @code{show}\n+command.  The second part of the help text is taken from the\n+documentation string for the parameter's class, if there is one.\n+\n+The value of @code{show_doc} should give a brief summary specific to\n+the show action, this text is only displayed when the user runs the\n+@code{help show} command for this parameter.  The class documentation\n+should be used to give a fuller description of what the parameter\n+does, this text is displayed for both the @code{help set} and\n+@code{help show} commands.\n+\n+The @code{show_doc} value is examined when @code{Parameter.__init__}\n+is invoked; subsequent changes have no effect.\n @end defvar\n \n @defvar Parameter.value"
    },
    {
      "sha": "00f917edb308c9af41b103916eb69d43977c6a79",
      "filename": "gdb/python/py-param.c",
      "status": "modified",
      "additions": 73,
      "deletions": 11,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/python/py-param.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/python/py-param.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-param.c?ref=bbea68079781ac4c2fc941867ee9888585cafb77",
      "patch": "@@ -331,14 +331,59 @@ set_attr (PyObject *obj, PyObject *attr_name, PyObject *val)\n   return PyObject_GenericSetAttr (obj, attr_name, val);\n }\n \n+/* Build up the path to command C, but drop the first component of the\n+   command prefix.  This is only intended for use with the set/show\n+   parameters this file deals with, the first prefix should always be\n+   either 'set' or 'show'.\n+\n+   As an example, if this full command is 'set prefix_a prefix_b command'\n+   this function will return the string 'prefix_a prefix_b command'.  */\n+\n+static std::string\n+full_cmd_name_without_first_prefix (struct cmd_list_element *c)\n+{\n+  std::vector<std::string> components\n+    = c->command_components ();\n+  gdb_assert (components.size () > 1);\n+  std::string result = components[1];\n+  for (int i = 2; i < components.size (); ++i)\n+    result += \" \" + components[i];\n+  return result;\n+}\n+\n+/* The different types of documentation string.  */\n+\n+enum doc_string_type\n+{\n+  doc_string_set,\n+  doc_string_show,\n+  doc_string_description\n+};\n+\n /* A helper function which returns a documentation string for an\n    object. */\n \n static gdb::unique_xmalloc_ptr<char>\n-get_doc_string (PyObject *object, PyObject *attr)\n+get_doc_string (PyObject *object, enum doc_string_type doc_type,\n+\t\tconst char *cmd_name)\n {\n   gdb::unique_xmalloc_ptr<char> result;\n \n+  PyObject *attr = nullptr;\n+  switch (doc_type)\n+    {\n+    case doc_string_set:\n+      attr = set_doc_cst;\n+      break;\n+    case doc_string_show:\n+      attr = show_doc_cst;\n+      break;\n+    case doc_string_description:\n+      attr = gdbpy_doc_cst;\n+      break;\n+    }\n+  gdb_assert (attr != nullptr);\n+\n   if (PyObject_HasAttr (object, attr))\n     {\n       gdbpy_ref<> ds_obj (PyObject_GetAttr (object, attr));\n@@ -350,8 +395,21 @@ get_doc_string (PyObject *object, PyObject *attr)\n \t    gdbpy_print_stack ();\n \t}\n     }\n-  if (! result)\n-    result.reset (xstrdup (_(\"This command is not documented.\")));\n+\n+  if (result == nullptr)\n+    {\n+      if (doc_type == doc_string_description)\n+\tresult.reset (xstrdup (_(\"This command is not documented.\")));\n+      else\n+\t{\n+\t  if (doc_type == doc_string_show)\n+\t    result = xstrprintf (_(\"Show the current value of '%s'.\"),\n+\t\t\t\t cmd_name);\n+\t  else\n+\t    result = xstrprintf (_(\"Set the current value of '%s'.\"),\n+\t\t\t\t cmd_name);\n+\t}\n+    }\n   return result;\n }\n \n@@ -462,11 +520,15 @@ get_show_value (struct ui_file *file, int from_tty,\n     }\n   else\n     {\n-      /* We have to preserve the existing < GDB 7.3 API.  If a\n-\t callback function does not exist, then attempt to read the\n-\t show_doc attribute.  */\n-      show_doc_string  = get_doc_string (obj, show_doc_cst);\n-      fprintf_filtered (file, \"%s %s\\n\", show_doc_string.get (), value);\n+      /* If there is no 'get_show_string' callback then we want to show\n+\t something sensible here.  In older versions of GDB (< 7.3) we\n+\t didn't support 'get_show_string', and instead we just made use of\n+\t GDB's builtin use of the show_doc.  However, GDB's builtin\n+\t show_doc adjustment is not i18n friendly, so, instead, we just\n+\t print this generic string.  */\n+      std::string cmd_path = full_cmd_name_without_first_prefix (c);\n+      fprintf_filtered (file, _(\"The current value of '%s' is \\\"%s\\\".\\n\"),\n+\t\t\t\tcmd_path.c_str (), value);\n     }\n }\n \f\n@@ -737,9 +799,9 @@ parmpy_init (PyObject *self, PyObject *args, PyObject *kwds)\n   if (cmd_name == nullptr)\n     return -1;\n \n-  set_doc = get_doc_string (self, set_doc_cst);\n-  show_doc = get_doc_string (self, show_doc_cst);\n-  doc = get_doc_string (self, gdbpy_doc_cst);\n+  set_doc = get_doc_string (self, doc_string_set, name);\n+  show_doc = get_doc_string (self, doc_string_show, name);\n+  doc = get_doc_string (self, doc_string_description, cmd_name.get ());\n \n   Py_INCREF (self);\n "
    },
    {
      "sha": "98d4b2d4684cee56602bffa67a9fc7c934926fb8",
      "filename": "gdb/testsuite/gdb.python/py-parameter.exp",
      "status": "modified",
      "additions": 26,
      "deletions": 10,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/testsuite/gdb.python/py-parameter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bbea68079781ac4c2fc941867ee9888585cafb77/gdb/testsuite/gdb.python/py-parameter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-parameter.exp?ref=bbea68079781ac4c2fc941867ee9888585cafb77",
      "patch": "@@ -127,7 +127,10 @@ proc_with_prefix test_boolean_parameter { } {\n     gdb_test \"python print (test_param.value)\" \"False\" \\\n \t\"test boolean parameter value is False\"\n     gdb_test \"help show print test-param\" \\\n-\t\"Show the state of the boolean test-param.*\" \"test show help\"\n+\t[multi_line \\\n+\t     \"Show the state of the boolean test-param\" \\\n+\t     \"When enabled, test param does something useful\\\\. When disabled, does nothing\\\\.\"] \\\n+\t\"test show help\"\n     gdb_test \"help set print test-param\" \\\n \t\"Set the state of the boolean test-param.*\" \"test set help\"\n     gdb_test \"help set print\" \\\n@@ -233,11 +236,14 @@ proc_with_prefix test_undocumented_parameter { } {\n     gdb_test \"python print (test_undoc_param.value)\" \\\n \t\"False\" \"test undocumented parameter value is False\"\n     gdb_test \"help show print test-undoc-param\" \\\n-\t\"This command is not documented.*\" \"test show help\"\n+\t[multi_line \\\n+\t     \"Show the current value of 'print test-undoc-param'\\\\.\" \\\n+\t     \"This command is not documented.*\"] \\\n+\t\"test show help\"\n     gdb_test \"help set print test-undoc-param\" \\\n \t\"This command is not documented.*\" \"test set help\"\n     gdb_test \"help set print\" \\\n-\t\"set print test-undoc-param -- This command is not documented.*\" \\\n+\t\"set print test-undoc-param -- Set the current value of 'print test-undoc-param'\\\\..*\" \\\n \t\"test general help\"\n }\n \n@@ -255,19 +261,24 @@ proc_with_prefix test_really_undocumented_parameter { } {\n \t\"end\"\n \n     gdb_test \"show print test-nodoc-param\" \\\n-\t\"This command is not documented.*\" \"show parameter on\"\n+\t\"The current value of 'print test-nodoc-param' is \\\"on\\\"\\\\.\" \\\n+\t\"show parameter on\"\n     gdb_test_no_output \"set print test-nodoc-param off\" \\\n \t\"turn off parameter\"\n     gdb_test \"show print test-nodoc-param\" \\\n-\t\"This command is not documented.*.*\" \"show parameter off\"\n+\t\"The current value of 'print test-nodoc-param' is \\\"off\\\"\\\\.\" \\\n+\t\"show parameter off\"\n     gdb_test \"python print (test_nodoc_param.value)\" \\\n \t\"False\" \"test really undocumented parameter value is False\"\n     gdb_test \"help show print test-nodoc-param\" \\\n-\t\"This command is not documented.*\" \"test show help\"\n+\t[multi_line \\\n+\t     \"Show the current value of 'print test-nodoc-param'\\\\.\" \\\n+\t     \"This command is not documented.*\"] \\\n+\t\"test show help\"\n     gdb_test \"help set print test-nodoc-param\" \\\n \t\"This command is not documented.*\" \"test set help\"\n     gdb_test \"help set print\" \\\n-\t\"set print test-nodoc-param -- This command is not documented.*\" \\\n+\t\"set print test-nodoc-param -- Set the current value of 'print test-nodoc-param'\\\\..*\" \\\n \t\"test general help\"\n }\n \n@@ -290,14 +301,19 @@ proc_with_prefix test_deprecated_api_parameter { } {\n     gdb_test \"python print (test_param.value)\" \"True\" \\\n \t\"test deprecated API parameter value is True\"\n     gdb_test \"show print test-param\" \\\n-\t\"State of the Test Parameter on.*\" \"show parameter on\"\n+\t\"The current value of 'print test-param' is \\\"on\\\"\\\\.\" \\\n+\t\"show parameter on\"\n     gdb_test_no_output \"set print test-param off\" \"turn off parameter\"\n     gdb_test \"show print test-param\" \\\n-\t\"State of the Test Parameter off.*\" \"show parameter off\"\n+\t\"The current value of 'print test-param' is \\\"off\\\"\\\\.\" \\\n+\t\"show parameter off\"\n     gdb_test \"python print (test_param.value)\" \"False\" \\\n \t\"test deprecated API parameter value is False\"\n     gdb_test \"help show print test-param\" \\\n-\t\"State of the Test Parameter.*\" \"test show help\"\n+\t[multi_line \\\n+\t     \"State of the Test Parameter\" \\\n+\t     \"When enabled, test param does something useful\\\\. When disabled, does nothing\\\\.\"] \\\n+\t\"test show help\"\n     gdb_test \"help set print test-param\" \\\n \t\"Set the state of the Test Parameter.*\" \"test set help\"\n     gdb_test \"help set print\" \\"
    }
  ]
}