{
  "sha": "ebc06ad8f4365b8881ac40760fbb8cc71b490edd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWJjMDZhZDhmNDM2NWI4ODgxYWM0MDc2MGZiYjhjYzcxYjQ5MGVkZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:35Z"
    },
    "message": "Introduce ada_structop_operation\n\nThis adds class ada_structop_operation, which implements\nSTRUCTOP_STRUCT for Ada.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_structop_operation::evaluate): New method.\n\t* ada-exp.h (class ada_structop_operation): New.",
    "tree": {
      "sha": "91145aac4d52025b624e6bbca2f3d53da95762f9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/91145aac4d52025b624e6bbca2f3d53da95762f9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ebc06ad8f4365b8881ac40760fbb8cc71b490edd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ebc06ad8f4365b8881ac40760fbb8cc71b490edd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ebc06ad8f4365b8881ac40760fbb8cc71b490edd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ebc06ad8f4365b8881ac40760fbb8cc71b490edd/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e8c33fa16a85801af1812bc9e6120cdf0538b401",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8c33fa16a85801af1812bc9e6120cdf0538b401",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e8c33fa16a85801af1812bc9e6120cdf0538b401"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 63,
    "deletions": 0
  },
  "files": [
    {
      "sha": "781fa8bf70365909bc422f11af73bb50d68c9d23",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebc06ad8f4365b8881ac40760fbb8cc71b490edd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebc06ad8f4365b8881ac40760fbb8cc71b490edd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ebc06ad8f4365b8881ac40760fbb8cc71b490edd",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_structop_operation::evaluate): New method.\n+\t* ada-exp.h (class ada_structop_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_unop_ind_operation::evaluate): New method."
    },
    {
      "sha": "34b9c1d166da0fba7f37b14ae632555dd827bc74",
      "filename": "gdb/ada-exp.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebc06ad8f4365b8881ac40760fbb8cc71b490edd/gdb/ada-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebc06ad8f4365b8881ac40760fbb8cc71b490edd/gdb/ada-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.h?ref=ebc06ad8f4365b8881ac40760fbb8cc71b490edd",
      "patch": "@@ -371,6 +371,22 @@ class ada_unop_ind_operation\n \t\t   enum noside noside) override;\n };\n \n+/* Implement STRUCTOP_STRUCT for Ada.  */\n+class ada_structop_operation\n+  : public structop_base_operation\n+{\n+public:\n+\n+  using structop_base_operation::structop_base_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override;\n+\n+  enum exp_opcode opcode () const override\n+  { return STRUCTOP_STRUCT; }\n+};\n+\n } /* namespace expr */\n \n #endif /* ADA_EXP_H */"
    },
    {
      "sha": "915fbe36f8c3d6635123701acb90fdd190a4d7a8",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ebc06ad8f4365b8881ac40760fbb8cc71b490edd/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ebc06ad8f4365b8881ac40760fbb8cc71b490edd/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=ebc06ad8f4365b8881ac40760fbb8cc71b490edd",
      "patch": "@@ -10788,6 +10788,48 @@ ada_unop_ind_operation::evaluate (struct type *expect_type,\n     return ada_value_ind (arg1);\n }\n \n+value *\n+ada_structop_operation::evaluate (struct type *expect_type,\n+\t\t\t\t  struct expression *exp,\n+\t\t\t\t  enum noside noside)\n+{\n+  value *arg1 = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+  const char *str = std::get<1> (m_storage).c_str ();\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    {\n+      struct type *type;\n+      struct type *type1 = value_type (arg1);\n+\n+      if (ada_is_tagged_type (type1, 1))\n+\t{\n+\t  type = ada_lookup_struct_elt_type (type1, str, 1, 1);\n+\n+\t  /* If the field is not found, check if it exists in the\n+\t     extension of this object's type. This means that we\n+\t     need to evaluate completely the expression.  */\n+\n+\t  if (type == NULL)\n+\t    {\n+\t      arg1 = std::get<0> (m_storage)->evaluate (nullptr, exp,\n+\t\t\t\t\t\t\tEVAL_NORMAL);\n+\t      arg1 = ada_value_struct_elt (arg1, str, 0);\n+\t      arg1 = unwrap_value (arg1);\n+\t      type = value_type (ada_to_fixed_value (arg1));\n+\t    }\n+\t}\n+      else\n+\ttype = ada_lookup_struct_elt_type (type1, str, 1, 0);\n+\n+      return value_zero (ada_aligned_type (type), lval_memory);\n+    }\n+  else\n+    {\n+      arg1 = ada_value_struct_elt (arg1, str, 0);\n+      arg1 = unwrap_value (arg1);\n+      return ada_to_fixed_value (arg1);\n+    }\n+}\n+\n }\n \n /* Implement the evaluate_exp routine in the exp_descriptor structure"
    }
  ]
}