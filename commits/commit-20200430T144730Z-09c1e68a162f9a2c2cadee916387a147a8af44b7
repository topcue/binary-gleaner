{
  "sha": "09c1e68a162f9a2c2cadee916387a147a8af44b7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDljMWU2OGExNjJmOWEyYzJjYWRlZTkxNjM4N2ExNDdhOGFmNDRiNw==",
  "commit": {
    "author": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-04-30T14:47:30Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-30T14:47:30Z"
    },
    "message": "AArch64: add GAS support for UDF instruction\n\nbinutils * testsuite/binutils-all/aarch64/in-order-all.d: Update to use new\n          disassembly.\n        * testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.\n\nld/     * testsuite/ld-aarch64/erratum843419_tls_ie.d: Use udf in disassembly.\n        * testsuite/ld-aarch64/farcall-b-section.d: Likewise.\n        * testsuite/ld-aarch64/farcall-back.d: Likewise.\n        * testsuite/ld-aarch64/farcall-bl-section.d: Likewise.\n\ngas/   * config/tc-aarch64.c (fix_insn): Implement for AARCH64_OPND_UNDEFINED.\n          (parse_operands): Implement for AARCH64_OPND_UNDEFINED.\n        * testsuite/gas/aarch64/udf.s: New.\n        * testsuite/gas/aarch64/udf.d: New.\n        * testsuite/gas/aarch64/udf-invalid.s: New.\n        * testsuite/gas/aarch64/udf-invalid.l: New.\n        * testsuite/gas/aarch64/udf-invalid.d: New.\n\ninclude * opcode/aarch64.h (enum aarch64_opnd): Add AARCH64_OPND_UNDEFINED.\n\nopcodes * aarch64-opc.h (enum aarch64_field_kind): Add FLD_imm16_2.\n        * aarch64-opc.c (fields): Add entry for FLD_imm16_2.\n          (operand_general_constraint_met_p): validate AARCH64_OPND_UNDEFINED.\n        * aarch64-tbl.h (aarch64_opcode_table): Add udf instruction, entry for\n          FLD_imm16_2.\n        * aarch64-asm-2.c: Regenerated.\n        * aarch64-dis-2.c: Regenerated.\n        * aarch64-opc-2.c: Regenerated.",
    "tree": {
      "sha": "a0c677f1aa242b8e99f55a6c9856e24043e8de23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a0c677f1aa242b8e99f55a6c9856e24043e8de23"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/09c1e68a162f9a2c2cadee916387a147a8af44b7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09c1e68a162f9a2c2cadee916387a147a8af44b7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/09c1e68a162f9a2c2cadee916387a147a8af44b7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09c1e68a162f9a2c2cadee916387a147a8af44b7/comments",
  "author": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8a8a1171237d45e20b2ebb18ee2d3f8686e01b82",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a8a1171237d45e20b2ebb18ee2d3f8686e01b82",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8a8a1171237d45e20b2ebb18ee2d3f8686e01b82"
    }
  ],
  "stats": {
    "total": 5101,
    "additions": 2612,
    "deletions": 2489
  },
  "files": [
    {
      "sha": "d4fa9fb9874531255472aee93293851150d6ed17",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* testsuite/binutils-all/aarch64/in-order-all.d: Update to use new\n+\tdisassembly.\n+\t* testsuite/binutils-all/aarch64/out-of-order-all.d: Likewise.\n+\n 2020-04-30  Nick Clifton  <nickc@redhat.com>\n \n \t* testsuite/lib/binutils-common.exp (check_pie_support): New"
    },
    {
      "sha": "a6daea81456ea60c2165e2642e29a5960abf02e4",
      "filename": "binutils/testsuite/binutils-all/aarch64/in-order-all.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/binutils/testsuite/binutils-all/aarch64/in-order-all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/binutils/testsuite/binutils-all/aarch64/in-order-all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/aarch64/in-order-all.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -10,7 +10,7 @@ Disassembly of section \\.func1:\n \n .+ <v1>:\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n-[^:]+:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+[^:]+:\t00000000 \tudf\t#0\n \n Disassembly of section \\.func2:\n \n@@ -25,12 +25,12 @@ Disassembly of section \\.func3:\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n-[^:]+:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+[^:]+:\t00000000 \tudf\t#0\n \n Disassembly of section \\.rodata:\n \n .+ <\\.rodata>:\n-[^:]+:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+[^:]+:\t00000000 \tudf\t#0\n \n Disassembly of section .global:\n "
    },
    {
      "sha": "955d1904653cd33ce0e72beea897c6e21baa088f",
      "filename": "binutils/testsuite/binutils-all/aarch64/out-of-order-all.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/binutils/testsuite/binutils-all/aarch64/out-of-order-all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/binutils/testsuite/binutils-all/aarch64/out-of-order-all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/aarch64/out-of-order-all.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -20,7 +20,7 @@ Disassembly of section \\.func1:\n \n .+ <v1>:\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n-[^:]+:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+[^:]+:\t00000000 \tudf\t#0\n \n Disassembly of section \\.func3:\n \n@@ -30,9 +30,9 @@ Disassembly of section \\.func3:\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n [^:]+:\t8b010000 \tadd\tx0, x0, x1\n-[^:]+:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+[^:]+:\t00000000 \tudf\t#0\n \n Disassembly of section \\.rodata:\n \n .+ <\\.rodata>:\n-[^:]+:\t00000000 \t\\.inst\t0x00000000 ; undefined\n+[^:]+:\t00000000 \tudf\t#0"
    },
    {
      "sha": "1b973f584d170dae2e28cbb8eb3f93dcd894580b",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -1,3 +1,14 @@\n+2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/tc-aarch64.c (fix_insn): Implement for\n+\tAARCH64_OPND_UNDEFINED.\n+\t(parse_operands): Implement for AARCH64_OPND_UNDEFINED.\n+\t* testsuite/gas/aarch64/udf.s: New.\n+\t* testsuite/gas/aarch64/udf.d: New.\n+\t* testsuite/gas/aarch64/udf-invalid.s: New.\n+\t* testsuite/gas/aarch64/udf-invalid.l: New.\n+\t* testsuite/gas/aarch64/udf-invalid.d: New.\n+\n 2020-04-30  Yoshinori Sato <ysato@users.sourceforge.jp>\n \n \t* config/tc-rx.c (elf_flags): Reset default value."
    },
    {
      "sha": "da786ba5e9bd51c0b1c5a5aadfbbbdebd321e529",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -6149,6 +6149,7 @@ parse_operands (char *str, const aarch64_opcode *opcode)\n \t  break;\n \n \tcase AARCH64_OPND_EXCEPTION:\n+\tcase AARCH64_OPND_UNDEFINED:\n \t  po_misc_or_fail (parse_immediate_expression (&str, &inst.reloc.exp,\n \t\t\t\t\t\t       imm_reg_type));\n \t  assign_imm_if_const_or_fixup_later (&inst.reloc, info,\n@@ -7745,11 +7746,12 @@ fix_insn (fixS *fixP, uint32_t flags, offsetT value)\n   switch (opnd)\n     {\n     case AARCH64_OPND_EXCEPTION:\n+    case AARCH64_OPND_UNDEFINED:\n       if (unsigned_overflow (value, 16))\n \tas_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t      _(\"immediate out of range\"));\n       insn = get_aarch64_insn (buf);\n-      insn |= encode_svc_imm (value);\n+      insn |= (opnd == AARCH64_OPND_EXCEPTION) ? encode_svc_imm (value) : value;\n       put_aarch64_insn (buf, insn);\n       break;\n "
    },
    {
      "sha": "bdb768d8a345b8b18222b585e77fa12490faad05",
      "filename": "gas/testsuite/gas/aarch64/udf-invalid.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/udf-invalid.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -0,0 +1,3 @@\n+#name: invalid udf instructions\n+#source: udf-invalid.s\n+#error_output: udf-invalid.l"
    },
    {
      "sha": "71a0791151241e11c01c0a4ee17262538f492185",
      "filename": "gas/testsuite/gas/aarch64/udf-invalid.l",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf-invalid.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf-invalid.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/udf-invalid.l?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -0,0 +1,4 @@\n+[^:]*: Assembler messages:\n+.*: Error: immediate value out of range 0 to 65535 at operand 1 -- `udf #65536'\n+.*: Error: immediate value out of range 0 to 65535 at operand 1 -- `udf 0xeffff'\n+.*: Error: immediate value out of range 0 to 65535 at operand 1 -- `udf -1'"
    },
    {
      "sha": "937126fcf5a6d5190085a6dcb39b2be152a4a25e",
      "filename": "gas/testsuite/gas/aarch64/udf-invalid.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/udf-invalid.s?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -0,0 +1,6 @@\n+// Instructions in this file are invalid.\n+// See udf.s for valid instructions.\n+.text\n+udf #65536\n+udf 0xeffff\n+udf -1"
    },
    {
      "sha": "ae6432b36f263057dfca7a9b8e8219250a2f3617",
      "filename": "gas/testsuite/gas/aarch64/udf.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/udf.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -0,0 +1,9 @@\n+#objdump: -dr\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+0+ <.*>:\n+.*:\t0000002a \tudf\t#42\n+.*:\t0000ffff \tudf\t#65535"
    },
    {
      "sha": "fec30a31051cccbc07fa72a53cfbed610df02ccf",
      "filename": "gas/testsuite/gas/aarch64/udf.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/gas/testsuite/gas/aarch64/udf.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/udf.s?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -0,0 +1,5 @@\n+// Test file for AArch64 udf.\n+\n+.text\n+udf #42\n+udf #65535"
    },
    {
      "sha": "1d322e9a8cb1ccfadc27abde9e703593bf5ad60c",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (enum aarch64_opnd): Add\n+\tAARCH64_OPND_UNDEFINED.\n+\n 2020-04-23  Anton Kolesov  <anton.kolesov@synopsys.com>\n \n \t* elf/common.h (NT_ARC_V2): New macro definitions."
    },
    {
      "sha": "817ca1e674effd246f1b76cdc88d84ca9a507970",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -272,6 +272,7 @@ enum aarch64_opnd\n   AARCH64_OPND_UIMM10,\t/* Unsigned 10-bit immediate in addg/subg.  */\n   AARCH64_OPND_BIT_NUM,\t/* Immediate.  */\n   AARCH64_OPND_EXCEPTION,/* imm16 operand in exception instructions.  */\n+  AARCH64_OPND_UNDEFINED,/* imm16 operand in undefined instruction. */\n   AARCH64_OPND_CCMP_IMM,/* Immediate in conditional compare instructions.  */\n   AARCH64_OPND_SIMM5,\t/* 5-bit signed immediate in the imm5 field.  */\n   AARCH64_OPND_NZCV,\t/* Flag bit specifier giving an alternative value for"
    },
    {
      "sha": "0407539a45bf4b9a6c7899baf8a176eb4acc1e29",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* testsuite/ld-aarch64/erratum843419_tls_ie.d: Use udf in disassembly.\n+\t* testsuite/ld-aarch64/farcall-b-section.d: Likewise.\n+\t* testsuite/ld-aarch64/farcall-back.d: Likewise.\n+\t* testsuite/ld-aarch64/farcall-bl-section.d: Likewise.\n+\n 2020-04-30  Nick Clifton  <nickc@redhat.com>\n \n \t* testsuite/ld-elf/compress1c.d: XFAIL if thet target linker does"
    },
    {
      "sha": "4d2b111644225b75597e390b698161fe066601d4",
      "filename": "ld/testsuite/ld-aarch64/erratum843419_tls_ie.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/erratum843419_tls_ie.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/erratum843419_tls_ie.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/erratum843419_tls_ie.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -23,10 +23,10 @@ Disassembly of section .e843419:\n [ ]*20001010:\t0b0700e0 \tadd\tw0, w7, w7\n [ ]*20001014:\t910043ff \tadd\tsp, sp, #0x10\n [ ]*20001018:\td65f03c0 \tret\n-[ ]*2000101c:\t00000000 \t.inst\t0x00000000 ; undefined\n+[ ]*2000101c:\t00000000 \tudf\t#0\n [ ]*20001020:\t14000400 \tb\t20002020 <e843419\\+0x1028>\n [ ]*20001024:\td503201f \tnop\n-[ ]*20001028:\t00000000 \t.inst\t0x00000000 ; undefined\n+[ ]*20001028:\t00000000 \tudf\t#0\n [ ]*2000102c:\t17fffff7 \tb\t20001008 <e843419\\+0x10>\n \t...\n "
    },
    {
      "sha": "40b10720953f5b0ec93bebcb8a190fb01cbe540c",
      "filename": "ld/testsuite/ld-aarch64/farcall-b-section.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/farcall-b-section.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/farcall-b-section.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/farcall-b-section.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -19,7 +19,7 @@ Disassembly of section .text:\n     1018:\t90040010 \tadrp\tx16, 8001000 <bar>\n     101c:\t91001210 \tadd\tx16, x16, #0x4\n     1020:\td61f0200 \tbr\tx16\n-    1024:\t00000000 \t.inst\t0x00000000 ; undefined\n+    1024:\t00000000 \tudf\t#0\n \n .* <___veneer>:\n     1028:\t90040010 \tadrp\tx16, 8001000 <bar>"
    },
    {
      "sha": "20204eef5e25b89f2d1e135d7df2067f12357902",
      "filename": "ld/testsuite/ld-aarch64/farcall-back.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/farcall-back.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/farcall-back.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/farcall-back.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -27,7 +27,7 @@ Disassembly of section .text:\n     2028:\tf07ffff0 \tadrp\tx16, 100001000 <bar1\\+0x1000>\n     202c:\t91002210 \tadd\tx16, x16, #0x8\n     2030:\td61f0200 \tbr\tx16\n-    2034:\t00000000 \t.inst\t0x00000000 ; undefined\n+    2034:\t00000000 \tudf\t#0\n \n 0000000000002038 <__bar3_veneer>:\n     2038:\t58000090 \tldr\tx16, 2048 <__bar3_veneer\\+0x10>"
    },
    {
      "sha": "b3ed36fbb9477b60fe9e4fd65e781d494061c726",
      "filename": "ld/testsuite/ld-aarch64/farcall-bl-section.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/farcall-bl-section.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/ld/testsuite/ld-aarch64/farcall-bl-section.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/farcall-bl-section.d?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -19,7 +19,7 @@ Disassembly of section .text:\n     1018:\t90040010 \tadrp\tx16, 8001000 <bar>\n     101c:\t91001210 \tadd\tx16, x16, #0x4\n     1020:\td61f0200 \tbr\tx16\n-    1024:\t00000000 \t.inst\t0x00000000 ; undefined\n+    1024:\t00000000 \tudf\t#0\n \n .* <___veneer>:\n     1028:\t90040010 \tadrp\tx16, 8001000 <bar>"
    },
    {
      "sha": "91445661bd540c4f61e846a75b638397ac1fefd1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -1,3 +1,15 @@\n+2020-04-30  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* aarch64-opc.h (enum aarch64_field_kind): Add FLD_imm16_2.\n+\t* aarch64-opc.c (fields): Add entry for FLD_imm16_2.\n+\t(operand_general_constraint_met_p): validate\n+\tAARCH64_OPND_UNDEFINED.\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add udf instruction, entry\n+\tfor FLD_imm16_2.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n 2020-04-29  Nick Clifton  <nickc@redhat.com>\n \n \tPR 22699"
    },
    {
      "sha": "379901e7a76ad6f7490d4128fabeb4ba576b9104",
      "filename": "opcodes/aarch64-asm-2.c",
      "status": "modified",
      "additions": 385,
      "deletions": 384,
      "changes": 769,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-asm-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-asm-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-asm-2.c?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -197,396 +197,396 @@ aarch64_find_real_opcode (const aarch64_opcode *opcode)\n     case 746:\t/* umsubl */\n       value = 746;\t/* --> umsubl.  */\n       break;\n-    case 758:\t/* ror */\n-    case 757:\t/* extr */\n-      value = 757;\t/* --> extr.  */\n-      break;\n-    case 991:\t/* bic */\n-    case 990:\t/* and */\n-      value = 990;\t/* --> and.  */\n-      break;\n-    case 993:\t/* mov */\n-    case 992:\t/* orr */\n-      value = 992;\t/* --> orr.  */\n-      break;\n-    case 996:\t/* tst */\n-    case 995:\t/* ands */\n-      value = 995;\t/* --> ands.  */\n-      break;\n-    case 1001:\t/* uxtw */\n-    case 1000:\t/* mov */\n-    case 999:\t/* orr */\n-      value = 999;\t/* --> orr.  */\n+    case 759:\t/* ror */\n+    case 758:\t/* extr */\n+      value = 758;\t/* --> extr.  */\n+      break;\n+    case 992:\t/* bic */\n+    case 991:\t/* and */\n+      value = 991;\t/* --> and.  */\n+      break;\n+    case 994:\t/* mov */\n+    case 993:\t/* orr */\n+      value = 993;\t/* --> orr.  */\n+      break;\n+    case 997:\t/* tst */\n+    case 996:\t/* ands */\n+      value = 996;\t/* --> ands.  */\n+      break;\n+    case 1002:\t/* uxtw */\n+    case 1001:\t/* mov */\n+    case 1000:\t/* orr */\n+      value = 1000;\t/* --> orr.  */\n       break;\n-    case 1003:\t/* mvn */\n-    case 1002:\t/* orn */\n-      value = 1002;\t/* --> orn.  */\n+    case 1004:\t/* mvn */\n+    case 1003:\t/* orn */\n+      value = 1003;\t/* --> orn.  */\n       break;\n-    case 1007:\t/* tst */\n-    case 1006:\t/* ands */\n-      value = 1006;\t/* --> ands.  */\n+    case 1008:\t/* tst */\n+    case 1007:\t/* ands */\n+      value = 1007;\t/* --> ands.  */\n       break;\n-    case 1133:\t/* staddb */\n-    case 1037:\t/* ldaddb */\n-      value = 1037;\t/* --> ldaddb.  */\n+    case 1134:\t/* staddb */\n+    case 1038:\t/* ldaddb */\n+      value = 1038;\t/* --> ldaddb.  */\n       break;\n-    case 1134:\t/* staddh */\n-    case 1038:\t/* ldaddh */\n-      value = 1038;\t/* --> ldaddh.  */\n+    case 1135:\t/* staddh */\n+    case 1039:\t/* ldaddh */\n+      value = 1039;\t/* --> ldaddh.  */\n       break;\n-    case 1135:\t/* stadd */\n-    case 1039:\t/* ldadd */\n-      value = 1039;\t/* --> ldadd.  */\n+    case 1136:\t/* stadd */\n+    case 1040:\t/* ldadd */\n+      value = 1040;\t/* --> ldadd.  */\n       break;\n-    case 1136:\t/* staddlb */\n-    case 1041:\t/* ldaddlb */\n-      value = 1041;\t/* --> ldaddlb.  */\n+    case 1137:\t/* staddlb */\n+    case 1042:\t/* ldaddlb */\n+      value = 1042;\t/* --> ldaddlb.  */\n       break;\n-    case 1137:\t/* staddlh */\n-    case 1044:\t/* ldaddlh */\n-      value = 1044;\t/* --> ldaddlh.  */\n+    case 1138:\t/* staddlh */\n+    case 1045:\t/* ldaddlh */\n+      value = 1045;\t/* --> ldaddlh.  */\n       break;\n-    case 1138:\t/* staddl */\n-    case 1047:\t/* ldaddl */\n-      value = 1047;\t/* --> ldaddl.  */\n+    case 1139:\t/* staddl */\n+    case 1048:\t/* ldaddl */\n+      value = 1048;\t/* --> ldaddl.  */\n       break;\n-    case 1139:\t/* stclrb */\n-    case 1049:\t/* ldclrb */\n-      value = 1049;\t/* --> ldclrb.  */\n+    case 1140:\t/* stclrb */\n+    case 1050:\t/* ldclrb */\n+      value = 1050;\t/* --> ldclrb.  */\n       break;\n-    case 1140:\t/* stclrh */\n-    case 1050:\t/* ldclrh */\n-      value = 1050;\t/* --> ldclrh.  */\n+    case 1141:\t/* stclrh */\n+    case 1051:\t/* ldclrh */\n+      value = 1051;\t/* --> ldclrh.  */\n       break;\n-    case 1141:\t/* stclr */\n-    case 1051:\t/* ldclr */\n-      value = 1051;\t/* --> ldclr.  */\n+    case 1142:\t/* stclr */\n+    case 1052:\t/* ldclr */\n+      value = 1052;\t/* --> ldclr.  */\n       break;\n-    case 1142:\t/* stclrlb */\n-    case 1053:\t/* ldclrlb */\n-      value = 1053;\t/* --> ldclrlb.  */\n+    case 1143:\t/* stclrlb */\n+    case 1054:\t/* ldclrlb */\n+      value = 1054;\t/* --> ldclrlb.  */\n       break;\n-    case 1143:\t/* stclrlh */\n-    case 1056:\t/* ldclrlh */\n-      value = 1056;\t/* --> ldclrlh.  */\n+    case 1144:\t/* stclrlh */\n+    case 1057:\t/* ldclrlh */\n+      value = 1057;\t/* --> ldclrlh.  */\n       break;\n-    case 1144:\t/* stclrl */\n-    case 1059:\t/* ldclrl */\n-      value = 1059;\t/* --> ldclrl.  */\n+    case 1145:\t/* stclrl */\n+    case 1060:\t/* ldclrl */\n+      value = 1060;\t/* --> ldclrl.  */\n       break;\n-    case 1145:\t/* steorb */\n-    case 1061:\t/* ldeorb */\n-      value = 1061;\t/* --> ldeorb.  */\n+    case 1146:\t/* steorb */\n+    case 1062:\t/* ldeorb */\n+      value = 1062;\t/* --> ldeorb.  */\n       break;\n-    case 1146:\t/* steorh */\n-    case 1062:\t/* ldeorh */\n-      value = 1062;\t/* --> ldeorh.  */\n+    case 1147:\t/* steorh */\n+    case 1063:\t/* ldeorh */\n+      value = 1063;\t/* --> ldeorh.  */\n       break;\n-    case 1147:\t/* steor */\n-    case 1063:\t/* ldeor */\n-      value = 1063;\t/* --> ldeor.  */\n+    case 1148:\t/* steor */\n+    case 1064:\t/* ldeor */\n+      value = 1064;\t/* --> ldeor.  */\n       break;\n-    case 1148:\t/* steorlb */\n-    case 1065:\t/* ldeorlb */\n-      value = 1065;\t/* --> ldeorlb.  */\n+    case 1149:\t/* steorlb */\n+    case 1066:\t/* ldeorlb */\n+      value = 1066;\t/* --> ldeorlb.  */\n       break;\n-    case 1149:\t/* steorlh */\n-    case 1068:\t/* ldeorlh */\n-      value = 1068;\t/* --> ldeorlh.  */\n+    case 1150:\t/* steorlh */\n+    case 1069:\t/* ldeorlh */\n+      value = 1069;\t/* --> ldeorlh.  */\n       break;\n-    case 1150:\t/* steorl */\n-    case 1071:\t/* ldeorl */\n-      value = 1071;\t/* --> ldeorl.  */\n+    case 1151:\t/* steorl */\n+    case 1072:\t/* ldeorl */\n+      value = 1072;\t/* --> ldeorl.  */\n       break;\n-    case 1151:\t/* stsetb */\n-    case 1073:\t/* ldsetb */\n-      value = 1073;\t/* --> ldsetb.  */\n+    case 1152:\t/* stsetb */\n+    case 1074:\t/* ldsetb */\n+      value = 1074;\t/* --> ldsetb.  */\n       break;\n-    case 1152:\t/* stseth */\n-    case 1074:\t/* ldseth */\n-      value = 1074;\t/* --> ldseth.  */\n+    case 1153:\t/* stseth */\n+    case 1075:\t/* ldseth */\n+      value = 1075;\t/* --> ldseth.  */\n       break;\n-    case 1153:\t/* stset */\n-    case 1075:\t/* ldset */\n-      value = 1075;\t/* --> ldset.  */\n+    case 1154:\t/* stset */\n+    case 1076:\t/* ldset */\n+      value = 1076;\t/* --> ldset.  */\n       break;\n-    case 1154:\t/* stsetlb */\n-    case 1077:\t/* ldsetlb */\n-      value = 1077;\t/* --> ldsetlb.  */\n+    case 1155:\t/* stsetlb */\n+    case 1078:\t/* ldsetlb */\n+      value = 1078;\t/* --> ldsetlb.  */\n       break;\n-    case 1155:\t/* stsetlh */\n-    case 1080:\t/* ldsetlh */\n-      value = 1080;\t/* --> ldsetlh.  */\n+    case 1156:\t/* stsetlh */\n+    case 1081:\t/* ldsetlh */\n+      value = 1081;\t/* --> ldsetlh.  */\n       break;\n-    case 1156:\t/* stsetl */\n-    case 1083:\t/* ldsetl */\n-      value = 1083;\t/* --> ldsetl.  */\n+    case 1157:\t/* stsetl */\n+    case 1084:\t/* ldsetl */\n+      value = 1084;\t/* --> ldsetl.  */\n       break;\n-    case 1157:\t/* stsmaxb */\n-    case 1085:\t/* ldsmaxb */\n-      value = 1085;\t/* --> ldsmaxb.  */\n+    case 1158:\t/* stsmaxb */\n+    case 1086:\t/* ldsmaxb */\n+      value = 1086;\t/* --> ldsmaxb.  */\n       break;\n-    case 1158:\t/* stsmaxh */\n-    case 1086:\t/* ldsmaxh */\n-      value = 1086;\t/* --> ldsmaxh.  */\n+    case 1159:\t/* stsmaxh */\n+    case 1087:\t/* ldsmaxh */\n+      value = 1087;\t/* --> ldsmaxh.  */\n       break;\n-    case 1159:\t/* stsmax */\n-    case 1087:\t/* ldsmax */\n-      value = 1087;\t/* --> ldsmax.  */\n-      break;\n-    case 1160:\t/* stsmaxlb */\n-    case 1089:\t/* ldsmaxlb */\n-      value = 1089;\t/* --> ldsmaxlb.  */\n-      break;\n-    case 1161:\t/* stsmaxlh */\n-    case 1092:\t/* ldsmaxlh */\n-      value = 1092;\t/* --> ldsmaxlh.  */\n-      break;\n-    case 1162:\t/* stsmaxl */\n-    case 1095:\t/* ldsmaxl */\n-      value = 1095;\t/* --> ldsmaxl.  */\n-      break;\n-    case 1163:\t/* stsminb */\n-    case 1097:\t/* ldsminb */\n-      value = 1097;\t/* --> ldsminb.  */\n-      break;\n-    case 1164:\t/* stsminh */\n-    case 1098:\t/* ldsminh */\n-      value = 1098;\t/* --> ldsminh.  */\n-      break;\n-    case 1165:\t/* stsmin */\n-    case 1099:\t/* ldsmin */\n-      value = 1099;\t/* --> ldsmin.  */\n-      break;\n-    case 1166:\t/* stsminlb */\n-    case 1101:\t/* ldsminlb */\n-      value = 1101;\t/* --> ldsminlb.  */\n-      break;\n-    case 1167:\t/* stsminlh */\n-    case 1104:\t/* ldsminlh */\n-      value = 1104;\t/* --> ldsminlh.  */\n-      break;\n-    case 1168:\t/* stsminl */\n-    case 1107:\t/* ldsminl */\n-      value = 1107;\t/* --> ldsminl.  */\n-      break;\n-    case 1169:\t/* stumaxb */\n-    case 1109:\t/* ldumaxb */\n-      value = 1109;\t/* --> ldumaxb.  */\n-      break;\n-    case 1170:\t/* stumaxh */\n-    case 1110:\t/* ldumaxh */\n-      value = 1110;\t/* --> ldumaxh.  */\n-      break;\n-    case 1171:\t/* stumax */\n-    case 1111:\t/* ldumax */\n-      value = 1111;\t/* --> ldumax.  */\n-      break;\n-    case 1172:\t/* stumaxlb */\n-    case 1113:\t/* ldumaxlb */\n-      value = 1113;\t/* --> ldumaxlb.  */\n-      break;\n-    case 1173:\t/* stumaxlh */\n-    case 1116:\t/* ldumaxlh */\n-      value = 1116;\t/* --> ldumaxlh.  */\n-      break;\n-    case 1174:\t/* stumaxl */\n-    case 1119:\t/* ldumaxl */\n-      value = 1119;\t/* --> ldumaxl.  */\n-      break;\n-    case 1175:\t/* stuminb */\n-    case 1121:\t/* lduminb */\n-      value = 1121;\t/* --> lduminb.  */\n-      break;\n-    case 1176:\t/* stuminh */\n-    case 1122:\t/* lduminh */\n-      value = 1122;\t/* --> lduminh.  */\n-      break;\n-    case 1177:\t/* stumin */\n-    case 1123:\t/* ldumin */\n-      value = 1123;\t/* --> ldumin.  */\n-      break;\n-    case 1178:\t/* stuminlb */\n-    case 1125:\t/* lduminlb */\n-      value = 1125;\t/* --> lduminlb.  */\n-      break;\n-    case 1179:\t/* stuminlh */\n-    case 1128:\t/* lduminlh */\n-      value = 1128;\t/* --> lduminlh.  */\n-      break;\n-    case 1180:\t/* stuminl */\n-    case 1131:\t/* lduminl */\n-      value = 1131;\t/* --> lduminl.  */\n-      break;\n-    case 1182:\t/* mov */\n-    case 1181:\t/* movn */\n-      value = 1181;\t/* --> movn.  */\n-      break;\n-    case 1184:\t/* mov */\n-    case 1183:\t/* movz */\n-      value = 1183;\t/* --> movz.  */\n-      break;\n-    case 1237:\t/* autibsp */\n-    case 1236:\t/* autibz */\n-    case 1235:\t/* autiasp */\n-    case 1234:\t/* autiaz */\n-    case 1233:\t/* pacibsp */\n-    case 1232:\t/* pacibz */\n-    case 1231:\t/* paciasp */\n-    case 1230:\t/* paciaz */\n-    case 1210:\t/* tsb */\n-    case 1209:\t/* psb */\n-    case 1208:\t/* esb */\n-    case 1207:\t/* autib1716 */\n-    case 1206:\t/* autia1716 */\n-    case 1205:\t/* pacib1716 */\n-    case 1204:\t/* pacia1716 */\n-    case 1203:\t/* xpaclri */\n-    case 1201:\t/* sevl */\n-    case 1200:\t/* sev */\n-    case 1199:\t/* wfi */\n-    case 1198:\t/* wfe */\n-    case 1197:\t/* yield */\n-    case 1196:\t/* bti */\n-    case 1195:\t/* csdb */\n-    case 1194:\t/* nop */\n-    case 1193:\t/* hint */\n-      value = 1193;\t/* --> hint.  */\n-      break;\n-    case 1214:\t/* pssbb */\n-    case 1213:\t/* ssbb */\n-    case 1212:\t/* dsb */\n-      value = 1212;\t/* --> dsb.  */\n-      break;\n-    case 1225:\t/* cpp */\n-    case 1224:\t/* dvp */\n-    case 1223:\t/* cfp */\n-    case 1222:\t/* tlbi */\n-    case 1221:\t/* ic */\n-    case 1220:\t/* dc */\n-    case 1219:\t/* at */\n-    case 1218:\t/* sys */\n-      value = 1218;\t/* --> sys.  */\n-      break;\n-    case 2035:\t/* bic */\n-    case 1285:\t/* and */\n-      value = 1285;\t/* --> and.  */\n+    case 1160:\t/* stsmax */\n+    case 1088:\t/* ldsmax */\n+      value = 1088;\t/* --> ldsmax.  */\n+      break;\n+    case 1161:\t/* stsmaxlb */\n+    case 1090:\t/* ldsmaxlb */\n+      value = 1090;\t/* --> ldsmaxlb.  */\n+      break;\n+    case 1162:\t/* stsmaxlh */\n+    case 1093:\t/* ldsmaxlh */\n+      value = 1093;\t/* --> ldsmaxlh.  */\n+      break;\n+    case 1163:\t/* stsmaxl */\n+    case 1096:\t/* ldsmaxl */\n+      value = 1096;\t/* --> ldsmaxl.  */\n+      break;\n+    case 1164:\t/* stsminb */\n+    case 1098:\t/* ldsminb */\n+      value = 1098;\t/* --> ldsminb.  */\n+      break;\n+    case 1165:\t/* stsminh */\n+    case 1099:\t/* ldsminh */\n+      value = 1099;\t/* --> ldsminh.  */\n+      break;\n+    case 1166:\t/* stsmin */\n+    case 1100:\t/* ldsmin */\n+      value = 1100;\t/* --> ldsmin.  */\n+      break;\n+    case 1167:\t/* stsminlb */\n+    case 1102:\t/* ldsminlb */\n+      value = 1102;\t/* --> ldsminlb.  */\n+      break;\n+    case 1168:\t/* stsminlh */\n+    case 1105:\t/* ldsminlh */\n+      value = 1105;\t/* --> ldsminlh.  */\n+      break;\n+    case 1169:\t/* stsminl */\n+    case 1108:\t/* ldsminl */\n+      value = 1108;\t/* --> ldsminl.  */\n+      break;\n+    case 1170:\t/* stumaxb */\n+    case 1110:\t/* ldumaxb */\n+      value = 1110;\t/* --> ldumaxb.  */\n+      break;\n+    case 1171:\t/* stumaxh */\n+    case 1111:\t/* ldumaxh */\n+      value = 1111;\t/* --> ldumaxh.  */\n+      break;\n+    case 1172:\t/* stumax */\n+    case 1112:\t/* ldumax */\n+      value = 1112;\t/* --> ldumax.  */\n+      break;\n+    case 1173:\t/* stumaxlb */\n+    case 1114:\t/* ldumaxlb */\n+      value = 1114;\t/* --> ldumaxlb.  */\n+      break;\n+    case 1174:\t/* stumaxlh */\n+    case 1117:\t/* ldumaxlh */\n+      value = 1117;\t/* --> ldumaxlh.  */\n+      break;\n+    case 1175:\t/* stumaxl */\n+    case 1120:\t/* ldumaxl */\n+      value = 1120;\t/* --> ldumaxl.  */\n+      break;\n+    case 1176:\t/* stuminb */\n+    case 1122:\t/* lduminb */\n+      value = 1122;\t/* --> lduminb.  */\n+      break;\n+    case 1177:\t/* stuminh */\n+    case 1123:\t/* lduminh */\n+      value = 1123;\t/* --> lduminh.  */\n+      break;\n+    case 1178:\t/* stumin */\n+    case 1124:\t/* ldumin */\n+      value = 1124;\t/* --> ldumin.  */\n+      break;\n+    case 1179:\t/* stuminlb */\n+    case 1126:\t/* lduminlb */\n+      value = 1126;\t/* --> lduminlb.  */\n+      break;\n+    case 1180:\t/* stuminlh */\n+    case 1129:\t/* lduminlh */\n+      value = 1129;\t/* --> lduminlh.  */\n+      break;\n+    case 1181:\t/* stuminl */\n+    case 1132:\t/* lduminl */\n+      value = 1132;\t/* --> lduminl.  */\n+      break;\n+    case 1183:\t/* mov */\n+    case 1182:\t/* movn */\n+      value = 1182;\t/* --> movn.  */\n+      break;\n+    case 1185:\t/* mov */\n+    case 1184:\t/* movz */\n+      value = 1184;\t/* --> movz.  */\n+      break;\n+    case 1238:\t/* autibsp */\n+    case 1237:\t/* autibz */\n+    case 1236:\t/* autiasp */\n+    case 1235:\t/* autiaz */\n+    case 1234:\t/* pacibsp */\n+    case 1233:\t/* pacibz */\n+    case 1232:\t/* paciasp */\n+    case 1231:\t/* paciaz */\n+    case 1211:\t/* tsb */\n+    case 1210:\t/* psb */\n+    case 1209:\t/* esb */\n+    case 1208:\t/* autib1716 */\n+    case 1207:\t/* autia1716 */\n+    case 1206:\t/* pacib1716 */\n+    case 1205:\t/* pacia1716 */\n+    case 1204:\t/* xpaclri */\n+    case 1202:\t/* sevl */\n+    case 1201:\t/* sev */\n+    case 1200:\t/* wfi */\n+    case 1199:\t/* wfe */\n+    case 1198:\t/* yield */\n+    case 1197:\t/* bti */\n+    case 1196:\t/* csdb */\n+    case 1195:\t/* nop */\n+    case 1194:\t/* hint */\n+      value = 1194;\t/* --> hint.  */\n+      break;\n+    case 1215:\t/* pssbb */\n+    case 1214:\t/* ssbb */\n+    case 1213:\t/* dsb */\n+      value = 1213;\t/* --> dsb.  */\n+      break;\n+    case 1226:\t/* cpp */\n+    case 1225:\t/* dvp */\n+    case 1224:\t/* cfp */\n+    case 1223:\t/* tlbi */\n+    case 1222:\t/* ic */\n+    case 1221:\t/* dc */\n+    case 1220:\t/* at */\n+    case 1219:\t/* sys */\n+      value = 1219;\t/* --> sys.  */\n+      break;\n+    case 2036:\t/* bic */\n+    case 1286:\t/* and */\n+      value = 1286;\t/* --> and.  */\n       break;\n-    case 1268:\t/* mov */\n-    case 1287:\t/* and */\n-      value = 1287;\t/* --> and.  */\n-      break;\n-    case 1272:\t/* movs */\n-    case 1288:\t/* ands */\n-      value = 1288;\t/* --> ands.  */\n+    case 1269:\t/* mov */\n+    case 1288:\t/* and */\n+      value = 1288;\t/* --> and.  */\n       break;\n-    case 2036:\t/* cmple */\n-    case 1323:\t/* cmpge */\n-      value = 1323;\t/* --> cmpge.  */\n+    case 1273:\t/* movs */\n+    case 1289:\t/* ands */\n+      value = 1289;\t/* --> ands.  */\n       break;\n-    case 2039:\t/* cmplt */\n-    case 1326:\t/* cmpgt */\n-      value = 1326;\t/* --> cmpgt.  */\n+    case 2037:\t/* cmple */\n+    case 1324:\t/* cmpge */\n+      value = 1324;\t/* --> cmpge.  */\n       break;\n-    case 2037:\t/* cmplo */\n-    case 1328:\t/* cmphi */\n-      value = 1328;\t/* --> cmphi.  */\n+    case 2040:\t/* cmplt */\n+    case 1327:\t/* cmpgt */\n+      value = 1327;\t/* --> cmpgt.  */\n       break;\n-    case 2038:\t/* cmpls */\n-    case 1331:\t/* cmphs */\n-      value = 1331;\t/* --> cmphs.  */\n+    case 2038:\t/* cmplo */\n+    case 1329:\t/* cmphi */\n+      value = 1329;\t/* --> cmphi.  */\n       break;\n-    case 1265:\t/* mov */\n-    case 1353:\t/* cpy */\n-      value = 1353;\t/* --> cpy.  */\n+    case 2039:\t/* cmpls */\n+    case 1332:\t/* cmphs */\n+      value = 1332;\t/* --> cmphs.  */\n       break;\n-    case 1267:\t/* mov */\n+    case 1266:\t/* mov */\n     case 1354:\t/* cpy */\n       value = 1354;\t/* --> cpy.  */\n       break;\n-    case 2046:\t/* fmov */\n-    case 1270:\t/* mov */\n+    case 1268:\t/* mov */\n     case 1355:\t/* cpy */\n       value = 1355;\t/* --> cpy.  */\n       break;\n-    case 1260:\t/* mov */\n-    case 1367:\t/* dup */\n-      value = 1367;\t/* --> dup.  */\n+    case 2047:\t/* fmov */\n+    case 1271:\t/* mov */\n+    case 1356:\t/* cpy */\n+      value = 1356;\t/* --> cpy.  */\n       break;\n-    case 1262:\t/* mov */\n-    case 1259:\t/* mov */\n+    case 1261:\t/* mov */\n     case 1368:\t/* dup */\n       value = 1368;\t/* --> dup.  */\n       break;\n-    case 2045:\t/* fmov */\n-    case 1264:\t/* mov */\n+    case 1263:\t/* mov */\n+    case 1260:\t/* mov */\n     case 1369:\t/* dup */\n       value = 1369;\t/* --> dup.  */\n       break;\n-    case 1263:\t/* mov */\n-    case 1370:\t/* dupm */\n-      value = 1370;\t/* --> dupm.  */\n+    case 2046:\t/* fmov */\n+    case 1265:\t/* mov */\n+    case 1370:\t/* dup */\n+      value = 1370;\t/* --> dup.  */\n       break;\n-    case 2040:\t/* eon */\n-    case 1372:\t/* eor */\n-      value = 1372;\t/* --> eor.  */\n+    case 1264:\t/* mov */\n+    case 1371:\t/* dupm */\n+      value = 1371;\t/* --> dupm.  */\n       break;\n-    case 1273:\t/* not */\n-    case 1374:\t/* eor */\n-      value = 1374;\t/* --> eor.  */\n+    case 2041:\t/* eon */\n+    case 1373:\t/* eor */\n+      value = 1373;\t/* --> eor.  */\n       break;\n-    case 1274:\t/* nots */\n-    case 1375:\t/* eors */\n-      value = 1375;\t/* --> eors.  */\n+    case 1274:\t/* not */\n+    case 1375:\t/* eor */\n+      value = 1375;\t/* --> eor.  */\n       break;\n-    case 2041:\t/* facle */\n-    case 1380:\t/* facge */\n-      value = 1380;\t/* --> facge.  */\n+    case 1275:\t/* nots */\n+    case 1376:\t/* eors */\n+      value = 1376;\t/* --> eors.  */\n       break;\n-    case 2042:\t/* faclt */\n-    case 1381:\t/* facgt */\n-      value = 1381;\t/* --> facgt.  */\n+    case 2042:\t/* facle */\n+    case 1381:\t/* facge */\n+      value = 1381;\t/* --> facge.  */\n       break;\n-    case 2043:\t/* fcmle */\n-    case 1394:\t/* fcmge */\n-      value = 1394;\t/* --> fcmge.  */\n+    case 2043:\t/* faclt */\n+    case 1382:\t/* facgt */\n+      value = 1382;\t/* --> facgt.  */\n       break;\n-    case 2044:\t/* fcmlt */\n-    case 1396:\t/* fcmgt */\n-      value = 1396;\t/* --> fcmgt.  */\n+    case 2044:\t/* fcmle */\n+    case 1395:\t/* fcmge */\n+      value = 1395;\t/* --> fcmge.  */\n       break;\n-    case 1257:\t/* fmov */\n-    case 1402:\t/* fcpy */\n-      value = 1402;\t/* --> fcpy.  */\n+    case 2045:\t/* fcmlt */\n+    case 1397:\t/* fcmgt */\n+      value = 1397;\t/* --> fcmgt.  */\n       break;\n-    case 1256:\t/* fmov */\n-    case 1425:\t/* fdup */\n-      value = 1425;\t/* --> fdup.  */\n+    case 1258:\t/* fmov */\n+    case 1403:\t/* fcpy */\n+      value = 1403;\t/* --> fcpy.  */\n       break;\n-    case 1258:\t/* mov */\n-    case 1756:\t/* orr */\n-      value = 1756;\t/* --> orr.  */\n+    case 1257:\t/* fmov */\n+    case 1426:\t/* fdup */\n+      value = 1426;\t/* --> fdup.  */\n       break;\n-    case 2047:\t/* orn */\n+    case 1259:\t/* mov */\n     case 1757:\t/* orr */\n       value = 1757;\t/* --> orr.  */\n       break;\n-    case 1261:\t/* mov */\n-    case 1759:\t/* orr */\n-      value = 1759;\t/* --> orr.  */\n+    case 2048:\t/* orn */\n+    case 1758:\t/* orr */\n+      value = 1758;\t/* --> orr.  */\n       break;\n-    case 1271:\t/* movs */\n-    case 1760:\t/* orrs */\n-      value = 1760;\t/* --> orrs.  */\n+    case 1262:\t/* mov */\n+    case 1760:\t/* orr */\n+      value = 1760;\t/* --> orr.  */\n       break;\n-    case 1266:\t/* mov */\n-    case 1822:\t/* sel */\n-      value = 1822;\t/* --> sel.  */\n+    case 1272:\t/* movs */\n+    case 1761:\t/* orrs */\n+      value = 1761;\t/* --> orrs.  */\n       break;\n-    case 1269:\t/* mov */\n+    case 1267:\t/* mov */\n     case 1823:\t/* sel */\n       value = 1823;\t/* --> sel.  */\n       break;\n+    case 1270:\t/* mov */\n+    case 1824:\t/* sel */\n+      value = 1824;\t/* --> sel.  */\n+      break;\n     default: return NULL;\n     }\n \n@@ -629,7 +629,6 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 28:\n     case 29:\n     case 30:\n-    case 163:\n     case 164:\n     case 165:\n     case 166:\n@@ -639,7 +638,7 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 170:\n     case 171:\n     case 172:\n-    case 187:\n+    case 173:\n     case 188:\n     case 189:\n     case 190:\n@@ -648,8 +647,9 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 193:\n     case 194:\n     case 195:\n-    case 201:\n-    case 204:\n+    case 196:\n+    case 202:\n+    case 205:\n       return aarch64_ins_regno (self, info, code, inst, errors);\n     case 14:\n       return aarch64_ins_reg_extended (self, info, code, inst, errors);\n@@ -661,7 +661,7 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 32:\n     case 33:\n     case 34:\n-    case 207:\n+    case 208:\n       return aarch64_ins_reglane (self, info, code, inst, errors);\n     case 35:\n       return aarch64_ins_reglist (self, info, code, inst, errors);\n@@ -691,21 +691,22 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 65:\n     case 66:\n     case 67:\n-    case 79:\n+    case 68:\n     case 80:\n     case 81:\n     case 82:\n-    case 160:\n-    case 162:\n-    case 179:\n+    case 83:\n+    case 161:\n+    case 163:\n     case 180:\n     case 181:\n     case 182:\n     case 183:\n     case 184:\n     case 185:\n     case 186:\n-    case 206:\n+    case 187:\n+    case 207:\n       return aarch64_ins_imm (self, info, code, inst, errors);\n     case 43:\n     case 44:\n@@ -715,84 +716,83 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 47:\n       return aarch64_ins_advsimd_imm_modified (self, info, code, inst, errors);\n     case 51:\n-    case 150:\n+    case 151:\n       return aarch64_ins_fpimm (self, info, code, inst, errors);\n-    case 68:\n-    case 158:\n-      return aarch64_ins_limm (self, info, code, inst, errors);\n     case 69:\n-      return aarch64_ins_aimm (self, info, code, inst, errors);\n+    case 159:\n+      return aarch64_ins_limm (self, info, code, inst, errors);\n     case 70:\n-      return aarch64_ins_imm_half (self, info, code, inst, errors);\n+      return aarch64_ins_aimm (self, info, code, inst, errors);\n     case 71:\n+      return aarch64_ins_imm_half (self, info, code, inst, errors);\n+    case 72:\n       return aarch64_ins_fbits (self, info, code, inst, errors);\n-    case 73:\n     case 74:\n-    case 155:\n-      return aarch64_ins_imm_rotate2 (self, info, code, inst, errors);\n     case 75:\n-    case 154:\n     case 156:\n-      return aarch64_ins_imm_rotate1 (self, info, code, inst, errors);\n+      return aarch64_ins_imm_rotate2 (self, info, code, inst, errors);\n     case 76:\n+    case 155:\n+    case 157:\n+      return aarch64_ins_imm_rotate1 (self, info, code, inst, errors);\n     case 77:\n+    case 78:\n       return aarch64_ins_cond (self, info, code, inst, errors);\n-    case 83:\n-    case 92:\n-      return aarch64_ins_addr_simple (self, info, code, inst, errors);\n     case 84:\n-      return aarch64_ins_addr_regoff (self, info, code, inst, errors);\n+    case 93:\n+      return aarch64_ins_addr_simple (self, info, code, inst, errors);\n     case 85:\n+      return aarch64_ins_addr_regoff (self, info, code, inst, errors);\n     case 86:\n     case 87:\n-    case 89:\n-    case 91:\n-      return aarch64_ins_addr_simm (self, info, code, inst, errors);\n     case 88:\n-      return aarch64_ins_addr_simm10 (self, info, code, inst, errors);\n     case 90:\n+    case 92:\n+      return aarch64_ins_addr_simm (self, info, code, inst, errors);\n+    case 89:\n+      return aarch64_ins_addr_simm10 (self, info, code, inst, errors);\n+    case 91:\n       return aarch64_ins_addr_uimm12 (self, info, code, inst, errors);\n-    case 93:\n-      return aarch64_ins_addr_offset (self, info, code, inst, errors);\n     case 94:\n-      return aarch64_ins_simd_addr_post (self, info, code, inst, errors);\n+      return aarch64_ins_addr_offset (self, info, code, inst, errors);\n     case 95:\n-      return aarch64_ins_sysreg (self, info, code, inst, errors);\n+      return aarch64_ins_simd_addr_post (self, info, code, inst, errors);\n     case 96:\n-      return aarch64_ins_pstatefield (self, info, code, inst, errors);\n+      return aarch64_ins_sysreg (self, info, code, inst, errors);\n     case 97:\n+      return aarch64_ins_pstatefield (self, info, code, inst, errors);\n     case 98:\n     case 99:\n     case 100:\n     case 101:\n-      return aarch64_ins_sysins_op (self, info, code, inst, errors);\n     case 102:\n+      return aarch64_ins_sysins_op (self, info, code, inst, errors);\n     case 103:\n-      return aarch64_ins_barrier (self, info, code, inst, errors);\n     case 104:\n-      return aarch64_ins_prfop (self, info, code, inst, errors);\n+      return aarch64_ins_barrier (self, info, code, inst, errors);\n     case 105:\n-      return aarch64_ins_none (self, info, code, inst, errors);\n+      return aarch64_ins_prfop (self, info, code, inst, errors);\n     case 106:\n-      return aarch64_ins_hint (self, info, code, inst, errors);\n+      return aarch64_ins_none (self, info, code, inst, errors);\n     case 107:\n+      return aarch64_ins_hint (self, info, code, inst, errors);\n     case 108:\n-      return aarch64_ins_sve_addr_ri_s4 (self, info, code, inst, errors);\n     case 109:\n+      return aarch64_ins_sve_addr_ri_s4 (self, info, code, inst, errors);\n     case 110:\n     case 111:\n     case 112:\n-      return aarch64_ins_sve_addr_ri_s4xvl (self, info, code, inst, errors);\n     case 113:\n-      return aarch64_ins_sve_addr_ri_s6xvl (self, info, code, inst, errors);\n+      return aarch64_ins_sve_addr_ri_s4xvl (self, info, code, inst, errors);\n     case 114:\n-      return aarch64_ins_sve_addr_ri_s9xvl (self, info, code, inst, errors);\n+      return aarch64_ins_sve_addr_ri_s6xvl (self, info, code, inst, errors);\n     case 115:\n+      return aarch64_ins_sve_addr_ri_s9xvl (self, info, code, inst, errors);\n     case 116:\n     case 117:\n     case 118:\n-      return aarch64_ins_sve_addr_ri_u6 (self, info, code, inst, errors);\n     case 119:\n+      return aarch64_ins_sve_addr_ri_u6 (self, info, code, inst, errors);\n     case 120:\n     case 121:\n     case 122:\n@@ -806,61 +806,62 @@ aarch64_insert_operand (const aarch64_operand *self,\n     case 130:\n     case 131:\n     case 132:\n-      return aarch64_ins_sve_addr_rr_lsl (self, info, code, inst, errors);\n     case 133:\n+      return aarch64_ins_sve_addr_rr_lsl (self, info, code, inst, errors);\n     case 134:\n     case 135:\n     case 136:\n     case 137:\n     case 138:\n     case 139:\n     case 140:\n-      return aarch64_ins_sve_addr_rz_xtw (self, info, code, inst, errors);\n     case 141:\n+      return aarch64_ins_sve_addr_rz_xtw (self, info, code, inst, errors);\n     case 142:\n     case 143:\n     case 144:\n-      return aarch64_ins_sve_addr_zi_u5 (self, info, code, inst, errors);\n     case 145:\n-      return aarch64_ins_sve_addr_zz_lsl (self, info, code, inst, errors);\n+      return aarch64_ins_sve_addr_zi_u5 (self, info, code, inst, errors);\n     case 146:\n-      return aarch64_ins_sve_addr_zz_sxtw (self, info, code, inst, errors);\n+      return aarch64_ins_sve_addr_zz_lsl (self, info, code, inst, errors);\n     case 147:\n-      return aarch64_ins_sve_addr_zz_uxtw (self, info, code, inst, errors);\n+      return aarch64_ins_sve_addr_zz_sxtw (self, info, code, inst, errors);\n     case 148:\n-      return aarch64_ins_sve_aimm (self, info, code, inst, errors);\n+      return aarch64_ins_sve_addr_zz_uxtw (self, info, code, inst, errors);\n     case 149:\n+      return aarch64_ins_sve_aimm (self, info, code, inst, errors);\n+    case 150:\n       return aarch64_ins_sve_asimm (self, info, code, inst, errors);\n-    case 151:\n-      return aarch64_ins_sve_float_half_one (self, info, code, inst, errors);\n     case 152:\n-      return aarch64_ins_sve_float_half_two (self, info, code, inst, errors);\n+      return aarch64_ins_sve_float_half_one (self, info, code, inst, errors);\n     case 153:\n+      return aarch64_ins_sve_float_half_two (self, info, code, inst, errors);\n+    case 154:\n       return aarch64_ins_sve_float_zero_one (self, info, code, inst, errors);\n-    case 157:\n+    case 158:\n       return aarch64_ins_inv_limm (self, info, code, inst, errors);\n-    case 159:\n+    case 160:\n       return aarch64_ins_sve_limm_mov (self, info, code, inst, errors);\n-    case 161:\n+    case 162:\n       return aarch64_ins_sve_scale (self, info, code, inst, errors);\n-    case 173:\n     case 174:\n     case 175:\n-      return aarch64_ins_sve_shlimm (self, info, code, inst, errors);\n     case 176:\n+      return aarch64_ins_sve_shlimm (self, info, code, inst, errors);\n     case 177:\n     case 178:\n+    case 179:\n       return aarch64_ins_sve_shrimm (self, info, code, inst, errors);\n-    case 196:\n     case 197:\n     case 198:\n     case 199:\n     case 200:\n+    case 201:\n       return aarch64_ins_sve_quad_index (self, info, code, inst, errors);\n-    case 202:\n-      return aarch64_ins_sve_index (self, info, code, inst, errors);\n     case 203:\n-    case 205:\n+      return aarch64_ins_sve_index (self, info, code, inst, errors);\n+    case 204:\n+    case 206:\n       return aarch64_ins_sve_reglist (self, info, code, inst, errors);\n     default: assert (0); abort ();\n     }"
    },
    {
      "sha": "5772364a326d32565407a87d3b20e26e03d31edd",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 1912,
      "deletions": 1900,
      "changes": 3812,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7"
    },
    {
      "sha": "ddb4e53b5c6f89a6b62f4492024369a0f19042b8",
      "filename": "opcodes/aarch64-opc-2.c",
      "status": "modified",
      "additions": 27,
      "deletions": 26,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-opc-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-opc-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc-2.c?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -89,6 +89,7 @@ const struct aarch64_operand aarch64_operands[] =\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"UIMM10\", OPD_F_SHIFT_BY_4 | OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_immr}, \"a 10-bit unsigned multiple of 16\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"BIT_NUM\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_b5, FLD_b40}, \"the bit number to be tested\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"EXCEPTION\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_imm16}, \"a 16-bit unsigned immediate\"},\n+  {AARCH64_OPND_CLASS_IMMEDIATE, \"UNDEFINED\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_imm16_2}, \"a 16-bit unsigned immediate\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"CCMP_IMM\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_imm5}, \"a 5-bit unsigned immediate\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"SIMM5\", OPD_F_SEXT | OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_imm5}, \"a 5-bit signed immediate\"},\n   {AARCH64_OPND_CLASS_IMMEDIATE, \"NZCV\", OPD_F_HAS_INSERTER | OPD_F_HAS_EXTRACTOR, {FLD_nzcv}, \"a flag bit specifier giving an alternative value for each flag\"},\n@@ -241,48 +242,48 @@ const struct aarch64_operand aarch64_operands[] =\n static const unsigned op_enum_table [] =\n {\n   0,\n-  888,\n   889,\n   890,\n-  893,\n+  891,\n   894,\n   895,\n   896,\n   897,\n-  891,\n-  892,\n   898,\n+  892,\n+  893,\n   899,\n-  921,\n+  900,\n   922,\n   923,\n-  926,\n+  924,\n   927,\n   928,\n   929,\n   930,\n-  924,\n-  925,\n   931,\n+  925,\n+  926,\n   932,\n-  986,\n+  933,\n   987,\n   988,\n   989,\n+  990,\n   12,\n   636,\n   637,\n-  1181,\n-  1183,\n-  1185,\n-  993,\n-  1184,\n   1182,\n+  1184,\n+  1186,\n+  994,\n+  1185,\n+  1183,\n   318,\n   624,\n   635,\n   634,\n-  991,\n+  992,\n   631,\n   628,\n   620,\n@@ -292,34 +293,34 @@ static const unsigned op_enum_table [] =\n   630,\n   632,\n   633,\n-  1001,\n+  1002,\n   664,\n   667,\n   670,\n   665,\n   668,\n-  824,\n+  825,\n   178,\n   179,\n   180,\n   181,\n   516,\n-  758,\n+  759,\n   389,\n   391,\n   413,\n   415,\n-  1261,\n-  1266,\n-  1259,\n-  1258,\n   1262,\n-  1269,\n-  1271,\n+  1267,\n+  1260,\n+  1259,\n+  1263,\n+  1270,\n   1272,\n-  1268,\n-  1274,\n   1273,\n+  1269,\n+  1275,\n+  1274,\n   131,\n };\n "
    },
    {
      "sha": "faa0503dcf0dc13d85967ddd2a8f94e54aedf74f",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -251,6 +251,7 @@ const aarch64_field fields[] =\n     { 10, 12 },\t/* imm12: in ld/st unsigned imm or add/sub shifted inst.  */\n     {  5, 14 },\t/* imm14: in test bit and branch instructions.  */\n     {  5, 16 },\t/* imm16: in exception instructions.  */\n+    {  0, 16 },\t/* imm16_2: in udf instruction. */\n     {  0, 26 },\t/* imm26: in unconditional branch instructions.  */\n     { 10,  6 },\t/* imms: in bitfield and logical immediate instructions.  */\n     { 16,  6 },\t/* immr: in bitfield and logical immediate instructions.  */\n@@ -2145,6 +2146,7 @@ operand_general_constraint_met_p (const aarch64_opnd_info *opnds, int idx,\n \tcase AARCH64_OPND_NZCV:\n \tcase AARCH64_OPND_CCMP_IMM:\n \tcase AARCH64_OPND_EXCEPTION:\n+\tcase AARCH64_OPND_UNDEFINED:\n \tcase AARCH64_OPND_TME_UIMM16:\n \tcase AARCH64_OPND_UIMM4:\n \tcase AARCH64_OPND_UIMM4_ADDG:\n@@ -3357,6 +3359,7 @@ aarch64_print_operand (char *buf, size_t size, bfd_vma pc,\n     case AARCH64_OPND_IMM0:\n     case AARCH64_OPND_IMMR:\n     case AARCH64_OPND_IMMS:\n+    case AARCH64_OPND_UNDEFINED:\n     case AARCH64_OPND_FBITS:\n     case AARCH64_OPND_TME_UIMM16:\n     case AARCH64_OPND_SIMM5:"
    },
    {
      "sha": "a197df69d88c0de23fe48e7d35aa6709f58cf4ab",
      "filename": "opcodes/aarch64-opc.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.h?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -78,6 +78,7 @@ enum aarch64_field_kind\n   FLD_imm12,\n   FLD_imm14,\n   FLD_imm16,\n+  FLD_imm16_2,\n   FLD_imm26,\n   FLD_imms,\n   FLD_immr,"
    },
    {
      "sha": "5ad718014e05d5e68cd750c7884da3eac0cddc4e",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -3354,6 +3354,7 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   CORE_INSN (\"smc\",   0xd4000003, 0xffe0001f, exception, 0, OP1 (EXCEPTION), {}, 0),\n   CORE_INSN (\"brk\",   0xd4200000, 0xffe0001f, exception, 0, OP1 (EXCEPTION), {}, 0),\n   CORE_INSN (\"hlt\",   0xd4400000, 0xffe0001f, exception, 0, OP1 (EXCEPTION), {}, 0),\n+  CORE_INSN (\"udf\",   0x00000000, 0xffff0000, exception, 0, OP1 (UNDEFINED), {}, 0),\n   CORE_INSN (\"dcps1\", 0xd4a00001, 0xffe0001f, exception, 0, OP1 (EXCEPTION), {}, F_OPD0_OPT | F_DEFAULT (0)),\n   CORE_INSN (\"dcps2\", 0xd4a00002, 0xffe0001f, exception, 0, OP1 (EXCEPTION), {}, F_OPD0_OPT | F_DEFAULT (0)),\n   CORE_INSN (\"dcps3\", 0xd4a00003, 0xffe0001f, exception, 0, OP1 (EXCEPTION), {}, F_OPD0_OPT | F_DEFAULT (0)),\n@@ -5238,6 +5239,8 @@ struct aarch64_opcode aarch64_opcode_table[] =\n       \"the bit number to be tested\")\t\t\t\t\t\\\n     Y(IMMEDIATE, imm, \"EXCEPTION\", 0, F(FLD_imm16),\t\t\t\\\n       \"a 16-bit unsigned immediate\")\t\t\t\t\t\\\n+    Y(IMMEDIATE, imm, \"UNDEFINED\", 0, F(FLD_imm16_2),\t\t\t\\\n+      \"a 16-bit unsigned immediate\")\t\t\t\t\t\\\n     Y(IMMEDIATE, imm, \"CCMP_IMM\", 0, F(FLD_imm5),\t\t\t\\\n       \"a 5-bit unsigned immediate\")\t\t\t\t\t\\\n     Y(IMMEDIATE, imm, \"SIMM5\", OPD_F_SEXT, F(FLD_imm5),\t\t\t\\"
    },
    {
      "sha": "62bcd32dfdb3bc9ddbbda3668d2d05bc011aedf5",
      "filename": "opcodes/po/opcodes.pot",
      "status": "modified",
      "additions": 198,
      "deletions": 167,
      "changes": 365,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/po/opcodes.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/09c1e68a162f9a2c2cadee916387a147a8af44b7/opcodes/po/opcodes.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/po/opcodes.pot?ref=09c1e68a162f9a2c2cadee916387a147a8af44b7",
      "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: bug-binutils@gnu.org\\n\"\n-\"POT-Creation-Date: 2020-01-18 14:01+0000\\n\"\n+\"POT-Creation-Date: 2020-04-30 13:57+0100\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -17,321 +17,321 @@ msgstr \"\"\n \"Content-Type: text/plain; charset=CHARSET\\n\"\n \"Content-Transfer-Encoding: 8bit\\n\"\n \n-#: aarch64-asm.c:809\n+#: aarch64-asm.c:820\n msgid \"specified register cannot be read from\"\n msgstr \"\"\n \n-#: aarch64-asm.c:818\n+#: aarch64-asm.c:829\n msgid \"specified register cannot be written to\"\n msgstr \"\"\n \n #. Invalid option.\n-#: aarch64-dis.c:93 arc-dis.c:801 arm-dis.c:11361\n+#: aarch64-dis.c:93 arc-dis.c:802 arm-dis.c:11646\n #, c-format\n msgid \"unrecognised disassembler option: %s\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3521\n+#: aarch64-dis.c:3531\n #, c-format\n msgid \"\"\n \"\\n\"\n \"The following AARCH64 specific disassembler options are supported for use\\n\"\n \"with the -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3525\n+#: aarch64-dis.c:3535\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  no-aliases         Don't print instruction aliases.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3528\n+#: aarch64-dis.c:3538\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  aliases            Do print instruction aliases.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3531\n+#: aarch64-dis.c:3541\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  no-notes         Don't print instruction notes.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3534\n+#: aarch64-dis.c:3544\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  notes            Do print instruction notes.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3538\n+#: aarch64-dis.c:3548\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  debug_dump         Temp switch for debug trace.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3542 mips-dis.c:2778 mips-dis.c:2788 mips-dis.c:2791\n+#: aarch64-dis.c:3552 mips-dis.c:2778 mips-dis.c:2788 mips-dis.c:2791\n #: nfp-dis.c:2981 riscv-dis.c:556\n #, c-format\n msgid \"\\n\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1346\n+#: aarch64-opc.c:1347\n msgid \"immediate value\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1356\n+#: aarch64-opc.c:1357\n msgid \"immediate offset\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1366\n+#: aarch64-opc.c:1367\n msgid \"register number\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1376\n+#: aarch64-opc.c:1377\n msgid \"register element index\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1386\n+#: aarch64-opc.c:1387\n msgid \"shift amount\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1398\n+#: aarch64-opc.c:1399\n msgid \"multiplier\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1471\n+#: aarch64-opc.c:1472\n msgid \"reg pair must start from even reg\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1477\n+#: aarch64-opc.c:1478\n msgid \"reg pair must be contiguous\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1491\n+#: aarch64-opc.c:1492\n msgid \"extraneous register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1497\n+#: aarch64-opc.c:1498\n msgid \"missing register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1508\n+#: aarch64-opc.c:1509\n msgid \"stack pointer register expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1533\n+#: aarch64-opc.c:1534\n msgid \"z0-z15 expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1534\n+#: aarch64-opc.c:1535\n msgid \"z0-z7 expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1560\n+#: aarch64-opc.c:1561\n msgid \"invalid register list\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1574\n+#: aarch64-opc.c:1575\n msgid \"p0-p7 expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1600 aarch64-opc.c:1608\n+#: aarch64-opc.c:1601 aarch64-opc.c:1609\n msgid \"unexpected address writeback\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1619\n+#: aarch64-opc.c:1620\n msgid \"address writeback expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1666\n+#: aarch64-opc.c:1667\n msgid \"negative or unaligned offset expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1723\n+#: aarch64-opc.c:1724\n msgid \"invalid register offset\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1745\n+#: aarch64-opc.c:1746\n msgid \"invalid post-increment amount\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1761 aarch64-opc.c:2269\n+#: aarch64-opc.c:1762 aarch64-opc.c:2271\n msgid \"invalid shift amount\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1774\n+#: aarch64-opc.c:1775\n msgid \"invalid extend/shift operator\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1820 aarch64-opc.c:2072 aarch64-opc.c:2107 aarch64-opc.c:2126\n-#: aarch64-opc.c:2134 aarch64-opc.c:2222 aarch64-opc.c:2399 aarch64-opc.c:2499\n-#: aarch64-opc.c:2512\n+#: aarch64-opc.c:1821 aarch64-opc.c:2073 aarch64-opc.c:2108 aarch64-opc.c:2127\n+#: aarch64-opc.c:2135 aarch64-opc.c:2224 aarch64-opc.c:2401 aarch64-opc.c:2501\n+#: aarch64-opc.c:2514\n msgid \"immediate out of range\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1842 aarch64-opc.c:1884 aarch64-opc.c:1946 aarch64-opc.c:1980\n+#: aarch64-opc.c:1843 aarch64-opc.c:1885 aarch64-opc.c:1947 aarch64-opc.c:1981\n msgid \"invalid addressing mode\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1938\n+#: aarch64-opc.c:1939\n msgid \"index register xzr is not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2060 aarch64-opc.c:2082 aarch64-opc.c:2302 aarch64-opc.c:2310\n-#: aarch64-opc.c:2376 aarch64-opc.c:2405\n+#: aarch64-opc.c:2061 aarch64-opc.c:2083 aarch64-opc.c:2304 aarch64-opc.c:2312\n+#: aarch64-opc.c:2378 aarch64-opc.c:2407\n msgid \"invalid shift operator\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2066\n+#: aarch64-opc.c:2067\n msgid \"shift amount must be 0 or 12\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2089\n+#: aarch64-opc.c:2090\n msgid \"shift amount must be a multiple of 16\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2101\n+#: aarch64-opc.c:2102\n msgid \"negative immediate value not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2233\n+#: aarch64-opc.c:2235\n msgid \"immediate zero expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2247\n+#: aarch64-opc.c:2249\n msgid \"rotate expected to be 0, 90, 180 or 270\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2258\n+#: aarch64-opc.c:2260\n msgid \"rotate expected to be 90 or 270\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2318\n+#: aarch64-opc.c:2320\n msgid \"shift is not permitted\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2343\n+#: aarch64-opc.c:2345\n msgid \"invalid value for immediate\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2368\n+#: aarch64-opc.c:2370\n msgid \"shift amount must be 0 or 16\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2389\n+#: aarch64-opc.c:2391\n msgid \"floating-point immediate expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2423\n+#: aarch64-opc.c:2425\n msgid \"no shift amount allowed for 8-bit constants\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2433\n+#: aarch64-opc.c:2435\n msgid \"shift amount must be 0 or 8\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2446\n+#: aarch64-opc.c:2448\n msgid \"immediate too big for element size\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2453\n+#: aarch64-opc.c:2455\n msgid \"invalid arithmetic immediate\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2467\n+#: aarch64-opc.c:2469\n msgid \"floating-point value must be 0.5 or 1.0\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2477\n+#: aarch64-opc.c:2479\n msgid \"floating-point value must be 0.5 or 2.0\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2487\n+#: aarch64-opc.c:2489\n msgid \"floating-point value must be 0.0 or 1.0\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2518\n+#: aarch64-opc.c:2520\n msgid \"invalid replicated MOV immediate\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2639\n+#: aarch64-opc.c:2641\n msgid \"extend operator expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2652\n+#: aarch64-opc.c:2654\n msgid \"missing extend operator\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2658\n+#: aarch64-opc.c:2660\n msgid \"'LSL' operator not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2679\n+#: aarch64-opc.c:2681\n msgid \"W register expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2690\n+#: aarch64-opc.c:2692\n msgid \"shift operator expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2697\n+#: aarch64-opc.c:2699\n msgid \"'ROR' operator not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:3711\n+#: aarch64-opc.c:3714\n msgid \"reading from a write-only register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:3713\n+#: aarch64-opc.c:3716\n msgid \"writing to a read-only register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4880\n+#: aarch64-opc.c:4886\n msgid \"instruction opens new dependency sequence without ending previous one\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4900\n+#: aarch64-opc.c:4906\n msgid \"previous `movprfx' sequence not closed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4919\n+#: aarch64-opc.c:4925\n msgid \"SVE instruction expected after `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4932\n+#: aarch64-opc.c:4938\n msgid \"SVE `movprfx' compatible instruction expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5019\n+#: aarch64-opc.c:5025\n msgid \"predicated instruction expected after `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5031\n+#: aarch64-opc.c:5037\n msgid \"merging predicate expected due to preceding `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5043\n+#: aarch64-opc.c:5049\n msgid \"predicate register differs from that in preceding `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5062\n+#: aarch64-opc.c:5068\n msgid \"output register of preceding `movprfx' not used in current instruction\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5075\n+#: aarch64-opc.c:5081\n msgid \"output register of preceding `movprfx' expected as output\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5087\n+#: aarch64-opc.c:5093\n msgid \"output register of preceding `movprfx' used as input\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5103\n+#: aarch64-opc.c:5109\n msgid \"register size not compatible with previous `movprfx'\"\n msgstr \"\"\n \n@@ -351,60 +351,64 @@ msgid \"\"\n \"\\t\\t\\t\\t\"\n msgstr \"\"\n \n-#: arc-dis.c:844\n+#: arc-dis.c:440\n+msgid \"An error occured while generating the extension instruction operations\"\n+msgstr \"\"\n+\n+#: arc-dis.c:845\n #, c-format\n msgid \"unrecognised disassembler CPU option: %s\"\n msgstr \"\"\n \n-#: arc-dis.c:1411\n+#: arc-dis.c:1412\n #, c-format\n msgid \"\"\n \"\\n\"\n \"The following ARC specific disassembler options are supported for use \\n\"\n \"with -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1423\n+#: arc-dis.c:1424\n #, c-format\n msgid \"  dsp             Recognize DSP instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1425\n+#: arc-dis.c:1426\n #, c-format\n msgid \"  spfp            Recognize FPX SP instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1427\n+#: arc-dis.c:1428\n #, c-format\n msgid \"  dpfp            Recognize FPX DP instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1429\n+#: arc-dis.c:1430\n #, c-format\n msgid \"  quarkse_em      Recognize FPU QuarkSE-EM instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1431\n+#: arc-dis.c:1432\n #, c-format\n msgid \"  fpuda           Recognize double assist FPU instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1433\n+#: arc-dis.c:1434\n #, c-format\n msgid \"  fpus            Recognize single precision FPU instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1435\n+#: arc-dis.c:1436\n #, c-format\n msgid \"  fpud            Recognize double precision FPU instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1437\n+#: arc-dis.c:1438\n #, c-format\n msgid \"  nps400          Recognize NPS400 instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1439\n+#: arc-dis.c:1440\n #, c-format\n msgid \"  hex             Use only hexadecimal number to print immediates.\\n\"\n msgstr \"\"\n@@ -570,48 +574,67 @@ msgstr \"\"\n msgid \"invalid position, should be one of: 0,4,8,...124.\"\n msgstr \"\"\n \n-#: arm-dis.c:5105\n+#: arm-dis.c:5184\n msgid \"Select raw register names\"\n msgstr \"\"\n \n-#: arm-dis.c:5107\n+#: arm-dis.c:5186\n msgid \"Select register names used by GCC\"\n msgstr \"\"\n \n-#: arm-dis.c:5109\n+#: arm-dis.c:5188\n msgid \"Select register names used in ARM's ISA documentation\"\n msgstr \"\"\n \n-#: arm-dis.c:5111\n+#: arm-dis.c:5190\n msgid \"Assume all insns are Thumb insns\"\n msgstr \"\"\n \n-#: arm-dis.c:5112\n+#: arm-dis.c:5191\n msgid \"Examine preceding label to determine an insn's type\"\n msgstr \"\"\n \n-#: arm-dis.c:5113\n+#: arm-dis.c:5192\n msgid \"Select register names used in the APCS\"\n msgstr \"\"\n \n-#: arm-dis.c:5115\n+#: arm-dis.c:5194\n msgid \"Select register names used in the ATPCS\"\n msgstr \"\"\n \n-#: arm-dis.c:5117\n+#: arm-dis.c:5196\n msgid \"Select special register names used in the ATPCS\"\n msgstr \"\"\n \n-#: arm-dis.c:8286\n+#: arm-dis.c:5198\n+msgid \"Enable CDE extensions for coprocessor N space\"\n+msgstr \"\"\n+\n+#: arm-dis.c:8367\n msgid \"<illegal precision>\"\n msgstr \"\"\n \n-#: arm-dis.c:11352\n+#: arm-dis.c:11607\n #, c-format\n msgid \"unrecognised register name set: %s\"\n msgstr \"\"\n \n-#: arm-dis.c:12066\n+#: arm-dis.c:11621\n+#, c-format\n+msgid \"cde coprocessor not between 0-7: %s\"\n+msgstr \"\"\n+\n+#: arm-dis.c:11627\n+#, c-format\n+msgid \"coproc must have an argument: %s\"\n+msgstr \"\"\n+\n+#: arm-dis.c:11640\n+#, c-format\n+msgid \"coprocN argument takes options \\\"generic\\\", \\\"cde\\\", or \\\"CDE\\\": %s\"\n+msgstr \"\"\n+\n+#: arm-dis.c:12351\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -716,19 +739,19 @@ msgstr \"\"\n msgid \"bad instruction `%.50s'\"\n msgstr \"\"\n \n-#: bpf-desc.c:1441\n+#: bpf-desc.c:1661\n #, c-format\n msgid \"\"\n \"internal error: bpf_cgen_rebuild_tables: conflicting insn-chunk-bitsize \"\n \"values: `%d' vs. `%d'\"\n msgstr \"\"\n \n-#: bpf-desc.c:1524\n+#: bpf-desc.c:1744\n #, c-format\n msgid \"internal error: bpf_cgen_cpu_open: unsupported argument `%d'\"\n msgstr \"\"\n \n-#: bpf-desc.c:1543\n+#: bpf-desc.c:1763\n #, c-format\n msgid \"internal error: bpf_cgen_cpu_open: no endianness specified\"\n msgstr \"\"\n@@ -772,50 +795,50 @@ msgstr \"\"\n msgid \"operand out of range (%ld not between %ld and %ld)\"\n msgstr \"\"\n \n-#: bpf-ibld.c:625 epiphany-ibld.c:880 fr30-ibld.c:735 frv-ibld.c:861\n-#: ip2k-ibld.c:612 iq2000-ibld.c:718 lm32-ibld.c:639 m32c-ibld.c:1736\n-#: m32r-ibld.c:670 mep-ibld.c:1213 mt-ibld.c:754 or1k-ibld.c:742\n-#: xc16x-ibld.c:757 xstormy16-ibld.c:683\n+#: bpf-ibld.c:628 epiphany-ibld.c:883 fr30-ibld.c:738 frv-ibld.c:864\n+#: ip2k-ibld.c:615 iq2000-ibld.c:721 lm32-ibld.c:642 m32c-ibld.c:1739\n+#: m32r-ibld.c:673 mep-ibld.c:1216 mt-ibld.c:757 or1k-ibld.c:745\n+#: xc16x-ibld.c:760 xstormy16-ibld.c:686\n #, c-format\n msgid \"internal error: unrecognized field %d while building insn\"\n msgstr \"\"\n \n-#: bpf-ibld.c:709 epiphany-ibld.c:1175 fr30-ibld.c:941 frv-ibld.c:1179\n-#: ip2k-ibld.c:688 iq2000-ibld.c:894 lm32-ibld.c:744 m32c-ibld.c:2898\n-#: m32r-ibld.c:808 mep-ibld.c:1813 mt-ibld.c:975 or1k-ibld.c:910\n-#: xc16x-ibld.c:978 xstormy16-ibld.c:830\n+#: bpf-ibld.c:712 epiphany-ibld.c:1178 fr30-ibld.c:944 frv-ibld.c:1182\n+#: ip2k-ibld.c:691 iq2000-ibld.c:897 lm32-ibld.c:747 m32c-ibld.c:2901\n+#: m32r-ibld.c:811 mep-ibld.c:1816 mt-ibld.c:978 or1k-ibld.c:913\n+#: xc16x-ibld.c:981 xstormy16-ibld.c:833\n #, c-format\n msgid \"internal error: unrecognized field %d while decoding insn\"\n msgstr \"\"\n \n-#: bpf-ibld.c:778 epiphany-ibld.c:1319 fr30-ibld.c:1088 frv-ibld.c:1458\n-#: ip2k-ibld.c:763 iq2000-ibld.c:1026 lm32-ibld.c:834 m32c-ibld.c:3516\n-#: m32r-ibld.c:922 mep-ibld.c:2284 mt-ibld.c:1176 or1k-ibld.c:1015\n-#: xc16x-ibld.c:1200 xstormy16-ibld.c:941\n+#: bpf-ibld.c:781 epiphany-ibld.c:1322 fr30-ibld.c:1091 frv-ibld.c:1461\n+#: ip2k-ibld.c:766 iq2000-ibld.c:1029 lm32-ibld.c:837 m32c-ibld.c:3519\n+#: m32r-ibld.c:925 mep-ibld.c:2287 mt-ibld.c:1179 or1k-ibld.c:1018\n+#: xc16x-ibld.c:1203 xstormy16-ibld.c:944\n #, c-format\n msgid \"internal error: unrecognized field %d while getting int operand\"\n msgstr \"\"\n \n-#: bpf-ibld.c:829 epiphany-ibld.c:1445 fr30-ibld.c:1217 frv-ibld.c:1719\n-#: ip2k-ibld.c:820 iq2000-ibld.c:1140 lm32-ibld.c:906 m32c-ibld.c:4116\n-#: m32r-ibld.c:1018 mep-ibld.c:2737 mt-ibld.c:1359 or1k-ibld.c:1102\n-#: xc16x-ibld.c:1404 xstormy16-ibld.c:1034\n+#: bpf-ibld.c:832 epiphany-ibld.c:1448 fr30-ibld.c:1220 frv-ibld.c:1722\n+#: ip2k-ibld.c:823 iq2000-ibld.c:1143 lm32-ibld.c:909 m32c-ibld.c:4119\n+#: m32r-ibld.c:1021 mep-ibld.c:2740 mt-ibld.c:1362 or1k-ibld.c:1105\n+#: xc16x-ibld.c:1407 xstormy16-ibld.c:1037\n #, c-format\n msgid \"internal error: unrecognized field %d while getting vma operand\"\n msgstr \"\"\n \n-#: bpf-ibld.c:887 epiphany-ibld.c:1578 fr30-ibld.c:1349 frv-ibld.c:1987\n-#: ip2k-ibld.c:880 iq2000-ibld.c:1261 lm32-ibld.c:985 m32c-ibld.c:4704\n-#: m32r-ibld.c:1120 mep-ibld.c:3151 mt-ibld.c:1549 or1k-ibld.c:1196\n-#: xc16x-ibld.c:1609 xstormy16-ibld.c:1134\n+#: bpf-ibld.c:890 epiphany-ibld.c:1581 fr30-ibld.c:1352 frv-ibld.c:1990\n+#: ip2k-ibld.c:883 iq2000-ibld.c:1264 lm32-ibld.c:988 m32c-ibld.c:4707\n+#: m32r-ibld.c:1123 mep-ibld.c:3154 mt-ibld.c:1552 or1k-ibld.c:1199\n+#: xc16x-ibld.c:1612 xstormy16-ibld.c:1137\n #, c-format\n msgid \"internal error: unrecognized field %d while setting int operand\"\n msgstr \"\"\n \n-#: bpf-ibld.c:935 epiphany-ibld.c:1701 fr30-ibld.c:1471 frv-ibld.c:2245\n-#: ip2k-ibld.c:930 iq2000-ibld.c:1372 lm32-ibld.c:1054 m32c-ibld.c:5282\n-#: m32r-ibld.c:1212 mep-ibld.c:3555 mt-ibld.c:1729 or1k-ibld.c:1280\n-#: xc16x-ibld.c:1804 xstormy16-ibld.c:1224\n+#: bpf-ibld.c:938 epiphany-ibld.c:1704 fr30-ibld.c:1474 frv-ibld.c:2248\n+#: ip2k-ibld.c:933 iq2000-ibld.c:1375 lm32-ibld.c:1057 m32c-ibld.c:5285\n+#: m32r-ibld.c:1215 mep-ibld.c:3558 mt-ibld.c:1732 or1k-ibld.c:1283\n+#: xc16x-ibld.c:1807 xstormy16-ibld.c:1227\n #, c-format\n msgid \"internal error: unrecognized field %d while setting vma operand\"\n msgstr \"\"\n@@ -846,6 +869,15 @@ msgstr \"\"\n msgid \"Address 0x%s is out of bounds.\\n\"\n msgstr \"\"\n \n+#: disassemble.c:839\n+#, c-format\n+msgid \"assertion fail %s:%d\"\n+msgstr \"\"\n+\n+#: disassemble.c:840\n+msgid \"Please report this bug\"\n+msgstr \"\"\n+\n #: epiphany-asm.c:68\n msgid \"register unavailable for short instructions\"\n msgstr \"\"\n@@ -979,26 +1011,21 @@ msgstr \"\"\n msgid \"internal error: bad insn unit\"\n msgstr \"\"\n \n-#: h8300-dis.c:63\n-#, c-format\n-msgid \"internal error, h8_disassemble_init\"\n-msgstr \"\"\n-\n-#: h8300-dis.c:315\n+#: h8300-dis.c:309\n #, c-format\n msgid \"Hmmmm 0x%x\"\n msgstr \"\"\n \n-#: h8300-dis.c:692\n+#: h8300-dis.c:617\n #, c-format\n msgid \"Don't understand 0x%x \\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11062\n+#: i386-dis.c:11091\n msgid \"<internal disassembler error>\"\n msgstr \"\"\n \n-#: i386-dis.c:11360\n+#: i386-dis.c:11389\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -1007,145 +1034,145 @@ msgid \"\"\n \"with the -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11364\n+#: i386-dis.c:11393\n #, c-format\n msgid \"  x86-64      Disassemble in 64bit mode\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11365\n+#: i386-dis.c:11394\n #, c-format\n msgid \"  i386        Disassemble in 32bit mode\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11366\n+#: i386-dis.c:11395\n #, c-format\n msgid \"  i8086       Disassemble in 16bit mode\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11367\n+#: i386-dis.c:11396\n #, c-format\n msgid \"  att         Display instruction in AT&T syntax\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11368\n+#: i386-dis.c:11397\n #, c-format\n msgid \"  intel       Display instruction in Intel syntax\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11369\n+#: i386-dis.c:11398\n #, c-format\n msgid \"\"\n \"  att-mnemonic\\n\"\n \"              Display instruction in AT&T mnemonic\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11371\n+#: i386-dis.c:11400\n #, c-format\n msgid \"\"\n \"  intel-mnemonic\\n\"\n \"              Display instruction in Intel mnemonic\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11373\n+#: i386-dis.c:11402\n #, c-format\n msgid \"  addr64      Assume 64bit address size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11374\n+#: i386-dis.c:11403\n #, c-format\n msgid \"  addr32      Assume 32bit address size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11375\n+#: i386-dis.c:11404\n #, c-format\n msgid \"  addr16      Assume 16bit address size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11376\n+#: i386-dis.c:11405\n #, c-format\n msgid \"  data32      Assume 32bit data size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11377\n+#: i386-dis.c:11406\n #, c-format\n msgid \"  data16      Assume 16bit data size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11378\n+#: i386-dis.c:11407\n #, c-format\n msgid \"  suffix      Always display instruction suffix in AT&T syntax\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11379\n+#: i386-dis.c:11408\n #, c-format\n msgid \"  amd64       Display instruction in AMD64 ISA\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11380\n+#: i386-dis.c:11409\n #, c-format\n msgid \"  intel64     Display instruction in Intel64 ISA\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11943\n+#: i386-dis.c:11972\n msgid \"64-bit address is disabled\"\n msgstr \"\"\n \n-#: i386-gen.c:754\n+#: i386-gen.c:792\n #, c-format\n msgid \"%s: error: \"\n msgstr \"\"\n \n-#: i386-gen.c:917\n+#: i386-gen.c:959\n #, c-format\n msgid \"%s: %d: unknown bitfield: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:919\n+#: i386-gen.c:961\n #, c-format\n msgid \"unknown bitfield: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:982\n+#: i386-gen.c:1024\n #, c-format\n msgid \"%s: %d: missing `)' in bitfield: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1083\n+#: i386-gen.c:1125\n #, c-format\n msgid \"unknown broadcast operand: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1538\n+#: i386-gen.c:1776\n #, c-format\n msgid \"can't find i386-reg.tbl for reading, errno = %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1616\n+#: i386-gen.c:1854\n #, c-format\n msgid \"can't create i386-init.h, errno = %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1706 ia64-gen.c:2829\n+#: i386-gen.c:1944 ia64-gen.c:2829\n #, c-format\n msgid \"unable to change directory to \\\"%s\\\", errno = %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1720 i386-gen.c:1725\n+#: i386-gen.c:1958 i386-gen.c:1963\n #, c-format\n msgid \"CpuMax != %d!\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1729\n+#: i386-gen.c:1967\n #, c-format\n msgid \"%d unused bits in i386_cpu_flags.\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1744\n+#: i386-gen.c:1982\n #, c-format\n msgid \"%d unused bits in i386_operand_type.\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1758\n+#: i386-gen.c:1996\n #, c-format\n msgid \"can't create i386-tbl.h, errno = %s\\n\"\n msgstr \"\"\n@@ -1765,6 +1792,10 @@ msgstr \"\"\n msgid \"internal error: unknown hardware resource\"\n msgstr \"\"\n \n+#: nds32-dis.c:1186\n+msgid \"insufficient data to decode instruction\"\n+msgstr \"\"\n+\n #: nfp-dis.c:927\n msgid \"<invalid_instruction>:\"\n msgstr \"\"\n@@ -1872,7 +1903,7 @@ msgstr \"\"\n msgid \"warning: ignoring unknown -M%s option\"\n msgstr \"\"\n \n-#: ppc-dis.c:957\n+#: ppc-dis.c:965\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -2041,15 +2072,15 @@ msgstr \"\"\n msgid \"<invalid size>\"\n msgstr \"\"\n \n-#: s12z-dis.c:258 s12z-dis.c:315 s12z-dis.c:326\n+#: s12z-dis.c:251 s12z-dis.c:308 s12z-dis.c:319\n msgid \"<illegal reg num>\"\n msgstr \"\"\n \n-#: s12z-dis.c:389\n+#: s12z-dis.c:382\n msgid \"<bad>\"\n msgstr \"\"\n \n-#: s12z-dis.c:400\n+#: s12z-dis.c:392\n msgid \".<bad>\"\n msgstr \"\"\n "
    }
  ]
}