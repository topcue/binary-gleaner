{
  "sha": "2b0c8b019996b23fb4717687f5e7ac8c5620c089",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmIwYzhiMDE5OTk2YjIzZmI0NzE3Njg3ZjVlN2FjOGM1NjIwYzA4OQ==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-03-21T03:38:33Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-04-09T03:21:34Z"
    },
    "message": "Rename python function thread_from_thread_handle to thread_from_handle\n\nThis renaming was done to stay consistent with the naming of the new\ngdb.InferiorThread.handle method.  I had initially named it \"thread_handle\"\nbut Tom Tromey suggested just \"handle\".\n\nThe old name (thread_from_thread_handle) still works, but is marked as\ndeprecated in comments in the code as well as in the documentation.\n\nI have some code which uses these functions.  I very much like the\nbrevity of the new names.\n\ngdb/doc/ChangeLog:\n\n\t* python.texi (Inferiors In Python): Rename\n\tInferior.thread_from_thread_handle to Inferior.thread_from_handle.\n\tAdd note about the former being deprecated.\n\ngdb/ChangeLog:\n\n\t* python/py-inferior.c (infpy_thread_from_thread_handle):\n\tAdjust comments to reflect renaming of thread_from_thread_handle\n\tto thread_from_handle.  Adjust keywords.  Fix type error message.\n\t(inferior_object_methods): Add thread_from_handle.  Retain\n\tthread_from_thread_handle, but mark it as deprecated.\n\ntestsuite/ChangeLog:\n\n\t* gdb.python/py-thrhandle.exp: Adjust tests to call\n\tthread_from_handle instead of thread_from_thread_handle.",
    "tree": {
      "sha": "27f4cf53d2e1f632def4eea8f081c92bdd22c88c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/27f4cf53d2e1f632def4eea8f081c92bdd22c88c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2b0c8b019996b23fb4717687f5e7ac8c5620c089",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b0c8b019996b23fb4717687f5e7ac8c5620c089",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2b0c8b019996b23fb4717687f5e7ac8c5620c089",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b0c8b019996b23fb4717687f5e7ac8c5620c089/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c369f8f0face23a06e0cf114bf70a024ba9b4959",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c369f8f0face23a06e0cf114bf70a024ba9b4959",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c369f8f0face23a06e0cf114bf70a024ba9b4959"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 50,
    "deletions": 20
  },
  "files": [
    {
      "sha": "e1d20fd4f20e6c364f49c5f7ea1ebc33fcca1885",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2b0c8b019996b23fb4717687f5e7ac8c5620c089",
      "patch": "@@ -1,3 +1,11 @@\n+2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* python/py-inferior.c (infpy_thread_from_thread_handle):\n+\tAdjust comments to reflect renaming of thread_from_thread_handle\n+\tto thread_from_handle.  Adjust keywords.  Fix type error message.\n+\t(inferior_object_methods): Add thread_from_handle.  Retain\n+\tthread_from_thread_handle, but mark it as deprecated.\n+\n 2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdbthread.h (find_thread_by_handle): Revise declaration."
    },
    {
      "sha": "27e65ea56cfa760dbe308a6c0518c4123ed6a6a3",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=2b0c8b019996b23fb4717687f5e7ac8c5620c089",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* python.texi (Inferiors In Python): Rename\n+\tInferior.thread_from_thread_handle to Inferior.thread_from_handle.\n+\tAdd note about the former being deprecated.\n+\n 2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n \n \t* python.texi (Threads In Python): Add description for method"
    },
    {
      "sha": "36947de30b090588b231afb691b69a48a6ac5173",
      "filename": "gdb/doc/python.texi",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/doc/python.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/doc/python.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/python.texi?ref=2b0c8b019996b23fb4717687f5e7ac8c5620c089",
      "patch": "@@ -3000,11 +3000,16 @@ containing the address where the pattern was found, or @code{None} if\n the pattern could not be found.\n @end defun\n \n+@findex Inferior.thread_from_handle\n @findex Inferior.thread_from_thread_handle\n-@defun Inferior.thread_from_thread_handle (thread_handle)\n-Return the thread object corresponding to @var{thread_handle}, a thread\n+@defun Inferior.thread_from_handle (handle)\n+Return the thread object corresponding to @var{handle}, a thread\n library specific data structure such as @code{pthread_t} for pthreads\n library implementations.\n+\n+The function @code{Inferior.thread_from_thread_handle} provides\n+the same functionality, but use of @code{Inferior.thread_from_thread_handle}\n+is deprecated.\n @end defun\n \n @node Events In Python"
    },
    {
      "sha": "984cebb101de8b7358afabbbb2e2bc510bfb6e6f",
      "filename": "gdb/python/py-inferior.c",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/python/py-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/python/py-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-inferior.c?ref=2b0c8b019996b23fb4717687f5e7ac8c5620c089",
      "patch": "@@ -755,15 +755,15 @@ infpy_is_valid (PyObject *self, PyObject *args)\n   Py_RETURN_TRUE;\n }\n \n-/* Implementation of gdb.Inferior.thread_from_thread_handle (self, handle)\n+/* Implementation of gdb.Inferior.thread_from_handle (self, handle)\n                         ->  gdb.InferiorThread.  */\n \n static PyObject *\n infpy_thread_from_thread_handle (PyObject *self, PyObject *args, PyObject *kw)\n {\n   PyObject *handle_obj;\n   inferior_object *inf_obj = (inferior_object *) self;\n-  static const char *keywords[] = { \"thread_handle\", NULL };\n+  static const char *keywords[] = { \"handle\", NULL };\n \n   INFPY_REQUIRE_VALID (inf_obj);\n \n@@ -791,7 +791,7 @@ infpy_thread_from_thread_handle (PyObject *self, PyObject *args, PyObject *kw)\n   else\n     {\n       PyErr_SetString (PyExc_TypeError,\n-\t\t       _(\"Argument 'handle_obj' must be a thread handle object.\"));\n+\t\t       _(\"Argument 'handle' must be a thread handle object.\"));\n \n       return NULL;\n     }\n@@ -956,9 +956,15 @@ Write the given buffer object to the inferior's memory.\" },\n     METH_VARARGS | METH_KEYWORDS,\n     \"search_memory (address, length, pattern) -> long\\n\\\n Return a long with the address of a match, or None.\" },\n+  /* thread_from_thread_handle is deprecated.  */\n   { \"thread_from_thread_handle\", (PyCFunction) infpy_thread_from_thread_handle,\n     METH_VARARGS | METH_KEYWORDS,\n     \"thread_from_thread_handle (handle) -> gdb.InferiorThread.\\n\\\n+Return thread object corresponding to thread handle.\\n\\\n+This method is deprecated - use thread_from_handle instead.\" },\n+  { \"thread_from_handle\", (PyCFunction) infpy_thread_from_thread_handle,\n+    METH_VARARGS | METH_KEYWORDS,\n+    \"thread_from_handle (handle) -> gdb.InferiorThread.\\n\\\n Return thread object corresponding to thread handle.\" },\n   { \"architecture\", (PyCFunction) infpy_architecture, METH_NOARGS,\n     \"architecture () -> gdb.Architecture\\n\\"
    },
    {
      "sha": "5f1ce3cb32d8057429c6c5178ca069d8c297a264",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2b0c8b019996b23fb4717687f5e7ac8c5620c089",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* gdb.python/py-thrhandle.exp: Adjust tests to call\n+\tthread_from_handle instead of thread_from_thread_handle.\n+\n 2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdb.python/py-thrhandle.exp: Add tests for"
    },
    {
      "sha": "19c690be14ad39e09614a8a6ab52a1ec154e2202",
      "filename": "gdb/testsuite/gdb.python/py-thrhandle.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/testsuite/gdb.python/py-thrhandle.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b0c8b019996b23fb4717687f5e7ac8c5620c089/gdb/testsuite/gdb.python/py-thrhandle.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-thrhandle.exp?ref=2b0c8b019996b23fb4717687f5e7ac8c5620c089",
      "patch": "@@ -16,7 +16,7 @@\n # Please email any bugs, comments, and/or additions to this file to:\n # bug-gdb@gnu.org\n \n-# This file verifies that methods Inferior.thread_from_thread_handle\n+# This file verifies that methods Inferior.thread_from_handle\n # and InferiorThread.handle work as expected.\n \n load_lib gdb-python.exp\n@@ -67,44 +67,44 @@ gdb_test \"info threads\"  \\\n \t{.*[\\r\\n]+\\* +([0-9]+) +Thread[^\\r\\n]* do_something \\(n=\\1\\) at.*}\n \n # Check for expected results when passing a valid thread handle to\n-# thread_from_thread_handle().\n+# thread_from_handle().\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.parse_and_eval('thrs\\[0\\]')).num)\" \\\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.parse_and_eval('thrs\\[0\\]')).num)\" \\\n \t\"1\" \"print thread id for thrs\\[0\\]\"\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.parse_and_eval('thrs\\[1\\]')).num)\" \\\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.parse_and_eval('thrs\\[1\\]')).num)\" \\\n \t\"2\" \"print thread id for thrs\\[1\\]\"\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.parse_and_eval('thrs\\[2\\]')).num)\" \\\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.parse_and_eval('thrs\\[2\\]')).num)\" \\\n \t\"3\" \"print thread id for thrs\\[2\\]\"\n \n # Objects which are of the correct size, but which are bogus thread\n # handles should return None.  For the first test (using thrs[3]), we\n # use 0.  For the second (thrs[4]), we use an unlikely bit pattern.\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.parse_and_eval('thrs\\[3\\]')))\" \\\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.parse_and_eval('thrs\\[3\\]')))\" \\\n \t\"None\" \"print thread for bogus handle thrs\\[3\\]\"\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.parse_and_eval('thrs\\[4\\]')))\" \\\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.parse_and_eval('thrs\\[4\\]')))\" \\\n \t\"None\" \"print thread for bogus handle thrs\\[4\\]\"\n \n # We should see an exception when passing an object of the wrong type.\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.lookup_symbol('main')))\" \\\n-         \".*TypeError: Argument 'handle_obj' must be a thread handle object.*\" \\\n-\t \"TypeError when passing a symbol object to thread_from_thread_handle\"\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.lookup_symbol('main')))\" \\\n+         \".*TypeError: Argument 'handle' must be a thread handle object.*\" \\\n+\t \"TypeError when passing a symbol object to thread_from_handle\"\n \n # We should see an exception when passing too large of an object.\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.parse_and_eval('thrs')))\" \\\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.parse_and_eval('thrs')))\" \\\n          \".*Thread handle size mismatch.*\" \\\n-\t \"Pass overly large object to thread_from_thread_handle\"\n+\t \"Pass overly large object to thread_from_handle\"\n \n # We should see an exception when passing too small of an object.\n \n-gdb_test \"python print(gdb.selected_inferior().thread_from_thread_handle(gdb.parse_and_eval('\\\"S\\\"')))\" \\\n+gdb_test \"python print(gdb.selected_inferior().thread_from_handle(gdb.parse_and_eval('\\\"S\\\"')))\" \\\n          \".*Thread handle size mismatch.*\" \\\n-\t \"Pass too small of an object to thread_from_thread_handle\"\n+\t \"Pass too small of an object to thread_from_handle\"\n \n # Test the thread_handle method\n \n@@ -121,7 +121,7 @@ foreach thrN {0 1 2} {\n \t    1\n \n \tgdb_py_test_silent_cmd \\\n-\t    \"python hand_bytes = inf.thread_from_thread_handle(hand).handle()\" \\\n+\t    \"python hand_bytes = inf.thread_from_handle(hand).handle()\" \\\n \t    \"fetch thread handle from thread\" \\\n \t    1\n "
    }
  ]
}