{
  "sha": "3eec3b05b9ecf5e726c606f0bba916e095dcbe98",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2VlYzNiMDViOWVjZjVlNzI2YzYwNmYwYmJhOTE2ZTA5NWRjYmU5OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:41Z"
    },
    "message": "Introduce generic_value_print_char\n\nThis adds generic_value_print_char, a value-based analogue of\ngeneric_val_print_char.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* valprint.c (generic_value_print_char): New function\n\t(generic_value_print): Use it.",
    "tree": {
      "sha": "6e52f74f8c5f2e29755dd6ea24f919ce292cc9b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6e52f74f8c5f2e29755dd6ea24f919ce292cc9b4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3eec3b05b9ecf5e726c606f0bba916e095dcbe98",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3eec3b05b9ecf5e726c606f0bba916e095dcbe98",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3eec3b05b9ecf5e726c606f0bba916e095dcbe98",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3eec3b05b9ecf5e726c606f0bba916e095dcbe98/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fdddfccba1cc4f70089873441b7e6c38de09ae37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fdddfccba1cc4f70089873441b7e6c38de09ae37",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fdddfccba1cc4f70089873441b7e6c38de09ae37"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 36,
    "deletions": 3
  },
  "files": [
    {
      "sha": "ccf0d1e421dc37ae2849d19f32db35acafab8c9f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3eec3b05b9ecf5e726c606f0bba916e095dcbe98/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3eec3b05b9ecf5e726c606f0bba916e095dcbe98/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3eec3b05b9ecf5e726c606f0bba916e095dcbe98",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* valprint.c (generic_value_print_char): New function\n+\t(generic_value_print): Use it.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (generic_value_print_int): New function."
    },
    {
      "sha": "8c2d1aa1955f1dc602bbcea24c3f832f5108567b",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 31,
      "deletions": 3,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3eec3b05b9ecf5e726c606f0bba916e095dcbe98/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3eec3b05b9ecf5e726c606f0bba916e095dcbe98/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=3eec3b05b9ecf5e726c606f0bba916e095dcbe98",
      "patch": "@@ -883,6 +883,36 @@ generic_val_print_char (struct type *type, struct type *unresolved_type,\n     }\n }\n \n+/* generic_value_print helper for TYPE_CODE_CHAR.  */\n+\n+static void\n+generic_value_print_char (struct value *value, struct ui_file *stream,\n+\t\t\t  const struct value_print_options *options)\n+{\n+  if (options->format || options->output_format)\n+    {\n+      struct value_print_options opts = *options;\n+\n+      opts.format = (options->format ? options->format\n+\t\t     : options->output_format);\n+      value_print_scalar_formatted (value, &opts, 0, stream);\n+    }\n+  else\n+    {\n+      struct type *unresolved_type = value_type (value);\n+      struct type *type = check_typedef (unresolved_type);\n+      const gdb_byte *valaddr = value_contents_for_printing (value);\n+\n+      LONGEST val = unpack_long (type, valaddr);\n+      if (TYPE_UNSIGNED (type))\n+\tfprintf_filtered (stream, \"%u\", (unsigned int) val);\n+      else\n+\tfprintf_filtered (stream, \"%d\", (int) val);\n+      fputs_filtered (\" \", stream);\n+      LA_PRINT_CHAR (val, unresolved_type, stream);\n+    }\n+}\n+\n /* generic_val_print helper for TYPE_CODE_FLT and TYPE_CODE_DECFLOAT.  */\n \n static void\n@@ -1084,7 +1114,6 @@ generic_value_print (struct value *val, struct ui_file *stream, int recurse,\n \t\t     const struct generic_val_print_decorations *decorations)\n {\n   struct type *type = value_type (val);\n-  struct type *unresolved_type = type;\n \n   type = check_typedef (type);\n   switch (TYPE_CODE (type))\n@@ -1151,8 +1180,7 @@ generic_value_print (struct value *val, struct ui_file *stream, int recurse,\n       break;\n \n     case TYPE_CODE_CHAR:\n-      generic_val_print_char (type, unresolved_type, 0,\n-\t\t\t      stream, val, options);\n+      generic_value_print_char (val, stream, options);\n       break;\n \n     case TYPE_CODE_FLT:"
    }
  ]
}