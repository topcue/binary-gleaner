{
  "sha": "92434a14b97bf07546701613a16aaf4d8a3b3eca",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTI0MzRhMTRiOTdiZjA3NTQ2NzAxNjEzYTE2YWFmNGQ4YTNiM2VjYQ==",
  "commit": {
    "author": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-07-14T12:45:31Z"
    },
    "committer": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-07-14T12:45:31Z"
    },
    "message": "cpu,opcodes,gas: fix arguments to ldabs and ldind eBPF instructions\n\nThe eBPF non-generic load instructions ldind{b,h,w,dw} and\nldabs{b,h,w,dw} do not take an explicit destination register as an\nargument.  Instead, they put the loaded value in %r0, implicitly.\n\nThis patch fixes the CPU BPF description to not expect a 'dst'\nargument in these arguments, regenerates the corresponding files in\nopcodes, and updates the impacted GAS tests.\n\nTested in a x86-64 host.\n\ncpu/ChangeLog:\n\n2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* bpf.cpu (dlsi): ldabs and ldind instructions do not take an\n\texplicit 'dst' argument.\n\nopcodes/ChangeLog:\n\n2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* bpf-desc.c: Regenerate.\n\t* bpf-opc.c: Likewise.\n\ngas/ChangeLog:\n\n2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* testsuite/gas/bpf/mem.s: Do not use explicit arguments for\n\tldabs and ldind instructions.\n\t* testsuite/gas/bpf/mem.d: Updated accordingly.\n\t* testsuite/gas/bpf/mem-be.d: Likewise.",
    "tree": {
      "sha": "e60ab4f22c2660c51d887ff4c23aaf965c34df0f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e60ab4f22c2660c51d887ff4c23aaf965c34df0f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/92434a14b97bf07546701613a16aaf4d8a3b3eca",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/92434a14b97bf07546701613a16aaf4d8a3b3eca",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/92434a14b97bf07546701613a16aaf4d8a3b3eca",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/92434a14b97bf07546701613a16aaf4d8a3b3eca/comments",
  "author": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "da73816739483bac537403262cef1c460e43319f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da73816739483bac537403262cef1c460e43319f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/da73816739483bac537403262cef1c460e43319f"
    }
  ],
  "stats": {
    "total": 165,
    "additions": 91,
    "deletions": 74
  },
  "files": [
    {
      "sha": "49940034bb062ff218cd5658da92a51ec24d55d3",
      "filename": "cpu/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/cpu/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/cpu/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/ChangeLog?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf.cpu (dlsi): ldabs and ldind instructions do not take an\n+\texplicit 'dst' argument.\n+\n 2019-06-13  Stafford Horne  <shorne@gmail.com>\n \n \t* or1korfpx.cpu (float-setflag-insn-base): Add 'sf' to symbol."
    },
    {
      "sha": "60e89fb71c40c019b9c452e7c5b68f34f06ff64d",
      "filename": "cpu/bpf.cpu",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/cpu/bpf.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/cpu/bpf.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/bpf.cpu?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -477,8 +477,8 @@\n   (dni (.sym x-basename x-suffix x-endian)\n        (.str x-basename x-suffix)\n        ((ISA (.sym ebpf x-endian)))\n-       (.str x-basename x-suffix \" $dst\" x-endian \",$src\" x-endian \",$imm32\")\n-       (+ imm32 (f-offset16 0) (.sym src x-endian) (.sym dst x-endian)\n+       (.str x-basename x-suffix \" $src\" x-endian \",$imm32\")\n+       (+ imm32 (f-offset16 0) ((.sym f-dst x-endian) 0) (.sym src x-endian)\n           (.sym OP_CLASS_ x-class) (.sym OP_SIZE_ x-size)\n           (.sym OP_MODE_ x-mode)) () ()))\n "
    },
    {
      "sha": "fb44aa3d6f635d4e64cf3c9da5fbeb3bc34737d0",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -1,3 +1,10 @@\n+2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* testsuite/gas/bpf/mem.s: Do not use explicit arguments for\n+\tldabs and ldind instructions.\n+\t* testsuite/gas/bpf/mem.d: Updated accordingly.\n+\t* testsuite/gas/bpf/mem-be.d: Likewise.\n+\n 2019-07-09  Alan Modra  <amodra@gmail.com>\n \n \t* config/obj-elf.c (elf_frob_symbol): Remove mips hacks."
    },
    {
      "sha": "7a258bcd550358895a1d50c7a5dc055018769b81",
      "filename": "gas/testsuite/gas/bpf/mem-be.d",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/testsuite/gas/bpf/mem-be.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/testsuite/gas/bpf/mem-be.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem-be.d?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -8,14 +8,14 @@\n Disassembly of section .text:\n \n 0+ <.text>:\n-   0:\t20 23 00 00 00 00 be ef \tldabsw %r2,%r3,0xbeef\n-   8:\t28 45 00 00 00 00 be ef \tldabsh %r4,%r5,0xbeef\n-  10:\t30 67 00 00 00 00 be ef \tldabsb %ctx,%r7,0xbeef\n-  18:\t38 89 00 00 00 00 be ef \tldabsdw %r8,%r9,0xbeef\n-  20:\t40 23 00 00 00 00 be ef \tldindw %r2,%r3,0xbeef\n-  28:\t48 45 00 00 00 00 be ef \tldindh %r4,%r5,0xbeef\n-  30:\t50 67 00 00 00 00 be ef \tldindb %ctx,%r7,0xbeef\n-  38:\t58 89 00 00 00 00 be ef \tldinddw %r8,%r9,0xbeef\n+   0:\t20 03 00 00 00 00 be ef \tldabsw %r3,0xbeef\n+   8:\t28 05 00 00 00 00 be ef \tldabsh %r5,0xbeef\n+  10:\t30 07 00 00 00 00 be ef \tldabsb %r7,0xbeef\n+  18:\t38 09 00 00 00 00 be ef \tldabsdw %r9,0xbeef\n+  20:\t40 03 00 00 00 00 be ef \tldindw %r3,0xbeef\n+  28:\t48 05 00 00 00 00 be ef \tldindh %r5,0xbeef\n+  30:\t50 07 00 00 00 00 be ef \tldindb %r7,0xbeef\n+  38:\t58 09 00 00 00 00 be ef \tldinddw %r9,0xbeef\n   40:\t61 21 7e ef 00 00 00 00 \tldxw %r2,\\[%r1\\+0x7eef\\]\n   48:\t69 21 7e ef 00 00 00 00 \tldxh %r2,\\[%r1\\+0x7eef\\]\n   50:\t71 21 7e ef 00 00 00 00 \tldxb %r2,\\[%r1\\+0x7eef\\]"
    },
    {
      "sha": "4587ffdbe76f3de64f05a4fca545de01996602c9",
      "filename": "gas/testsuite/gas/bpf/mem.d",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/testsuite/gas/bpf/mem.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/testsuite/gas/bpf/mem.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem.d?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -7,14 +7,14 @@\n Disassembly of section .text:\n \n 0+ <.text>:\n-   0:\t20 32 00 00 ef be 00 00 \tldabsw %r2,%r3,0xbeef\n-   8:\t28 54 00 00 ef be 00 00 \tldabsh %r4,%r5,0xbeef\n-  10:\t30 76 00 00 ef be 00 00 \tldabsb %ctx,%r7,0xbeef\n-  18:\t38 98 00 00 ef be 00 00 \tldabsdw %r8,%r9,0xbeef\n-  20:\t40 32 00 00 ef be 00 00 \tldindw %r2,%r3,0xbeef\n-  28:\t48 54 00 00 ef be 00 00 \tldindh %r4,%r5,0xbeef\n-  30:\t50 76 00 00 ef be 00 00 \tldindb %ctx,%r7,0xbeef\n-  38:\t58 98 00 00 ef be 00 00 \tldinddw %r8,%r9,0xbeef\n+   0:\t20 30 00 00 ef be 00 00 \tldabsw %r3,0xbeef\n+   8:\t28 50 00 00 ef be 00 00 \tldabsh %r5,0xbeef\n+  10:\t30 70 00 00 ef be 00 00 \tldabsb %r7,0xbeef\n+  18:\t38 90 00 00 ef be 00 00 \tldabsdw %r9,0xbeef\n+  20:\t40 30 00 00 ef be 00 00 \tldindw %r3,0xbeef\n+  28:\t48 50 00 00 ef be 00 00 \tldindh %r5,0xbeef\n+  30:\t50 70 00 00 ef be 00 00 \tldindb %r7,0xbeef\n+  38:\t58 90 00 00 ef be 00 00 \tldinddw %r9,0xbeef\n   40:\t61 12 ef 7e 00 00 00 00 \tldxw %r2,\\[%r1\\+0x7eef\\]\n   48:\t69 12 ef 7e 00 00 00 00 \tldxh %r2,\\[%r1\\+0x7eef\\]\n   50:\t71 12 ef 7e 00 00 00 00 \tldxb %r2,\\[%r1\\+0x7eef\\]"
    },
    {
      "sha": "f0f1d08e202732d1133955ac5658a766e3f11f15",
      "filename": "gas/testsuite/gas/bpf/mem.s",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/testsuite/gas/bpf/mem.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/gas/testsuite/gas/bpf/mem.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/bpf/mem.s?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -2,14 +2,14 @@\n \n         .text\n \n- \tldabsw %r2, %r3, 0xbeef\n-\tldabsh %r4, %r5, 0xbeef\n- \tldabsb %r6, %r7, 0xbeef\n- \tldabsdw %r8, %r9, 0xbeef\n-\tldindw %r2, %r3, 0xbeef\n- \tldindh %r4, %r5, 0xbeef\n- \tldindb %r6, %r7, 0xbeef\n- \tldinddw %r8, %r9, 0xbeef\n+ \tldabsw %r3, 0xbeef\n+\tldabsh %r5, 0xbeef\n+ \tldabsb %r7, 0xbeef\n+ \tldabsdw %r9, 0xbeef\n+\tldindw %r3, 0xbeef\n+ \tldindh %r5, 0xbeef\n+ \tldindb %r7, 0xbeef\n+ \tldinddw %r9, 0xbeef\n  \tldxw %r2, [%r1+0x7eef]\n  \tldxh %r2, [%r1+0x7eef]\n  \tldxb %r2, [%r1+0x7eef]"
    },
    {
      "sha": "e1de65b5d4d6b582c7a369a41785d4846a84b83e",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-14  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* bpf-desc.c: Regenerate.\n+\t* bpf-opc.c: Likewise.\n+\n 2019-07-10  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* arm-dis.c (print_insn_coprocessor): Rename index to"
    },
    {
      "sha": "3b943353dcfd5deb5e0b03beccda40ea91885ec7",
      "filename": "opcodes/bpf-desc.c",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/opcodes/bpf-desc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/opcodes/bpf-desc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/bpf-desc.c?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -824,82 +824,82 @@ static const CGEN_IBASE bpf_cgen_insn_table[MAX_INSNS] =\n     BPF_INSN_LDDWBE, \"lddwbe\", \"lddw\", 128,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldabsw $dstle,$srcle,$imm32 */\n+/* ldabsw $srcle,$imm32 */\n   {\n     BPF_INSN_LDABSWLE, \"ldabswle\", \"ldabsw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldabsh $dstle,$srcle,$imm32 */\n+/* ldabsh $srcle,$imm32 */\n   {\n     BPF_INSN_LDABSHLE, \"ldabshle\", \"ldabsh\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldabsb $dstle,$srcle,$imm32 */\n+/* ldabsb $srcle,$imm32 */\n   {\n     BPF_INSN_LDABSBLE, \"ldabsble\", \"ldabsb\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldabsdw $dstle,$srcle,$imm32 */\n+/* ldabsdw $srcle,$imm32 */\n   {\n     BPF_INSN_LDABSDWLE, \"ldabsdwle\", \"ldabsdw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldindw $dstle,$srcle,$imm32 */\n+/* ldindw $srcle,$imm32 */\n   {\n     BPF_INSN_LDINDWLE, \"ldindwle\", \"ldindw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldindh $dstle,$srcle,$imm32 */\n+/* ldindh $srcle,$imm32 */\n   {\n     BPF_INSN_LDINDHLE, \"ldindhle\", \"ldindh\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldindb $dstle,$srcle,$imm32 */\n+/* ldindb $srcle,$imm32 */\n   {\n     BPF_INSN_LDINDBLE, \"ldindble\", \"ldindb\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldinddw $dstle,$srcle,$imm32 */\n+/* ldinddw $srcle,$imm32 */\n   {\n     BPF_INSN_LDINDDWLE, \"ldinddwle\", \"ldinddw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x80\" } } } }\n   },\n-/* ldabsw $dstbe,$srcbe,$imm32 */\n+/* ldabsw $srcbe,$imm32 */\n   {\n     BPF_INSN_LDABSWBE, \"ldabswbe\", \"ldabsw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldabsh $dstbe,$srcbe,$imm32 */\n+/* ldabsh $srcbe,$imm32 */\n   {\n     BPF_INSN_LDABSHBE, \"ldabshbe\", \"ldabsh\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldabsb $dstbe,$srcbe,$imm32 */\n+/* ldabsb $srcbe,$imm32 */\n   {\n     BPF_INSN_LDABSBBE, \"ldabsbbe\", \"ldabsb\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldabsdw $dstbe,$srcbe,$imm32 */\n+/* ldabsdw $srcbe,$imm32 */\n   {\n     BPF_INSN_LDABSDWBE, \"ldabsdwbe\", \"ldabsdw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldindw $dstbe,$srcbe,$imm32 */\n+/* ldindw $srcbe,$imm32 */\n   {\n     BPF_INSN_LDINDWBE, \"ldindwbe\", \"ldindw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldindh $dstbe,$srcbe,$imm32 */\n+/* ldindh $srcbe,$imm32 */\n   {\n     BPF_INSN_LDINDHBE, \"ldindhbe\", \"ldindh\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldindb $dstbe,$srcbe,$imm32 */\n+/* ldindb $srcbe,$imm32 */\n   {\n     BPF_INSN_LDINDBBE, \"ldindbbe\", \"ldindb\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }\n   },\n-/* ldinddw $dstbe,$srcbe,$imm32 */\n+/* ldinddw $srcbe,$imm32 */\n   {\n     BPF_INSN_LDINDDWBE, \"ldinddwbe\", \"ldinddw\", 64,\n     { 0, { { { (1<<MACH_BASE), 0 } }, { { 1, \"\\x40\" } } } }"
    },
    {
      "sha": "4a36cb9714a8f8ff97cb213076adcadbd87caf4d",
      "filename": "opcodes/bpf-opc.c",
      "status": "modified",
      "additions": 32,
      "deletions": 32,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92434a14b97bf07546701613a16aaf4d8a3b3eca/opcodes/bpf-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92434a14b97bf07546701613a16aaf4d8a3b3eca/opcodes/bpf-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/bpf-opc.c?ref=92434a14b97bf07546701613a16aaf4d8a3b3eca",
      "patch": "@@ -792,100 +792,100 @@ static const CGEN_OPCODE bpf_cgen_insn_opcode_table[MAX_INSNS] =\n     { { MNEM, ' ', OP (DSTBE), ',', OP (IMM64), 0 } },\n     & ifmt_lddwbe, { 0x18 }\n   },\n-/* ldabsw $dstle,$srcle,$imm32 */\n+/* ldabsw $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x20 }\n   },\n-/* ldabsh $dstle,$srcle,$imm32 */\n+/* ldabsh $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x28 }\n   },\n-/* ldabsb $dstle,$srcle,$imm32 */\n+/* ldabsb $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x30 }\n   },\n-/* ldabsdw $dstle,$srcle,$imm32 */\n+/* ldabsdw $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x38 }\n   },\n-/* ldindw $dstle,$srcle,$imm32 */\n+/* ldindw $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x40 }\n   },\n-/* ldindh $dstle,$srcle,$imm32 */\n+/* ldindh $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x48 }\n   },\n-/* ldindb $dstle,$srcle,$imm32 */\n+/* ldindb $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x50 }\n   },\n-/* ldinddw $dstle,$srcle,$imm32 */\n+/* ldinddw $srcle,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTLE), ',', OP (SRCLE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCLE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswle, { 0x58 }\n   },\n-/* ldabsw $dstbe,$srcbe,$imm32 */\n+/* ldabsw $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x20 }\n   },\n-/* ldabsh $dstbe,$srcbe,$imm32 */\n+/* ldabsh $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x28 }\n   },\n-/* ldabsb $dstbe,$srcbe,$imm32 */\n+/* ldabsb $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x30 }\n   },\n-/* ldabsdw $dstbe,$srcbe,$imm32 */\n+/* ldabsdw $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x38 }\n   },\n-/* ldindw $dstbe,$srcbe,$imm32 */\n+/* ldindw $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x40 }\n   },\n-/* ldindh $dstbe,$srcbe,$imm32 */\n+/* ldindh $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x48 }\n   },\n-/* ldindb $dstbe,$srcbe,$imm32 */\n+/* ldindb $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x50 }\n   },\n-/* ldinddw $dstbe,$srcbe,$imm32 */\n+/* ldinddw $srcbe,$imm32 */\n   {\n     { 0, 0, 0, 0 },\n-    { { MNEM, ' ', OP (DSTBE), ',', OP (SRCBE), ',', OP (IMM32), 0 } },\n+    { { MNEM, ' ', OP (SRCBE), ',', OP (IMM32), 0 } },\n     & ifmt_ldabswbe, { 0x58 }\n   },\n /* ldxw $dstle,[$srcle+$offset16] */"
    }
  ]
}