{
  "sha": "c408a94f8115767ea7e6aa1a75bc59ea5ae960fa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzQwOGE5NGY4MTE1NzY3ZWE3ZTZhYTFhNzViYzU5ZWE1YWU5NjBmYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-10T16:40:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-14T22:07:28Z"
    },
    "message": "Fix assertion failure in coerce_unspec_val_to_type\n\ncoerce_unspec_val_to_type does:\n\n      set_value_address (result, value_address (val));\n\nHowever, this is only valid for lval_memory.  This patch changes this\ncode to only set the address for lval_memory values.\n\nThis seems like an ordinary oversight in coerce_unspec_val_to_type,\nand a test case would be difficult to write, so I'm submitting it\nwithout a test case.\n\nTested on x86-64 Fedora 29; plus using an Ada program that exhibits\nthe bug (but which cannot be shared).\n\ngdb/ChangeLog\n2019-05-14  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (coerce_unspec_val_to_type): Only set address when\n\tvalue is not lval_memory.",
    "tree": {
      "sha": "7fb8f6def4ac5c6ea165695d0a7c8f564c62d698",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7fb8f6def4ac5c6ea165695d0a7c8f564c62d698"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0a3a1e9d71887bbff54fcd1e33fcefcbc78b603",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0a3a1e9d71887bbff54fcd1e33fcefcbc78b603",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0a3a1e9d71887bbff54fcd1e33fcefcbc78b603"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c82d70fc8cea1271b0ad5cb49d0c94e469529a98",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c408a94f8115767ea7e6aa1a75bc59ea5ae960fa",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (coerce_unspec_val_to_type): Only set address when\n+\tvalue is not lval_memory.\n+\n 2019-05-14  Tom Tromey  <tromey@adacore.com>\n \n \t* solib.c (info_sharedlibrary_command): Style the file name."
    },
    {
      "sha": "23197f603406613b9e348b530d8403e7b46ba3db",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c408a94f8115767ea7e6aa1a75bc59ea5ae960fa/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=c408a94f8115767ea7e6aa1a75bc59ea5ae960fa",
      "patch": "@@ -672,7 +672,8 @@ coerce_unspec_val_to_type (struct value *val, struct type *type)\n       set_value_component_location (result, val);\n       set_value_bitsize (result, value_bitsize (val));\n       set_value_bitpos (result, value_bitpos (val));\n-      set_value_address (result, value_address (val));\n+      if (VALUE_LVAL (result) == lval_memory)\n+\tset_value_address (result, value_address (val));\n       return result;\n     }\n }"
    }
  ]
}