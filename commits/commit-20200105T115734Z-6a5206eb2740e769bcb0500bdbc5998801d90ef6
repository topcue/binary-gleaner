{
  "sha": "6a5206eb2740e769bcb0500bdbc5998801d90ef6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmE1MjA2ZWIyNzQwZTc2OWJjYjA1MDBiZGJjNTk5ODgwMWQ5MGVmNg==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-01-03T19:08:16Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-01-05T11:57:34Z"
    },
    "message": "[AArch64] Fix erroneous use of spu architecture bfd\n\nWhile investigating some SVE code, i noticed the use of two spu bfd variables.\n\nThis looks like an oversight, as the \"id\" field is available for non-spu\narchitectures as well, even though its primary use was the Cell BE\narchitecture.\n\ngdb/ChangeLog:\n\n2020-01-05  Luis Machado  <luis.machado@linaro.org>\n\n\t* aarch64-linux-nat.c\n\t(aarch64_linux_nat_target::thread_architecture): Use bfd_arch_aarch64\n\tand bfd_mach_aarch64.",
    "tree": {
      "sha": "2780845f53cda3f5857e261c613931246cf71fae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2780845f53cda3f5857e261c613931246cf71fae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6a5206eb2740e769bcb0500bdbc5998801d90ef6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a5206eb2740e769bcb0500bdbc5998801d90ef6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6a5206eb2740e769bcb0500bdbc5998801d90ef6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a5206eb2740e769bcb0500bdbc5998801d90ef6/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eb9a7e353f25e08299d037396b18e9c3c9c71b2f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb9a7e353f25e08299d037396b18e9c3c9c71b2f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eb9a7e353f25e08299d037396b18e9c3c9c71b2f"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "735333fdf65ea3fc8ce2e314a9c1810fdf6781b7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a5206eb2740e769bcb0500bdbc5998801d90ef6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a5206eb2740e769bcb0500bdbc5998801d90ef6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6a5206eb2740e769bcb0500bdbc5998801d90ef6",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-05  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* aarch64-linux-nat.c\n+\t(aarch64_linux_nat_target::thread_architecture): Use bfd_arch_aarch64\n+\tand bfd_mach_aarch64.\n+\n 2020-01-03  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* ui-file.c (stdio_file::can_emit_style_escape)"
    },
    {
      "sha": "4e712ebfb7511fcdb6f848e4c335476450e1286d",
      "filename": "gdb/aarch64-linux-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6a5206eb2740e769bcb0500bdbc5998801d90ef6/gdb/aarch64-linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6a5206eb2740e769bcb0500bdbc5998801d90ef6/gdb/aarch64-linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-nat.c?ref=6a5206eb2740e769bcb0500bdbc5998801d90ef6",
      "patch": "@@ -970,7 +970,7 @@ aarch64_linux_nat_target::thread_architecture (ptid_t ptid)\n      unavailable, to distinguish from an unset value of 0.  */\n   struct gdbarch_info info;\n   gdbarch_info_init (&info);\n-  info.bfd_arch_info = bfd_lookup_arch (bfd_arch_spu, bfd_mach_spu);\n+  info.bfd_arch_info = bfd_lookup_arch (bfd_arch_aarch64, bfd_mach_aarch64);\n   info.id = (int *) (vq == 0 ? -1 : vq);\n   return gdbarch_find_by_info (info);\n }"
    }
  ]
}