{
  "sha": "83810881192e950dce39be4d55e21d52ba68fb60",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODM4MTA4ODExOTJlOTUwZGNlMzliZTRkNTVlMjFkNTJiYTY4ZmI2MA==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2021-06-03T17:32:04Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2021-06-03T17:32:20Z"
    },
    "message": "Report additional details for signals received on FreeBSD.\n\nProvide a description for si_code values as a sigcode-meaning field.\nFor signals raised by a system call, provide the pid and user ID of\nthe sending process.  For signals raised by a POSIX timer exparation,\nprovide the id of the timer.  For signals raised by a POSIX message\nqueue, provide the id of the message queue.  For SIGCHLD provide the\npid and user ID of the child process along with the exit status or\nrelevant signal number.\n\nSample output for SIGUSR1 raised by kill():\n\nbefore:\n\nProgram received signal SIGUSR1, User defined signal 1.\nkill () at kill.S:4\n4       RSYSCALL(kill)\n\nafter:\n\nProgram received signal SIGUSR1, User defined signal 1.\nSent by kill() from pid 30529 and user 1001.\nkill () at kill.S:4\n4       RSYSCALL(kill)\n\nSIGCHLD for exited process:\n\nbefore:\n\nProgram received signal SIGCHLD, Child status changed.\n\nafter:\n\nProgram received signal SIGCHLD, Child status changed.\nChild has exited: pid 31929, uid 1001, exit status 0.\n\nSIGALRM raised by a POSIX timer (timer_create):\n\nbefore:\n\nProgram received signal SIGALRM, Alarm clock.\n\nafter:\n\nProgram received signal SIGALRM, Alarm clock.\nTimer expired: timerid 3.\n\ngdb/ChangeLog:\n\n\t* fbsd-tdep.c (FBSD_SI_USER, FBSD_SI_QUEUE, FBSD_SI_TIMER)\n\t(FBSD_SI_ASYNCIO, FBSD_SI_MESGQ, FBSD_SI_KERNEL, FBSD_SI_LWP)\n\t(FBSD_ILL_ILLOPC, FBSD_ILL_ILLOPN, FBSD_ILL_ILLADR)\n\t(FBSD_ILL_ILLTRP, FBSD_ILL_PRVOPC, FBSD_ILL_PRVREG)\n\t(FBSD_ILL_COPROC, FBSD_ILL_BADSTK, FBSD_BUS_ADRALN)\n\t(FBSD_BUS_ADRERR, FBSD_BUS_OBJERR, FBSD_BUS_OOMERR)\n\t(FBSD_SEGV_MAPERR, FBSD_SEGV_ACCERR, FBSD_SEGV_PKUERR)\n\t(FBSD_FPE_INTOVF, FBSD_FPE_INTDIV, FBSD_FPE_FLTDIV)\n\t(FBSD_FPE_FLTOVF, FBSD_FPE_FLTUND, FBSD_FPE_FLTRES)\n\t(FBSD_FPE_FLTINV, FBSD_FPE_FLTSUB, FBSD_TRAP_BRKPT)\n\t(FBSD_TRAP_TRACE, FBSD_TRAP_DTRACE, FBSD_TRAP_CAP)\n\t(FBSD_CLD_EXITED, FBSD_CLD_KILLED, FBSD_CLD_DUMPED)\n\t(FBSD_CLD_TRAPPED, FBSD_CLD_STOPPED, FBSD_CLD_CONTINUED)\n\t(FBSD_POLL_IN, FBSD_POLL_OUT, FBSD_POLL_MSG, FBSD_POLL_ERR)\n\t(FBSD_POLL_PRI, FBSD_POLL_HUP, fbsd_signal_cause)\n\t(fbsd_report_signal_info): New.\n\t(fbsd_init_abi): Use fbsd_report_signal_info as gdbarch\n\treport_signal_info method.",
    "tree": {
      "sha": "3d70a57317deee72f0fcd3d36aaa27bb02106c86",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3d70a57317deee72f0fcd3d36aaa27bb02106c86"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/83810881192e950dce39be4d55e21d52ba68fb60",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/83810881192e950dce39be4d55e21d52ba68fb60",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/83810881192e950dce39be4d55e21d52ba68fb60",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/83810881192e950dce39be4d55e21d52ba68fb60/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4c958d7911cad25699b345f82d74411918588399",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c958d7911cad25699b345f82d74411918588399",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4c958d7911cad25699b345f82d74411918588399"
    }
  ],
  "stats": {
    "total": 293,
    "additions": 293,
    "deletions": 0
  },
  "files": [
    {
      "sha": "e646fd53e6bd5817a77e924b2a160ee4a2b72a86",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83810881192e950dce39be4d55e21d52ba68fb60/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83810881192e950dce39be4d55e21d52ba68fb60/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=83810881192e950dce39be4d55e21d52ba68fb60",
      "patch": "@@ -1,3 +1,24 @@\n+2021-06-03  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* fbsd-tdep.c (FBSD_SI_USER, FBSD_SI_QUEUE, FBSD_SI_TIMER)\n+\t(FBSD_SI_ASYNCIO, FBSD_SI_MESGQ, FBSD_SI_KERNEL, FBSD_SI_LWP)\n+\t(FBSD_ILL_ILLOPC, FBSD_ILL_ILLOPN, FBSD_ILL_ILLADR)\n+\t(FBSD_ILL_ILLTRP, FBSD_ILL_PRVOPC, FBSD_ILL_PRVREG)\n+\t(FBSD_ILL_COPROC, FBSD_ILL_BADSTK, FBSD_BUS_ADRALN)\n+\t(FBSD_BUS_ADRERR, FBSD_BUS_OBJERR, FBSD_BUS_OOMERR)\n+\t(FBSD_SEGV_MAPERR, FBSD_SEGV_ACCERR, FBSD_SEGV_PKUERR)\n+\t(FBSD_FPE_INTOVF, FBSD_FPE_INTDIV, FBSD_FPE_FLTDIV)\n+\t(FBSD_FPE_FLTOVF, FBSD_FPE_FLTUND, FBSD_FPE_FLTRES)\n+\t(FBSD_FPE_FLTINV, FBSD_FPE_FLTSUB, FBSD_TRAP_BRKPT)\n+\t(FBSD_TRAP_TRACE, FBSD_TRAP_DTRACE, FBSD_TRAP_CAP)\n+\t(FBSD_CLD_EXITED, FBSD_CLD_KILLED, FBSD_CLD_DUMPED)\n+\t(FBSD_CLD_TRAPPED, FBSD_CLD_STOPPED, FBSD_CLD_CONTINUED)\n+\t(FBSD_POLL_IN, FBSD_POLL_OUT, FBSD_POLL_MSG, FBSD_POLL_ERR)\n+\t(FBSD_POLL_PRI, FBSD_POLL_HUP, fbsd_signal_cause)\n+\t(fbsd_report_signal_info): New.\n+\t(fbsd_init_abi): Use fbsd_report_signal_info as gdbarch\n+\treport_signal_info method.\n+\n 2021-06-03  Magne Hov  <mhov@undo.io>\n \n \t* MAINTAINERS (Write After Approval): Add Magne Hov."
    },
    {
      "sha": "5cb6fa31500c4a533e16d76579fa15ca63597513",
      "filename": "gdb/fbsd-tdep.c",
      "status": "modified",
      "additions": 272,
      "deletions": 0,
      "changes": 272,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/83810881192e950dce39be4d55e21d52ba68fb60/gdb/fbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/83810881192e950dce39be4d55e21d52ba68fb60/gdb/fbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/fbsd-tdep.c?ref=83810881192e950dce39be4d55e21d52ba68fb60",
      "patch": "@@ -75,6 +75,63 @@ enum\n     FREEBSD_SIGRTMAX = 126,\n   };\n \n+/* Constants for values of si_code as defined in FreeBSD's\n+   <sys/signal.h>.  */\n+\n+#define\tFBSD_SI_USER\t\t0x10001\n+#define\tFBSD_SI_QUEUE\t\t0x10002\n+#define\tFBSD_SI_TIMER\t\t0x10003\n+#define\tFBSD_SI_ASYNCIO\t\t0x10004\n+#define\tFBSD_SI_MESGQ\t\t0x10005\n+#define\tFBSD_SI_KERNEL\t\t0x10006\n+#define\tFBSD_SI_LWP\t\t0x10007\n+\n+#define\tFBSD_ILL_ILLOPC\t\t1\n+#define\tFBSD_ILL_ILLOPN\t\t2\n+#define\tFBSD_ILL_ILLADR\t\t3\n+#define\tFBSD_ILL_ILLTRP\t\t4\n+#define\tFBSD_ILL_PRVOPC\t\t5\n+#define\tFBSD_ILL_PRVREG\t\t6\n+#define\tFBSD_ILL_COPROC\t\t7\n+#define\tFBSD_ILL_BADSTK\t\t8\n+\n+#define\tFBSD_BUS_ADRALN\t\t1\n+#define\tFBSD_BUS_ADRERR\t\t2\n+#define\tFBSD_BUS_OBJERR\t\t3\n+#define\tFBSD_BUS_OOMERR\t\t100\n+\n+#define\tFBSD_SEGV_MAPERR\t1\n+#define\tFBSD_SEGV_ACCERR\t2\n+#define\tFBSD_SEGV_PKUERR\t100\n+\n+#define\tFBSD_FPE_INTOVF\t\t1\n+#define\tFBSD_FPE_INTDIV\t\t2\n+#define\tFBSD_FPE_FLTDIV\t\t3\n+#define\tFBSD_FPE_FLTOVF\t\t4\n+#define\tFBSD_FPE_FLTUND\t\t5\n+#define\tFBSD_FPE_FLTRES\t\t6\n+#define\tFBSD_FPE_FLTINV\t\t7\n+#define\tFBSD_FPE_FLTSUB\t\t8\n+\n+#define\tFBSD_TRAP_BRKPT\t\t1\n+#define\tFBSD_TRAP_TRACE\t\t2\n+#define\tFBSD_TRAP_DTRACE\t3\n+#define\tFBSD_TRAP_CAP\t\t4\n+\n+#define\tFBSD_CLD_EXITED\t\t1\n+#define\tFBSD_CLD_KILLED\t\t2\n+#define\tFBSD_CLD_DUMPED\t\t3\n+#define\tFBSD_CLD_TRAPPED\t4\n+#define\tFBSD_CLD_STOPPED\t5\n+#define\tFBSD_CLD_CONTINUED\t6\n+\n+#define\tFBSD_POLL_IN\t\t1\n+#define\tFBSD_POLL_OUT\t\t2\n+#define\tFBSD_POLL_MSG\t\t3\n+#define\tFBSD_POLL_ERR\t\t4\n+#define\tFBSD_POLL_PRI\t\t5\n+#define\tFBSD_POLL_HUP\t\t6\n+\n /* FreeBSD kernels 12.0 and later include a copy of the\n    'ptrace_lwpinfo' structure returned by the PT_LWPINFO ptrace\n    operation in an ELF core note (NT_FREEBSD_PTLWPINFO) for each LWP.\n@@ -1988,6 +2045,220 @@ fbsd_skip_solib_resolver (struct gdbarch *gdbarch, CORE_ADDR pc)\n   return 0;\n }\n \n+/* Return description of signal code or nullptr.  */\n+\n+static const char *\n+fbsd_signal_cause (enum gdb_signal siggnal, int code)\n+{\n+  /* Signal-independent causes.  */\n+  switch (code)\n+    {\n+    case FBSD_SI_USER:\n+      return _(\"Sent by kill()\");\n+    case FBSD_SI_QUEUE:\n+      return _(\"Sent by sigqueue()\");\n+    case FBSD_SI_TIMER:\n+      return _(\"Timer expired\");\n+    case FBSD_SI_ASYNCIO:\n+      return _(\"Asynchronous I/O request completed\");\n+    case FBSD_SI_MESGQ:\n+      return _(\"Message arrived on empty message queue\");\n+    case FBSD_SI_KERNEL:\n+      return _(\"Sent by kernel\");\n+    case FBSD_SI_LWP:\n+      return _(\"Sent by thr_kill()\");\n+    }\n+\n+  switch (siggnal)\n+    {\n+    case GDB_SIGNAL_ILL:\n+      switch (code)\n+\t{\n+\tcase FBSD_ILL_ILLOPC:\n+\t  return _(\"Illegal opcode\");\n+\tcase FBSD_ILL_ILLOPN:\n+\t  return _(\"Illegal operand\");\n+\tcase FBSD_ILL_ILLADR:\n+\t  return _(\"Illegal addressing mode\");\n+\tcase FBSD_ILL_ILLTRP:\n+\t  return _(\"Illegal trap\");\n+\tcase FBSD_ILL_PRVOPC:\n+\t  return _(\"Privileged opcode\");\n+\tcase FBSD_ILL_PRVREG:\n+\t  return _(\"Privileged register\");\n+\tcase FBSD_ILL_COPROC:\n+\t  return _(\"Coprocessor error\");\n+\tcase FBSD_ILL_BADSTK:\n+\t  return _(\"Internal stack error\");\n+\t}\n+      break;\n+    case GDB_SIGNAL_BUS:\n+      switch (code)\n+\t{\n+\tcase FBSD_BUS_ADRALN:\n+\t  return _(\"Invalid address alignment\");\n+\tcase FBSD_BUS_ADRERR:\n+\t  return _(\"Address not present\");\n+\tcase FBSD_BUS_OBJERR:\n+\t  return _(\"Object-specific hardware error\");\n+\tcase FBSD_BUS_OOMERR:\n+\t  return _(\"Out of memory\");\n+\t}\n+      break;\n+    case GDB_SIGNAL_SEGV:\n+      switch (code)\n+\t{\n+\tcase FBSD_SEGV_MAPERR:\n+\t  return _(\"Address not mapped to object\");\n+\tcase FBSD_SEGV_ACCERR:\n+\t  return _(\"Invalid permissions for mapped object\");\n+\tcase FBSD_SEGV_PKUERR:\n+\t  return _(\"PKU violation\");\n+\t}\n+      break;\n+    case GDB_SIGNAL_FPE:\n+      switch (code)\n+\t{\n+\tcase FBSD_FPE_INTOVF:\n+\t  return _(\"Integer overflow\");\n+\tcase FBSD_FPE_INTDIV:\n+\t  return _(\"Integer divide by zero\");\n+\tcase FBSD_FPE_FLTDIV:\n+\t  return _(\"Floating point divide by zero\");\n+\tcase FBSD_FPE_FLTOVF:\n+\t  return _(\"Floating point overflow\");\n+\tcase FBSD_FPE_FLTUND:\n+\t  return _(\"Floating point underflow\");\n+\tcase FBSD_FPE_FLTRES:\n+\t  return _(\"Floating point inexact result\");\n+\tcase FBSD_FPE_FLTINV:\n+\t  return _(\"Invalid floating point operation\");\n+\tcase FBSD_FPE_FLTSUB:\n+\t  return _(\"Subscript out of range\");\n+\t}\n+      break;\n+    case GDB_SIGNAL_TRAP:\n+      switch (code)\n+\t{\n+\tcase FBSD_TRAP_BRKPT:\n+\t  return _(\"Breakpoint\");\n+\tcase FBSD_TRAP_TRACE:\n+\t  return _(\"Trace trap\");\n+\tcase FBSD_TRAP_DTRACE:\n+\t  return _(\"DTrace-induced trap\");\n+\tcase FBSD_TRAP_CAP:\n+\t  return _(\"Capability violation\");\n+\t}\n+      break;\n+    case GDB_SIGNAL_CHLD:\n+      switch (code)\n+\t{\n+\tcase FBSD_CLD_EXITED:\n+\t  return _(\"Child has exited\");\n+\tcase FBSD_CLD_KILLED:\n+\t  return _(\"Child has terminated abnormally\");\n+\tcase FBSD_CLD_DUMPED:\n+\t  return _(\"Child has dumped core\");\n+\tcase FBSD_CLD_TRAPPED:\n+\t  return _(\"Traced child has trapped\");\n+\tcase FBSD_CLD_STOPPED:\n+\t  return _(\"Child has stopped\");\n+\tcase FBSD_CLD_CONTINUED:\n+\t  return _(\"Stopped child has continued\");\n+\t}\n+      break;\n+    case GDB_SIGNAL_POLL:\n+      switch (code)\n+\t{\n+\tcase FBSD_POLL_IN:\n+\t  return _(\"Data input available\");\n+\tcase FBSD_POLL_OUT:\n+\t  return _(\"Output buffers available\");\n+\tcase FBSD_POLL_MSG:\n+\t  return _(\"Input message available\");\n+\tcase FBSD_POLL_ERR:\n+\t  return _(\"I/O error\");\n+\tcase FBSD_POLL_PRI:\n+\t  return _(\"High priority input available\");\n+\tcase FBSD_POLL_HUP:\n+\t  return _(\"Device disconnected\");\n+\t}\n+      break;\n+    }\n+\n+  return nullptr;\n+}\n+\n+/* Report additional details for a signal stop.  */\n+\n+static void\n+fbsd_report_signal_info (struct gdbarch *gdbarch, struct ui_out *uiout,\n+\t\t\t enum gdb_signal siggnal)\n+{\n+  LONGEST code, mqd, pid, status, timerid, uid;\n+\n+  try\n+    {\n+      code = parse_and_eval_long (\"$_siginfo.si_code\");\n+      pid = parse_and_eval_long (\"$_siginfo.si_pid\");\n+      uid = parse_and_eval_long (\"$_siginfo.si_uid\");\n+      status = parse_and_eval_long (\"$_siginfo.si_status\");\n+      timerid = parse_and_eval_long (\"$_siginfo._reason._timer.si_timerid\");\n+      mqd = parse_and_eval_long (\"$_siginfo._reason._mesgq.si_mqd\");\n+    }\n+  catch (const gdb_exception_error &e)\n+    {\n+      return;\n+    }\n+\n+  const char *meaning = fbsd_signal_cause (siggnal, code);\n+  if (meaning == nullptr)\n+    return;\n+\n+  uiout->text (\".\\n\");\n+  uiout->field_string (\"sigcode-meaning\", meaning);\n+\n+  switch (code)\n+    {\n+    case FBSD_SI_USER:\n+    case FBSD_SI_QUEUE:\n+    case FBSD_SI_LWP:\n+      uiout->text (\" from pid \");\n+      uiout->field_string (\"sending-pid\", plongest (pid));\n+      uiout->text (\" and user \");\n+      uiout->field_string (\"sending-uid\", plongest (uid));\n+      return;\n+    case FBSD_SI_TIMER:\n+      uiout->text (\": timerid \");\n+      uiout->field_string (\"timerid\", plongest (timerid));\n+      return;\n+    case FBSD_SI_MESGQ:\n+      uiout->text (\": message queue \");\n+      uiout->field_string (\"message-queue\", plongest (mqd));\n+      return;\n+    case FBSD_SI_ASYNCIO:\n+      return;\n+    }\n+\n+  if (siggnal == GDB_SIGNAL_CHLD)\n+    {\n+      uiout->text (\": pid \");\n+      uiout->field_string (\"child-pid\", plongest (pid));\n+      uiout->text (\", uid \");\n+      uiout->field_string (\"child-uid\", plongest (uid));\n+      if (code == FBSD_CLD_EXITED)\n+\t{\n+\t  uiout->text (\", exit status \");\n+\t  uiout->field_string (\"exit-status\", plongest (status));\n+\t}\n+      else\n+\t{\n+\t  uiout->text (\", signal \");\n+\t  uiout->field_string (\"signal\", plongest (status));\n+\t}\n+    }\n+}\n+\n /* To be called from GDB_OSABI_FREEBSD handlers. */\n \n void\n@@ -2002,6 +2273,7 @@ fbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n   set_gdbarch_get_siginfo_type (gdbarch, fbsd_get_siginfo_type);\n   set_gdbarch_gdb_signal_from_target (gdbarch, fbsd_gdb_signal_from_target);\n   set_gdbarch_gdb_signal_to_target (gdbarch, fbsd_gdb_signal_to_target);\n+  set_gdbarch_report_signal_info (gdbarch, fbsd_report_signal_info);\n   set_gdbarch_skip_solib_resolver (gdbarch, fbsd_skip_solib_resolver);\n \n   /* `catch syscall' */"
    }
  ]
}