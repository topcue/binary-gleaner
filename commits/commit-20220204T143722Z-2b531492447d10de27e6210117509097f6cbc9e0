{
  "sha": "2b531492447d10de27e6210117509097f6cbc9e0",
  "node_id": "C_kwDOANOeidoAKDJiNTMxNDkyNDQ3ZDEwZGUyN2U2MjEwMTE3NTA5MDk3ZjZjYmM5ZTA",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-02-03T18:45:59Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-02-04T14:37:22Z"
    },
    "message": "Remove host_hex_value\n\nI noticed that host_hex_value is redundant, because gdbsupport already\nhas fromhex.  This patch removes the former in favor of the latter.\n\nRegression tested on x86-64 Fedora 34.",
    "tree": {
      "sha": "5e08243a39a075762c852e656563a6c3faf62b38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e08243a39a075762c852e656563a6c3faf62b38"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2b531492447d10de27e6210117509097f6cbc9e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b531492447d10de27e6210117509097f6cbc9e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2b531492447d10de27e6210117509097f6cbc9e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2b531492447d10de27e6210117509097f6cbc9e0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fd3c53675c01472caaa4eb976781b9d6d2d3c53d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd3c53675c01472caaa4eb976781b9d6d2d3c53d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fd3c53675c01472caaa4eb976781b9d6d2d3c53d"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 8,
    "deletions": 27
  },
  "files": [
    {
      "sha": "1f7cac7bef14d61876e6adf873fbd092a179ef8b",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b531492447d10de27e6210117509097f6cbc9e0/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b531492447d10de27e6210117509097f6cbc9e0/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=2b531492447d10de27e6210117509097f6cbc9e0",
      "patch": "@@ -410,7 +410,7 @@ convert_ucn (const char *p, const char *limit, const char *dest_charset,\n   int i;\n \n   for (i = 0; i < length && p < limit && ISXDIGIT (*p); ++i, ++p)\n-    result = (result << 4) + host_hex_value (*p);\n+    result = (result << 4) + fromhex (*p);\n \n   for (i = 3; i >= 0; --i)\n     {\n@@ -454,7 +454,7 @@ convert_octal (struct type *type, const char *p,\n        i < 3 && p < limit && ISDIGIT (*p) && *p != '8' && *p != '9';\n        ++i)\n     {\n-      value = 8 * value + host_hex_value (*p);\n+      value = 8 * value + fromhex (*p);\n       ++p;\n     }\n \n@@ -476,7 +476,7 @@ convert_hex (struct type *type, const char *p,\n \n   while (p < limit && ISXDIGIT (*p))\n     {\n-      value = 16 * value + host_hex_value (*p);\n+      value = 16 * value + fromhex (*p);\n       ++p;\n     }\n "
    },
    {
      "sha": "84c60a4e5d6dbd41b1aabead7a2f4cd1b0c5cc68",
      "filename": "gdb/charset.c",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b531492447d10de27e6210117509097f6cbc9e0/gdb/charset.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b531492447d10de27e6210117509097f6cbc9e0/gdb/charset.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/charset.c?ref=2b531492447d10de27e6210117509097f6cbc9e0",
      "patch": "@@ -463,20 +463,6 @@ host_letter_to_control_character (char c)\n   return c & 0237;\n }\n \n-/* Convert a host character, C, to its hex value.  C must already have\n-   been validated using isxdigit.  */\n-\n-int\n-host_hex_value (char c)\n-{\n-  if (isdigit (c))\n-    return c - '0';\n-  if (c >= 'a' && c <= 'f')\n-    return 10 + c - 'a';\n-  gdb_assert (c >= 'A' && c <= 'F');\n-  return 10 + c - 'A';\n-}\n-\n \f\n /* Public character management functions.  */\n "
    },
    {
      "sha": "7a7041f10f270a82587bf899a8a6b81d5cf006a0",
      "filename": "gdb/charset.h",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b531492447d10de27e6210117509097f6cbc9e0/gdb/charset.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b531492447d10de27e6210117509097f6cbc9e0/gdb/charset.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/charset.h?ref=2b531492447d10de27e6210117509097f6cbc9e0",
      "patch": "@@ -159,9 +159,4 @@ class wchar_iterator\n    character.  */\n char host_letter_to_control_character (char c);\n \n-/* Convert a hex digit character to its numeric value.  E.g., 'f' is\n-   converted to 15.  This function assumes that C is a valid hex\n-   digit.  Both upper- and lower-case letters are recognized.  */\n-int host_hex_value (char c);\n-\n #endif /* CHARSET_H */"
    },
    {
      "sha": "dfa7b4627144285f930939885080ee90dbdb8036",
      "filename": "gdb/mi/mi-parse.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b531492447d10de27e6210117509097f6cbc9e0/gdb/mi/mi-parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b531492447d10de27e6210117509097f6cbc9e0/gdb/mi/mi-parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-parse.c?ref=2b531492447d10de27e6210117509097f6cbc9e0",
      "patch": "@@ -57,7 +57,7 @@ mi_parse_escape (const char **string_ptr)\n       case '6':\n       case '7':\n \t{\n-\t  int i = host_hex_value (c);\n+\t  int i = fromhex (c);\n \t  int count = 0;\n \n \t  while (++count < 3)\n@@ -67,7 +67,7 @@ mi_parse_escape (const char **string_ptr)\n \t\t{\n \t\t  (*string_ptr)++;\n \t\t  i *= 8;\n-\t\t  i += host_hex_value (c);\n+\t\t  i += fromhex (c);\n \t\t}\n \t      else\n \t\t{"
    },
    {
      "sha": "8c568799843f97301d84c407dd4a81720cd988cc",
      "filename": "gdb/python/py-objfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b531492447d10de27e6210117509097f6cbc9e0/gdb/python/py-objfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b531492447d10de27e6210117509097f6cbc9e0/gdb/python/py-objfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-objfile.c?ref=2b531492447d10de27e6210117509097f6cbc9e0",
      "patch": "@@ -550,7 +550,7 @@ objfpy_build_id_matches (const struct bfd_build_id *build_id,\n   for (i = 0; i < build_id->size; ++i)\n     {\n       char c1 = string[i * 2], c2 = string[i * 2 + 1];\n-      int byte = (host_hex_value (c1) << 4) | host_hex_value (c2);\n+      int byte = (fromhex (c1) << 4) | fromhex (c2);\n \n       if (byte != build_id->data[i])\n \treturn 0;"
    },
    {
      "sha": "dcb42138d3978879cf25bc32ba6b528c7282c14f",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2b531492447d10de27e6210117509097f6cbc9e0/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2b531492447d10de27e6210117509097f6cbc9e0/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=2b531492447d10de27e6210117509097f6cbc9e0",
      "patch": "@@ -1078,7 +1078,7 @@ parse_escape (struct gdbarch *gdbarch, const char **string_ptr)\n       case '6':\n       case '7':\n \t{\n-\t  int i = host_hex_value (c);\n+\t  int i = fromhex (c);\n \t  int count = 0;\n \t  while (++count < 3)\n \t    {\n@@ -1087,7 +1087,7 @@ parse_escape (struct gdbarch *gdbarch, const char **string_ptr)\n \t\t{\n \t\t  (*string_ptr)++;\n \t\t  i *= 8;\n-\t\t  i += host_hex_value (c);\n+\t\t  i += fromhex (c);\n \t\t}\n \t      else\n \t\t{"
    }
  ]
}