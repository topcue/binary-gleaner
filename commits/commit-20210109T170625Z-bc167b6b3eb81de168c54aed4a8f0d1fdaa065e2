{
  "sha": "bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmMxNjdiNmIzZWI4MWRlMTY4YzU0YWVkNGE4ZjBkMWZkYWEwNjVlMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-01-09T17:06:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-01-09T17:06:25Z"
    },
    "message": "Remove a use of print_expression\n\nThe tracepoint code uses print_expression to reconstruct an expression\nstring.  However, the original expression is already available -- it\nwas just parsed a bit earlier in the same function.  This patch\nchanges this code to simply save the already-parsed expression, rather\nthan attempt to reconstruct it.\n\ngdb/ChangeLog\n2021-01-09  Tom Tromey  <tom@tromey.com>\n\n\t* tracepoint.h (class collection_list) <append_exp>: Take a\n\tstd::string.\n\t* tracepoint.c (collection_list::append_exp): Take a std::string.\n\t(encode_actions_1): Update.",
    "tree": {
      "sha": "591a934ffe792f7efe7b3b28db7e838257bbda36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/591a934ffe792f7efe7b3b28db7e838257bbda36"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "66beed0227b1a9c29bcf22c47bd2803b5d595509",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66beed0227b1a9c29bcf22c47bd2803b5d595509",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/66beed0227b1a9c29bcf22c47bd2803b5d595509"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 16,
    "deletions": 10
  },
  "files": [
    {
      "sha": "2751dfe64a09db61b6e85ee8cc4ebfc702682fe1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-09  Tom Tromey  <tom@tromey.com>\n+\n+\t* tracepoint.h (class collection_list) <append_exp>: Take a\n+\tstd::string.\n+\t* tracepoint.c (collection_list::append_exp): Take a std::string.\n+\t(encode_actions_1): Update.\n+\n 2021-01-08  Tom Tromey  <tromey@adacore.com>\n \n \t* parse.c (parse_expression): Add void_context_p parameter.  Use"
    },
    {
      "sha": "17d70a6a8d420f038f5169d5e591d77fdf4878c3",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2",
      "patch": "@@ -1266,16 +1266,12 @@ collection_list::stringify ()\n   return str_list;\n }\n \n-/* Add the printed expression EXP to *LIST.  */\n+/* Add the expression STR to M_COMPUTED.  */\n \n void\n-collection_list::append_exp (struct expression *exp)\n+collection_list::append_exp (std::string &&str)\n {\n-  string_file tmp_stream;\n-\n-  print_expression (exp, &tmp_stream);\n-\n-  m_computed.push_back (std::move (tmp_stream.string ()));\n+  m_computed.push_back (std::move (str));\n }\n \n void\n@@ -1379,6 +1375,7 @@ encode_actions_1 (struct command_line *action,\n \t\t{\n \t\t  unsigned long addr;\n \n+\t\t  const char *exp_start = action_exp;\n \t\t  expression_up exp = parse_exp_1 (&action_exp, tloc->address,\n \t\t\t\t\t\t   block_for_pc (tloc->address),\n \t\t\t\t\t\t   1);\n@@ -1412,7 +1409,8 @@ encode_actions_1 (struct command_line *action,\n \t\t\t\t\t     memrange_absolute, addr,\n \t\t\t\t\t     TYPE_LENGTH (exp->elts[1].type),\n \t\t\t\t\t     tloc->address);\n-\t\t      collect->append_exp (exp.get ());\n+\t\t      collect->append_exp (std::string (exp_start,\n+\t\t\t\t\t\t\taction_exp));\n \t\t      break;\n \n \t\t    case OP_VAR_VALUE:\n@@ -1441,7 +1439,8 @@ encode_actions_1 (struct command_line *action,\n \t\t      collect->add_ax_registers (aexpr.get ());\n \n \t\t      collect->add_aexpr (std::move (aexpr));\n-\t\t      collect->append_exp (exp.get ());\n+\t\t      collect->append_exp (std::string (exp_start,\n+\t\t\t\t\t\t\taction_exp));\n \t\t      break;\n \t\t    }\t\t/* switch */\n \t\t}\t\t/* do */"
    },
    {
      "sha": "b32dd61fdfc874bf5bebbe6af9971efb49cc9e02",
      "filename": "gdb/tracepoint.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2/gdb/tracepoint.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2/gdb/tracepoint.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.h?ref=bc167b6b3eb81de168c54aed4a8f0d1fdaa065e2",
      "patch": "@@ -257,7 +257,7 @@ class collection_list\n \n   void add_wholly_collected (const char *print_name);\n \n-  void append_exp (struct expression *exp);\n+  void append_exp (std::string &&exp);\n \n   /* Add AEXPR to the list, taking ownership.  */\n   void add_aexpr (agent_expr_up aexpr);"
    }
  ]
}