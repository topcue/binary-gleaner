{
  "sha": "8926e54e3af88740e3872099115e0460ed573d21",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODkyNmU1NGUzYWY4ODc0MGUzODcyMDk5MTE1ZTA0NjBlZDU3M2QyMQ==",
  "commit": {
    "author": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-10-28T13:58:17Z"
    },
    "committer": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2020-10-28T13:58:17Z"
    },
    "message": "aarch64: Add basic support for armv8.7-a architecture\n\nThis patch adds support for AArch64 -march=armv8.7-a command line option\nin GAS.\n\nPlease note that this change ONLY extends -march= command line interface\nwith a new \"armv8.7-a\" option. Architectural changes like new instructions\nwill be added in following patches.\n\ngas/ChangeLog:\n\n2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* NEWS: Docs update.\n\t* config/tc-aarch64.c (armv8.7-a): New arch.\n\t* doc/c-aarch64.texi (-march=armv8.7-a): Update docs.\n\ninclude/ChangeLog:\n\n2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* opcode/aarch64.h (AARCH64_FEATURE_V8_7): New feature bitmask.\n\t(AARCH64_ARCH_V8_7): New arch feature set.\n\nopcodes/ChangeLog:\n\n2020-10-16  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n\n\t* aarch64-tbl.h (ARMV8_7): New macro.",
    "tree": {
      "sha": "491e5f2a0a71183c4e18b33b6c8481883448cfe0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/491e5f2a0a71183c4e18b33b6c8481883448cfe0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8926e54e3af88740e3872099115e0460ed573d21",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8926e54e3af88740e3872099115e0460ed573d21",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8926e54e3af88740e3872099115e0460ed573d21",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8926e54e3af88740e3872099115e0460ed573d21/comments",
  "author": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2aec1123f9ec86cd190767c9852cb77ed2c017ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2aec1123f9ec86cd190767c9852cb77ed2c017ec",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2aec1123f9ec86cd190767c9852cb77ed2c017ec"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 9,
    "deletions": 2
  },
  "files": [
    {
      "sha": "07fe535900cf7cd9a7dcda2e29d9099a99bb7db2",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8926e54e3af88740e3872099115e0460ed573d21/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8926e54e3af88740e3872099115e0460ed573d21/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=8926e54e3af88740e3872099115e0460ed573d21",
      "patch": "@@ -19,7 +19,7 @@\n   Extension) and BRBE (Branch Record Buffer Extension) system registers for\n   AArch64.\n \n-* Add support for Armv8-R AArch64.\n+* Add support for Armv8-R and Armv8.7-A AArch64.\n \n * Add support for Intel TDX instructions.\n "
    },
    {
      "sha": "d17d118cc6915de625cce3f797caba92df6dbe9a",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8926e54e3af88740e3872099115e0460ed573d21/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8926e54e3af88740e3872099115e0460ed573d21/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=8926e54e3af88740e3872099115e0460ed573d21",
      "patch": "@@ -9033,6 +9033,7 @@ static const struct aarch64_arch_option_table aarch64_archs[] = {\n   {\"armv8.4-a\", AARCH64_ARCH_V8_4},\n   {\"armv8.5-a\", AARCH64_ARCH_V8_5},\n   {\"armv8.6-a\", AARCH64_ARCH_V8_6},\n+  {\"armv8.7-a\", AARCH64_ARCH_V8_7},\n   {\"armv8-r\",\tAARCH64_ARCH_V8_R},\n   {NULL, AARCH64_ARCH_NONE}\n };"
    },
    {
      "sha": "526e8089b76d51efc4280f949e50d736f615ce84",
      "filename": "gas/doc/c-aarch64.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8926e54e3af88740e3872099115e0460ed573d21/gas/doc/c-aarch64.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8926e54e3af88740e3872099115e0460ed573d21/gas/doc/c-aarch64.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-aarch64.texi?ref=8926e54e3af88740e3872099115e0460ed573d21",
      "patch": "@@ -106,7 +106,7 @@ issue an error message if an attempt is made to assemble an\n instruction which will not execute on the target architecture.  The\n following architecture names are recognized: @code{armv8-a},\n @code{armv8.1-a}, @code{armv8.2-a}, @code{armv8.3-a}, @code{armv8.4-a}\n-@code{armv8.5-a}, @code{armv8.6-a}, and @code{armv8-r}.\n+@code{armv8.5-a}, @code{armv8.6-a}, @code{armv8.7-a}, and @code{armv8-r}.\n \n If both @option{-mcpu} and @option{-march} are specified, the\n assembler will use the setting for @option{-mcpu}.  If neither are"
    },
    {
      "sha": "a5f9e71716170976d0b935d0115915e8d8c4ce4a",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8926e54e3af88740e3872099115e0460ed573d21/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8926e54e3af88740e3872099115e0460ed573d21/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=8926e54e3af88740e3872099115e0460ed573d21",
      "patch": "@@ -50,6 +50,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_SVE2_SHA3    (1ULL << 10)\n #define AARCH64_FEATURE_V8_4\t     (1ULL << 11) /* ARMv8.4 processors.  */\n #define AARCH64_FEATURE_V8_R\t     (1ULL << 12) /* Armv8-R processors.  */\n+#define AARCH64_FEATURE_V8_7\t     (1ULL << 13) /* Armv8.7 processors.  */\n #define AARCH64_FEATURE_FP\t     (1ULL << 17) /* FP instructions.  */\n #define AARCH64_FEATURE_SIMD\t     (1ULL << 18) /* SIMD instructions.  */\n #define AARCH64_FEATURE_CRC\t     (1ULL << 19) /* CRC instructions.  */\n@@ -128,6 +129,8 @@ typedef uint32_t aarch64_insn;\n \t\t\t\t\t\t AARCH64_FEATURE_V8_6   \\\n \t\t\t\t\t\t | AARCH64_FEATURE_BFLOAT16 \\\n \t\t\t\t\t\t | AARCH64_FEATURE_I8MM)\n+#define AARCH64_ARCH_V8_7\tAARCH64_FEATURE (AARCH64_ARCH_V8_6,\t\\\n+\t\t\t\t\t\t AARCH64_FEATURE_V8_7)\n #define AARCH64_ARCH_V8_R\t(AARCH64_FEATURE (AARCH64_ARCH_V8_4,\t\\\n \t\t\t\t\t\t AARCH64_FEATURE_V8_R)\t\\\n \t\t\t      & ~(AARCH64_FEATURE_V8_A | AARCH64_FEATURE_LOR))"
    },
    {
      "sha": "16d008d7521650c94de258f8aaa939d56cc93261",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8926e54e3af88740e3872099115e0460ed573d21/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8926e54e3af88740e3872099115e0460ed573d21/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=8926e54e3af88740e3872099115e0460ed573d21",
      "patch": "@@ -2395,6 +2395,8 @@ static const aarch64_feature_set aarch64_feature_sve2bitperm =\n   AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SVE2_BITPERM, 0);\n static const aarch64_feature_set aarch64_feature_v8_6 =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_6, 0);\n+static const aarch64_feature_set aarch64_feature_v8_7 =\n+  AARCH64_FEATURE (AARCH64_FEATURE_V8_7, 0);\n static const aarch64_feature_set aarch64_feature_i8mm =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_2 | AARCH64_FEATURE_I8MM, 0);\n static const aarch64_feature_set aarch64_feature_i8mm_sve =\n@@ -2453,6 +2455,7 @@ static const aarch64_feature_set aarch64_feature_v8_r =\n #define F64MM_SVE     &aarch64_feature_f64mm_sve\n #define I8MM      &aarch64_feature_i8mm\n #define ARMV8_R\t  &aarch64_feature_v8_r\n+#define ARMV8_7\t  &aarch64_feature_v8_7\n \n #define CORE_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, OP, CORE, OPS, QUALS, FLAGS, 0, 0, NULL }"
    }
  ]
}