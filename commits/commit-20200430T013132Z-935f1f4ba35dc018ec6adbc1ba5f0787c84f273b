{
  "sha": "935f1f4ba35dc018ec6adbc1ba5f0787c84f273b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTM1ZjFmNGJhMzVkYzAxOGVjNmFkYmMxYmE1ZjA3ODdjODRmMjczYg==",
  "commit": {
    "author": {
      "name": "Max Filippov",
      "email": "jcmvbkbc@gmail.com",
      "date": "2020-04-28T11:15:05Z"
    },
    "committer": {
      "name": "Max Filippov",
      "email": "jcmvbkbc@gmail.com",
      "date": "2020-04-30T01:31:32Z"
    },
    "message": "xtensa: gas: support optional immediate simcall parameter\n\nStarting with RH.0 release Xtensa ISA adds immediate parameter to\nsimcall opcode. For assembly source compatibility treat \"simcall\"\ninstruction without parameter as \"simcall 0\" when parameter is required.\n\n2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>\ngas/\n\t* config/tc-xtensa.c (XTENSA_MARCH_EARLIEST): Define macro as 0\n\tif it's not defined.\n\t(microarch_earliest): New static variable.\n\t(xg_translate_idioms): Translate \"simcall\" to \"simcall 0\" when\n\tsimcall opcode has mandatory parameter.\n\t(xg_init_global_config): Initialize microarch_earliest.",
    "tree": {
      "sha": "22af1878042971f615dbaa26714db5f1fa108c9c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/22af1878042971f615dbaa26714db5f1fa108c9c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b/comments",
  "author": {
    "login": "jcmvbkbc",
    "id": 166731,
    "node_id": "MDQ6VXNlcjE2NjczMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jcmvbkbc",
    "html_url": "https://github.com/jcmvbkbc",
    "followers_url": "https://api.github.com/users/jcmvbkbc/followers",
    "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}",
    "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions",
    "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs",
    "repos_url": "https://api.github.com/users/jcmvbkbc/repos",
    "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jcmvbkbc",
    "id": 166731,
    "node_id": "MDQ6VXNlcjE2NjczMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jcmvbkbc",
    "html_url": "https://github.com/jcmvbkbc",
    "followers_url": "https://api.github.com/users/jcmvbkbc/followers",
    "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}",
    "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions",
    "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs",
    "repos_url": "https://api.github.com/users/jcmvbkbc/repos",
    "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ffc2844e9672ce4b2d9d2a4f6f676a46f64f4d09",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ffc2844e9672ce4b2d9d2a4f6f676a46f64f4d09",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ffc2844e9672ce4b2d9d2a4f6f676a46f64f4d09"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 29,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f47deba09b6317c8c979d99afd0cb98b2fcc3172",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=935f1f4ba35dc018ec6adbc1ba5f0787c84f273b",
      "patch": "@@ -1,3 +1,12 @@\n+2020-04-29  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/tc-xtensa.c (XTENSA_MARCH_EARLIEST): Define macro as 0\n+\tif it's not defined.\n+\t(microarch_earliest): New static variable.\n+\t(xg_translate_idioms): Translate \"simcall\" to \"simcall 0\" when\n+\tsimcall opcode has mandatory parameter.\n+\t(xg_init_global_config): Initialize microarch_earliest.\n+\n 2020-04-29  Nick Clifton  <nickc@redhat.com>\n \n \tPR 22699"
    },
    {
      "sha": "14a5a2a9497e45abdf2035b77f95e59970a327c5",
      "filename": "gas/config/tc-xtensa.c",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b/gas/config/tc-xtensa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/935f1f4ba35dc018ec6adbc1ba5f0787c84f273b/gas/config/tc-xtensa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-xtensa.c?ref=935f1f4ba35dc018ec6adbc1ba5f0787c84f273b",
      "patch": "@@ -35,6 +35,10 @@\n #define XSHAL_ABI 0\n #endif\n \n+#ifndef XTENSA_MARCH_EARLIEST\n+#define XTENSA_MARCH_EARLIEST 0\n+#endif\n+\n #ifndef uint32\n #define uint32 unsigned int\n #endif\n@@ -74,6 +78,8 @@ const char FLT_CHARS[] = \"rRsSfFdDxXpP\";\n bfd_boolean density_supported;\n bfd_boolean absolute_literals_supported;\n \n+static unsigned microarch_earliest;\n+\n static vliw_insn cur_vinsn;\n \n unsigned xtensa_num_pipe_stages;\n@@ -2502,6 +2508,18 @@ xg_translate_idioms (char **popname, int *pnum_args, char **arg_strings)\n       return 0;\n     }\n \n+  /* Without an operand, this is given a default immediate operand of 0.  */\n+  if ((strcmp (opname, \"simcall\") == 0 && microarch_earliest >= 280000))\n+    {\n+      if (*pnum_args == 0)\n+\t{\n+\t  arg_strings[0] = (char *) xmalloc (2);\n+\t  strcpy (arg_strings[0], \"0\");\n+\t  *pnum_args = 1;\n+\t}\n+      return 0;\n+    }\n+\n   if (strcmp (opname, \"bbsi.l\") == 0)\n     {\n       if (xg_check_num_args (pnum_args, 3, opname, arg_strings))\n@@ -5236,6 +5254,8 @@ xg_init_global_config (void)\n \n   directive_state[directive_density] = XCHAL_HAVE_DENSITY;\n   directive_state[directive_absolute_literals] = XSHAL_USE_ABSOLUTE_LITERALS;\n+\n+  microarch_earliest = XTENSA_MARCH_EARLIEST;\n }\n \n void"
    }
  ]
}