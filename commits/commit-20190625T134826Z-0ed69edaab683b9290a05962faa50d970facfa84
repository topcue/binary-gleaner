{
  "sha": "0ed69edaab683b9290a05962faa50d970facfa84",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGVkNjllZGFhYjY4M2I5MjkwYTA1OTYyZmFhNTBkOTcwZmFjZmE4NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T16:37:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:26Z"
    },
    "message": "Simplify source and disassembly window creation\n\nSimilar to the previous patch, neither make_source_window nor\nmake_disasm_window could be called when *win_info_ptr was non-NULL.\nThis patch simplifies the functions by removing the parameter and\nhaving them return their results directly.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.c (make_source_window, make_disasm_window)\n\t(make_source_or_disasm_window): Remove win_info_ptr parameter.\n\tReturn the new window.\n\t(show_source_disasm_command, show_data)\n\t(show_source_or_disasm_and_command): Update.",
    "tree": {
      "sha": "71cf4c2c1a9aa4430a3105d0023c36e7912795f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/71cf4c2c1a9aa4430a3105d0023c36e7912795f5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0ed69edaab683b9290a05962faa50d970facfa84",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ed69edaab683b9290a05962faa50d970facfa84",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0ed69edaab683b9290a05962faa50d970facfa84",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ed69edaab683b9290a05962faa50d970facfa84/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "82432e10143669d4936848d77e2a7b78c62c26e0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82432e10143669d4936848d77e2a7b78c62c26e0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82432e10143669d4936848d77e2a7b78c62c26e0"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 32,
    "deletions": 30
  },
  "files": [
    {
      "sha": "a9f70895154d9513bd0c4aab1ebf413f03a04793",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ed69edaab683b9290a05962faa50d970facfa84/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ed69edaab683b9290a05962faa50d970facfa84/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0ed69edaab683b9290a05962faa50d970facfa84",
      "patch": "@@ -1,3 +1,11 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.c (make_source_window, make_disasm_window)\n+\t(make_source_or_disasm_window): Remove win_info_ptr parameter.\n+\tReturn the new window.\n+\t(show_source_disasm_command, show_data)\n+\t(show_source_or_disasm_and_command): Update.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (make_command_window): Remove win_info_ptr"
    },
    {
      "sha": "8c3ece0eef84d440a776a828499b4490748a4d51",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 24,
      "deletions": 30,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ed69edaab683b9290a05962faa50d970facfa84/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ed69edaab683b9290a05962faa50d970facfa84/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=0ed69edaab683b9290a05962faa50d970facfa84",
      "patch": "@@ -49,12 +49,11 @@ static void init_gen_win_info (struct tui_gen_win_info *,\n static void *init_and_make_win (void *, enum tui_win_type, \n \t\t\t\tint, int, int, int, int);\n static void show_source_or_disasm_and_command (enum tui_layout_type);\n-static void make_source_or_disasm_window (struct tui_win_info **, \n-\t\t\t\t\t  enum tui_win_type, \n-\t\t\t\t\t  int, int);\n+static struct tui_win_info *make_source_or_disasm_window (enum tui_win_type, \n+\t\t\t\t\t\t\t  int, int);\n static struct tui_win_info *make_command_window (int, int);\n-static void make_source_window (struct tui_win_info **, int, int);\n-static void make_disasm_window (struct tui_win_info **, int, int);\n+static struct tui_win_info *make_source_window (int, int);\n+static struct tui_win_info *make_disasm_window (int, int);\n static void make_data_window (struct tui_win_info **, int, int);\n static void show_source_command (void);\n static void show_disasm_command (void);\n@@ -558,25 +557,19 @@ make_command_window (int height, int origin_y)\n \n /* make_source_window().\n  */\n-static void\n-make_source_window (struct tui_win_info **win_info_ptr, \n-\t\t    int height, int origin_y)\n+static struct tui_win_info *\n+make_source_window (int height, int origin_y)\n {\n-  make_source_or_disasm_window (win_info_ptr, SRC_WIN, height, origin_y);\n-\n-  return;\n+  return make_source_or_disasm_window (SRC_WIN, height, origin_y);\n }\t\t\t\t/* make_source_window */\n \n \n /* make_disasm_window().\n  */\n-static void\n-make_disasm_window (struct tui_win_info **win_info_ptr, \n-\t\t    int height, int origin_y)\n+static struct tui_win_info *\n+make_disasm_window (int height, int origin_y)\n {\n-  make_source_or_disasm_window (win_info_ptr, DISASSEM_WIN, height, origin_y);\n-\n-  return;\n+  return make_source_or_disasm_window (DISASSEM_WIN, height, origin_y);\n }\t\t\t\t/* make_disasm_window */\n \n \n@@ -629,7 +622,7 @@ show_source_disasm_command (void)\n       asm_height = tui_term_height () - (src_height + cmd_height);\n \n       if (TUI_SRC_WIN == NULL)\n-\tmake_source_window (&TUI_SRC_WIN, src_height, 0);\n+\tTUI_SRC_WIN = make_source_window (src_height, 0);\n       else\n \t{\n \t  init_gen_win_info (&TUI_SRC_WIN->generic,\n@@ -655,7 +648,7 @@ show_source_disasm_command (void)\n       tui_show_source_content (TUI_SRC_WIN);\n       if (TUI_DISASM_WIN == NULL)\n \t{\n-\t  make_disasm_window (&TUI_DISASM_WIN, asm_height, src_height - 1);\n+\t  TUI_DISASM_WIN = make_disasm_window (asm_height, src_height - 1);\n \t  locator\n \t    = ((struct tui_gen_win_info *)\n \t       init_and_make_win (locator,\n@@ -741,9 +734,11 @@ show_data (enum tui_layout_type new_layout)\n   if (tui_win_list[win_type] == NULL)\n     {\n       if (win_type == SRC_WIN)\n-\tmake_source_window (&tui_win_list[win_type], src_height, data_height - 1);\n+\ttui_win_list[win_type]\n+\t  = make_source_window (src_height, data_height - 1);\n       else\n-\tmake_disasm_window (&tui_win_list[win_type], src_height, data_height - 1);\n+\ttui_win_list[win_type]\n+\t  = make_disasm_window (src_height, data_height - 1);\n       locator\n \t= ((struct tui_gen_win_info *)\n \t   init_and_make_win (locator,\n@@ -848,9 +843,8 @@ init_and_make_win (void *opaque_win_info,\n }\n \n \n-static void\n-make_source_or_disasm_window (struct tui_win_info **win_info_ptr, \n-\t\t\t      enum tui_win_type type,\n+static struct tui_win_info *\n+make_source_or_disasm_window (enum tui_win_type type,\n \t\t\t      int height, int origin_y)\n {\n   struct tui_gen_win_info *execution_info = NULL;\n@@ -871,17 +865,17 @@ make_source_or_disasm_window (struct tui_win_info **win_info_ptr,\n \t\t\t  DONT_BOX_WINDOW));\n \n   /* Now create the source window.  */\n-  *win_info_ptr\n+  struct tui_win_info *result\n     = ((struct tui_win_info *)\n-       init_and_make_win (*win_info_ptr,\n+       init_and_make_win (NULL,\n \t\t\t  type,\n \t\t\t  height,\n \t\t\t  tui_term_width () - execution_info->width,\n \t\t\t  execution_info->width,\n \t\t\t  origin_y,\n \t\t\t  BOX_WINDOW));\n-\n-  (*win_info_ptr)->detail.source_info.execution_info = execution_info;\n+  result->detail.source_info.execution_info = execution_info;\n+  return result;\n }\n \n \n@@ -909,9 +903,9 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n       if ((*win_info_ptr) == NULL)\n \t{\n \t  if (layout_type == SRC_COMMAND)\n-\t    make_source_window (win_info_ptr, src_height - 1, 0);\n+\t    *win_info_ptr = make_source_window (src_height - 1, 0);\n \t  else\n-\t    make_disasm_window (win_info_ptr, src_height - 1, 0);\n+\t    *win_info_ptr = make_disasm_window (src_height - 1, 0);\n \t  locator\n \t    = ((struct tui_gen_win_info *)\n \t       init_and_make_win (locator,"
    }
  ]
}