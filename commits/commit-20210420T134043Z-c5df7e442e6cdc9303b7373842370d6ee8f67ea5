{
  "sha": "c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzVkZjdlNDQyZTZjZGM5MzAzYjczNzM4NDIzNzBkNmVlOGY2N2VhNQ==",
  "commit": {
    "author": {
      "name": "Cl?ment Chigot",
      "email": "clement.chigot@atos.net",
      "date": "2021-04-20T13:40:43Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-04-20T13:40:43Z"
    },
    "message": "Rework the R_NEG support on both gas and ld for the PowerPC AIX targets, in order to manage C++ exceptions built with GCC.\n\nbfd\tPR binutils/21700\n\t* reloc.c (BFD_RELOC_PPC_NEG): New relocation.\n\t* bfd-in2.h: Regenerate.\n\t* libbfd.h: Regenerate.\n\t* coff-rs6000.c (_bfd_xcoff_reloc_type_lookup): Add\n\tBFD_RELOC_PPC_NEG handler.\n\t(xcoff_reloc_type_neg): Correctly substract addend.\n\t* coff64-rs6000.c (xcoff64_howto_table): Add R_NEG_32\n\thowto.\n\t(xcoff64_rtype2howto): Add handler for R_NEG_32.\n\t(xcoff64_reloc_type_lookup): Add BFD_RELOC_PPC_NEG handler.\n\t* xcofflink.c (xcoff_need_ldrel_p): Check output section\n\tfor R_POS-like relocations. New argument added.\n\t(xcoff_mark): Adapt to new xcoff_need_ldrel_p argument.\n\t(xcoff_link_input_bfd): Likewise.\n\ngas\t* config/tc-ppc.c (ppc_get_csect_to_adjust): New function.\n\t(ppc_fix_adjustable): Manage fx_subsy part.\n\t(tc_gen_reloc): Create second relocation when both\n\tfx_addsy and fx_subsy are provided.\n\t* config/tc-ppc.h (RELOC_EXPANSION_POSSIBLE): New define.\n\t(MAX_RELOC_EXPANSION): Likewise.\n\t(TC_FORCE_RELOCATION_SUB_SAME): Likewise\n\t(UNDEFINED_DIFFERENCE_OK): Likewise\n\t* testsuite/gas/all/gas.exp: Skip difference between two\n\tundefined symbols test.\n\nld\t* testsuite/ld-powerpc/aix52.exp: Add new test.\n\t* testsuite/ld-powerpc/aix-neg-reloc-32.d: New test.\n\t* testsuite/ld-powerpc/aix-neg-reloc-64.d: New test.\n\t* testsuite/ld-powerpc/aix-neg-reloc.ex: New test.\n\t* testsuite/ld-powerpc/aix-neg-reloc.s: New test.",
    "tree": {
      "sha": "28e1442062fdbb13b5c46d98ceeba9c556e6f3b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/28e1442062fdbb13b5c46d98ceeba9c556e6f3b0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/comments",
  "author": {
    "login": "Helflym",
    "id": 23002587,
    "node_id": "MDQ6VXNlcjIzMDAyNTg3",
    "avatar_url": "https://avatars.githubusercontent.com/u/23002587?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Helflym",
    "html_url": "https://github.com/Helflym",
    "followers_url": "https://api.github.com/users/Helflym/followers",
    "following_url": "https://api.github.com/users/Helflym/following{/other_user}",
    "gists_url": "https://api.github.com/users/Helflym/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Helflym/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Helflym/subscriptions",
    "organizations_url": "https://api.github.com/users/Helflym/orgs",
    "repos_url": "https://api.github.com/users/Helflym/repos",
    "events_url": "https://api.github.com/users/Helflym/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Helflym/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d549b029d6d622af531211ef4c7bc48cb5011d93",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d549b029d6d622af531211ef4c7bc48cb5011d93",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d549b029d6d622af531211ef4c7bc48cb5011d93"
    }
  ],
  "stats": {
    "total": 288,
    "additions": 255,
    "deletions": 33
  },
  "files": [
    {
      "sha": "972311bce482da3a013044e848b1e4a6df2408cd",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -1,3 +1,21 @@\n+2021-04-20  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\tPR binutils/21700\n+\t* reloc.c (BFD_RELOC_PPC_NEG): New relocation.\n+\t* bfd-in2.h: Regenerate.\n+\t* libbfd.h: Regenerate.\n+\t* coff-rs6000.c (_bfd_xcoff_reloc_type_lookup): Add\n+\tBFD_RELOC_PPC_NEG handler.\n+\t(xcoff_reloc_type_neg): Correctly substract addend.\n+\t* coff64-rs6000.c (xcoff64_howto_table): Add R_NEG_32\n+\thowto.\n+\t(xcoff64_rtype2howto): Add handler for R_NEG_32.\n+\t(xcoff64_reloc_type_lookup): Add BFD_RELOC_PPC_NEG handler.\n+\t* xcofflink.c (xcoff_need_ldrel_p): Check output section\n+\tfor R_POS-like relocations. New argument added.\n+\t(xcoff_mark): Adapt to new xcoff_need_ldrel_p argument.\n+\t(xcoff_link_input_bfd): Likewise.\n+\n 2021-04-16  Alan Modra  <amodra@gmail.com>\n \n \tPR 27567"
    },
    {
      "sha": "d5780e46873c39979ccf229cb2897e0abf0459fa",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -2921,6 +2921,7 @@ instruction.  */\n   BFD_RELOC_PPC_VLE_SDAREL_HA16D,\n   BFD_RELOC_PPC_16DX_HA,\n   BFD_RELOC_PPC_REL16DX_HA,\n+  BFD_RELOC_PPC_NEG,\n   BFD_RELOC_PPC64_HIGHER,\n   BFD_RELOC_PPC64_HIGHER_S,\n   BFD_RELOC_PPC64_HIGHEST,"
    },
    {
      "sha": "7cfe4040fb790d0cea9928958c68b8b12968220b",
      "filename": "bfd/coff-rs6000.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/coff-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/coff-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-rs6000.c?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -1253,6 +1253,8 @@ _bfd_xcoff_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n       return &xcoff_howto_table[0];\n     case BFD_RELOC_NONE:\n       return &xcoff_howto_table[0xf];\n+    case BFD_RELOC_PPC_NEG:\n+      return &xcoff_howto_table[0x1];\n     case BFD_RELOC_PPC_TLSGD:\n       return &xcoff_howto_table[0x20];\n     case BFD_RELOC_PPC_TLSIE:\n@@ -2985,7 +2987,7 @@ xcoff_reloc_type_neg (bfd *input_bfd ATTRIBUTE_UNUSED,\n \t\t      bfd_vma *relocation,\n \t\t      bfd_byte *contents ATTRIBUTE_UNUSED)\n {\n-  *relocation = addend - val;\n+  *relocation = - val - addend;\n   return true;\n }\n "
    },
    {
      "sha": "889534088f0d21d33b41087cfb2c005f7942394e",
      "filename": "bfd/coff64-rs6000.c",
      "status": "modified",
      "additions": 20,
      "deletions": 1,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/coff64-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/coff64-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff64-rs6000.c?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -1320,7 +1320,21 @@ reloc_howto_type xcoff64_howto_table[] =\n \t MINUS_ONE,\t\t/* dst_mask */\n \t false),\t\t/* pcrel_offset */\n \n-  EMPTY_HOWTO(0x26),\n+  /* 0x26: 32 bit relocation, but store negative value.  */\n+  HOWTO (R_NEG,\t\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t -2,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t false,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_bitfield, /* complain_on_overflow */\n+\t 0,\t\t\t/* special_function */\n+\t \"R_NEG_32\",\t\t/* name */\n+\t true,\t\t\t/* partial_inplace */\n+\t MINUS_ONE,\t\t/* src_mask */\n+\t MINUS_ONE,\t\t/* dst_mask */\n+\t false),\t\t/* pcrel_offset */\n+\n   EMPTY_HOWTO(0x27),\n   EMPTY_HOWTO(0x28),\n   EMPTY_HOWTO(0x29),\n@@ -1386,6 +1400,9 @@ xcoff64_rtype2howto (arelent *relent, struct internal_reloc *internal)\n     {\n       if (R_POS == internal->r_type)\n \trelent->howto = &xcoff64_howto_table[0x1c];\n+\n+      if (R_NEG == internal->r_type)\n+\trelent->howto = &xcoff64_howto_table[0x26];\n     }\n \n   /* The r_size field of an XCOFF reloc encodes the bitsize of the\n@@ -1426,6 +1443,8 @@ xcoff64_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n       return &xcoff64_howto_table[0];\n     case BFD_RELOC_NONE:\n       return &xcoff64_howto_table[0xf];\n+    case BFD_RELOC_PPC_NEG:\n+      return &xcoff64_howto_table[0x1];\n     case BFD_RELOC_PPC64_TLSGD:\n       return &xcoff64_howto_table[0x20];\n     case BFD_RELOC_PPC64_TLSIE:"
    },
    {
      "sha": "bee1a1f8e592e2b3d3f6fb410b3337bcc30aaa08",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -1510,6 +1510,7 @@ static const char *const bfd_reloc_code_real_names[] = { \"@@uninitialized@@\",\n   \"BFD_RELOC_PPC_VLE_SDAREL_HA16D\",\n   \"BFD_RELOC_PPC_16DX_HA\",\n   \"BFD_RELOC_PPC_REL16DX_HA\",\n+  \"BFD_RELOC_PPC_NEG\",\n   \"BFD_RELOC_PPC64_HIGHER\",\n   \"BFD_RELOC_PPC64_HIGHER_S\",\n   \"BFD_RELOC_PPC64_HIGHEST\","
    },
    {
      "sha": "674b075a6b860f050b57036e9961dcc00543c8db",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -2832,6 +2832,8 @@ ENUMX\n   BFD_RELOC_PPC_16DX_HA\n ENUMX\n   BFD_RELOC_PPC_REL16DX_HA\n+ENUMX\n+  BFD_RELOC_PPC_NEG\n ENUMX\n   BFD_RELOC_PPC64_HIGHER\n ENUMX"
    },
    {
      "sha": "1607cd57d448b9b20fe7ee5db7c177e3bfc731d7",
      "filename": "bfd/xcofflink.c",
      "status": "modified",
      "additions": 11,
      "deletions": 3,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/xcofflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/bfd/xcofflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/xcofflink.c?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -2653,7 +2653,7 @@ xcoff_auto_export_p (struct bfd_link_info *info,\n \n static bool\n xcoff_need_ldrel_p (struct bfd_link_info *info, struct internal_reloc *rel,\n-\t\t    struct xcoff_link_hash_entry *h)\n+\t\t    struct xcoff_link_hash_entry *h, asection *ssec)\n {\n   if (!xcoff_hash_table (info)->loader_section)\n     return false;\n@@ -2701,6 +2701,14 @@ xcoff_need_ldrel_p (struct bfd_link_info *info, struct internal_reloc *rel,\n \t\t  && bfd_is_abs_section (sec->output_section)))\n \t    return false;\n \t}\n+\n+      /* Absolute relocations from read-only sections are forbidden\n+\t by AIX loader. However, they can appear in their section's\n+         relocations.  */\n+      if (ssec != NULL\n+\t  && (ssec->output_section->flags & SEC_READONLY) != 0)\n+\treturn false;\n+\n       return true;\n \n     case R_TLS:\n@@ -2989,7 +2997,7 @@ xcoff_mark (struct bfd_link_info *info, asection *sec)\n \n \t      /* See if this reloc needs to be copied into the .loader\n \t\t section.  */\n-\t      if (xcoff_need_ldrel_p (info, rel, h))\n+\t      if (xcoff_need_ldrel_p (info, rel, h, sec))\n \t\t{\n \t\t  ++xcoff_hash_table (info)->ldrel_count;\n \t\t  if (h != NULL)\n@@ -4982,7 +4990,7 @@ xcoff_link_input_bfd (struct xcoff_final_link_info *flinfo,\n \t\t}\n \n \t      if ((o->flags & SEC_DEBUGGING) == 0\n-\t\t  && xcoff_need_ldrel_p (flinfo->info, irel, h))\n+\t\t  && xcoff_need_ldrel_p (flinfo->info, irel, h, o))\n \t\t{\n \t\t  asection *sec;\n "
    },
    {
      "sha": "c8ef5f3b54c1cebcb3246ae9309e9ad078c709c9",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -1,3 +1,17 @@\n+2021-04-20  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\tPR binutils/21700\n+\t* config/tc-ppc.c (ppc_get_csect_to_adjust): New function.\n+\t(ppc_fix_adjustable): Manage fx_subsy part.\n+\t(tc_gen_reloc): Create second relocation when both\n+\tfx_addsy and fx_subsy are provided.\n+\t* config/tc-ppc.h (RELOC_EXPANSION_POSSIBLE): New define.\n+\t(MAX_RELOC_EXPANSION): Likewise.\n+\t(TC_FORCE_RELOCATION_SUB_SAME): Likewise\n+\t(UNDEFINED_DIFFERENCE_OK): Likewise\n+\t* testsuite/gas/all/gas.exp: Skip difference between two\n+\tundefined symbols test.\n+\n 2021-04-19  Nick Clifton  <nickc@redhat.com>\n \n \t* testsuite/gas/all/gas.exp: Add rs6000*-*-aix* to the list of"
    },
    {
      "sha": "7715fc53d0706f7312469805e82bf30ca022e63d",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 75,
      "deletions": 27,
      "changes": 102,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -6264,6 +6264,45 @@ md_pcrel_from_section (fixS *fixp, segT sec ATTRIBUTE_UNUSED)\n \n #ifdef OBJ_XCOFF\n \n+/* Return the surrending csect for sym when possible.  */\n+\n+static symbolS*\n+ppc_get_csect_to_adjust (symbolS *sym)\n+{\n+  if (sym == NULL)\n+    return NULL;\n+\n+  valueT val = resolve_symbol_value (sym);\n+  TC_SYMFIELD_TYPE *tc = symbol_get_tc (sym);\n+  segT symseg = S_GET_SEGMENT (sym);\n+\n+  if (tc->subseg == 0\n+      && tc->symbol_class != XMC_TC0\n+      && tc->symbol_class != XMC_TC\n+      && tc->symbol_class != XMC_TE\n+      && symseg != bss_section\n+      && symseg != ppc_xcoff_tbss_section.segment\n+      /* Don't adjust if this is a reloc in the toc section.  */\n+      && (symseg != data_section\n+\t  || ppc_toc_csect == NULL\n+\t  || val < ppc_toc_frag->fr_address\n+\t  || (ppc_after_toc_frag != NULL\n+\t      && val >= ppc_after_toc_frag->fr_address)))\n+    {\n+      symbolS* csect = tc->within;\n+\n+      /* If the symbol was not declared by a label (eg: a section symbol),\n+         use the section instead of the csect.  This doesn't happen in\n+         normal AIX assembly code.  */\n+      if (csect == NULL)\n+        csect = seg_info (symseg)->sym;\n+\n+      return csect;\n+    }\n+\n+  return NULL;\n+}\n+\n /* This is called to see whether a fixup should be adjusted to use a\n    section symbol.  We take the opportunity to change a fixup against\n    a symbol in the TOC subsegment into a reloc against the\n@@ -6274,7 +6313,7 @@ ppc_fix_adjustable (fixS *fix)\n {\n   valueT val = resolve_symbol_value (fix->fx_addsy);\n   segT symseg = S_GET_SEGMENT (fix->fx_addsy);\n-  TC_SYMFIELD_TYPE *tc;\n+  symbolS* csect;\n \n   if (symseg == absolute_section)\n     return 0;\n@@ -6316,32 +6355,17 @@ ppc_fix_adjustable (fixS *fix)\n     }\n \n   /* Possibly adjust the reloc to be against the csect.  */\n-  tc = symbol_get_tc (fix->fx_addsy);\n-  if (tc->subseg == 0\n-      && tc->symbol_class != XMC_TC0\n-      && tc->symbol_class != XMC_TC\n-      && tc->symbol_class != XMC_TE\n-      && symseg != bss_section\n-      && symseg != ppc_xcoff_tbss_section.segment\n-      /* Don't adjust if this is a reloc in the toc section.  */\n-      && (symseg != data_section\n-\t  || ppc_toc_csect == NULL\n-\t  || val < ppc_toc_frag->fr_address\n-\t  || (ppc_after_toc_frag != NULL\n-\t      && val >= ppc_after_toc_frag->fr_address)))\n+  if ((csect = ppc_get_csect_to_adjust (fix->fx_addsy)) != NULL)\n     {\n-      symbolS *csect = tc->within;\n-\n-      /* If the symbol was not declared by a label (eg: a section symbol),\n-         use the section instead of the csect.  This doesn't happen in\n-         normal AIX assembly code.  */\n-      if (csect == NULL)\n-        csect = seg_info (symseg)->sym;\n-\n       fix->fx_offset += val - symbol_get_frag (csect)->fr_address;\n       fix->fx_addsy = csect;\n+    }\n \n-      return 0;\n+  if ((csect = ppc_get_csect_to_adjust (fix->fx_subsy)) != NULL)\n+    {\n+      fix->fx_offset -= resolve_symbol_value (fix->fx_subsy)\n+\t- symbol_get_frag (csect)->fr_address;\n+      fix->fx_subsy = csect;\n     }\n \n   /* Adjust a reloc against a .lcomm symbol to be against the base\n@@ -7367,12 +7391,14 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg)\n \n /* Generate a reloc for a fixup.  */\n \n-arelent *\n+arelent **\n tc_gen_reloc (asection *seg ATTRIBUTE_UNUSED, fixS *fixp)\n {\n+  static arelent *relocs[3];\n   arelent *reloc;\n \n-  reloc = XNEW (arelent);\n+  relocs[0] = reloc = XNEW (arelent);\n+  relocs[1] = NULL;\n \n   reloc->sym_ptr_ptr = XNEW (asymbol *);\n   *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_addsy);\n@@ -7386,11 +7412,33 @@ tc_gen_reloc (asection *seg ATTRIBUTE_UNUSED, fixS *fixp)\n       as_bad_where (fixp->fx_file, fixp->fx_line,\n \t\t    _(\"reloc %d not supported by object file format\"),\n \t\t    (int) fixp->fx_r_type);\n-      return NULL;\n+      relocs[0] = NULL;\n     }\n   reloc->addend = fixp->fx_addnumber;\n \n-  return reloc;\n+  if (fixp->fx_subsy && fixp->fx_addsy)\n+    {\n+      relocs[1] = reloc = XNEW (arelent);\n+      relocs[2] = NULL;\n+\n+      reloc->sym_ptr_ptr = XNEW (asymbol *);\n+      *reloc->sym_ptr_ptr = symbol_get_bfdsym (fixp->fx_subsy);\n+      reloc->address = fixp->fx_frag->fr_address + fixp->fx_where;\n+\n+      reloc->howto = bfd_reloc_type_lookup (stdoutput, BFD_RELOC_PPC_NEG);\n+      reloc->addend = fixp->fx_addnumber;\n+\n+      if (reloc->howto == (reloc_howto_type *) NULL)\n+        {\n+          as_bad_where (fixp->fx_file, fixp->fx_line,\n+            _(\"reloc %d not supported by object file format\"),\n+            BFD_RELOC_PPC_NEG);\n+\t  relocs[0] = NULL;\n+        }\n+    }\n+\n+\n+  return relocs;\n }\n \n void"
    },
    {
      "sha": "790994e1314c83f8789d63ec9bdddaedfe37d8bf",
      "filename": "gas/config/tc-ppc.h",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/gas/config/tc-ppc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/gas/config/tc-ppc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.h?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -284,10 +284,27 @@ extern int ppc_force_relocation (struct fix *);\n      || (FIX)->fx_r_type == BFD_RELOC_PPC_16DX_HA\t\t\\\n      || (FIX)->fx_r_type == BFD_RELOC_PPC64_D34\t\t\t\\\n      || (FIX)->fx_r_type == BFD_RELOC_PPC64_D28))\n-#endif\n \n #define TC_VALIDATE_FIX_SUB(FIX, SEG) 0\n \n+#endif /* OBJ_ELF */\n+\n+#define RELOC_EXPANSION_POSSIBLE\n+#define MAX_RELOC_EXPANSION 2\n+\n+#if defined (OBJ_XCOFF)\n+/* Force a relocation when the fix is negative. */\n+#define TC_FORCE_RELOCATION_SUB_SAME(FIX, SEG)\t\t\t\t\\\n+  (GENERIC_FORCE_RELOCATION_SUB_SAME(FIX, SEG)\t\t\t\t\\\n+   || (((SEG)->flags & SEC_DEBUGGING) == 0\t\t\t\t\\\n+\t&& (FIX)->fx_addsy && (FIX)->fx_subsy\t\t\t\t\\\n+\t&& (S_GET_VALUE (fixP->fx_addsy) < S_GET_VALUE (fixP->fx_subsy))))\n+\n+/* XCOFF allows undefined differences which will be encoded with\n+   R_NEG relocations.  */\n+#define UNDEFINED_DIFFERENCE_OK\n+#endif /* OBJ_XCOFF */\n+\n /* Various frobbings of labels and their addresses.  */\n #define md_start_line_hook() ppc_start_line_hook ()\n extern void ppc_start_line_hook (void);"
    },
    {
      "sha": "a6be046bee4c14f9fb69c5675dc53f2f496149de",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -1,3 +1,12 @@\n+2021-04-20  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\tPR binutils/21700\n+\t* testsuite/ld-powerpc/aix52.exp: Add new test.\n+\t* testsuite/ld-powerpc/aix-neg-reloc-32.d: New test.\n+\t* testsuite/ld-powerpc/aix-neg-reloc-64.d: New test.\n+\t* testsuite/ld-powerpc/aix-neg-reloc.ex: New test.\n+\t* testsuite/ld-powerpc/aix-neg-reloc.s: New test.\n+\n 2021-04-13  Nick Clifton  <nickc@redhat.com>\n \n \t* ld.texi (Options): Add note about the effect of --as-needed on"
    },
    {
      "sha": "4e980f0cd354c320dafd7424bc27bc5f917e955d",
      "filename": "ld/testsuite/ld-powerpc/aix-neg-reloc-32.d",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-neg-reloc-32.d?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -0,0 +1,23 @@\n+#source: aix-tls-reloc.s\n+#as: -a32\n+#ld: -b32 -shared -bE:aix-tls-reloc.ex\n+#objdump: -dr\n+#target: [is_xcoff_format]\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.foo>:\n+.*:\t4e 80 00 20 \tbr\n+.*: R_REF\t_foo.ro_-.*\n+.*:\t60 00 00 00 \toril    r0,r0,0\n+.*:\t60 00 00 00 \toril    r0,r0,0\n+.*:\t60 00 00 00 \toril    r0,r0,0\n+.* <_GLOBAL__F_foo>:\n+.*:\tff ff ff f0 \t.long 0xfffffff0\n+.*: R_POS\t.text-.*\n+.*: R_NEG\t_foo.ro_-.*\n+.*:\t60 00 00 00 \toril    r0,r0,0\n+.*:\t60 00 00 00 \toril    r0,r0,0\n+.*:\t60 00 00 00 \toril    r0,r0,0"
    },
    {
      "sha": "9cf16d0c4b1d33160a0ef14fec84ba16c6718cec",
      "filename": "ld/testsuite/ld-powerpc/aix-neg-reloc-64.d",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-neg-reloc-64.d?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -0,0 +1,23 @@\n+#source: aix-tls-reloc.s\n+#as: -a32\n+#ld: -b32 -shared -bE:aix-tls-reloc.ex\n+#objdump: -dr\n+#target: [is_xcoff_format]\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.foo>:\n+.*:\t4e 80 00 20 \tblr\n+.*: R_REF\t_foo.ro_-.*\n+.*:\t60 00 00 00 \tnop\n+.*:\t60 00 00 00 \tnop\n+.*:\t60 00 00 00 \tnop\n+.* <_GLOBAL__F_foo>:\n+.*:\tff ff ff ff \tfnmadd. f31,f31,f31,f31\n+.*: R_POS_64\t.text-.*\n+.*: R_NEG\t_foo.ro_-.*\n+.*:\tff ff ff f0 \t.long 0xfffffff0\n+.*:\t60 00 00 00 \tnop\n+.*:\t60 00 00 00 \tnop"
    },
    {
      "sha": "257cc5642cb1a054f08cc83f2d943e56fd3ebe99",
      "filename": "ld/testsuite/ld-powerpc/aix-neg-reloc.ex",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc.ex",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc.ex",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-neg-reloc.ex?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -0,0 +1 @@\n+foo"
    },
    {
      "sha": "20b48bd224c1f237e71af0bc9b43899be15f1d9b",
      "filename": "ld/testsuite/ld-powerpc/aix-neg-reloc.s",
      "status": "added",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix-neg-reloc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix-neg-reloc.s?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -0,0 +1,30 @@\n+  .toc\n+  .csect .text[PR]\n+  .globl foo\n+  .globl .foo\n+  .csect foo[DS],3\n+foo:\n+  .if size == 32\n+  .long\t.foo, TOC[tc0], 0\n+  .else\n+  .llong .foo, TOC[tc0], 0\n+  .endif\n+\n+  .csect .text[PR]\n+.foo:\n+LFB..0:\n+  blr\n+\n+  .csect _foo.ro_[RO],4\n+  .globl _GLOBAL__F_foo\n+_GLOBAL__F_foo:\n+  .if size == 32\n+  .vbyte 4,LFB..0-$\n+  .else\n+  .vbyte 8,LFB..0-$\n+  .endif\n+\n+# Make sure that .ref is also enough to keep _GLOBAL__F_foo\n+# when exporting foo.\n+  .csect .text[PR]\n+  .ref _GLOBAL__F_foo"
    },
    {
      "sha": "51d31325f7fcd7a1ba4669774489e1b7eee0051c",
      "filename": "ld/testsuite/ld-powerpc/aix52.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix52.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5df7e442e6cdc9303b7373842370d6ee8f67ea5/ld/testsuite/ld-powerpc/aix52.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/aix52.exp?ref=c5df7e442e6cdc9303b7373842370d6ee8f67ea5",
      "patch": "@@ -251,6 +251,12 @@ set aix52tests {\n      \"\" {aix-toc-1a.s aix-toc-1b.s}\n      {{objdump -dr aix-toc-1-SIZE.dd}}\n      \"aix-toc-1.so\"}\n+\n+    {\"Negative relocation test 1\" \"-shared -bE:aix-neg-reloc.ex\"\n+\t\"\" {aix-neg-reloc.s}\n+\t{{objdump -dr aix-neg-reloc-SIZE.d}}\n+\t\"aix-neg-reloc.so\"}\n+\n }\n \n foreach test $aix52tests {"
    }
  ]
}